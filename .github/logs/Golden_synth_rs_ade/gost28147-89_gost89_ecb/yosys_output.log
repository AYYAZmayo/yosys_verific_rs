
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.20
 Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_ecb.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_ecb.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_ecb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_ecb -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.44

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_ecb

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_ecb.v:1: compiling module 'gost89_ecb'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_ecb.v:34: expression size 7 truncated to fit in target size 6
Importing module gost89_ecb.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_ecb
Used module:     \gost89_round
Used module:         \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_ecb
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_ecb.
<suppressed ~3 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_sbox.
Deleting now unused module gost89_round.
<suppressed ~9 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 1459 unused wires.
<suppressed ~21 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module gost89_ecb...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
    New ctrl vector for $pmux cell $verific$select_186$gost89_ecb.v:117$890: { $auto$opt_reduce.cc:134:opt_pmux$1530 $auto$opt_reduce.cc:134:opt_pmux$1528 $auto$opt_reduce.cc:134:opt_pmux$1526 $auto$opt_reduce.cc:134:opt_pmux$1524 $auto$opt_reduce.cc:134:opt_pmux$1522 $auto$opt_reduce.cc:134:opt_pmux$1520 $auto$opt_reduce.cc:134:opt_pmux$1518 $auto$opt_reduce.cc:134:opt_pmux$1516 $auto$opt_reduce.cc:134:opt_pmux$1514 $auto$opt_reduce.cc:134:opt_pmux$1512 $auto$opt_reduce.cc:134:opt_pmux$1510 $auto$opt_reduce.cc:134:opt_pmux$1508 $auto$opt_reduce.cc:134:opt_pmux$1506 $auto$opt_reduce.cc:134:opt_pmux$1504 $auto$opt_reduce.cc:134:opt_pmux$1502 $auto$opt_reduce.cc:134:opt_pmux$1500 $verific$n1897$50 }
  Optimizing cells in module \gost89_ecb.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_num_reg$gost89_ecb.v:45$853 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$round_key_reg$gost89_ecb.v:118$893 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$out_reg$gost89_ecb.v:45$854 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$n2_reg$gost89_ecb.v:45$851 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$n1_reg$gost89_ecb.v:45$850 ($aldff) from module gost89_ecb.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$round_key_reg$gost89_ecb.v:118$893 ($dff) from module gost89_ecb (D = $verific$n3053$139, Q = \round_key).
Adding EN signal on $verific$out_reg$gost89_ecb.v:45$854 ($dff) from module gost89_ecb (D = { \n1 \rnd.out1 }, Q = \out).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 bits (of 6) from port B of cell gost89_ecb.$verific$add_22$gost89_ecb.v:34$833 ($add).
Removed top 5 bits (of 6) from port A of cell gost89_ecb.$verific$LessThan_25$gost89_ecb.v:35$836 ($lt).
Removed top 5 bits (of 6) from port B of cell gost89_ecb.$verific$equal_82$gost89_ecb.v:51$856 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_ecb.$verific$equal_83$gost89_ecb.v:52$857 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_ecb.$verific$equal_84$gost89_ecb.v:53$858 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_85$gost89_ecb.v:54$859 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_86$gost89_ecb.v:55$860 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_87$gost89_ecb.v:56$861 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_88$gost89_ecb.v:57$862 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_89$gost89_ecb.v:58$863 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_90$gost89_ecb.v:59$864 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_91$gost89_ecb.v:60$865 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_92$gost89_ecb.v:61$866 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_93$gost89_ecb.v:62$867 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_94$gost89_ecb.v:63$868 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_95$gost89_ecb.v:64$869 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_96$gost89_ecb.v:65$870 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_97$gost89_ecb.v:66$871 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_98$gost89_ecb.v:67$872 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_99$gost89_ecb.v:68$873 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_100$gost89_ecb.v:69$874 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_101$gost89_ecb.v:70$875 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_102$gost89_ecb.v:71$876 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_103$gost89_ecb.v:72$877 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_104$gost89_ecb.v:73$878 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_105$gost89_ecb.v:74$879 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_106$gost89_ecb.v:75$880 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_107$gost89_ecb.v:76$881 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_108$gost89_ecb.v:77$882 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_109$gost89_ecb.v:78$883 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_110$gost89_ecb.v:79$884 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_111$gost89_ecb.v:80$885 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_112$gost89_ecb.v:81$886 ($eq).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 2 unused cells and 4 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_ecb:
  creating $macc model for $flatten\rnd.$verific$add_3$gost89_round.v:12$900 ($add).
  creating $macc model for $verific$add_22$gost89_ecb.v:34$833 ($add).
  creating $alu model for $macc $verific$add_22$gost89_ecb.v:34$833.
  creating $alu model for $macc $flatten\rnd.$verific$add_3$gost89_round.v:12$900.
  creating $alu model for $verific$LessThan_21$gost89_ecb.v:33$832 ($lt): new $alu
  creating $alu model for $verific$LessThan_25$gost89_ecb.v:35$836 ($lt): new $alu
  creating $alu model for $verific$equal_32$gost89_ecb.v:39$842 ($eq): merged with $verific$LessThan_21$gost89_ecb.v:33$832.
  creating $alu cell for $verific$LessThan_25$gost89_ecb.v:35$836: $auto$alumacc.cc:485:replace_alu$1595
  creating $alu cell for $verific$LessThan_21$gost89_ecb.v:33$832, $verific$equal_32$gost89_ecb.v:39$842: $auto$alumacc.cc:485:replace_alu$1600
  creating $alu cell for $flatten\rnd.$verific$add_3$gost89_round.v:12$900: $auto$alumacc.cc:485:replace_alu$1611
  creating $alu cell for $verific$add_22$gost89_ecb.v:34$833: $auto$alumacc.cc:485:replace_alu$1614
  created 4 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1563: { $auto$rtlil.cc:2398:Or$1550 $verific$n1895$48 $verific$n1894$47 $verific$n1867$20 $verific$n1866$19 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1589: { $auto$rtlil.cc:2398:Or$1550 $auto$rtlil.cc:2398:Or$1560 $verific$n1895$48 $verific$n1894$47 $verific$n1891$44 $verific$n1890$43 $verific$n1889$42 $verific$n1872$25 $verific$n1871$24 $verific$n1870$23 $verific$n1867$20 $verific$n1866$19 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1585: { $auto$rtlil.cc:2398:Or$1572 $verific$n1886$39 $verific$n1885$38 $verific$n1878$31 $verific$n1877$30 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$1540: { $auto$alumacc.cc:501:replace_alu$1601 $verific$n237$11 }
  Optimizing cells in module \gost89_ecb.
Performed a total of 4 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 3 unused cells and 6 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== gost89_ecb ===

   Number of wires:                159
   Number of wire bits:           3906
   Number of public wires:          48
   Number of public wire bits:    2380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $alu                            4
     $and                            3
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            31
     $logic_not                      1
     $mux                           32
     $ne                             2
     $not                            6
     $or                             5
     $reduce_and                     3
     $reduce_or                     17
     $xor                            1


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== gost89_ecb ===

   Number of wires:                159
   Number of wire bits:           3906
   Number of public wires:          48
   Number of public wire bits:    2380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $alu                            4
     $and                            3
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            31
     $logic_not                      1
     $mux                           32
     $ne                             2
     $not                            6
     $or                             5
     $reduce_and                     3
     $reduce_or                     17
     $xor                            1


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> stat

3.24. Printing statistics.

=== gost89_ecb ===

   Number of wires:                159
   Number of wire bits:           3906
   Number of public wires:          48
   Number of public wire bits:    2380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $alu                            4
     $and                            3
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            31
     $logic_not                      1
     $mux                           32
     $ne                             2
     $not                            6
     $or                             5
     $reduce_and                     3
     $reduce_or                     17
     $xor                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
No more expansions possible.
<suppressed ~602 debug messages>

yosys> stat

3.26. Printing statistics.

=== gost89_ecb ===

   Number of wires:                521
   Number of wire bits:           8945
   Number of public wires:          48
   Number of public wire bits:    2380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2771
     $_AND_                         63
     $_DFFE_PP_                     96
     $_DFF_P_                       71
     $_MUX_                       1872
     $_NOT_                         88
     $_OR_                         254
     $_XOR_                        295
     adder_carry                    32


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~319 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
<suppressed ~1407 debug messages>
Removed a total of 469 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 43 unused cells and 358 unused wires.
<suppressed ~44 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~98 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  1046 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1536, arst={ }, srst={ }
  582 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1539, arst={ }, srst={ }
  367 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.31.2. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1536
Extracted 1046 gates and 1347 wires to a netlist network with 301 inputs and 33 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               XOR cells:       32
ABC RESULTS:            ANDNOT cells:       23
ABC RESULTS:               NOR cells:       32
ABC RESULTS:                OR cells:      121
ABC RESULTS:             ORNOT cells:       72
ABC RESULTS:              NAND cells:      642
ABC RESULTS:               MUX cells:      361
ABC RESULTS:               AND cells:      274
ABC RESULTS:        internal signals:     1013
ABC RESULTS:           input signals:      301
ABC RESULTS:          output signals:       33
Removing temp directory.

3.31.3. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1539
Extracted 582 gates and 1197 wires to a netlist network with 615 inputs and 97 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOT cells:        2
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               NOR cells:       17
ABC RESULTS:                OR cells:       26
ABC RESULTS:             ORNOT cells:       52
ABC RESULTS:              NAND cells:      143
ABC RESULTS:               MUX cells:      377
ABC RESULTS:               AND cells:       67
ABC RESULTS:               XOR cells:       40
ABC RESULTS:              XNOR cells:       26
ABC RESULTS:               BUF cells:       96
ABC RESULTS:        internal signals:      485
ABC RESULTS:           input signals:      615
ABC RESULTS:          output signals:       97
Removing temp directory.

3.31.4. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 335 gates and 436 wires to a netlist network with 100 inputs and 80 outputs.

3.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 71 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       71
ABC RESULTS:               NOT cells:        5
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:               MUX cells:      129
ABC RESULTS:                OR cells:        6
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:              NAND cells:        2
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               AND cells:       10
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               BUF cells:       66
ABC RESULTS:        internal signals:      256
ABC RESULTS:           input signals:      100
ABC RESULTS:          output signals:       80
Removing temp directory.

yosys> abc -dff

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Summary of detected clock domains:
  1589 cells in clk=\clk, en=$abc$5002$auto$opt_dff.cc:219:make_patterns_logic$1536, arst={ }, srst={ }
  99 cells in clk=\clk, en=$abc$6592$auto$opt_dff.cc:219:make_patterns_logic$1539, arst={ }, srst={ }
  990 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.32.2. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5002$auto$opt_dff.cc:219:make_patterns_logic$1536
Extracted 1589 gates and 1890 wires to a netlist network with 301 inputs and 33 outputs.

3.32.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               XOR cells:       32
ABC RESULTS:            ANDNOT cells:       62
ABC RESULTS:               NOR cells:       36
ABC RESULTS:                OR cells:      173
ABC RESULTS:               MUX cells:      331
ABC RESULTS:             ORNOT cells:       77
ABC RESULTS:               AND cells:      320
ABC RESULTS:              NAND cells:      579
ABC RESULTS:        internal signals:     1556
ABC RESULTS:           input signals:      301
ABC RESULTS:          output signals:       33
Removing temp directory.

3.32.3. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6592$auto$opt_dff.cc:219:make_patterns_logic$1539
Extracted 99 gates and 199 wires to a netlist network with 100 inputs and 65 outputs.

3.32.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               AND cells:        3
ABC RESULTS:              XNOR cells:       13
ABC RESULTS:               XOR cells:       19
ABC RESULTS:               BUF cells:       96
ABC RESULTS:        internal signals:       34
ABC RESULTS:           input signals:      100
ABC RESULTS:          output signals:       65
Removing temp directory.

3.32.4. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 958 gates and 1569 wires to a netlist network with 611 inputs and 111 outputs.

3.32.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 71 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       71
ABC RESULTS:               NOT cells:       20
ABC RESULTS:             ORNOT cells:       60
ABC RESULTS:               XOR cells:       29
ABC RESULTS:               MUX cells:      493
ABC RESULTS:                OR cells:       60
ABC RESULTS:            ANDNOT cells:       13
ABC RESULTS:              NAND cells:      124
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               AND cells:      104
ABC RESULTS:               NOR cells:       15
ABC RESULTS:               BUF cells:       65
ABC RESULTS:        internal signals:      847
ABC RESULTS:           input signals:      611
ABC RESULTS:          output signals:      111
Removing temp directory.

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  1642 cells in clk=\clk, en=$abc$7813$abc$5002$auto$opt_dff.cc:219:make_patterns_logic$1536, arst={ }, srst={ }
  108 cells in clk=\clk, en=$abc$9456$abc$6592$auto$opt_dff.cc:219:make_patterns_logic$1539, arst={ }, srst={ }
  1020 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.33.2. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7813$abc$5002$auto$opt_dff.cc:219:make_patterns_logic$1536
Extracted 1642 gates and 1943 wires to a netlist network with 301 inputs and 33 outputs.

3.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               XOR cells:       32
ABC RESULTS:               NOR cells:       58
ABC RESULTS:             ORNOT cells:       96
ABC RESULTS:               MUX cells:      342
ABC RESULTS:                OR cells:      136
ABC RESULTS:            ANDNOT cells:       59
ABC RESULTS:              NAND cells:      575
ABC RESULTS:               AND cells:      293
ABC RESULTS:        internal signals:     1609
ABC RESULTS:           input signals:      301
ABC RESULTS:          output signals:       33
Removing temp directory.

3.33.3. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9456$abc$6592$auto$opt_dff.cc:219:make_patterns_logic$1539
Extracted 108 gates and 208 wires to a netlist network with 100 inputs and 65 outputs.

3.33.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               AND cells:        3
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       28
ABC RESULTS:               BUF cells:       96
ABC RESULTS:        internal signals:       43
ABC RESULTS:           input signals:      100
ABC RESULTS:          output signals:       65
Removing temp directory.

3.33.4. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 988 gates and 1599 wires to a netlist network with 611 inputs and 111 outputs.

3.33.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 71 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       71
ABC RESULTS:               NOT cells:        8
ABC RESULTS:             ORNOT cells:       83
ABC RESULTS:               XOR cells:       28
ABC RESULTS:               MUX cells:      502
ABC RESULTS:                OR cells:       44
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:              NAND cells:      103
ABC RESULTS:              XNOR cells:        9
ABC RESULTS:               AND cells:       96
ABC RESULTS:               NOR cells:       16
ABC RESULTS:               BUF cells:       65
ABC RESULTS:        internal signals:      877
ABC RESULTS:           input signals:      611
ABC RESULTS:          output signals:      111
Removing temp directory.

yosys> opt_ffinv

3.34. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
<suppressed ~99 debug messages>
Removed a total of 33 cells.

yosys> opt_muxtree

3.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12567 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li31_li31, Q = $abc$12535$lo31).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12566 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li30_li30, Q = $abc$12535$lo30).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12565 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li29_li29, Q = $abc$12535$lo29).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12564 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li28_li28, Q = $abc$12535$lo28).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12563 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li27_li27, Q = $abc$12535$lo27).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12562 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li26_li26, Q = $abc$12535$lo26).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12561 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li25_li25, Q = $abc$12535$lo25).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12560 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li24_li24, Q = $abc$12535$lo24).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12559 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li23_li23, Q = $abc$12535$lo23).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12558 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li22_li22, Q = $abc$12535$lo22).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12557 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li21_li21, Q = $abc$12535$lo21).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12556 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li20_li20, Q = $abc$12535$lo20).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12555 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li19_li19, Q = $abc$12535$lo19).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12554 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li18_li18, Q = $abc$12535$lo18).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12553 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li17_li17, Q = $abc$12535$lo17).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12552 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li16_li16, Q = $abc$12535$lo16).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12551 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li15_li15, Q = $abc$12535$lo15).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12550 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li14_li14, Q = $abc$12535$lo14).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12549 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li13_li13, Q = $abc$12535$lo13).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12548 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li12_li12, Q = $abc$12535$lo12).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12547 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li11_li11, Q = $abc$12535$lo11).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12546 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li10_li10, Q = $abc$12535$lo10).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12545 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li09_li09, Q = $abc$12535$lo09).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12544 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li08_li08, Q = $abc$12535$lo08).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12543 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li07_li07, Q = $abc$12535$lo07).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12542 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li06_li06, Q = $abc$12535$lo06).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12541 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li05_li05, Q = $abc$12535$lo05).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12540 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li04_li04, Q = $abc$12535$lo04).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12539 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li03_li03, Q = $abc$12535$lo03).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12538 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li02_li02, Q = $abc$12535$lo02).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12537 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li01_li01, Q = $abc$12535$lo01).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12536 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li00_li00, Q = $abc$12535$lo00).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12568 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li32_li32, Q = $abc$12535$lo32).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12599 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li63_li63, Q = $abc$12535$lo63).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12598 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li62_li62, Q = $abc$12535$lo62).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12597 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li61_li61, Q = $abc$12535$lo61).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12596 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li60_li60, Q = $abc$12535$lo60).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12595 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li59_li59, Q = $abc$12535$lo59).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12594 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li58_li58, Q = $abc$12535$lo58).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12593 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li57_li57, Q = $abc$12535$lo57).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12592 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li56_li56, Q = $abc$12535$lo56).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12591 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li55_li55, Q = $abc$12535$lo55).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12590 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li54_li54, Q = $abc$12535$lo54).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12589 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li53_li53, Q = $abc$12535$lo53).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12588 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li52_li52, Q = $abc$12535$lo52).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12587 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li51_li51, Q = $abc$12535$lo51).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12586 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li50_li50, Q = $abc$12535$lo50).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12585 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li49_li49, Q = $abc$12535$lo49).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12584 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li48_li48, Q = $abc$12535$lo48).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12583 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li47_li47, Q = $abc$12535$lo47).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12582 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li46_li46, Q = $abc$12535$lo46).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12581 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li45_li45, Q = $abc$12535$lo45).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12580 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li44_li44, Q = $abc$12535$lo44).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12579 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li43_li43, Q = $abc$12535$lo43).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12578 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li42_li42, Q = $abc$12535$lo42).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12577 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li41_li41, Q = $abc$12535$lo41).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12576 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li40_li40, Q = $abc$12535$lo40).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12575 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li39_li39, Q = $abc$12535$lo39).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12574 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li38_li38, Q = $abc$12535$lo38).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12573 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li37_li37, Q = $abc$12535$lo37).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12572 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li36_li36, Q = $abc$12535$lo36).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12571 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li35_li35, Q = $abc$12535$lo35).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12570 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li34_li34, Q = $abc$12535$lo34).
Adding EN signal on $abc$12535$auto$blifparse.cc:362:parse_blif$12569 ($_DFF_P_) from module gost89_ecb (D = $abc$12535$li33_li33, Q = $abc$12535$lo33).

yosys> opt_clean

3.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 9379 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~128 debug messages>

3.35.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
<suppressed ~378 debug messages>
Removed a total of 126 cells.

yosys> opt_dff -sat

3.35.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 190 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.35.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.35.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.35.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.35.23. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  994 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$13569, arst={ }, srst={ }
  40 cells in clk=\clk, en={ }, arst={ }, srst={ }
  67 cells in clk=\clk, en=$abc$12339$abc$9456$abc$6592$auto$opt_dff.cc:219:make_patterns_logic$1539, arst={ }, srst={ }
  1589 cells in clk=\clk, en=$abc$10715$abc$7813$abc$5002$auto$opt_dff.cc:219:make_patterns_logic$1536, arst={ }, srst={ }

3.36.2. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$13569
Extracted 962 gates and 1607 wires to a netlist network with 644 inputs and 97 outputs.

3.36.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOR cells:        7
ABC RESULTS:             ORNOT cells:       52
ABC RESULTS:               AND cells:       56
ABC RESULTS:                OR cells:       37
ABC RESULTS:               MUX cells:      395
ABC RESULTS:              XNOR cells:       18
ABC RESULTS:               XOR cells:       48
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:              NAND cells:      301
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:      866
ABC RESULTS:           input signals:      644
ABC RESULTS:          output signals:       97
Removing temp directory.

3.36.3. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 40 gates and 42 wires to a netlist network with 2 inputs and 16 outputs.

3.36.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 7 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               NOT cells:        5
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:                OR cells:        4
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:              NAND cells:        1
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               AND cells:       10
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:       16
Removing temp directory.

3.36.4. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12339$abc$9456$abc$6592$auto$opt_dff.cc:219:make_patterns_logic$1539
Extracted 67 gates and 135 wires to a netlist network with 68 inputs and 65 outputs.

3.36.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       65
Removing temp directory.

3.36.5. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10715$abc$7813$abc$5002$auto$opt_dff.cc:219:make_patterns_logic$1536
Extracted 1589 gates and 1860 wires to a netlist network with 271 inputs and 33 outputs.

3.36.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOT cells:        9
ABC RESULTS:             ORNOT cells:       94
ABC RESULTS:               NOR cells:       43
ABC RESULTS:            ANDNOT cells:       33
ABC RESULTS:               MUX cells:      281
ABC RESULTS:                OR cells:      147
ABC RESULTS:              NAND cells:      686
ABC RESULTS:               AND cells:      366
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:     1556
ABC RESULTS:           input signals:      271
ABC RESULTS:          output signals:       33
Removing temp directory.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> abc -script /tmp/yosys_0jQRvi/abc_tmp_1.scr

3.38. Executing ABC pass (technology mapping using ABC).

3.38.1. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Extracted 2611 gates and 3580 wires to a netlist network with 969 inputs and 168 outputs.

3.38.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_0jQRvi/abc_tmp_1.scr 
ABC:   #Luts =   766  Max Lvl =   7  Avg Lvl =   3.44  [   0.13 sec. at Pass 0]
ABC:   #Luts =   641  Max Lvl =   8  Avg Lvl =   3.51  [   3.64 sec. at Pass 1]
ABC:   #Luts =   626  Max Lvl =   6  Avg Lvl =   3.21  [   0.87 sec. at Pass 2]
ABC:   #Luts =   626  Max Lvl =   6  Avg Lvl =   3.21  [   1.39 sec. at Pass 3]
ABC:   #Luts =   621  Max Lvl =   6  Avg Lvl =   3.13  [   1.07 sec. at Pass 4]
ABC:   #Luts =   617  Max Lvl =   6  Avg Lvl =   3.07  [   1.70 sec. at Pass 5]
ABC:   #Luts =   616  Max Lvl =   6  Avg Lvl =   3.06  [   1.08 sec. at Pass 6]
ABC:   #Luts =   615  Max Lvl =   6  Avg Lvl =   3.10  [   1.77 sec. at Pass 7]
ABC:   #Luts =   612  Max Lvl =   6  Avg Lvl =   3.12  [   1.30 sec. at Pass 8]
ABC:   #Luts =   612  Max Lvl =   6  Avg Lvl =   3.12  [   1.62 sec. at Pass 9]
ABC:   #Luts =   612  Max Lvl =   6  Avg Lvl =   3.12  [   1.59 sec. at Pass 10]
ABC:   #Luts =   612  Max Lvl =   6  Avg Lvl =   3.12  [   1.62 sec. at Pass 11]
ABC:   #Luts =   611  Max Lvl =   7  Avg Lvl =   3.19  [   0.35 sec. at Pass 12]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.38.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      611
ABC RESULTS:        internal signals:     2443
ABC RESULTS:           input signals:      969
ABC RESULTS:          output signals:      168
Removing temp directory.

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 7379 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.40. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.41. Printing statistics.

=== gost89_ecb ===

   Number of wires:                690
   Number of wire bits:           2963
   Number of public wires:          36
   Number of public wire bits:    2246
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                810
     $_DFFE_PP_                    160
     $_DFF_P_                        7
     $lut                          611
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.42. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.43. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.44. Printing statistics.

=== gost89_ecb ===

   Number of wires:                690
   Number of wire bits:           2963
   Number of public wires:          36
   Number of public wire bits:    2246
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                810
     $_DFFE_PP0P_                  160
     $_DFF_P_                        7
     $lut                          611
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.45. Executing TECHMAP pass (map to technology primitives).

3.45.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.45.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.45.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1074 debug messages>

yosys> opt_expr -mux_undef

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~19432 debug messages>

yosys> simplemap

3.47. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
<suppressed ~12468 debug messages>
Removed a total of 4156 cells.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 2247 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.52. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.52.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~1408 debug messages>

yosys> opt_merge -nomux

3.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.52.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.52.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 31 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.52.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.52.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.52.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.52.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.52.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.52.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_0jQRvi/abc_tmp_2.scr

3.53. Executing ABC pass (technology mapping using ABC).

3.53.1. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Extracted 3041 gates and 4012 wires to a netlist network with 969 inputs and 168 outputs.

3.53.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_0jQRvi/abc_tmp_2.scr 
ABC:   #Luts =   611  Max Lvl =   7  Avg Lvl =   3.15  [   0.13 sec. at Pass 0]
ABC:   #Luts =   611  Max Lvl =   7  Avg Lvl =   3.15  [   3.75 sec. at Pass 1]
ABC:   #Luts =   610  Max Lvl =   7  Avg Lvl =   3.15  [   1.06 sec. at Pass 2]
ABC:   #Luts =   610  Max Lvl =   7  Avg Lvl =   3.15  [   1.19 sec. at Pass 3]
ABC:   #Luts =   610  Max Lvl =   7  Avg Lvl =   3.15  [   1.22 sec. at Pass 4]
ABC:   #Luts =   610  Max Lvl =   7  Avg Lvl =   3.15  [   1.73 sec. at Pass 5]
ABC:   #Luts =   610  Max Lvl =   7  Avg Lvl =   3.15  [   0.44 sec. at Pass 6]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.53.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      610
ABC RESULTS:        internal signals:     2875
ABC RESULTS:           input signals:      969
ABC RESULTS:          output signals:      168
Removing temp directory.

yosys> opt

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 3437 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.55. Executing HIERARCHY pass (managing design hierarchy).

3.55.1. Analyzing design hierarchy..
Top module:  \gost89_ecb

3.55.2. Analyzing design hierarchy..
Top module:  \gost89_ecb
Removed 0 unused modules.

yosys> stat

3.56. Printing statistics.

=== gost89_ecb ===

   Number of wires:                689
   Number of wire bits:           2962
   Number of public wires:          36
   Number of public wire bits:    2246
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                809
     $lut                          610
     adder_carry                    32
     dffsre                        167


yosys> opt_clean -purge

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 18 unused wires.
<suppressed ~18 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.58. Executing Verilog backend.

yosys> bmuxmap

3.58.1. Executing BMUXMAP pass.

yosys> demuxmap

3.58.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\gost89_ecb'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: bd48f3ac26, CPU: user 9.41s system 0.22s, MEM: 71.13 MB peak
Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)
Time spent: 96% 6x abc (217 sec), 1% 34x opt_expr (3 sec), ...
real 42.44
user 203.29
sys 23.29
