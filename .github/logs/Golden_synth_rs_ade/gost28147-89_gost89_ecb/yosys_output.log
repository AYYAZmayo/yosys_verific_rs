
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.13
 Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_ecb.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_ecb.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_ecb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_ecb -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.41

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_ecb

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_ecb.v:1: compiling module 'gost89_ecb'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_ecb.v:34: expression size 7 truncated to fit in target size 6
Importing module gost89_ecb.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_ecb
Used module:     \gost89_round
Used module:         \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_ecb
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_ecb.
<suppressed ~3 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_sbox.
Deleting now unused module gost89_round.
<suppressed ~9 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 1459 unused wires.
<suppressed ~21 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module gost89_ecb...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
    New ctrl vector for $pmux cell $verific$select_186$gost89_ecb.v:117$890: { $auto$opt_reduce.cc:134:opt_pmux$1530 $auto$opt_reduce.cc:134:opt_pmux$1528 $auto$opt_reduce.cc:134:opt_pmux$1526 $auto$opt_reduce.cc:134:opt_pmux$1524 $auto$opt_reduce.cc:134:opt_pmux$1522 $auto$opt_reduce.cc:134:opt_pmux$1520 $auto$opt_reduce.cc:134:opt_pmux$1518 $auto$opt_reduce.cc:134:opt_pmux$1516 $auto$opt_reduce.cc:134:opt_pmux$1514 $auto$opt_reduce.cc:134:opt_pmux$1512 $auto$opt_reduce.cc:134:opt_pmux$1510 $auto$opt_reduce.cc:134:opt_pmux$1508 $auto$opt_reduce.cc:134:opt_pmux$1506 $auto$opt_reduce.cc:134:opt_pmux$1504 $auto$opt_reduce.cc:134:opt_pmux$1502 $auto$opt_reduce.cc:134:opt_pmux$1500 $verific$n1897$50 }
  Optimizing cells in module \gost89_ecb.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_num_reg$gost89_ecb.v:45$853 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$round_key_reg$gost89_ecb.v:118$893 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$out_reg$gost89_ecb.v:45$854 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$n2_reg$gost89_ecb.v:45$851 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$n1_reg$gost89_ecb.v:45$850 ($aldff) from module gost89_ecb.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$round_key_reg$gost89_ecb.v:118$893 ($dff) from module gost89_ecb (D = $verific$n3053$139, Q = \round_key).
Adding EN signal on $verific$out_reg$gost89_ecb.v:45$854 ($dff) from module gost89_ecb (D = { \n1 \rnd.out1 }, Q = \out).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 bits (of 6) from port B of cell gost89_ecb.$verific$add_22$gost89_ecb.v:34$833 ($add).
Removed top 5 bits (of 6) from port A of cell gost89_ecb.$verific$LessThan_25$gost89_ecb.v:35$836 ($lt).
Removed top 5 bits (of 6) from port B of cell gost89_ecb.$verific$equal_82$gost89_ecb.v:51$856 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_ecb.$verific$equal_83$gost89_ecb.v:52$857 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_ecb.$verific$equal_84$gost89_ecb.v:53$858 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_85$gost89_ecb.v:54$859 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_86$gost89_ecb.v:55$860 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_87$gost89_ecb.v:56$861 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_88$gost89_ecb.v:57$862 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_89$gost89_ecb.v:58$863 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_90$gost89_ecb.v:59$864 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_91$gost89_ecb.v:60$865 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_92$gost89_ecb.v:61$866 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_93$gost89_ecb.v:62$867 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_94$gost89_ecb.v:63$868 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_95$gost89_ecb.v:64$869 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_96$gost89_ecb.v:65$870 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_97$gost89_ecb.v:66$871 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_98$gost89_ecb.v:67$872 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_99$gost89_ecb.v:68$873 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_100$gost89_ecb.v:69$874 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_101$gost89_ecb.v:70$875 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_102$gost89_ecb.v:71$876 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_103$gost89_ecb.v:72$877 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_104$gost89_ecb.v:73$878 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_105$gost89_ecb.v:74$879 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_106$gost89_ecb.v:75$880 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_107$gost89_ecb.v:76$881 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_108$gost89_ecb.v:77$882 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_109$gost89_ecb.v:78$883 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_110$gost89_ecb.v:79$884 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_111$gost89_ecb.v:80$885 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_112$gost89_ecb.v:81$886 ($eq).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 2 unused cells and 4 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_ecb:
  creating $macc model for $flatten\rnd.$verific$add_3$gost89_round.v:12$900 ($add).
  creating $macc model for $verific$add_22$gost89_ecb.v:34$833 ($add).
  creating $alu model for $macc $verific$add_22$gost89_ecb.v:34$833.
  creating $alu model for $macc $flatten\rnd.$verific$add_3$gost89_round.v:12$900.
  creating $alu model for $verific$LessThan_21$gost89_ecb.v:33$832 ($lt): new $alu
  creating $alu model for $verific$LessThan_25$gost89_ecb.v:35$836 ($lt): new $alu
  creating $alu model for $verific$equal_32$gost89_ecb.v:39$842 ($eq): merged with $verific$LessThan_21$gost89_ecb.v:33$832.
  creating $alu cell for $verific$LessThan_25$gost89_ecb.v:35$836: $auto$alumacc.cc:485:replace_alu$1595
  creating $alu cell for $verific$LessThan_21$gost89_ecb.v:33$832, $verific$equal_32$gost89_ecb.v:39$842: $auto$alumacc.cc:485:replace_alu$1600
  creating $alu cell for $flatten\rnd.$verific$add_3$gost89_round.v:12$900: $auto$alumacc.cc:485:replace_alu$1611
  creating $alu cell for $verific$add_22$gost89_ecb.v:34$833: $auto$alumacc.cc:485:replace_alu$1614
  created 4 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1563: { $auto$rtlil.cc:2398:Or$1550 $verific$n1895$48 $verific$n1894$47 $verific$n1867$20 $verific$n1866$19 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1589: { $auto$rtlil.cc:2398:Or$1550 $auto$rtlil.cc:2398:Or$1560 $verific$n1895$48 $verific$n1894$47 $verific$n1891$44 $verific$n1890$43 $verific$n1889$42 $verific$n1872$25 $verific$n1871$24 $verific$n1870$23 $verific$n1867$20 $verific$n1866$19 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1585: { $auto$rtlil.cc:2398:Or$1572 $verific$n1886$39 $verific$n1885$38 $verific$n1878$31 $verific$n1877$30 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$1540: { $auto$alumacc.cc:501:replace_alu$1601 $verific$n237$11 }
  Optimizing cells in module \gost89_ecb.
Performed a total of 4 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 3 unused cells and 6 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> stat

3.22. Printing statistics.

=== gost89_ecb ===

   Number of wires:                159
   Number of wire bits:           3906
   Number of public wires:          48
   Number of public wire bits:    2380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $alu                            4
     $and                            3
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            31
     $logic_not                      1
     $mux                           32
     $ne                             2
     $not                            6
     $or                             5
     $reduce_and                     3
     $reduce_or                     17
     $xor                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
No more expansions possible.
<suppressed ~602 debug messages>

yosys> stat

3.24. Printing statistics.

=== gost89_ecb ===

   Number of wires:                521
   Number of wire bits:           8945
   Number of public wires:          48
   Number of public wire bits:    2380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2771
     $_AND_                         63
     $_DFFE_PP_                     96
     $_DFF_P_                       71
     $_MUX_                       1872
     $_NOT_                         88
     $_OR_                         254
     $_XOR_                        295
     adder_carry                    32


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~319 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
<suppressed ~1407 debug messages>
Removed a total of 469 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 43 unused cells and 358 unused wires.
<suppressed ~44 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.25.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~98 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.28.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Summary of detected clock domains:
  1046 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1536, arst={ }, srst={ }
  582 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1539, arst={ }, srst={ }
  367 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.29.2. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1536
Extracted 1046 gates and 1347 wires to a netlist network with 301 inputs and 33 outputs.

3.29.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               XOR cells:       32
ABC RESULTS:            ANDNOT cells:       23
ABC RESULTS:               NOR cells:       32
ABC RESULTS:                OR cells:      121
ABC RESULTS:             ORNOT cells:       72
ABC RESULTS:              NAND cells:      642
ABC RESULTS:               MUX cells:      361
ABC RESULTS:               AND cells:      274
ABC RESULTS:        internal signals:     1013
ABC RESULTS:           input signals:      301
ABC RESULTS:          output signals:       33
Removing temp directory.

3.29.3. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1539
Extracted 582 gates and 1197 wires to a netlist network with 615 inputs and 97 outputs.

3.29.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOT cells:        2
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               NOR cells:       17
ABC RESULTS:                OR cells:       26
ABC RESULTS:             ORNOT cells:       52
ABC RESULTS:              NAND cells:      143
ABC RESULTS:               MUX cells:      377
ABC RESULTS:               AND cells:       67
ABC RESULTS:               XOR cells:       40
ABC RESULTS:              XNOR cells:       26
ABC RESULTS:               BUF cells:       96
ABC RESULTS:        internal signals:      485
ABC RESULTS:           input signals:      615
ABC RESULTS:          output signals:       97
Removing temp directory.

3.29.4. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 335 gates and 436 wires to a netlist network with 100 inputs and 80 outputs.

3.29.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 71 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       71
ABC RESULTS:               NOT cells:        5
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:               MUX cells:      129
ABC RESULTS:                OR cells:        6
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:              NAND cells:        2
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               AND cells:       10
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               BUF cells:       66
ABC RESULTS:        internal signals:      256
ABC RESULTS:           input signals:      100
ABC RESULTS:          output signals:       80
Removing temp directory.

yosys> abc -script abc_tmp.scr

3.30. Executing ABC pass (technology mapping using ABC).

3.30.1. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Extracted 2479 gates and 3448 wires to a netlist network with 969 inputs and 167 outputs.

3.30.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_10-05-2022T23-40-15/Golden_synth_rs_ade.json/gost28147-89_gost89_ecb/abc_tmp.scr 
ABC:   #Luts =   714  Max Lvl =   6  Avg Lvl =   3.37  [   0.18 sec. at Pass 0]
ABC:   #Luts =   651  Max Lvl =   7  Avg Lvl =   3.40  [   4.75 sec. at Pass 1]
ABC:   #Luts =   646  Max Lvl =   7  Avg Lvl =   3.39  [   1.30 sec. at Pass 2]
ABC:   #Luts =   636  Max Lvl =   7  Avg Lvl =   3.35  [   5.12 sec. at Pass 3]
ABC:   #Luts =   628  Max Lvl =   7  Avg Lvl =   3.29  [   2.11 sec. at Pass 4]
ABC:   #Luts =   628  Max Lvl =   7  Avg Lvl =   3.29  [   9.84 sec. at Pass 5]
ABC:   #Luts =   622  Max Lvl =   6  Avg Lvl =   3.16  [   2.34 sec. at Pass 6]
ABC:   #Luts =   617  Max Lvl =   6  Avg Lvl =   3.05  [   9.65 sec. at Pass 7]
ABC:   #Luts =   613  Max Lvl =   6  Avg Lvl =   3.12  [   1.77 sec. at Pass 8]
ABC:   #Luts =   610  Max Lvl =   5  Avg Lvl =   3.10  [   9.43 sec. at Pass 9]
ABC:   #Luts =   610  Max Lvl =   5  Avg Lvl =   3.10  [   2.73 sec. at Pass 10]
ABC:   #Luts =   605  Max Lvl =   5  Avg Lvl =   3.06  [   9.47 sec. at Pass 11]
ABC:   #Luts =   605  Max Lvl =   5  Avg Lvl =   3.06  [   1.61 sec. at Pass 12]
ABC:   #Luts =   601  Max Lvl =   6  Avg Lvl =   3.06  [   9.79 sec. at Pass 13]
ABC:   #Luts =   601  Max Lvl =   6  Avg Lvl =   3.06  [   1.74 sec. at Pass 14]
ABC:   #Luts =   600  Max Lvl =   5  Avg Lvl =   3.02  [   8.30 sec. at Pass 15]
ABC:   #Luts =   600  Max Lvl =   5  Avg Lvl =   3.02  [   2.47 sec. at Pass 16]
ABC:   #Luts =   599  Max Lvl =   5  Avg Lvl =   3.03  [   9.41 sec. at Pass 17]
ABC:   #Luts =   599  Max Lvl =   5  Avg Lvl =   3.03  [   1.53 sec. at Pass 18]
ABC:   #Luts =   599  Max Lvl =   5  Avg Lvl =   3.03  [   8.33 sec. at Pass 19]
ABC:   #Luts =   599  Max Lvl =   5  Avg Lvl =   3.03  [   1.70 sec. at Pass 20]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.30.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      599
ABC RESULTS:        internal signals:     2312
ABC RESULTS:           input signals:      969
ABC RESULTS:          output signals:      167
Removing temp directory.

yosys> opt

3.31. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 4995 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.31.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.31.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.32. Printing statistics.

=== gost89_ecb ===

   Number of wires:                646
   Number of wire bits:           2919
   Number of public wires:          36
   Number of public wire bits:    2246
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                798
     $_DFFE_PP_                     96
     $_DFF_P_                       71
     $lut                          599
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.33. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.35. Printing statistics.

=== gost89_ecb ===

   Number of wires:                646
   Number of wire bits:           2919
   Number of public wires:          36
   Number of public wire bits:    2246
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                798
     $_DFFE_PP0P_                   96
     $_DFF_P_                       71
     $lut                          599
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~998 debug messages>

yosys> opt_expr -mux_undef

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~24389 debug messages>

yosys> simplemap

3.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
<suppressed ~4551 debug messages>
Removed a total of 1517 cells.

yosys> opt_dff -nodffe -nosdff

3.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 2645 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.43. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~618 debug messages>

yosys> opt_merge -nomux

3.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 82 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.43.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.43.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.43.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.43.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.43.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.44. Executing ABC pass (technology mapping using ABC).

3.44.1. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Extracted 2317 gates and 3288 wires to a netlist network with 969 inputs and 167 outputs.

3.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_10-05-2022T23-40-15/Golden_synth_rs_ade.json/gost28147-89_gost89_ecb/abc_tmp.scr 
ABC:   #Luts =   600  Max Lvl =   5  Avg Lvl =   3.10  [   0.20 sec. at Pass 0]
ABC:   #Luts =   600  Max Lvl =   5  Avg Lvl =   3.10  [   5.15 sec. at Pass 1]
ABC:   #Luts =   600  Max Lvl =   5  Avg Lvl =   3.10  [   1.26 sec. at Pass 2]
ABC:   #Luts =   600  Max Lvl =   5  Avg Lvl =   3.10  [   7.46 sec. at Pass 3]
ABC:   #Luts =   600  Max Lvl =   5  Avg Lvl =   3.10  [   1.56 sec. at Pass 4]
ABC:   #Luts =   598  Max Lvl =   5  Avg Lvl =   3.02  [   8.76 sec. at Pass 5]
ABC:   #Luts =   598  Max Lvl =   5  Avg Lvl =   3.02  [   2.07 sec. at Pass 6]
ABC:   #Luts =   597  Max Lvl =   5  Avg Lvl =   3.02  [  10.86 sec. at Pass 7]
ABC:   #Luts =   597  Max Lvl =   5  Avg Lvl =   3.02  [   2.13 sec. at Pass 8]
ABC:   #Luts =   597  Max Lvl =   5  Avg Lvl =   3.02  [  15.21 sec. at Pass 9]
ABC:   #Luts =   597  Max Lvl =   5  Avg Lvl =   3.02  [   3.10 sec. at Pass 10]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      597
ABC RESULTS:        internal signals:     2152
ABC RESULTS:           input signals:      969
ABC RESULTS:          output signals:      167
Removing temp directory.

yosys> opt

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 2788 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \gost89_ecb

3.46.2. Analyzing design hierarchy..
Top module:  \gost89_ecb
Removed 0 unused modules.

yosys> stat

3.47. Printing statistics.

=== gost89_ecb ===

   Number of wires:                644
   Number of wire bits:           2917
   Number of public wires:          36
   Number of public wire bits:    2246
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                796
     $lut                          597
     adder_carry                    32
     dffsre                        167


yosys> opt_clean -purge

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 17 unused wires.
<suppressed ~17 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.49. Executing Verilog backend.

yosys> bmuxmap

3.49.1. Executing BMUXMAP pass.

yosys> demuxmap

3.49.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\gost89_ecb'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: c2798367d3, CPU: user 7.75s system 0.15s, MEM: 68.39 MB peak
Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 3x abc (1207 sec), 0% 30x opt_expr (3 sec), ...
real 179.98
user 1131.78
sys 83.14
