
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b21.vhd

yosys> verific -vhdl b21.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b21.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b21.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b21.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:515: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b21.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:1026: analyzing entity 'b21'
VERIFIC-INFO [VHDL-1010] b21.vhd:1034: analyzing architecture 'behav'

yosys> synth_rs -top b14 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b14

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b21.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:482: 'others' clause is never selected
Importing module b14.

3.3.1. Analyzing design hierarchy..
Top module:  \b14

3.3.2. Analyzing design hierarchy..
Top module:  \b14
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~26 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~7 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 7 unused cells and 160 unused wires.
<suppressed ~54 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b14...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $verific$i684$b21.vhd:505$461.
    dead port 2/2 on $mux $verific$mux_672$b21.vhd:505$452.
    dead port 2/2 on $mux $verific$mux_685$b21.vhd:505$463.
Removed 3 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
    New ctrl vector for $pmux cell $verific$select_746$b21.vhd:490$414: { $verific$n2255$45 $auto$opt_reduce.cc:134:opt_pmux$505 }
    New ctrl vector for $pmux cell $verific$select_750$b21.vhd:490$355: { $verific$n2256$46 $auto$opt_reduce.cc:134:opt_pmux$507 }
    New ctrl vector for $pmux cell $verific$select_751$b21.vhd:490$432: { $verific$n2257$47 $auto$opt_reduce.cc:134:opt_pmux$509 }
    New ctrl vector for $pmux cell $verific$select_752$b21.vhd:490$433: { $verific$n2258$48 $auto$opt_reduce.cc:134:opt_pmux$511 }
  Optimizing cells in module \b14.
Performed a total of 4 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wr_reg$b21.vhd:509$498 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$state_reg$b21.vhd:509$500 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg3_reg$b21.vhd:509$495 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg2_reg$b21.vhd:509$494 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg1_reg$b21.vhd:509$493 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg0_reg$b21.vhd:509$492 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$rd_reg$b21.vhd:509$497 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$IR_reg$b21.vhd:509$489 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$B_reg$b21.vhd:509$491 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$datao_reg$b21.vhd:509$499 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$d_reg$b21.vhd:509$490 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$addr_reg$b21.vhd:509$496 ($aldff) from module b14.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b14.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\d' from module `\b14'.
  found $adff cell for state register: $verific$d_reg$b21.vhd:509$490
  root of input selection tree: $verific$n11472$295
  found reset state: 0 (from async reset)
  found ctrl input: \state
  found ctrl input: $verific$n341$141 [0]
  found ctrl input: $verific$n10346$112
  found ctrl input: $verific$n1405$39
  found ctrl input: $verific$n1440$40
  found ctrl input: $verific$n1474$41
  found ctrl input: $verific$n1475$42
  found ctrl input: $verific$n1476$43
  found ctrl input: $verific$n1477$44
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \B
  ctrl inputs: { $verific$n341$141 [0] $verific$n10346$112 $verific$n1477$44 $verific$n1476$43 $verific$n1475$42 $verific$n1474$41 $verific$n1440$40 $verific$n1405$39 \state \B }
  ctrl outputs: $verific$n11472$295
  transition:          0 10'--------0- ->          0 0
  transition:          0 10'000000001- ->          0 0
  transition:          0 10'001000001- ->          0 0
  transition:          0 10'00-100001- ->          1 1
  transition:          0 10'00--10001- ->          2 2
  transition:          0 10'00---1001- ->          3 3
  transition:          0 10'00----1010 ->          0 0
  transition:          0 10'00----1011 ->          3 3
  transition:          0 10'00-----110 ->          3 3
  transition:          0 10'00-----111 ->          0 0
  transition:          0 10'01------1- ->          0 0
  transition:          0 10'1-------1- ->          0 0
  transition:          2 10'--------0- ->          2 2
  transition:          2 10'000000001- ->          2 2
  transition:          2 10'001000001- ->          0 0
  transition:          2 10'00-100001- ->          1 1
  transition:          2 10'00--10001- ->          2 2
  transition:          2 10'00---1001- ->          3 3
  transition:          2 10'00----1010 ->          2 2
  transition:          2 10'00----1011 ->          3 3
  transition:          2 10'00-----110 ->          3 3
  transition:          2 10'00-----111 ->          2 2
  transition:          2 10'01------1- ->          2 2
  transition:          2 10'1-------1- ->          2 2
  transition:          1 10'--------0- ->          1 1
  transition:          1 10'000000001- ->          1 1
  transition:          1 10'001000001- ->          0 0
  transition:          1 10'00-100001- ->          1 1
  transition:          1 10'00--10001- ->          2 2
  transition:          1 10'00---1001- ->          3 3
  transition:          1 10'00----1010 ->          1 1
  transition:          1 10'00----1011 ->          3 3
  transition:          1 10'00-----110 ->          3 3
  transition:          1 10'00-----111 ->          1 1
  transition:          1 10'01------1- ->          1 1
  transition:          1 10'1-------1- ->          1 1
  transition:          3 10'--------0- ->          3 3
  transition:          3 10'000000001- ->          3 3
  transition:          3 10'001000001- ->          0 0
  transition:          3 10'00-100001- ->          1 1
  transition:          3 10'00--10001- ->          2 2
  transition:          3 10'00---1001- ->          3 3
  transition:          3 10'00----1010 ->          3 3
  transition:          3 10'00----1011 ->          3 3
  transition:          3 10'00-----110 ->          3 3
  transition:          3 10'00-----111 ->          3 3
  transition:          3 10'01------1- ->          3 3
  transition:          3 10'1-------1- ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\d$512' from module `\b14'.
  Merging pattern 10'000000001- and 10'001000001- from group (0 0 0).
  Merging pattern 10'001000001- and 10'000000001- from group (0 0 0).
  Merging pattern 10'00----1010 and 10'00----1011 from group (3 3 3).
  Merging pattern 10'00-----110 and 10'00-----111 from group (3 3 3).
  Merging pattern 10'00----1011 and 10'00----1010 from group (3 3 3).
  Merging pattern 10'00-----111 and 10'00-----110 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\d$512' from module `\b14'.

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\d$512' from module `\b14' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\d$512' from module `b14':
-------------------------------------

  Information on FSM $fsm$\d$512 (\d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: \B
    1: \state
    2: $verific$n1405$39
    3: $verific$n1440$40
    4: $verific$n1474$41
    5: $verific$n1475$42
    6: $verific$n1476$43
    7: $verific$n1477$44
    8: $verific$n10346$112
    9: $verific$n341$141 [0]

  Output signals:
    0: $verific$n11472$295 [0]
    1: $verific$n11472$295 [1]
    2: $verific$n11472$295 [2]
    3: $verific$n11472$295 [3]
    4: $verific$n11472$295 [4]
    5: $verific$n11472$295 [5]
    6: $verific$n11472$295 [6]
    7: $verific$n11472$295 [7]
    8: $verific$n11472$295 [8]
    9: $verific$n11472$295 [9]
   10: $verific$n11472$295 [10]
   11: $verific$n11472$295 [11]
   12: $verific$n11472$295 [12]
   13: $verific$n11472$295 [13]
   14: $verific$n11472$295 [14]
   15: $verific$n11472$295 [15]
   16: $verific$n11472$295 [16]
   17: $verific$n11472$295 [17]
   18: $verific$n11472$295 [18]
   19: $verific$n11472$295 [19]
   20: $verific$n11472$295 [20]
   21: $verific$n11472$295 [21]
   22: $verific$n11472$295 [22]
   23: $verific$n11472$295 [23]
   24: $verific$n11472$295 [24]
   25: $verific$n11472$295 [25]
   26: $verific$n11472$295 [26]
   27: $verific$n11472$295 [27]
   28: $verific$n11472$295 [28]
   29: $verific$n11472$295 [29]
   30: $verific$n11472$295 [30]
   31: $verific$n11472$295 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'00----1010   ->     0 0
      1:     0 10'00-----111   ->     0 0
      2:     0 10'--------0-   ->     0 0
      3:     0 10'00-000001-   ->     0 0
      4:     0 10'01------1-   ->     0 0
      5:     0 10'1-------1-   ->     0 0
      6:     0 10'00--10001-   ->     1 2
      7:     0 10'00-100001-   ->     2 1
      8:     0 10'00-----110   ->     3 3
      9:     0 10'00----1011   ->     3 3
     10:     0 10'00---1001-   ->     3 3
     11:     1 10'001000001-   ->     0 0
     12:     1 10'00----1010   ->     1 2
     13:     1 10'00-----111   ->     1 2
     14:     1 10'--------0-   ->     1 2
     15:     1 10'000000001-   ->     1 2
     16:     1 10'00--10001-   ->     1 2
     17:     1 10'01------1-   ->     1 2
     18:     1 10'1-------1-   ->     1 2
     19:     1 10'00-100001-   ->     2 1
     20:     1 10'00-----110   ->     3 3
     21:     1 10'00----1011   ->     3 3
     22:     1 10'00---1001-   ->     3 3
     23:     2 10'001000001-   ->     0 0
     24:     2 10'00--10001-   ->     1 2
     25:     2 10'00----1010   ->     2 1
     26:     2 10'00-----111   ->     2 1
     27:     2 10'--------0-   ->     2 1
     28:     2 10'000000001-   ->     2 1
     29:     2 10'00-100001-   ->     2 1
     30:     2 10'01------1-   ->     2 1
     31:     2 10'1-------1-   ->     2 1
     32:     2 10'00-----110   ->     3 3
     33:     2 10'00----1011   ->     3 3
     34:     2 10'00---1001-   ->     3 3
     35:     3 10'001000001-   ->     0 0
     36:     3 10'00--10001-   ->     1 2
     37:     3 10'00-100001-   ->     2 1
     38:     3 10'--------0-   ->     3 3
     39:     3 10'000000001-   ->     3 3
     40:     3 10'00---1001-   ->     3 3
     41:     3 10'00----101-   ->     3 3
     42:     3 10'00-----11-   ->     3 3
     43:     3 10'01------1-   ->     3 3
     44:     3 10'1-------1-   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\d$512' from module `\b14'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$reg3_reg$b21.vhd:509$495 ($adff) from module b14 (D = $verific$n11178$290 [31:3], Q = \reg3 [31:3]).
Adding EN signal on $verific$reg3_reg$b21.vhd:509$495 ($adff) from module b14 (D = $verific$n10312$265 [2:0], Q = \reg3 [2:0]).
Adding EN signal on $verific$reg2_reg$b21.vhd:509$494 ($adff) from module b14 (D = $verific$n10279$264, Q = \reg2).
Adding EN signal on $verific$reg1_reg$b21.vhd:509$493 ($adff) from module b14 (D = $verific$n10246$263, Q = \reg1).
Adding EN signal on $verific$reg0_reg$b21.vhd:509$492 ($adff) from module b14 (D = $verific$n10213$262, Q = \reg0).
Adding EN signal on $verific$datao_reg$b21.vhd:509$499 ($adff) from module b14 (D = { $verific$add_570$b21.vhd:470$423 $verific$n10514$273 [0] }, Q = \datao).
Adding EN signal on $verific$B_reg$b21.vhd:509$491 ($adff) from module b14 (D = $verific$n10979$120, Q = \B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 24 unused cells and 76 unused wires.
<suppressed ~25 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 3 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 4 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 5 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 6 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 7 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 8 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 9 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 10 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 11 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 12 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 13 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 14 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 15 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 16 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 17 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 18 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 19 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 20 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 21 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 22 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 23 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 24 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 25 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 26 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 27 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 28 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 29 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 30 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.
Setting constant 0-bit at position 31 on $verific$d_reg$b21.vhd:509$490 ($adff) from module b14.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 8) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$660 ($eq).
Removed top 3 bits (of 29) from FF cell b14.$auto$ff.cc:262:slice$733 ($adffe).
Removed top 1 bits (of 2) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$769 ($ne).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$685 ($eq).
Removed top 1 bits (of 32) from port A of cell b14.$verific$LessThan_14$b21.vhd:87$312 ($lt).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$unary_minus_15$b21.vhd:88$313 ($neg).
Removed top 1 bits (of 33) from port A of cell b14.$verific$unary_minus_15$b21.vhd:88$313 ($neg).
Removed top 3 bits (of 5) from port Y of cell b14.$verific$add_21$b21.vhd:90$319 ($add).
Removed top 3 bits (of 5) from port A of cell b14.$verific$add_21$b21.vhd:90$319 ($add).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$689 ($eq).
Removed top 5 bits (of 8) from port Y of cell b14.$verific$add_26$b21.vhd:92$326 ($add).
Removed top 5 bits (of 8) from port A of cell b14.$verific$add_26$b21.vhd:92$326 ($add).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$691 ($eq).
Removed top 9 bits (of 13) from port Y of cell b14.$verific$add_31$b21.vhd:94$333 ($add).
Removed top 9 bits (of 13) from port A of cell b14.$verific$add_31$b21.vhd:94$333 ($add).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$693 ($eq).
Removed top 8 bits (of 9) from port Y of cell b14.$verific$add_36$b21.vhd:96$340 ($add).
Removed top 8 bits (of 9) from port A of cell b14.$verific$add_36$b21.vhd:96$340 ($add).
Removed top 25 bits (of 26) from port B of cell b14.$verific$add_39$b21.vhd:99$346 ($add).
Removed top 1 bits (of 3) from port Y of cell b14.$verific$add_44$b21.vhd:100$350 ($add).
Removed top 1 bits (of 3) from port A of cell b14.$verific$add_44$b21.vhd:100$350 ($add).
Removed top 12 bits (of 32) from port A of cell b14.$verific$add_56$b21.vhd:114$358 ($add).
Removed top 12 bits (of 32) from port Y of cell b14.$verific$add_56$b21.vhd:114$358 ($add).
Removed top 12 bits (of 32) from port B of cell b14.$verific$add_56$b21.vhd:114$358 ($add).
Removed top 12 bits (of 32) from port A of cell b14.$verific$add_61$b21.vhd:117$360 ($add).
Removed top 12 bits (of 32) from port Y of cell b14.$verific$add_61$b21.vhd:117$360 ($add).
Removed top 12 bits (of 32) from port B of cell b14.$verific$add_61$b21.vhd:117$360 ($add).
Removed top 1 bits (of 32) from port B of cell b14.$verific$LessThan_83$b21.vhd:152$372 ($lt).
Removed top 2 bits (of 33) from port B of cell b14.$verific$sub_84$b21.vhd:153$373 ($sub).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$sub_84$b21.vhd:153$373 ($sub).
Removed top 1 bits (of 33) from port A of cell b14.$verific$sub_84$b21.vhd:153$373 ($sub).
Removed top 8 bits (of 9) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$703 ($eq).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_138$b21.vhd:220$391 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_140$b21.vhd:224$393 ($mux).
Removed top 1 bits (of 3) from port A of cell b14.$verific$equal_141$b21.vhd:225$394 ($eq).
Removed top 1 bits (of 3) from port A of cell b14.$verific$equal_142$b21.vhd:227$395 ($eq).
Removed top 2 bits (of 3) from port A of cell b14.$verific$equal_143$b21.vhd:228$396 ($eq).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_145$b21.vhd:230$398 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_146$b21.vhd:230$399 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_147$b21.vhd:230$400 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_148$b21.vhd:230$401 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_149$b21.vhd:230$402 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_150$b21.vhd:230$403 ($mux).
Removed top 32 bits (of 33) from port A of cell b14.$verific$sub_168$b21.vhd:247$404 ($sub).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$sub_168$b21.vhd:247$404 ($sub).
Removed top 1 bits (of 33) from port B of cell b14.$verific$sub_168$b21.vhd:247$404 ($sub).
Removed top 31 bits (of 32) from port A of cell b14.$verific$equal_177$b21.vhd:248$407 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_177$b21.vhd:248$407 ($eq).
Removed top 30 bits (of 32) from port A of cell b14.$verific$equal_178$b21.vhd:249$408 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_178$b21.vhd:249$408 ($eq).
Removed top 30 bits (of 32) from port A of cell b14.$verific$equal_179$b21.vhd:250$409 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_179$b21.vhd:250$409 ($eq).
Removed top 2 bits (of 32) from port Y of cell b14.$verific$add_283$b21.vhd:322$415 ($add).
Removed top 2 bits (of 32) from port A of cell b14.$verific$add_283$b21.vhd:322$415 ($add).
Removed top 2 bits (of 32) from port B of cell b14.$verific$add_283$b21.vhd:322$415 ($add).
Removed top 3 bits (of 33) from port Y of cell b14.$verific$sub_365$b21.vhd:362$417 ($sub).
Removed top 3 bits (of 33) from port A of cell b14.$verific$sub_365$b21.vhd:362$417 ($sub).
Removed top 3 bits (of 33) from port B of cell b14.$verific$sub_365$b21.vhd:362$417 ($sub).
Removed top 2 bits (of 7) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$709 ($eq).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$711 ($eq).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$713 ($eq).
Removed top 1 bits (of 2) from port B of cell b14.$auto$fsm_map.cc:215:map_fsm$518 ($eq).
Removed top 3 bits (of 32) from mux cell b14.$verific$mux_698$b21.vhd:506$473 ($mux).
Removed top 2 bits (of 4) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$717 ($eq).
Removed top 1 bits (of 3) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$721 ($eq).
Removed top 3 bits (of 32) from mux cell b14.$verific$mux_679$b21.vhd:505$459 ($mux).
Removed top 30 bits (of 32) from wire b14.$fsm$oldstate\d.
Removed top 20 bits (of 21) from wire b14.$verific$n10477$270.
Removed top 3 bits (of 32) from wire b14.$verific$n10755$281.
Removed top 3 bits (of 32) from wire b14.$verific$n11178$290.
Removed top 30 bits (of 32) from wire b14.$verific$n11472$295.
Removed top 30 bits (of 32) from wire b14.$verific$n1407$163.
Removed top 30 bits (of 32) from wire b14.$verific$n1441$164.
Removed top 1 bits (of 33) from wire b14.$verific$n184$132.
Removed top 9 bits (of 13) from wire b14.$verific$n318$139.
Removed top 2 bits (of 32) from wire b14.$verific$n4241$209.
Removed top 1 bits (of 3) from wire b14.$verific$n436$145.
Removed top 3 bits (of 33) from wire b14.$verific$n5666$223.
Removed top 1 bits (of 32) from wire b14.$verific$n862$158.
Removed top 1 bits (of 33) from wire b14.$verific$n933$160.
Removed top 3 bits (of 32) from wire b14.reg3.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 10 unused cells and 58 unused wires.
<suppressed ~11 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b14:
  creating $macc model for $verific$add_21$b21.vhd:90$319 ($add).
  creating $macc model for $verific$add_26$b21.vhd:92$326 ($add).
  creating $macc model for $verific$add_283$b21.vhd:322$415 ($add).
  creating $macc model for $verific$add_31$b21.vhd:94$333 ($add).
  creating $macc model for $verific$add_36$b21.vhd:96$340 ($add).
  creating $macc model for $verific$add_39$b21.vhd:99$346 ($add).
  creating $macc model for $verific$add_44$b21.vhd:100$350 ($add).
  creating $macc model for $verific$add_56$b21.vhd:114$358 ($add).
  creating $macc model for $verific$add_570$b21.vhd:470$422 ($add).
  creating $macc model for $verific$add_61$b21.vhd:117$360 ($add).
  creating $macc model for $verific$add_662$b21.vhd:497$442 ($add).
  creating $macc model for $verific$add_664$b21.vhd:498$444 ($add).
  creating $macc model for $verific$mult_667$b21.vhd:501$448 ($mul).
  creating $macc model for $verific$sub_168$b21.vhd:247$404 ($sub).
  creating $macc model for $verific$sub_365$b21.vhd:362$417 ($sub).
  creating $macc model for $verific$sub_84$b21.vhd:153$373 ($sub).
  creating $macc model for $verific$unary_minus_15$b21.vhd:88$313 ($neg).
  creating $alu model for $macc $verific$unary_minus_15$b21.vhd:88$313.
  creating $alu model for $macc $verific$sub_84$b21.vhd:153$373.
  creating $alu model for $macc $verific$sub_365$b21.vhd:362$417.
  creating $alu model for $macc $verific$sub_168$b21.vhd:247$404.
  creating $alu model for $macc $verific$add_664$b21.vhd:498$444.
  creating $alu model for $macc $verific$add_662$b21.vhd:497$442.
  creating $alu model for $macc $verific$add_61$b21.vhd:117$360.
  creating $alu model for $macc $verific$add_570$b21.vhd:470$422.
  creating $alu model for $macc $verific$add_56$b21.vhd:114$358.
  creating $alu model for $macc $verific$add_44$b21.vhd:100$350.
  creating $alu model for $macc $verific$add_39$b21.vhd:99$346.
  creating $alu model for $macc $verific$add_36$b21.vhd:96$340.
  creating $alu model for $macc $verific$add_31$b21.vhd:94$333.
  creating $alu model for $macc $verific$add_283$b21.vhd:322$415.
  creating $alu model for $macc $verific$add_26$b21.vhd:92$326.
  creating $alu model for $macc $verific$add_21$b21.vhd:90$319.
  creating $macc cell for $verific$mult_667$b21.vhd:501$448: $auto$alumacc.cc:365:replace_macc$832
  creating $alu model for $verific$LessThan_14$b21.vhd:87$312 ($lt): new $alu
  creating $alu model for $verific$LessThan_68$b21.vhd:122$366 ($lt): new $alu
  creating $alu model for $verific$LessThan_78$b21.vhd:142$370 ($lt): merged with $verific$LessThan_68$b21.vhd:122$366.
  creating $alu model for $verific$LessThan_83$b21.vhd:152$372 ($lt): new $alu
  creating $alu model for $verific$LessThan_87$b21.vhd:155$377 ($lt): new $alu
  creating $alu cell for $verific$LessThan_87$b21.vhd:155$377: $auto$alumacc.cc:485:replace_alu$837
  creating $alu cell for $verific$LessThan_83$b21.vhd:152$372: $auto$alumacc.cc:485:replace_alu$848
  creating $alu cell for $verific$LessThan_68$b21.vhd:122$366, $verific$LessThan_78$b21.vhd:142$370: $auto$alumacc.cc:485:replace_alu$859
  creating $alu cell for $verific$LessThan_14$b21.vhd:87$312: $auto$alumacc.cc:485:replace_alu$870
  creating $alu cell for $verific$add_21$b21.vhd:90$319: $auto$alumacc.cc:485:replace_alu$875
  creating $alu cell for $verific$add_26$b21.vhd:92$326: $auto$alumacc.cc:485:replace_alu$878
  creating $alu cell for $verific$add_283$b21.vhd:322$415: $auto$alumacc.cc:485:replace_alu$881
  creating $alu cell for $verific$add_31$b21.vhd:94$333: $auto$alumacc.cc:485:replace_alu$884
  creating $alu cell for $verific$add_36$b21.vhd:96$340: $auto$alumacc.cc:485:replace_alu$887
  creating $alu cell for $verific$add_39$b21.vhd:99$346: $auto$alumacc.cc:485:replace_alu$890
  creating $alu cell for $verific$add_44$b21.vhd:100$350: $auto$alumacc.cc:485:replace_alu$893
  creating $alu cell for $verific$add_570$b21.vhd:470$422: $auto$alumacc.cc:485:replace_alu$896
  creating $alu cell for $verific$add_56$b21.vhd:114$358: $auto$alumacc.cc:485:replace_alu$899
  creating $alu cell for $verific$add_662$b21.vhd:497$442: $auto$alumacc.cc:485:replace_alu$902
  creating $alu cell for $verific$add_61$b21.vhd:117$360: $auto$alumacc.cc:485:replace_alu$905
  creating $alu cell for $verific$add_664$b21.vhd:498$444: $auto$alumacc.cc:485:replace_alu$908
  creating $alu cell for $verific$sub_168$b21.vhd:247$404: $auto$alumacc.cc:485:replace_alu$911
  creating $alu cell for $verific$sub_365$b21.vhd:362$417: $auto$alumacc.cc:485:replace_alu$914
  creating $alu cell for $verific$sub_84$b21.vhd:153$373: $auto$alumacc.cc:485:replace_alu$917
  creating $alu cell for $verific$unary_minus_15$b21.vhd:88$313: $auto$alumacc.cc:485:replace_alu$920
  created 20 $alu and 1 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 2 unused cells and 10 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> stat

3.22. Printing statistics.

=== b14 ===

   Number of wires:                249
   Number of wire bits:           4218
   Number of public wires:          15
   Number of public wire bits:     249
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                192
     $adff                           7
     $adffe                          7
     $alu                           20
     $and                           32
     $bmux                          16
     $eq                            25
     $logic_not                      2
     $macc                           1
     $mux                           36
     $ne                             1
     $not                           10
     $or                            12
     $reduce_and                     6
     $reduce_or                     17


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:454:run$774 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $or.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$172f2253883621b746ed3e405a5e271c8c312010\_80_rs_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$2256_Y
    new assignment: { } = { }.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$8027eda61d95ddd4d4dd7b5cb21f3830552ebe4e\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$6bf3afcadde450e76c699a4da1838452ccdf24c7\_80_rs_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~2532 debug messages>

yosys> stat

3.24. Printing statistics.

=== b14 ===

   Number of wires:               1480
   Number of wire bits:          24394
   Number of public wires:          15
   Number of public wire bits:     249
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8532
     $_AND_                        700
     $_DFFE_PP0P_                  158
     $_DFF_PP0_                     59
     $_MUX_                       5500
     $_NOT_                        473
     $_OR_                         608
     $_XOR_                        758
     adder_carry                   276


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~2858 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~4575 debug messages>
Removed a total of 1525 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$6557 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [19], Q = \addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$6560 ($_DFFE_PP0P_) from module b14 (D = $verific$n10979$120, Q = \B).
Adding EN signal on $auto$ff.cc:262:slice$6538 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [0], Q = \addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$6539 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [1], Q = \addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$6540 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [2], Q = \addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$6541 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [3], Q = \addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$6542 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [4], Q = \addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$6543 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [5], Q = \addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$6544 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [6], Q = \addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$6545 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [7], Q = \addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$6546 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [8], Q = \addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$6547 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [9], Q = \addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$6548 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [10], Q = \addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$6549 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [11], Q = \addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$6550 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [12], Q = \addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$6551 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [13], Q = \addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$6552 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [14], Q = \addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$6553 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [15], Q = \addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$6554 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [16], Q = \addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$6555 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [17], Q = \addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$6556 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [18], Q = \addr [18]).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 352 unused cells and 1041 unused wires.
<suppressed ~353 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~330 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~531 debug messages>
Removed a total of 177 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$1799 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5890 [2], Q = \reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$1798 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5890 [1], Q = \reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$1797 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5890 [0], Q = \reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$6494 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [20], Q = \reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$6493 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [19], Q = \reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$6492 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [18], Q = \reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$6491 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [17], Q = \reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$6490 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [16], Q = \reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$6489 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [15], Q = \reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$6488 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [14], Q = \reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$6487 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [13], Q = \reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$6486 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [12], Q = \reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$6485 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [11], Q = \reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$6484 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [10], Q = \reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$6483 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [9], Q = \reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$6482 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [8], Q = \reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$6481 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [7], Q = \reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$6480 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [6], Q = \reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$6479 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [5], Q = \reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$6478 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [4], Q = \reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$6477 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [3], Q = \reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$6476 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [2], Q = \reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$6475 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [1], Q = \reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$6474 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [0], Q = \reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$6473 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [31], Q = \reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$6472 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [30], Q = \reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$6471 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [29], Q = \reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$6470 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [28], Q = \reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$6469 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [27], Q = \reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$6468 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [26], Q = \reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$6467 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [25], Q = \reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$6466 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [24], Q = \reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$6465 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [23], Q = \reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$6464 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [22], Q = \reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$6463 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [21], Q = \reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$6462 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [20], Q = \reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$6461 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [19], Q = \reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$6460 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [18], Q = \reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$6459 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [17], Q = \reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$6458 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [16], Q = \reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$6457 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [15], Q = \reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$6456 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [14], Q = \reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$6455 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [13], Q = \reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$6454 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [12], Q = \reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$6453 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [11], Q = \reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$6452 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [10], Q = \reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$6451 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [9], Q = \reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$6450 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [8], Q = \reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$6449 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [7], Q = \reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$6448 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [6], Q = \reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$6447 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [5], Q = \reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$6446 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [4], Q = \reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$6445 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [3], Q = \reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$6444 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [2], Q = \reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$6443 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [1], Q = \reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$6442 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [0], Q = \reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$6537 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [31], Q = \reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$6536 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [30], Q = \reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$6535 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [29], Q = \reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$6534 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [28], Q = \reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$6533 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [27], Q = \reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$6532 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [26], Q = \reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$6531 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [25], Q = \reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$6530 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [24], Q = \reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$6529 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [23], Q = \reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$6528 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [22], Q = \reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$6527 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [21], Q = \reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$6526 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [20], Q = \reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$6525 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [19], Q = \reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$6524 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [18], Q = \reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$6523 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [17], Q = \reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$6522 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [16], Q = \reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$6521 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [15], Q = \reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$6520 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [14], Q = \reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$6519 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [13], Q = \reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$6518 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [12], Q = \reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$6517 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [11], Q = \reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$6516 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [10], Q = \reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$6515 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [9], Q = \reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$6514 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [8], Q = \reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$6513 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [7], Q = \reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$6512 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [6], Q = \reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$6511 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [5], Q = \reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$6510 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [4], Q = \reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$6509 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [3], Q = \reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$6508 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [2], Q = \reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$6507 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [1], Q = \reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$6506 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5406 [0], Q = \reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$6505 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [31], Q = \reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$6504 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [30], Q = \reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$6503 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [29], Q = \reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$6502 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [28], Q = \reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$6501 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [27], Q = \reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$6500 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [26], Q = \reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$6499 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [25], Q = \reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$6498 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [24], Q = \reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$6497 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [23], Q = \reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$6496 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [22], Q = \reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$6495 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [21], Q = \reg1 [21]).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 828 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~2299 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~10440 debug messages>
Removed a total of 3480 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 3323 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.25.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~639 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$13174 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4922 [0], Q = \reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$16341 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4438 [0], Q = \reg0 [0]).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

3.26.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.26.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~9 debug messages>

yosys> opt_merge

3.26.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff

3.26.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.26.10. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3012 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3000
        $auto$simplemap.cc:86:simplemap_bitop$2999

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3013 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3002
        $auto$simplemap.cc:86:simplemap_bitop$3001

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3014 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3004
        $auto$simplemap.cc:86:simplemap_bitop$3003

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3015 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3006
        $auto$simplemap.cc:86:simplemap_bitop$3005


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~4 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3019 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3002
        $auto$simplemap.cc:86:simplemap_bitop$3000

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3020 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3006
        $auto$simplemap.cc:86:simplemap_bitop$3004


yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~2 debug messages>

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3023 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3006
        $auto$simplemap.cc:86:simplemap_bitop$3002


yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~1 debug messages>

3.28.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.28.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.28.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.28.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr -full

3.28.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.28.34. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Extracted 3456 gates and 3840 wires to a netlist network with 382 inputs and 452 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/b21/abc_tmp.scr 
ABC:   #Luts =  1206  Max Lvl =  24  Avg Lvl =  12.96  [   0.58 sec. at Pass 0]
ABC:   #Luts =   958  Max Lvl =  34  Avg Lvl =  12.26  [  11.75 sec. at Pass 1]
ABC:   #Luts =   950  Max Lvl =  37  Avg Lvl =  12.54  [   1.52 sec. at Pass 2]
ABC:   #Luts =   906  Max Lvl =  38  Avg Lvl =  12.47  [  11.11 sec. at Pass 3]
ABC:   #Luts =   886  Max Lvl =  38  Avg Lvl =  12.56  [   2.36 sec. at Pass 4]
ABC:   #Luts =   868  Max Lvl =  36  Avg Lvl =  11.62  [  16.64 sec. at Pass 5]
ABC:   #Luts =   858  Max Lvl =  39  Avg Lvl =  12.38  [   3.05 sec. at Pass 6]
ABC:   #Luts =   851  Max Lvl =  37  Avg Lvl =  12.36  [  19.02 sec. at Pass 7]
ABC:   #Luts =   841  Max Lvl =  35  Avg Lvl =  12.15  [   2.60 sec. at Pass 8]
ABC:   #Luts =   832  Max Lvl =  37  Avg Lvl =  12.46  [  18.12 sec. at Pass 9]
ABC:   #Luts =   829  Max Lvl =  34  Avg Lvl =  12.06  [   2.09 sec. at Pass 10]
ABC:   #Luts =   818  Max Lvl =  33  Avg Lvl =  11.97  [  15.59 sec. at Pass 11]
ABC:   #Luts =   816  Max Lvl =  35  Avg Lvl =  12.21  [   2.36 sec. at Pass 12]
ABC:   #Luts =   806  Max Lvl =  32  Avg Lvl =  11.33  [  14.28 sec. at Pass 13]
ABC:   #Luts =   799  Max Lvl =  33  Avg Lvl =  11.22  [   2.27 sec. at Pass 14]
ABC:   #Luts =   792  Max Lvl =  34  Avg Lvl =  11.26  [  13.70 sec. at Pass 15]
ABC:   #Luts =   789  Max Lvl =  33  Avg Lvl =  11.91  [   3.02 sec. at Pass 16]
ABC:   #Luts =   782  Max Lvl =  33  Avg Lvl =  11.25  [  21.28 sec. at Pass 17]
ABC:   #Luts =   782  Max Lvl =  33  Avg Lvl =  11.25  [   3.59 sec. at Pass 18]
ABC:   #Luts =   777  Max Lvl =  34  Avg Lvl =  10.71  [  22.02 sec. at Pass 19]
ABC:   #Luts =   775  Max Lvl =  33  Avg Lvl =  11.34  [   5.00 sec. at Pass 20]
ABC:   #Luts =   771  Max Lvl =  35  Avg Lvl =  11.43  [  27.51 sec. at Pass 21]
ABC:   #Luts =   768  Max Lvl =  34  Avg Lvl =  10.65  [   3.66 sec. at Pass 22]
ABC:   #Luts =   768  Max Lvl =  34  Avg Lvl =  10.65  [  20.99 sec. at Pass 23]
ABC:   #Luts =   767  Max Lvl =  33  Avg Lvl =  11.10  [   3.93 sec. at Pass 24]
ABC:   #Luts =   766  Max Lvl =  33  Avg Lvl =  11.25  [  26.36 sec. at Pass 25]
ABC:   #Luts =   761  Max Lvl =  30  Avg Lvl =  10.74  [   4.41 sec. at Pass 26]
ABC:   #Luts =   761  Max Lvl =  30  Avg Lvl =  10.74  [  24.22 sec. at Pass 27]
ABC:   #Luts =   761  Max Lvl =  30  Avg Lvl =  10.74  [   3.60 sec. at Pass 28]
ABC:   #Luts =   760  Max Lvl =  32  Avg Lvl =  11.10  [  22.60 sec. at Pass 29]
ABC:   #Luts =   760  Max Lvl =  29  Avg Lvl =  10.11  [   4.81 sec. at Pass 30]
ABC:   #Luts =   758  Max Lvl =  32  Avg Lvl =  11.10  [  26.72 sec. at Pass 31]
ABC:   #Luts =   758  Max Lvl =  30  Avg Lvl =  10.89  [   4.82 sec. at Pass 32]
ABC:   #Luts =   757  Max Lvl =  31  Avg Lvl =  11.06  [  24.07 sec. at Pass 33]
ABC:   #Luts =   757  Max Lvl =  31  Avg Lvl =  11.06  [   4.49 sec. at Pass 34]
ABC:   #Luts =   757  Max Lvl =  31  Avg Lvl =  11.06  [  18.60 sec. at Pass 35]
ABC:   #Luts =   755  Max Lvl =  28  Avg Lvl =  10.03  [   3.88 sec. at Pass 36]
ABC:   #Luts =   755  Max Lvl =  28  Avg Lvl =  10.03  [  21.05 sec. at Pass 37]
ABC:   #Luts =   753  Max Lvl =  29  Avg Lvl =  10.88  [   4.07 sec. at Pass 38]
ABC:   #Luts =   752  Max Lvl =  29  Avg Lvl =  10.20  [  19.88 sec. at Pass 39]
ABC:   #Luts =   752  Max Lvl =  29  Avg Lvl =  10.20  [   4.56 sec. at Pass 40]
ABC:   #Luts =   752  Max Lvl =  29  Avg Lvl =  10.20  [  25.19 sec. at Pass 41]
ABC:   #Luts =   752  Max Lvl =  29  Avg Lvl =  10.20  [   4.36 sec. at Pass 42]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      752
ABC RESULTS:        internal signals:     3006
ABC RESULTS:           input signals:      382
ABC RESULTS:          output signals:      452
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 1229 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== b14 ===

   Number of wires:                570
   Number of wire bits:           1634
   Number of public wires:          15
   Number of public wire bits:     249
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1153
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     37
     $lut                          693
     $mux                            7
     adder_carry                   238


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== b14 ===

   Number of wires:                570
   Number of wire bits:           1634
   Number of public wires:          15
   Number of public wire bits:     249
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1153
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     37
     $lut                          693
     $mux                            7
     adder_carry                   238


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1266 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~15304 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6900 debug messages>
Removed a total of 2300 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2783 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~510 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 128 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Extracted 2635 gates and 3017 wires to a netlist network with 380 inputs and 385 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/b21/abc_tmp.scr 
ABC:   #Luts =   697  Max Lvl =  29  Avg Lvl =  10.41  [   0.42 sec. at Pass 0]
ABC:   #Luts =   697  Max Lvl =  29  Avg Lvl =  10.41  [  15.96 sec. at Pass 1]
ABC:   #Luts =   689  Max Lvl =  29  Avg Lvl =   9.78  [   2.79 sec. at Pass 2]
ABC:   #Luts =   689  Max Lvl =  29  Avg Lvl =   9.78  [  18.31 sec. at Pass 3]
ABC:   #Luts =   689  Max Lvl =  29  Avg Lvl =   9.78  [   3.37 sec. at Pass 4]
ABC:   #Luts =   689  Max Lvl =  29  Avg Lvl =   9.78  [  24.67 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      689
ABC RESULTS:        internal signals:     2252
ABC RESULTS:           input signals:      380
ABC RESULTS:          output signals:      385
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2350 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \b14

3.45.2. Analyzing design hierarchy..
Top module:  \b14
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== b14 ===

   Number of wires:                561
   Number of wire bits:           1625
   Number of public wires:          15
   Number of public wire bits:     249
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1142
     $lut                          689
     adder_carry                   238
     dffsre                        215


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b14'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: ed9d25ed68, CPU: user 17.79s system 0.15s, MEM: 56.64 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 2x abc (2827 sec), 0% 43x opt_expr (6 sec), ...
real 610.68
user 2668.92
sys 176.32
