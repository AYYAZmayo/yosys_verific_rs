
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k adder.v fadder.v tfl.v control.v conv2d.v

yosys> verific -vlog2k adder.v fadder.v tfl.v control.v conv2d.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adder.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'fadder.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tfl.v'
VERIFIC-WARNING [VERI-1407] tfl.v:385: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:260: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:254: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:248: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:241: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:237: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:236: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:225: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:221: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:219: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:218: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:217: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:216: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:215: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:214: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:213: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:212: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:211: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:210: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:209: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:206: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:160: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:158: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:156: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:149: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:144: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:129: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:128: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:5: attribute target identifier 'pad' not found in this scope
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'control.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'conv2d.v'

yosys> synth_rs -top conv2d -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top conv2d

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] conv2d.v:2: compiling module 'conv2d'
VERIFIC-INFO [VERI-1018] adder.v:1: compiling module 'myadder(WIDTH=20)'
VERIFIC-WARNING [VERI-1209] conv2d.v:418: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:435: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:442: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:449: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:456: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:463: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:470: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:477: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1173] conv2d.v:398: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:540: expression size 14 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1173] conv2d.v:527: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:606: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:630: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:638: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1173] conv2d.v:610: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:669: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:672: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:673: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:681: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:685: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:687: expression size 32 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] conv2d.v:688: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:689: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:717: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:720: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:721: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:729: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:733: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:735: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:736: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1173] conv2d.v:653: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:842: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:867: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:869: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:874: expression size 17 truncated to fit in target size 16
VERIFIC-WARNING [VERI-1173] conv2d.v:845: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] adder.v:1: compiling module 'myadder(WIDTH=24)'
VERIFIC-INFO [VERI-1018] adder.v:1: compiling module 'myadder(WIDTH=16)'
VERIFIC-INFO [VERI-1018] adder.v:1: compiling module 'myadder(WIDTH=12)'
VERIFIC-INFO [VERI-1018] fadder.v:1: compiling module 'fadder(WIDTH=12)'
VERIFIC-WARNING [VERI-1209] conv2d.v:1119: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1138: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1173] conv2d.v:1142: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1174] conv2d.v:1142: synthesis - simulation differences may occur when using parallel_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:1153: expression size 3 truncated to fit in target size 2
VERIFIC-WARNING [VERI-1209] conv2d.v:1156: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1169: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1173: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1181: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1199: expression size 17 truncated to fit in target size 16
VERIFIC-WARNING [VERI-1173] conv2d.v:1015: synthesis - simulation differences may occur when using full_case directive
Importing module conv2d.
Importing module fadder(WIDTH=12).
Importing module myadder(WIDTH=12).
Importing module myadder(WIDTH=16).
Importing module myadder(WIDTH=20).
Importing module myadder(WIDTH=24).

3.3.1. Analyzing design hierarchy..
Top module:  \conv2d
Used module:     \fadder(WIDTH=12)
Used module:     \myadder(WIDTH=12)
Used module:     \myadder(WIDTH=16)
Used module:     \myadder(WIDTH=24)
Used module:     \myadder(WIDTH=20)

3.3.2. Analyzing design hierarchy..
Top module:  \conv2d
Used module:     \fadder(WIDTH=12)
Used module:     \myadder(WIDTH=12)
Used module:     \myadder(WIDTH=16)
Used module:     \myadder(WIDTH=24)
Used module:     \myadder(WIDTH=20)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module myadder(WIDTH=24).
Optimizing module myadder(WIDTH=20).
Optimizing module myadder(WIDTH=16).
Optimizing module myadder(WIDTH=12).
Optimizing module fadder(WIDTH=12).
Optimizing module conv2d.
<suppressed ~168 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module myadder(WIDTH=24).
Deleting now unused module myadder(WIDTH=20).
Deleting now unused module myadder(WIDTH=16).
Deleting now unused module myadder(WIDTH=12).
Deleting now unused module fadder(WIDTH=12).
<suppressed ~21 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 4 unused cells and 1527 unused wires.
<suppressed ~143 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module conv2d...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $verific$i1019$conv2d.v:1124$2514: \filter_reload -> 1'0
      Replacing known input bits on port A of cell $verific$i1006$conv2d.v:1113$2505: \filter_reload -> 1'1
      Replacing known input bits on port A of cell $verific$i357$conv2d.v:607$1091: \i_bias_wen -> 1'0
      Replacing known input bits on port A of cell $verific$i722$conv2d.v:843$1305: \i_pixel_wen -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~115 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
    New ctrl vector for $pmux cell $verific$Select_1172$conv2d.v:1245$2595: { $verific$n11571$191 $verific$n11235$177 $verific$n11241$183 }
    New ctrl vector for $pmux cell $verific$Select_1175$conv2d.v:1245$2598: { $verific$n11235$177 $verific$n11241$183 }
    New ctrl vector for $pmux cell $verific$Select_1185$conv2d.v:1245$2607: { $verific$n11606$199 $verific$n11248$190 }
    New ctrl vector for $pmux cell $verific$Select_1188$conv2d.v:1245$2610: { $verific$n11608$201 $verific$n11609$202 }
    New ctrl vector for $pmux cell $verific$Select_1194$conv2d.v:1245$2614: { $verific$n11627$205 $verific$n11241$183 }
    New ctrl vector for $pmux cell $verific$Select_628$conv2d.v:784$1228: { $verific$n6554$85 $auto$opt_reduce.cc:134:opt_pmux$2690 $verific$n6557$88 }
    New ctrl vector for $pmux cell $verific$Select_629$conv2d.v:784$1229: { $verific$n6554$85 $auto$opt_reduce.cc:134:opt_pmux$2692 $verific$n6557$88 }
    New ctrl vector for $pmux cell $verific$Select_634$conv2d.v:784$1234: $auto$opt_reduce.cc:134:opt_pmux$2694
    New ctrl vector for $pmux cell $verific$Select_636$conv2d.v:784$1235: $auto$opt_reduce.cc:134:opt_pmux$2696
    New ctrl vector for $pmux cell $verific$Select_638$conv2d.v:784$1237: { $verific$n6554$85 $auto$opt_reduce.cc:134:opt_pmux$2698 $verific$n6557$88 }
    New ctrl vector for $pmux cell $verific$Select_820$conv2d.v:912$1362: { $verific$n8229$122 $verific$n8262$125 }
    New ctrl vector for $pmux cell $verific$Select_822$conv2d.v:912$1363: { $verific$n8229$122 $verific$n8262$125 }
    New ctrl vector for $pmux cell $verific$select_106$conv2d.v:223$774: { $verific$n851$8 $verific$n852$9 $verific$n853$10 $verific$n854$11 $verific$n856$13 $verific$n858$15 }
    New ctrl vector for $pmux cell $verific$select_1155$conv2d.v:1245$2578: { $verific$n11234$176 $verific$n11243$185 $auto$opt_reduce.cc:134:opt_pmux$2700 $verific$n11248$190 }
    New ctrl vector for $pmux cell $verific$select_1156$conv2d.v:1245$2579: { $auto$opt_reduce.cc:134:opt_pmux$2704 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$2702 }
    New ctrl vector for $pmux cell $verific$select_1157$conv2d.v:1245$2580: { $auto$opt_reduce.cc:134:opt_pmux$2708 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$2706 }
    New ctrl vector for $pmux cell $verific$select_1158$conv2d.v:1245$2581: { $auto$opt_reduce.cc:134:opt_pmux$2712 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$2710 }
    New ctrl vector for $pmux cell $verific$select_1159$conv2d.v:1245$2582: { $auto$opt_reduce.cc:134:opt_pmux$2716 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$2714 }
    New ctrl vector for $pmux cell $verific$select_1160$conv2d.v:1245$2583: { $auto$opt_reduce.cc:134:opt_pmux$2720 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$2718 }
    New ctrl vector for $pmux cell $verific$select_1161$conv2d.v:1245$2584: { $auto$opt_reduce.cc:134:opt_pmux$2724 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$2722 }
    New ctrl vector for $pmux cell $verific$select_1162$conv2d.v:1245$2585: { $auto$opt_reduce.cc:134:opt_pmux$2728 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$2726 }
    New ctrl vector for $pmux cell $verific$select_1163$conv2d.v:1245$2586: { $auto$opt_reduce.cc:134:opt_pmux$2732 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$2730 }
    New ctrl vector for $pmux cell $verific$select_1164$conv2d.v:1245$2587: { $verific$n11234$176 $verific$n11235$177 $verific$n11236$178 $verific$n11237$179 $auto$opt_reduce.cc:134:opt_pmux$2734 $verific$n11240$182 $verific$n11241$183 $verific$n11242$184 $verific$n11243$185 $verific$n11244$186 $verific$n11245$187 $verific$n11246$188 $verific$n11247$189 $verific$n11248$190 }
    New ctrl vector for $pmux cell $verific$select_1165$conv2d.v:1245$2588: { $verific$n11235$177 $verific$n11241$183 $verific$n11243$185 $verific$n11244$186 $auto$opt_reduce.cc:134:opt_pmux$2736 }
    New ctrl vector for $pmux cell $verific$select_1166$conv2d.v:1245$2589: { $auto$opt_reduce.cc:134:opt_pmux$2740 $auto$opt_reduce.cc:134:opt_pmux$2738 }
    New ctrl vector for $pmux cell $verific$select_1167$conv2d.v:1245$2590: { $auto$opt_reduce.cc:134:opt_pmux$2744 $auto$opt_reduce.cc:134:opt_pmux$2742 }
    New ctrl vector for $pmux cell $verific$select_1168$conv2d.v:1245$2591: { $verific$n11235$177 $verific$n11243$185 $auto$opt_reduce.cc:134:opt_pmux$2746 }
    New ctrl vector for $pmux cell $verific$select_1169$conv2d.v:1245$2592: { $verific$n11235$177 $verific$n11245$187 $auto$opt_reduce.cc:134:opt_pmux$2748 }
    New ctrl vector for $pmux cell $verific$select_1170$conv2d.v:1245$2593: { $verific$n11235$177 $auto$opt_reduce.cc:134:opt_pmux$2750 }
    New ctrl vector for $pmux cell $verific$select_1173$conv2d.v:1245$2596: { $verific$n11235$177 $verific$n11241$183 $verific$n11244$186 $auto$opt_reduce.cc:134:opt_pmux$2752 }
    New ctrl vector for $pmux cell $verific$select_1180$conv2d.v:1245$2603: { $verific$n11243$185 $auto$opt_reduce.cc:134:opt_pmux$2754 }
    New ctrl vector for $pmux cell $verific$select_1181$conv2d.v:1245$2604: { $verific$n11240$182 $verific$n11241$183 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$2758 $auto$opt_reduce.cc:134:opt_pmux$2756 }
    New ctrl vector for $pmux cell $verific$select_1182$conv2d.v:1245$2605: { $verific$n11240$182 $verific$n11243$185 $auto$opt_reduce.cc:134:opt_pmux$2760 }
    New ctrl vector for $pmux cell $verific$select_1192$conv2d.v:1245$2612: { $verific$n11241$183 $verific$n11242$184 $verific$n11243$185 $verific$n11244$186 $auto$opt_reduce.cc:134:opt_pmux$2762 }
    New ctrl vector for $pmux cell $verific$select_408$conv2d.v:648$1125: { $verific$n5060$47 $auto$opt_reduce.cc:134:opt_pmux$2764 }
    New ctrl vector for $pmux cell $verific$select_409$conv2d.v:648$1126: $auto$opt_reduce.cc:134:opt_pmux$2766
    New ctrl vector for $pmux cell $verific$select_415$conv2d.v:648$1132: { $verific$n5061$48 $auto$opt_reduce.cc:134:opt_pmux$2768 }
    New ctrl vector for $pmux cell $verific$select_623$conv2d.v:784$1223: { $verific$n6555$86 $verific$n6556$87 $verific$n6557$88 }
    New ctrl vector for $pmux cell $verific$select_625$conv2d.v:784$1225: { $verific$n6554$85 $verific$n6555$86 $auto$opt_reduce.cc:134:opt_pmux$2770 }
    New ctrl vector for $pmux cell $verific$select_626$conv2d.v:784$1226: { $verific$n6555$86 $verific$n6556$87 $verific$n6557$88 }
    New ctrl vector for $pmux cell $verific$select_632$conv2d.v:784$1232: { $verific$n6555$86 $verific$n6556$87 $auto$opt_reduce.cc:134:opt_pmux$2772 }
    New ctrl vector for $pmux cell $verific$select_75$conv2d.v:164$770: { $verific$n851$8 $verific$n852$9 $verific$n853$10 $verific$n854$11 $verific$n856$13 $verific$n858$15 }
    New ctrl vector for $pmux cell $verific$select_817$conv2d.v:912$1359: { $verific$n8229$122 $auto$opt_reduce.cc:134:opt_pmux$2774 }
    New ctrl vector for $pmux cell $verific$select_818$conv2d.v:912$1360: { $auto$opt_reduce.cc:134:opt_pmux$2776 $verific$n8231$124 }
    New ctrl vector for $pmux cell $verific$select_823$conv2d.v:912$1364: { $verific$n8228$121 $verific$n8229$122 $auto$opt_reduce.cc:134:opt_pmux$2778 }
    New ctrl vector for $pmux cell $verific$select_824$conv2d.v:912$1365: { $verific$n8229$122 $verific$n8230$123 $verific$n8231$124 }
    New ctrl vector for $pmux cell $verific$select_828$conv2d.v:912$1369: { $verific$n8229$122 $auto$opt_reduce.cc:134:opt_pmux$2780 }
    New ctrl vector for $pmux cell $verific$select_830$conv2d.v:912$1371: { $verific$n8229$122 $auto$opt_reduce.cc:134:opt_pmux$2782 }
  Optimizing cells in module \conv2d.
Performed a total of 50 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~72 debug messages>
Removed a total of 24 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$write2_reg$conv2d.v:1246$2653 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$wdata2_reg$conv2d.v:785$1259 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$total_pixels_done_reg$conv2d.v:1246$2639 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$total_filters_done_reg$conv2d.v:1246$2633 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat37_reg$conv2d.v:92$736 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat26_reg$conv2d.v:92$735 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat15_reg$conv2d.v:92$734 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat04_reg$conv2d.v:92$733 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$running_reg$conv2d.v:1246$2635 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$result_base_reg$conv2d.v:785$1257 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$reset_bias_address_reg$conv2d.v:785$1282 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixels_read_reg$conv2d.v:913$1374 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixel_start_reg$conv2d.v:913$1381 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixel_select_reg$conv2d.v:1246$2651 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$p2_raddr_reg$conv2d.v:1246$2621 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$p1_raddr_reg$conv2d.v:1246$2620 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$next_buffer_reg$conv2d.v:1246$2650 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_more_pixels_reg$conv2d.v:1246$2638 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_more_filters_reg$conv2d.v:1246$2637 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_ext_acc_reg$conv2d.v:1246$2640 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_buffer_reg$conv2d.v:913$1383 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$last_start2d_reg$conv2d.v:785$1281 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_wen_reg$conv2d.v:785$1268 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_req_reg$conv2d.v:785$1267 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_rdata_reg$conv2d.v:785$1284 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wreq_reg$conv2d.v:785$1266 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wen_reg$conv2d.v:785$1276 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wdata_reg$conv2d.v:785$1258 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_rreq_reg$conv2d.v:785$1265 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_rdata_reg$conv2d.v:785$1283 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_wen_reg$conv2d.v:913$1376 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_req_reg$conv2d.v:913$1377 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_rdata_reg$conv2d.v:913$1384 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_sat_reg$conv2d.v:1246$2624 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_wen_reg$conv2d.v:913$1378 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_wdata_reg$conv2d.v:913$1380 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_waddr_reg$conv2d.v:913$1379 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_raddr_reg$conv2d.v:1246$2629 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_outsel_reg$conv2d.v:1246$2628 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mult2_coef_reg$conv2d.v:1246$2655 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mult1_coef_reg$conv2d.v:1246$2654 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_math_mode_reg$conv2d.v:1246$2625 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mac_clr_reg$conv2d.v:1246$2626 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mac_clken_reg$conv2d.v:1246$2627 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_wdata_reg$conv2d.v:785$1272 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_waddr_reg$conv2d.v:785$1271 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_raddr_reg$conv2d.v:1246$2630 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter2_wen_reg$conv2d.v:785$1274 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter1_wen_reg$conv2d.v:785$1273 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_done2d_reg$conv2d.v:1246$2634 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_csel_reg$conv2d.v:1246$2623 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_wen_reg$conv2d.v:785$1269 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_wdata_reg$conv2d.v:785$1270 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_waddr_reg$conv2d.v:785$1262 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_raddr_reg$conv2d.v:785$1261 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i3_t2_waddr_reg$conv2d.v:785$1240 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i2_t2_waddr_reg$conv2d.v:785$1239 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i1_t2_waddr_reg$conv2d.v:785$1238 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_writechannels_reg$conv2d.v:785$1280 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_loadacc_reg$conv2d.v:785$1246 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getpixels_reg$conv2d.v:913$1372 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getfilters_reg$conv2d.v:785$1244 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getbias_reg$conv2d.v:785$1245 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_conv2d_reg$conv2d.v:1246$2622 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fract_select_reg$conv2d.v:1246$2652 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_loaded_reg$conv2d.v:785$1241 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_done_reg$conv2d.v:1246$2632 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_complete_reg$conv2d.v:785$1279 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_stride_reg$conv2d.v:785$1242 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_start_reg$conv2d.v:785$1277 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_space_left_reg$conv2d.v:785$1278 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_reload_reg$conv2d.v:1246$2636 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_channels_reg$conv2d.v:785$1275 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$copy_acc_reg$conv2d.v:1246$2641 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$channels_loaded_reg$conv2d.v:913$1373 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$channels_done_reg$conv2d.v:1246$2631 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$buffers_used_reg$conv2d.v:913$1382 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias_loaded_reg$conv2d.v:785$1264 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias_base_addr_reg$conv2d.v:785$1263 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias7_reg$conv2d.v:785$1254 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias6_reg$conv2d.v:785$1253 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias5_reg$conv2d.v:785$1252 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias4_reg$conv2d.v:785$1251 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias3_reg$conv2d.v:785$1250 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias2_reg$conv2d.v:785$1249 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias1_reg$conv2d.v:785$1248 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias0_reg$conv2d.v:785$1247 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$add_stride_reg$conv2d.v:785$1243 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc7_reg$conv2d.v:1246$2649 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc6_reg$conv2d.v:1246$2648 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc5_reg$conv2d.v:1246$2647 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc4_reg$conv2d.v:1246$2646 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc3_reg$conv2d.v:1246$2645 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc2_reg$conv2d.v:1246$2644 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc1_reg$conv2d.v:1246$2643 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc0_reg$conv2d.v:1246$2642 ($aldff) from module conv2d.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 4 unused cells and 30 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~113 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking conv2d.fract_select as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking conv2d.fsm_conv2d as FSM state register:
    Circuit seems to be self-resetting.
Not marking conv2d.fsm_getbias as FSM state register:
    Circuit seems to be self-resetting.
Not marking conv2d.fsm_getpixels as FSM state register:
    Circuit seems to be self-resetting.
Not marking conv2d.i_outsel as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~113 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$total_filters_done_reg$conv2d.v:1246$2633 ($adff) from module conv2d (D = $verific$n11561$706, Q = \total_filters_done).
Adding EN signal on $verific$running_reg$conv2d.v:1246$2635 ($adff) from module conv2d (D = $verific$n11630$207, Q = \running).
Adding EN signal on $verific$pixels_read_reg$conv2d.v:913$1374 ($adff) from module conv2d (D = $verific$n8232$533, Q = \pixels_read).
Adding EN signal on $verific$pixel_start_reg$conv2d.v:913$1381 ($adff) from module conv2d (D = $verific$n8265$127, Q = \pixel_start).
Adding EN signal on $verific$pixel_select_reg$conv2d.v:1246$2651 ($adff) from module conv2d (D = $verific$n11589$708, Q = \pixel_select).
Adding EN signal on $verific$next_buffer_reg$conv2d.v:1246$2650 ($adff) from module conv2d (D = $verific$n11586$196, Q = \next_buffer).
Adding EN signal on $verific$load_more_filters_reg$conv2d.v:1246$2637 ($adff) from module conv2d (D = $verific$n11628$206, Q = \load_more_filters).
Adding EN signal on $verific$load_buffer_reg$conv2d.v:913$1383 ($adff) from module conv2d (D = $verific$n8263$126, Q = \load_buffer).
Adding EN signal on $verific$i_tcdm3_wen_reg$conv2d.v:785$1268 ($adff) from module conv2d (D = $verific$n5108$51, Q = \i_tcdm3_wen).
Adding EN signal on $verific$i_tcdm3_req_reg$conv2d.v:785$1267 ($adff) from module conv2d (D = $verific$n5107$50, Q = \i_tcdm3_req).
Adding EN signal on $verific$i_tcdm3_raddr_reg$conv2d.v:785$1260 ($aldff) from module conv2d (D = $verific$n5086$416 [1:0], Q = \i_tcdm3_raddr [1:0]).
Adding EN signal on $verific$i_tcdm3_raddr_reg$conv2d.v:785$1260 ($aldff) from module conv2d (D = $verific$n5086$416 [19:2], Q = \i_tcdm3_raddr [19:2]).
Adding EN signal on $verific$i_tcdm2_wen_reg$conv2d.v:785$1276 ($adff) from module conv2d (D = $verific$n6632$90, Q = \i_tcdm2_wen).
Adding EN signal on $verific$i_tcdm2_rreq_reg$conv2d.v:785$1265 ($adff) from module conv2d (D = $verific$n6631$89, Q = \i_tcdm2_rreq).
Adding EN signal on $verific$i_tcdm2_raddr_reg$conv2d.v:785$1255 ($aldff) from module conv2d (D = $verific$n6610$490 [1:0], Q = \i_tcdm2_raddr [1:0]).
Adding EN signal on $verific$i_tcdm2_raddr_reg$conv2d.v:785$1255 ($aldff) from module conv2d (D = $verific$n6610$490 [19:2], Q = \i_tcdm2_raddr [19:2]).
Adding EN signal on $verific$i_tcdm1_wen_reg$conv2d.v:913$1376 ($adff) from module conv2d (D = $verific$n8295$129, Q = \i_tcdm1_wen).
Adding EN signal on $verific$i_tcdm1_req_reg$conv2d.v:913$1377 ($adff) from module conv2d (D = $verific$n8294$128, Q = \i_tcdm1_req).
Adding EN signal on $verific$i_tcdm1_addr_reg$conv2d.v:913$1375 ($aldff) from module conv2d (D = $verific$n8266$535 [1:0], Q = \i_tcdm1_addr [1:0]).
Adding EN signal on $verific$i_tcdm1_addr_reg$conv2d.v:913$1375 ($aldff) from module conv2d (D = $verific$n8266$535 [19:2], Q = \i_tcdm1_addr [19:2]).
Adding EN signal on $verific$i_pixel_wdata_reg$conv2d.v:913$1380 ($adff) from module conv2d (D = $verific$n8296$538, Q = \i_pixel_wdata).
Adding EN signal on $verific$i_pixel_raddr_reg$conv2d.v:1246$2629 ($adff) from module conv2d (D = $verific$n11531$704, Q = \i_pixel_raddr).
Adding EN signal on $verific$i_outsel_reg$conv2d.v:1246$2628 ($adff) from module conv2d (D = $verific$n11458$701, Q = \i_outsel).
Adding EN signal on $verific$i_mult2_coef_reg$conv2d.v:1246$2655 ($adff) from module conv2d (D = $verific$n11498$703, Q = \i_mult2_coef).
Adding EN signal on $verific$i_mult1_coef_reg$conv2d.v:1246$2654 ($adff) from module conv2d (D = $verific$n11465$702, Q = \i_mult1_coef).
Adding EN signal on $verific$i_math_mode_reg$conv2d.v:1246$2625 ($adff) from module conv2d (D = $verific$n11249$691, Q = \i_math_mode).
Adding EN signal on $verific$i_mac_clr_reg$conv2d.v:1246$2626 ($adff) from module conv2d (D = $verific$n11610$203, Q = \i_mac_clr).
Adding EN signal on $verific$i_mac_clken_reg$conv2d.v:1246$2627 ($adff) from module conv2d (D = $verific$n11613$204, Q = \i_mac_clken).
Adding EN signal on $verific$i_filter_wdata_reg$conv2d.v:785$1272 ($adff) from module conv2d (D = $verific$n6647$493, Q = \i_filter_wdata).
Adding EN signal on $verific$i_filter_waddr_reg$conv2d.v:785$1271 ($adff) from module conv2d (D = $verific$n6558$486 [0], Q = \i_filter_waddr [0]).
Adding EN signal on $verific$i_filter_waddr_reg$conv2d.v:785$1271 ($adff) from module conv2d (D = $verific$n6558$486 [11:1], Q = \i_filter_waddr [11:1]).
Adding EN signal on $verific$i_filter_raddr_reg$conv2d.v:1246$2630 ($adff) from module conv2d (D = $verific$n11614$711 [1:0], Q = \i_filter_raddr [1:0]).
Adding EN signal on $verific$i_filter_raddr_reg$conv2d.v:1246$2630 ($adff) from module conv2d (D = $verific$n11614$711 [11:2], Q = \i_filter_raddr [11:2]).
Adding EN signal on $verific$i_done2d_reg$conv2d.v:1246$2634 ($adff) from module conv2d (D = $verific$n11607$200, Q = \i_done2d).
Adding EN signal on $verific$i_csel_reg$conv2d.v:1246$2623 ($adff) from module conv2d (D = $verific$n11632$209, Q = \i_csel).
Adding EN signal on $verific$i_bias_wdata_reg$conv2d.v:785$1270 ($adff) from module conv2d (D = $verific$n5123$419, Q = \i_bias_wdata).
Adding EN signal on $verific$i_bias_waddr_reg$conv2d.v:785$1262 ($adff) from module conv2d (D = $verific$n5063$414 [11:2], Q = \i_bias_waddr [11:2]).
Adding EN signal on $verific$i_bias_waddr_reg$conv2d.v:785$1262 ($adff) from module conv2d (D = $verific$n5063$414 [1:0], Q = \i_bias_waddr [1:0]).
Adding EN signal on $verific$fsm_getpixels_reg$conv2d.v:913$1372 ($adff) from module conv2d (D = $verific$n8290$537, Q = \fsm_getpixels).
Adding EN signal on $verific$fsm_getfilters_reg$conv2d.v:785$1244 ($adff) from module conv2d (D = $verific$n6643$492, Q = \fsm_getfilters).
Adding EN signal on $verific$fsm_getbias_reg$conv2d.v:785$1245 ($adff) from module conv2d (D = $verific$n5119$418, Q = \fsm_getbias).
Adding EN signal on $verific$fsm_conv2d_reg$conv2d.v:1246$2622 ($adff) from module conv2d (D = $verific$n11452$700, Q = \fsm_conv2d).
Adding EN signal on $verific$fract_select_reg$conv2d.v:1246$2652 ($adff) from module conv2d (D = $verific$n11592$709, Q = \fract_select).
Adding EN signal on $verific$filters_loaded_reg$conv2d.v:785$1241 ($adff) from module conv2d (D = $verific$n6600$489, Q = \filters_loaded).
Adding EN signal on $verific$filters_done_reg$conv2d.v:1246$2632 ($adff) from module conv2d (D = $verific$n11573$707 [2:0], Q = \filters_done [2:0]).
Adding EN signal on $verific$filters_done_reg$conv2d.v:1246$2632 ($adff) from module conv2d (D = $verific$n11573$707 [8:3], Q = \filters_done [8:3]).
Adding EN signal on $verific$filter_stride_reg$conv2d.v:785$1242 ($adff) from module conv2d (D = $verific$n6586$488, Q = \filter_stride).
Adding EN signal on $verific$filter_start_reg$conv2d.v:785$1277 ($adff) from module conv2d (D = $verific$n6694$94, Q = \filter_start).
Adding EN signal on $verific$filter_space_left_reg$conv2d.v:785$1278 ($adff) from module conv2d (D = $verific$n6571$487, Q = \filter_space_left).
Adding EN signal on $verific$filter_reload_reg$conv2d.v:1246$2636 ($adff) from module conv2d (D = $verific$n11572$192, Q = \filter_reload).
Adding EN signal on $verific$filter_channels_reg$conv2d.v:785$1275 ($adff) from module conv2d (D = $verific$n6633$491, Q = \filter_channels).
Adding EN signal on $verific$channels_loaded_reg$conv2d.v:913$1373 ($adff) from module conv2d (D = $verific$n8330$539 [1:0], Q = \channels_loaded [1:0]).
Adding EN signal on $verific$channels_loaded_reg$conv2d.v:913$1373 ($adff) from module conv2d (D = $verific$n8330$539 [8:2], Q = \channels_loaded [8:2]).
Adding EN signal on $verific$channels_done_reg$conv2d.v:1246$2631 ($adff) from module conv2d (D = $verific$n11595$710 [1:0], Q = \channels_done [1:0]).
Adding EN signal on $verific$channels_done_reg$conv2d.v:1246$2631 ($adff) from module conv2d (D = $verific$n11595$710 [8:2], Q = \channels_done [8:2]).
Adding EN signal on $verific$buffers_used_reg$conv2d.v:913$1382 ($adff) from module conv2d (D = $verific$n8287$536 [1], Q = \buffers_used [1]).
Adding EN signal on $verific$buffers_used_reg$conv2d.v:913$1382 ($adff) from module conv2d (D = $verific$n8287$536 [0], Q = \buffers_used [0]).
Adding EN signal on $verific$bias_loaded_reg$conv2d.v:785$1264 ($adff) from module conv2d (D = $verific$n5109$417, Q = \bias_loaded).
Adding EN signal on $verific$acc7_reg$conv2d.v:1246$2649 ($adff) from module conv2d (D = $verific$n11427$699 [7:0], Q = \acc7 [7:0]).
Adding EN signal on $verific$acc7_reg$conv2d.v:1246$2649 ($adff) from module conv2d (D = $verific$n11427$699 [23:16], Q = \acc7 [23:16]).
Adding EN signal on $verific$acc7_reg$conv2d.v:1246$2649 ($adff) from module conv2d (D = $verific$n11427$699 [15:8], Q = \acc7 [15:8]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1246$2648 ($adff) from module conv2d (D = $verific$n11402$698 [7:0], Q = \acc6 [7:0]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1246$2648 ($adff) from module conv2d (D = $verific$n11402$698 [23:16], Q = \acc6 [23:16]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1246$2648 ($adff) from module conv2d (D = $verific$n11402$698 [15:8], Q = \acc6 [15:8]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1246$2647 ($adff) from module conv2d (D = $verific$n11377$697 [7:0], Q = \acc5 [7:0]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1246$2647 ($adff) from module conv2d (D = $verific$n11377$697 [23:16], Q = \acc5 [23:16]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1246$2647 ($adff) from module conv2d (D = $verific$n11377$697 [15:8], Q = \acc5 [15:8]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1246$2646 ($adff) from module conv2d (D = $verific$n11352$696 [7:0], Q = \acc4 [7:0]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1246$2646 ($adff) from module conv2d (D = $verific$n11352$696 [23:16], Q = \acc4 [23:16]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1246$2646 ($adff) from module conv2d (D = $verific$n11352$696 [15:8], Q = \acc4 [15:8]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1246$2645 ($adff) from module conv2d (D = $verific$n11327$695 [7:0], Q = \acc3 [7:0]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1246$2645 ($adff) from module conv2d (D = $verific$n11327$695 [23:16], Q = \acc3 [23:16]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1246$2645 ($adff) from module conv2d (D = $verific$n11327$695 [15:8], Q = \acc3 [15:8]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1246$2644 ($adff) from module conv2d (D = $verific$n11302$694 [7:0], Q = \acc2 [7:0]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1246$2644 ($adff) from module conv2d (D = $verific$n11302$694 [23:16], Q = \acc2 [23:16]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1246$2644 ($adff) from module conv2d (D = $verific$n11302$694 [15:8], Q = \acc2 [15:8]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1246$2643 ($adff) from module conv2d (D = $verific$n11277$693 [7:0], Q = \acc1 [7:0]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1246$2643 ($adff) from module conv2d (D = $verific$n11277$693 [23:16], Q = \acc1 [23:16]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1246$2643 ($adff) from module conv2d (D = $verific$n11277$693 [15:8], Q = \acc1 [15:8]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1246$2642 ($adff) from module conv2d (D = $verific$n11252$692 [7:0], Q = \acc0 [7:0]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1246$2642 ($adff) from module conv2d (D = $verific$n11252$692 [23:16], Q = \acc0 [23:16]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1246$2642 ($adff) from module conv2d (D = $verific$n11252$692 [15:8], Q = \acc0 [15:8]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3300 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3300 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3284 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3284 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3189 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3189 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3189 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3056 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3056 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3030 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$bias_base_addr_reg$conv2d.v:785$1263 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$bias_base_addr_reg$conv2d.v:785$1263 ($adff) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3251 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3251 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3251 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$filters_complete_reg$conv2d.v:785$1279 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$filters_complete_reg$conv2d.v:785$1279 ($adff) from module conv2d.
Setting constant 0-bit at position 2 on $verific$filters_complete_reg$conv2d.v:785$1279 ($adff) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3180 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3180 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3180 ($adffe) from module conv2d.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$3156 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3145 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3134 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3121 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3114 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3114 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$i_pixel_waddr_reg$conv2d.v:913$1379 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$i_pixel_waddr_reg$conv2d.v:913$1379 ($adff) from module conv2d.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 39 unused cells and 39 unused wires.
<suppressed ~40 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~101 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~113 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~510 debug messages>
Removed a total of 170 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3513 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3513 ($adff) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3513 ($adff) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2783 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2783 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2783 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$i_bias_raddr_reg$conv2d.v:785$1261 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$i_bias_raddr_reg$conv2d.v:785$1261 ($adff) from module conv2d.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 1 unused cells and 170 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~118 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 4) from port B of cell conv2d.$verific$equal_67$conv2d.v:121$756 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_68$conv2d.v:122$757 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_69$conv2d.v:123$758 ($eq).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k1.$verific$add_3$adder.v:8$2687 ($add).
Removed top 1 bits (of 25) from port Y of cell conv2d.$flatten\k1.$verific$add_3$adder.v:8$2687 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$add_190$conv2d.v:409$995 ($add).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_202$conv2d.v:418$1004 ($add).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k0.$verific$add_3$adder.v:8$2687 ($add).
Removed top 1 bits (of 25) from port Y of cell conv2d.$flatten\k0.$verific$add_3$adder.v:8$2687 ($add).
Removed top 10 bits (of 11) from port B of cell conv2d.$verific$add_291$conv2d.v:540$1054 ($add).
Removed top 1 bits (of 4) from mux cell conv2d.$verific$mux_324$conv2d.v:579$1072 ($mux).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_354$conv2d.v:606$1089 ($add).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_381$conv2d.v:630$1103 ($add).
Removed top 7 bits (of 20) from port B of cell conv2d.$flatten\t2_3.$verific$add_3$adder.v:8$2681 ($add).
Removed top 1 bits (of 21) from port Y of cell conv2d.$flatten\t2_3.$verific$add_3$adder.v:8$2681 ($add).
Removed top 8 bits (of 9) from port B of cell conv2d.$verific$add_387$conv2d.v:638$1107 ($add).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$equal_406$conv2d.v:622$1123 ($eq).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$select_414$conv2d.v:648$1131 ($pmux).
Removed top 10 bits (of 11) from port B of cell conv2d.$verific$add_433$conv2d.v:669$1141 ($add).
Removed top 1 bits (of 15) from port A of cell conv2d.$verific$sub_436$conv2d.v:672$1143 ($sub).
Removed top 11 bits (of 15) from port B of cell conv2d.$verific$sub_436$conv2d.v:672$1143 ($sub).
Removed top 1 bits (of 15) from port Y of cell conv2d.$verific$sub_436$conv2d.v:672$1143 ($sub).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_451$conv2d.v:681$1153 ($add).
Removed top 8 bits (of 9) from port B of cell conv2d.$verific$add_457$conv2d.v:685$1159 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_460$conv2d.v:686$1161 ($eq).
Removed top 1 bits (of 14) from port A of cell conv2d.$verific$sub_461$conv2d.v:687$1162 ($sub).
Removed top 10 bits (of 14) from port B of cell conv2d.$verific$sub_461$conv2d.v:687$1162 ($sub).
Removed top 1 bits (of 14) from port Y of cell conv2d.$verific$sub_461$conv2d.v:687$1162 ($sub).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_463$conv2d.v:688$1165 ($add).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_465$conv2d.v:689$1167 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$LessThan_468$conv2d.v:690$1169 ($lt).
Removed top 2 bits (of 14) from port A of cell conv2d.$verific$LessThan_469$conv2d.v:691$1170 ($le).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_483$conv2d.v:702$1175 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_493$conv2d.v:707$1182 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_503$conv2d.v:712$1189 ($mux).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$equal_620$conv2d.v:667$1220 ($eq).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$select_631$conv2d.v:784$1231 ($pmux).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_719$conv2d.v:842$1303 ($add).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_745$conv2d.v:867$1314 ($add).
Removed top 6 bits (of 7) from port B of cell conv2d.$verific$add_748$conv2d.v:869$1316 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_751$conv2d.v:870$1318 ($eq).
Removed top 15 bits (of 16) from port B of cell conv2d.$verific$add_759$conv2d.v:874$1322 ($add).
Removed top 1 bits (of 17) from port B of cell conv2d.$verific$equal_763$conv2d.v:876$1324 ($eq).
Removed top 2 bits (of 3) from mux cell conv2d.$verific$mux_767$conv2d.v:882$1325 ($mux).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$equal_814$conv2d.v:860$1356 ($eq).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$select_825$conv2d.v:912$1366 ($pmux).
Removed top 17 bits (of 20) from port B of cell conv2d.$flatten\t2_2.$verific$add_3$adder.v:8$2681 ($add).
Removed top 1 bits (of 21) from port Y of cell conv2d.$flatten\t2_2.$verific$add_3$adder.v:8$2681 ($add).
Removed top 11 bits (of 20) from port B of cell conv2d.$flatten\t2_1.$verific$add_3$adder.v:8$2681 ($add).
Removed top 1 bits (of 21) from port Y of cell conv2d.$flatten\t2_1.$verific$add_3$adder.v:8$2681 ($add).
Removed top 1 bits (of 6) from mux cell conv2d.$verific$mux_1269$conv2d.v:713$2451 ($mux).
Removed top 3 bits (of 5) from mux cell conv2d.$verific$mux_928$conv2d.v:1048$2461 ($mux).
Removed top 3 bits (of 5) from mux cell conv2d.$verific$mux_940$conv2d.v:1059$2468 ($mux).
Removed top 3 bits (of 5) from mux cell conv2d.$verific$mux_948$conv2d.v:1060$2476 ($mux).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_1010$conv2d.v:1119$2507 ($add).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$add_1055$conv2d.v:1153$2526 ($add).
Removed top 6 bits (of 7) from port B of cell conv2d.$verific$add_1058$conv2d.v:1156$2528 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_1061$conv2d.v:1157$2530 ($eq).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_1083$conv2d.v:1181$2544 ($add).
Removed top 1 bits (of 7) from port B of cell conv2d.$verific$equal_1086$conv2d.v:1182$2546 ($eq).
Removed top 15 bits (of 16) from port B of cell conv2d.$verific$add_1102$conv2d.v:1199$2550 ($add).
Removed top 4 bits (of 5) from mux cell conv2d.$verific$mux_1120$conv2d.v:1223$2555 ($mux).
Removed top 1 bits (of 4) from port B of cell conv2d.$verific$equal_1144$conv2d.v:1071$2567 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$verific$equal_1147$conv2d.v:1105$2570 ($eq).
Removed top 3 bits (of 4) from port B of cell conv2d.$verific$equal_1149$conv2d.v:1141$2572 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_1150$conv2d.v:1177$2573 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_1151$conv2d.v:1187$2574 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$verific$equal_1152$conv2d.v:1202$2575 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$verific$equal_1153$conv2d.v:1225$2576 ($eq).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$select_1164$conv2d.v:1245$2587 ($pmux).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k2.$verific$add_3$adder.v:8$2687 ($add).
Removed top 1 bits (of 25) from port Y of cell conv2d.$flatten\k2.$verific$add_3$adder.v:8$2687 ($add).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k3.$verific$add_3$adder.v:8$2687 ($add).
Removed top 1 bits (of 25) from port Y of cell conv2d.$flatten\k3.$verific$add_3$adder.v:8$2687 ($add).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k4.$verific$add_3$adder.v:8$2687 ($add).
Removed top 1 bits (of 25) from port Y of cell conv2d.$flatten\k4.$verific$add_3$adder.v:8$2687 ($add).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k5.$verific$add_3$adder.v:8$2687 ($add).
Removed top 1 bits (of 25) from port Y of cell conv2d.$flatten\k5.$verific$add_3$adder.v:8$2687 ($add).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k6.$verific$add_3$adder.v:8$2687 ($add).
Removed top 1 bits (of 25) from port Y of cell conv2d.$flatten\k6.$verific$add_3$adder.v:8$2687 ($add).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k7.$verific$add_3$adder.v:8$2687 ($add).
Removed top 1 bits (of 25) from port Y of cell conv2d.$flatten\k7.$verific$add_3$adder.v:8$2687 ($add).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_0.$verific$add_3$adder.v:8$2675 ($add).
Removed top 1 bits (of 17) from port Y of cell conv2d.$flatten\k16_0.$verific$add_3$adder.v:8$2675 ($add).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_1.$verific$add_3$adder.v:8$2675 ($add).
Removed top 1 bits (of 17) from port Y of cell conv2d.$flatten\k16_1.$verific$add_3$adder.v:8$2675 ($add).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_2.$verific$add_3$adder.v:8$2675 ($add).
Removed top 1 bits (of 17) from port Y of cell conv2d.$flatten\k16_2.$verific$add_3$adder.v:8$2675 ($add).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_3.$verific$add_3$adder.v:8$2675 ($add).
Removed top 1 bits (of 17) from port Y of cell conv2d.$flatten\k16_3.$verific$add_3$adder.v:8$2675 ($add).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_4.$verific$add_3$adder.v:8$2675 ($add).
Removed top 1 bits (of 17) from port Y of cell conv2d.$flatten\k16_4.$verific$add_3$adder.v:8$2675 ($add).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_5.$verific$add_3$adder.v:8$2675 ($add).
Removed top 1 bits (of 17) from port Y of cell conv2d.$flatten\k16_5.$verific$add_3$adder.v:8$2675 ($add).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_6.$verific$add_3$adder.v:8$2675 ($add).
Removed top 1 bits (of 17) from port Y of cell conv2d.$flatten\k16_6.$verific$add_3$adder.v:8$2675 ($add).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_7.$verific$add_3$adder.v:8$2675 ($add).
Removed top 1 bits (of 17) from port Y of cell conv2d.$flatten\k16_7.$verific$add_3$adder.v:8$2675 ($add).
Removed top 9 bits (of 12) from port B of cell conv2d.$flatten\pk1.$verific$add_3$adder.v:8$2669 ($add).
Removed top 1 bits (of 13) from port Y of cell conv2d.$flatten\pk1.$verific$add_3$adder.v:8$2669 ($add).
Removed top 12 bits (of 13) from port B of cell conv2d.$flatten\pk2.$verific$add_4$fadder.v:9$2663 ($add).
Removed top 1 bits (of 13) from port Y of cell conv2d.$flatten\pk2.$verific$add_4$fadder.v:9$2663 ($add).
Removed top 1 bits (of 13) from port A of cell conv2d.$flatten\pk2.$verific$add_4$fadder.v:9$2663 ($add).
Removed top 1 bits (of 13) from port Y of cell conv2d.$flatten\pk2.$verific$add_3$fadder.v:9$2662 ($add).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_370$conv2d.v:620$1098 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_396$conv2d.v:640$1116 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_404$conv2d.v:646$1121 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_618$conv2d.v:782$1218 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_787$conv2d.v:889$1343 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_795$conv2d.v:897$1347 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_804$conv2d.v:907$1351 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_956$conv2d.v:1061$2484 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_993$conv2d.v:1103$2498 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_1019$conv2d.v:1124$2515 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_1077$conv2d.v:1174$2541 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_1139$conv2d.v:1243$2562 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_389$conv2d.v:639$1109 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_614$conv2d.v:779$1216 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_776$conv2d.v:888$1332 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_792$conv2d.v:894$1346 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_1006$conv2d.v:1113$2506 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_1070$conv2d.v:1170$2536 ($mux).
Removed top 1 bits (of 5) from wire conv2d.$verific$n10063$611.
Removed top 1 bits (of 5) from wire conv2d.$verific$n10104$613.
Removed top 1 bits (of 5) from wire conv2d.$verific$n10167$619.
Removed top 1 bits (of 5) from wire conv2d.$verific$n10505$645.
Removed top 1 bits (of 5) from wire conv2d.$verific$n10567$649.
Removed top 4 bits (of 5) from wire conv2d.$verific$n11104$682.
Removed top 1 bits (of 5) from wire conv2d.$verific$n11228$690.
Removed top 1 bits (of 5) from wire conv2d.$verific$n11452$700.
Removed top 1 bits (of 4) from wire conv2d.$verific$n4415$375.
Removed top 1 bits (of 3) from wire conv2d.$verific$n4829$399.
Removed top 1 bits (of 3) from wire conv2d.$verific$n4944$406.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5015$410.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5056$413.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5119$418.
Removed top 1 bits (of 15) from wire conv2d.$verific$n5356$428.
Removed top 1 bits (of 14) from wire conv2d.$verific$n5560$437.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5678$443.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5731$448.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5784$453.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5891$460.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6531$483.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6550$485.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6643$492.
Removed top 2 bits (of 3) from wire conv2d.$verific$n8023$517.
Removed top 1 bits (of 3) from wire conv2d.$verific$n8062$521.
Removed top 1 bits (of 3) from wire conv2d.$verific$n8155$527.
Removed top 1 bits (of 3) from wire conv2d.$verific$n8166$528.
Removed top 1 bits (of 3) from wire conv2d.$verific$n8175$529.
Removed top 1 bits (of 3) from wire conv2d.$verific$n8290$537.
Removed top 3 bits (of 5) from wire conv2d.$verific$n9639$580.
Removed top 3 bits (of 5) from wire conv2d.$verific$n9719$584.
Removed top 3 bits (of 5) from wire conv2d.$verific$n9774$589.
Removed top 1 bits (of 5) from wire conv2d.$verific$n9833$594.
Removed top 1 bits (of 5) from wire conv2d.fsm_conv2d.
Removed top 1 bits (of 3) from wire conv2d.fsm_getbias.
Removed top 1 bits (of 3) from wire conv2d.fsm_getfilters.
Removed top 1 bits (of 3) from wire conv2d.fsm_getpixels.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 122 unused cells and 244 unused wires.
<suppressed ~144 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module conv2d:
  creating $macc model for $flatten\k0.$verific$add_3$adder.v:8$2687 ($add).
  creating $macc model for $flatten\k1.$verific$add_3$adder.v:8$2687 ($add).
  creating $macc model for $flatten\k16_0.$verific$add_3$adder.v:8$2675 ($add).
  creating $macc model for $flatten\k16_1.$verific$add_3$adder.v:8$2675 ($add).
  creating $macc model for $flatten\k16_2.$verific$add_3$adder.v:8$2675 ($add).
  creating $macc model for $flatten\k16_3.$verific$add_3$adder.v:8$2675 ($add).
  creating $macc model for $flatten\k16_4.$verific$add_3$adder.v:8$2675 ($add).
  creating $macc model for $flatten\k16_5.$verific$add_3$adder.v:8$2675 ($add).
  creating $macc model for $flatten\k16_6.$verific$add_3$adder.v:8$2675 ($add).
  creating $macc model for $flatten\k16_7.$verific$add_3$adder.v:8$2675 ($add).
  creating $macc model for $flatten\k2.$verific$add_3$adder.v:8$2687 ($add).
  creating $macc model for $flatten\k3.$verific$add_3$adder.v:8$2687 ($add).
  creating $macc model for $flatten\k4.$verific$add_3$adder.v:8$2687 ($add).
  creating $macc model for $flatten\k5.$verific$add_3$adder.v:8$2687 ($add).
  creating $macc model for $flatten\k6.$verific$add_3$adder.v:8$2687 ($add).
  creating $macc model for $flatten\k7.$verific$add_3$adder.v:8$2687 ($add).
  creating $macc model for $flatten\pk1.$verific$add_3$adder.v:8$2669 ($add).
  creating $macc model for $flatten\pk2.$verific$add_3$fadder.v:9$2662 ($add).
  creating $macc model for $flatten\pk2.$verific$add_4$fadder.v:9$2663 ($add).
  creating $macc model for $flatten\t2_1.$verific$add_3$adder.v:8$2681 ($add).
  creating $macc model for $flatten\t2_2.$verific$add_3$adder.v:8$2681 ($add).
  creating $macc model for $flatten\t2_3.$verific$add_3$adder.v:8$2681 ($add).
  creating $macc model for $verific$add_1010$conv2d.v:1119$2507 ($add).
  creating $macc model for $verific$add_1055$conv2d.v:1153$2526 ($add).
  creating $macc model for $verific$add_1058$conv2d.v:1156$2528 ($add).
  creating $macc model for $verific$add_1083$conv2d.v:1181$2544 ($add).
  creating $macc model for $verific$add_1102$conv2d.v:1199$2550 ($add).
  creating $macc model for $verific$add_190$conv2d.v:409$995 ($add).
  creating $macc model for $verific$add_202$conv2d.v:418$1004 ($add).
  creating $macc model for $verific$add_291$conv2d.v:540$1054 ($add).
  creating $macc model for $verific$add_354$conv2d.v:606$1089 ($add).
  creating $macc model for $verific$add_381$conv2d.v:630$1103 ($add).
  creating $macc model for $verific$add_387$conv2d.v:638$1107 ($add).
  creating $macc model for $verific$add_433$conv2d.v:669$1141 ($add).
  creating $macc model for $verific$add_451$conv2d.v:681$1153 ($add).
  creating $macc model for $verific$add_457$conv2d.v:685$1159 ($add).
  creating $macc model for $verific$add_463$conv2d.v:688$1165 ($add).
  creating $macc model for $verific$add_465$conv2d.v:689$1167 ($add).
  creating $macc model for $verific$add_719$conv2d.v:842$1303 ($add).
  creating $macc model for $verific$add_745$conv2d.v:867$1314 ($add).
  creating $macc model for $verific$add_748$conv2d.v:869$1316 ($add).
  creating $macc model for $verific$add_759$conv2d.v:874$1322 ($add).
  creating $macc model for $verific$add_895$conv2d.v:1018$2433 ($add).
  creating $macc model for $verific$add_897$conv2d.v:1019$2435 ($add).
  creating $macc model for $verific$add_899$conv2d.v:1020$2437 ($add).
  creating $macc model for $verific$add_901$conv2d.v:1021$2439 ($add).
  creating $macc model for $verific$add_903$conv2d.v:1022$2441 ($add).
  creating $macc model for $verific$add_905$conv2d.v:1023$2443 ($add).
  creating $macc model for $verific$add_907$conv2d.v:1024$2445 ($add).
  creating $macc model for $verific$add_909$conv2d.v:1025$2447 ($add).
  creating $macc model for $verific$add_921$conv2d.v:1041$2457 ($add).
  creating $macc model for $verific$sub_436$conv2d.v:672$1143 ($sub).
  creating $macc model for $verific$sub_461$conv2d.v:687$1162 ($sub).
  creating $macc model for $verific$sub_692$conv2d.v:804$1291 ($sub).
  creating $macc model for $verific$sub_694$conv2d.v:805$1293 ($sub).
  creating $macc model for $verific$sub_696$conv2d.v:806$1295 ($sub).
  creating $macc model for $verific$sub_698$conv2d.v:807$1297 ($sub).
  merging $macc model for $flatten\pk2.$verific$add_3$fadder.v:9$2662 into $flatten\pk2.$verific$add_4$fadder.v:9$2663.
  creating $alu model for $macc $verific$sub_696$conv2d.v:806$1295.
  creating $alu model for $macc $verific$sub_694$conv2d.v:805$1293.
  creating $alu model for $macc $verific$sub_692$conv2d.v:804$1291.
  creating $alu model for $macc $verific$sub_461$conv2d.v:687$1162.
  creating $alu model for $macc $verific$sub_436$conv2d.v:672$1143.
  creating $alu model for $macc $verific$add_921$conv2d.v:1041$2457.
  creating $alu model for $macc $verific$add_909$conv2d.v:1025$2447.
  creating $alu model for $macc $verific$add_907$conv2d.v:1024$2445.
  creating $alu model for $macc $verific$add_905$conv2d.v:1023$2443.
  creating $alu model for $macc $verific$add_903$conv2d.v:1022$2441.
  creating $alu model for $macc $verific$add_901$conv2d.v:1021$2439.
  creating $alu model for $macc $verific$add_899$conv2d.v:1020$2437.
  creating $alu model for $macc $verific$add_897$conv2d.v:1019$2435.
  creating $alu model for $macc $verific$add_895$conv2d.v:1018$2433.
  creating $alu model for $macc $verific$add_759$conv2d.v:874$1322.
  creating $alu model for $macc $verific$add_748$conv2d.v:869$1316.
  creating $alu model for $macc $verific$add_745$conv2d.v:867$1314.
  creating $alu model for $macc $verific$add_719$conv2d.v:842$1303.
  creating $alu model for $macc $verific$add_465$conv2d.v:689$1167.
  creating $alu model for $macc $verific$add_463$conv2d.v:688$1165.
  creating $alu model for $macc $verific$add_457$conv2d.v:685$1159.
  creating $alu model for $macc $verific$add_451$conv2d.v:681$1153.
  creating $alu model for $macc $verific$add_433$conv2d.v:669$1141.
  creating $alu model for $macc $verific$add_387$conv2d.v:638$1107.
  creating $alu model for $macc $verific$add_381$conv2d.v:630$1103.
  creating $alu model for $macc $verific$add_354$conv2d.v:606$1089.
  creating $alu model for $macc $verific$add_291$conv2d.v:540$1054.
  creating $alu model for $macc $verific$add_202$conv2d.v:418$1004.
  creating $alu model for $macc $verific$add_190$conv2d.v:409$995.
  creating $alu model for $macc $verific$add_1102$conv2d.v:1199$2550.
  creating $alu model for $macc $verific$add_1083$conv2d.v:1181$2544.
  creating $alu model for $macc $verific$add_1058$conv2d.v:1156$2528.
  creating $alu model for $macc $verific$add_1055$conv2d.v:1153$2526.
  creating $alu model for $macc $verific$add_1010$conv2d.v:1119$2507.
  creating $alu model for $macc $flatten\t2_3.$verific$add_3$adder.v:8$2681.
  creating $alu model for $macc $flatten\t2_2.$verific$add_3$adder.v:8$2681.
  creating $alu model for $macc $flatten\t2_1.$verific$add_3$adder.v:8$2681.
  creating $alu model for $macc $flatten\pk2.$verific$add_4$fadder.v:9$2663.
  creating $alu model for $macc $verific$sub_698$conv2d.v:807$1297.
  creating $alu model for $macc $flatten\pk1.$verific$add_3$adder.v:8$2669.
  creating $alu model for $macc $flatten\k7.$verific$add_3$adder.v:8$2687.
  creating $alu model for $macc $flatten\k6.$verific$add_3$adder.v:8$2687.
  creating $alu model for $macc $flatten\k5.$verific$add_3$adder.v:8$2687.
  creating $alu model for $macc $flatten\k4.$verific$add_3$adder.v:8$2687.
  creating $alu model for $macc $flatten\k3.$verific$add_3$adder.v:8$2687.
  creating $alu model for $macc $flatten\k2.$verific$add_3$adder.v:8$2687.
  creating $alu model for $macc $flatten\k16_7.$verific$add_3$adder.v:8$2675.
  creating $alu model for $macc $flatten\k16_6.$verific$add_3$adder.v:8$2675.
  creating $alu model for $macc $flatten\k16_5.$verific$add_3$adder.v:8$2675.
  creating $alu model for $macc $flatten\k16_4.$verific$add_3$adder.v:8$2675.
  creating $alu model for $macc $flatten\k16_3.$verific$add_3$adder.v:8$2675.
  creating $alu model for $macc $flatten\k16_2.$verific$add_3$adder.v:8$2675.
  creating $alu model for $macc $flatten\k16_1.$verific$add_3$adder.v:8$2675.
  creating $alu model for $macc $flatten\k16_0.$verific$add_3$adder.v:8$2675.
  creating $alu model for $macc $flatten\k1.$verific$add_3$adder.v:8$2687.
  creating $alu model for $macc $flatten\k0.$verific$add_3$adder.v:8$2687.
  creating $alu model for $verific$LessThan_468$conv2d.v:690$1169 ($lt): new $alu
  creating $alu model for $verific$LessThan_469$conv2d.v:691$1170 ($le): new $alu
  creating $alu model for $verific$LessThan_916$conv2d.v:1033$2453 ($lt): new $alu
  creating $alu cell for $verific$LessThan_916$conv2d.v:1033$2453: $auto$alumacc.cc:485:replace_alu$4335
  creating $alu cell for $verific$LessThan_469$conv2d.v:691$1170: $auto$alumacc.cc:485:replace_alu$4340
  creating $alu cell for $verific$LessThan_468$conv2d.v:690$1169: $auto$alumacc.cc:485:replace_alu$4349
  creating $alu cell for $flatten\k0.$verific$add_3$adder.v:8$2687: $auto$alumacc.cc:485:replace_alu$4360
  creating $alu cell for $flatten\k1.$verific$add_3$adder.v:8$2687: $auto$alumacc.cc:485:replace_alu$4363
  creating $alu cell for $flatten\k16_0.$verific$add_3$adder.v:8$2675: $auto$alumacc.cc:485:replace_alu$4366
  creating $alu cell for $flatten\k16_1.$verific$add_3$adder.v:8$2675: $auto$alumacc.cc:485:replace_alu$4369
  creating $alu cell for $flatten\k16_2.$verific$add_3$adder.v:8$2675: $auto$alumacc.cc:485:replace_alu$4372
  creating $alu cell for $flatten\k16_3.$verific$add_3$adder.v:8$2675: $auto$alumacc.cc:485:replace_alu$4375
  creating $alu cell for $flatten\k16_4.$verific$add_3$adder.v:8$2675: $auto$alumacc.cc:485:replace_alu$4378
  creating $alu cell for $flatten\k16_5.$verific$add_3$adder.v:8$2675: $auto$alumacc.cc:485:replace_alu$4381
  creating $alu cell for $flatten\k16_6.$verific$add_3$adder.v:8$2675: $auto$alumacc.cc:485:replace_alu$4384
  creating $alu cell for $flatten\k16_7.$verific$add_3$adder.v:8$2675: $auto$alumacc.cc:485:replace_alu$4387
  creating $alu cell for $flatten\k2.$verific$add_3$adder.v:8$2687: $auto$alumacc.cc:485:replace_alu$4390
  creating $alu cell for $flatten\k3.$verific$add_3$adder.v:8$2687: $auto$alumacc.cc:485:replace_alu$4393
  creating $alu cell for $flatten\k4.$verific$add_3$adder.v:8$2687: $auto$alumacc.cc:485:replace_alu$4396
  creating $alu cell for $flatten\k5.$verific$add_3$adder.v:8$2687: $auto$alumacc.cc:485:replace_alu$4399
  creating $alu cell for $flatten\k6.$verific$add_3$adder.v:8$2687: $auto$alumacc.cc:485:replace_alu$4402
  creating $alu cell for $flatten\k7.$verific$add_3$adder.v:8$2687: $auto$alumacc.cc:485:replace_alu$4405
  creating $alu cell for $flatten\pk1.$verific$add_3$adder.v:8$2669: $auto$alumacc.cc:485:replace_alu$4408
  creating $alu cell for $verific$sub_698$conv2d.v:807$1297: $auto$alumacc.cc:485:replace_alu$4411
  creating $alu cell for $flatten\pk2.$verific$add_4$fadder.v:9$2663: $auto$alumacc.cc:485:replace_alu$4414
  creating $alu cell for $flatten\t2_1.$verific$add_3$adder.v:8$2681: $auto$alumacc.cc:485:replace_alu$4417
  creating $alu cell for $flatten\t2_2.$verific$add_3$adder.v:8$2681: $auto$alumacc.cc:485:replace_alu$4420
  creating $alu cell for $flatten\t2_3.$verific$add_3$adder.v:8$2681: $auto$alumacc.cc:485:replace_alu$4423
  creating $alu cell for $verific$add_1010$conv2d.v:1119$2507: $auto$alumacc.cc:485:replace_alu$4426
  creating $alu cell for $verific$add_1055$conv2d.v:1153$2526: $auto$alumacc.cc:485:replace_alu$4429
  creating $alu cell for $verific$add_1058$conv2d.v:1156$2528: $auto$alumacc.cc:485:replace_alu$4432
  creating $alu cell for $verific$add_1083$conv2d.v:1181$2544: $auto$alumacc.cc:485:replace_alu$4435
  creating $alu cell for $verific$add_1102$conv2d.v:1199$2550: $auto$alumacc.cc:485:replace_alu$4438
  creating $alu cell for $verific$add_190$conv2d.v:409$995: $auto$alumacc.cc:485:replace_alu$4441
  creating $alu cell for $verific$add_202$conv2d.v:418$1004: $auto$alumacc.cc:485:replace_alu$4444
  creating $alu cell for $verific$add_291$conv2d.v:540$1054: $auto$alumacc.cc:485:replace_alu$4447
  creating $alu cell for $verific$add_354$conv2d.v:606$1089: $auto$alumacc.cc:485:replace_alu$4450
  creating $alu cell for $verific$add_381$conv2d.v:630$1103: $auto$alumacc.cc:485:replace_alu$4453
  creating $alu cell for $verific$add_387$conv2d.v:638$1107: $auto$alumacc.cc:485:replace_alu$4456
  creating $alu cell for $verific$add_433$conv2d.v:669$1141: $auto$alumacc.cc:485:replace_alu$4459
  creating $alu cell for $verific$add_451$conv2d.v:681$1153: $auto$alumacc.cc:485:replace_alu$4462
  creating $alu cell for $verific$add_457$conv2d.v:685$1159: $auto$alumacc.cc:485:replace_alu$4465
  creating $alu cell for $verific$add_463$conv2d.v:688$1165: $auto$alumacc.cc:485:replace_alu$4468
  creating $alu cell for $verific$add_465$conv2d.v:689$1167: $auto$alumacc.cc:485:replace_alu$4471
  creating $alu cell for $verific$add_719$conv2d.v:842$1303: $auto$alumacc.cc:485:replace_alu$4474
  creating $alu cell for $verific$add_745$conv2d.v:867$1314: $auto$alumacc.cc:485:replace_alu$4477
  creating $alu cell for $verific$add_748$conv2d.v:869$1316: $auto$alumacc.cc:485:replace_alu$4480
  creating $alu cell for $verific$add_759$conv2d.v:874$1322: $auto$alumacc.cc:485:replace_alu$4483
  creating $alu cell for $verific$add_895$conv2d.v:1018$2433: $auto$alumacc.cc:485:replace_alu$4486
  creating $alu cell for $verific$add_897$conv2d.v:1019$2435: $auto$alumacc.cc:485:replace_alu$4489
  creating $alu cell for $verific$add_899$conv2d.v:1020$2437: $auto$alumacc.cc:485:replace_alu$4492
  creating $alu cell for $verific$add_901$conv2d.v:1021$2439: $auto$alumacc.cc:485:replace_alu$4495
  creating $alu cell for $verific$add_903$conv2d.v:1022$2441: $auto$alumacc.cc:485:replace_alu$4498
  creating $alu cell for $verific$add_905$conv2d.v:1023$2443: $auto$alumacc.cc:485:replace_alu$4501
  creating $alu cell for $verific$add_907$conv2d.v:1024$2445: $auto$alumacc.cc:485:replace_alu$4504
  creating $alu cell for $verific$add_909$conv2d.v:1025$2447: $auto$alumacc.cc:485:replace_alu$4507
  creating $alu cell for $verific$add_921$conv2d.v:1041$2457: $auto$alumacc.cc:485:replace_alu$4510
  creating $alu cell for $verific$sub_436$conv2d.v:672$1143: $auto$alumacc.cc:485:replace_alu$4513
  creating $alu cell for $verific$sub_461$conv2d.v:687$1162: $auto$alumacc.cc:485:replace_alu$4516
  creating $alu cell for $verific$sub_692$conv2d.v:804$1291: $auto$alumacc.cc:485:replace_alu$4519
  creating $alu cell for $verific$sub_694$conv2d.v:805$1293: $auto$alumacc.cc:485:replace_alu$4522
  creating $alu cell for $verific$sub_696$conv2d.v:806$1295: $auto$alumacc.cc:485:replace_alu$4525
  created 59 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~12 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~127 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4068: { $verific$n11248$190 $verific$n11247$189 $verific$n11246$188 $verific$n11245$187 $verific$n11244$186 $verific$n11243$185 $verific$n11239$181 $verific$n11238$180 $verific$n11237$179 $verific$n11236$178 $verific$n11235$177 $verific$n11234$176 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3962: { $verific$n11248$190 $verific$n11247$189 $verific$n11246$188 $verific$n11244$186 $verific$n11243$185 $verific$n11242$184 $verific$n11239$181 $verific$n11238$180 $verific$n11237$179 $verific$n11236$178 $verific$n11234$176 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3942: { $auto$rtlil.cc:2398:Or$3931 $verific$n11239$181 $verific$n11238$180 $verific$n11237$179 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4040: { $verific$n11248$190 $verific$n11247$189 $verific$n11246$188 $verific$n11245$187 $verific$n11244$186 $verific$n11243$185 $verific$n11242$184 $verific$n11239$181 $verific$n11238$180 $verific$n11237$179 $verific$n11236$178 $verific$n11235$177 $verific$n11234$176 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3946: { $auto$rtlil.cc:2398:Or$3919 $verific$n11248$190 $verific$n11247$189 $verific$n11246$188 $verific$n11243$185 $verific$n11242$184 }
  Optimizing cells in module \conv2d.
Performed a total of 5 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 1 unused cells and 40 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~134 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> stat

3.22. Printing statistics.

=== conv2d ===

   Number of wires:               1145
   Number of wire bits:          10539
   Number of public wires:         259
   Number of public wire bits:    3733
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                897
     $adff                          43
     $adffe                         69
     $aldff                          1
     $aldffe                         6
     $alu                           59
     $and                            9
     $bmux                          22
     $eq                            40
     $logic_not                      5
     $mux                          426
     $ne                            57
     $not                           44
     $or                            27
     $reduce_and                    46
     $reduce_or                     42
     $xor                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $or.
Using template $paramod$7e0667b276190bf0f5cbed1755185a5461dc0c9d\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$e68908968f6fc409e8109e805aa973e950e2c2b2\_80_rs_alu for cells of type $alu.
Using template $paramod$ea402187f386206c0840504755479bf827f47707\_90_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
Using template $paramod$c703ee6d780d90e162c7eed92bfd050bee00636f\_90_alu for cells of type $alu.
Using template $paramod$b2626aff51a34e60b9c57dceb41667aaf5650a38\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using template $paramod$f28fc3f2e267d7716249e826e8c90c34ca9542c1\_90_alu for cells of type $alu.
Using template $paramod$49641a5ace7a8dbedd31c417f5a1b54fcecf6c7d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $aldff.
Using extmapper simplemap for cells of type $aldffe.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod$0a77e3c00010cb33e399decd813a7380c6e25cba\_90_alu for cells of type $alu.
Using template $paramod$f30f8fc2e30bd83d28cb1ad43b9d9ec083109075\_90_alu for cells of type $alu.
Using template $paramod$0d6d95e3fa0eb6b4a427f21fbcbdc6321e6ab338\_80_rs_alu for cells of type $alu.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$b57fb48f94699401bf4faed190e075278680ae09\_80_rs_alu for cells of type $alu.
Using template $paramod$e6b2d1d39ccd3e56f9ee66bced1b5381ffd5e84a\_90_alu for cells of type $alu.
Using template $paramod$46d3f1a4a915912bab1067a0beb0fb376719baeb\_90_alu for cells of type $alu.
Using template $paramod$403c17aef119cccdd585ba431bb1c77ec6e3c700\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$d305a30c4cb819236c1200875202f330c981285f\_90_alu for cells of type $alu.
Using template $paramod$e7805029c1165837427dbe14a2d7866b011821bd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
No more expansions possible.
<suppressed ~6534 debug messages>

yosys> stat

3.24. Printing statistics.

=== conv2d ===

   Number of wires:               4173
   Number of wire bits:          67931
   Number of public wires:         259
   Number of public wire bits:    3733
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              17083
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_AND_                       1332
     $_DFFE_PN0N_                   99
     $_DFFE_PN0P_                  373
     $_DFFE_PN1N_                    1
     $_DFFE_PN1P_                   21
     $_DFF_PN0_                    567
     $_DFF_PN1_                      3
     $_MUX_                      10541
     $_NOT_                        904
     $_OR_                        1141
     $_XOR_                       1617
     adder_carry                   404


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~6565 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~3408 debug messages>
Removed a total of 1136 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$17550 ($_DFFE_PN0P_) from module conv2d (D = $auto$rtlil.cc:2464:Mux$4161 [2], Q = \filter_stride [2]).
Adding EN signal on $auto$ff.cc:262:slice$17548 ($_DFFE_PN0P_) from module conv2d (D = $auto$rtlil.cc:2464:Mux$4161 [0], Q = \filter_stride [0]).
Adding EN signal on $auto$ff.cc:262:slice$17549 ($_DFFE_PN0P_) from module conv2d (D = $auto$rtlil.cc:2464:Mux$4161 [1], Q = \filter_stride [1]).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 1633 unused cells and 2745 unused wires.
<suppressed ~1634 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~28 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~57 debug messages>
Removed a total of 19 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$17679 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6050 [11], Q = \bias_base_addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$17678 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6050 [10], Q = \bias_base_addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$17677 ($_DFF_PN1_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6050 [9], Q = \bias_base_addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$17676 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6050 [8], Q = \bias_base_addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$17675 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6050 [7], Q = \bias_base_addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$17674 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6050 [6], Q = \bias_base_addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$17673 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6050 [5], Q = \bias_base_addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$16184 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6234 [11], Q = \i_bias_raddr [11]).
Adding EN signal on $auto$ff.cc:262:slice$16183 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6234 [10], Q = \i_bias_raddr [10]).
Adding EN signal on $auto$ff.cc:262:slice$16182 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6234 [9], Q = \i_bias_raddr [9]).
Adding EN signal on $auto$ff.cc:262:slice$16181 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6234 [8], Q = \i_bias_raddr [8]).
Adding EN signal on $auto$ff.cc:262:slice$16180 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6234 [7], Q = \i_bias_raddr [7]).
Adding EN signal on $auto$ff.cc:262:slice$16179 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6234 [6], Q = \i_bias_raddr [6]).
Adding EN signal on $auto$ff.cc:262:slice$16178 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6234 [5], Q = \i_bias_raddr [5]).
Adding EN signal on $auto$ff.cc:262:slice$12453 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10255 [3], Q = \fsm_writechannels [3]).
Adding EN signal on $auto$ff.cc:262:slice$12452 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10255 [2], Q = \fsm_writechannels [2]).
Adding EN signal on $auto$ff.cc:262:slice$12451 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10255 [1], Q = \fsm_writechannels [1]).
Adding EN signal on $auto$ff.cc:262:slice$12450 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10255 [0], Q = \fsm_writechannels [0]).
Adding EN signal on $auto$ff.cc:262:slice$12413 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10752, Q = \i_tcdm2_wreq).
Adding EN signal on $auto$ff.cc:262:slice$12390 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [31], Q = \wdata2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$12389 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [30], Q = \wdata2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$12388 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [29], Q = \wdata2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$12387 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [28], Q = \wdata2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$12386 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [27], Q = \wdata2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$12385 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [26], Q = \wdata2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$12384 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [25], Q = \wdata2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$12383 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [24], Q = \wdata2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$12382 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [23], Q = \wdata2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12381 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [22], Q = \wdata2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12380 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [21], Q = \wdata2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12379 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [20], Q = \wdata2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12378 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [19], Q = \wdata2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12377 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [18], Q = \wdata2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12376 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [17], Q = \wdata2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12375 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [16], Q = \wdata2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12374 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [15], Q = \wdata2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12373 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [14], Q = \wdata2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12372 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [13], Q = \wdata2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12371 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [12], Q = \wdata2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12370 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [11], Q = \wdata2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12369 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [10], Q = \wdata2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12368 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [9], Q = \wdata2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12367 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [8], Q = \wdata2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12366 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [7], Q = \wdata2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12365 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [6], Q = \wdata2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12364 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [5], Q = \wdata2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12363 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [4], Q = \wdata2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12362 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [3], Q = \wdata2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12361 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [2], Q = \wdata2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12360 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [1], Q = \wdata2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12359 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10711 [0], Q = \wdata2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12358 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [31], Q = \i_tcdm2_wdata [31]).
Adding EN signal on $auto$ff.cc:262:slice$12357 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [30], Q = \i_tcdm2_wdata [30]).
Adding EN signal on $auto$ff.cc:262:slice$12356 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [29], Q = \i_tcdm2_wdata [29]).
Adding EN signal on $auto$ff.cc:262:slice$12355 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [28], Q = \i_tcdm2_wdata [28]).
Adding EN signal on $auto$ff.cc:262:slice$12354 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [27], Q = \i_tcdm2_wdata [27]).
Adding EN signal on $auto$ff.cc:262:slice$12353 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [26], Q = \i_tcdm2_wdata [26]).
Adding EN signal on $auto$ff.cc:262:slice$12352 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [25], Q = \i_tcdm2_wdata [25]).
Adding EN signal on $auto$ff.cc:262:slice$12351 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [24], Q = \i_tcdm2_wdata [24]).
Adding EN signal on $auto$ff.cc:262:slice$12350 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [23], Q = \i_tcdm2_wdata [23]).
Adding EN signal on $auto$ff.cc:262:slice$12349 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [22], Q = \i_tcdm2_wdata [22]).
Adding EN signal on $auto$ff.cc:262:slice$12348 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [21], Q = \i_tcdm2_wdata [21]).
Adding EN signal on $auto$ff.cc:262:slice$12347 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [20], Q = \i_tcdm2_wdata [20]).
Adding EN signal on $auto$ff.cc:262:slice$12346 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [19], Q = \i_tcdm2_wdata [19]).
Adding EN signal on $auto$ff.cc:262:slice$12345 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [18], Q = \i_tcdm2_wdata [18]).
Adding EN signal on $auto$ff.cc:262:slice$12344 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [17], Q = \i_tcdm2_wdata [17]).
Adding EN signal on $auto$ff.cc:262:slice$12343 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [16], Q = \i_tcdm2_wdata [16]).
Adding EN signal on $auto$ff.cc:262:slice$12342 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [15], Q = \i_tcdm2_wdata [15]).
Adding EN signal on $auto$ff.cc:262:slice$12341 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [14], Q = \i_tcdm2_wdata [14]).
Adding EN signal on $auto$ff.cc:262:slice$12340 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [13], Q = \i_tcdm2_wdata [13]).
Adding EN signal on $auto$ff.cc:262:slice$12339 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [12], Q = \i_tcdm2_wdata [12]).
Adding EN signal on $auto$ff.cc:262:slice$12338 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [11], Q = \i_tcdm2_wdata [11]).
Adding EN signal on $auto$ff.cc:262:slice$12337 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [10], Q = \i_tcdm2_wdata [10]).
Adding EN signal on $auto$ff.cc:262:slice$12336 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [9], Q = \i_tcdm2_wdata [9]).
Adding EN signal on $auto$ff.cc:262:slice$12335 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [8], Q = \i_tcdm2_wdata [8]).
Adding EN signal on $auto$ff.cc:262:slice$12334 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [7], Q = \i_tcdm2_wdata [7]).
Adding EN signal on $auto$ff.cc:262:slice$12333 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [6], Q = \i_tcdm2_wdata [6]).
Adding EN signal on $auto$ff.cc:262:slice$12332 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [5], Q = \i_tcdm2_wdata [5]).
Adding EN signal on $auto$ff.cc:262:slice$12331 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [4], Q = \i_tcdm2_wdata [4]).
Adding EN signal on $auto$ff.cc:262:slice$12330 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [3], Q = \i_tcdm2_wdata [3]).
Adding EN signal on $auto$ff.cc:262:slice$12329 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [2], Q = \i_tcdm2_wdata [2]).
Adding EN signal on $auto$ff.cc:262:slice$12328 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [1], Q = \i_tcdm2_wdata [1]).
Adding EN signal on $auto$ff.cc:262:slice$12327 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11205 [0], Q = \i_tcdm2_wdata [0]).
Adding EN signal on $auto$ff.cc:262:slice$12326 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [19], Q = \result_base [19]).
Adding EN signal on $auto$ff.cc:262:slice$12325 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [18], Q = \result_base [18]).
Adding EN signal on $auto$ff.cc:262:slice$12324 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [17], Q = \result_base [17]).
Adding EN signal on $auto$ff.cc:262:slice$12323 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [16], Q = \result_base [16]).
Adding EN signal on $auto$ff.cc:262:slice$12322 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [15], Q = \result_base [15]).
Adding EN signal on $auto$ff.cc:262:slice$12321 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [14], Q = \result_base [14]).
Adding EN signal on $auto$ff.cc:262:slice$12320 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [13], Q = \result_base [13]).
Adding EN signal on $auto$ff.cc:262:slice$12319 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [12], Q = \result_base [12]).
Adding EN signal on $auto$ff.cc:262:slice$12318 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [11], Q = \result_base [11]).
Adding EN signal on $auto$ff.cc:262:slice$12317 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [10], Q = \result_base [10]).
Adding EN signal on $auto$ff.cc:262:slice$12316 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [9], Q = \result_base [9]).
Adding EN signal on $auto$ff.cc:262:slice$12315 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [8], Q = \result_base [8]).
Adding EN signal on $auto$ff.cc:262:slice$12314 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [7], Q = \result_base [7]).
Adding EN signal on $auto$ff.cc:262:slice$12313 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [6], Q = \result_base [6]).
Adding EN signal on $auto$ff.cc:262:slice$12312 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [5], Q = \result_base [5]).
Adding EN signal on $auto$ff.cc:262:slice$12311 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [4], Q = \result_base [4]).
Adding EN signal on $auto$ff.cc:262:slice$12310 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [3], Q = \result_base [3]).
Adding EN signal on $auto$ff.cc:262:slice$12309 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [2], Q = \result_base [2]).
Adding EN signal on $auto$ff.cc:262:slice$12308 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [1], Q = \result_base [1]).
Adding EN signal on $auto$ff.cc:262:slice$12307 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9976 [0], Q = \result_base [0]).
Adding EN signal on $auto$ff.cc:262:slice$12280 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [42], Q = \bias7 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12279 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [41], Q = \bias7 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12278 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [40], Q = \bias7 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12277 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [39], Q = \bias7 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12276 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [38], Q = \bias7 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12275 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [37], Q = \bias7 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12274 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [36], Q = \bias7 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12273 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [35], Q = \bias7 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12272 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [34], Q = \bias7 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12271 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [33], Q = \bias7 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12270 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [32], Q = \bias7 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12269 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [31], Q = \bias7 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12268 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [30], Q = \bias7 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12267 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [29], Q = \bias7 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12266 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [28], Q = \bias7 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12265 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [27], Q = \bias7 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12264 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [26], Q = \bias7 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12263 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [25], Q = \bias7 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12262 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9154 [24], Q = \bias7 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12256 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [18], Q = \bias6 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12255 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [17], Q = \bias6 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12254 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [16], Q = \bias6 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12253 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [15], Q = \bias6 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12252 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [14], Q = \bias6 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12251 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [13], Q = \bias6 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12250 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [12], Q = \bias6 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12249 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [11], Q = \bias6 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12248 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [10], Q = \bias6 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12247 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [9], Q = \bias6 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12246 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [8], Q = \bias6 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12245 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [7], Q = \bias6 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12244 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [6], Q = \bias6 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12243 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [5], Q = \bias6 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12242 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [4], Q = \bias6 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12241 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [3], Q = \bias6 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12240 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [2], Q = \bias6 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12239 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [1], Q = \bias6 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12238 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8839 [0], Q = \bias6 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12232 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [18], Q = \bias5 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12231 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [17], Q = \bias5 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12230 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [16], Q = \bias5 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12229 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [15], Q = \bias5 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12228 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [14], Q = \bias5 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12227 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [13], Q = \bias5 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12226 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [12], Q = \bias5 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12225 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [11], Q = \bias5 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12224 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [10], Q = \bias5 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12223 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [9], Q = \bias5 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12222 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [8], Q = \bias5 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12221 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [7], Q = \bias5 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12220 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [6], Q = \bias5 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12219 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [5], Q = \bias5 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12218 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [4], Q = \bias5 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12217 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [3], Q = \bias5 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12216 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [2], Q = \bias5 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12215 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [1], Q = \bias5 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12214 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8475 [0], Q = \bias5 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12208 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [18], Q = \bias4 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12207 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [17], Q = \bias4 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12206 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [16], Q = \bias4 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12205 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [15], Q = \bias4 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12204 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [14], Q = \bias4 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12203 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [13], Q = \bias4 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12202 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [12], Q = \bias4 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12201 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [11], Q = \bias4 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12200 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [10], Q = \bias4 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12199 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [9], Q = \bias4 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12198 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [8], Q = \bias4 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12197 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [7], Q = \bias4 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12196 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [6], Q = \bias4 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12195 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [5], Q = \bias4 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12194 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [4], Q = \bias4 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12193 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [3], Q = \bias4 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12192 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [2], Q = \bias4 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12191 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [1], Q = \bias4 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12190 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8111 [0], Q = \bias4 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12184 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [18], Q = \bias3 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12183 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [17], Q = \bias3 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12182 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [16], Q = \bias3 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12181 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [15], Q = \bias3 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12180 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [14], Q = \bias3 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12179 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [13], Q = \bias3 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12178 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [12], Q = \bias3 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12177 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [11], Q = \bias3 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12176 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [10], Q = \bias3 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12175 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [9], Q = \bias3 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12174 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [8], Q = \bias3 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12173 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [7], Q = \bias3 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12172 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [6], Q = \bias3 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12171 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [5], Q = \bias3 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12170 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [4], Q = \bias3 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12169 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [3], Q = \bias3 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12168 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [2], Q = \bias3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12167 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [1], Q = \bias3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12166 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7747 [0], Q = \bias3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12160 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [18], Q = \bias2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12159 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [17], Q = \bias2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12158 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [16], Q = \bias2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12157 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [15], Q = \bias2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12156 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [14], Q = \bias2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12155 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [13], Q = \bias2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12154 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [12], Q = \bias2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12153 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [11], Q = \bias2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12152 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [10], Q = \bias2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12151 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [9], Q = \bias2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12150 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [8], Q = \bias2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12149 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [7], Q = \bias2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12148 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [6], Q = \bias2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12147 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [5], Q = \bias2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12146 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [4], Q = \bias2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12145 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [3], Q = \bias2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12144 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [2], Q = \bias2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12143 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [1], Q = \bias2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12142 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7383 [0], Q = \bias2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12136 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [18], Q = \bias1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12135 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [17], Q = \bias1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12134 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [16], Q = \bias1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12133 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [15], Q = \bias1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12132 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [14], Q = \bias1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12131 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [13], Q = \bias1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12130 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [12], Q = \bias1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12129 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [11], Q = \bias1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12128 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [10], Q = \bias1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12127 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [9], Q = \bias1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12126 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [8], Q = \bias1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12125 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [7], Q = \bias1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12124 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [6], Q = \bias1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12123 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [5], Q = \bias1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12122 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [4], Q = \bias1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12121 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [3], Q = \bias1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12120 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [2], Q = \bias1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12119 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [1], Q = \bias1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12118 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7019 [0], Q = \bias1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12112 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [18], Q = \bias0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12111 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [17], Q = \bias0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12110 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [16], Q = \bias0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12109 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [15], Q = \bias0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12108 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [14], Q = \bias0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12107 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [13], Q = \bias0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12106 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [12], Q = \bias0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12105 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [11], Q = \bias0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12104 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [10], Q = \bias0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12103 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [9], Q = \bias0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12102 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [8], Q = \bias0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12101 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [7], Q = \bias0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12100 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [6], Q = \bias0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12099 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [5], Q = \bias0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12098 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [4], Q = \bias0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12097 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [3], Q = \bias0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12096 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [2], Q = \bias0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12095 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [1], Q = \bias0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12094 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6655 [0], Q = \bias0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12093 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6311 [3], Q = \fsm_loadacc [3]).
Adding EN signal on $auto$ff.cc:262:slice$12092 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6311 [2], Q = \fsm_loadacc [2]).
Adding EN signal on $auto$ff.cc:262:slice$12091 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6311 [1], Q = \fsm_loadacc [1]).
Adding EN signal on $auto$ff.cc:262:slice$12090 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$6311 [0], Q = \fsm_loadacc [0]).
Adding EN signal on $auto$ff.cc:262:slice$12085 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [12], Q = \add_stride [12]).
Adding EN signal on $auto$ff.cc:262:slice$12084 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [11], Q = \add_stride [11]).
Adding EN signal on $auto$ff.cc:262:slice$12083 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [10], Q = \add_stride [10]).
Adding EN signal on $auto$ff.cc:262:slice$12082 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [9], Q = \add_stride [9]).
Adding EN signal on $auto$ff.cc:262:slice$12081 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [8], Q = \add_stride [8]).
Adding EN signal on $auto$ff.cc:262:slice$12080 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [7], Q = \add_stride [7]).
Adding EN signal on $auto$ff.cc:262:slice$12079 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [6], Q = \add_stride [6]).
Adding EN signal on $auto$ff.cc:262:slice$12078 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [5], Q = \add_stride [5]).
Adding EN signal on $auto$ff.cc:262:slice$12077 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [4], Q = \add_stride [4]).
Adding EN signal on $auto$ff.cc:262:slice$12076 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [3], Q = \add_stride [3]).
Adding EN signal on $auto$ff.cc:262:slice$12075 ($_DFF_PN1_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [2], Q = \add_stride [2]).
Adding EN signal on $auto$ff.cc:262:slice$12074 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [1], Q = \add_stride [1]).
Adding EN signal on $auto$ff.cc:262:slice$12073 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10182 [0], Q = \add_stride [0]).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 19 unused cells and 1678 unused wires.
<suppressed ~20 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~5915 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~22692 debug messages>
Removed a total of 7564 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 7188 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.25.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~3036 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~72 debug messages>
Removed a total of 24 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 226 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~130 debug messages>

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$13126 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$13138
        $auto$simplemap.cc:278:simplemap_mux$12795

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$13127 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$13139
        $auto$simplemap.cc:278:simplemap_mux$12796

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$13128 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$13140
        $auto$simplemap.cc:278:simplemap_mux$12797

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$13129 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$13141
        $auto$simplemap.cc:278:simplemap_mux$12798

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$13130 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$13142
        $auto$simplemap.cc:278:simplemap_mux$12799

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$13131 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$13143
        $auto$simplemap.cc:278:simplemap_mux$12800

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$13132 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$13144
        $auto$simplemap.cc:278:simplemap_mux$12801

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$13133 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$13145
        $auto$simplemap.cc:278:simplemap_mux$12802

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$13134 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$13146
        $auto$simplemap.cc:278:simplemap_mux$12803

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$13135 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$13147
        $auto$simplemap.cc:278:simplemap_mux$12804


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$12896 ($_ALDFFE_PNP_) from module conv2d (D = \ext_pixel_base [1], Q = \i_tcdm1_addr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12895 ($_ALDFFE_PNP_) from module conv2d (D = \ext_pixel_base [0], Q = \i_tcdm1_addr [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12415 ($_ALDFFE_PNP_) from module conv2d (D = \ext_bias_base [1], Q = \i_tcdm3_raddr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12414 ($_ALDFFE_PNP_) from module conv2d (D = \ext_bias_base [0], Q = \i_tcdm3_raddr [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12412 ($_ALDFFE_PNP_) from module conv2d (D = \ext_filter_base [1], Q = \i_tcdm2_raddr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12411 ($_ALDFFE_PNP_) from module conv2d (D = \ext_filter_base [0], Q = \i_tcdm2_raddr [0], rval = 1'0).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 6 unused cells and 2 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~10 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.28.26. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Extracted 4545 gates and 5886 wires to a netlist network with 1339 inputs and 1242 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/conv2d_no_ksa/abc_tmp.scr 
ABC:   #Luts =  1855  Max Lvl =   8  Avg Lvl =   1.99  [   0.44 sec. at Pass 0]
ABC:   #Luts =  1676  Max Lvl =   9  Avg Lvl =   2.15  [  21.82 sec. at Pass 1]
ABC:   #Luts =  1659  Max Lvl =   8  Avg Lvl =   2.11  [   5.83 sec. at Pass 2]
ABC:   #Luts =  1651  Max Lvl =   8  Avg Lvl =   2.11  [  12.87 sec. at Pass 3]
ABC:   #Luts =  1649  Max Lvl =   9  Avg Lvl =   2.10  [   5.77 sec. at Pass 4]
ABC:   #Luts =  1630  Max Lvl =   9  Avg Lvl =   2.13  [  11.83 sec. at Pass 5]
ABC:   #Luts =  1626  Max Lvl =   8  Avg Lvl =   2.06  [   6.23 sec. at Pass 6]
ABC:   #Luts =  1615  Max Lvl =   9  Avg Lvl =   2.11  [  15.33 sec. at Pass 7]
ABC:   #Luts =  1613  Max Lvl =   8  Avg Lvl =   2.03  [   6.00 sec. at Pass 8]
ABC:   #Luts =  1612  Max Lvl =   8  Avg Lvl =   2.03  [  15.00 sec. at Pass 9]
ABC:   #Luts =  1610  Max Lvl =   9  Avg Lvl =   2.04  [   6.42 sec. at Pass 10]
ABC:   #Luts =  1607  Max Lvl =   8  Avg Lvl =   2.03  [  12.22 sec. at Pass 11]
ABC:   #Luts =  1607  Max Lvl =   8  Avg Lvl =   2.03  [   6.87 sec. at Pass 12]
ABC:   #Luts =  1605  Max Lvl =   8  Avg Lvl =   2.05  [  10.73 sec. at Pass 13]
ABC:   #Luts =  1605  Max Lvl =   8  Avg Lvl =   2.05  [   5.25 sec. at Pass 14]
ABC:   #Luts =  1604  Max Lvl =   7  Avg Lvl =   2.02  [   9.80 sec. at Pass 15]
ABC:   #Luts =  1603  Max Lvl =   8  Avg Lvl =   2.02  [   5.67 sec. at Pass 16]
ABC:   #Luts =  1603  Max Lvl =   8  Avg Lvl =   2.02  [  11.04 sec. at Pass 17]
ABC:   #Luts =  1603  Max Lvl =   8  Avg Lvl =   2.02  [   6.23 sec. at Pass 18]
ABC:   #Luts =  1603  Max Lvl =   8  Avg Lvl =   2.02  [  11.65 sec. at Pass 19]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1603
ABC RESULTS:        internal signals:     3305
ABC RESULTS:           input signals:     1339
ABC RESULTS:          output signals:     1242
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 3014 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== conv2d ===

   Number of wires:               1538
   Number of wire bits:           5851
   Number of public wires:         259
   Number of public wire bits:    3733
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2911
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_DFFE_PN0N_                   43
     $_DFFE_PN0P_                  643
     $_DFFE_PN1N_                    1
     $_DFFE_PN1P_                   21
     $_DFF_PN0_                    257
     $_DFF_PN1_                      1
     $lut                         1556
     $mux                            1
     adder_carry                   308


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== conv2d ===

   Number of wires:               1698
   Number of wire bits:           6011
   Number of public wires:         259
   Number of public wire bits:    3733
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3071
     $_DFFE_PN0N_                   43
     $_DFFE_PN0P_                  643
     $_DFFE_PN1N_                    1
     $_DFFE_PN1P_                   21
     $_DFFSRE_PNNP_                 60
     $_DFFSR_PNN_                   20
     $_DFF_PN0_                    257
     $_DFF_PN1_                      1
     $_ORNOT_                       80
     $_OR_                          80
     $lut                         1556
     $mux                            1
     adder_carry                   308


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFFSR_PNN_ for cells of type $_DFFSR_PNN_.
Using template \$_DFFE_PN1P_ for cells of type $_DFFE_PN1P_.
Using template \$_DFFSRE_PNNP_ for cells of type $_DFFSRE_PNNP_.
Using template \$_DFFE_PN0N_ for cells of type $_DFFE_PN0N_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using template \$_DFFE_PN1N_ for cells of type $_DFFE_PN1N_.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2783 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~21629 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~11115 debug messages>
Removed a total of 3705 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 8167 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~982 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 190 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Extracted 5443 gates and 6738 wires to a netlist network with 1293 inputs and 1353 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/conv2d_no_ksa/abc_tmp.scr 
ABC:   #Luts =  1721  Max Lvl =   8  Avg Lvl =   1.98  [   0.67 sec. at Pass 0]
ABC:   #Luts =  1720  Max Lvl =   6  Avg Lvl =   1.92  [  18.86 sec. at Pass 1]
ABC:   #Luts =  1720  Max Lvl =   6  Avg Lvl =   1.92  [   3.52 sec. at Pass 2]
ABC:   #Luts =  1718  Max Lvl =   8  Avg Lvl =   1.89  [   7.42 sec. at Pass 3]
ABC:   #Luts =  1717  Max Lvl =   7  Avg Lvl =   1.95  [   4.53 sec. at Pass 4]
ABC:   #Luts =  1716  Max Lvl =   8  Avg Lvl =   1.97  [  11.19 sec. at Pass 5]
ABC:   #Luts =  1716  Max Lvl =   8  Avg Lvl =   1.97  [   3.35 sec. at Pass 6]
ABC:   #Luts =  1716  Max Lvl =   8  Avg Lvl =   1.97  [  11.11 sec. at Pass 7]
ABC:   #Luts =  1715  Max Lvl =   7  Avg Lvl =   1.96  [   5.88 sec. at Pass 8]
ABC:   #Luts =  1715  Max Lvl =   7  Avg Lvl =   1.96  [  10.59 sec. at Pass 9]
ABC:   #Luts =  1713  Max Lvl =   7  Avg Lvl =   1.88  [   4.26 sec. at Pass 10]
ABC:   #Luts =  1713  Max Lvl =   7  Avg Lvl =   1.88  [  11.29 sec. at Pass 11]
ABC:   #Luts =  1713  Max Lvl =   7  Avg Lvl =   1.88  [   4.37 sec. at Pass 12]
ABC:   #Luts =  1713  Max Lvl =   7  Avg Lvl =   1.88  [   9.15 sec. at Pass 13]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1713
ABC RESULTS:        internal signals:     4092
ABC RESULTS:           input signals:     1293
ABC RESULTS:          output signals:     1353
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 5588 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \conv2d

3.45.2. Analyzing design hierarchy..
Top module:  \conv2d
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== conv2d ===

   Number of wires:               1694
   Number of wire bits:           6007
   Number of public wires:         259
   Number of public wire bits:    3733
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3067
     $lut                         1713
     adder_carry                   308
     dffsre                       1046


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 84 unused wires.
<suppressed ~84 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\conv2d'.

Warnings: 76 unique messages, 76 total
End of script. Logfile hash: fb2b966987, CPU: user 47.54s system 0.20s, MEM: 87.71 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 96% 2x abc (1261 sec), 1% 36x opt_dff (15 sec), ...
real 436.68
user 1193.22
sys 115.98
