
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl key_schedule.vhd round_f.vhd xtea.vhd

yosys> verific -vhdl key_schedule.vhd round_f.vhd xtea.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'key_schedule.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-INFO [VHDL-1012] key_schedule.vhd:22: analyzing entity 'key_schedule'
VERIFIC-INFO [VHDL-1010] key_schedule.vhd:31: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'round_f.vhd'
VERIFIC-INFO [VHDL-1012] round_f.vhd:21: analyzing entity 'round_f'
VERIFIC-INFO [VHDL-1010] round_f.vhd:27: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'xtea.vhd'
VERIFIC-INFO [VHDL-1012] xtea.vhd:20: analyzing entity 'xtea'
VERIFIC-INFO [VHDL-1010] xtea.vhd:30: analyzing architecture 'behavioral'

yosys> synth_rs -top xtea -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top xtea

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] xtea.vhd:20: processing 'xtea(Behavioral)'
VERIFIC-INFO [VHDL-1067] key_schedule.vhd:22: processing 'key_schedule(Behavioral)'
VERIFIC-INFO [VHDL-1067] round_f.vhd:21: processing 'round_f(Behavioral)'
Importing module xtea.
Importing module key_schedule(Behavioral).
Importing module round_f(Behavioral).

3.3.1. Analyzing design hierarchy..
Top module:  \xtea
Used module:     \round_f(Behavioral)
Used module:     \key_schedule(Behavioral)

3.3.2. Analyzing design hierarchy..
Top module:  \xtea
Used module:     \round_f(Behavioral)
Used module:     \key_schedule(Behavioral)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module round_f(Behavioral).
Optimizing module key_schedule(Behavioral).
<suppressed ~4 debug messages>
Optimizing module xtea.
<suppressed ~3 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module round_f(Behavioral).
Deleting now unused module key_schedule(Behavioral).
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 1 unused cells and 47 unused wires.
<suppressed ~29 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module xtea...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$v_1_s_reg$xtea.vhd:102$87 ($aldff) from module xtea.
Removing never-active async load on $verific$v_0_s_reg$xtea.vhd:102$88 ($aldff) from module xtea.
Removing never-active async load on $verific$input_a_s_reg$xtea.vhd:102$89 ($aldff) from module xtea.
Removing never-active async load on $verific$cnt_s_reg$xtea.vhd:67$53 ($aldff) from module xtea.
Removing never-active async load on $flatten\KEY_SCHEDULE_0.$verific$sum_s_reg$key_schedule.vhd:80$162 ($aldff) from module xtea.
Removing never-active async load on $flatten\KEY_SCHEDULE_0.$verific$subkey_reg$key_schedule.vhd:80$163 ($aldff) from module xtea.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$v_1_s_reg$xtea.vhd:102$87 ($dff) from module xtea (D = $verific$n1155$38, Q = \v_1_s).
Adding EN signal on $verific$v_0_s_reg$xtea.vhd:102$88 ($dff) from module xtea (D = $verific$n1188$39, Q = \v_0_s).
Adding EN signal on $verific$input_a_s_reg$xtea.vhd:102$89 ($dff) from module xtea (D = $verific$n957$32, Q = \input_a_s).
Adding SRST signal on $verific$cnt_s_reg$xtea.vhd:67$53 ($dff) from module xtea (D = $verific$n176$9, Q = \cnt_s, rval = 2'00).
Adding EN signal on $flatten\KEY_SCHEDULE_0.$verific$sum_s_reg$key_schedule.vhd:80$162 ($dff) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1302$124, Q = \KEY_SCHEDULE_0.sum_s).
Adding SRST signal on $flatten\KEY_SCHEDULE_0.$verific$subkey_reg$key_schedule.vhd:80$163 ($dff) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1236$122, Q = \KEY_SCHEDULE_0.subkey, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$207 ($sdff) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1236$122, Q = \KEY_SCHEDULE_0.subkey).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~4 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell xtea.$verific$add_7$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50 ($add).
Removed top 1 bits (of 2) from port B of cell xtea.$verific$equal_23$xtea.vhd:86$63 ($eq).
Removed top 1 bits (of 33) from port A of cell xtea.$verific$sub_27$xtea.vhd:90$65 ($sub).
Removed top 1 bits (of 33) from port B of cell xtea.$verific$sub_27$xtea.vhd:90$65 ($sub).
Removed top 1 bits (of 33) from port Y of cell xtea.$verific$sub_27$xtea.vhd:90$65 ($sub).
Removed top 1 bits (of 33) from port A of cell xtea.$verific$sub_35$xtea.vhd:98$72 ($sub).
Removed top 1 bits (of 33) from port B of cell xtea.$verific$sub_35$xtea.vhd:98$72 ($sub).
Removed top 1 bits (of 33) from port Y of cell xtea.$verific$sub_35$xtea.vhd:98$72 ($sub).
Removed top 1 bits (of 2) from port B of cell xtea.$auto$opt_dff.cc:195:make_patterns_logic$198 ($ne).
Removed top 1 bits (of 3) from port B of cell xtea.$auto$opt_dff.cc:195:make_patterns_logic$182 ($ne).
Removed top 30 bits (of 32) from port B of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_23$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$144 ($and).
Removed top 30 bits (of 32) from port Y of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_23$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$144 ($and).
Removed top 30 bits (of 32) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_23$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$144 ($and).
Removed top 1 bits (of 33) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$sub_21$key_schedule.vhd:67$142 ($sub).
Removed top 1 bits (of 33) from port B of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$sub_21$key_schedule.vhd:67$142 ($sub).
Removed top 1 bits (of 33) from port Y of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$sub_21$key_schedule.vhd:67$142 ($sub).
Removed top 1 bits (of 22) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_55$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 20 bits (of 22) from port B of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_55$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 20 bits (of 22) from port Y of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_55$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 19 bits (of 21) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_55$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 1 bits (of 4) from port B of cell xtea.$auto$opt_dff.cc:195:make_patterns_logic$180 ($ne).
Removed top 5 bits (of 32) from port B of cell xtea.$flatten\ROUND_F_0.$verific$xor_5$round_f.vhd:38$172 ($xor).
Removed top 30 bits (of 32) from wire xtea.$flatten\KEY_SCHEDULE_0.$verific$n305$102.
Removed top 1 bits (of 33) from wire xtea.$flatten\KEY_SCHEDULE_0.$verific$n471$107.
Removed top 30 bits (of 32) from wire xtea.$flatten\KEY_SCHEDULE_0.$verific$n538$109.
Removed top 1 bits (of 32) from wire xtea.$flatten\KEY_SCHEDULE_0.$verific$n604$111.
Removed top 9 bits (of 32) from wire xtea.$flatten\KEY_SCHEDULE_0.$verific$n638$112.
Removed top 1 bits (of 33) from wire xtea.$verific$n589$21.
Removed top 1 bits (of 33) from wire xtea.$verific$n791$27.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module xtea:
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$add_19$key_schedule.vhd:66$141 ($add).
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$add_26$key_schedule.vhd:69$148 ($add).
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$add_28$key_schedule.vhd:70$150 ($add).
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$sub_21$key_schedule.vhd:67$142 ($sub).
  creating $macc model for $flatten\ROUND_F_0.$verific$add_7$round_f.vhd:39$174 ($add).
  creating $macc model for $verific$add_25$xtea.vhd:88$64 ($add).
  creating $macc model for $verific$add_33$xtea.vhd:96$71 ($add).
  creating $macc model for $verific$add_7$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50 ($add).
  creating $macc model for $verific$sub_27$xtea.vhd:90$65 ($sub).
  creating $macc model for $verific$sub_35$xtea.vhd:98$72 ($sub).
  creating $alu model for $macc $verific$sub_35$xtea.vhd:98$72.
  creating $alu model for $macc $verific$sub_27$xtea.vhd:90$65.
  creating $alu model for $macc $verific$add_7$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50.
  creating $alu model for $macc $verific$add_33$xtea.vhd:96$71.
  creating $alu model for $macc $verific$add_25$xtea.vhd:88$64.
  creating $alu model for $macc $flatten\ROUND_F_0.$verific$add_7$round_f.vhd:39$174.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$sub_21$key_schedule.vhd:67$142.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$add_28$key_schedule.vhd:70$150.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$add_26$key_schedule.vhd:69$148.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$add_19$key_schedule.vhd:66$141.
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$add_19$key_schedule.vhd:66$141: $auto$alumacc.cc:485:replace_alu$218
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$add_26$key_schedule.vhd:69$148: $auto$alumacc.cc:485:replace_alu$221
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$add_28$key_schedule.vhd:70$150: $auto$alumacc.cc:485:replace_alu$224
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$sub_21$key_schedule.vhd:67$142: $auto$alumacc.cc:485:replace_alu$227
  creating $alu cell for $flatten\ROUND_F_0.$verific$add_7$round_f.vhd:39$174: $auto$alumacc.cc:485:replace_alu$230
  creating $alu cell for $verific$add_33$xtea.vhd:96$71: $auto$alumacc.cc:485:replace_alu$233
  creating $alu cell for $verific$add_7$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50: $auto$alumacc.cc:485:replace_alu$236
  creating $alu cell for $verific$add_25$xtea.vhd:88$64: $auto$alumacc.cc:485:replace_alu$239
  creating $alu cell for $verific$sub_27$xtea.vhd:90$65: $auto$alumacc.cc:485:replace_alu$242
  creating $alu cell for $verific$sub_35$xtea.vhd:98$72: $auto$alumacc.cc:485:replace_alu$245
  created 10 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> stat

3.22. Printing statistics.

=== xtea ===

   Number of wires:                103
   Number of wire bits:           2691
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $alu                           10
     $and                            2
     $bmux                           2
     $dffe                           4
     $eq                             3
     $logic_not                      1
     $mux                           22
     $ne                             4
     $not                            1
     $reduce_and                     3
     $reduce_bool                    4
     $sdff                           1
     $sdffe                          1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~1092 debug messages>

yosys> stat

3.24. Printing statistics.

=== xtea ===

   Number of wires:                589
   Number of wire bits:          10875
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2715
     $_AND_                        245
     $_DFFE_PP_                    128
     $_MUX_                       1200
     $_NOT_                        295
     $_OR_                         135
     $_SDFFE_PP0P_                  32
     $_SDFF_PP0_                     2
     $_XOR_                        454
     adder_carry                   224


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~986 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~312 debug messages>
Removed a total of 104 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$373 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [0], Q = \KEY_SCHEDULE_0.sum_s [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$374 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [1], Q = \KEY_SCHEDULE_0.sum_s [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$375 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [2], Q = \KEY_SCHEDULE_0.sum_s [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$376 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [3], Q = \KEY_SCHEDULE_0.sum_s [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$377 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [4], Q = \KEY_SCHEDULE_0.sum_s [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$378 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [5], Q = \KEY_SCHEDULE_0.sum_s [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$380 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [7], Q = \KEY_SCHEDULE_0.sum_s [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$381 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [8], Q = \KEY_SCHEDULE_0.sum_s [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$385 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [12], Q = \KEY_SCHEDULE_0.sum_s [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$388 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [15], Q = \KEY_SCHEDULE_0.sum_s [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$389 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [16], Q = \KEY_SCHEDULE_0.sum_s [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$394 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [21], Q = \KEY_SCHEDULE_0.sum_s [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$398 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [25], Q = \KEY_SCHEDULE_0.sum_s [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$401 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [28], Q = \KEY_SCHEDULE_0.sum_s [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$402 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [29], Q = \KEY_SCHEDULE_0.sum_s [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$403 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1269$123 [30], Q = \KEY_SCHEDULE_0.sum_s [30], rval = 1'0).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 145 unused cells and 388 unused wires.
<suppressed ~146 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~1 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.25.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~288 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$1174 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$2017
        $auto$simplemap.cc:86:simplemap_bitop$2352


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~1 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.28.18. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Extracted 1196 gates and 1770 wires to a netlist network with 574 inputs and 461 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/XTEA_Core/abc_tmp.scr 
ABC:   #Luts =   544  Max Lvl =   8  Avg Lvl =   1.85  [   0.24 sec. at Pass 0]
ABC:   #Luts =   529  Max Lvl =  11  Avg Lvl =   1.84  [   2.64 sec. at Pass 1]
ABC:   #Luts =   529  Max Lvl =  11  Avg Lvl =   1.84  [   1.17 sec. at Pass 2]
ABC:   #Luts =   523  Max Lvl =   9  Avg Lvl =   1.77  [   3.43 sec. at Pass 3]
ABC:   #Luts =   522  Max Lvl =   8  Avg Lvl =   1.74  [   1.04 sec. at Pass 4]
ABC:   #Luts =   519  Max Lvl =   8  Avg Lvl =   1.74  [   4.16 sec. at Pass 5]
ABC:   #Luts =   519  Max Lvl =   8  Avg Lvl =   1.74  [   1.66 sec. at Pass 6]
ABC:   #Luts =   519  Max Lvl =   8  Avg Lvl =   1.74  [   4.26 sec. at Pass 7]
ABC:   #Luts =   519  Max Lvl =   8  Avg Lvl =   1.74  [   1.25 sec. at Pass 8]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      519
ABC RESULTS:        internal signals:      735
ABC RESULTS:           input signals:      574
ABC RESULTS:          output signals:      461
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1042 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== xtea ===

   Number of wires:                286
   Number of wire bits:           1978
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                905
     $_DFFE_PP_                    112
     $_SDFFCE_PP0P_                 16
     $_SDFFE_PP0P_                  32
     $_SDFF_PP0_                     2
     $lut                          518
     $mux                            1
     adder_carry                   224


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== xtea ===

   Number of wires:                368
   Number of wire bits:           2060
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                987
     $_DFFE_PP0P_                  128
     $_DFF_P_                       34
     $_MUX_                         82
     $lut                          518
     $mux                            1
     adder_carry                   224


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~945 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~10323 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~930 debug messages>
Removed a total of 310 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 2101 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~32 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Extracted 1460 gates and 2035 wires to a netlist network with 573 inputs and 459 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/XTEA_Core/abc_tmp.scr 
ABC:   #Luts =   526  Max Lvl =   8  Avg Lvl =   1.77  [   0.29 sec. at Pass 0]
ABC:   #Luts =   526  Max Lvl =   8  Avg Lvl =   1.77  [   2.54 sec. at Pass 1]
ABC:   #Luts =   526  Max Lvl =   8  Avg Lvl =   1.77  [   1.11 sec. at Pass 2]
ABC:   #Luts =   526  Max Lvl =   8  Avg Lvl =   1.77  [   2.11 sec. at Pass 3]
ABC:   #Luts =   525  Max Lvl =   8  Avg Lvl =   1.77  [   1.23 sec. at Pass 4]
ABC:   #Luts =   525  Max Lvl =   8  Avg Lvl =   1.77  [   3.32 sec. at Pass 5]
ABC:   #Luts =   525  Max Lvl =   8  Avg Lvl =   1.77  [   1.54 sec. at Pass 6]
ABC:   #Luts =   525  Max Lvl =   8  Avg Lvl =   1.77  [   4.72 sec. at Pass 7]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      525
ABC RESULTS:        internal signals:     1003
ABC RESULTS:           input signals:      573
ABC RESULTS:          output signals:      459
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1698 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \xtea

3.45.2. Analyzing design hierarchy..
Top module:  \xtea
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== xtea ===

   Number of wires:                291
   Number of wire bits:           1919
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                910
     $lut                          524
     adder_carry                   224
     dffsre                        162


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 17 unused wires.
<suppressed ~17 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\xtea'.

End of script. Logfile hash: 98d53e8f8b, CPU: user 5.61s system 0.06s, MEM: 40.37 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 96% 2x abc (158 sec), 1% 33x opt_expr (1 sec), ...
real 49.26
user 144.13
sys 19.69
