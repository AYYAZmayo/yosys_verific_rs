
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.13
 Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b20.vhd

yosys> verific -vhdl b20.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b20.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b20.vhd:1: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b20.vhd:11: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b20.vhd:511: analyzing entity 'b14rev'
VERIFIC-INFO [VHDL-1010] b20.vhd:521: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b20.vhd:1021: analyzing entity 'b20'
VERIFIC-INFO [VHDL-1010] b20.vhd:1029: analyzing architecture 'behav'

yosys> synth_rs -top b20 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.41

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b20

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b20.vhd:1021: processing 'b20(BEHAV)'
VERIFIC-INFO [VHDL-1067] b20.vhd:1: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b20.vhd:478: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b20.vhd:511: processing 'b14rev(BEHAV)'
VERIFIC-INFO [VHDL-1172] b20.vhd:988: 'others' clause is never selected
Importing module b20.
Importing module b14(BEHAV).
Importing module b14rev(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b20
Used module:     \b14rev(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b20
Used module:     \b14rev(BEHAV)
Used module:     \b14(BEHAV)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14rev(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b20.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module b14rev(BEHAV).
Deleting now unused module b14(BEHAV).
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~13 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 14 unused cells and 343 unused wires.
<suppressed ~117 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b20...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b20.vhd:501$524.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b20.vhd:501$515.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b20.vhd:501$526.
    dead port 2/2 on $mux $flatten\P2.$verific$i653$b20.vhd:1011$1044.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_641$b20.vhd:1011$1035.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_654$b20.vhd:1011$1046.
Removed 6 multiplexer ports.
<suppressed ~52 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b20.vhd:486$477: { $flatten\P1.$verific$n2255$108 $auto$opt_reduce.cc:134:opt_pmux$1088 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b20.vhd:486$418: { $flatten\P1.$verific$n2256$109 $auto$opt_reduce.cc:134:opt_pmux$1090 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b20.vhd:486$495: { $flatten\P1.$verific$n2257$110 $auto$opt_reduce.cc:134:opt_pmux$1092 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b20.vhd:486$496: { $flatten\P1.$verific$n2258$111 $auto$opt_reduce.cc:134:opt_pmux$1094 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_494$b20.vhd:953$991: { $flatten\P2.$verific$n2118$610 $auto$opt_reduce.cc:134:opt_pmux$1096 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_495$b20.vhd:953$992: { $flatten\P2.$verific$n2120$612 $auto$opt_reduce.cc:134:opt_pmux$1098 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_496$b20.vhd:953$993: { $flatten\P2.$verific$n2119$611 $auto$opt_reduce.cc:134:opt_pmux$1100 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_497$b20.vhd:953$994: { $flatten\P2.$verific$n2121$613 $auto$opt_reduce.cc:134:opt_pmux$1102 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_534$b20.vhd:973$997: { $flatten\P2.$verific$n2121$613 $auto$opt_reduce.cc:134:opt_pmux$1104 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_535$b20.vhd:973$998: { $flatten\P2.$verific$n2119$611 $auto$opt_reduce.cc:134:opt_pmux$1106 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_536$b20.vhd:973$999: { $flatten\P2.$verific$n2120$612 $auto$opt_reduce.cc:134:opt_pmux$1108 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_537$b20.vhd:973$1000: { $flatten\P2.$verific$n2118$610 $auto$opt_reduce.cc:134:opt_pmux$1110 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_617$b20.vhd:996$1011: { $flatten\P2.$verific$n2121$613 $auto$opt_reduce.cc:134:opt_pmux$1112 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_618$b20.vhd:996$1012: { $flatten\P2.$verific$n2120$612 $auto$opt_reduce.cc:134:opt_pmux$1114 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_619$b20.vhd:996$1013: { $flatten\P2.$verific$n2119$611 $auto$opt_reduce.cc:134:opt_pmux$1116 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_620$b20.vhd:996$1014: { $flatten\P2.$verific$n2118$610 $auto$opt_reduce.cc:134:opt_pmux$1118 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_717$b20.vhd:873$982: { $flatten\P2.$verific$n2118$610 $auto$opt_reduce.cc:134:opt_pmux$1120 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_718$b20.vhd:873$988: { $flatten\P2.$verific$n2119$611 $auto$opt_reduce.cc:134:opt_pmux$1122 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_719$b20.vhd:873$989: { $flatten\P2.$verific$n2120$612 $auto$opt_reduce.cc:134:opt_pmux$1124 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_720$b20.vhd:873$990: { $flatten\P2.$verific$n2121$613 $auto$opt_reduce.cc:134:opt_pmux$1126 }
  Optimizing cells in module \b20.
Performed a total of 20 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b20.vhd:1015$1081 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b20.vhd:1015$1083 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b20.vhd:1015$1078 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b20.vhd:1015$1077 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b20.vhd:1015$1076 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b20.vhd:1015$1075 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b20.vhd:1015$1080 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b20.vhd:505$554 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b20.vhd:1015$1082 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b20.vhd:1015$1079 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b20.vhd:1015$1072 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b20.vhd:1015$1074 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b20.vhd:505$561 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b20.vhd:505$563 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b20.vhd:505$558 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b20.vhd:505$557 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b20.vhd:505$556 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b20.vhd:505$555 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b20.vhd:505$560 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b20.vhd:505$552 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b20.vhd:505$562 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b20.vhd:505$559 ($aldff) from module b20.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b20.P1.d.
Found FSM state register b20.P2.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b20'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b20.vhd:505$553
  root of input selection tree: $flatten\P1.$verific$n11472$358
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$204 [0]
  found ctrl input: $flatten\P1.$verific$n10346$175
  found ctrl input: $flatten\P1.$verific$n1405$102
  found ctrl input: $flatten\P1.$verific$n1440$103
  found ctrl input: $flatten\P1.$verific$n1474$104
  found ctrl input: $flatten\P1.$verific$n1475$105
  found ctrl input: $flatten\P1.$verific$n1476$106
  found ctrl input: $flatten\P1.$verific$n1477$107
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.B \P1.state $flatten\P1.$verific$n1405$102 $flatten\P1.$verific$n1440$103 $flatten\P1.$verific$n1474$104 $flatten\P1.$verific$n1475$105 $flatten\P1.$verific$n1476$106 $flatten\P1.$verific$n1477$107 $flatten\P1.$verific$n10346$175 $flatten\P1.$verific$n341$204 [0] }
  ctrl outputs: $flatten\P1.$verific$n11472$358
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P2.d' from module `\b20'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b20.vhd:1015$1073
  root of input selection tree: $flatten\P2.$verific$n11328$861
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$704 [0]
  found ctrl input: $flatten\P2.$verific$n10195$677
  found ctrl input: $flatten\P2.$verific$n1406$604
  found ctrl input: $flatten\P2.$verific$n1441$605
  found ctrl input: $flatten\P2.$verific$n1475$606
  found ctrl input: $flatten\P2.$verific$n1476$607
  found ctrl input: $flatten\P2.$verific$n1477$608
  found ctrl input: $flatten\P2.$verific$n1478$609
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.B \P2.state $flatten\P2.$verific$n1406$604 $flatten\P2.$verific$n1441$605 $flatten\P2.$verific$n1475$606 $flatten\P2.$verific$n1476$607 $flatten\P2.$verific$n1477$608 $flatten\P2.$verific$n1478$609 $flatten\P2.$verific$n10195$677 $flatten\P2.$verific$n341$704 [0] }
  ctrl outputs: $flatten\P2.$verific$n11328$861
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P2.d$1129' from module `\b20'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1127' from module `\b20'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1127' from module `\b20'.
Optimizing FSM `$fsm$\P2.d$1129' from module `\b20'.

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1127' from module `\b20' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P2.d$1129' from module `\b20' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1127' from module `b20':
-------------------------------------

  Information on FSM $fsm$\P1.d$1127 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P1.$verific$n341$204 [0]
    1: $flatten\P1.$verific$n10346$175
    2: $flatten\P1.$verific$n1477$107
    3: $flatten\P1.$verific$n1476$106
    4: $flatten\P1.$verific$n1475$105
    5: $flatten\P1.$verific$n1474$104
    6: $flatten\P1.$verific$n1440$103
    7: $flatten\P1.$verific$n1405$102
    8: \P1.state
    9: \P1.B

  Output signals:
    0: $flatten\P1.$verific$n11472$358 [0]
    1: $flatten\P1.$verific$n11472$358 [1]
    2: $flatten\P1.$verific$n11472$358 [2]
    3: $flatten\P1.$verific$n11472$358 [3]
    4: $flatten\P1.$verific$n11472$358 [4]
    5: $flatten\P1.$verific$n11472$358 [5]
    6: $flatten\P1.$verific$n11472$358 [6]
    7: $flatten\P1.$verific$n11472$358 [7]
    8: $flatten\P1.$verific$n11472$358 [8]
    9: $flatten\P1.$verific$n11472$358 [9]
   10: $flatten\P1.$verific$n11472$358 [10]
   11: $flatten\P1.$verific$n11472$358 [11]
   12: $flatten\P1.$verific$n11472$358 [12]
   13: $flatten\P1.$verific$n11472$358 [13]
   14: $flatten\P1.$verific$n11472$358 [14]
   15: $flatten\P1.$verific$n11472$358 [15]
   16: $flatten\P1.$verific$n11472$358 [16]
   17: $flatten\P1.$verific$n11472$358 [17]
   18: $flatten\P1.$verific$n11472$358 [18]
   19: $flatten\P1.$verific$n11472$358 [19]
   20: $flatten\P1.$verific$n11472$358 [20]
   21: $flatten\P1.$verific$n11472$358 [21]
   22: $flatten\P1.$verific$n11472$358 [22]
   23: $flatten\P1.$verific$n11472$358 [23]
   24: $flatten\P1.$verific$n11472$358 [24]
   25: $flatten\P1.$verific$n11472$358 [25]
   26: $flatten\P1.$verific$n11472$358 [26]
   27: $flatten\P1.$verific$n11472$358 [27]
   28: $flatten\P1.$verific$n11472$358 [28]
   29: $flatten\P1.$verific$n11472$358 [29]
   30: $flatten\P1.$verific$n11472$358 [30]
   31: $flatten\P1.$verific$n11472$358 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1129' from module `b20':
-------------------------------------

  Information on FSM $fsm$\P2.d$1129 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P2.$verific$n341$704 [0]
    1: $flatten\P2.$verific$n10195$677
    2: $flatten\P2.$verific$n1478$609
    3: $flatten\P2.$verific$n1477$608
    4: $flatten\P2.$verific$n1476$607
    5: $flatten\P2.$verific$n1475$606
    6: $flatten\P2.$verific$n1441$605
    7: $flatten\P2.$verific$n1406$604
    8: \P2.state
    9: \P2.B

  Output signals:
    0: $flatten\P2.$verific$n11328$861 [0]
    1: $flatten\P2.$verific$n11328$861 [1]
    2: $flatten\P2.$verific$n11328$861 [2]
    3: $flatten\P2.$verific$n11328$861 [3]
    4: $flatten\P2.$verific$n11328$861 [4]
    5: $flatten\P2.$verific$n11328$861 [5]
    6: $flatten\P2.$verific$n11328$861 [6]
    7: $flatten\P2.$verific$n11328$861 [7]
    8: $flatten\P2.$verific$n11328$861 [8]
    9: $flatten\P2.$verific$n11328$861 [9]
   10: $flatten\P2.$verific$n11328$861 [10]
   11: $flatten\P2.$verific$n11328$861 [11]
   12: $flatten\P2.$verific$n11328$861 [12]
   13: $flatten\P2.$verific$n11328$861 [13]
   14: $flatten\P2.$verific$n11328$861 [14]
   15: $flatten\P2.$verific$n11328$861 [15]
   16: $flatten\P2.$verific$n11328$861 [16]
   17: $flatten\P2.$verific$n11328$861 [17]
   18: $flatten\P2.$verific$n11328$861 [18]
   19: $flatten\P2.$verific$n11328$861 [19]
   20: $flatten\P2.$verific$n11328$861 [20]
   21: $flatten\P2.$verific$n11328$861 [21]
   22: $flatten\P2.$verific$n11328$861 [22]
   23: $flatten\P2.$verific$n11328$861 [23]
   24: $flatten\P2.$verific$n11328$861 [24]
   25: $flatten\P2.$verific$n11328$861 [25]
   26: $flatten\P2.$verific$n11328$861 [26]
   27: $flatten\P2.$verific$n11328$861 [27]
   28: $flatten\P2.$verific$n11328$861 [28]
   29: $flatten\P2.$verific$n11328$861 [29]
   30: $flatten\P2.$verific$n11328$861 [30]
   31: $flatten\P2.$verific$n11328$861 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1127' from module `\b20'.
Mapping FSM `$fsm$\P2.d$1129' from module `\b20'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~14 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b20.vhd:1015$1078 ($adff) from module b20 (D = $flatten\P2.$verific$n11034$856, Q = \P2.reg3).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b20.vhd:1015$1077 ($adff) from module b20 (D = $flatten\P2.$verific$n10128$829, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b20.vhd:1015$1076 ($adff) from module b20 (D = $flatten\P2.$verific$n10095$828, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b20.vhd:1015$1075 ($adff) from module b20 (D = $flatten\P2.$verific$n10062$827, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b20.vhd:1015$1082 ($adff) from module b20 (D = { $flatten\P2.$verific$add_540$b20.vhd:976$1003 $flatten\P2.$verific$n10370$839 [0] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$B_reg$b20.vhd:1015$1074 ($adff) from module b20 (D = $flatten\P2.$verific$n10835$683, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b20.vhd:505$558 ($adff) from module b20 (D = $flatten\P1.$verific$n10312$328 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b20.vhd:505$558 ($adff) from module b20 (D = $flatten\P1.$verific$n11178$353 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b20.vhd:505$557 ($adff) from module b20 (D = $flatten\P1.$verific$n10279$327, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b20.vhd:505$556 ($adff) from module b20 (D = $flatten\P1.$verific$n10246$326, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b20.vhd:505$555 ($adff) from module b20 (D = $flatten\P1.$verific$n10213$325, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b20.vhd:505$562 ($adff) from module b20 (D = { $flatten\P1.$verific$add_570$b20.vhd:466$486 $flatten\P1.$verific$n10514$336 [0] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$B_reg$b20.vhd:505$554 ($adff) from module b20 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 48 unused cells and 152 unused wires.
<suppressed ~49 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 20) from port A of cell b20.$verific$LessThan_16$b20.vhd:1076$53 ($lt).
Removed top 1 bits (of 20) from port A of cell b20.$verific$LessThan_17$b20.vhd:1076$54 ($lt).
Removed top 1 bits (of 2) from port B of cell b20.$auto$fsm_map.cc:215:map_fsm$1135 ($eq).
Removed top 1 bits (of 2) from port B of cell b20.$auto$fsm_map.cc:215:map_fsm$1354 ($eq).
Removed top 1 bits (of 5) from port B of cell b20.$auto$fsm_map.cc:77:implement_pattern_cache$1322 ($eq).
Removed top 1 bits (of 6) from port B of cell b20.$auto$fsm_map.cc:77:implement_pattern_cache$1312 ($eq).
Removed top 3 bits (of 33) from port Y of cell b20.$flatten\P1.$verific$sub_365$b20.vhd:358$480 ($sub).
Removed top 3 bits (of 33) from port A of cell b20.$flatten\P1.$verific$sub_365$b20.vhd:358$480 ($sub).
Removed top 3 bits (of 33) from port B of cell b20.$flatten\P1.$verific$sub_365$b20.vhd:358$480 ($sub).
Removed top 2 bits (of 32) from port Y of cell b20.$flatten\P1.$verific$add_283$b20.vhd:318$478 ($add).
Removed top 2 bits (of 32) from port A of cell b20.$flatten\P1.$verific$add_283$b20.vhd:318$478 ($add).
Removed top 2 bits (of 32) from port B of cell b20.$flatten\P1.$verific$add_283$b20.vhd:318$478 ($add).
Removed top 30 bits (of 32) from port A of cell b20.$flatten\P1.$verific$equal_179$b20.vhd:246$472 ($eq).
Removed top 30 bits (of 32) from port A of cell b20.$flatten\P1.$verific$equal_178$b20.vhd:245$471 ($eq).
Removed top 31 bits (of 32) from port A of cell b20.$flatten\P1.$verific$equal_177$b20.vhd:244$470 ($eq).
Removed top 32 bits (of 33) from port A of cell b20.$flatten\P1.$verific$sub_168$b20.vhd:243$467 ($sub).
Removed top 1 bits (of 33) from port Y of cell b20.$flatten\P1.$verific$sub_168$b20.vhd:243$467 ($sub).
Removed top 1 bits (of 33) from port B of cell b20.$flatten\P1.$verific$sub_168$b20.vhd:243$467 ($sub).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P1.$verific$mux_145$b20.vhd:226$461 ($mux).
Removed top 2 bits (of 3) from port A of cell b20.$flatten\P1.$verific$equal_143$b20.vhd:224$459 ($eq).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P1.$verific$equal_142$b20.vhd:223$458 ($eq).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P1.$verific$equal_141$b20.vhd:221$457 ($eq).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P1.$verific$mux_140$b20.vhd:220$456 ($mux).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P1.$verific$mux_138$b20.vhd:216$454 ($mux).
Removed top 2 bits (of 33) from port B of cell b20.$flatten\P1.$verific$sub_84$b20.vhd:149$436 ($sub).
Removed top 1 bits (of 33) from port Y of cell b20.$flatten\P1.$verific$sub_84$b20.vhd:149$436 ($sub).
Removed top 1 bits (of 33) from port A of cell b20.$flatten\P1.$verific$sub_84$b20.vhd:149$436 ($sub).
Removed top 1 bits (of 32) from port B of cell b20.$flatten\P1.$verific$LessThan_83$b20.vhd:148$435 ($lt).
Removed top 12 bits (of 32) from port A of cell b20.$flatten\P1.$verific$add_61$b20.vhd:113$423 ($add).
Removed top 12 bits (of 32) from port Y of cell b20.$flatten\P1.$verific$add_61$b20.vhd:113$423 ($add).
Removed top 12 bits (of 32) from port B of cell b20.$flatten\P1.$verific$add_61$b20.vhd:113$423 ($add).
Removed top 12 bits (of 32) from port A of cell b20.$flatten\P1.$verific$add_56$b20.vhd:110$421 ($add).
Removed top 12 bits (of 32) from port Y of cell b20.$flatten\P1.$verific$add_56$b20.vhd:110$421 ($add).
Removed top 12 bits (of 32) from port B of cell b20.$flatten\P1.$verific$add_56$b20.vhd:110$421 ($add).
Removed top 1 bits (of 3) from port Y of cell b20.$flatten\P1.$verific$add_44$b20.vhd:96$413 ($add).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P1.$verific$add_44$b20.vhd:96$413 ($add).
Removed top 25 bits (of 26) from port B of cell b20.$flatten\P1.$verific$add_39$b20.vhd:95$409 ($add).
Removed top 8 bits (of 9) from port Y of cell b20.$flatten\P1.$verific$add_36$b20.vhd:92$403 ($add).
Removed top 8 bits (of 9) from port A of cell b20.$flatten\P1.$verific$add_36$b20.vhd:92$403 ($add).
Removed top 9 bits (of 13) from port Y of cell b20.$flatten\P1.$verific$add_31$b20.vhd:90$396 ($add).
Removed top 9 bits (of 13) from port A of cell b20.$flatten\P1.$verific$add_31$b20.vhd:90$396 ($add).
Removed top 5 bits (of 8) from port Y of cell b20.$flatten\P1.$verific$add_26$b20.vhd:88$389 ($add).
Removed top 5 bits (of 8) from port A of cell b20.$flatten\P1.$verific$add_26$b20.vhd:88$389 ($add).
Removed top 3 bits (of 5) from port Y of cell b20.$flatten\P1.$verific$add_21$b20.vhd:86$382 ($add).
Removed top 3 bits (of 5) from port A of cell b20.$flatten\P1.$verific$add_21$b20.vhd:86$382 ($add).
Removed top 1 bits (of 33) from port Y of cell b20.$flatten\P1.$verific$unary_minus_15$b20.vhd:84$376 ($neg).
Removed top 1 bits (of 33) from port A of cell b20.$flatten\P1.$verific$unary_minus_15$b20.vhd:84$376 ($neg).
Removed top 1 bits (of 32) from port A of cell b20.$flatten\P1.$verific$LessThan_14$b20.vhd:83$375 ($lt).
Removed top 1 bits (of 6) from port B of cell b20.$auto$fsm_map.cc:77:implement_pattern_cache$1531 ($eq).
Removed top 3 bits (of 29) from FF cell b20.$auto$ff.cc:262:slice$1608 ($adffe).
Removed top 1 bits (of 21) from port A of cell b20.$flatten\P2.$verific$sub_634$b20.vhd:1004$1027 ($sub).
Removed top 1 bits (of 21) from port B of cell b20.$flatten\P2.$verific$sub_634$b20.vhd:1004$1027 ($sub).
Removed top 1 bits (of 21) from port A of cell b20.$flatten\P2.$verific$sub_632$b20.vhd:1003$1024 ($sub).
Removed top 1 bits (of 21) from port B of cell b20.$flatten\P2.$verific$sub_632$b20.vhd:1003$1024 ($sub).
Removed top 1 bits (of 5) from port B of cell b20.$auto$fsm_map.cc:77:implement_pattern_cache$1541 ($eq).
Removed top 2 bits (of 32) from port Y of cell b20.$flatten\P2.$verific$add_331$b20.vhd:868$985 ($add).
Removed top 2 bits (of 32) from port A of cell b20.$flatten\P2.$verific$add_331$b20.vhd:868$985 ($add).
Removed top 2 bits (of 32) from port B of cell b20.$flatten\P2.$verific$add_331$b20.vhd:868$985 ($add).
Removed top 3 bits (of 33) from port Y of cell b20.$flatten\P2.$verific$sub_297$b20.vhd:848$983 ($sub).
Removed top 3 bits (of 33) from port A of cell b20.$flatten\P2.$verific$sub_297$b20.vhd:848$983 ($sub).
Removed top 3 bits (of 33) from port B of cell b20.$flatten\P2.$verific$sub_297$b20.vhd:848$983 ($sub).
Removed top 30 bits (of 32) from port A of cell b20.$flatten\P2.$verific$equal_171$b20.vhd:756$975 ($eq).
Removed top 30 bits (of 32) from port A of cell b20.$flatten\P2.$verific$equal_170$b20.vhd:755$974 ($eq).
Removed top 31 bits (of 32) from port A of cell b20.$flatten\P2.$verific$equal_169$b20.vhd:754$973 ($eq).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P2.$verific$mux_143$b20.vhd:736$964 ($mux).
Removed top 2 bits (of 3) from port A of cell b20.$flatten\P2.$verific$equal_141$b20.vhd:734$962 ($eq).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P2.$verific$equal_140$b20.vhd:733$961 ($eq).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P2.$verific$equal_139$b20.vhd:731$960 ($eq).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P2.$verific$mux_138$b20.vhd:730$959 ($mux).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P2.$verific$mux_136$b20.vhd:726$957 ($mux).
Removed top 3 bits (of 32) from FF cell b20.$auto$ff.cc:262:slice$1569 ($adffe).
Removed top 2 bits (of 33) from port B of cell b20.$flatten\P2.$verific$sub_82$b20.vhd:659$939 ($sub).
Removed top 1 bits (of 33) from port Y of cell b20.$flatten\P2.$verific$sub_82$b20.vhd:659$939 ($sub).
Removed top 1 bits (of 33) from port A of cell b20.$flatten\P2.$verific$sub_82$b20.vhd:659$939 ($sub).
Removed top 1 bits (of 32) from port B of cell b20.$flatten\P2.$verific$LessThan_81$b20.vhd:658$938 ($lt).
Removed top 13 bits (of 33) from port A of cell b20.$flatten\P2.$verific$sub_59$b20.vhd:623$926 ($sub).
Removed top 13 bits (of 33) from port Y of cell b20.$flatten\P2.$verific$sub_59$b20.vhd:623$926 ($sub).
Removed top 13 bits (of 33) from port B of cell b20.$flatten\P2.$verific$sub_59$b20.vhd:623$926 ($sub).
Removed top 13 bits (of 33) from port A of cell b20.$flatten\P2.$verific$sub_55$b20.vhd:620$924 ($sub).
Removed top 13 bits (of 33) from port Y of cell b20.$flatten\P2.$verific$sub_55$b20.vhd:620$924 ($sub).
Removed top 13 bits (of 33) from port B of cell b20.$flatten\P2.$verific$sub_55$b20.vhd:620$924 ($sub).
Removed top 1 bits (of 3) from port Y of cell b20.$flatten\P2.$verific$add_44$b20.vhd:606$916 ($add).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P2.$verific$add_44$b20.vhd:606$916 ($add).
Removed top 1 bits (of 30) from port A of cell b20.$flatten\P2.$verific$sub_39$b20.vhd:605$912 ($sub).
Removed top 26 bits (of 30) from port B of cell b20.$flatten\P2.$verific$sub_39$b20.vhd:605$912 ($sub).
Removed top 8 bits (of 9) from port Y of cell b20.$flatten\P2.$verific$add_36$b20.vhd:602$906 ($add).
Removed top 8 bits (of 9) from port A of cell b20.$flatten\P2.$verific$add_36$b20.vhd:602$906 ($add).
Removed top 9 bits (of 13) from port Y of cell b20.$flatten\P2.$verific$add_31$b20.vhd:600$899 ($add).
Removed top 9 bits (of 13) from port A of cell b20.$flatten\P2.$verific$add_31$b20.vhd:600$899 ($add).
Removed top 5 bits (of 8) from port Y of cell b20.$flatten\P2.$verific$add_26$b20.vhd:598$892 ($add).
Removed top 5 bits (of 8) from port A of cell b20.$flatten\P2.$verific$add_26$b20.vhd:598$892 ($add).
Removed top 3 bits (of 5) from port Y of cell b20.$flatten\P2.$verific$add_21$b20.vhd:596$885 ($add).
Removed top 3 bits (of 5) from port A of cell b20.$flatten\P2.$verific$add_21$b20.vhd:596$885 ($add).
Removed top 1 bits (of 33) from port Y of cell b20.$flatten\P2.$verific$unary_minus_15$b20.vhd:594$879 ($neg).
Removed top 1 bits (of 33) from port A of cell b20.$flatten\P2.$verific$unary_minus_15$b20.vhd:594$879 ($neg).
Removed top 1 bits (of 32) from port A of cell b20.$flatten\P2.$verific$LessThan_14$b20.vhd:593$878 ($lt).
Removed top 3 bits (of 32) from mux cell b20.$flatten\P1.$verific$mux_698$b20.vhd:502$536 ($mux).
Removed top 3 bits (of 32) from mux cell b20.$flatten\P2.$verific$mux_667$b20.vhd:1012$1056 ($mux).
Removed top 3 bits (of 32) from mux cell b20.$flatten\P1.$verific$mux_679$b20.vhd:501$522 ($mux).
Removed top 3 bits (of 32) from mux cell b20.$flatten\P2.$verific$mux_648$b20.vhd:1011$1042 ($mux).
Removed top 20 bits (of 21) from wire b20.$flatten\P1.$verific$n10477$333.
Removed top 3 bits (of 32) from wire b20.$flatten\P1.$verific$n10755$344.
Removed top 3 bits (of 32) from wire b20.$flatten\P1.$verific$n11178$353.
Removed top 30 bits (of 32) from wire b20.$flatten\P1.$verific$n11472$358.
Removed top 30 bits (of 32) from wire b20.$flatten\P1.$verific$n1407$226.
Removed top 30 bits (of 32) from wire b20.$flatten\P1.$verific$n1441$227.
Removed top 30 bits (of 32) from wire b20.$flatten\P1.$verific$n1478$228.
Removed top 1 bits (of 33) from wire b20.$flatten\P1.$verific$n184$195.
Removed top 1 bits (of 33) from wire b20.$flatten\P1.$verific$n1987$239.
Removed top 3 bits (of 5) from wire b20.$flatten\P1.$verific$n288$198.
Removed top 5 bits (of 8) from wire b20.$flatten\P1.$verific$n301$200.
Removed top 9 bits (of 13) from wire b20.$flatten\P1.$verific$n318$202.
Removed top 8 bits (of 9) from wire b20.$flatten\P1.$verific$n341$204.
Removed top 2 bits (of 32) from wire b20.$flatten\P1.$verific$n4241$272.
Removed top 1 bits (of 3) from wire b20.$flatten\P1.$verific$n436$208.
Removed top 3 bits (of 33) from wire b20.$flatten\P1.$verific$n5666$286.
Removed top 1 bits (of 32) from wire b20.$flatten\P1.$verific$n862$221.
Removed top 1 bits (of 33) from wire b20.$flatten\P1.$verific$n933$223.
Removed top 1 bits (of 21) from wire b20.$flatten\P2.$verific$n10326$837.
Removed top 3 bits (of 32) from wire b20.$flatten\P2.$verific$n10611$847.
Removed top 3 bits (of 32) from wire b20.$flatten\P2.$verific$n11034$856.
Removed top 30 bits (of 32) from wire b20.$flatten\P2.$verific$n11328$861.
Removed top 30 bits (of 32) from wire b20.$flatten\P2.$verific$n1408$726.
Removed top 31 bits (of 32) from wire b20.$flatten\P2.$verific$n1442$727.
Removed top 30 bits (of 32) from wire b20.$flatten\P2.$verific$n1479$728.
Removed top 1 bits (of 33) from wire b20.$flatten\P2.$verific$n184$695.
Removed top 5 bits (of 8) from wire b20.$flatten\P2.$verific$n301$700.
Removed top 9 bits (of 13) from wire b20.$flatten\P2.$verific$n318$702.
Removed top 8 bits (of 9) from wire b20.$flatten\P2.$verific$n341$704.
Removed top 1 bits (of 3) from wire b20.$flatten\P2.$verific$n439$708.
Removed top 3 bits (of 33) from wire b20.$flatten\P2.$verific$n4798$770.
Removed top 2 bits (of 32) from wire b20.$flatten\P2.$verific$n5506$780.
Removed top 4 bits (of 32) from wire b20.$flatten\P2.$verific$n5776$782.
Removed top 1 bits (of 33) from wire b20.$flatten\P2.$verific$n934$723.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 44 unused cells and 147 unused wires.
<suppressed ~45 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b20:
  creating $macc model for $flatten\P1.$verific$add_21$b20.vhd:86$382 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b20.vhd:88$389 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b20.vhd:318$478 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b20.vhd:90$396 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b20.vhd:92$403 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b20.vhd:95$409 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b20.vhd:96$413 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b20.vhd:110$421 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b20.vhd:466$485 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b20.vhd:113$423 ($add).
  creating $macc model for $flatten\P1.$verific$add_662$b20.vhd:493$505 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b20.vhd:494$507 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b20.vhd:497$511 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b20.vhd:243$467 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b20.vhd:358$480 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b20.vhd:149$436 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b20.vhd:84$376 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b20.vhd:596$885 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b20.vhd:598$892 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b20.vhd:600$899 ($add).
  creating $macc model for $flatten\P2.$verific$add_331$b20.vhd:868$985 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b20.vhd:602$906 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b20.vhd:606$916 ($add).
  creating $macc model for $flatten\P2.$verific$add_540$b20.vhd:976$1002 ($add).
  creating $macc model for $flatten\P2.$verific$sub_297$b20.vhd:848$983 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_39$b20.vhd:605$912 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_55$b20.vhd:620$924 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_59$b20.vhd:623$926 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_632$b20.vhd:1003$1024 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_634$b20.vhd:1004$1027 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_82$b20.vhd:659$939 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b20.vhd:594$879 ($neg).
  creating $macc model for $verific$add_24$b20.vhd:1077$58 ($add).
  creating $macc model for $verific$add_3$b20.vhd:1068$40 ($add).
  creating $macc model for $verific$add_30$b20.vhd:1081$60 ($add).
  creating $alu model for $macc $verific$add_30$b20.vhd:1081$60.
  creating $alu model for $macc $verific$add_3$b20.vhd:1068$40.
  creating $alu model for $macc $verific$add_24$b20.vhd:1077$58.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b20.vhd:594$879.
  creating $alu model for $macc $flatten\P2.$verific$sub_82$b20.vhd:659$939.
  creating $alu model for $macc $flatten\P2.$verific$sub_634$b20.vhd:1004$1027.
  creating $alu model for $macc $flatten\P2.$verific$sub_632$b20.vhd:1003$1024.
  creating $alu model for $macc $flatten\P2.$verific$sub_59$b20.vhd:623$926.
  creating $alu model for $macc $flatten\P2.$verific$sub_55$b20.vhd:620$924.
  creating $alu model for $macc $flatten\P2.$verific$sub_39$b20.vhd:605$912.
  creating $alu model for $macc $flatten\P2.$verific$sub_297$b20.vhd:848$983.
  creating $alu model for $macc $flatten\P2.$verific$add_540$b20.vhd:976$1002.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b20.vhd:606$916.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b20.vhd:602$906.
  creating $alu model for $macc $flatten\P2.$verific$add_331$b20.vhd:868$985.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b20.vhd:600$899.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b20.vhd:598$892.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b20.vhd:596$885.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b20.vhd:84$376.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b20.vhd:149$436.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b20.vhd:358$480.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b20.vhd:243$467.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b20.vhd:494$507.
  creating $alu model for $macc $flatten\P1.$verific$add_662$b20.vhd:493$505.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b20.vhd:113$423.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b20.vhd:466$485.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b20.vhd:110$421.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b20.vhd:96$413.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b20.vhd:95$409.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b20.vhd:92$403.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b20.vhd:90$396.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b20.vhd:318$478.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b20.vhd:88$389.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b20.vhd:86$382.
  creating $macc cell for $flatten\P1.$verific$mult_667$b20.vhd:497$511: $auto$alumacc.cc:365:replace_macc$1860
  creating $alu model for $flatten\P1.$verific$LessThan_14$b20.vhd:83$375 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b20.vhd:118$429 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b20.vhd:138$433 ($lt): merged with $flatten\P1.$verific$LessThan_68$b20.vhd:118$429.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b20.vhd:148$435 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b20.vhd:151$440 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b20.vhd:593$878 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_66$b20.vhd:628$932 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_76$b20.vhd:648$936 ($lt): merged with $flatten\P2.$verific$LessThan_66$b20.vhd:628$932.
  creating $alu model for $flatten\P2.$verific$LessThan_81$b20.vhd:658$938 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_85$b20.vhd:661$943 ($lt): new $alu
  creating $alu model for $verific$LessThan_11$b20.vhd:1075$48 ($lt): new $alu
  creating $alu model for $verific$LessThan_12$b20.vhd:1075$49 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b20.vhd:1076$53 ($lt): new $alu
  creating $alu model for $verific$LessThan_17$b20.vhd:1076$54 ($lt): new $alu
  creating $alu cell for $verific$LessThan_17$b20.vhd:1076$54: $auto$alumacc.cc:485:replace_alu$1873
  creating $alu cell for $verific$LessThan_16$b20.vhd:1076$53: $auto$alumacc.cc:485:replace_alu$1878
  creating $alu cell for $verific$LessThan_12$b20.vhd:1075$49: $auto$alumacc.cc:485:replace_alu$1883
  creating $alu cell for $verific$LessThan_11$b20.vhd:1075$48: $auto$alumacc.cc:485:replace_alu$1888
  creating $alu cell for $flatten\P2.$verific$LessThan_85$b20.vhd:661$943: $auto$alumacc.cc:485:replace_alu$1893
  creating $alu cell for $flatten\P2.$verific$LessThan_81$b20.vhd:658$938: $auto$alumacc.cc:485:replace_alu$1904
  creating $alu cell for $flatten\P2.$verific$LessThan_66$b20.vhd:628$932, $flatten\P2.$verific$LessThan_76$b20.vhd:648$936: $auto$alumacc.cc:485:replace_alu$1915
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b20.vhd:593$878: $auto$alumacc.cc:485:replace_alu$1926
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b20.vhd:151$440: $auto$alumacc.cc:485:replace_alu$1931
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b20.vhd:148$435: $auto$alumacc.cc:485:replace_alu$1936
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b20.vhd:118$429, $flatten\P1.$verific$LessThan_78$b20.vhd:138$433: $auto$alumacc.cc:485:replace_alu$1947
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b20.vhd:83$375: $auto$alumacc.cc:485:replace_alu$1958
  creating $alu cell for $flatten\P1.$verific$add_21$b20.vhd:86$382: $auto$alumacc.cc:485:replace_alu$1963
  creating $alu cell for $flatten\P1.$verific$add_26$b20.vhd:88$389: $auto$alumacc.cc:485:replace_alu$1966
  creating $alu cell for $flatten\P1.$verific$add_283$b20.vhd:318$478: $auto$alumacc.cc:485:replace_alu$1969
  creating $alu cell for $flatten\P1.$verific$add_31$b20.vhd:90$396: $auto$alumacc.cc:485:replace_alu$1972
  creating $alu cell for $flatten\P1.$verific$add_36$b20.vhd:92$403: $auto$alumacc.cc:485:replace_alu$1975
  creating $alu cell for $flatten\P1.$verific$add_39$b20.vhd:95$409: $auto$alumacc.cc:485:replace_alu$1978
  creating $alu cell for $flatten\P1.$verific$add_44$b20.vhd:96$413: $auto$alumacc.cc:485:replace_alu$1981
  creating $alu cell for $flatten\P1.$verific$add_570$b20.vhd:466$485: $auto$alumacc.cc:485:replace_alu$1984
  creating $alu cell for $flatten\P1.$verific$add_56$b20.vhd:110$421: $auto$alumacc.cc:485:replace_alu$1987
  creating $alu cell for $flatten\P1.$verific$add_662$b20.vhd:493$505: $auto$alumacc.cc:485:replace_alu$1990
  creating $alu cell for $flatten\P1.$verific$add_61$b20.vhd:113$423: $auto$alumacc.cc:485:replace_alu$1993
  creating $alu cell for $flatten\P1.$verific$add_664$b20.vhd:494$507: $auto$alumacc.cc:485:replace_alu$1996
  creating $alu cell for $flatten\P1.$verific$sub_168$b20.vhd:243$467: $auto$alumacc.cc:485:replace_alu$1999
  creating $alu cell for $flatten\P1.$verific$sub_365$b20.vhd:358$480: $auto$alumacc.cc:485:replace_alu$2002
  creating $alu cell for $flatten\P1.$verific$sub_84$b20.vhd:149$436: $auto$alumacc.cc:485:replace_alu$2005
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b20.vhd:84$376: $auto$alumacc.cc:485:replace_alu$2008
  creating $alu cell for $flatten\P2.$verific$add_21$b20.vhd:596$885: $auto$alumacc.cc:485:replace_alu$2011
  creating $alu cell for $flatten\P2.$verific$add_26$b20.vhd:598$892: $auto$alumacc.cc:485:replace_alu$2014
  creating $alu cell for $flatten\P2.$verific$add_31$b20.vhd:600$899: $auto$alumacc.cc:485:replace_alu$2017
  creating $alu cell for $flatten\P2.$verific$add_331$b20.vhd:868$985: $auto$alumacc.cc:485:replace_alu$2020
  creating $alu cell for $flatten\P2.$verific$add_36$b20.vhd:602$906: $auto$alumacc.cc:485:replace_alu$2023
  creating $alu cell for $flatten\P2.$verific$add_44$b20.vhd:606$916: $auto$alumacc.cc:485:replace_alu$2026
  creating $alu cell for $flatten\P2.$verific$add_540$b20.vhd:976$1002: $auto$alumacc.cc:485:replace_alu$2029
  creating $alu cell for $flatten\P2.$verific$sub_297$b20.vhd:848$983: $auto$alumacc.cc:485:replace_alu$2032
  creating $alu cell for $flatten\P2.$verific$sub_39$b20.vhd:605$912: $auto$alumacc.cc:485:replace_alu$2035
  creating $alu cell for $flatten\P2.$verific$sub_55$b20.vhd:620$924: $auto$alumacc.cc:485:replace_alu$2038
  creating $alu cell for $flatten\P2.$verific$sub_59$b20.vhd:623$926: $auto$alumacc.cc:485:replace_alu$2041
  creating $alu cell for $flatten\P2.$verific$sub_632$b20.vhd:1003$1024: $auto$alumacc.cc:485:replace_alu$2044
  creating $alu cell for $flatten\P2.$verific$sub_634$b20.vhd:1004$1027: $auto$alumacc.cc:485:replace_alu$2047
  creating $alu cell for $flatten\P2.$verific$sub_82$b20.vhd:659$939: $auto$alumacc.cc:485:replace_alu$2050
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b20.vhd:594$879: $auto$alumacc.cc:485:replace_alu$2053
  creating $alu cell for $verific$add_24$b20.vhd:1077$58: $auto$alumacc.cc:485:replace_alu$2056
  creating $alu cell for $verific$add_3$b20.vhd:1068$40: $auto$alumacc.cc:485:replace_alu$2059
  creating $alu cell for $verific$add_30$b20.vhd:1081$60: $auto$alumacc.cc:485:replace_alu$2062
  created 46 $alu and 1 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~10 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 4 unused cells and 24 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> stat

3.22. Printing statistics.

=== b20 ===

   Number of wires:                561
   Number of wire bits:           9267
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                425
     $adff                          14
     $adffe                         13
     $alu                           46
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           98
     $ne                             2
     $not                           26
     $or                            24
     $reduce_and                    11
     $reduce_or                     34
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$6bf3afcadde450e76c699a4da1838452ccdf24c7\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod$8027eda61d95ddd4d4dd7b5cb21f3830552ebe4e\_80_rs_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$8357_Y
    new assignment: { } = { }.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
Using template $paramod$172f2253883621b746ed3e405a5e271c8c312010\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:454:run$1642 [0] (3x1 bits, unsigned)
Using template $paramod$7bd3bdb0fef16fc2bd4fd60ec6e664d79bf31ac7\_80_rs_alu for cells of type $alu.
Using template $paramod$6dc2bc4e177433cbefea60fe94ff11f8a7c6abf8\_90_alu for cells of type $alu.
Using template $paramod$2fcdd83405601057593cb25247304b1283f3b87e\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
No more expansions possible.
<suppressed ~4529 debug messages>

yosys> stat

3.24. Printing statistics.

=== b20 ===

   Number of wires:               3332
   Number of wire bits:          55475
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              18732
     $_AND_                       1537
     $_DFFE_PP0P_                  316
     $_DFF_PP0_                    118
     $_MUX_                      11665
     $_NOT_                       1087
     $_OR_                        1480
     $_XOR_                       1893
     adder_carry                   636


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~6982 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~9531 debug messages>
Removed a total of 3177 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10202 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [19], Q = \P2.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4330 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [19], Q = \P1.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4308 ($_DFFE_PP0P_) from module b20 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).
Adding EN signal on $auto$ff.cc:262:slice$10180 ($_DFFE_PP0P_) from module b20 (D = $flatten\P2.$verific$n10835$683, Q = \P2.B).
Adding EN signal on $auto$ff.cc:262:slice$4311 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [0], Q = \P1.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$4312 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [1], Q = \P1.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$4313 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [2], Q = \P1.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$4314 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [3], Q = \P1.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$4315 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [4], Q = \P1.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$4316 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [5], Q = \P1.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$4317 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [6], Q = \P1.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$4318 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [7], Q = \P1.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$4319 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [8], Q = \P1.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$4320 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [9], Q = \P1.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$4321 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [10], Q = \P1.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$4322 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [11], Q = \P1.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$4323 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [12], Q = \P1.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$4324 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [13], Q = \P1.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$4325 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [14], Q = \P1.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$4326 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [15], Q = \P1.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$4327 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [16], Q = \P1.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$4328 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [17], Q = \P1.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$4329 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [18], Q = \P1.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$15115 ($_DFFE_PP0P_) from module b20 (D = $auto$wreduce.cc:454:run$1662 [0], Q = \P2.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$15116 ($_DFFE_PP0P_) from module b20 (D = $auto$wreduce.cc:454:run$1662 [1], Q = \P2.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$15117 ($_DFFE_PP0P_) from module b20 (D = $auto$wreduce.cc:454:run$1662 [2], Q = \P2.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10183 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [0], Q = \P2.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$10184 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [1], Q = \P2.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$10185 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [2], Q = \P2.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$10186 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [3], Q = \P2.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$10187 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [4], Q = \P2.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$10188 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [5], Q = \P2.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$10189 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [6], Q = \P2.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$10190 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [7], Q = \P2.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$10191 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [8], Q = \P2.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$10192 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [9], Q = \P2.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$10193 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [10], Q = \P2.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$10194 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [11], Q = \P2.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$10195 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [12], Q = \P2.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$10196 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [13], Q = \P2.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$10197 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [14], Q = \P2.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$10198 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [15], Q = \P2.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$10199 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [16], Q = \P2.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$10200 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [17], Q = \P2.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$10201 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [18], Q = \P2.addr [18]).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 814 unused cells and 2322 unused wires.
<suppressed ~815 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~619 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~1431 debug messages>
Removed a total of 477 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10214 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [11], Q = \P2.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10213 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [10], Q = \P2.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10212 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [9], Q = \P2.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10211 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [8], Q = \P2.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10210 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [7], Q = \P2.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10209 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [6], Q = \P2.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10208 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [5], Q = \P2.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10207 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [4], Q = \P2.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10206 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [3], Q = \P2.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10205 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [2], Q = \P2.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10204 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [1], Q = \P2.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10203 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [0], Q = \P2.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4333 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [2], Q = \P1.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4332 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [1], Q = \P1.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4331 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [0], Q = \P1.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10333 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5205 [2], Q = \P1.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10332 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5205 [1], Q = \P1.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10331 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5205 [0], Q = \P1.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10298 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [31], Q = \P2.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10297 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10296 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10295 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10294 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10293 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10292 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10291 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10290 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10289 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10288 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10287 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10286 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10285 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10284 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10283 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10282 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10281 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10280 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10279 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10278 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10277 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10276 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10275 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10274 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10273 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10272 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10271 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10270 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10269 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10268 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10267 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10266 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10265 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10264 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10263 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10262 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10261 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10260 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10259 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10258 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10257 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10256 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10255 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10254 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10253 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10252 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10251 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10250 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10249 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10248 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10247 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10246 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10245 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10244 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10243 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10242 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10241 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10240 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10239 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10238 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10237 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10236 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10235 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10234 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [31], Q = \P2.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10233 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [30], Q = \P2.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10232 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [29], Q = \P2.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10231 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [28], Q = \P2.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10230 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [27], Q = \P2.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10229 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [26], Q = \P2.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10228 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [25], Q = \P2.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10227 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [24], Q = \P2.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10226 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [23], Q = \P2.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10225 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [22], Q = \P2.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10224 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [21], Q = \P2.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10223 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [20], Q = \P2.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10222 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [19], Q = \P2.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10221 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [18], Q = \P2.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10220 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [17], Q = \P2.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10219 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [16], Q = \P2.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10218 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [15], Q = \P2.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10217 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [14], Q = \P2.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10216 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [13], Q = \P2.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10215 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12883 [12], Q = \P2.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4426 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [31], Q = \P1.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4425 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [30], Q = \P1.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4424 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [29], Q = \P1.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4423 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [28], Q = \P1.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4422 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [27], Q = \P1.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4421 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [26], Q = \P1.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4420 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [25], Q = \P1.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4419 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [24], Q = \P1.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4418 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [23], Q = \P1.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4417 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [22], Q = \P1.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4416 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [21], Q = \P1.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4415 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [20], Q = \P1.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4414 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [19], Q = \P1.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4413 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [18], Q = \P1.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4412 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [17], Q = \P1.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4411 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [16], Q = \P1.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4410 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [15], Q = \P1.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4409 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [14], Q = \P1.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4408 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [13], Q = \P1.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4407 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [12], Q = \P1.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4406 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [11], Q = \P1.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4405 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [10], Q = \P1.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4404 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [9], Q = \P1.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4403 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [8], Q = \P1.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4402 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [7], Q = \P1.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4401 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [6], Q = \P1.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4400 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [5], Q = \P1.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4399 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [4], Q = \P1.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4398 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [3], Q = \P1.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4397 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [2], Q = \P1.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4396 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [1], Q = \P1.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4395 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4394 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [31], Q = \P1.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4393 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [30], Q = \P1.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4392 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [29], Q = \P1.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4391 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [28], Q = \P1.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4390 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [27], Q = \P1.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4389 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [26], Q = \P1.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4388 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [25], Q = \P1.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4387 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [24], Q = \P1.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4386 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [23], Q = \P1.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4385 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [22], Q = \P1.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4384 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [21], Q = \P1.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4383 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [20], Q = \P1.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4382 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [19], Q = \P1.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4381 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [18], Q = \P1.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4380 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [17], Q = \P1.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4379 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [16], Q = \P1.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4378 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [15], Q = \P1.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4377 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [14], Q = \P1.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4376 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [13], Q = \P1.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4375 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [12], Q = \P1.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4374 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [11], Q = \P1.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4373 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [10], Q = \P1.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4372 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [9], Q = \P1.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4371 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [8], Q = \P1.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4370 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [7], Q = \P1.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4369 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [6], Q = \P1.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4368 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [5], Q = \P1.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4367 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [4], Q = \P1.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4366 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [3], Q = \P1.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4365 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [2], Q = \P1.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4364 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [1], Q = \P1.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4363 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4362 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [31], Q = \P1.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4361 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [30], Q = \P1.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4360 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [29], Q = \P1.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4359 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [28], Q = \P1.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4358 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [27], Q = \P1.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4357 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [26], Q = \P1.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4356 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [25], Q = \P1.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4355 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [24], Q = \P1.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4354 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [23], Q = \P1.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4353 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [22], Q = \P1.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4352 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [21], Q = \P1.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4351 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [20], Q = \P1.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4350 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [19], Q = \P1.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4349 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [18], Q = \P1.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4348 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [17], Q = \P1.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4347 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [16], Q = \P1.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4346 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [15], Q = \P1.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4345 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [14], Q = \P1.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4344 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [13], Q = \P1.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4343 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [12], Q = \P1.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4342 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [11], Q = \P1.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4341 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [10], Q = \P1.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4340 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [9], Q = \P1.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4339 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [8], Q = \P1.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4338 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [7], Q = \P1.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4337 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [6], Q = \P1.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4336 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [5], Q = \P1.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4335 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [4], Q = \P1.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4334 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5689 [3], Q = \P1.reg2 [3]).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 1661 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~4187 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~19773 debug messages>
Removed a total of 6591 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 6362 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.25.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~1242 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$30806 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$30636 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$30466 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$30296 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$30126 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$29956 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$29786 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$29616 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$29446 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$29276 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$29106 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$30721 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$30551 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$30381 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$30211 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$30041 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$29871 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$29701 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$29531 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$29361 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$29191 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$29021 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$38558 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6173 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$35391 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6657 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$28936 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$28851 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$28766 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$28681 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$28596 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$28511 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$28426 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$28341 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$28256 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$28171 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13367 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$28086 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$28001 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$27916 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$27831 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$27746 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$27661 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$27576 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$27491 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$27406 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$27321 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$27236 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$27151 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$27066 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$26981 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$26896 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$26811 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$26726 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$26641 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$26556 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$26471 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$26386 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$26301 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$26216 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$26131 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$26046 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$25961 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$25876 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$25791 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$25706 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$25621 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$25536 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$25451 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13851 [31], Q = \P2.reg0 [31]).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 156 unused wires.
<suppressed ~1 debug messages>

3.26.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.26.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~270 debug messages>

yosys> opt_merge

3.26.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~756 debug messages>
Removed a total of 252 cells.

yosys> opt_dff

3.26.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 318 unused wires.
<suppressed ~1 debug messages>

3.26.10. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15061 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15081
        $auto$simplemap.cc:86:simplemap_bitop$15082

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15062 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15079
        $auto$simplemap.cc:86:simplemap_bitop$15080

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15063 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15077
        $auto$simplemap.cc:86:simplemap_bitop$15078

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15064 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15075
        $auto$simplemap.cc:86:simplemap_bitop$15076

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7789 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7809
        $auto$simplemap.cc:86:simplemap_bitop$7810

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7790 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7807
        $auto$simplemap.cc:86:simplemap_bitop$7808

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7791 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7805
        $auto$simplemap.cc:86:simplemap_bitop$7806

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7792 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7803
        $auto$simplemap.cc:86:simplemap_bitop$7804


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~8 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15068 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15079
        $auto$simplemap.cc:86:simplemap_bitop$15081

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15069 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15075
        $auto$simplemap.cc:86:simplemap_bitop$15077

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7796 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7807
        $auto$simplemap.cc:86:simplemap_bitop$7809

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7797 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7803
        $auto$simplemap.cc:86:simplemap_bitop$7805


yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~4 debug messages>

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15072 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15075
        $auto$simplemap.cc:86:simplemap_bitop$15079

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7800 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7803
        $auto$simplemap.cc:86:simplemap_bitop$7807


yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~2 debug messages>

3.28.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.28.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.28.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_share

3.28.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr -full

3.28.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.28.34. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Summary of detected clock domains:
  730 cells in clk=\clock, en=\P1.state, arst=\reset, srst={ }
  673 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46657, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46470, arst=\reset, srst={ }
  31 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46453, arst=\reset, srst={ }
  522 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46079, arst=\reset, srst={ }
  167 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1633, arst=\reset, srst={ }
  601 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$35547, arst=\reset, srst={ }
  494 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$32380, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25444, arst=\reset, srst={ }
  83 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25305, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25223, arst=\reset, srst={ }
  741 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25084, arst=\reset, srst={ }
  859 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$24230, arst=\reset, srst={ }
  104 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$23104, arst=\reset, srst={ }
  559 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22657, arst=\reset, srst={ }
  519 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22539, arst=\reset, srst={ }
  134 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$22415, arst=\reset, srst={ }
  371 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$22397, arst=\reset, srst={ }
  750 cells in clk=\clock, en=\P2.state, arst=\reset, srst={ }
  300 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1594, arst=\reset, srst={ }
  890 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.29.2. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P1.state, asynchronously reset by \reset
Extracted 730 gates and 928 wires to a netlist network with 197 inputs and 45 outputs.

3.29.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       26
ABC RESULTS:               NOT cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       28
ABC RESULTS:                OR cells:       34
ABC RESULTS:             ORNOT cells:       65
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               AND cells:      110
ABC RESULTS:               NOR cells:       25
ABC RESULTS:              NAND cells:      351
ABC RESULTS:               MUX cells:      157
ABC RESULTS:        internal signals:      686
ABC RESULTS:           input signals:      197
ABC RESULTS:          output signals:       45
Removing temp directory.

3.29.3. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46657, asynchronously reset by \reset
Extracted 613 gates and 820 wires to a netlist network with 206 inputs and 157 outputs.

3.29.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       31
ABC RESULTS:               NOT cells:       33
ABC RESULTS:               MUX cells:       63
ABC RESULTS:                OR cells:       37
ABC RESULTS:             ORNOT cells:       35
ABC RESULTS:            ANDNOT cells:       88
ABC RESULTS:               NOR cells:       32
ABC RESULTS:              NAND cells:      341
ABC RESULTS:               AND cells:      166
ABC RESULTS:        internal signals:      457
ABC RESULTS:           input signals:      206
ABC RESULTS:          output signals:      157
Removing temp directory.

3.29.4. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46470, asynchronously reset by \reset
Extracted 25 gates and 47 wires to a netlist network with 21 inputs and 8 outputs.

3.29.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               XOR cells:        2
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               MUX cells:        4
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        9
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.5. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46453, asynchronously reset by \reset
Extracted 27 gates and 53 wires to a netlist network with 24 inputs and 7 outputs.

3.29.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               MUX cells:        2
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               NOR cells:        3
ABC RESULTS:                OR cells:        5
ABC RESULTS:               XOR cells:        2
ABC RESULTS:               AND cells:       10
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.6. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46079, asynchronously reset by \reset
Extracted 502 gates and 702 wires to a netlist network with 198 inputs and 108 outputs.

3.29.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOT cells:       21
ABC RESULTS:               XOR cells:       20
ABC RESULTS:             ORNOT cells:       50
ABC RESULTS:                OR cells:       97
ABC RESULTS:               MUX cells:       61
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               NOR cells:       23
ABC RESULTS:              NAND cells:      238
ABC RESULTS:               AND cells:      230
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:      396
ABC RESULTS:           input signals:      198
ABC RESULTS:          output signals:      108
Removing temp directory.

3.29.7. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1633, asynchronously reset by \reset
Extracted 135 gates and 268 wires to a netlist network with 133 inputs and 126 outputs.

3.29.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:               AND cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       30
ABC RESULTS:               BUF cells:       30
ABC RESULTS:               MUX cells:       95
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:      133
ABC RESULTS:          output signals:      126
Removing temp directory.

3.29.8. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$35547, asynchronously reset by \reset
Extracted 579 gates and 804 wires to a netlist network with 224 inputs and 110 outputs.

3.29.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               NOT cells:        4
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       49
ABC RESULTS:                OR cells:       60
ABC RESULTS:            ANDNOT cells:      106
ABC RESULTS:               NOR cells:       36
ABC RESULTS:               MUX cells:      122
ABC RESULTS:             ORNOT cells:       56
ABC RESULTS:              NAND cells:      149
ABC RESULTS:               AND cells:      155
ABC RESULTS:               BUF cells:       17
ABC RESULTS:        internal signals:      470
ABC RESULTS:           input signals:      224
ABC RESULTS:          output signals:      110
Removing temp directory.

3.29.9. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$32380, asynchronously reset by \reset
Extracted 469 gates and 669 wires to a netlist network with 199 inputs and 65 outputs.

3.29.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               NOT cells:        3
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:                OR cells:       21
ABC RESULTS:            ANDNOT cells:       60
ABC RESULTS:               NOR cells:       36
ABC RESULTS:               MUX cells:      162
ABC RESULTS:              NAND cells:      152
ABC RESULTS:               AND cells:      113
ABC RESULTS:               BUF cells:       31
ABC RESULTS:        internal signals:      405
ABC RESULTS:           input signals:      199
ABC RESULTS:          output signals:       65
Removing temp directory.

3.29.10. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25444, asynchronously reset by \reset
Extracted 34 gates and 58 wires to a netlist network with 23 inputs and 15 outputs.

3.29.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.10.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               MUX cells:        4
ABC RESULTS:                OR cells:        8
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               AND cells:        9
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.11. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25305, asynchronously reset by \reset
Extracted 81 gates and 127 wires to a netlist network with 45 inputs and 26 outputs.

3.29.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.11.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               NOT cells:       10
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        2
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               NOR cells:       15
ABC RESULTS:               MUX cells:       10
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              NAND cells:       26
ABC RESULTS:               AND cells:       20
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       56
ABC RESULTS:           input signals:       45
ABC RESULTS:          output signals:       26
Removing temp directory.

3.29.12. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25223, asynchronously reset by \reset
Extracted 28 gates and 50 wires to a netlist network with 21 inputs and 13 outputs.

3.29.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.12.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:               AND cells:        5
ABC RESULTS:                OR cells:        4
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.13. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25084, asynchronously reset by \reset
Extracted 668 gates and 925 wires to a netlist network with 255 inputs and 188 outputs.

3.29.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.13.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               XOR cells:       19
ABC RESULTS:              XNOR cells:       31
ABC RESULTS:               NOT cells:       59
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:               MUX cells:      105
ABC RESULTS:                OR cells:       37
ABC RESULTS:               NOR cells:       23
ABC RESULTS:            ANDNOT cells:       37
ABC RESULTS:               AND cells:      165
ABC RESULTS:              NAND cells:      439
ABC RESULTS:               BUF cells:       17
ABC RESULTS:        internal signals:      482
ABC RESULTS:           input signals:      255
ABC RESULTS:          output signals:      188
Removing temp directory.

3.29.14. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24230, asynchronously reset by \reset
Extracted 816 gates and 1092 wires to a netlist network with 274 inputs and 223 outputs.

3.29.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.14.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOT cells:       48
ABC RESULTS:              XNOR cells:       22
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:             ORNOT cells:       17
ABC RESULTS:               NOR cells:       22
ABC RESULTS:               AND cells:      264
ABC RESULTS:                OR cells:      123
ABC RESULTS:              NAND cells:      342
ABC RESULTS:               MUX cells:      162
ABC RESULTS:               BUF cells:       19
ABC RESULTS:        internal signals:      595
ABC RESULTS:           input signals:      274
ABC RESULTS:          output signals:      223
Removing temp directory.

3.29.15. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23104, asynchronously reset by \reset
Extracted 97 gates and 150 wires to a netlist network with 52 inputs and 29 outputs.

3.29.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.15.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        7
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        2
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               MUX cells:       11
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:                OR cells:       13
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       31
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:       69
ABC RESULTS:           input signals:       52
ABC RESULTS:          output signals:       29
Removing temp directory.

3.29.16. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22657, asynchronously reset by \reset
Extracted 483 gates and 602 wires to a netlist network with 118 inputs and 79 outputs.

3.29.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.16.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               NOT cells:        7
ABC RESULTS:                OR cells:       15
ABC RESULTS:               NOR cells:       21
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               AND cells:       59
ABC RESULTS:               BUF cells:        1
ABC RESULTS:              XNOR cells:       58
ABC RESULTS:        internal signals:      405
ABC RESULTS:           input signals:      118
ABC RESULTS:          output signals:       79
Removing temp directory.

3.29.17. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22539, asynchronously reset by \reset
Extracted 445 gates and 612 wires to a netlist network with 166 inputs and 117 outputs.

3.29.17.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.17.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOR cells:       20
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:              NAND cells:       17
ABC RESULTS:               NOT cells:        6
ABC RESULTS:               XOR cells:       27
ABC RESULTS:                OR cells:       28
ABC RESULTS:              XNOR cells:       33
ABC RESULTS:               MUX cells:        4
ABC RESULTS:               AND cells:       59
ABC RESULTS:               BUF cells:       27
ABC RESULTS:        internal signals:      329
ABC RESULTS:           input signals:      166
ABC RESULTS:          output signals:      117
Removing temp directory.

3.29.18. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$22415, asynchronously reset by \reset
Extracted 114 gates and 174 wires to a netlist network with 60 inputs and 95 outputs.

3.29.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.18.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       20
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:       21
ABC RESULTS:               AND cells:       10
ABC RESULTS:                OR cells:       14
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               MUX cells:       21
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               BUF cells:       39
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       60
ABC RESULTS:          output signals:       95
Removing temp directory.

3.29.19. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$22397, asynchronously reset by \reset
Extracted 329 gates and 527 wires to a netlist network with 198 inputs and 120 outputs.

3.29.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.19.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       20
ABC RESULTS:               NOT cells:       24
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               XOR cells:       56
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:               MUX cells:       60
ABC RESULTS:             ORNOT cells:       79
ABC RESULTS:                OR cells:       43
ABC RESULTS:               AND cells:       71
ABC RESULTS:              NAND cells:       86
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:      209
ABC RESULTS:           input signals:      198
ABC RESULTS:          output signals:      120
Removing temp directory.

3.29.20. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P2.state, asynchronously reset by \reset
Extracted 750 gates and 905 wires to a netlist network with 154 inputs and 53 outputs.

3.29.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.20.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       26
ABC RESULTS:               XOR cells:       12
ABC RESULTS:              XNOR cells:       14
ABC RESULTS:               NOT cells:       32
ABC RESULTS:            ANDNOT cells:       18
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:               NOR cells:       16
ABC RESULTS:               AND cells:      139
ABC RESULTS:                OR cells:      143
ABC RESULTS:              NAND cells:      250
ABC RESULTS:               MUX cells:      140
ABC RESULTS:               BUF cells:       17
ABC RESULTS:        internal signals:      698
ABC RESULTS:           input signals:      154
ABC RESULTS:          output signals:       53
Removing temp directory.

3.29.21. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1594, asynchronously reset by \reset
Extracted 268 gates and 493 wires to a netlist network with 225 inputs and 98 outputs.

3.29.21.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.21.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               NOR cells:       12
ABC RESULTS:              NAND cells:       36
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               AND cells:       44
ABC RESULTS:                OR cells:       23
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:               XOR cells:       30
ABC RESULTS:               MUX cells:       95
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:      225
ABC RESULTS:          output signals:       98
Removing temp directory.

3.29.22. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 820 gates and 1004 wires to a netlist network with 182 inputs and 173 outputs.

3.29.22.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.22.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       76
ABC RESULTS:               NOR cells:       20
ABC RESULTS:               XOR cells:        6
ABC RESULTS:             ORNOT cells:       19
ABC RESULTS:                OR cells:       24
ABC RESULTS:               MUX cells:      134
ABC RESULTS:              NAND cells:       49
ABC RESULTS:            ANDNOT cells:       18
ABC RESULTS:               AND cells:       63
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               NOT cells:       71
ABC RESULTS:        internal signals:      649
ABC RESULTS:           input signals:      182
ABC RESULTS:          output signals:      173
Removing temp directory.

yosys> abc -script abc_tmp.scr

3.30. Executing ABC pass (technology mapping using ABC).

3.30.1. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Extracted 8445 gates and 9344 wires to a netlist network with 899 inputs and 1096 outputs.

3.30.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_11-05-2022T16-24-02/itc.json/b20/abc_tmp.scr 
ABC:   #Luts =  2798  Max Lvl =  36  Avg Lvl =   8.23  [   0.33 sec. at Pass 0]
ABC:   #Luts =  2197  Max Lvl =  34  Avg Lvl =   8.70  [  12.73 sec. at Pass 1]
ABC:   #Luts =  2179  Max Lvl =  31  Avg Lvl =   8.22  [   2.75 sec. at Pass 2]
ABC:   #Luts =  2099  Max Lvl =  32  Avg Lvl =   7.74  [  12.05 sec. at Pass 3]
ABC:   #Luts =  2085  Max Lvl =  34  Avg Lvl =   7.83  [   3.83 sec. at Pass 4]
ABC:   #Luts =  2059  Max Lvl =  34  Avg Lvl =   8.61  [  22.85 sec. at Pass 5]
ABC:   #Luts =  2047  Max Lvl =  34  Avg Lvl =   8.60  [   4.42 sec. at Pass 6]
ABC:   #Luts =  2035  Max Lvl =  32  Avg Lvl =   8.17  [  22.22 sec. at Pass 7]
ABC:   #Luts =  2032  Max Lvl =  33  Avg Lvl =   8.52  [   3.29 sec. at Pass 8]
ABC:   #Luts =  2012  Max Lvl =  32  Avg Lvl =   8.22  [  25.82 sec. at Pass 9]
ABC:   #Luts =  2003  Max Lvl =  34  Avg Lvl =   8.26  [   5.17 sec. at Pass 10]
ABC:   #Luts =  1998  Max Lvl =  34  Avg Lvl =   8.26  [  23.46 sec. at Pass 11]
ABC:   #Luts =  1987  Max Lvl =  34  Avg Lvl =   8.26  [   3.11 sec. at Pass 12]
ABC:   #Luts =  1977  Max Lvl =  38  Avg Lvl =   8.51  [  15.72 sec. at Pass 13]
ABC:   #Luts =  1977  Max Lvl =  30  Avg Lvl =   8.08  [   5.78 sec. at Pass 14]
ABC:   #Luts =  1964  Max Lvl =  29  Avg Lvl =   8.08  [  17.69 sec. at Pass 15]
ABC:   #Luts =  1960  Max Lvl =  29  Avg Lvl =   8.07  [   3.07 sec. at Pass 16]
ABC:   #Luts =  1956  Max Lvl =  29  Avg Lvl =   8.10  [  15.94 sec. at Pass 17]
ABC:   #Luts =  1953  Max Lvl =  30  Avg Lvl =   8.10  [   3.15 sec. at Pass 18]
ABC:   #Luts =  1950  Max Lvl =  31  Avg Lvl =   8.19  [  14.39 sec. at Pass 19]
ABC:   #Luts =  1945  Max Lvl =  30  Avg Lvl =   8.11  [   3.49 sec. at Pass 20]
ABC:   #Luts =  1938  Max Lvl =  30  Avg Lvl =   8.17  [  26.08 sec. at Pass 21]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.30.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1938
ABC RESULTS:        internal signals:     7349
ABC RESULTS:           input signals:      899
ABC RESULTS:          output signals:     1096
Removing temp directory.

yosys> opt

3.31. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge -nomux

3.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 14889 unused wires.
<suppressed ~20 debug messages>

yosys> opt_expr

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.31.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.31.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.32. Printing statistics.

=== b20 ===

   Number of wires:               1627
   Number of wire bits:           3886
   Number of public wires:          27
   Number of public wire bits:     432
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2768
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     72
     $lut                         1728
     $mux                           14
     adder_carry                   598


yosys> shregmap -minlen 8 -maxlen 20

3.33. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.35. Printing statistics.

=== b20 ===

   Number of wires:               1627
   Number of wire bits:           3886
   Number of public wires:          27
   Number of public wire bits:     432
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2768
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     72
     $lut                         1728
     $mux                           14
     adder_carry                   598


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2734 debug messages>

yosys> opt_expr -mux_undef

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~37601 debug messages>

yosys> simplemap

3.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~16455 debug messages>
Removed a total of 5485 cells.

yosys> opt_dff -nodffe -nosdff

3.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 5968 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.43. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~1523 debug messages>

yosys> opt_merge -nomux

3.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

yosys> opt_muxtree

3.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 440 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.43.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.43.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.43.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.43.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.43.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.44. Executing ABC pass (technology mapping using ABC).

3.44.1. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Extracted 6117 gates and 7013 wires to a netlist network with 894 inputs and 869 outputs.

3.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_11-05-2022T16-24-02/itc.json/b20/abc_tmp.scr 
ABC:   #Luts =  1725  Max Lvl =  30  Avg Lvl =   8.16  [   0.84 sec. at Pass 0]
ABC:   #Luts =  1725  Max Lvl =  30  Avg Lvl =   8.16  [  18.27 sec. at Pass 1]
ABC:   #Luts =  1722  Max Lvl =  29  Avg Lvl =   8.16  [   3.06 sec. at Pass 2]
ABC:   #Luts =  1718  Max Lvl =  29  Avg Lvl =   7.80  [  11.93 sec. at Pass 3]
ABC:   #Luts =  1710  Max Lvl =  30  Avg Lvl =   8.23  [   2.93 sec. at Pass 4]
ABC:   #Luts =  1710  Max Lvl =  26  Avg Lvl =   7.53  [  14.93 sec. at Pass 5]
ABC:   #Luts =  1707  Max Lvl =  30  Avg Lvl =   8.20  [   3.71 sec. at Pass 6]
ABC:   #Luts =  1703  Max Lvl =  27  Avg Lvl =   7.98  [  17.63 sec. at Pass 7]
ABC:   #Luts =  1699  Max Lvl =  29  Avg Lvl =   8.07  [   3.04 sec. at Pass 8]
ABC:   #Luts =  1698  Max Lvl =  29  Avg Lvl =   8.07  [  16.46 sec. at Pass 9]
ABC:   #Luts =  1695  Max Lvl =  30  Avg Lvl =   8.17  [   3.13 sec. at Pass 10]
ABC:   #Luts =  1693  Max Lvl =  26  Avg Lvl =   7.93  [  18.29 sec. at Pass 11]
ABC:   #Luts =  1691  Max Lvl =  27  Avg Lvl =   7.79  [   2.83 sec. at Pass 12]
ABC:   #Luts =  1682  Max Lvl =  28  Avg Lvl =   8.12  [  15.83 sec. at Pass 13]
ABC:   #Luts =  1682  Max Lvl =  28  Avg Lvl =   8.12  [   3.25 sec. at Pass 14]
ABC:   #Luts =  1682  Max Lvl =  28  Avg Lvl =   8.12  [  16.96 sec. at Pass 15]
ABC:   #Luts =  1682  Max Lvl =  28  Avg Lvl =   8.12  [   3.01 sec. at Pass 16]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1682
ABC RESULTS:        internal signals:     5250
ABC RESULTS:           input signals:      894
ABC RESULTS:          output signals:      869
Removing temp directory.

yosys> opt

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 5877 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \b20

3.46.2. Analyzing design hierarchy..
Top module:  \b20
Removed 0 unused modules.

yosys> stat

3.47. Printing statistics.

=== b20 ===

   Number of wires:               1572
   Number of wire bits:           3831
   Number of public wires:          27
   Number of public wire bits:     432
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2708
     $lut                         1682
     adder_carry                   598
     dffsre                        428


yosys> opt_clean -purge

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 8 unused wires.
<suppressed ~8 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.49. Executing Verilog backend.

yosys> bmuxmap

3.49.1. Executing BMUXMAP pass.

yosys> demuxmap

3.49.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b20'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: c3c90374b7, CPU: user 35.75s system 0.46s, MEM: 118.67 MB peak
Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 3x abc (4035 sec), 0% 47x opt_expr (12 sec), ...
real 452.28
user 3825.97
sys 244.39
