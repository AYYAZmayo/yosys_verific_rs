
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.13
 Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b11.vhd

yosys> verific -vhdl b11.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b11.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b11.vhd:1: analyzing entity 'b11'
VERIFIC-INFO [VHDL-1010] b11.vhd:11: analyzing architecture 'behav'

yosys> synth_rs -top b11 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.41

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b11

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b11.vhd:1: processing 'b11(BEHAV)'
Importing module b11.

3.3.1. Analyzing design hierarchy..
Top module:  \b11

3.3.2. Analyzing design hierarchy..
Top module:  \b11
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~3 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 1 unused cells and 29 unused wires.
<suppressed ~13 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b11...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$x_out_reg$b11.vhd:116$137 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$stato_reg$b11.vhd:116$133 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$r_in_reg$b11.vhd:116$134 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$cont_reg$b11.vhd:116$135 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$cont1_reg$b11.vhd:116$136 ($aldff) from module b11.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 5 on $verific$cont_reg$b11.vhd:116$135 ($adff) from module b11.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 6) from port A of cell b11.$verific$LessThan_11$b11.vhd:52$82 ($lt).
Removed top 1 bits (of 6) from port B of cell b11.$verific$LessThan_11$b11.vhd:52$82 ($lt).
Removed top 1 bits (of 6) from port A of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 5 bits (of 6) from port B of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 1 bits (of 7) from port Y of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 1 bits (of 6) from port B of cell b11.$verific$LessThan_16$b11.vhd:59$88 ($le).
Removed top 1 bits (of 7) from mux cell b11.$verific$mux_28$b11.vhd:69$92 ($mux).
Removed top 3 bits (of 9) from port A of cell b11.$verific$add_30$b11.vhd:73$93 ($add).
Removed top 4 bits (of 10) from port A of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 10) from port B of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 9) from port B of cell b11.$verific$LessThan_36$b11.vhd:80$97 ($lt).
Removed top 5 bits (of 10) from port B of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 9) from port B of cell b11.$verific$LessThan_41$b11.vhd:87$102 ($lt).
Removed top 4 bits (of 8) from port B of cell b11.$verific$add_43$b11.vhd:88$104 ($add).
Removed top 1 bits (of 9) from port Y of cell b11.$verific$add_43$b11.vhd:88$104 ($add).
Removed top 5 bits (of 10) from port B of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 2) from port A of cell b11.$verific$equal_50$b11.vhd:96$112 ($eq).
Removed top 4 bits (of 10) from port B of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 6 bits (of 9) from port B of cell b11.$verific$add_55$b11.vhd:99$117 ($add).
Removed top 4 bits (of 7) from port B of cell b11.$verific$add_58$b11.vhd:101$118 ($add).
Removed top 1 bits (of 9) from port A of cell b11.$verific$LessThan_63$b11.vhd:105$122 ($lt).
Removed top 4 bits (of 10) from port Y of cell b11.$verific$unary_minus_64$b11.vhd:108$123 ($neg).
Removed top 4 bits (of 10) from port A of cell b11.$verific$unary_minus_64$b11.vhd:108$123 ($neg).
Removed top 1 bits (of 7) from wire b11.$verific$n160$36.
Removed top 1 bits (of 10) from wire b11.$verific$n191$39.
Removed top 1 bits (of 3) from wire b11.$verific$n223$42.
Removed top 1 bits (of 10) from wire b11.$verific$n228$43.
Removed top 1 bits (of 3) from wire b11.$verific$n260$46.
Removed top 2 bits (of 3) from wire b11.$verific$n297$50.
Removed top 1 bits (of 10) from wire b11.$verific$n302$51.
Removed top 4 bits (of 10) from wire b11.$verific$n423$62.
Removed top 1 bits (of 6) from wire b11.cont.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b11:
  creating $macc model for $verific$add_12$b11.vhd:53$83 ($add).
  creating $macc model for $verific$add_30$b11.vhd:73$93 ($add).
  creating $macc model for $verific$add_43$b11.vhd:88$104 ($add).
  creating $macc model for $verific$add_55$b11.vhd:99$117 ($add).
  creating $macc model for $verific$add_58$b11.vhd:101$118 ($add).
  creating $macc model for $verific$sub_32$b11.vhd:76$94 ($sub).
  creating $macc model for $verific$sub_37$b11.vhd:81$98 ($sub).
  creating $macc model for $verific$sub_48$b11.vhd:95$109 ($sub).
  creating $macc model for $verific$sub_51$b11.vhd:97$113 ($sub).
  creating $macc model for $verific$unary_minus_64$b11.vhd:108$123 ($neg).
  creating $alu model for $macc $verific$unary_minus_64$b11.vhd:108$123.
  creating $alu model for $macc $verific$sub_51$b11.vhd:97$113.
  creating $alu model for $macc $verific$sub_48$b11.vhd:95$109.
  creating $alu model for $macc $verific$sub_37$b11.vhd:81$98.
  creating $alu model for $macc $verific$sub_32$b11.vhd:76$94.
  creating $alu model for $macc $verific$add_58$b11.vhd:101$118.
  creating $alu model for $macc $verific$add_55$b11.vhd:99$117.
  creating $alu model for $macc $verific$add_43$b11.vhd:88$104.
  creating $alu model for $macc $verific$add_30$b11.vhd:73$93.
  creating $alu model for $macc $verific$add_12$b11.vhd:53$83.
  creating $alu model for $verific$LessThan_11$b11.vhd:52$82 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b11.vhd:59$88 ($le): new $alu
  creating $alu model for $verific$LessThan_36$b11.vhd:80$97 ($lt): new $alu
  creating $alu model for $verific$LessThan_41$b11.vhd:87$102 ($lt): new $alu
  creating $alu model for $verific$LessThan_63$b11.vhd:105$122 ($lt): new $alu
  creating $alu cell for $verific$LessThan_63$b11.vhd:105$122: $auto$alumacc.cc:485:replace_alu$154
  creating $alu cell for $verific$LessThan_41$b11.vhd:87$102: $auto$alumacc.cc:485:replace_alu$159
  creating $alu cell for $verific$LessThan_36$b11.vhd:80$97: $auto$alumacc.cc:485:replace_alu$170
  creating $alu cell for $verific$LessThan_16$b11.vhd:59$88: $auto$alumacc.cc:485:replace_alu$181
  creating $alu cell for $verific$LessThan_11$b11.vhd:52$82: $auto$alumacc.cc:485:replace_alu$194
  creating $alu cell for $verific$add_12$b11.vhd:53$83: $auto$alumacc.cc:485:replace_alu$205
  creating $alu cell for $verific$add_43$b11.vhd:88$104: $auto$alumacc.cc:485:replace_alu$208
  creating $alu cell for $verific$add_55$b11.vhd:99$117: $auto$alumacc.cc:485:replace_alu$211
  creating $alu cell for $verific$add_58$b11.vhd:101$118: $auto$alumacc.cc:485:replace_alu$214
  creating $alu cell for $verific$add_30$b11.vhd:73$93: $auto$alumacc.cc:485:replace_alu$217
  creating $alu cell for $verific$sub_32$b11.vhd:76$94: $auto$alumacc.cc:485:replace_alu$220
  creating $alu cell for $verific$sub_37$b11.vhd:81$98: $auto$alumacc.cc:485:replace_alu$223
  creating $alu cell for $verific$sub_48$b11.vhd:95$109: $auto$alumacc.cc:485:replace_alu$226
  creating $alu cell for $verific$sub_51$b11.vhd:97$113: $auto$alumacc.cc:485:replace_alu$229
  creating $alu cell for $verific$unary_minus_64$b11.vhd:108$123: $auto$alumacc.cc:485:replace_alu$232
  created 15 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 2 unused cells and 7 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> stat

3.22. Printing statistics.

=== b11 ===

   Number of wires:                 97
   Number of wire bits:            560
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $adff                           5
     $alu                           15
     $bmux                           5
     $eq                             3
     $logic_not                      2
     $mux                           12
     $not                            8
     $or                             5
     $reduce_and                     4
     $reduce_or                      1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$5e23d2e0f07f5403e3d2c5b606bab0c16e4174c1\_90_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using template $paramod$bea0bdf98062c7c399f4dc6bf49b0ad2ad823673\_80_rs_alu for cells of type $alu.
Using template $paramod$3fe4bdf8d597404bdd222c1fea42f692fdc77de4\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$c6b63e723603573fdc33dc74600fd0455fbbc6dc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$5d7bf89bead63599a0c4fbe7617ae2af1a7c16a5\_90_alu for cells of type $alu.
Using template $paramod$4ca960259d028b94df1d7164ce43a4ab44ac7828\_80_rs_alu for cells of type $alu.
Using template $paramod$08b2a3505d8f2cd2b03f068ccaf5ce95d4eb0556\_90_alu for cells of type $alu.
Using template $paramod$cda316834ba57526f1a7f8d3ae2fda53cf1428ce\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
No more expansions possible.
<suppressed ~2032 debug messages>

yosys> stat

3.24. Printing statistics.

=== b11 ===

   Number of wires:                725
   Number of wire bits:          16514
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1558
     $_AND_                        293
     $_DFF_PP0_                     30
     $_MUX_                        681
     $_NOT_                        135
     $_OR_                         153
     $_XOR_                        242
     adder_carry                    24


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~793 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~600 debug messages>
Removed a total of 200 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 61 unused cells and 641 unused wires.
<suppressed ~62 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$543 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$761 [4], Q = \cont [4]).
Adding EN signal on $auto$ff.cc:262:slice$542 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$761 [3], Q = \cont [3]).
Adding EN signal on $auto$ff.cc:262:slice$541 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$761 [2], Q = \cont [2]).
Adding EN signal on $auto$ff.cc:262:slice$540 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$761 [1], Q = \cont [1]).
Adding EN signal on $auto$ff.cc:262:slice$539 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$761 [0], Q = \cont [0]).
Adding EN signal on $auto$ff.cc:262:slice$1183 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$949 [5], Q = \x_out [5]).
Adding EN signal on $auto$ff.cc:262:slice$1182 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$949 [4], Q = \x_out [4]).
Adding EN signal on $auto$ff.cc:262:slice$1181 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$949 [3], Q = \x_out [3]).
Adding EN signal on $auto$ff.cc:262:slice$1180 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$949 [2], Q = \x_out [2]).
Adding EN signal on $auto$ff.cc:262:slice$1179 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$949 [1], Q = \x_out [1]).
Adding EN signal on $auto$ff.cc:262:slice$1178 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$949 [0], Q = \x_out [0]).
Adding EN signal on $auto$ff.cc:262:slice$1177 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1149 [8], Q = \cont1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$1176 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1149 [7], Q = \cont1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$1175 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1149 [6], Q = \cont1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$1174 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1149 [5], Q = \cont1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$1173 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1149 [4], Q = \cont1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$1172 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1149 [3], Q = \cont1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$1171 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1149 [2], Q = \cont1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$1170 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1149 [1], Q = \cont1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$1169 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1149 [0], Q = \cont1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$1168 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$855 [5], Q = \r_in [5]).
Adding EN signal on $auto$ff.cc:262:slice$1167 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$855 [4], Q = \r_in [4]).
Adding EN signal on $auto$ff.cc:262:slice$1166 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$855 [3], Q = \r_in [3]).
Adding EN signal on $auto$ff.cc:262:slice$1165 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$855 [2], Q = \r_in [2]).
Adding EN signal on $auto$ff.cc:262:slice$1164 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$855 [1], Q = \r_in [1]).
Adding EN signal on $auto$ff.cc:262:slice$1163 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$855 [0], Q = \r_in [0]).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 135 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~479 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~1554 debug messages>
Removed a total of 518 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 512 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.25.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~114 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~15 debug messages>

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$620 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1762
        $auto$simplemap.cc:86:simplemap_bitop$1650

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$621 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1763
        $auto$simplemap.cc:86:simplemap_bitop$1651

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$622 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1764
        $auto$simplemap.cc:86:simplemap_bitop$1652

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$623 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1765
        $auto$simplemap.cc:86:simplemap_bitop$1653


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~4 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$4396 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$2165
        $auto$simplemap.cc:86:simplemap_bitop$2111

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$629 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1762
        $auto$simplemap.cc:86:simplemap_bitop$1696


yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~2 debug messages>

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.28.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce -full

3.28.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.28.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.28.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr -full

3.28.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.28.34. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Summary of detected clock domains:
  74 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3869, arst=\reset, srst={ }
  19 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3822, arst=\reset, srst={ }
  22 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3700, arst=\reset, srst={ }
  133 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3070, arst=\reset, srst={ }
  15 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2776, arst=\reset, srst={ }
  42 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2419, arst=\reset, srst={ }
  154 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.29.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3869, asynchronously reset by \reset
Extracted 59 gates and 108 wires to a netlist network with 48 inputs and 50 outputs.

3.29.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        6
ABC RESULTS:               AND cells:        3
ABC RESULTS:               NOT cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               XOR cells:       14
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:                OR cells:        6
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               BUF cells:       12
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       48
ABC RESULTS:          output signals:       50
Removing temp directory.

3.29.3. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3822, asynchronously reset by \reset
Extracted 17 gates and 34 wires to a netlist network with 17 inputs and 9 outputs.

3.29.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               AND cells:        8
ABC RESULTS:                OR cells:        4
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.4. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3700, asynchronously reset by \reset
Extracted 21 gates and 39 wires to a netlist network with 18 inputs and 15 outputs.

3.29.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:               XOR cells:        2
ABC RESULTS:               AND cells:        7
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.5. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3070, asynchronously reset by \reset
Extracted 123 gates and 156 wires to a netlist network with 32 inputs and 66 outputs.

3.29.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        7
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              NAND cells:        2
ABC RESULTS:                OR cells:       16
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               XOR cells:        6
ABC RESULTS:              XNOR cells:        9
ABC RESULTS:               AND cells:       27
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               NOT cells:       10
ABC RESULTS:        internal signals:       58
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       66
Removing temp directory.

3.29.6. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2776, asynchronously reset by \reset
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 8 outputs.

3.29.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        6
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        8
ABC RESULTS:               BUF cells:        6
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.7. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2419, asynchronously reset by \reset
Extracted 42 gates and 49 wires to a netlist network with 6 inputs and 6 outputs.

3.29.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:              NAND cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:               XOR cells:        2
ABC RESULTS:               AND cells:       12
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        5
ABC RESULTS:        internal signals:       37
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.8. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 154 gates and 233 wires to a netlist network with 77 inputs and 26 outputs.

3.29.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        8
ABC RESULTS:               XOR cells:       10
ABC RESULTS:               NOR cells:        6
ABC RESULTS:                OR cells:       19
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:              NAND cells:       73
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               AND cells:       43
ABC RESULTS:               MUX cells:        4
ABC RESULTS:               BUF cells:        4
ABC RESULTS:        internal signals:      130
ABC RESULTS:           input signals:       77
ABC RESULTS:          output signals:       26
Removing temp directory.

yosys> abc -script abc_tmp.scr

3.30. Executing ABC pass (technology mapping using ABC).

3.30.1. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Extracted 398 gates and 447 wires to a netlist network with 49 inputs and 56 outputs.

3.30.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_10-05-2022T23-40-15/Golden_synth_rs_ade.json/b11/abc_tmp.scr 
ABC:   #Luts =   118  Max Lvl =   7  Avg Lvl =   1.88  [   0.08 sec. at Pass 0]
ABC:   #Luts =    99  Max Lvl =   6  Avg Lvl =   1.73  [   0.71 sec. at Pass 1]
ABC:   #Luts =    97  Max Lvl =   5  Avg Lvl =   1.57  [   0.19 sec. at Pass 2]
ABC:   #Luts =    92  Max Lvl =   5  Avg Lvl =   1.59  [   2.03 sec. at Pass 3]
ABC:   #Luts =    92  Max Lvl =   5  Avg Lvl =   1.59  [   0.35 sec. at Pass 4]
ABC:   #Luts =    91  Max Lvl =   5  Avg Lvl =   1.61  [   2.80 sec. at Pass 5]
ABC:   #Luts =    91  Max Lvl =   5  Avg Lvl =   1.61  [   0.34 sec. at Pass 6]
ABC:   #Luts =    90  Max Lvl =   5  Avg Lvl =   1.59  [   2.23 sec. at Pass 7]
ABC:   #Luts =    90  Max Lvl =   5  Avg Lvl =   1.59  [   0.19 sec. at Pass 8]
ABC:   #Luts =    90  Max Lvl =   5  Avg Lvl =   1.59  [   2.31 sec. at Pass 9]
ABC:   #Luts =    90  Max Lvl =   5  Avg Lvl =   1.59  [   0.20 sec. at Pass 10]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.30.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       90
ABC RESULTS:        internal signals:      342
ABC RESULTS:           input signals:       49
ABC RESULTS:          output signals:       56
Removing temp directory.

yosys> opt

3.31. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce

3.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 914 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.31.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce

3.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.31.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.32. Printing statistics.

=== b11 ===

   Number of wires:                 96
   Number of wire bits:            217
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                148
     $_DFFE_PP0P_                   26
     $_DFF_PP0_                      4
     $lut                           90
     $mux                            4
     adder_carry                    24


yosys> shregmap -minlen 8 -maxlen 20

3.33. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.35. Printing statistics.

=== b11 ===

   Number of wires:                 96
   Number of wire bits:            217
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                148
     $_DFFE_PP0P_                   26
     $_DFF_PP0_                      4
     $lut                           90
     $mux                            4
     adder_carry                    24


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~290 debug messages>

yosys> opt_expr -mux_undef

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~2324 debug messages>

yosys> simplemap

3.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~597 debug messages>
Removed a total of 199 cells.

yosys> opt_dff -nodffe -nosdff

3.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 350 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.43. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~55 debug messages>

yosys> opt_merge -nomux

3.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.43.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.43.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.43.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.43.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.43.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.44. Executing ABC pass (technology mapping using ABC).

3.44.1. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Extracted 412 gates and 461 wires to a netlist network with 47 inputs and 48 outputs.

3.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_10-05-2022T23-40-15/Golden_synth_rs_ade.json/b11/abc_tmp.scr 
ABC:   #Luts =    92  Max Lvl =   6  Avg Lvl =   1.58  [   0.05 sec. at Pass 0]
ABC:   #Luts =    91  Max Lvl =   6  Avg Lvl =   1.71  [   0.82 sec. at Pass 1]
ABC:   #Luts =    89  Max Lvl =   6  Avg Lvl =   1.69  [   0.17 sec. at Pass 2]
ABC:   #Luts =    87  Max Lvl =   5  Avg Lvl =   1.58  [   2.74 sec. at Pass 3]
ABC:   #Luts =    87  Max Lvl =   5  Avg Lvl =   1.58  [   0.23 sec. at Pass 4]
ABC:   #Luts =    86  Max Lvl =   5  Avg Lvl =   1.58  [   2.89 sec. at Pass 5]
ABC:   #Luts =    85  Max Lvl =   5  Avg Lvl =   1.67  [   0.21 sec. at Pass 6]
ABC:   #Luts =    84  Max Lvl =   6  Avg Lvl =   1.58  [   2.01 sec. at Pass 7]
ABC:   #Luts =    84  Max Lvl =   5  Avg Lvl =   1.65  [   0.44 sec. at Pass 8]
ABC:   #Luts =    83  Max Lvl =   5  Avg Lvl =   1.60  [   2.16 sec. at Pass 9]
ABC:   #Luts =    83  Max Lvl =   5  Avg Lvl =   1.60  [   0.46 sec. at Pass 10]
ABC:   #Luts =    80  Max Lvl =   5  Avg Lvl =   1.65  [   1.53 sec. at Pass 11]
ABC:   #Luts =    80  Max Lvl =   5  Avg Lvl =   1.65  [   0.24 sec. at Pass 12]
ABC:   #Luts =    80  Max Lvl =   5  Avg Lvl =   1.65  [   2.00 sec. at Pass 13]
ABC:   #Luts =    80  Max Lvl =   5  Avg Lvl =   1.65  [   0.21 sec. at Pass 14]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       80
ABC RESULTS:        internal signals:      366
ABC RESULTS:           input signals:       47
ABC RESULTS:          output signals:       48
Removing temp directory.

yosys> opt

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 331 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \b11

3.46.2. Analyzing design hierarchy..
Top module:  \b11
Removed 0 unused modules.

yosys> stat

3.47. Printing statistics.

=== b11 ===

   Number of wires:                 86
   Number of wire bits:            185
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                134
     $lut                           80
     adder_carry                    24
     dffsre                         30


yosys> opt_clean -purge

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> write_verilog -noattr -nohex synthesized.v

3.49. Executing Verilog backend.

yosys> bmuxmap

3.49.1. Executing BMUXMAP pass.

yosys> demuxmap

3.49.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b11'.

End of script. Logfile hash: 19d081f033, CPU: user 2.57s system 0.08s, MEM: 27.87 MB peak
Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os)
Time spent: 98% 3x abc (181 sec), 0% 43x opt_expr (0 sec), ...
real 34.26
user 166.13
sys 18.31
