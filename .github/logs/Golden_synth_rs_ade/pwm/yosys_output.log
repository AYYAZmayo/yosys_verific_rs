
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_alert_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv pwm_reg_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_intr_hw.sv prim_pulse_sync.sv prim_reg_cdc.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_sync_reqack.sv pwm.sv pwm_chan.sv pwm_core.sv pwm_reg_top.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv

yosys> verific -sv prim_alert_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv pwm_reg_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_intr_hw.sv prim_pulse_sync.sv prim_reg_cdc.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_sync_reqack.sv pwm.sv pwm_chan.sv pwm_core.sv pwm_reg_top.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:10: parameter 'NOutputs' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:11: parameter 'NumAlerts' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:14: parameter 'BlockAw' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:99: parameter 'PWM_ALERT_TEST_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:100: parameter 'PWM_REGWEN_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:101: parameter 'PWM_CFG_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:102: parameter 'PWM_PWM_EN_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:103: parameter 'PWM_INVERT_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:104: parameter 'PWM_PWM_PARAM_0_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:105: parameter 'PWM_PWM_PARAM_1_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:106: parameter 'PWM_PWM_PARAM_2_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:107: parameter 'PWM_PWM_PARAM_3_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:108: parameter 'PWM_PWM_PARAM_4_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:109: parameter 'PWM_PWM_PARAM_5_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:110: parameter 'PWM_DUTY_CYCLE_0_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:111: parameter 'PWM_DUTY_CYCLE_1_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:112: parameter 'PWM_DUTY_CYCLE_2_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:113: parameter 'PWM_DUTY_CYCLE_3_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:114: parameter 'PWM_DUTY_CYCLE_4_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:115: parameter 'PWM_DUTY_CYCLE_5_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:116: parameter 'PWM_BLINK_PARAM_0_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:117: parameter 'PWM_BLINK_PARAM_1_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:118: parameter 'PWM_BLINK_PARAM_2_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:119: parameter 'PWM_BLINK_PARAM_3_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:120: parameter 'PWM_BLINK_PARAM_4_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:121: parameter 'PWM_BLINK_PARAM_5_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:124: parameter 'PWM_ALERT_TEST_RESVAL' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:125: parameter 'PWM_ALERT_TEST_FATAL_FAULT_RESVAL' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:155: parameter 'PWM_PERMIT' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_intr_hw.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pulse_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sec_anchor_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_chan.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'

yosys> synth_rs -top pwm -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top pwm

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] pwm.sv:6: compiling module 'pwm'
VERIFIC-INFO [VERI-1018] pwm_reg_top.sv:8: compiling module 'pwm_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:3: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=7)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:44: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VDB-1002] tlul_adapter_reg.sv:43: net 'malformed_meta_err' does not have a driver
VERIFIC-INFO [VERI-1018] prim_sync_reqack.sv:26: compiling module 'prim_sync_reqack'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(BitMask=32'b11000000000000001111111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111)'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-INFO [VERI-1018] pwm_core.sv:7: compiling module 'pwm_core'
VERIFIC-INFO [VERI-1018] pwm_chan.sv:5: compiling module 'pwm_chan'
Importing module pwm.
Importing module prim_alert_sender.
Importing module prim_buf.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module pwm_core.
Importing module pwm_chan.
Importing module pwm_reg_top.
Importing module prim_reg_cdc.
Importing module prim_reg_cdc(BitMask=32'b11000000000000001111111111111111).
Importing module prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111).
Importing module prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000).
Importing module prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111).
Importing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Importing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Importing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111).
Importing module prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000).
Importing module prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111).
Importing module prim_subreg_ext(DW=32'b01).
Importing module prim_sync_reqack.
Importing module prim_flop_2sync(Width=1).
Importing module tlul_adapter_reg(RegAw=7).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

3.3.1. Analyzing design hierarchy..
Top module:  \pwm
Used module:     \pwm_core
Used module:         \pwm_chan
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \pwm_reg_top
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111)
Used module:         \prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc
Used module:             \prim_sync_reqack
Used module:                 \prim_flop_2sync(Width=1)
Used module:         \prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b11000000000000001111111111111111)
Used module:         \prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111)
Used module:         \prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec

3.3.2. Analyzing design hierarchy..
Top module:  \pwm
Used module:     \pwm_core
Used module:         \pwm_chan
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \pwm_reg_top
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111)
Used module:         \prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc
Used module:             \prim_sync_reqack
Used module:                 \prim_flop_2sync(Width=1)
Used module:         \prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b11000000000000001111111111111111)
Used module:         \prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111)
Used module:         \prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=7).
<suppressed ~11 debug messages>
Optimizing module prim_flop_2sync(Width=1).
Optimizing module prim_sync_reqack.
<suppressed ~4 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(BitMask=32'b11000000000000001111111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc.
<suppressed ~5 debug messages>
Optimizing module pwm_reg_top.
<suppressed ~2 debug messages>
Optimizing module pwm_chan.
<suppressed ~5 debug messages>
Optimizing module pwm_core.
<suppressed ~4 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf.
Optimizing module prim_alert_sender.
<suppressed ~7 debug messages>
Optimizing module pwm.
<suppressed ~1 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module tlul_rsp_intg_gen.
Deleting now unused module tlul_err.
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_adapter_reg(RegAw=7).
Deleting now unused module prim_flop_2sync(Width=1).
Deleting now unused module prim_sync_reqack.
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111).
Deleting now unused module prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000).
Deleting now unused module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111).
Deleting now unused module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111).
Deleting now unused module prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000).
Deleting now unused module prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111).
Deleting now unused module prim_reg_cdc(BitMask=32'b11000000000000001111111111111111).
Deleting now unused module prim_reg_cdc.
Deleting now unused module pwm_reg_top.
Deleting now unused module pwm_chan.
Deleting now unused module pwm_core.
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_buf.
Deleting now unused module prim_alert_sender.
<suppressed ~121 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~87 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 475 unused cells and 11332 unused wires.
<suppressed ~1933 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module pwm...
Warning: Wire pwm.\u_reg.u_reg_if.malformed_meta_err is used but has no driver.
Found and reported 1 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~58 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~171 debug messages>
Removed a total of 57 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_cfg_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_cfg_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_cfg_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_cfg_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_core_tgl.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_core_tgl.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_core_tgl.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_core_tgl.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_core_tgl.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_core_tgl.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_core_tgl.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_core_tgl.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_invert_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_invert_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_invert_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_invert_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_en_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_en_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_en_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_en_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~291 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_614$pwm_reg_top.sv:2770$8941: { $flatten\u_reg.$verific$n4607$2793 $flatten\u_reg.$verific$n4610$2796 $flatten\u_reg.$verific$n4613$2799 $flatten\u_reg.$verific$n4616$2802 $flatten\u_reg.$verific$n4619$2805 $flatten\u_reg.$verific$n4622$2808 $flatten\u_reg.$verific$n4625$2811 $flatten\u_reg.$verific$n4628$2814 $flatten\u_reg.$verific$n4631$2817 $flatten\u_reg.$verific$n4634$2820 $flatten\u_reg.$verific$n4637$2823 $flatten\u_reg.$verific$n4640$2826 $flatten\u_reg.$verific$n4643$2829 $flatten\u_reg.$verific$n4646$2832 $flatten\u_reg.$verific$n4649$2835 $flatten\u_reg.$verific$n4652$2838 $flatten\u_reg.$verific$n4655$2841 $flatten\u_reg.$verific$n4658$2844 $flatten\u_reg.$verific$n4661$2847 $flatten\u_reg.$verific$n4664$2850 $flatten\u_reg.$verific$n4667$2853 $flatten\u_reg.$verific$n4670$2856 $flatten\u_reg.$verific$n4672$2858 }
  Optimizing cells in module \pwm.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$9429 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$1587 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9661 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9660 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9659 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9669 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9649 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9670 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_htbt_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_htbt_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$1496 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_htbt_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$1500 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.$verific$phase_ctr_q_reg$pwm_core.sv:96$1710 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$1588 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_htbt_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_htbt_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$1586 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$1587 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_htbt_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_0.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9233 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$1589 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_0.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9233 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.$verific$beat_ctr_q_reg$pwm_core.sv:79$1694 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cntr_en.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_clk_div.$verific$qe_reg$prim_subreg.sv:67$9486 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$1588 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9305 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9304 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9286 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_x_5.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_x_4.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$1498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_x_3.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$1497 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$1499 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_x_2.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_x_1.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_x_0.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$pwm_reg_top.sv:62$3081 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$1586 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 74 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~3 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~291 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$9429 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_5_htbt_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_4_htbt_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_3_htbt_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_2_htbt_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_1_htbt_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_0_htbt_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_cntr_en.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 1-bit at position 15 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_cfg_cntr_en.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_0_htbt_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_1_htbt_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_2_htbt_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_3_htbt_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_4_htbt_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_5_htbt_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$9429 ($dlatch) from module pwm.

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~329 debug messages>

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.$verific$mux_66$pwm_core.sv:70$1685.
    dead port 1/2 on $mux $flatten\u_pwm_core.$verific$mux_65$pwm_core.sv:70$1684.
    dead port 2/2 on $mux $flatten\u_pwm_core.$verific$mux_65$pwm_core.sv:70$1684.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
Removed 51 multiplexer ports.
<suppressed ~255 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

yosys> opt_dff -nodffe -nosdff

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 317 unused cells and 739 unused wires.
<suppressed ~600 debug messages>

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.11.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~208 debug messages>

yosys> opt_reduce

3.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.11.30. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~208 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9661 ($adff) from module pwm (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9660 ($adff) from module pwm (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9659 ($adff) from module pwm (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9669 ($adff) from module pwm (D = $flatten\u_reg.\u_reg_if.$verific$n182$9619, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9649 ($adff) from module pwm (D = $flatten\u_reg.\u_reg_if.$verific$n75$9599, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9670 ($adff) from module pwm (D = $flatten\u_reg.\u_reg_if.$verific$n248$9601, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_5_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_5_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_4_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_4_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_3_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_3_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_2_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_2_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_1_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_1_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_0_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_0_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_en_cdc.$verific$n73$9201, Q = \u_reg.u_pwm_en_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_en_cdc.$verific$n14$9184, Q = \u_reg.u_pwm_en_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_invert_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($adff) from module pwm (D = $flatten\u_reg.\u_invert_cdc.$verific$n73$9201, Q = \u_reg.u_invert_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_invert_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($adff) from module pwm (D = $flatten\u_reg.\u_invert_cdc.$verific$n14$9184, Q = \u_reg.u_invert_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_cfg_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9304 ($adff) from module pwm (D = $flatten\u_reg.\u_cfg_cdc.$verific$n177$9273, Q = \u_reg.u_cfg_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_cfg_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9286 ($adff) from module pwm (D = $flatten\u_reg.\u_cfg_cdc.$verific$n14$9256, Q = \u_reg.u_cfg_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_5_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_5_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_4_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_4_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_3_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_3_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_2_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_2_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_1_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_1_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_0_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_0_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$pwm_reg_top.sv:62$3081 ($adff) from module pwm (D = 1'1, Q = \u_reg.intg_err_q).
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10679 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10673 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10667 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10661 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10655 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10649 ($adffe) from module pwm.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10641 ($adffe) from module pwm.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10641 ($adffe) from module pwm.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~44 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell pwm.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$9629 ($eq).
Removed top 31 bits (of 32) from port A of cell pwm.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10277 ($shl).
Removed top 28 bits (of 32) from port Y of cell pwm.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10277 ($shl).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_289$pwm_reg_top.sv:2568$8737 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_287$pwm_reg_top.sv:2567$8736 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_285$pwm_reg_top.sv:2566$8735 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_283$pwm_reg_top.sv:2565$8734 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_281$pwm_reg_top.sv:2564$8733 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_279$pwm_reg_top.sv:2563$8732 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_277$pwm_reg_top.sv:2562$8731 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_275$pwm_reg_top.sv:2561$8730 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_273$pwm_reg_top.sv:2560$8729 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_271$pwm_reg_top.sv:2559$8728 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_269$pwm_reg_top.sv:2558$8727 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_267$pwm_reg_top.sv:2557$8726 ($eq).
Removed top 3 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_265$pwm_reg_top.sv:2556$8725 ($eq).
Removed top 3 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_263$pwm_reg_top.sv:2555$8724 ($eq).
Removed top 4 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_261$pwm_reg_top.sv:2554$8723 ($eq).
Removed top 3 bits (of 4) from wire pwm.$flatten\u_reg.$verific$n3674$2944.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 2 unused cells and 5 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pwm:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10812: { $flatten\u_reg.$verific$n4658$2844 $flatten\u_reg.$verific$n4661$2847 $flatten\u_reg.$verific$n4664$2850 $flatten\u_reg.$verific$n4667$2853 $flatten\u_reg.$verific$n4670$2856 $flatten\u_reg.$verific$n4672$2858 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10844: { $flatten\u_reg.$verific$n4640$2826 $flatten\u_reg.$verific$n4643$2829 $flatten\u_reg.$verific$n4646$2832 $flatten\u_reg.$verific$n4649$2835 $flatten\u_reg.$verific$n4652$2838 $flatten\u_reg.$verific$n4655$2841 $flatten\u_reg.$verific$n4658$2844 $flatten\u_reg.$verific$n4661$2847 $flatten\u_reg.$verific$n4664$2850 $flatten\u_reg.$verific$n4667$2853 $flatten\u_reg.$verific$n4670$2856 $flatten\u_reg.$verific$n4672$2858 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10840: { $flatten\u_reg.$verific$n4622$2808 $flatten\u_reg.$verific$n4625$2811 $flatten\u_reg.$verific$n4628$2814 $flatten\u_reg.$verific$n4631$2817 $flatten\u_reg.$verific$n4634$2820 $flatten\u_reg.$verific$n4637$2823 }
  Optimizing cells in module \pwm.
Performed a total of 3 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> stat

3.22. Printing statistics.

=== pwm ===

   Number of wires:               3901
   Number of wire bits:          18544
   Number of public wires:        3234
   Number of public wire bits:   15932
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1203
     $adff                         196
     $adffe                         49
     $and                          231
     $bmux                          15
     $eq                            24
     $logic_not                      2
     $mux                          379
     $ne                             1
     $not                          101
     $or                           106
     $reduce_and                     3
     $reduce_bool                   43
     $reduce_or                     18
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $ne.
No more expansions possible.
<suppressed ~1447 debug messages>

yosys> stat

3.24. Printing statistics.

=== pwm ===

   Number of wires:               4277
   Number of wire bits:          21622
   Number of public wires:        3234
   Number of public wire bits:   15932
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4627
     $_AND_                        242
     $_DFFE_PN0P_                  419
     $_DFFE_PN1P_                  184
     $_DFF_PN0_                    193
     $_DFF_PN1_                      7
     $_MUX_                       2431
     $_NOT_                        134
     $_OR_                         328
     $_XOR_                        689


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~558 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~2415 debug messages>
Removed a total of 805 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$15572 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [2], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [2]).
Adding EN signal on $auto$ff.cc:262:slice$15571 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$15570 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [0]).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 6 unused cells and 360 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~35 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$15559 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$15558 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$15505 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$15504 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [0]).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 43 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~32 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 38 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.25.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~927 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~3576 debug messages>
Removed a total of 1192 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11513 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12265 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11743 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12224 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12153 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13536 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13465 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13434 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13363 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13320 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13249 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13206 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13135 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13092 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13021 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12978 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12907 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11615 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12864 ($_DFFE_PN0P_) from module pwm.
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$12791 ($_DFFE_PN1P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12736 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12665 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11657 ($_DFFE_PN0P_) from module pwm.
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$12640 ($_DFFE_PN1P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12608 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12537 ($_DFFE_PN0P_) from module pwm.
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$12536 ($_DFFE_PN1P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12393 ($_DFFE_PN0P_) from module pwm.
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$12122 ($_DFFE_PN1P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12352 ($_DFFE_PN0P_) from module pwm.
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$12278 ($_DFFE_PN1P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13662 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13643 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13612 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13593 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$15434 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13790 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12096 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11999 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11487 ($_DFFE_PN0P_) from module pwm.
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$12379 ($_DFFE_PN1P_) from module pwm.
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$13586 ($_DFFE_PN1P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11406 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12480 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11871 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$12762 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$13716 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11769 ($_DFFE_PN0P_) from module pwm.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11904 ($_DFFE_PN0P_) from module pwm.

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 851 unused cells and 1389 unused wires.
<suppressed ~1626 debug messages>

3.26.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.26.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~18 debug messages>

yosys> opt_merge

3.26.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.26.10. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15543 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$15527
        $auto$simplemap.cc:278:simplemap_mux$15523

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15548 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$15528
        $auto$simplemap.cc:278:simplemap_mux$15524


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~2 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.28.26. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Extracted 404 gates and 524 wires to a netlist network with 118 inputs and 28 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/pwm/abc_tmp.scr 
ABC:   #Luts =   107  Max Lvl =  12  Avg Lvl =   3.54  [   0.32 sec. at Pass 0]
ABC:   #Luts =    84  Max Lvl =  10  Avg Lvl =   3.14  [   4.12 sec. at Pass 1]
ABC:   #Luts =    83  Max Lvl =   9  Avg Lvl =   3.00  [   0.99 sec. at Pass 2]
ABC:   #Luts =    81  Max Lvl =   9  Avg Lvl =   3.00  [   2.12 sec. at Pass 3]
ABC:   #Luts =    81  Max Lvl =   9  Avg Lvl =   3.00  [   1.48 sec. at Pass 4]
ABC:   #Luts =    80  Max Lvl =   9  Avg Lvl =   3.00  [   1.70 sec. at Pass 5]
ABC:   #Luts =    80  Max Lvl =   8  Avg Lvl =   2.75  [   1.46 sec. at Pass 6]
ABC:   #Luts =    79  Max Lvl =   8  Avg Lvl =   2.75  [   1.92 sec. at Pass 7]
ABC:   #Luts =    79  Max Lvl =   8  Avg Lvl =   2.75  [   1.46 sec. at Pass 8]
ABC:   #Luts =    78  Max Lvl =   9  Avg Lvl =   3.00  [   2.36 sec. at Pass 9]
ABC:   #Luts =    78  Max Lvl =   8  Avg Lvl =   2.75  [   1.53 sec. at Pass 10]
ABC:   #Luts =    78  Max Lvl =   8  Avg Lvl =   2.75  [   1.72 sec. at Pass 11]
ABC:   #Luts =    78  Max Lvl =   8  Avg Lvl =   2.75  [   1.49 sec. at Pass 12]
ABC:   #Luts =    76  Max Lvl =   9  Avg Lvl =   3.00  [   1.90 sec. at Pass 13]
ABC:   #Luts =    76  Max Lvl =   9  Avg Lvl =   3.00  [   1.94 sec. at Pass 14]
ABC:   #Luts =    76  Max Lvl =   9  Avg Lvl =   3.00  [   2.08 sec. at Pass 15]
ABC:   #Luts =    76  Max Lvl =   9  Avg Lvl =   3.00  [   1.65 sec. at Pass 16]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       76
ABC RESULTS:        internal signals:      378
ABC RESULTS:           input signals:      118
ABC RESULTS:          output signals:       28
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 317 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== pwm ===

   Number of wires:               2490
   Number of wire bits:          15147
   Number of public wires:        2432
   Number of public wire bits:   15089
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                116
     $_DFFE_PN0P_                   21
     $_DFF_PN0_                     10
     $_DFF_PN1_                      7
     $lut                           76
     $mux                            2


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== pwm ===

   Number of wires:               2490
   Number of wire bits:          15147
   Number of public wires:        2432
   Number of public wire bits:   15089
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                116
     $_DFFE_PN0P_                   21
     $_DFF_PN0_                     10
     $_DFF_PN1_                      7
     $lut                           76
     $mux                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
No more expansions possible.
<suppressed ~252 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~1515 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~2940 debug messages>
Removed a total of 980 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 275 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Extracted 552 gates and 670 wires to a netlist network with 116 inputs and 25 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/pwm/abc_tmp.scr 
ABC:   #Luts =    80  Max Lvl =  12  Avg Lvl =   4.12  [   0.12 sec. at Pass 0]
ABC:   #Luts =    76  Max Lvl =  10  Avg Lvl =   3.44  [   3.49 sec. at Pass 1]
ABC:   #Luts =    75  Max Lvl =   9  Avg Lvl =   3.28  [   1.55 sec. at Pass 2]
ABC:   #Luts =    75  Max Lvl =   9  Avg Lvl =   3.28  [   1.64 sec. at Pass 3]
ABC:   #Luts =    75  Max Lvl =   9  Avg Lvl =   3.28  [   1.63 sec. at Pass 4]
ABC:   #Luts =    75  Max Lvl =   9  Avg Lvl =   3.28  [   1.86 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       75
ABC RESULTS:        internal signals:      529
ABC RESULTS:           input signals:      116
ABC RESULTS:          output signals:       25
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 463 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \pwm

3.45.2. Analyzing design hierarchy..
Top module:  \pwm
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== pwm ===

   Number of wires:               2487
   Number of wire bits:          15144
   Number of public wires:        2432
   Number of public wire bits:   15089
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                113
     $lut                           75
     dffsre                         38


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 2366 unused wires.
<suppressed ~2366 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\pwm'.

Warnings: 87 unique messages, 87 total
End of script. Logfile hash: 7e82afaa29, CPU: user 18.94s system 0.10s, MEM: 52.20 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 89% 2x abc (161 sec), 2% 32x opt_clean (4 sec), ...
real 83.44
user 161.86
sys 18.81
