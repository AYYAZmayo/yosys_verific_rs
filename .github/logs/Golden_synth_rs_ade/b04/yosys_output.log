
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b04.vhd

yosys> verific -vhdl b04.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b04.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b04.vhd:5: analyzing entity 'b04'
VERIFIC-INFO [VHDL-1010] b04.vhd:16: analyzing architecture 'behav'

yosys> synth_rs -top b04 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b04

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b04.vhd:5: processing 'b04(BEHAV)'
Importing module b04.

3.3.1. Analyzing design hierarchy..
Top module:  \b04

3.3.2. Analyzing design hierarchy..
Top module:  \b04
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~1 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~2 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 27 unused wires.
<suppressed ~23 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b04...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$stato_reg$b04.vhd:99$121 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RMIN_reg$b04.vhd:99$123 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RMAX_reg$b04.vhd:99$122 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RLAST_reg$b04.vhd:99$124 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG4_reg$b04.vhd:99$128 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG3_reg$b04.vhd:99$127 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG2_reg$b04.vhd:99$126 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG1_reg$b04.vhd:99$125 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$DATA_OUT_reg$b04.vhd:99$129 ($aldff) from module b04.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 9) from port B of cell b04.$verific$LessThan_20$b04.vhd:67$77 ($le).
Removed top 1 bits (of 8) from port A of cell b04.$verific$unary_minus_22$b04.vhd:70$78 ($neg).
Removed top 1 bits (of 9) from port B of cell b04.$verific$LessThan_38$b04.vhd:79$91 ($le).
Removed top 1 bits (of 8) from port A of cell b04.$verific$unary_minus_40$b04.vhd:82$92 ($neg).
Removed top 1 bits (of 9) from FF cell b04.$verific$DATA_OUT_reg$b04.vhd:99$129 ($adff).
Removed top 1 bits (of 8) from wire b04.$verific$n112$22.
Removed top 1 bits (of 8) from wire b04.$verific$n218$33.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b04:
  creating $macc model for $verific$add_14$b04.vhd:64$72 ($add).
  creating $macc model for $verific$add_25$b04.vhd:70$80 ($add).
  creating $macc model for $verific$add_32$b04.vhd:76$86 ($add).
  creating $macc model for $verific$add_43$b04.vhd:82$94 ($add).
  creating $macc model for $verific$unary_minus_22$b04.vhd:70$78 ($neg).
  creating $macc model for $verific$unary_minus_26$b04.vhd:70$83 ($neg).
  creating $macc model for $verific$unary_minus_40$b04.vhd:82$92 ($neg).
  creating $macc model for $verific$unary_minus_44$b04.vhd:82$97 ($neg).
  creating $alu model for $macc $verific$unary_minus_44$b04.vhd:82$97.
  creating $alu model for $macc $verific$unary_minus_40$b04.vhd:82$92.
  creating $alu model for $macc $verific$unary_minus_26$b04.vhd:70$83.
  creating $alu model for $macc $verific$unary_minus_22$b04.vhd:70$78.
  creating $alu model for $macc $verific$add_43$b04.vhd:82$94.
  creating $alu model for $macc $verific$add_32$b04.vhd:76$86.
  creating $alu model for $macc $verific$add_25$b04.vhd:70$80.
  creating $alu model for $macc $verific$add_14$b04.vhd:64$72.
  creating $alu model for $verific$LessThan_20$b04.vhd:67$77 ($le): new $alu
  creating $alu model for $verific$LessThan_38$b04.vhd:79$91 ($le): new $alu
  creating $alu model for $verific$LessThan_53$b04.vhd:88$104 ($lt): new $alu
  creating $alu model for $verific$LessThan_55$b04.vhd:90$105 ($lt): new $alu
  creating $alu cell for $verific$LessThan_55$b04.vhd:90$105: $auto$alumacc.cc:485:replace_alu$138
  creating $alu cell for $verific$LessThan_53$b04.vhd:88$104: $auto$alumacc.cc:485:replace_alu$149
  creating $alu cell for $verific$LessThan_38$b04.vhd:79$91: $auto$alumacc.cc:485:replace_alu$154
  creating $alu cell for $verific$LessThan_20$b04.vhd:67$77: $auto$alumacc.cc:485:replace_alu$167
  creating $alu cell for $verific$add_14$b04.vhd:64$72: $auto$alumacc.cc:485:replace_alu$180
  creating $alu cell for $verific$add_25$b04.vhd:70$80: $auto$alumacc.cc:485:replace_alu$183
  creating $alu cell for $verific$add_32$b04.vhd:76$86: $auto$alumacc.cc:485:replace_alu$186
  creating $alu cell for $verific$add_43$b04.vhd:82$94: $auto$alumacc.cc:485:replace_alu$189
  creating $alu cell for $verific$unary_minus_22$b04.vhd:70$78: $auto$alumacc.cc:485:replace_alu$192
  creating $alu cell for $verific$unary_minus_26$b04.vhd:70$83: $auto$alumacc.cc:485:replace_alu$195
  creating $alu cell for $verific$unary_minus_40$b04.vhd:82$92: $auto$alumacc.cc:485:replace_alu$198
  creating $alu cell for $verific$unary_minus_44$b04.vhd:82$97: $auto$alumacc.cc:485:replace_alu$201
  created 12 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 2 unused cells and 6 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> stat

3.22. Printing statistics.

=== b04 ===

   Number of wires:                 94
   Number of wire bits:            561
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 58
     $adff                           9
     $alu                           12
     $and                            2
     $bmux                           9
     $mux                            9
     $not                            5
     $or                             3
     $reduce_and                     3
     $reduce_or                      2
     $xor                            4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$089a78a8a0966fcc055e2feb3e29c6d35fa032d4\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$cbb757c4559b540f1fa31bb8e903a8921361a97b\_80_rs_alu for cells of type $alu.
Using template $paramod$b8522c9297c28c6511231e15cb06a5f24fdd86f5\_80_rs_alu for cells of type $alu.
Using template $paramod$853c52be7ad3a090a60ee8bd1eeaf2c414ec1ce1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$20023d03b69683be1b101d066075b4a39f462309\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
No more expansions possible.
<suppressed ~665 debug messages>

yosys> stat

3.24. Printing statistics.

=== b04 ===

   Number of wires:                437
   Number of wire bits:           4513
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                890
     $_AND_                         77
     $_DFF_PP0_                     66
     $_MUX_                        391
     $_NOT_                        103
     $_OR_                          31
     $_XOR_                        142
     adder_carry                    80


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~253 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~132 debug messages>
Removed a total of 44 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 50 unused cells and 330 unused wires.
<suppressed ~51 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$743 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$668 [8], Q = \DATA_OUT [7]).
Adding EN signal on $auto$ff.cc:262:slice$742 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$668 [6], Q = \DATA_OUT [6]).
Adding EN signal on $auto$ff.cc:262:slice$741 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$668 [5], Q = \DATA_OUT [5]).
Adding EN signal on $auto$ff.cc:262:slice$740 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$668 [4], Q = \DATA_OUT [4]).
Adding EN signal on $auto$ff.cc:262:slice$739 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$668 [3], Q = \DATA_OUT [3]).
Adding EN signal on $auto$ff.cc:262:slice$738 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$668 [2], Q = \DATA_OUT [2]).
Adding EN signal on $auto$ff.cc:262:slice$737 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$668 [1], Q = \DATA_OUT [1]).
Adding EN signal on $auto$ff.cc:262:slice$736 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$668 [0], Q = \DATA_OUT [0]).
Adding EN signal on $auto$ff.cc:262:slice$735 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$614 [7], Q = \REG4 [7]).
Adding EN signal on $auto$ff.cc:262:slice$734 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$614 [6], Q = \REG4 [6]).
Adding EN signal on $auto$ff.cc:262:slice$733 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$614 [5], Q = \REG4 [5]).
Adding EN signal on $auto$ff.cc:262:slice$732 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$614 [4], Q = \REG4 [4]).
Adding EN signal on $auto$ff.cc:262:slice$731 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$614 [3], Q = \REG4 [3]).
Adding EN signal on $auto$ff.cc:262:slice$730 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$614 [2], Q = \REG4 [2]).
Adding EN signal on $auto$ff.cc:262:slice$729 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$614 [1], Q = \REG4 [1]).
Adding EN signal on $auto$ff.cc:262:slice$728 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$614 [0], Q = \REG4 [0]).
Adding EN signal on $auto$ff.cc:262:slice$727 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$588 [7], Q = \REG3 [7]).
Adding EN signal on $auto$ff.cc:262:slice$726 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$588 [6], Q = \REG3 [6]).
Adding EN signal on $auto$ff.cc:262:slice$725 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$588 [5], Q = \REG3 [5]).
Adding EN signal on $auto$ff.cc:262:slice$724 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$588 [4], Q = \REG3 [4]).
Adding EN signal on $auto$ff.cc:262:slice$723 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$588 [3], Q = \REG3 [3]).
Adding EN signal on $auto$ff.cc:262:slice$722 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$588 [2], Q = \REG3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$721 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$588 [1], Q = \REG3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$720 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$588 [0], Q = \REG3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$719 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [7], Q = \REG2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$718 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [6], Q = \REG2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$717 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [5], Q = \REG2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$716 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [4], Q = \REG2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$715 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [3], Q = \REG2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$714 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [2], Q = \REG2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$713 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [1], Q = \REG2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$712 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [0], Q = \REG2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$711 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$536 [7], Q = \REG1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$710 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$536 [6], Q = \REG1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$709 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$536 [5], Q = \REG1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$708 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$536 [4], Q = \REG1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$707 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$536 [3], Q = \REG1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$706 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$536 [2], Q = \REG1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$705 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$536 [1], Q = \REG1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$704 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$536 [0], Q = \REG1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$703 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$640 [7], Q = \RLAST [7]).
Adding EN signal on $auto$ff.cc:262:slice$702 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$640 [6], Q = \RLAST [6]).
Adding EN signal on $auto$ff.cc:262:slice$701 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$640 [5], Q = \RLAST [5]).
Adding EN signal on $auto$ff.cc:262:slice$700 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$640 [4], Q = \RLAST [4]).
Adding EN signal on $auto$ff.cc:262:slice$699 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$640 [3], Q = \RLAST [3]).
Adding EN signal on $auto$ff.cc:262:slice$698 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$640 [2], Q = \RLAST [2]).
Adding EN signal on $auto$ff.cc:262:slice$697 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$640 [1], Q = \RLAST [1]).
Adding EN signal on $auto$ff.cc:262:slice$696 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$640 [0], Q = \RLAST [0]).
Adding EN signal on $auto$ff.cc:262:slice$695 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$510 [7], Q = \RMIN [7]).
Adding EN signal on $auto$ff.cc:262:slice$694 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$510 [6], Q = \RMIN [6]).
Adding EN signal on $auto$ff.cc:262:slice$693 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$510 [5], Q = \RMIN [5]).
Adding EN signal on $auto$ff.cc:262:slice$692 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$510 [4], Q = \RMIN [4]).
Adding EN signal on $auto$ff.cc:262:slice$691 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$510 [3], Q = \RMIN [3]).
Adding EN signal on $auto$ff.cc:262:slice$690 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$510 [2], Q = \RMIN [2]).
Adding EN signal on $auto$ff.cc:262:slice$689 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$510 [1], Q = \RMIN [1]).
Adding EN signal on $auto$ff.cc:262:slice$688 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$510 [0], Q = \RMIN [0]).
Adding EN signal on $auto$ff.cc:262:slice$687 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$484 [7], Q = \RMAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$686 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$484 [6], Q = \RMAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$685 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$484 [5], Q = \RMAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$684 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$484 [4], Q = \RMAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$683 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$484 [3], Q = \RMAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$682 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$484 [2], Q = \RMAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$681 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$484 [1], Q = \RMAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$680 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$484 [0], Q = \RMAX [0]).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 104 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~208 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~705 debug messages>
Removed a total of 235 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 261 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.25.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~117 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~49 debug messages>

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.28.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Extracted 272 gates and 392 wires to a netlist network with 119 inputs and 106 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/b04/abc_tmp.scr 
ABC:   #Luts =   138  Max Lvl =   5  Avg Lvl =   1.15  [   0.07 sec. at Pass 0]
ABC:   #Luts =   128  Max Lvl =   4  Avg Lvl =   1.08  [   0.33 sec. at Pass 1]
ABC:   #Luts =   128  Max Lvl =   4  Avg Lvl =   1.08  [   0.17 sec. at Pass 2]
ABC:   #Luts =   128  Max Lvl =   4  Avg Lvl =   1.08  [   0.30 sec. at Pass 3]
ABC:   #Luts =   128  Max Lvl =   4  Avg Lvl =   1.08  [   0.26 sec. at Pass 4]
ABC:   #Luts =   128  Max Lvl =   4  Avg Lvl =   1.08  [   0.35 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      128
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:      119
ABC RESULTS:          output signals:      106
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 245 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== b04 ===

   Number of wires:                133
   Number of wire bits:            429
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                274
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      2
     $lut                          128
     adder_carry                    80


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== b04 ===

   Number of wires:                133
   Number of wire bits:            429
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                274
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      2
     $lut                          128
     adder_carry                    80


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~396 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~1116 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~429 debug messages>
Removed a total of 143 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 616 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~22 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Extracted 243 gates and 365 wires to a netlist network with 120 inputs and 107 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/b04/abc_tmp.scr 
ABC:   #Luts =   129  Max Lvl =   4  Avg Lvl =   0.99  [   0.17 sec. at Pass 0]
ABC:   #Luts =   129  Max Lvl =   4  Avg Lvl =   0.99  [   0.46 sec. at Pass 1]
ABC:   #Luts =   129  Max Lvl =   4  Avg Lvl =   0.99  [   0.16 sec. at Pass 2]
ABC:   #Luts =   128  Max Lvl =   4  Avg Lvl =   1.00  [   0.22 sec. at Pass 3]
ABC:   #Luts =   128  Max Lvl =   4  Avg Lvl =   1.00  [   0.22 sec. at Pass 4]
ABC:   #Luts =   128  Max Lvl =   4  Avg Lvl =   1.00  [   0.33 sec. at Pass 5]
ABC:   #Luts =   128  Max Lvl =   4  Avg Lvl =   1.00  [   0.37 sec. at Pass 6]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      128
ABC RESULTS:        internal signals:      138
ABC RESULTS:           input signals:      120
ABC RESULTS:          output signals:      107
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 348 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \b04

3.45.2. Analyzing design hierarchy..
Top module:  \b04
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== b04 ===

   Number of wires:                133
   Number of wire bits:            429
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                274
     $lut                          128
     adder_carry                    80
     dffsre                         66


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b04'.

End of script. Logfile hash: 8a6013c18b, CPU: user 1.70s system 0.03s, MEM: 20.53 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 93% 2x abc (22 sec), 2% 31x opt_expr (0 sec), ...
real 6.40
user 18.53
sys 5.53
