
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.19
 Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b15.vhd

yosys> verific -vhdl b15.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b15.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b15.vhd:1: analyzing entity 'b15'
VERIFIC-INFO [VHDL-1010] b15.vhd:17: analyzing architecture 'behav'

yosys> synth_rs -top b15 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.44

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b15

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b15.vhd:1: processing 'b15(BEHAV)'
Importing module b15.

3.3.1. Analyzing design hierarchy..
Top module:  \b15

3.3.2. Analyzing design hierarchy..
Top module:  \b15
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~17 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~5 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 7 unused cells and 141 unused wires.
<suppressed ~65 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b15...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
    New ctrl vector for $pmux cell $verific$Select_723$b15.vhd:562$906: { $verific$n7981$87 $verific$n7982$88 $auto$opt_reduce.cc:134:opt_pmux$1077 $auto$opt_reduce.cc:134:opt_pmux$1075 }
    New ctrl vector for $pmux cell $verific$Select_725$b15.vhd:562$908: { $verific$n7981$87 $auto$opt_reduce.cc:134:opt_pmux$1083 $auto$opt_reduce.cc:134:opt_pmux$1081 $auto$opt_reduce.cc:134:opt_pmux$1079 }
    New ctrl vector for $pmux cell $verific$Select_731$b15.vhd:562$914: { $verific$n8173$108 $verific$n7988$94 $auto$opt_reduce.cc:134:opt_pmux$1085 $verific$n7990$96 }
    New ctrl vector for $pmux cell $verific$Select_733$b15.vhd:562$915: { $verific$n8173$108 $auto$opt_reduce.cc:134:opt_pmux$1089 $auto$opt_reduce.cc:134:opt_pmux$1087 }
    New ctrl vector for $pmux cell $verific$Select_735$b15.vhd:562$916: { $verific$n8173$108 $auto$opt_reduce.cc:134:opt_pmux$1093 $auto$opt_reduce.cc:134:opt_pmux$1091 }
    New ctrl vector for $pmux cell $verific$Select_737$b15.vhd:562$917: { $verific$n8173$108 $auto$opt_reduce.cc:134:opt_pmux$1095 }
    New ctrl vector for $pmux cell $verific$select_720$b15.vhd:562$903: { $verific$n7981$87 $verific$n7982$88 $auto$opt_reduce.cc:134:opt_pmux$1105 $auto$opt_reduce.cc:134:opt_pmux$1103 $auto$opt_reduce.cc:134:opt_pmux$1101 $auto$opt_reduce.cc:134:opt_pmux$1099 $auto$opt_reduce.cc:134:opt_pmux$1097 }
    New ctrl vector for $pmux cell $verific$select_721$b15.vhd:562$904: { $auto$opt_reduce.cc:134:opt_pmux$1115 $auto$opt_reduce.cc:134:opt_pmux$1113 $verific$n7987$93 $verific$n7989$95 $auto$opt_reduce.cc:134:opt_pmux$1111 $auto$opt_reduce.cc:134:opt_pmux$1109 $auto$opt_reduce.cc:134:opt_pmux$1107 }
    New ctrl vector for $pmux cell $verific$select_726$b15.vhd:562$909: { $verific$n7981$87 $verific$n7982$88 $auto$opt_reduce.cc:134:opt_pmux$1117 }
    New ctrl vector for $pmux cell $verific$select_727$b15.vhd:562$910: { $verific$n7985$91 $verific$n7987$93 $verific$n7989$95 $verific$n7995$101 $auto$opt_reduce.cc:134:opt_pmux$1119 }
    New ctrl vector for $pmux cell $verific$select_728$b15.vhd:562$911: { $verific$n7986$92 $verific$n7996$102 $auto$opt_reduce.cc:134:opt_pmux$1121 }
    New ctrl vector for $pmux cell $verific$select_729$b15.vhd:562$912: { $verific$n7987$93 $verific$n7988$94 $auto$opt_reduce.cc:134:opt_pmux$1125 $auto$opt_reduce.cc:134:opt_pmux$1123 }
    New ctrl vector for $pmux cell $verific$select_738$b15.vhd:562$918: { $verific$n7987$93 $verific$n7988$94 $auto$opt_reduce.cc:134:opt_pmux$1127 }
    New ctrl vector for $pmux cell $verific$select_739$b15.vhd:562$919: { $verific$n7987$93 $verific$n7988$94 $auto$opt_reduce.cc:134:opt_pmux$1129 }
    New ctrl vector for $pmux cell $verific$select_740$b15.vhd:562$920: { $verific$n7988$94 $verific$n7990$96 $auto$opt_reduce.cc:134:opt_pmux$1131 }
    New ctrl vector for $pmux cell $verific$select_741$b15.vhd:562$921: { $verific$n7988$94 $auto$opt_reduce.cc:134:opt_pmux$1133 }
  Optimizing cells in module \b15.
Performed a total of 16 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$rEIP_reg$b15.vhd:612$1049 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Address_reg$b15.vhd:231$628 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ADS_n_reg$b15.vhd:231$632 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$W_R_n_reg$b15.vhd:231$629 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$State_reg$b15.vhd:231$633 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$StateBS16_reg$b15.vhd:231$635 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$RequestPending_reg$b15.vhd:612$1053 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ReadRequest_reg$b15.vhd:612$1051 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.uWord_reg$b15.vhd:612$1043 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.lWord_reg$b15.vhd:612$1042 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.State2_reg$b15.vhd:612$1019 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.PhyAddrPointer_reg$b15.vhd:612$1039 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.More_reg$b15.vhd:612$1040 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_9$b15.vhd:612$1027 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_8$b15.vhd:612$1026 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_7$b15.vhd:612$1025 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_6$b15.vhd:612$1024 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_5$b15.vhd:612$1023 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_4$b15.vhd:612$1022 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_3$b15.vhd:612$1021 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_2$b15.vhd:612$1020 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_16$b15.vhd:612$1034 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_15$b15.vhd:612$1033 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_14$b15.vhd:612$1032 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_13$b15.vhd:612$1031 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_12$b15.vhd:612$1030 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_11$b15.vhd:612$1029 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_10$b15.vhd:612$1028 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg$b15.vhd:612$1035 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:612$1037 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:612$1036 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstAddrPointer_reg$b15.vhd:612$1038 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.Flush_reg$b15.vhd:612$1041 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$MemoryFetch_reg$b15.vhd:612$1052 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$M_IO_n_reg$b15.vhd:231$631 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EBX_reg$b15.vhd:612$1048 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EAX_reg$b15.vhd:612$1047 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Datao_reg$b15.vhd:612$1045 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$DataWidth_reg$b15.vhd:231$636 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$D_C_n_reg$b15.vhd:231$630 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$CodeFetch_reg$b15.vhd:612$1044 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ByteEnable_reg$b15.vhd:668$1071 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$BE_n_reg$b15.vhd:231$627 ($aldff) from module b15.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 2 unused cells and 19 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$ByteEnable_reg$b15.vhd:668$1071 ($adff) from module b15 (D = $verific$n9780$536, Q = \ByteEnable).
Setting constant 0-bit at position 2 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 3 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 5 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 6 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 7 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 8 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 9 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 10 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 11 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 12 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 13 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 14 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 15 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 16 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 17 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 18 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 19 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 20 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 21 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 22 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 23 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 24 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 25 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 26 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 27 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 28 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 29 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 30 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 31 on $verific$DataWidth_reg$b15.vhd:231$636 ($adff) from module b15.
Setting constant 0-bit at position 31 on $verific$Datao_reg$b15.vhd:612$1045 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:612$1037 ($adff) from module b15.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~4 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1137 ($adff) from module b15.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$1138 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:612$1036 ($adff) from module b15.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_98$b15.vhd:181$596 ($mux).
Removed top 1 bits (of 31) from port Y of cell b15.$verific$add_113$b15.vhd:197$600 ($add).
Removed top 1 bits (of 31) from port A of cell b15.$verific$add_113$b15.vhd:197$600 ($add).
Removed top 1 bits (of 3) from mux cell b15.$verific$mux_127$b15.vhd:215$606 ($mux).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_193$b15.vhd:305$641 ($shl).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_210$b15.vhd:306$658 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_210$b15.vhd:306$658 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_210$b15.vhd:306$658 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_213$b15.vhd:308$661 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_230$b15.vhd:309$678 ($add).
Removed top 8 bits (of 16) from port Y of cell b15.$verific$add_235$b15.vhd:311$682 ($add).
Removed top 8 bits (of 16) from port A of cell b15.$verific$add_235$b15.vhd:311$682 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_237$b15.vhd:311$687 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_254$b15.vhd:312$704 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_261$b15.vhd:313$712 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_278$b15.vhd:314$729 ($add).
Removed top 29 bits (of 30) from port B of cell b15.$verific$add_281$b15.vhd:315$730 ($add).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_284$b15.vhd:318$732 ($add).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_286$b15.vhd:319$734 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_287$b15.vhd:320$735 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_287$b15.vhd:320$735 ($neg).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_360$b15.vhd:344$760 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_362$b15.vhd:345$762 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_362$b15.vhd:345$762 ($add).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$add_362$b15.vhd:345$762 ($add).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_369$b15.vhd:355$764 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_369$b15.vhd:355$764 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_369$b15.vhd:355$764 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_370$b15.vhd:355$765 ($le).
Removed top 1 bits (of 8) from port A of cell b15.$verific$LessThan_373$b15.vhd:356$767 ($lt).
Removed top 1 bits (of 9) from port A of cell b15.$verific$sub_378$b15.vhd:357$768 ($sub).
Removed top 1 bits (of 9) from port B of cell b15.$verific$sub_378$b15.vhd:357$768 ($sub).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$sub_379$b15.vhd:357$769 ($sub).
Removed top 1 bits (of 33) from port A of cell b15.$verific$sub_379$b15.vhd:357$769 ($sub).
Removed top 1 bits (of 33) from port B of cell b15.$verific$sub_379$b15.vhd:357$769 ($sub).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_383$b15.vhd:360$771 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_387$b15.vhd:360$772 ($add).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_397$b15.vhd:370$779 ($le).
Removed top 29 bits (of 32) from port B of cell b15.$verific$add_399$b15.vhd:371$780 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_403$b15.vhd:371$781 ($add).
Removed top 1 bits (of 3) from port A of cell b15.$verific$add_422$b15.vhd:391$786 ($add).
Removed top 2 bits (of 3) from port B of cell b15.$verific$add_422$b15.vhd:391$786 ($add).
Removed top 1 bits (of 3) from port Y of cell b15.$verific$add_422$b15.vhd:391$786 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_424$b15.vhd:391$789 ($add).
Removed top 3 bits (of 5) from port B of cell b15.$verific$add_424$b15.vhd:391$789 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_424$b15.vhd:391$789 ($add).
Removed top 7 bits (of 8) from port B of cell b15.$verific$add_426$b15.vhd:391$792 ($add).
Removed top 1 bits (of 4) from port A of cell b15.$verific$add_427$b15.vhd:391$793 ($add).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_427$b15.vhd:391$793 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_435$b15.vhd:395$796 ($add).
Removed top 2 bits (of 5) from port B of cell b15.$verific$add_435$b15.vhd:395$796 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_435$b15.vhd:395$796 ($add).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_440$b15.vhd:399$801 ($mux).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_462$b15.vhd:412$804 ($le).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_463$b15.vhd:413$805 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_464$b15.vhd:414$806 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_464$b15.vhd:414$806 ($neg).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_477$b15.vhd:430$811 ($add).
Removed top 1 bits (of 10) from mux cell b15.$verific$mux_958$b15.vhd:444$839 ($mux).
Removed top 1 bits (of 16) from port Y of cell b15.$verific$add_522$b15.vhd:457$844 ($add).
Removed top 1 bits (of 16) from port A of cell b15.$verific$add_522$b15.vhd:457$844 ($add).
Removed top 1 bits (of 3) from port A of cell b15.$verific$equal_528$b15.vhd:462$849 ($eq).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_573$b15.vhd:479$866 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_950$b15.vhd:479$869 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_949$b15.vhd:483$877 ($mux).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_681$b15.vhd:546$878 ($add).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_689$b15.vhd:552$880 ($add).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_702$b15.vhd:348$883 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_713$b15.vhd:525$894 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_714$b15.vhd:530$895 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_717$b15.vhd:545$898 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_718$b15.vhd:551$899 ($eq).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_742$b15.vhd:563$922 ($lt).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_744$b15.vhd:563$924 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$sub_744$b15.vhd:563$924 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_745$b15.vhd:563$925 ($lt).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_755$b15.vhd:579$933 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_756$b15.vhd:580$934 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_756$b15.vhd:580$934 ($neg).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_759$b15.vhd:585$938 ($mux).
Removed top 1 bits (of 2) from port A of cell b15.$verific$add_760$b15.vhd:586$940 ($add).
Removed top 1 bits (of 4) from mux cell b15.$verific$mux_764$b15.vhd:587$942 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_765$b15.vhd:588$943 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_766$b15.vhd:588$944 ($mux).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_767$b15.vhd:589$945 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_767$b15.vhd:589$945 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_767$b15.vhd:589$945 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_768$b15.vhd:589$946 ($lt).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_770$b15.vhd:594$947 ($mux).
Removed top 1 bits (of 5) from port A of cell b15.$verific$LessThan_771$b15.vhd:597$948 ($le).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_771$b15.vhd:597$948 ($le).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_812$b15.vhd:605$984 ($mux).
Removed top 1 bits (of 33) from FF cell b15.$verific$rEIP_reg$b15.vhd:612$1049 ($adff).
Removed top 1 bits (of 2) from port A of cell b15.$verific$equal_909$b15.vhd:634$1063 ($eq).
Removed top 30 bits (of 32) from port Y of cell b15.$verific$unary_minus_756$b15.vhd:580$934 ($neg).
Removed top 30 bits (of 32) from port A of cell b15.$verific$unary_minus_756$b15.vhd:580$934 ($neg).
Removed top 30 bits (of 32) from wire b15.$verific$n1001$169.
Removed top 1 bits (of 31) from wire b15.$verific$n1151$174.
Removed top 1 bits (of 3) from wire b15.$verific$n1294$179.
Removed top 1 bits (of 5) from wire b15.$verific$n2071$212.
Removed top 8 bits (of 16) from wire b15.$verific$n2267$233.
Removed top 1 bits (of 33) from wire b15.$verific$n2793$279.
Removed top 1 bits (of 5) from wire b15.$verific$n3660$306.
Removed top 1 bits (of 33) from wire b15.$verific$n3837$313.
Removed top 1 bits (of 3) from wire b15.$verific$n4619$334.
Removed top 1 bits (of 5) from wire b15.$verific$n4633$336.
Removed top 1 bits (of 4) from wire b15.$verific$n4659$339.
Removed top 1 bits (of 5) from wire b15.$verific$n4791$343.
Removed top 1 bits (of 5) from wire b15.$verific$n4869$347.
Removed top 1 bits (of 33) from wire b15.$verific$n5140$350.
Removed top 1 bits (of 5) from wire b15.$verific$n5695$369.
Removed top 1 bits (of 16) from wire b15.$verific$n5974$380.
Removed top 1 bits (of 32) from wire b15.$verific$n6324$387.
Removed top 1 bits (of 5) from wire b15.$verific$n6434$391.
Removed top 1 bits (of 32) from wire b15.$verific$n6510$395.
Removed top 31 bits (of 33) from wire b15.$verific$n8312$445.
Removed top 30 bits (of 32) from wire b15.$verific$n8412$448.
Removed top 1 bits (of 4) from wire b15.$verific$n8452$450.
Removed top 1 bits (of 5) from wire b15.$verific$n8457$451.
Removed top 1 bits (of 5) from wire b15.$verific$n8463$452.
Removed top 3 bits (of 4) from wire b15.$verific$n8477$454.
Removed top 1 bits (of 5) from wire b15.$verific$n8482$455.
Removed top 1 bits (of 5) from wire b15.$verific$n8841$491.
Removed top 30 bits (of 32) from wire b15.DataWidth.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueRd_Addr.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueWr_Addr.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 34 unused cells and 95 unused wires.
<suppressed ~35 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b15:
  creating $macc model for $verific$add_113$b15.vhd:197$600 ($add).
  creating $macc model for $verific$add_210$b15.vhd:306$658 ($add).
  creating $macc model for $verific$add_230$b15.vhd:309$678 ($add).
  creating $macc model for $verific$add_235$b15.vhd:311$682 ($add).
  creating $macc model for $verific$add_254$b15.vhd:312$704 ($add).
  creating $macc model for $verific$add_259$b15.vhd:313$708 ($add).
  creating $macc model for $verific$add_278$b15.vhd:314$729 ($add).
  creating $macc model for $verific$add_28$b15.vhd:125$550 ($add).
  creating $macc model for $verific$add_281$b15.vhd:315$730 ($add).
  creating $macc model for $verific$add_284$b15.vhd:318$732 ($add).
  creating $macc model for $verific$add_360$b15.vhd:344$760 ($add).
  creating $macc model for $verific$add_362$b15.vhd:345$762 ($add).
  creating $macc model for $verific$add_383$b15.vhd:360$771 ($add).
  creating $macc model for $verific$add_387$b15.vhd:360$772 ($add).
  creating $macc model for $verific$add_399$b15.vhd:371$780 ($add).
  creating $macc model for $verific$add_403$b15.vhd:371$781 ($add).
  creating $macc model for $verific$add_422$b15.vhd:391$786 ($add).
  creating $macc model for $verific$add_424$b15.vhd:391$789 ($add).
  creating $macc model for $verific$add_426$b15.vhd:391$792 ($add).
  creating $macc model for $verific$add_427$b15.vhd:391$793 ($add).
  creating $macc model for $verific$add_435$b15.vhd:395$796 ($add).
  creating $macc model for $verific$add_477$b15.vhd:430$811 ($add).
  creating $macc model for $verific$add_522$b15.vhd:457$844 ($add).
  creating $macc model for $verific$add_681$b15.vhd:546$878 ($add).
  creating $macc model for $verific$add_689$b15.vhd:552$880 ($add).
  creating $macc model for $verific$add_760$b15.vhd:586$940 ($add).
  creating $macc model for $verific$sub_369$b15.vhd:355$764 ($sub).
  creating $macc model for $verific$sub_378$b15.vhd:357$768 ($sub).
  creating $macc model for $verific$sub_379$b15.vhd:357$769 ($sub).
  creating $macc model for $verific$sub_744$b15.vhd:563$924 ($sub).
  creating $macc model for $verific$sub_767$b15.vhd:589$945 ($sub).
  creating $macc model for $verific$unary_minus_287$b15.vhd:320$735 ($neg).
  creating $macc model for $verific$unary_minus_464$b15.vhd:414$806 ($neg).
  creating $macc model for $verific$unary_minus_756$b15.vhd:580$934 ($neg).
  creating $alu model for $macc $verific$unary_minus_756$b15.vhd:580$934.
  creating $alu model for $macc $verific$unary_minus_464$b15.vhd:414$806.
  creating $alu model for $macc $verific$unary_minus_287$b15.vhd:320$735.
  creating $alu model for $macc $verific$sub_767$b15.vhd:589$945.
  creating $alu model for $macc $verific$sub_744$b15.vhd:563$924.
  creating $alu model for $macc $verific$sub_379$b15.vhd:357$769.
  creating $alu model for $macc $verific$sub_378$b15.vhd:357$768.
  creating $alu model for $macc $verific$sub_369$b15.vhd:355$764.
  creating $alu model for $macc $verific$add_760$b15.vhd:586$940.
  creating $alu model for $macc $verific$add_689$b15.vhd:552$880.
  creating $alu model for $macc $verific$add_681$b15.vhd:546$878.
  creating $alu model for $macc $verific$add_522$b15.vhd:457$844.
  creating $alu model for $macc $verific$add_477$b15.vhd:430$811.
  creating $alu model for $macc $verific$add_435$b15.vhd:395$796.
  creating $alu model for $macc $verific$add_427$b15.vhd:391$793.
  creating $alu model for $macc $verific$add_426$b15.vhd:391$792.
  creating $alu model for $macc $verific$add_424$b15.vhd:391$789.
  creating $alu model for $macc $verific$add_422$b15.vhd:391$786.
  creating $alu model for $macc $verific$add_403$b15.vhd:371$781.
  creating $alu model for $macc $verific$add_399$b15.vhd:371$780.
  creating $alu model for $macc $verific$add_387$b15.vhd:360$772.
  creating $alu model for $macc $verific$add_383$b15.vhd:360$771.
  creating $alu model for $macc $verific$add_362$b15.vhd:345$762.
  creating $alu model for $macc $verific$add_360$b15.vhd:344$760.
  creating $alu model for $macc $verific$add_284$b15.vhd:318$732.
  creating $alu model for $macc $verific$add_281$b15.vhd:315$730.
  creating $alu model for $macc $verific$add_28$b15.vhd:125$550.
  creating $alu model for $macc $verific$add_278$b15.vhd:314$729.
  creating $alu model for $macc $verific$add_259$b15.vhd:313$708.
  creating $alu model for $macc $verific$add_254$b15.vhd:312$704.
  creating $alu model for $macc $verific$add_235$b15.vhd:311$682.
  creating $alu model for $macc $verific$add_230$b15.vhd:309$678.
  creating $alu model for $macc $verific$add_210$b15.vhd:306$658.
  creating $alu model for $macc $verific$add_113$b15.vhd:197$600.
  creating $alu model for $verific$LessThan_286$b15.vhd:319$734 ($lt): new $alu
  creating $alu model for $verific$LessThan_370$b15.vhd:355$765 ($le): new $alu
  creating $alu model for $verific$LessThan_373$b15.vhd:356$767 ($lt): new $alu
  creating $alu model for $verific$LessThan_397$b15.vhd:370$779 ($le): new $alu
  creating $alu model for $verific$LessThan_462$b15.vhd:412$804 ($le): new $alu
  creating $alu model for $verific$LessThan_463$b15.vhd:413$805 ($lt): new $alu
  creating $alu model for $verific$LessThan_742$b15.vhd:563$922 ($lt): new $alu
  creating $alu model for $verific$LessThan_745$b15.vhd:563$925 ($lt): new $alu
  creating $alu model for $verific$LessThan_755$b15.vhd:579$933 ($lt): new $alu
  creating $alu model for $verific$LessThan_768$b15.vhd:589$946 ($lt): new $alu
  creating $alu model for $verific$LessThan_771$b15.vhd:597$948 ($le): new $alu
  creating $alu cell for $verific$LessThan_771$b15.vhd:597$948: $auto$alumacc.cc:485:replace_alu$1418
  creating $alu cell for $verific$LessThan_768$b15.vhd:589$946: $auto$alumacc.cc:485:replace_alu$1427
  creating $alu cell for $verific$LessThan_755$b15.vhd:579$933: $auto$alumacc.cc:485:replace_alu$1432
  creating $alu cell for $verific$LessThan_745$b15.vhd:563$925: $auto$alumacc.cc:485:replace_alu$1437
  creating $alu cell for $verific$LessThan_742$b15.vhd:563$922: $auto$alumacc.cc:485:replace_alu$1442
  creating $alu cell for $verific$LessThan_463$b15.vhd:413$805: $auto$alumacc.cc:485:replace_alu$1453
  creating $alu cell for $verific$LessThan_462$b15.vhd:412$804: $auto$alumacc.cc:485:replace_alu$1458
  creating $alu cell for $verific$LessThan_397$b15.vhd:370$779: $auto$alumacc.cc:485:replace_alu$1471
  creating $alu cell for $verific$LessThan_373$b15.vhd:356$767: $auto$alumacc.cc:485:replace_alu$1484
  creating $alu cell for $verific$LessThan_370$b15.vhd:355$765: $auto$alumacc.cc:485:replace_alu$1489
  creating $alu cell for $verific$LessThan_286$b15.vhd:319$734: $auto$alumacc.cc:485:replace_alu$1502
  creating $alu cell for $verific$add_113$b15.vhd:197$600: $auto$alumacc.cc:485:replace_alu$1507
  creating $alu cell for $verific$add_210$b15.vhd:306$658: $auto$alumacc.cc:485:replace_alu$1510
  creating $alu cell for $verific$add_230$b15.vhd:309$678: $auto$alumacc.cc:485:replace_alu$1513
  creating $alu cell for $verific$add_235$b15.vhd:311$682: $auto$alumacc.cc:485:replace_alu$1516
  creating $alu cell for $verific$add_254$b15.vhd:312$704: $auto$alumacc.cc:485:replace_alu$1519
  creating $alu cell for $verific$add_259$b15.vhd:313$708: $auto$alumacc.cc:485:replace_alu$1522
  creating $alu cell for $verific$add_278$b15.vhd:314$729: $auto$alumacc.cc:485:replace_alu$1525
  creating $alu cell for $verific$add_28$b15.vhd:125$550: $auto$alumacc.cc:485:replace_alu$1528
  creating $alu cell for $verific$add_281$b15.vhd:315$730: $auto$alumacc.cc:485:replace_alu$1531
  creating $alu cell for $verific$add_284$b15.vhd:318$732: $auto$alumacc.cc:485:replace_alu$1534
  creating $alu cell for $verific$add_360$b15.vhd:344$760: $auto$alumacc.cc:485:replace_alu$1537
  creating $alu cell for $verific$add_362$b15.vhd:345$762: $auto$alumacc.cc:485:replace_alu$1540
  creating $alu cell for $verific$add_383$b15.vhd:360$771: $auto$alumacc.cc:485:replace_alu$1543
  creating $alu cell for $verific$add_387$b15.vhd:360$772: $auto$alumacc.cc:485:replace_alu$1546
  creating $alu cell for $verific$add_399$b15.vhd:371$780: $auto$alumacc.cc:485:replace_alu$1549
  creating $alu cell for $verific$add_403$b15.vhd:371$781: $auto$alumacc.cc:485:replace_alu$1552
  creating $alu cell for $verific$add_422$b15.vhd:391$786: $auto$alumacc.cc:485:replace_alu$1555
  creating $alu cell for $verific$add_424$b15.vhd:391$789: $auto$alumacc.cc:485:replace_alu$1558
  creating $alu cell for $verific$add_426$b15.vhd:391$792: $auto$alumacc.cc:485:replace_alu$1561
  creating $alu cell for $verific$add_427$b15.vhd:391$793: $auto$alumacc.cc:485:replace_alu$1564
  creating $alu cell for $verific$add_435$b15.vhd:395$796: $auto$alumacc.cc:485:replace_alu$1567
  creating $alu cell for $verific$add_477$b15.vhd:430$811: $auto$alumacc.cc:485:replace_alu$1570
  creating $alu cell for $verific$add_522$b15.vhd:457$844: $auto$alumacc.cc:485:replace_alu$1573
  creating $alu cell for $verific$add_681$b15.vhd:546$878: $auto$alumacc.cc:485:replace_alu$1576
  creating $alu cell for $verific$add_689$b15.vhd:552$880: $auto$alumacc.cc:485:replace_alu$1579
  creating $alu cell for $verific$add_760$b15.vhd:586$940: $auto$alumacc.cc:485:replace_alu$1582
  creating $alu cell for $verific$sub_369$b15.vhd:355$764: $auto$alumacc.cc:485:replace_alu$1585
  creating $alu cell for $verific$sub_378$b15.vhd:357$768: $auto$alumacc.cc:485:replace_alu$1588
  creating $alu cell for $verific$sub_379$b15.vhd:357$769: $auto$alumacc.cc:485:replace_alu$1591
  creating $alu cell for $verific$sub_744$b15.vhd:563$924: $auto$alumacc.cc:485:replace_alu$1594
  creating $alu cell for $verific$sub_767$b15.vhd:589$945: $auto$alumacc.cc:485:replace_alu$1597
  creating $alu cell for $verific$unary_minus_287$b15.vhd:320$735: $auto$alumacc.cc:485:replace_alu$1600
  creating $alu cell for $verific$unary_minus_464$b15.vhd:414$806: $auto$alumacc.cc:485:replace_alu$1603
  creating $alu cell for $verific$unary_minus_756$b15.vhd:580$934: $auto$alumacc.cc:485:replace_alu$1606
  created 45 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~97 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1319: { $verific$n7997$103 $verific$n7996$102 $verific$n7995$101 $verific$n7994$100 $verific$n7993$99 $verific$n7992$98 $verific$n7991$97 $verific$n7990$96 $verific$n7989$95 $verific$n7988$94 $verific$n7986$92 $verific$n7984$90 $verific$n7983$89 $verific$n7982$88 $verific$n7981$87 $verific$n7980$86 $verific$n7979$85 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1267: { $auto$rtlil.cc:2398:Or$1256 $verific$n7990$96 $verific$n7989$95 $verific$n7988$94 $verific$n7987$93 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1291: { $auto$rtlil.cc:2398:Or$1256 $verific$n7990$96 $verific$n7989$95 $verific$n7988$94 }
  Optimizing cells in module \b15.
Performed a total of 3 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 5 unused cells and 21 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~97 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== b15 ===

   Number of wires:                645
   Number of wire bits:           6583
   Number of public wires:          50
   Number of public wire bits:     455
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                526
     $adff                          42
     $adffe                          1
     $alu                           45
     $and                           23
     $bmux                          48
     $eq                            22
     $logic_not                      1
     $mux                          265
     $not                           18
     $or                            22
     $reduce_and                     5
     $reduce_or                     30
     $shl                            4


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== b15 ===

   Number of wires:                645
   Number of wire bits:           6583
   Number of public wires:          50
   Number of public wire bits:     455
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                526
     $adff                          42
     $adffe                          1
     $alu                           45
     $and                           23
     $bmux                          48
     $eq                            22
     $logic_not                      1
     $mux                          265
     $not                           18
     $or                            22
     $reduce_and                     5
     $reduce_or                     30
     $shl                            4


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> stat

3.24. Printing statistics.

=== b15 ===

   Number of wires:                645
   Number of wire bits:           6583
   Number of public wires:          50
   Number of public wire bits:     455
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                526
     $adff                          42
     $adffe                          1
     $alu                           45
     $and                           23
     $bmux                          48
     $eq                            22
     $logic_not                      1
     $mux                          265
     $not                           18
     $or                            22
     $reduce_and                     5
     $reduce_or                     30
     $shl                            4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $and.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$6268c9849396b992276ed6f68094a32888ec4427\_80_rs_alu for cells of type $alu.
Using template $paramod$354e377aaa263356a1a43d04ca847f8b92483a2a\_80_rs_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$9f4898d8264c91aede998c5978e055c0b827a30c\_80_rs_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$653d0dc5a667330298513325d0bd1def0e6c1128\_90_alu for cells of type $alu.
Using template $paramod$2c4d537db249d5ee7774cabca037a7502075cb7a\_80_rs_alu for cells of type $alu.
Using template $paramod$076c9a7a3f037230073fe14dd4865d470cb48917\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$fba31833a4dd9015338784eaf6f34efb78c8e548\_80_rs_alu for cells of type $alu.
Using template $paramod$bfceb922395790c0ce92e9f9b5b428d4fc72cc30\_90_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$de60d091aee7fd14d9d83b1a27fa9939374757c5\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$b3c20b05d9b1fc2c940ef2f6c917486aead042e8\_90_alu for cells of type $alu.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod$55cc6ea966d24eaadab3a93edfb07f4c9ec754bb\_80_rs_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~6142 debug messages>

yosys> stat

3.26. Printing statistics.

=== b15 ===

   Number of wires:               3497
   Number of wire bits:          70605
   Number of public wires:          50
   Number of public wire bits:     455
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16283
     $_AND_                       1543
     $_DFFE_PP0P_                    4
     $_DFF_PP0_                    412
     $_MUX_                      10744
     $_NOT_                        767
     $_OR_                        1163
     $_XOR_                       1380
     adder_carry                   270


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~6890 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~3225 debug messages>
Removed a total of 1075 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 516 unused cells and 2464 unused wires.
<suppressed ~517 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~146 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$3028 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10879 [3], Q = \P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$3027 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10879 [2], Q = \P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$3026 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10879 [1], Q = \P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$3025 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10879 [0], Q = \P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$3024 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2483, Q = \StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$3023 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2466 [2], Q = \State [2]).
Adding EN signal on $auto$ff.cc:262:slice$3022 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2466 [1], Q = \State [1]).
Adding EN signal on $auto$ff.cc:262:slice$3021 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2466 [0], Q = \State [0]).
Adding EN signal on $auto$ff.cc:262:slice$3020 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2444, Q = \ADS_n).
Adding EN signal on $auto$ff.cc:262:slice$3018 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2434, Q = \D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$3016 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [29], Q = \Address [29]).
Adding EN signal on $auto$ff.cc:262:slice$3015 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [28], Q = \Address [28]).
Adding EN signal on $auto$ff.cc:262:slice$3014 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [27], Q = \Address [27]).
Adding EN signal on $auto$ff.cc:262:slice$3013 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [26], Q = \Address [26]).
Adding EN signal on $auto$ff.cc:262:slice$3012 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [25], Q = \Address [25]).
Adding EN signal on $auto$ff.cc:262:slice$3011 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [24], Q = \Address [24]).
Adding EN signal on $auto$ff.cc:262:slice$3010 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [23], Q = \Address [23]).
Adding EN signal on $auto$ff.cc:262:slice$3009 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [22], Q = \Address [22]).
Adding EN signal on $auto$ff.cc:262:slice$3008 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [21], Q = \Address [21]).
Adding EN signal on $auto$ff.cc:262:slice$3007 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [20], Q = \Address [20]).
Adding EN signal on $auto$ff.cc:262:slice$3006 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [19], Q = \Address [19]).
Adding EN signal on $auto$ff.cc:262:slice$3005 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [18], Q = \Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$3004 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [17], Q = \Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$3003 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [16], Q = \Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$3002 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [15], Q = \Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$3001 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [14], Q = \Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$3000 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [13], Q = \Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$2999 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [12], Q = \Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$2998 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [11], Q = \Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$2997 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [10], Q = \Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$2996 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [9], Q = \Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$2995 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [8], Q = \Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$2994 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [7], Q = \Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$2993 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [6], Q = \Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$2992 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [5], Q = \Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$2991 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [4], Q = \Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$2990 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [3], Q = \Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$2989 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [2], Q = \Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$2988 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [1], Q = \Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$2987 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2901 [0], Q = \Address [0]).
Adding EN signal on $auto$ff.cc:262:slice$2124 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2685 [1], Q = \DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$2123 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2685 [0], Q = \DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$13354 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [30], Q = \Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$13353 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [29], Q = \Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$13352 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [28], Q = \Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$13351 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [27], Q = \Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$13350 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [26], Q = \Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$13349 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [25], Q = \Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$13348 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [24], Q = \Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$13347 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [23], Q = \Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$13346 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [22], Q = \Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$13345 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [21], Q = \Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$13344 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [20], Q = \Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$13343 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [19], Q = \Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$13342 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [18], Q = \Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$13341 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [17], Q = \Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$13340 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [16], Q = \Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$13339 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [15], Q = \Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$13338 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [14], Q = \Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$13337 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [13], Q = \Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$13336 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [12], Q = \Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$13335 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [11], Q = \Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$13334 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [10], Q = \Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$13333 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [9], Q = \Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$13332 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [8], Q = \Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$13331 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [7], Q = \Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$13330 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [6], Q = \Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$13329 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [5], Q = \Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$13328 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [4], Q = \Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$13327 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [3], Q = \Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$13326 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [2], Q = \Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$13325 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [1], Q = \Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$13324 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12811 [0], Q = \Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$13177 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8722, Q = \RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$13176 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8703, Q = \MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$13175 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8684, Q = \ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$13174 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [32], Q = \rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$13173 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [30], Q = \rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$13172 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [29], Q = \rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$13171 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [28], Q = \rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$13170 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [27], Q = \rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$13169 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [26], Q = \rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$13168 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [25], Q = \rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$13167 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [24], Q = \rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$13166 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [23], Q = \rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$13165 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [22], Q = \rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$13164 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [21], Q = \rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$13163 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [20], Q = \rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$13162 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [19], Q = \rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$13161 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [18], Q = \rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$13160 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [17], Q = \rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$13159 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [16], Q = \rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$13158 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [15], Q = \rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$13157 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [14], Q = \rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$13156 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [13], Q = \rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$13155 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [12], Q = \rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$13154 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [11], Q = \rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$13153 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [10], Q = \rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$13152 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [9], Q = \rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$13151 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [8], Q = \rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$13150 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [7], Q = \rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$13149 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [6], Q = \rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$13148 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [5], Q = \rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$13147 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [4], Q = \rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$13146 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [3], Q = \rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$13145 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [2], Q = \rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$13144 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [1], Q = \rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$13143 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633 [0], Q = \rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$13142 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [31], Q = \EBX [31]).
Adding EN signal on $auto$ff.cc:262:slice$13141 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [30], Q = \EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$13140 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [29], Q = \EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$13139 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [28], Q = \EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$13138 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [27], Q = \EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$13137 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [26], Q = \EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$13136 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [25], Q = \EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$13135 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [24], Q = \EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$13134 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [23], Q = \EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$13133 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [22], Q = \EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$13132 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [21], Q = \EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$13131 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [20], Q = \EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$13130 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [19], Q = \EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$13129 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [18], Q = \EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$13128 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [17], Q = \EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$13127 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [16], Q = \EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$13126 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [15], Q = \EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$13125 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [14], Q = \EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$13124 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [13], Q = \EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$13123 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [12], Q = \EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$13122 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [11], Q = \EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$13121 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [10], Q = \EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$13120 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [9], Q = \EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$13119 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [8], Q = \EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$13118 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [7], Q = \EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$13117 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [6], Q = \EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$13116 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [5], Q = \EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$13115 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [4], Q = \EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$13114 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [3], Q = \EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$13113 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [2], Q = \EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$13112 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [1], Q = \EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$13111 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11840 [0], Q = \EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$13110 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [31], Q = \EAX [31]).
Adding EN signal on $auto$ff.cc:262:slice$13109 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [30], Q = \EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$13108 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [29], Q = \EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$13107 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [28], Q = \EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$13106 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [27], Q = \EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$13105 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [26], Q = \EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$13104 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [25], Q = \EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$13103 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [24], Q = \EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$13102 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [23], Q = \EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$13101 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [22], Q = \EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$13100 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [21], Q = \EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$13099 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [20], Q = \EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$13098 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [19], Q = \EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$13097 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [18], Q = \EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$13096 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [17], Q = \EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$13095 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [16], Q = \EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$13094 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [15], Q = \EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$13093 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [14], Q = \EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$13092 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [13], Q = \EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$13091 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [12], Q = \EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$13090 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [11], Q = \EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$13089 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [10], Q = \EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$13088 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [9], Q = \EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$13087 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [8], Q = \EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$13086 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [7], Q = \EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$13085 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [6], Q = \EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$13084 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [5], Q = \EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$13083 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [4], Q = \EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$13082 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [3], Q = \EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$13081 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [2], Q = \EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$13080 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [1], Q = \EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$13079 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11356 [0], Q = \EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$13078 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10800 [3], Q = \P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$13077 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10800 [2], Q = \P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$13076 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10800 [1], Q = \P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$13075 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10800 [0], Q = \P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$13074 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8741, Q = \CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$13073 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [14], Q = \P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$13072 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [13], Q = \P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$13071 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [12], Q = \P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$13070 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [11], Q = \P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$13069 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [10], Q = \P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$13068 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [9], Q = \P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$13067 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [8], Q = \P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$13066 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [7], Q = \P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$13065 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [6], Q = \P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$13064 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [5], Q = \P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$13063 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [4], Q = \P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$13062 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [3], Q = \P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$13061 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [2], Q = \P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$13060 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [1], Q = \P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$13059 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12086 [0], Q = \P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$13058 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [15], Q = \P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$13057 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [14], Q = \P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$13056 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [13], Q = \P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$13055 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [12], Q = \P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$13054 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [11], Q = \P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$13053 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [10], Q = \P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$13052 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [9], Q = \P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$13051 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [8], Q = \P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$13050 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [7], Q = \P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$13049 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [6], Q = \P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$13048 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [5], Q = \P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$13047 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [4], Q = \P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$13046 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [3], Q = \P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$13045 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [2], Q = \P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$13044 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [1], Q = \P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$13043 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12329 [0], Q = \P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$13042 ($_DFF_PP0_) from module b15 (D = $auto$rtlil.cc:2464:Mux$1186, Q = \P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$13041 ($_DFF_PP0_) from module b15 (D = $auto$rtlil.cc:2464:Mux$1200, Q = \P1.More).
Adding EN signal on $auto$ff.cc:262:slice$13040 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [31], Q = \P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$13039 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [30], Q = \P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$13038 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [29], Q = \P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$13037 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [28], Q = \P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$13036 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [27], Q = \P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$13035 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [26], Q = \P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$13034 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [25], Q = \P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$13033 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [24], Q = \P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$13032 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [23], Q = \P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$13031 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [22], Q = \P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$13030 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [21], Q = \P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$13029 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [20], Q = \P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$13028 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [19], Q = \P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$13027 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [18], Q = \P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$13026 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [17], Q = \P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$13025 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [16], Q = \P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$13024 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [15], Q = \P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$13023 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [14], Q = \P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$13022 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [13], Q = \P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$13021 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [12], Q = \P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$13020 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [11], Q = \P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$13019 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [10], Q = \P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$13018 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [9], Q = \P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$13017 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [8], Q = \P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$13016 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [7], Q = \P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$13015 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [6], Q = \P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$13014 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [5], Q = \P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$13013 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [4], Q = \P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$13012 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [3], Q = \P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$13011 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [2], Q = \P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$13010 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [1], Q = \P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$13009 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7587 [0], Q = \P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$13008 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [31], Q = \P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$13007 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [30], Q = \P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$13006 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [29], Q = \P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$13005 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [28], Q = \P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$13004 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [27], Q = \P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$13003 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [26], Q = \P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$13002 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [25], Q = \P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$13001 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [24], Q = \P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$13000 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [23], Q = \P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$12999 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [22], Q = \P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$12998 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [21], Q = \P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$12997 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [20], Q = \P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$12996 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [19], Q = \P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$12995 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [18], Q = \P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$12994 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [17], Q = \P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$12993 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [16], Q = \P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$12992 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [15], Q = \P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$12991 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [14], Q = \P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$12990 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [13], Q = \P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$12989 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [12], Q = \P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$12988 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [11], Q = \P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$12987 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [10], Q = \P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$12986 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [9], Q = \P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$12985 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [8], Q = \P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$12984 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [7], Q = \P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$12983 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [6], Q = \P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$12982 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [5], Q = \P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$12981 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [4], Q = \P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$12980 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [3], Q = \P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$12979 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [2], Q = \P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$12978 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [1], Q = \P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$12977 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8071 [0], Q = \P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$12976 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10718 [7], Q = \P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12975 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10718 [6], Q = \P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12974 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10718 [5], Q = \P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12973 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10718 [4], Q = \P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12972 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10718 [3], Q = \P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12971 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10718 [2], Q = \P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12970 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10718 [1], Q = \P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12969 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10718 [0], Q = \P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12968 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10594 [7], Q = \P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12967 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10594 [6], Q = \P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12966 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10594 [5], Q = \P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12965 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10594 [4], Q = \P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12964 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10594 [3], Q = \P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12963 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10594 [2], Q = \P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12962 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10594 [1], Q = \P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12961 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10594 [0], Q = \P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12960 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10470 [7], Q = \P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12959 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10470 [6], Q = \P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12958 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10470 [5], Q = \P1.InstQueue[2] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12957 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10470 [4], Q = \P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12956 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10470 [3], Q = \P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12955 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10470 [2], Q = \P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12954 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10470 [1], Q = \P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12953 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10470 [0], Q = \P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12952 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10346 [7], Q = \P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12951 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10346 [6], Q = \P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12950 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10346 [5], Q = \P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12949 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10346 [4], Q = \P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12948 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10346 [3], Q = \P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12947 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10346 [2], Q = \P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12946 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10346 [1], Q = \P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12945 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10346 [0], Q = \P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12944 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10222 [7], Q = \P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12943 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10222 [6], Q = \P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12942 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10222 [5], Q = \P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12941 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10222 [4], Q = \P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12940 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10222 [3], Q = \P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12939 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10222 [2], Q = \P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12938 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10222 [1], Q = \P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12937 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10222 [0], Q = \P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12936 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10098 [7], Q = \P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12935 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10098 [6], Q = \P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12934 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10098 [5], Q = \P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12933 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10098 [4], Q = \P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12932 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10098 [3], Q = \P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12931 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10098 [2], Q = \P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12930 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10098 [1], Q = \P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12929 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10098 [0], Q = \P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12928 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9974 [7], Q = \P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12927 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9974 [6], Q = \P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12926 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9974 [5], Q = \P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12925 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9974 [4], Q = \P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12924 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9974 [3], Q = \P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12923 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9974 [2], Q = \P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12922 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9974 [1], Q = \P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12921 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9974 [0], Q = \P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12920 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9850 [7], Q = \P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12919 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9850 [6], Q = \P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12918 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9850 [5], Q = \P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12917 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9850 [4], Q = \P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12916 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9850 [3], Q = \P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12915 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9850 [2], Q = \P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12914 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9850 [1], Q = \P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12913 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9850 [0], Q = \P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12912 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9726 [7], Q = \P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12911 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9726 [6], Q = \P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12910 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9726 [5], Q = \P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12909 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9726 [4], Q = \P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12908 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9726 [3], Q = \P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12907 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9726 [2], Q = \P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12906 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9726 [1], Q = \P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12905 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9726 [0], Q = \P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12904 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9602 [7], Q = \P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12903 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9602 [6], Q = \P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12902 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9602 [5], Q = \P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12901 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9602 [4], Q = \P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12900 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9602 [3], Q = \P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12899 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9602 [2], Q = \P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12898 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9602 [1], Q = \P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12897 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9602 [0], Q = \P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12896 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9478 [7], Q = \P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12895 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9478 [6], Q = \P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12894 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9478 [5], Q = \P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12893 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9478 [4], Q = \P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12892 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9478 [3], Q = \P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12891 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9478 [2], Q = \P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12890 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9478 [1], Q = \P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12889 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9478 [0], Q = \P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12888 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9354 [7], Q = \P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12887 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9354 [6], Q = \P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12886 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9354 [5], Q = \P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12885 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9354 [4], Q = \P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12884 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9354 [3], Q = \P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12883 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9354 [2], Q = \P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12882 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9354 [1], Q = \P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12881 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9354 [0], Q = \P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12880 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9230 [7], Q = \P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12879 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9230 [6], Q = \P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12878 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9230 [5], Q = \P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12877 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9230 [4], Q = \P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12876 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9230 [3], Q = \P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12875 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9230 [2], Q = \P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12874 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9230 [1], Q = \P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12873 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9230 [0], Q = \P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12872 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9106 [7], Q = \P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12871 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9106 [6], Q = \P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12870 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9106 [5], Q = \P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12869 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9106 [4], Q = \P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12868 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9106 [3], Q = \P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12867 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9106 [2], Q = \P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12866 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9106 [1], Q = \P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12865 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9106 [0], Q = \P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12864 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8982 [7], Q = \P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12863 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8982 [6], Q = \P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12862 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8982 [5], Q = \P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12861 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8982 [4], Q = \P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12860 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8982 [3], Q = \P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12859 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8982 [2], Q = \P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12858 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8982 [1], Q = \P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12857 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8982 [0], Q = \P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12856 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8858 [7], Q = \P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12855 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8858 [6], Q = \P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12854 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8858 [5], Q = \P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12853 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8858 [4], Q = \P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12852 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8858 [3], Q = \P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12851 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8858 [2], Q = \P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12850 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8858 [1], Q = \P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12849 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8858 [0], Q = \P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12848 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8163 [3], Q = \P1.State2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12847 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8163 [2], Q = \P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12846 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8163 [1], Q = \P1.State2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12845 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8163 [0], Q = \P1.State2 [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 7 unused cells and 3176 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~13221 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~53418 debug messages>
Removed a total of 17806 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$2986 ($_DFF_PP0_) from module b15 (D = \ByteEnable [3], Q = \BE_n [3]).
Adding EN signal on $auto$ff.cc:262:slice$3017 ($_DFF_PP0_) from module b15 (D = $verific$n398$9, Q = \W_R_n).
Adding EN signal on $auto$ff.cc:262:slice$3019 ($_DFF_PP0_) from module b15 (D = \MemoryFetch, Q = \M_IO_n).
Adding EN signal on $auto$ff.cc:262:slice$2984 ($_DFF_PP0_) from module b15 (D = \ByteEnable [1], Q = \BE_n [1]).
Adding EN signal on $auto$ff.cc:262:slice$2983 ($_DFF_PP0_) from module b15 (D = \ByteEnable [0], Q = \BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$2985 ($_DFF_PP0_) from module b15 (D = \ByteEnable [2], Q = \BE_n [2]).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 12 unused cells and 15505 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.27.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.34. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.27.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.27.37. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~2931 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 158 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~21 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$2161 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$6186
        $auto$simplemap.cc:278:simplemap_mux$5787

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$2462 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$2452
        $auto$simplemap.cc:312:simplemap_bmux$2449


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$54437 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [1], Q = \P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$54215 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [2], Q = \P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$53993 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [3], Q = \P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$53771 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [4], Q = \P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$53549 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [5], Q = \P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$53327 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [6], Q = \P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$53105 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [7], Q = \P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$52883 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [8], Q = \P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$52661 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [9], Q = \P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$52439 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [10], Q = \P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$52217 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [11], Q = \P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$51995 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [12], Q = \P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$51773 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [13], Q = \P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$51551 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [14], Q = \P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$51329 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [15], Q = \P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$51107 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [16], Q = \P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$50885 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [17], Q = \P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$50663 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [18], Q = \P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$50441 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [19], Q = \P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$50219 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [20], Q = \P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$49997 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [21], Q = \P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$49775 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [22], Q = \P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$49553 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [23], Q = \P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$49331 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [24], Q = \P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$49109 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [25], Q = \P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$48887 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [26], Q = \P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$48665 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [27], Q = \P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$48443 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [28], Q = \P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$48221 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [29], Q = \P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$47999 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [30], Q = \P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$47777 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8006 [31], Q = \P1.InstAddrPointer [31]).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 64 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~157 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~639 debug messages>
Removed a total of 213 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 216 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.30.26. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  585 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$78464, arst=\RESET, srst={ }
  8 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$78404, arst=\RESET, srst={ }
  411 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$67498, arst=\RESET, srst={ }
  894 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$67024, arst=\RESET, srst={ }
  38 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$66212, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$65460, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$64708, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$63956, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$63204, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$62452, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$61700, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$60948, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$60196, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$59444, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$58692, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$57940, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$57188, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$56436, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$55684, arst=\RESET, srst={ }
  38 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$54932, arst=\RESET, srst={ }
  48 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$54833, arst=\RESET, srst={ }
  91 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$47766, arst=\RESET, srst={ }
  12 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$47643, arst=\RESET, srst={ }
  203 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$44326, arst=\RESET, srst={ }
  49 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$44211, arst=\RESET, srst={ }
  102 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$39876, arst=\RESET, srst={ }
  10 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$39733, arst=\RESET, srst={ }
  25 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$39621, arst=\RESET, srst={ }
  55 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$39346, arst=\RESET, srst={ }
  248 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$37748, arst=\RESET, srst={ }
  190 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$34673, arst=\RESET, srst={ }
  584 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$31442, arst=\RESET, srst={ }
  28 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$31338, arst=\RESET, srst={ }
  198 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$26012, arst=\RESET, srst={ }
  13 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$25845, arst=\RESET, srst={ }
  14 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$25722, arst=\RESET, srst={ }
  31 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$25599, arst=\RESET, srst={ }
  41 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$24292, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$21815, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:194:make_patterns_logic$1135, arst=\RESET, srst={ }
  67 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$20095, arst=\RESET, srst={ }
  4 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$20048, arst=\RESET, srst={ }
  4 cells in clk=\CLOCK, en=$auto$opt_dff.cc:194:make_patterns_logic$20014, arst=\RESET, srst={ }
  88 cells in clk=\CLOCK, en=$auto$opt_dff.cc:194:make_patterns_logic$19960, arst=\RESET, srst={ }
  725 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$19952, arst=\RESET, srst={ }
  234 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$19722, arst=\RESET, srst={ }

3.31.2. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$78464, asynchronously reset by \RESET
Extracted 585 gates and 702 wires to a netlist network with 117 inputs and 97 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               XOR cells:       63
ABC RESULTS:              XNOR cells:       21
ABC RESULTS:               NOR cells:       10
ABC RESULTS:               NOT cells:        4
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:             ORNOT cells:       76
ABC RESULTS:               MUX cells:       41
ABC RESULTS:                OR cells:       42
ABC RESULTS:               AND cells:      188
ABC RESULTS:              NAND cells:      142
ABC RESULTS:        internal signals:      488
ABC RESULTS:           input signals:      117
ABC RESULTS:          output signals:       97
Removing temp directory.

3.31.3. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$78404, asynchronously reset by \RESET
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 7 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        6
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       11
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

3.31.4. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$67498, asynchronously reset by \RESET
Extracted 321 gates and 607 wires to a netlist network with 284 inputs and 168 outputs.

3.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:       31
ABC RESULTS:              NAND cells:       13
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               AND cells:       47
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:                OR cells:       15
ABC RESULTS:               XOR cells:       22
ABC RESULTS:               MUX cells:      126
ABC RESULTS:        internal signals:      155
ABC RESULTS:           input signals:      284
ABC RESULTS:          output signals:      168
Removing temp directory.

3.31.5. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$67024, asynchronously reset by \RESET
Extracted 859 gates and 1529 wires to a netlist network with 668 inputs and 314 outputs.

3.31.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:       50
ABC RESULTS:               NOR cells:       14
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               MUX cells:       84
ABC RESULTS:             ORNOT cells:       79
ABC RESULTS:               XOR cells:        1
ABC RESULTS:                OR cells:       43
ABC RESULTS:              NAND cells:      809
ABC RESULTS:               AND cells:      277
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:      547
ABC RESULTS:           input signals:      668
ABC RESULTS:          output signals:      314
Removing temp directory.

3.31.6. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$66212, asynchronously reset by \RESET
Extracted 38 gates and 70 wires to a netlist network with 32 inputs and 27 outputs.

3.31.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        2
ABC RESULTS:               AND cells:        4
ABC RESULTS:               MUX cells:       24
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       27
Removing temp directory.

3.31.7. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$65460, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.31.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.31.8. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$64708, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.31.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:       24
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       25
Removing temp directory.

3.31.9. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$63956, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.31.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.31.10. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$63204, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.31.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.10.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:       24
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       25
Removing temp directory.

3.31.11. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$62452, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.31.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.11.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.31.12. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$61700, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.31.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.12.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:       24
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       25
Removing temp directory.

3.31.13. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$60948, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.31.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.13.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.31.14. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$60196, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.31.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.14.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:       24
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       25
Removing temp directory.

3.31.15. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$59444, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.31.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.15.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.31.16. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$58692, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.31.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.16.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:       24
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       25
Removing temp directory.

3.31.17. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$57940, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.31.17.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.17.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.31.18. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$57188, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.31.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.18.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:       24
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       25
Removing temp directory.

3.31.19. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$56436, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.31.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.19.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.31.20. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$55684, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.31.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.20.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:       24
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       25
Removing temp directory.

3.31.21. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$54932, asynchronously reset by \RESET
Extracted 38 gates and 67 wires to a netlist network with 28 inputs and 34 outputs.

3.31.21.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.21.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOT cells:        7
ABC RESULTS:               AND cells:       14
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       34
Removing temp directory.

3.31.22. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$54833, asynchronously reset by \RESET
Extracted 48 gates and 78 wires to a netlist network with 29 inputs and 12 outputs.

3.31.22.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.22.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              NAND cells:        4
ABC RESULTS:                OR cells:        5
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               AND cells:        9
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       37
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       12
Removing temp directory.

3.31.23. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$47766, asynchronously reset by \RESET
Extracted 91 gates and 157 wires to a netlist network with 66 inputs and 6 outputs.

3.31.23.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.23.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       10
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               AND cells:       44
ABC RESULTS:              NAND cells:       23
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       85
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:        6
Removing temp directory.

3.31.24. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$47643, asynchronously reset by \RESET
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs.

3.31.24.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.24.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        6
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        5
Removing temp directory.

3.31.25. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$44326, asynchronously reset by \RESET
Extracted 203 gates and 243 wires to a netlist network with 40 inputs and 93 outputs.

3.31.25.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.25.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:       59
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               XOR cells:       55
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               BUF cells:       60
ABC RESULTS:        internal signals:      110
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:       93
Removing temp directory.

3.31.26. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80146$auto$opt_dff.cc:219:make_patterns_logic$44211, asynchronously reset by \RESET
Extracted 48 gates and 82 wires to a netlist network with 32 inputs and 23 outputs.

3.31.26.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.26.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        8
ABC RESULTS:               NOR cells:        3
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              NAND cells:        8
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:                OR cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               AND cells:       11
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       23
Removing temp directory.

3.31.27. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$39876, asynchronously reset by \RESET
Extracted 102 gates and 164 wires to a netlist network with 61 inputs and 33 outputs.

3.31.27.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.27.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       31
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        6
ABC RESULTS:               AND cells:        5
ABC RESULTS:              NAND cells:       78
ABC RESULTS:               BUF cells:       31
ABC RESULTS:        internal signals:       70
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       33
Removing temp directory.

3.31.28. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$39733, asynchronously reset by \RESET
Extracted 10 gates and 19 wires to a netlist network with 9 inputs and 3 outputs.

3.31.28.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.28.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        3
Removing temp directory.

3.31.29. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$39621, asynchronously reset by \RESET
Extracted 21 gates and 34 wires to a netlist network with 12 inputs and 16 outputs.

3.31.29.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.29.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        3
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               AND cells:        8
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       16
Removing temp directory.

3.31.30. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$39346, asynchronously reset by \RESET
Extracted 49 gates and 72 wires to a netlist network with 22 inputs and 34 outputs.

3.31.30.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.30.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:               XOR cells:        4
ABC RESULTS:              NAND cells:        2
ABC RESULTS:                OR cells:        5
ABC RESULTS:               AND cells:       20
ABC RESULTS:               BUF cells:        5
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       34
Removing temp directory.

3.31.31. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$37748, asynchronously reset by \RESET
Extracted 248 gates and 374 wires to a netlist network with 125 inputs and 63 outputs.

3.31.31.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.31.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:        6
ABC RESULTS:               NOR cells:       11
ABC RESULTS:               XOR cells:        2
ABC RESULTS:                OR cells:       19
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:               AND cells:       29
ABC RESULTS:             ORNOT cells:       24
ABC RESULTS:              NAND cells:       61
ABC RESULTS:               MUX cells:      100
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:      186
ABC RESULTS:           input signals:      125
ABC RESULTS:          output signals:       63
Removing temp directory.

3.31.32. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$34673, asynchronously reset by \RESET
Extracted 175 gates and 263 wires to a netlist network with 87 inputs and 26 outputs.

3.31.32.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.32.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               NOT cells:        8
ABC RESULTS:               NOR cells:       10
ABC RESULTS:             ORNOT cells:       13
ABC RESULTS:               XOR cells:        5
ABC RESULTS:               AND cells:       53
ABC RESULTS:              XNOR cells:       14
ABC RESULTS:                OR cells:        9
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:       81
ABC RESULTS:               BUF cells:       12
ABC RESULTS:        internal signals:      150
ABC RESULTS:           input signals:       87
ABC RESULTS:          output signals:       26
Removing temp directory.

3.31.33. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$31442, asynchronously reset by \RESET
Extracted 543 gates and 773 wires to a netlist network with 229 inputs and 131 outputs.

3.31.33.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.33.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOT cells:       31
ABC RESULTS:               NOR cells:        5
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               AND cells:       39
ABC RESULTS:                OR cells:       34
ABC RESULTS:              NAND cells:       51
ABC RESULTS:              XNOR cells:       31
ABC RESULTS:               XOR cells:        3
ABC RESULTS:               MUX cells:      158
ABC RESULTS:        internal signals:      413
ABC RESULTS:           input signals:      229
ABC RESULTS:          output signals:      131
Removing temp directory.

3.31.34. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$31338, asynchronously reset by \RESET
Extracted 28 gates and 50 wires to a netlist network with 21 inputs and 11 outputs.

3.31.34.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.34.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               NOR cells:        4
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               AND cells:        8
ABC RESULTS:                OR cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       11
Removing temp directory.

3.31.35. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26012, asynchronously reset by \RESET
Extracted 142 gates and 195 wires to a netlist network with 51 inputs and 75 outputs.

3.31.35.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.35.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               AND cells:       36
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               XOR cells:       33
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               BUF cells:       62
ABC RESULTS:        internal signals:       69
ABC RESULTS:           input signals:       51
ABC RESULTS:          output signals:       75
Removing temp directory.

3.31.36. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25845, asynchronously reset by \RESET
Extracted 13 gates and 22 wires to a netlist network with 9 inputs and 2 outputs.

3.31.36.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.36.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        2
Removing temp directory.

3.31.37. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25722, asynchronously reset by \RESET
Extracted 14 gates and 25 wires to a netlist network with 11 inputs and 5 outputs.

3.31.37.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.37.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        5
Removing temp directory.

3.31.38. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25599, asynchronously reset by \RESET
Extracted 31 gates and 49 wires to a netlist network with 17 inputs and 12 outputs.

3.31.38.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.38.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:               AND cells:        9
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       12
Removing temp directory.

3.31.39. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24292, asynchronously reset by \RESET
Extracted 41 gates and 82 wires to a netlist network with 41 inputs and 37 outputs.

3.31.39.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.39.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        4
ABC RESULTS:               MUX cells:       16
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       41
ABC RESULTS:          output signals:       37
Removing temp directory.

3.31.40. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$21815, asynchronously reset by \RESET
Extracted 36 gates and 65 wires to a netlist network with 29 inputs and 16 outputs.

3.31.40.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.40.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       15
ABC RESULTS:                OR cells:        3
ABC RESULTS:               NOR cells:        2
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:       30
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       16
Removing temp directory.

3.31.41. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1135, asynchronously reset by \RESET
Extracted 20 gates and 31 wires to a netlist network with 10 inputs and 6 outputs.

3.31.41.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.41.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:        6
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        6
Removing temp directory.

3.31.42. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$20095, asynchronously reset by \RESET
Extracted 63 gates and 128 wires to a netlist network with 65 inputs and 31 outputs.

3.31.42.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.42.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               AND cells:        3
ABC RESULTS:               MUX cells:       30
ABC RESULTS:               BUF cells:       30
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       31
Removing temp directory.

3.31.43. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$20048, asynchronously reset by \RESET
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 3 outputs.

3.31.43.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.43.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

3.31.44. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$20014, asynchronously reset by \RESET
Extracted 4 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.31.44.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.44.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

3.31.45. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19960, asynchronously reset by \RESET
Extracted 87 gates and 107 wires to a netlist network with 18 inputs and 22 outputs.

3.31.45.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.45.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:        6
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:               NOR cells:        5
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               AND cells:       19
ABC RESULTS:                OR cells:       13
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:       67
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       22
Removing temp directory.

3.31.46. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19952, asynchronously reset by \RESET
Extracted 709 gates and 1022 wires to a netlist network with 312 inputs and 334 outputs.

3.31.46.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.46.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:                OR cells:       56
ABC RESULTS:             ORNOT cells:       21
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:       44
ABC RESULTS:               NOT cells:        5
ABC RESULTS:              NAND cells:       58
ABC RESULTS:               XOR cells:        6
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               MUX cells:      427
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:      376
ABC RESULTS:           input signals:      312
ABC RESULTS:          output signals:      334
Removing temp directory.

3.31.47. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19722, asynchronously reset by \RESET
Extracted 234 gates and 338 wires to a netlist network with 104 inputs and 115 outputs.

3.31.47.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.47.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               XOR cells:        2
ABC RESULTS:                OR cells:       15
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:               NOT cells:       18
ABC RESULTS:              NAND cells:       47
ABC RESULTS:               MUX cells:       90
ABC RESULTS:              XNOR cells:        9
ABC RESULTS:               AND cells:       41
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:      119
ABC RESULTS:           input signals:      104
ABC RESULTS:          output signals:      115
Removing temp directory.

yosys> abc -script /tmp/yosys_Eny0qf/abc_tmp_1.scr

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Extracted 5096 gates and 5747 wires to a netlist network with 651 inputs and 670 outputs.

3.32.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_Eny0qf/abc_tmp_1.scr 
ABC:   #Luts =  1849  Max Lvl =  26  Avg Lvl =   7.34  [   0.31 sec. at Pass 0]
ABC:   #Luts =  1504  Max Lvl =  17  Avg Lvl =   5.21  [  16.11 sec. at Pass 1]
ABC:   #Luts =  1492  Max Lvl =  14  Avg Lvl =   4.89  [   2.88 sec. at Pass 2]
ABC:   #Luts =  1468  Max Lvl =  15  Avg Lvl =   5.04  [   7.33 sec. at Pass 3]
ABC:   #Luts =  1460  Max Lvl =  14  Avg Lvl =   4.61  [   2.65 sec. at Pass 4]
ABC:   #Luts =  1446  Max Lvl =  14  Avg Lvl =   4.86  [   9.74 sec. at Pass 5]
ABC:   #Luts =  1445  Max Lvl =  14  Avg Lvl =   4.84  [   3.67 sec. at Pass 6]
ABC:   #Luts =  1425  Max Lvl =  14  Avg Lvl =   4.59  [  10.66 sec. at Pass 7]
ABC:   #Luts =  1425  Max Lvl =  14  Avg Lvl =   4.59  [   3.26 sec. at Pass 8]
ABC:   #Luts =  1415  Max Lvl =  14  Avg Lvl =   4.56  [  12.39 sec. at Pass 9]
ABC:   #Luts =  1413  Max Lvl =  13  Avg Lvl =   4.77  [   3.79 sec. at Pass 10]
ABC:   #Luts =  1400  Max Lvl =  14  Avg Lvl =   4.66  [  12.85 sec. at Pass 11]
ABC:   #Luts =  1400  Max Lvl =  14  Avg Lvl =   4.66  [   3.33 sec. at Pass 12]
ABC:   #Luts =  1394  Max Lvl =  14  Avg Lvl =   4.73  [  12.21 sec. at Pass 13]
ABC:   #Luts =  1394  Max Lvl =  14  Avg Lvl =   4.73  [   3.22 sec. at Pass 14]
ABC:   #Luts =  1394  Max Lvl =  14  Avg Lvl =   4.73  [  13.05 sec. at Pass 15]
ABC:   #Luts =  1394  Max Lvl =  14  Avg Lvl =   4.73  [   3.59 sec. at Pass 16]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1394
ABC RESULTS:        internal signals:     4426
ABC RESULTS:           input signals:      651
ABC RESULTS:          output signals:      670
Removing temp directory.

yosys> opt

3.33. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.33.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 11013 unused wires.
<suppressed ~14 debug messages>

yosys> opt_expr

3.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.33.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.33.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.33.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.34. Printing statistics.

=== b15 ===

   Number of wires:               1425
   Number of wire bits:           2664
   Number of public wires:          37
   Number of public wire bits:     355
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2079
     $_DFFE_PP0P_                  415
     $lut                         1392
     $mux                            2
     adder_carry                   270


yosys> shregmap -minlen 8 -maxlen 20

3.35. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.37. Printing statistics.

=== b15 ===

   Number of wires:               1425
   Number of wire bits:           2664
   Number of public wires:          37
   Number of public wire bits:     355
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2079
     $_DFFE_PP0P_                  415
     $lut                         1392
     $mux                            2
     adder_carry                   270


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.38. Executing TECHMAP pass (map to technology primitives).

3.38.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.38.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.38.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2360 debug messages>

yosys> opt_expr -mux_undef

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~35528 debug messages>

yosys> simplemap

3.40. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~16074 debug messages>
Removed a total of 5358 cells.

yosys> opt_dff -nodffe -nosdff

3.43. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 5692 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~1369 debug messages>

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 455 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_Eny0qf/abc_tmp_2.scr

3.46. Executing ABC pass (technology mapping using ABC).

3.46.1. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Extracted 5267 gates and 5919 wires to a netlist network with 650 inputs and 664 outputs.

3.46.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_Eny0qf/abc_tmp_2.scr 
ABC:   #Luts =  1396  Max Lvl =  15  Avg Lvl =   5.12  [   0.29 sec. at Pass 0]
ABC:   #Luts =  1393  Max Lvl =  10  Avg Lvl =   4.55  [  17.89 sec. at Pass 1]
ABC:   #Luts =  1393  Max Lvl =  10  Avg Lvl =   4.55  [   3.29 sec. at Pass 2]
ABC:   #Luts =  1384  Max Lvl =  14  Avg Lvl =   4.96  [   8.28 sec. at Pass 3]
ABC:   #Luts =  1379  Max Lvl =  12  Avg Lvl =   4.66  [   3.37 sec. at Pass 4]
ABC:   #Luts =  1379  Max Lvl =  12  Avg Lvl =   4.66  [  18.34 sec. at Pass 5]
ABC:   #Luts =  1375  Max Lvl =  13  Avg Lvl =   4.62  [   4.51 sec. at Pass 6]
ABC:   #Luts =  1375  Max Lvl =  13  Avg Lvl =   4.62  [  16.73 sec. at Pass 7]
ABC:   #Luts =  1372  Max Lvl =  13  Avg Lvl =   4.58  [   4.34 sec. at Pass 8]
ABC:   #Luts =  1372  Max Lvl =  13  Avg Lvl =   4.58  [  15.78 sec. at Pass 9]
ABC:   #Luts =  1370  Max Lvl =  14  Avg Lvl =   4.65  [   4.51 sec. at Pass 10]
ABC:   #Luts =  1370  Max Lvl =  14  Avg Lvl =   4.65  [  19.02 sec. at Pass 11]
ABC:   #Luts =  1365  Max Lvl =  14  Avg Lvl =   4.76  [   4.83 sec. at Pass 12]
ABC:   #Luts =  1365  Max Lvl =  14  Avg Lvl =   4.76  [  14.37 sec. at Pass 13]
ABC:   #Luts =  1360  Max Lvl =  14  Avg Lvl =   4.61  [   4.26 sec. at Pass 14]
ABC:   #Luts =  1360  Max Lvl =  14  Avg Lvl =   4.61  [  12.21 sec. at Pass 15]
ABC:   #Luts =  1360  Max Lvl =  14  Avg Lvl =   4.61  [   5.17 sec. at Pass 16]
ABC:   #Luts =  1360  Max Lvl =  14  Avg Lvl =   4.61  [  14.92 sec. at Pass 17]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.46.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1360
ABC RESULTS:        internal signals:     4605
ABC RESULTS:           input signals:      650
ABC RESULTS:          output signals:      664
Removing temp directory.

yosys> opt

3.47. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.47.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.47.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.47.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 4718 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.47.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.47.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.47.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.47.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.47.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.47.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.47.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.48. Executing HIERARCHY pass (managing design hierarchy).

3.48.1. Analyzing design hierarchy..
Top module:  \b15

3.48.2. Analyzing design hierarchy..
Top module:  \b15
Removed 0 unused modules.

yosys> stat

3.49. Printing statistics.

=== b15 ===

   Number of wires:               1391
   Number of wire bits:           2630
   Number of public wires:          37
   Number of public wire bits:     355
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2045
     $lut                         1360
     adder_carry                   270
     dffsre                        415


yosys> opt_clean -purge

3.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.51. Executing Verilog backend.

yosys> bmuxmap

3.51.1. Executing BMUXMAP pass.

yosys> demuxmap

3.51.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b15'.

End of script. Logfile hash: b294067086, CPU: user 41.94s system 0.69s, MEM: 111.89 MB peak
Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)
Time spent: 98% 3x abc (2958 sec), 0% 56x opt_expr (14 sec), ...
real 352.45
user 2822.02
sys 176.52
