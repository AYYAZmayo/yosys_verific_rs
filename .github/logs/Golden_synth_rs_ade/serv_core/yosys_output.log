
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.13
 Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k serv_alu.v serv_bufreg.v serv_bufreg2.v serv_csr.v serv_ctrl.v serv_decode.v serv_immdec.v serv_mem_if.v serv_rf_if.v serv_rf_ram.v serv_rf_ram_if.v serv_rf_top.v serv_state.v serv_synth_wrapper.v serv_top.v

yosys> verific -vlog2k serv_alu.v serv_bufreg.v serv_bufreg2.v serv_csr.v serv_ctrl.v serv_decode.v serv_immdec.v serv_mem_if.v serv_rf_if.v serv_rf_ram.v serv_rf_ram_if.v serv_rf_top.v serv_state.v serv_synth_wrapper.v serv_top.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_alu.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_bufreg.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_bufreg2.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_csr.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_ctrl.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_decode.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_immdec.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_mem_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_ram.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_ram_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_state.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_synth_wrapper.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_top.v'

yosys> synth_rs -top serv_synth_wrapper -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.41

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top serv_synth_wrapper

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] serv_synth_wrapper.v:3: compiling module 'serv_synth_wrapper'
VERIFIC-INFO [VERI-1018] serv_rf_ram_if.v:2: compiling module 'serv_rf_ram_if(width=2)'
VERIFIC-WARNING [VERI-1209] serv_rf_ram_if.v:80: expression size 32 truncated to fit in target size 5
VERIFIC-INFO [VERI-1018] serv_top.v:3: compiling module 'serv_top'
VERIFIC-INFO [VERI-1018] serv_state.v:1: compiling module 'serv_state(WITH_CSR=1'b1,MDU=1'b0)'
VERIFIC-INFO [VERI-1018] serv_decode.v:2: compiling module 'serv_decode(PRE_REGISTER=1'b1,MDU=1'b0)'
VERIFIC-INFO [VERI-1018] serv_immdec.v:2: compiling module 'serv_immdec'
VERIFIC-INFO [VERI-1018] serv_bufreg.v:1: compiling module 'serv_bufreg(MDU=1'b0)'
VERIFIC-INFO [VERI-1018] serv_bufreg2.v:1: compiling module 'serv_bufreg2'
VERIFIC-WARNING [VERI-1209] serv_bufreg2.v:43: expression size 32 truncated to fit in target size 6
VERIFIC-INFO [VERI-1018] serv_ctrl.v:2: compiling module 'serv_ctrl'
VERIFIC-INFO [VERI-1018] serv_alu.v:2: compiling module 'serv_alu'
VERIFIC-INFO [VERI-1018] serv_rf_if.v:2: compiling module 'serv_rf_if'
VERIFIC-INFO [VERI-1018] serv_mem_if.v:2: compiling module 'serv_mem_if(WITH_CSR=1'b1)'
VERIFIC-INFO [VERI-1018] serv_csr.v:2: compiling module 'serv_csr'
Importing module serv_synth_wrapper.
Importing module serv_rf_ram_if(width=2).
Importing module serv_top.
Importing module serv_alu.
Importing module serv_bufreg(MDU=1'b0).
Importing module serv_bufreg2.
Importing module serv_csr.
Importing module serv_ctrl.
Importing module serv_decode(PRE_REGISTER=1'b1,MDU=1'b0).
Importing module serv_immdec.
Importing module serv_mem_if(WITH_CSR=1'b1).
Importing module serv_rf_if.
Importing module serv_state(WITH_CSR=1'b1,MDU=1'b0).

3.3.1. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper
Used module:     \serv_top
Used module:         \serv_csr
Used module:         \serv_mem_if(WITH_CSR=1'b1)
Used module:         \serv_rf_if
Used module:         \serv_alu
Used module:         \serv_ctrl
Used module:         \serv_bufreg2
Used module:         \serv_bufreg(MDU=1'b0)
Used module:         \serv_immdec
Used module:         \serv_decode(PRE_REGISTER=1'b1,MDU=1'b0)
Used module:         \serv_state(WITH_CSR=1'b1,MDU=1'b0)
Used module:     \serv_rf_ram_if(width=2)

3.3.2. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper
Used module:     \serv_top
Used module:         \serv_csr
Used module:         \serv_mem_if(WITH_CSR=1'b1)
Used module:         \serv_rf_if
Used module:         \serv_alu
Used module:         \serv_ctrl
Used module:         \serv_bufreg2
Used module:         \serv_bufreg(MDU=1'b0)
Used module:         \serv_immdec
Used module:         \serv_decode(PRE_REGISTER=1'b1,MDU=1'b0)
Used module:         \serv_state(WITH_CSR=1'b1,MDU=1'b0)
Used module:     \serv_rf_ram_if(width=2)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_state(WITH_CSR=1'b1,MDU=1'b0).
<suppressed ~1 debug messages>
Optimizing module serv_rf_if.
Optimizing module serv_mem_if(WITH_CSR=1'b1).
<suppressed ~2 debug messages>
Optimizing module serv_immdec.
Optimizing module serv_decode(PRE_REGISTER=1'b1,MDU=1'b0).
<suppressed ~6 debug messages>
Optimizing module serv_ctrl.
Optimizing module serv_csr.
<suppressed ~1 debug messages>
Optimizing module serv_bufreg2.
<suppressed ~1 debug messages>
Optimizing module serv_bufreg(MDU=1'b0).
Optimizing module serv_alu.
Optimizing module serv_top.
Optimizing module serv_rf_ram_if(width=2).
<suppressed ~1 debug messages>
Optimizing module serv_synth_wrapper.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module serv_state(WITH_CSR=1'b1,MDU=1'b0).
Deleting now unused module serv_rf_if.
Deleting now unused module serv_mem_if(WITH_CSR=1'b1).
Deleting now unused module serv_immdec.
Deleting now unused module serv_decode(PRE_REGISTER=1'b1,MDU=1'b0).
Deleting now unused module serv_ctrl.
Deleting now unused module serv_csr.
Deleting now unused module serv_bufreg2.
Deleting now unused module serv_bufreg(MDU=1'b0).
Deleting now unused module serv_alu.
Deleting now unused module serv_top.
Deleting now unused module serv_rf_ram_if(width=2).
<suppressed ~12 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 2 unused cells and 1026 unused wires.
<suppressed ~252 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module serv_synth_wrapper...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~9 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\rf_ram_if.$verific$wdata1_r_reg$serv_rf_ram_if.v:88$362 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\rf_ram_if.$verific$rdata0_reg$serv_rf_ram_if.v:146$389 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\rf_ram_if.$verific$rcnt_reg$serv_rf_ram_if.v:146$386 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\state.$verific$o_cnt_reg$serv_state.v:179$2087 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\state.$verific$o_cnt_r_reg$serv_state.v:179$2088 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm30_25_reg$serv_immdec.v:59$1729 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm24_20_reg$serv_immdec.v:59$1730 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm19_12_20_reg$serv_immdec.v:59$1727 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm11_7_reg$serv_immdec.v:59$1731 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\genblk1.csr.$verific$mcause3_0_reg$serv_csr.v:140$1255 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\decode.$verific$opcode_reg$serv_decode.v:248$1602 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\decode.$verific$funct3_reg$serv_decode.v:248$1599 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\ctrl.$verific$o_ibus_adr_reg$serv_ctrl.v:78$1322 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\bufreg2.$verific$dat_reg$serv_bufreg2.v:63$1113 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\bufreg.$verific$lsb_reg$serv_bufreg.v:44$1043 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\bufreg.$verific$data_reg$serv_bufreg.v:44$1042 ($aldff) from module serv_synth_wrapper.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\rf_ram_if.$verific$rreq_r_reg$serv_rf_ram_if.v:146$387 ($dff) from module serv_synth_wrapper (D = \rf_ram_if.i_rreq, Q = \rf_ram_if.rreq_r, rval = 1'0).
Adding SRST signal on $flatten\rf_ram_if.$verific$rgnt_reg$serv_rf_ram_if.v:146$388 ($dff) from module serv_synth_wrapper (D = \rf_ram_if.rreq_r, Q = \rf_ram_if.rgnt, rval = 1'0).
Adding EN signal on $flatten\rf_ram_if.$verific$rdata1_reg[0]$serv_rf_ram_if.v:122$372 ($dff) from module serv_synth_wrapper (D = \i_rdata [1], Q = \rf_ram_if.rdata1).
Adding SRST signal on $flatten\rf_ram_if.$verific$rdata0_reg$serv_rf_ram_if.v:146$389 ($dff) from module serv_synth_wrapper (D = \i_rdata [1], Q = \rf_ram_if.rdata0 [1], rval = 1'0).
Adding SRST signal on $flatten\rf_ram_if.$verific$rcnt_reg$serv_rf_ram_if.v:146$386 ($dff) from module serv_synth_wrapper (D = { $flatten\rf_ram_if.$verific$n108$326 [4:2] $flatten\rf_ram_if.$verific$n108$326 [0] }, Q = { \rf_ram_if.rcnt [4:2] \rf_ram_if.rcnt [0] }, rval = 4'0000).
Adding SRST signal on $flatten\rf_ram_if.$verific$rcnt_reg$serv_rf_ram_if.v:146$386 ($dff) from module serv_synth_wrapper (D = $flatten\rf_ram_if.$verific$n126$329 [1], Q = \rf_ram_if.rcnt [1], rval = 1'1).
Adding SRST signal on $flatten\cpu.\state.$verific$stage_two_req_reg$serv_state.v:179$2086 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n96$1956, Q = \cpu.state.stage_two_req, rval = 1'0).
Adding SRST signal on $flatten\cpu.\state.$verific$o_ctrl_jump_reg$serv_state.v:179$2084 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n92$1952, Q = \cpu.state.o_ctrl_jump, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2113 ($sdff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n89$1949, Q = \cpu.state.o_ctrl_jump).
Adding SRST signal on $flatten\cpu.\state.$verific$o_cnt_reg$serv_state.v:179$2087 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n103$1977, Q = \cpu.state.o_cnt, rval = 3'000).
Adding SRST signal on $flatten\cpu.\state.$verific$o_cnt_r_reg$serv_state.v:179$2088 ($dff) from module serv_synth_wrapper (D = { \cpu.state.o_cnt_r [2:0] $flatten\cpu.\state.$verific$n111$1961 }, Q = \cpu.state.o_cnt_r, rval = 4'0000).
Adding SRST signal on $flatten\cpu.\state.$verific$o_cnt_done_reg$serv_state.v:179$2085 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n94$1954, Q = \cpu.state.o_cnt_done, rval = 1'0).
Adding SRST signal on $flatten\cpu.\state.$verific$init_done_reg$serv_state.v:179$2083 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n91$1951, Q = \cpu.state.init_done, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2118 ($sdff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n87$1947, Q = \cpu.state.init_done).
Adding EN signal on $flatten\cpu.\state.$verific$ibus_cyc_reg$serv_state.v:179$2082 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\ctrl.$verific$n49$1277, Q = \cpu.state.ibus_cyc).
Adding SRST signal on $flatten\cpu.\state.$verific$genblk1.misalign_trap_sync_r_reg$serv_state.v:198$2100 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n167$1974, Q = \cpu.state.genblk1.misalign_trap_sync_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2121 ($sdff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n165$1972, Q = \cpu.state.genblk1.misalign_trap_sync_r).
Adding EN signal on $flatten\cpu.\mem_if.$verific$signbit_reg$serv_mem_if.v:56$1808 ($dff) from module serv_synth_wrapper (D = \cpu.mem_if.i_bufreg2_q, Q = \cpu.mem_if.signbit).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm7_reg$serv_immdec.v:59$1728 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n63$1663, Q = \cpu.immdec.imm7).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm31_reg$serv_immdec.v:59$1726 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [31], Q = \cpu.immdec.imm31).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm30_25_reg$serv_immdec.v:59$1729 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n70$1679, Q = \cpu.immdec.imm30_25).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm24_20_reg$serv_immdec.v:59$1730 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n93$1682, Q = \cpu.immdec.imm24_20).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm19_12_20_reg$serv_immdec.v:59$1727 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n32$1676, Q = \cpu.immdec.imm19_12_20).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm11_7_reg$serv_immdec.v:59$1731 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n113$1685, Q = \cpu.immdec.imm11_7).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$timer_irq_r_reg$serv_csr.v:140$1250 ($dff) from module serv_synth_wrapper (D = \cpu.genblk1.csr.timer_irq, Q = \cpu.genblk1.csr.timer_irq_r).
Adding SRST signal on $flatten\cpu.\genblk1.csr.$verific$o_new_irq_reg$serv_csr.v:140$1251 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n41$1146, Q = \cpu.genblk1.csr.o_new_irq, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2131 ($sdff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n38$1143, Q = \cpu.genblk1.csr.o_new_irq).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mstatus_mpie_reg$serv_csr.v:140$1254 ($dff) from module serv_synth_wrapper (D = \cpu.genblk1.csr.mstatus_mie, Q = \cpu.genblk1.csr.mstatus_mpie).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mstatus_mie_reg$serv_csr.v:140$1253 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n51$1156, Q = \cpu.genblk1.csr.mstatus_mie).
Adding SRST signal on $flatten\cpu.\genblk1.csr.$verific$mie_mtie_reg$serv_csr.v:140$1252 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n44$1149, Q = \cpu.genblk1.csr.mie_mtie, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2135 ($sdff) from module serv_synth_wrapper (D = \cpu.genblk1.csr.csr_in, Q = \cpu.genblk1.csr.mie_mtie).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mcause3_0_reg$serv_csr.v:140$1255 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n109$1175, Q = \cpu.genblk1.csr.mcause3_0).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mcause31_reg$serv_csr.v:140$1256 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n91$1168, Q = \cpu.genblk1.csr.mcause31).
Adding EN signal on $flatten\cpu.\decode.$verific$opcode_reg$serv_decode.v:248$1602 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [6:2], Q = \cpu.decode.opcode).
Adding EN signal on $flatten\cpu.\decode.$verific$op26_reg$serv_decode.v:248$1606 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [26], Q = \cpu.decode.op26).
Adding EN signal on $flatten\cpu.\decode.$verific$op22_reg$serv_decode.v:248$1605 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [22], Q = \cpu.decode.op22).
Adding EN signal on $flatten\cpu.\decode.$verific$op21_reg$serv_decode.v:248$1604 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [21], Q = \cpu.decode.op21).
Adding EN signal on $flatten\cpu.\decode.$verific$op20_reg$serv_decode.v:248$1603 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [20], Q = \cpu.decode.op20).
Adding EN signal on $flatten\cpu.\decode.$verific$imm30_reg$serv_decode.v:248$1600 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [30], Q = \cpu.decode.imm30).
Adding EN signal on $flatten\cpu.\decode.$verific$funct3_reg$serv_decode.v:248$1599 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [14:12], Q = \cpu.decode.funct3).
Adding EN signal on $flatten\cpu.\ctrl.$verific$o_ibus_adr_reg$serv_ctrl.v:78$1322 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\ctrl.$verific$n50$1282, Q = \cpu.ctrl.o_ibus_adr).
Adding SRST signal on $auto$ff.cc:262:slice$2146 ($dffe) from module serv_synth_wrapper (D = { \cpu.ctrl.new_pc \cpu.ctrl.o_ibus_adr [31:1] }, Q = \cpu.ctrl.o_ibus_adr, rval = 0).
Adding EN signal on $flatten\cpu.\bufreg2.$verific$dat_reg$serv_bufreg2.v:63$1113 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\bufreg2.$verific$n111$1074, Q = \cpu.bufreg2.dat).
Adding EN signal on $flatten\cpu.\bufreg.$verific$lsb_reg$serv_bufreg.v:44$1043 ($dff) from module serv_synth_wrapper (D = { $flatten\cpu.\bufreg.$verific$n89$1011 \cpu.bufreg.lsb [1] }, Q = \cpu.bufreg.lsb).
Adding EN signal on $flatten\cpu.\bufreg.$verific$data_reg$serv_bufreg.v:44$1042 ($dff) from module serv_synth_wrapper (D = { $flatten\cpu.\bufreg.$verific$n24$1008 \cpu.bufreg.data [29:1] }, Q = \cpu.bufreg.data).
Adding EN signal on $flatten\cpu.\alu.$verific$cmp_r_reg$serv_alu.v:66$996 ($dff) from module serv_synth_wrapper (D = \cpu.state.i_alu_cmp, Q = \cpu.alu.cmp_r).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 44 unused cells and 44 unused wires.
<suppressed ~45 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from mux cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$mux_53$serv_rf_ram_if.v:138$381 ($mux).
Removed top 3 bits (of 5) from mux cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$mux_46$serv_rf_ram_if.v:129$376 ($mux).
Removed top 4 bits (of 5) from port B of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374 ($add).
Removed top 1 bits (of 6) from port A of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
Removed top 4 bits (of 6) from port B of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
Removed top 1 bits (of 6) from port Y of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\genblk1.csr.$verific$equal_5$serv_csr.v:56$1184 ($eq).
Removed top 1 bits (of 2) from port A of cell serv_synth_wrapper.$flatten\cpu.\rf_if.$verific$or_36$serv_rf_if.v:115$1880 ($or).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964 ($add).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291 ($add).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308 ($add).
Removed top 1 bits (of 7) from port A of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
Removed top 6 bits (of 7) from port B of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
Removed top 26 bits (of 32) from mux cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$mux_14$serv_bufreg2.v:47$1091 ($mux).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$equal_23$serv_bufreg2.v:55$1101 ($eq).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028 ($add).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\decode.$verific$equal_183$serv_decode.v:222$1577 ($eq).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\decode.$verific$equal_192$serv_decode.v:227$1581 ($eq).
Removed top 2 bits (of 3) from port B of cell serv_synth_wrapper.$flatten\cpu.\state.$verific$equal_26$serv_state.v:78$2005 ($eq).
Removed top 2 bits (of 3) from port B of cell serv_synth_wrapper.$flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069 ($add).
Removed top 1 bits (of 7) from port Y of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
Removed top 1 bits (of 7) from wire serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$n11$1072.
Removed top 3 bits (of 5) from wire serv_synth_wrapper.$flatten\rf_ram_if.$verific$n126$329.
Removed top 4 bits (of 6) from wire serv_synth_wrapper.wreg1.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module serv_synth_wrapper:
  creating $macc model for $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964 ($add).
  creating $macc model for $flatten\cpu.\alu.$verific$add_13$serv_alu.v:36$967 ($add).
  creating $macc model for $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968 ($add).
  creating $macc model for $flatten\cpu.\alu.$verific$add_9$serv_alu.v:34$963 ($add).
  creating $macc model for $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028 ($add).
  creating $macc model for $flatten\cpu.\bufreg.$verific$add_9$serv_bufreg.v:33$1027 ($add).
  creating $macc model for $flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_23$serv_ctrl.v:61$1307 ($add).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308 ($add).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_6$serv_ctrl.v:49$1290 ($add).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291 ($add).
  creating $macc model for $flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069 ($add).
  creating $macc model for $flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374 ($add).
  creating $macc model for $flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
  merging $macc model for $flatten\cpu.\ctrl.$verific$add_6$serv_ctrl.v:49$1290 into $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291.
  merging $macc model for $flatten\cpu.\ctrl.$verific$add_23$serv_ctrl.v:61$1307 into $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308.
  merging $macc model for $flatten\cpu.\bufreg.$verific$add_9$serv_bufreg.v:33$1027 into $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028.
  merging $macc model for $flatten\cpu.\alu.$verific$add_13$serv_alu.v:36$967 into $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968.
  merging $macc model for $flatten\cpu.\alu.$verific$add_9$serv_alu.v:34$963 into $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964.
  creating $alu model for $macc $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308.
  creating $alu model for $macc $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291.
  creating $alu model for $macc $flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087.
  creating $alu model for $macc $flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069.
  creating $alu model for $macc $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028.
  creating $alu model for $macc $flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354.
  creating $alu model for $macc $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968.
  creating $alu model for $macc $flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374.
  creating $alu model for $macc $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964.
  creating $alu cell for $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964: $auto$alumacc.cc:485:replace_alu$2155
  creating $alu cell for $flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374: $auto$alumacc.cc:485:replace_alu$2158
  creating $alu cell for $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968: $auto$alumacc.cc:485:replace_alu$2161
  creating $alu cell for $flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354: $auto$alumacc.cc:485:replace_alu$2164
  creating $alu cell for $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028: $auto$alumacc.cc:485:replace_alu$2167
  creating $alu cell for $flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069: $auto$alumacc.cc:485:replace_alu$2170
  creating $alu cell for $flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087: $auto$alumacc.cc:485:replace_alu$2173
  creating $alu cell for $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291: $auto$alumacc.cc:485:replace_alu$2176
  creating $alu cell for $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308: $auto$alumacc.cc:485:replace_alu$2179
  created 9 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 5 unused cells and 9 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> stat

3.22. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                808
   Number of wire bits:           1912
   Number of public wires:         546
   Number of public wire bits:    1527
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                409
     $alu                            9
     $and                          155
     $dff                           10
     $dffe                          25
     $eq                            13
     $logic_not                     10
     $mux                           42
     $not                           39
     $or                            84
     $reduce_or                      4
     $sdff                           9
     $sdffce                         1
     $sdffe                          5
     $xor                            3


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$1d1e68f77481583066c6d429218f48ea9d5739b3\_90_alu for cells of type $alu.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$2292_Y
    new assignment: { } = { }.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$eae5c6d909a05153739c7821f34da2cbc0422532\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$172f2253883621b746ed3e405a5e271c8c312010\_80_rs_alu for cells of type $alu.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
No more expansions possible.
<suppressed ~1514 debug messages>

yosys> stat

3.24. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:               1129
   Number of wire bits:          11240
   Number of public wires:         546
   Number of public wire bits:    1527
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                906
     $_AND_                        221
     $_DFFE_PP_                    116
     $_DFF_P_                       11
     $_MUX_                        147
     $_NOT_                         90
     $_OR_                         168
     $_SDFFCE_PP0P_                 32
     $_SDFFE_PP0P_                   5
     $_SDFF_PN0_                     1
     $_SDFF_PP0_                    15
     $_SDFF_PP1_                     1
     $_XOR_                         96
     adder_carry                     3


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~170 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~114 debug messages>
Removed a total of 38 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 25 unused cells and 320 unused wires.
<suppressed ~30 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.25.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~11 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$2318 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$2468
        $auto$simplemap.cc:278:simplemap_mux$2474


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~3 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.28.26. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Summary of detected clock domains:
  5 cells in clk=\clk, en=$flatten\cpu.\state.$verific$n82$1943, arst={ }, srst={ }
  26 cells in clk=\clk, en=\cpu.state.o_cnt_done, arst={ }, srst=\i_rst
  6 cells in clk=\clk, en=\cpu.mem_if.dat_valid, arst={ }, srst={ }
  116 cells in clk=\clk, en=$flatten\cpu.\bufreg2.$verific$n110$1071, arst={ }, srst={ }
  3 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst={ }
  39 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n30$1660, arst={ }, srst={ }
  21 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n92$1671, arst={ }, srst={ }
  25 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n112$1673, arst={ }, srst={ }
  15 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n67$1667, arst={ }, srst={ }
  39 cells in clk=\clk, en=\cpu.bufreg.i_en, arst={ }, srst={ }
  13 cells in clk=\clk, en=\cpu.alu.i_en, arst={ }, srst={ }
  20 cells in clk=\clk, en=$flatten\cpu.\bufreg.$verific$n88$1010, arst={ }, srst={ }
  44 cells in clk=\clk, en=$flatten\cpu.\ctrl.$verific$n49$1277, arst={ }, srst=\i_rst
  4 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n62$1662, arst={ }, srst={ }
  110 cells in clk=\clk, en=\i_ibus_ack, arst={ }, srst={ }
  3 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n90$1167, arst={ }, srst={ }
  8 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n48$1153, arst={ }, srst={ }
  19 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n60$1162, arst={ }, srst={ }
  15 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n42$1147, arst={ }, srst=\i_rst
  8 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst=\i_rst
  3 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n45$1150, arst={ }, srst={ }
  11 cells in clk=\clk, en={ }, arst={ }, srst=\rf_ram_if.i_wreq
  1 cells in clk=\clk, en={ }, arst={ }, srst=!\rf_ram_if.rcnt [0]
  70 cells in clk=\clk, en={ }, arst={ }, srst={ }
  58 cells in clk=\clk, en={ }, arst={ }, srst=\i_rst
  1 cells in clk=\clk, en=\rf_ram_if.rtrig1, arst={ }, srst={ }
  33 cells in clk=\clk, en={ }, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$2109

3.29.2. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\state.$verific$n82$1943
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 3 outputs.

3.29.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.3. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.state.o_cnt_done, synchronously reset by \i_rst
Extracted 26 gates and 42 wires to a netlist network with 16 inputs and 9 outputs.

3.29.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:                OR cells:        2
ABC RESULTS:               AND cells:        9
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.4. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.mem_if.dat_valid
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.29.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.5. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\bufreg2.$verific$n110$1071
Extracted 116 gates and 161 wires to a netlist network with 45 inputs and 42 outputs.

3.29.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOT cells:        4
ABC RESULTS:               AND cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        4
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               XOR cells:        2
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               MUX cells:       38
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:       74
ABC RESULTS:           input signals:       45
ABC RESULTS:          output signals:       42
Removing temp directory.

3.29.6. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n35$1140
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.29.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.7. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n30$1660
Extracted 39 gates and 69 wires to a netlist network with 30 inputs and 10 outputs.

3.29.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 9 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               AND cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               MUX cells:       15
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       29
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.8. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n92$1671
Extracted 21 gates and 36 wires to a netlist network with 15 inputs and 8 outputs.

3.29.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 5 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:                OR cells:        2
ABC RESULTS:               MUX cells:        7
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.9. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n112$1673
Extracted 24 gates and 38 wires to a netlist network with 13 inputs and 9 outputs.

3.29.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 5 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:               AND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:                OR cells:        3
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.10. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n67$1667
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 2 outputs.

3.29.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 6 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.10.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        6
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               MUX cells:        6
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.11. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.bufreg.i_en
Extracted 39 gates and 49 wires to a netlist network with 10 inputs and 33 outputs.

3.29.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 30 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.11.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       30
ABC RESULTS:                OR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               BUF cells:       59
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:       33
Removing temp directory.

3.29.12. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.alu.i_en
Extracted 13 gates and 24 wires to a netlist network with 11 inputs and 4 outputs.

3.29.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.12.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.13. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\bufreg.$verific$n88$1010
Extracted 20 gates and 33 wires to a netlist network with 13 inputs and 11 outputs.

3.29.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 2 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.13.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:               AND cells:        7
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.14. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3452$flatten\cpu.\ctrl.$verific$n49$1277, synchronously reset by \i_rst
Extracted 44 gates and 54 wires to a netlist network with 10 inputs and 38 outputs.

3.29.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.14.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               BUF cells:       63
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:       38
Removing temp directory.

3.29.15. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n62$1662
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 2 outputs.

3.29.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.15.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.16. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \i_ibus_ack
Extracted 110 gates and 147 wires to a netlist network with 37 inputs and 72 outputs.

3.29.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 14 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.16.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       14
ABC RESULTS:               NOT cells:       12
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               MUX cells:        4
ABC RESULTS:               AND cells:       24
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:                OR cells:       14
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               NOR cells:        4
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:       38
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       72
Removing temp directory.

3.29.17. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n90$1167
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.29.17.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.17.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.18. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n48$1153
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 4 outputs.

3.29.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.18.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.19. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n60$1162
Extracted 19 gates and 32 wires to a netlist network with 13 inputs and 4 outputs.

3.29.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 4 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.19.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              NAND cells:        3
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.20. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n42$1147, synchronously reset by \i_rst
Extracted 15 gates and 29 wires to a netlist network with 14 inputs and 4 outputs.

3.29.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.20.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:              NAND cells:        9
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.21. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n35$1140, synchronously reset by \i_rst
Extracted 8 gates and 14 wires to a netlist network with 6 inputs and 6 outputs.

3.29.21.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.21.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.22. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n45$1150
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.29.22.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.22.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.23. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rf_ram_if.i_wreq
Extracted 11 gates and 21 wires to a netlist network with 9 inputs and 4 outputs.

3.29.23.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.23.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.24. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !\rf_ram_if.rcnt [0]
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.29.24.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.24.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.

3.29.25. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 70 gates and 115 wires to a netlist network with 45 inputs and 18 outputs.

3.29.25.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 11 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.25.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       11
ABC RESULTS:               XOR cells:        4
ABC RESULTS:               NOR cells:        3
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              NAND cells:       17
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:        9
ABC RESULTS:               AND cells:       25
ABC RESULTS:               BUF cells:        6
ABC RESULTS:        internal signals:       52
ABC RESULTS:           input signals:       45
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.26. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \i_rst
Extracted 55 gates and 69 wires to a netlist network with 14 inputs and 28 outputs.

3.29.26.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.26.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       11
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               NOT cells:        6
ABC RESULTS:               XOR cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               AND cells:       16
ABC RESULTS:                OR cells:        7
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       28
Removing temp directory.

3.29.27. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4176$lo00
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.29.27.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.27.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.

3.29.28. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $auto$opt_dff.cc:253:combine_resets$2109
Extracted 33 gates and 46 wires to a netlist network with 11 inputs and 16 outputs.

3.29.28.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.28.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               AND cells:        5
ABC RESULTS:                OR cells:        4
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               NOT cells:        3
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:       16
Removing temp directory.

yosys> abc -script abc_tmp.scr

3.30. Executing ABC pass (technology mapping using ABC).

3.30.1. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Extracted 488 gates and 672 wires to a netlist network with 184 inputs and 144 outputs.

3.30.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_10-05-2022T23-40-15/Golden_synth_rs_ade.json/serv_core/abc_tmp.scr 
ABC:   #Luts =   203  Max Lvl =  11  Avg Lvl =   2.69  [   0.09 sec. at Pass 0]
ABC:   #Luts =   201  Max Lvl =   9  Avg Lvl =   2.78  [   0.82 sec. at Pass 1]
ABC:   #Luts =   199  Max Lvl =   9  Avg Lvl =   2.49  [   0.24 sec. at Pass 2]
ABC:   #Luts =   199  Max Lvl =   9  Avg Lvl =   2.49  [   0.45 sec. at Pass 3]
ABC:   #Luts =   198  Max Lvl =   8  Avg Lvl =   2.53  [   0.35 sec. at Pass 4]
ABC:   #Luts =   196  Max Lvl =   8  Avg Lvl =   2.34  [   0.80 sec. at Pass 5]
ABC:   #Luts =   196  Max Lvl =   8  Avg Lvl =   2.34  [   0.33 sec. at Pass 6]
ABC:   #Luts =   195  Max Lvl =  10  Avg Lvl =   2.32  [   0.59 sec. at Pass 7]
ABC:   #Luts =   195  Max Lvl =   9  Avg Lvl =   2.29  [   0.51 sec. at Pass 8]
ABC:   #Luts =   194  Max Lvl =   8  Avg Lvl =   2.28  [   0.87 sec. at Pass 9]
ABC:   #Luts =   194  Max Lvl =   8  Avg Lvl =   2.28  [   0.43 sec. at Pass 10]
ABC:   #Luts =   194  Max Lvl =   8  Avg Lvl =   2.28  [   0.78 sec. at Pass 11]
ABC:   #Luts =   194  Max Lvl =   8  Avg Lvl =   2.28  [   0.59 sec. at Pass 12]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.30.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      194
ABC RESULTS:        internal signals:      344
ABC RESULTS:           input signals:      184
ABC RESULTS:          output signals:      144
Removing temp directory.

yosys> opt

3.31. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 2024 unused wires.
<suppressed ~347 debug messages>

yosys> opt_expr

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.31.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.31.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.32. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                425
   Number of wire bits:           1327
   Number of public wires:         196
   Number of public wire bits:    1091
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                378
     $_DFFE_PP_                    116
     $_DFF_P_                       11
     $_SDFFE_PP0P_                  37
     $_SDFF_PN0_                     1
     $_SDFF_PP0_                    16
     $lut                          193
     $mux                            1
     adder_carry                     3


yosys> shregmap -minlen 8 -maxlen 20

3.33. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.35. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                516
   Number of wire bits:           1418
   Number of public wires:         196
   Number of public wire bits:    1091
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                469
     $_DFFE_PP0P_                  116
     $_DFF_P_                       65
     $_MUX_                         91
     $lut                          193
     $mux                            1
     adder_carry                     3


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~627 debug messages>

yosys> opt_expr -mux_undef

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~3694 debug messages>

yosys> simplemap

3.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~723 debug messages>
Removed a total of 241 cells.

yosys> opt_dff -nodffe -nosdff

3.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 1327 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.43. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~45 debug messages>

yosys> opt_merge -nomux

3.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.43.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.43.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.43.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.43.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.43.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.44. Executing ABC pass (technology mapping using ABC).

3.44.1. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Extracted 681 gates and 900 wires to a netlist network with 217 inputs and 176 outputs.

3.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_10-05-2022T23-40-15/Golden_synth_rs_ade.json/serv_core/abc_tmp.scr 
ABC:   #Luts =   233  Max Lvl =   8  Avg Lvl =   2.74  [   0.06 sec. at Pass 0]
ABC:   #Luts =   233  Max Lvl =   8  Avg Lvl =   2.74  [   1.09 sec. at Pass 1]
ABC:   #Luts =   233  Max Lvl =   8  Avg Lvl =   2.74  [   0.26 sec. at Pass 2]
ABC:   #Luts =   233  Max Lvl =   8  Avg Lvl =   2.74  [   0.45 sec. at Pass 3]
ABC:   #Luts =   233  Max Lvl =   8  Avg Lvl =   2.74  [   0.34 sec. at Pass 4]
ABC:   #Luts =   233  Max Lvl =   8  Avg Lvl =   2.74  [   0.72 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      233
ABC RESULTS:        internal signals:      507
ABC RESULTS:           input signals:      217
ABC RESULTS:          output signals:      176
Removing temp directory.

yosys> opt

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 811 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper

3.46.2. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper
Removed 0 unused modules.

yosys> stat

3.47. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                458
   Number of wire bits:           1356
   Number of public wires:         188
   Number of public wire bits:    1079
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                417
     $lut                          233
     adder_carry                     3
     dffsre                        181


yosys> opt_clean -purge

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 145 unused wires.
<suppressed ~145 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.49. Executing Verilog backend.

yosys> bmuxmap

3.49.1. Executing BMUXMAP pass.

yosys> demuxmap

3.49.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\serv_synth_wrapper'.

Warnings: 7 unique messages, 8 total
End of script. Logfile hash: 19b597cc8d, CPU: user 3.13s system 0.13s, MEM: 28.78 MB peak
Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os)
Time spent: 96% 3x abc (89 sec), 1% 38x opt_expr (0 sec), ...
real 18.92
user 78.15
sys 14.71
