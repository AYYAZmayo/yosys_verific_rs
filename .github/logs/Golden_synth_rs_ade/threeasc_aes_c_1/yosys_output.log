
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.20
 Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl aes_lib.vhd dual_mem.vhd aes_enc.vhd aes_fsm_enc.vhd

yosys> verific -vhdl aes_lib.vhd dual_mem.vhd aes_enc.vhd aes_fsm_enc.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'aes_lib.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-INFO [VHDL-1014] aes_lib.vhd:11: analyzing package 'aes_lib'
VERIFIC-INFO [VHDL-1013] aes_lib.vhd:25: analyzing package body 'aes_lib'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'dual_mem.vhd'
VERIFIC-INFO [VHDL-1012] dual_mem.vhd:20: analyzing entity 'dual_mem'
VERIFIC-INFO [VHDL-1010] dual_mem.vhd:33: analyzing architecture 'rtl'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'aes_enc.vhd'
VERIFIC-INFO [VHDL-1012] aes_enc.vhd:24: analyzing entity 'aes_enc'
VERIFIC-INFO [VHDL-1010] aes_enc.vhd:36: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'aes_fsm_enc.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-INFO [VHDL-1012] aes_fsm_enc.vhd:26: analyzing entity 'aes_fsm_enc'
VERIFIC-INFO [VHDL-1010] aes_fsm_enc.vhd:37: analyzing architecture 'behavioral'

yosys> synth_rs -top aes_fsm_enc -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.44

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top aes_fsm_enc

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] aes_fsm_enc.vhd:26: processing 'aes_fsm_enc(Behavioral)'
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:98: 'key_data_1' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:133: 'key_data_1' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:136: 'count' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1613] aes_fsm_enc.vhd:183: incomplete sensitivity list specified; assuming completeness
VERIFIC-WARNING [VHDL-1840] aes_fsm_enc.vhd:183: latch inferred for net 'rst_cnt'
VERIFIC-INFO [VHDL-1067] aes_enc.vhd:24: processing 'aes_enc(Behavioral)'
VERIFIC-INFO [VHDL-1067] dual_mem.vhd:20: processing 'dual_mem(rtl)'
VERIFIC-INFO [VHDL-1754] dual_mem.vhd:36: extracting RAM for identifier 'RAM'
VERIFIC-INFO [VHDL-1067] dual_mem.vhd:20: processing 'dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl)'
VERIFIC-INFO [VHDL-1754] dual_mem.vhd:36: extracting RAM for identifier 'RAM'
Importing module aes_fsm_enc.
Importing module aes_enc(Behavioral).
Importing module dual_mem(rtl).
Importing module dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl).

3.3.1. Analyzing design hierarchy..
Top module:  \aes_fsm_enc
Used module:     \dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl)
Used module:     \aes_enc(Behavioral)
Used module:         \dual_mem(rtl)

3.3.2. Analyzing design hierarchy..
Top module:  \aes_fsm_enc
Used module:     \dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl)
Used module:     \aes_enc(Behavioral)
Used module:         \dual_mem(rtl)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl).
Optimizing module dual_mem(rtl).
Optimizing module aes_enc(Behavioral).
<suppressed ~4 debug messages>
Optimizing module aes_fsm_enc.
<suppressed ~5 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl).
Deleting now unused module dual_mem(rtl).
Deleting now unused module aes_enc(Behavioral).
<suppressed ~4 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~3 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 4 unused cells and 130 unused wires.
<suppressed ~66 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module aes_fsm_enc...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$state_reg$aes_fsm_enc.vhd:63$51 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $verific$count_reg$aes_fsm_enc.vhd:197$83 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\SUB_KEYS_DRAM.$verific$read_a_reg$dual_mem.vhd:52$295 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_2.$verific$read_dpra_reg$dual_mem.vhd:52$271 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_2.$verific$read_a_reg$dual_mem.vhd:52$270 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_1.$verific$read_dpra_reg$dual_mem.vhd:52$271 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_1.$verific$read_a_reg$dual_mem.vhd:52$270 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.$verific$sum_proc_1.reg_v_reg$aes_enc.vhd:88$194 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.$verific$sum_proc_1.key_reg_v_reg$aes_enc.vhd:88$195 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.$verific$key_reg_delayed_reg$aes_enc.vhd:122$246 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.$verific$gen_output.out_buffer_v_reg$aes_enc.vhd:133$250 ($aldff) from module aes_fsm_enc.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$count_reg$aes_fsm_enc.vhd:197$83 ($dff) from module aes_fsm_enc (D = $verific$n1680$42, Q = \count, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$303 ($sdff) from module aes_fsm_enc (D = $verific$n1675$41, Q = \count).
Adding SRST signal on $flatten\AES_ROUND_N.$verific$sum_proc_1.reg_v_reg$aes_enc.vhd:88$194 ($dff) from module aes_fsm_enc (D = $flatten\AES_ROUND_N.$verific$n736$113, Q = \AES_ROUND_N.sum_proc_1.reg_v, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$305 ($sdff) from module aes_fsm_enc (D = $flatten\AES_ROUND_N.$verific$n736$113, Q = \AES_ROUND_N.sum_proc_1.reg_v).
Adding SRST signal on $flatten\AES_ROUND_N.$verific$sum_proc_1.key_reg_v_reg$aes_enc.vhd:88$195 ($dff) from module aes_fsm_enc (D = $flatten\AES_ROUND_N.$verific$n1123$116, Q = \AES_ROUND_N.sum_proc_1.key_reg_v, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$309 ($sdff) from module aes_fsm_enc (D = $flatten\AES_ROUND_N.$verific$n1123$116, Q = \AES_ROUND_N.sum_proc_1.key_reg_v).
Adding EN signal on $flatten\AES_ROUND_N.$verific$gen_output.out_buffer_v_reg$aes_enc.vhd:133$250 ($dff) from module aes_fsm_enc (D = { \AES_ROUND_N.sub_tmp_key_3 \AES_ROUND_N.sub_tmp_key_2 \AES_ROUND_N.sub_tmp_key_1 \AES_ROUND_N.sub_tmp_key_0 \AES_ROUND_N.gen_output.out_buffer_v [127:32] }, Q = \AES_ROUND_N.gen_output.out_buffer_v).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~2 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from mux cell aes_fsm_enc.$verific$mux_303$aes_fsm_enc.vhd:140$63 ($mux).
Removed top 3 bits (of 4) from port A of cell aes_fsm_enc.$verific$equal_350$aes_fsm_enc.vhd:190$77 ($eq).
Removed top 3 bits (of 4) from port B of cell aes_fsm_enc.$verific$add_354$aes_fsm_enc.vhd:194$79 ($add).
Removed top 96 bits (of 128) from FF cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$key_reg_delayed_reg$aes_enc.vhd:122$246 ($dff).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_107$aes_lib.vhd:32$218 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_107$aes_lib.vhd:32$218 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_107$aes_lib.vhd:32$218 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_105$aes_lib.vhd:32$209 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_105$aes_lib.vhd:32$209 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_105$aes_lib.vhd:32$209 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_103$aes_lib.vhd:32$199 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_103$aes_lib.vhd:32$199 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_103$aes_lib.vhd:32$199 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_102$aes_lib.vhd:32$183 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_102$aes_lib.vhd:32$183 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_102$aes_lib.vhd:32$183 ($and).
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n1898$118.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n1925$121.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n2042$131.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n2159$141.
Removed top 1 bits (of 4) from wire aes_fsm_enc.$verific$n1132$30.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module aes_fsm_enc:
  creating $macc model for $verific$add_354$aes_fsm_enc.vhd:194$79 ($add).
  creating $alu model for $macc $verific$add_354$aes_fsm_enc.vhd:194$79.
  creating $alu cell for $verific$add_354$aes_fsm_enc.vhd:194$79: $auto$alumacc.cc:485:replace_alu$319
  created 1 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                108
   Number of wire bits:           3393
   Number of public wires:          72
   Number of public wire bits:    2564
   Number of memories:               3
   Number of memory bits:         5376
   Number of processes:              0
   Number of cells:                 69
     $adff                           1
     $alu                            1
     $bmux                           9
     $dff                            6
     $dffe                           1
     $dlatch                         1
     $eq                             2
     $memrd                          5
     $memwr                          3
     $mux                           11
     $reduce_bool                    1
     $sdffe                          3
     $xor                           25


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 6 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 10 unused cells and 16 unused wires.
<suppressed ~24 debug messages>

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                 92
   Number of wire bits:           2429
   Number of public wires:          59
   Number of public wire bits:    1984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 51
     $adff                           1
     $alu                            1
     $bmux                           8
     $dff                            1
     $dffe                           1
     $dlatch                         1
     $eq                             2
     $mux                            9
     $reduce_bool                    1
     $sdffe                          2
     $xor                           24


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> stat

3.24. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                 92
   Number of wire bits:           2429
   Number of public wires:          59
   Number of public wire bits:    1984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 51
     $adff                           1
     $alu                            1
     $bmux                           8
     $dff                            1
     $dffe                           1
     $dlatch                         1
     $eq                             2
     $mux                            9
     $reduce_bool                    1
     $sdffe                          2
     $xor                           24


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~346 debug messages>

yosys> stat

3.26. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                164
   Number of wire bits:           5680
   Number of public wires:          59
   Number of public wire bits:    1984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2899
     $_AND_                         10
     $_DFFE_PP_                    128
     $_DFF_PP0_                      4
     $_DFF_P_                       32
     $_DLATCH_P_                     1
     $_MUX_                       2365
     $_NOT_                          6
     $_OR_                          12
     $_SDFFE_PP0P_                 132
     $_XOR_                        209


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~1303 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~2850 debug messages>
Removed a total of 950 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 5 unused cells and 76 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~1 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~226 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$548 ($_DFF_PP0_) from module aes_fsm_enc (D = \next_state [0], Q = \state [0]).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 2 unused cells and 10 unused wires.
<suppressed ~5 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~3 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$656 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$654
        $auto$simplemap.cc:312:simplemap_bmux$653


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~1 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.30.26. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  35 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  128 cells in clk=\clk, en=\AES_ROUND_N.enc, arst={ }, srst={ }
  6 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$3387, arst=\rst, srst={ }
  257 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$307, arst={ }, srst=\rst
  32 cells in clk=\clk, en={ }, arst={ }, srst={ }
  20 cells in clk=\clk, en=!$auto$simplemap.cc:257:simplemap_eqne$2674, arst={ }, srst=\rst_cnt

3.31.2. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 34 gates and 41 wires to a netlist network with 5 inputs and 11 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               NOR cells:        3
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       25
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:       11
Removing temp directory.

3.31.3. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3403$AES_ROUND_N.enc
Extracted 128 gates and 160 wires to a netlist network with 32 inputs and 128 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 128 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      128
ABC RESULTS:               BUF cells:      256
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:      128
Removing temp directory.

3.31.4. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$3387, asynchronously reset by \rst
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 5 outputs.

3.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        5
Removing temp directory.

3.31.5. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$307, synchronously reset by \rst
Extracted 257 gates and 260 wires to a netlist network with 2 inputs and 33 outputs.

3.31.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.5.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        1
ABC RESULTS:              ZERO cells:       32
ABC RESULTS:        internal signals:      225
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:       33
Removing temp directory.

3.31.6. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 32 gates and 33 wires to a netlist network with 0 inputs and 32 outputs.

3.31.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              ZERO cells:        1
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:       32
Removing temp directory.

3.31.7. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$simplemap.cc:257:simplemap_eqne$2674, synchronously reset by \rst_cnt
Extracted 19 gates and 21 wires to a netlist network with 2 inputs and 2 outputs.

3.31.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               AND cells:        5
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

yosys> abc -dff

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Summary of detected clock domains:
  1 cells in clk=\clk, en={ }, arst={ }, srst={ }
  32 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  6 cells in clk=\clk, en=$abc$3826$auto$opt_dff.cc:194:make_patterns_logic$3387, arst=\rst, srst={ }
  132 cells in clk=\clk, en=$abc$3403$AES_ROUND_N.enc, arst={ }, srst={ }
  19 cells in clk=\clk, en=!$abc$3903$auto$simplemap.cc:257:simplemap_eqne$2674, arst={ }, srst=\rst_cnt

3.32.2. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.32.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              ZERO cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

3.32.3. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 31 gates and 37 wires to a netlist network with 6 inputs and 10 outputs.

3.32.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               AND cells:        6
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:       10
Removing temp directory.

3.32.4. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3826$auto$opt_dff.cc:194:make_patterns_logic$3387, asynchronously reset by \rst
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 5 outputs.

3.32.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        5
Removing temp directory.

3.32.5. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3403$AES_ROUND_N.enc
Extracted 132 gates and 137 wires to a netlist network with 5 inputs and 130 outputs.

3.32.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 128 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:              NAND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:      132
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:      130
Removing temp directory.

3.32.6. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$3903$auto$simplemap.cc:257:simplemap_eqne$2674, synchronously reset by \rst_cnt
Extracted 18 gates and 20 wires to a netlist network with 2 inputs and 2 outputs.

3.32.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               AND cells:        5
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  10 cells in clk=\clk, en=$abc$3956$abc$3826$auto$opt_dff.cc:194:make_patterns_logic$3387, arst=\rst, srst={ }
  27 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  1 cells in clk=\clk, en={ }, arst={ }, srst={ }
  8 cells in clk=\clk, en=$abc$3965$abc$3403$AES_ROUND_N.enc, arst={ }, srst={ }
  18 cells in clk=\clk, en=!$abc$4106$abc$3903$auto$simplemap.cc:257:simplemap_eqne$2674, arst={ }, srst=\rst_cnt

3.33.2. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3956$abc$3826$auto$opt_dff.cc:194:make_patterns_logic$3387, asynchronously reset by \rst
Extracted 9 gates and 15 wires to a netlist network with 6 inputs and 7 outputs.

3.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        7
Removing temp directory.

3.33.3. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 27 gates and 32 wires to a netlist network with 5 inputs and 10 outputs.

3.33.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               AND cells:        5
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:       10
Removing temp directory.

3.33.4. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.33.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              ZERO cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

3.33.5. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3965$abc$3403$AES_ROUND_N.enc
Extracted 8 gates and 13 wires to a netlist network with 5 inputs and 6 outputs.

3.33.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 4 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:              NAND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        6
Removing temp directory.

3.33.6. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$4106$abc$3903$auto$simplemap.cc:257:simplemap_eqne$2674, synchronously reset by \rst_cnt
Extracted 17 gates and 19 wires to a netlist network with 2 inputs and 2 outputs.

3.33.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               AND cells:        5
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

yosys> opt_ffinv

3.34. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $auto$opt_share.cc:241:merge_operators$3401.
    dead port 2/2 on $mux $auto$opt_share.cc:241:merge_operators$3401.
Removed 2 multiplexer ports.

yosys> opt_reduce

3.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$4165$auto$blifparse.cc:362:parse_blif$4166 ($_DFF_P_) from module aes_fsm_enc.

yosys> opt_clean

3.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 1 unused cells and 854 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

3.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.35.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$4169$auto$blifparse.cc:362:parse_blif$4172 ($_DFFE_PP_) from module aes_fsm_enc.

yosys> opt_clean

3.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.35.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.35.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$4169$auto$blifparse.cc:362:parse_blif$4173 ($_DFFE_PP_) from module aes_fsm_enc.

yosys> opt_clean

3.35.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.35.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.35.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.35.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$4169$auto$blifparse.cc:362:parse_blif$4170 ($_DFFE_PP_) from module aes_fsm_enc.

yosys> opt_clean

3.35.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.35.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.35.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.35.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$4169$auto$blifparse.cc:362:parse_blif$4171 ($_DFFE_PP_) from module aes_fsm_enc.

yosys> opt_clean

3.35.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 3 unused cells and 4 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.35.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.35.37. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.35.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.35.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.35.44. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  17 cells in clk=\clk, en=!$abc$3903$auto$simplemap.cc:257:simplemap_eqne$2674, arst={ }, srst=\rst_cnt
  28 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  9 cells in clk=\clk, en=$abc$3826$auto$opt_dff.cc:194:make_patterns_logic$3387, arst=\rst, srst={ }

3.36.2. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$3903$auto$simplemap.cc:257:simplemap_eqne$2674, synchronously reset by \rst_cnt
Extracted 16 gates and 19 wires to a netlist network with 3 inputs and 3 outputs.

3.36.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               AND cells:        4
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

3.36.3. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 28 gates and 32 wires to a netlist network with 4 inputs and 7 outputs.

3.36.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               AND cells:        5
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        7
Removing temp directory.

3.36.4. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3826$auto$opt_dff.cc:194:make_patterns_logic$3387, asynchronously reset by \rst
Extracted 9 gates and 16 wires to a netlist network with 7 inputs and 7 outputs.

3.36.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        7
Removing temp directory.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> abc -script /tmp/yosys_wguzkh/abc_tmp_1.scr

3.38. Executing ABC pass (technology mapping using ABC).

3.38.1. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Extracted 46 gates and 55 wires to a netlist network with 9 inputs and 13 outputs.

3.38.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_wguzkh/abc_tmp_1.scr 
ABC:   #Luts =    14  Max Lvl =   2  Avg Lvl =   1.15  [   0.05 sec. at Pass 0]
ABC:   #Luts =    14  Max Lvl =   2  Avg Lvl =   1.15  [   0.17 sec. at Pass 1]
ABC:   #Luts =    14  Max Lvl =   2  Avg Lvl =   1.15  [   0.08 sec. at Pass 2]
ABC:   #Luts =    14  Max Lvl =   2  Avg Lvl =   1.15  [   0.12 sec. at Pass 3]
ABC:   #Luts =    14  Max Lvl =   2  Avg Lvl =   1.15  [   0.08 sec. at Pass 4]
ABC:   #Luts =    14  Max Lvl =   2  Avg Lvl =   1.15  [   0.19 sec. at Pass 5]
ABC:   #Luts =    14  Max Lvl =   2  Avg Lvl =   1.15  [   0.19 sec. at Pass 6]
ABC:   #Luts =    14  Max Lvl =   2  Avg Lvl =   1.15  [   0.09 sec. at Pass 7]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.38.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       14
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       13
Removing temp directory.

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 122 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.40. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.41. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                 67
   Number of wire bits:           1974
   Number of public wires:          47
   Number of public wire bits:    1954
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 22
     $_DFFE_PP0P_                    1
     $_DFF_PP0_                      3
     $_DLATCH_P_                     1
     $_SDFFE_PP0N_                   3
     $_SDFFE_PP1N_                   1
     $lut                           13


yosys> shregmap -minlen 8 -maxlen 20

3.42. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.43. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.44. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                 75
   Number of wire bits:           1982
   Number of public wires:          47
   Number of public wire bits:    1954
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 30
     $_DFFE_PP0P_                    1
     $_DFF_PP0_                      3
     $_DFF_P_                        4
     $_DLATCHSR_PPP_                 1
     $_MUX_                          8
     $lut                           13


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.45. Executing TECHMAP pass (map to technology primitives).

3.45.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.45.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.45.3. Continuing TECHMAP pass.
Using template \$_DLATCHSR_PPP_ for cells of type $_DLATCHSR_PPP_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~164 debug messages>

yosys> opt_expr -mux_undef

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~181 debug messages>

yosys> simplemap

3.47. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 63 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.52. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.52.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.52.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.52.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.52.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.52.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_wguzkh/abc_tmp_2.scr

3.53. Executing ABC pass (technology mapping using ABC).

3.53.1. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Extracted 61 gates and 74 wires to a netlist network with 11 inputs and 13 outputs.

3.53.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_wguzkh/abc_tmp_2.scr 
ABC:   #Luts =    15  Max Lvl =   2  Avg Lvl =   1.31  [   0.05 sec. at Pass 0]
ABC:   #Luts =    15  Max Lvl =   2  Avg Lvl =   1.31  [   0.19 sec. at Pass 1]
ABC:   #Luts =    15  Max Lvl =   2  Avg Lvl =   1.31  [   0.07 sec. at Pass 2]
ABC:   #Luts =    15  Max Lvl =   2  Avg Lvl =   1.31  [   0.17 sec. at Pass 3]
ABC:   #Luts =    15  Max Lvl =   2  Avg Lvl =   1.31  [   0.09 sec. at Pass 4]
ABC:   #Luts =    15  Max Lvl =   2  Avg Lvl =   1.31  [   0.12 sec. at Pass 5]
ABC:   #Luts =    15  Max Lvl =   2  Avg Lvl =   1.31  [   0.15 sec. at Pass 6]
ABC:   #Luts =    15  Max Lvl =   2  Avg Lvl =   1.31  [   0.11 sec. at Pass 7]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.53.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       15
ABC RESULTS:        internal signals:       50
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:       13
Removing temp directory.

yosys> opt

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 58 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.55. Executing HIERARCHY pass (managing design hierarchy).

3.55.1. Analyzing design hierarchy..
Top module:  \aes_fsm_enc

3.55.2. Analyzing design hierarchy..
Top module:  \aes_fsm_enc
Removed 0 unused modules.

yosys> stat

3.56. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                 68
   Number of wire bits:           1975
   Number of public wires:          47
   Number of public wire bits:    1954
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $lut                           15
     dffsre                          8
     latchsre                        1


yosys> opt_clean -purge

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 38 unused wires.
<suppressed ~38 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.58. Executing Verilog backend.

yosys> bmuxmap

3.58.1. Executing BMUXMAP pass.

yosys> demuxmap

3.58.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\aes_fsm_enc'.

Warnings: 5 unique messages, 5 total
End of script. Logfile hash: 52dcec752a, CPU: user 3.01s system 0.08s, MEM: 38.07 MB peak
Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)
Time spent: 85% 6x abc (16 sec), 6% 27x opt_dff (1 sec), ...
real 6.86
user 14.25
sys 5.52
