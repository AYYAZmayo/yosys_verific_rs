
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl aes_lib.vhd dual_mem.vhd aes_enc.vhd aes_fsm_enc.vhd

yosys> verific -vhdl aes_lib.vhd dual_mem.vhd aes_enc.vhd aes_fsm_enc.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'aes_lib.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-INFO [VHDL-1014] aes_lib.vhd:11: analyzing package 'aes_lib'
VERIFIC-INFO [VHDL-1013] aes_lib.vhd:25: analyzing package body 'aes_lib'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'dual_mem.vhd'
VERIFIC-INFO [VHDL-1012] dual_mem.vhd:20: analyzing entity 'dual_mem'
VERIFIC-INFO [VHDL-1010] dual_mem.vhd:33: analyzing architecture 'rtl'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'aes_enc.vhd'
VERIFIC-INFO [VHDL-1012] aes_enc.vhd:24: analyzing entity 'aes_enc'
VERIFIC-INFO [VHDL-1010] aes_enc.vhd:36: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'aes_fsm_enc.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-INFO [VHDL-1012] aes_fsm_enc.vhd:26: analyzing entity 'aes_fsm_enc'
VERIFIC-INFO [VHDL-1010] aes_fsm_enc.vhd:37: analyzing architecture 'behavioral'

yosys> synth_rs -top aes_fsm_enc -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top aes_fsm_enc

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] aes_fsm_enc.vhd:26: processing 'aes_fsm_enc(Behavioral)'
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:98: 'key_data_1' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:133: 'key_data_1' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:136: 'count' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1613] aes_fsm_enc.vhd:183: incomplete sensitivity list specified; assuming completeness
VERIFIC-WARNING [VHDL-1840] aes_fsm_enc.vhd:183: latch inferred for net 'rst_cnt'
VERIFIC-INFO [VHDL-1067] aes_enc.vhd:24: processing 'aes_enc(Behavioral)'
VERIFIC-INFO [VHDL-1067] dual_mem.vhd:20: processing 'dual_mem(rtl)'
VERIFIC-INFO [VHDL-1754] dual_mem.vhd:36: extracting RAM for identifier 'RAM'
VERIFIC-INFO [VHDL-1067] dual_mem.vhd:20: processing 'dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl)'
VERIFIC-INFO [VHDL-1754] dual_mem.vhd:36: extracting RAM for identifier 'RAM'
Importing module aes_fsm_enc.
Importing module aes_enc(Behavioral).
Importing module dual_mem(rtl).
Importing module dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl).

3.3.1. Analyzing design hierarchy..
Top module:  \aes_fsm_enc
Used module:     \dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl)
Used module:     \aes_enc(Behavioral)
Used module:         \dual_mem(rtl)

3.3.2. Analyzing design hierarchy..
Top module:  \aes_fsm_enc
Used module:     \dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl)
Used module:     \aes_enc(Behavioral)
Used module:         \dual_mem(rtl)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl).
Optimizing module dual_mem(rtl).
Optimizing module aes_enc(Behavioral).
<suppressed ~4 debug messages>
Optimizing module aes_fsm_enc.
<suppressed ~5 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl).
Deleting now unused module dual_mem(rtl).
Deleting now unused module aes_enc(Behavioral).
<suppressed ~4 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~3 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 4 unused cells and 130 unused wires.
<suppressed ~66 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module aes_fsm_enc...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$state_reg$aes_fsm_enc.vhd:63$51 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $verific$count_reg$aes_fsm_enc.vhd:197$83 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\SUB_KEYS_DRAM.$verific$read_a_reg$dual_mem.vhd:52$295 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_2.$verific$read_dpra_reg$dual_mem.vhd:52$271 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_2.$verific$read_a_reg$dual_mem.vhd:52$270 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_1.$verific$read_dpra_reg$dual_mem.vhd:52$271 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_1.$verific$read_a_reg$dual_mem.vhd:52$270 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.$verific$sum_proc_1.reg_v_reg$aes_enc.vhd:88$194 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.$verific$sum_proc_1.key_reg_v_reg$aes_enc.vhd:88$195 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.$verific$key_reg_delayed_reg$aes_enc.vhd:122$246 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.$verific$gen_output.out_buffer_v_reg$aes_enc.vhd:133$250 ($aldff) from module aes_fsm_enc.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$count_reg$aes_fsm_enc.vhd:197$83 ($dff) from module aes_fsm_enc (D = $verific$n1680$42, Q = \count, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$303 ($sdff) from module aes_fsm_enc (D = $verific$n1675$41, Q = \count).
Adding SRST signal on $flatten\AES_ROUND_N.$verific$sum_proc_1.reg_v_reg$aes_enc.vhd:88$194 ($dff) from module aes_fsm_enc (D = $flatten\AES_ROUND_N.$verific$n736$113, Q = \AES_ROUND_N.sum_proc_1.reg_v, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$305 ($sdff) from module aes_fsm_enc (D = $flatten\AES_ROUND_N.$verific$n736$113, Q = \AES_ROUND_N.sum_proc_1.reg_v).
Adding SRST signal on $flatten\AES_ROUND_N.$verific$sum_proc_1.key_reg_v_reg$aes_enc.vhd:88$195 ($dff) from module aes_fsm_enc (D = $flatten\AES_ROUND_N.$verific$n1123$116, Q = \AES_ROUND_N.sum_proc_1.key_reg_v, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$309 ($sdff) from module aes_fsm_enc (D = $flatten\AES_ROUND_N.$verific$n1123$116, Q = \AES_ROUND_N.sum_proc_1.key_reg_v).
Adding EN signal on $flatten\AES_ROUND_N.$verific$gen_output.out_buffer_v_reg$aes_enc.vhd:133$250 ($dff) from module aes_fsm_enc (D = { \AES_ROUND_N.sub_tmp_key_3 \AES_ROUND_N.sub_tmp_key_2 \AES_ROUND_N.sub_tmp_key_1 \AES_ROUND_N.sub_tmp_key_0 \AES_ROUND_N.gen_output.out_buffer_v [127:32] }, Q = \AES_ROUND_N.gen_output.out_buffer_v).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~2 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from mux cell aes_fsm_enc.$verific$mux_303$aes_fsm_enc.vhd:140$63 ($mux).
Removed top 3 bits (of 4) from port A of cell aes_fsm_enc.$verific$equal_350$aes_fsm_enc.vhd:190$77 ($eq).
Removed top 3 bits (of 4) from port B of cell aes_fsm_enc.$verific$add_354$aes_fsm_enc.vhd:194$79 ($add).
Removed top 96 bits (of 128) from FF cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$key_reg_delayed_reg$aes_enc.vhd:122$246 ($dff).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_107$aes_lib.vhd:32$218 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_107$aes_lib.vhd:32$218 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_107$aes_lib.vhd:32$218 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_105$aes_lib.vhd:32$209 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_105$aes_lib.vhd:32$209 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_105$aes_lib.vhd:32$209 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_103$aes_lib.vhd:32$199 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_103$aes_lib.vhd:32$199 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_103$aes_lib.vhd:32$199 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_102$aes_lib.vhd:32$183 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_102$aes_lib.vhd:32$183 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_102$aes_lib.vhd:32$183 ($and).
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n1898$118.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n1925$121.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n2042$131.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n2159$141.
Removed top 1 bits (of 4) from wire aes_fsm_enc.$verific$n1132$30.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module aes_fsm_enc:
  creating $macc model for $verific$add_354$aes_fsm_enc.vhd:194$79 ($add).
  creating $alu model for $macc $verific$add_354$aes_fsm_enc.vhd:194$79.
  creating $alu cell for $verific$add_354$aes_fsm_enc.vhd:194$79: $auto$alumacc.cc:485:replace_alu$319
  created 1 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 6 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 10 unused cells and 16 unused wires.
<suppressed ~24 debug messages>

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> stat

3.22. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                 92
   Number of wire bits:           2429
   Number of public wires:          59
   Number of public wire bits:    1984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 51
     $adff                           1
     $alu                            1
     $bmux                           8
     $dff                            1
     $dffe                           1
     $dlatch                         1
     $eq                             2
     $mux                            9
     $reduce_bool                    1
     $sdffe                          2
     $xor                           24


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~346 debug messages>

yosys> stat

3.24. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                164
   Number of wire bits:           5680
   Number of public wires:          59
   Number of public wire bits:    1984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2899
     $_AND_                         10
     $_DFFE_PP_                    128
     $_DFF_PP0_                      4
     $_DFF_P_                       32
     $_DLATCH_P_                     1
     $_MUX_                       2365
     $_NOT_                          6
     $_OR_                          12
     $_SDFFE_PP0P_                 132
     $_XOR_                        209


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~1303 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~2850 debug messages>
Removed a total of 950 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 5 unused cells and 76 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~1 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.25.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~226 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$548 ($_DFF_PP0_) from module aes_fsm_enc (D = \next_state [0], Q = \state [0]).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 2 unused cells and 10 unused wires.
<suppressed ~5 debug messages>

3.26.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.26.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~3 debug messages>

yosys> opt_merge

3.26.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.26.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.26.10. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$656 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$654
        $auto$simplemap.cc:312:simplemap_bmux$653


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~1 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.28.26. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Extracted 180 gates and 320 wires to a netlist network with 138 inputs and 144 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/threeasc_aes_c_1/abc_tmp.scr 
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.03  [   0.07 sec. at Pass 0]
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.03  [   0.29 sec. at Pass 1]
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.03  [   0.10 sec. at Pass 2]
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.03  [   0.24 sec. at Pass 3]
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.03  [   0.28 sec. at Pass 4]
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.03  [   0.45 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      145
ABC RESULTS:        internal signals:       38
ABC RESULTS:           input signals:      138
ABC RESULTS:          output signals:      144
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 173 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                195
   Number of wire bits:           2120
   Number of public wires:          55
   Number of public wire bits:    1980
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                443
     $_DFFE_PP0P_                    1
     $_DFFE_PP_                    128
     $_DFF_PP0_                      3
     $_DFF_P_                       32
     $_DLATCH_P_                     1
     $_SDFFE_PP0N_                   4
     $_SDFFE_PP0P_                 128
     $lut                          145
     $mux                            1


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                459
   Number of wire bits:           2384
   Number of public wires:          55
   Number of public wire bits:    1980
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                707
     $_DFFE_PP0P_                  129
     $_DFF_PP0_                      3
     $_DFF_P_                      164
     $_DLATCHSR_PPP_                 1
     $_MUX_                        264
     $lut                          145
     $mux                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DLATCHSR_PPP_ for cells of type $_DLATCHSR_PPP_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~713 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~846 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~807 debug messages>
Removed a total of 269 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 1699 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.42.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Extracted 457 gates and 598 wires to a netlist network with 139 inputs and 142 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/threeasc_aes_c_1/abc_tmp.scr 
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.93  [   0.19 sec. at Pass 0]
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.93  [   1.36 sec. at Pass 1]
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.93  [   0.40 sec. at Pass 2]
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.93  [   0.50 sec. at Pass 3]
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.93  [   0.49 sec. at Pass 4]
ABC:   #Luts =   145  Max Lvl =   2  Avg Lvl =   1.93  [   0.63 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      145
ABC RESULTS:        internal signals:      317
ABC RESULTS:           input signals:      139
ABC RESULTS:          output signals:      142
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 583 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \aes_fsm_enc

3.45.2. Analyzing design hierarchy..
Top module:  \aes_fsm_enc
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                194
   Number of wire bits:           2119
   Number of public wires:          55
   Number of public wire bits:    1980
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                442
     $lut                          145
     dffsre                        296
     latchsre                        1


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 41 unused wires.
<suppressed ~41 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\aes_fsm_enc'.

Warnings: 5 unique messages, 5 total
End of script. Logfile hash: 589a750a14, CPU: user 5.11s system 0.05s, MEM: 35.61 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 79% 2x abc (20 sec), 8% 21x opt_dff (2 sec), ...
real 12.54
user 21.24
sys 4.15
