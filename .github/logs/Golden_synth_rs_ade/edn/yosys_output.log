
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.19
 Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv csrng_pkg.sv entropy_src_pkg.sv edn_reg_pkg.sv edn_pkg.sv entropy_src_pkg.sv prim_alert_pkg.sv prim_count_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv lc_ctrl_pkg.sv top_pkg.sv tlul_pkg.sv edn.sv edn_ack_sm.sv edn_core.sv edn_field_en.sv edn_main_sm.sv edn_reg_top.sv prim_alert_sender.sv prim_generic_buf.sv prim_arbiter_ppc.sv prim_buf.sv prim_count.sv prim_diff_decode.sv prim_fifo_sync.sv prim_flop.sv prim_flop_2sync.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_intr_hw.sv prim_lc_sync.sv prim_packer_fifo.sv prim_pulse_sync.sv prim_reg_cdc.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_secded_pkg.sv prim_sparse_fsm_flop.sv prim_subreg_ext.sv prim_subreg.sv prim_sync_reqack.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv prim_mubi4_sync.sv prim_mubi8_sync.sv prim_max_tree.sv prim_slicer.sv

yosys> verific -sv csrng_pkg.sv entropy_src_pkg.sv edn_reg_pkg.sv edn_pkg.sv entropy_src_pkg.sv prim_alert_pkg.sv prim_count_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv lc_ctrl_pkg.sv top_pkg.sv tlul_pkg.sv edn.sv edn_ack_sm.sv edn_core.sv edn_field_en.sv edn_main_sm.sv edn_reg_top.sv prim_alert_sender.sv prim_generic_buf.sv prim_arbiter_ppc.sv prim_buf.sv prim_count.sv prim_diff_decode.sv prim_fifo_sync.sv prim_flop.sv prim_flop_2sync.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_intr_hw.sv prim_lc_sync.sv prim_packer_fifo.sv prim_pulse_sync.sv prim_reg_cdc.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_secded_pkg.sv prim_sparse_fsm_flop.sv prim_subreg_ext.sv prim_subreg.sv prim_sync_reqack.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv prim_mubi4_sync.sv prim_mubi8_sync.sv prim_max_tree.sv prim_slicer.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'csrng_pkg.sv'
VERIFIC-WARNING [VERI-2418] csrng_pkg.sv:13: parameter 'GENBITS_BUS_WIDTH' declared inside package 'csrng_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] csrng_pkg.sv:31: parameter 'CSRNG_REQ_DEFAULT' declared inside package 'csrng_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] csrng_pkg.sv:32: parameter 'CSRNG_RSP_DEFAULT' declared inside package 'csrng_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'entropy_src_pkg.sv'
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:13: parameter 'RNG_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:14: parameter 'CSRNG_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:15: parameter 'FIPS_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:28: parameter 'ENTROPY_SRC_HW_IF_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:29: parameter 'ENTROPY_SRC_HW_IF_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:42: parameter 'ENTROPY_SRC_RNG_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:43: parameter 'ENTROPY_SRC_RNG_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:62: parameter 'ENTROPY_SRC_XHT_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:63: parameter 'ENTROPY_SRC_XHT_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:10: parameter 'NumAlerts' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:13: parameter 'BlockAw' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:224: parameter 'EDN_INTR_STATE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:225: parameter 'EDN_INTR_ENABLE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:226: parameter 'EDN_INTR_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:227: parameter 'EDN_ALERT_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:228: parameter 'EDN_REGWEN_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:229: parameter 'EDN_CTRL_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:230: parameter 'EDN_SUM_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:231: parameter 'EDN_BOOT_INS_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:232: parameter 'EDN_BOOT_GEN_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:233: parameter 'EDN_SW_CMD_REQ_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:234: parameter 'EDN_SW_CMD_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:235: parameter 'EDN_RESEED_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:236: parameter 'EDN_GENERATE_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:237: parameter 'EDN_MAX_NUM_REQS_BETWEEN_RESEEDS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:238: parameter 'EDN_RECOV_ALERT_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:239: parameter 'EDN_ERR_CODE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:240: parameter 'EDN_ERR_CODE_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:243: parameter 'EDN_INTR_TEST_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:244: parameter 'EDN_INTR_TEST_EDN_CMD_REQ_DONE_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:245: parameter 'EDN_INTR_TEST_EDN_FATAL_ERR_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:246: parameter 'EDN_ALERT_TEST_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:247: parameter 'EDN_ALERT_TEST_RECOV_ALERT_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:248: parameter 'EDN_ALERT_TEST_FATAL_ALERT_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:249: parameter 'EDN_SW_CMD_REQ_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:250: parameter 'EDN_RESEED_CMD_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:251: parameter 'EDN_GENERATE_CMD_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:275: parameter 'EDN_PERMIT' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:12: parameter 'ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:13: parameter 'FIPS_ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:26: parameter 'EDN_REQ_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:27: parameter 'EDN_RSP_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:30: parameter 'EDN_MODE_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'entropy_src_pkg.sv'
VERIFIC-WARNING [VERI-2171] entropy_src_pkg.sv:66: design element 'entropy_src_pkg' is previously defined; ignoring this definition
VERIFIC-INFO [VERI-2142] entropy_src_pkg.sv:66: previous definition of design element 'entropy_src_pkg' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_count_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'lc_ctrl_pkg.sv'
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:13: parameter 'A0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:14: parameter 'A1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:15: parameter 'A2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:16: parameter 'A3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:17: parameter 'A4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:18: parameter 'A5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:19: parameter 'A6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:20: parameter 'A7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:21: parameter 'A8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:22: parameter 'A9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:23: parameter 'A10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:24: parameter 'A11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:26: parameter 'B0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:27: parameter 'B1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:28: parameter 'B2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:29: parameter 'B3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:30: parameter 'B4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:31: parameter 'B5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:32: parameter 'B6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:33: parameter 'B7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:34: parameter 'B8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:35: parameter 'B9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:36: parameter 'B10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:37: parameter 'B11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:40: parameter 'C0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:41: parameter 'C1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:42: parameter 'C2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:43: parameter 'C3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:44: parameter 'C4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:45: parameter 'C5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:46: parameter 'C6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:47: parameter 'C7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:48: parameter 'C8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:49: parameter 'C9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:50: parameter 'C10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:51: parameter 'C11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:52: parameter 'C12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:53: parameter 'C13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:54: parameter 'C14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:55: parameter 'C15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:57: parameter 'D0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:58: parameter 'D1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:59: parameter 'D2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:60: parameter 'D3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:61: parameter 'D4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:62: parameter 'D5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:63: parameter 'D6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:64: parameter 'D7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:65: parameter 'D8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:66: parameter 'D9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:67: parameter 'D10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:68: parameter 'D11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:69: parameter 'D12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:70: parameter 'D13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:71: parameter 'D14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:72: parameter 'D15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:75: parameter 'E0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:76: parameter 'F0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:82: parameter 'LcValueWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:83: parameter 'LcTokenWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:84: parameter 'NumLcStateValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:85: parameter 'LcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:86: parameter 'NumLcCountValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:87: parameter 'LcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:88: parameter 'NumLcStates' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:89: parameter 'DecLcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:90: parameter 'DecLcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:91: parameter 'LcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:92: parameter 'DecLcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:172: parameter 'NumTokens' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:173: parameter 'TokenIdxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:191: parameter 'TxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:199: parameter 'LC_TX_DEFAULT' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:201: parameter 'RmaSeedWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:204: parameter 'LcKeymgrDivWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:263: parameter 'TransTokenIdxMatrix' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_ack_sm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_field_en.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_main_sm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_arbiter_ppc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_count.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_fifo_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop.sv'
VERIFIC-WARNING [VERI-1199] prim_flop.sv:30: parameter 'Impl' becomes localparam in 'prim_flop' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_intr_hw.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_lc_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_packer_fifo.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pulse_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sec_anchor_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2171] prim_secded_pkg.sv:1778: design element 'prim_secded_pkg' is previously defined; ignoring this definition
VERIFIC-INFO [VERI-2142] prim_secded_pkg.sv:1778: previous definition of design element 'prim_secded_pkg' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sparse_fsm_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi8_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_max_tree.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_slicer.sv'

yosys> synth_rs -top edn -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.44

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top edn

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-WARNING [VERI-1927] edn_core.sv:483: port 'depth' remains unconnected for this instance
VERIFIC-WARNING [VERI-1927] edn_core.sv:522: port 'depth' remains unconnected for this instance
VERIFIC-WARNING [VERI-1927] edn_core.sv:674: port 'req_chk_i' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] edn.sv:8: compiling module 'edn'
VERIFIC-INFO [VERI-1018] edn_reg_top.sv:8: compiling module 'edn_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:3: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=7)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:44: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VDB-1002] tlul_adapter_reg.sv:43: net 'malformed_meta_err' does not have a driver
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0)'
VERIFIC-INFO [VERI-1018] edn_core.sv:11: compiling module 'edn_core(NumEndPoints=8)'
VERIFIC-INFO [VERI-1018] prim_intr_hw.sv:10: compiling module 'prim_intr_hw'
VERIFIC-INFO [VERI-1018] prim_mubi4_sync.sv:13: compiling module 'prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-INFO [VERI-1018] prim_mubi4_sync.sv:13: compiling module 'prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0)'
VERIFIC-INFO [VERI-1018] prim_mubi4_sync.sv:13: compiling module 'prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0)'
VERIFIC-INFO [VERI-1018] prim_fifo_sync.sv:6: compiling module 'prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101)'
VERIFIC-INFO [VERI-2571] prim_fifo_sync.sv:112: extracting RAM for identifier 'storage'
VERIFIC-INFO [VERI-1018] edn_main_sm.sv:9: compiling module 'edn_main_sm'
VERIFIC-INFO [VERI-1018] prim_sparse_fsm_flop.sv:6: compiling module 'prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011)'
VERIFIC-INFO [VERI-1018] prim_flop.sv:16: compiling module 'prim_flop(Width=6,ResetValue=6'b111011)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(Width=6,ResetValue=6'b111011)'
VERIFIC-INFO [VERI-1018] prim_count.sv:36: compiling module 'prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf(Width=32)'
VERIFIC-WARNING [VERI-1330] prim_count.sv:98: actual bit length 32 differs from formal bit length 1 for port 'in_i'
VERIFIC-WARNING [VERI-1330] prim_count.sv:99: actual bit length 32 differs from formal bit length 1 for port 'out_o'
VERIFIC-INFO [VERI-1018] prim_flop.sv:16: compiling module 'prim_flop(Width=32,ResetValue=32'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(Width=32,ResetValue=32'b0)'
VERIFIC-WARNING [VERI-1209] edn_core.sv:606: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_mubi4_sync.sv:13: compiling module 'prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0)'
VERIFIC-INFO [VERI-1018] prim_arbiter_ppc.sv:26: compiling module 'prim_arbiter_ppc(N=32'b01000)'
VERIFIC-INFO [VERI-1018] prim_packer_fifo.sv:42: compiling module 'prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0)'
VERIFIC-WARNING [VERI-1209] prim_packer_fifo.sv:142: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] prim_packer_fifo.sv:146: expression size 2 truncated to fit in target size 1
VERIFIC-INFO [VERI-1018] prim_packer_fifo.sv:42: compiling module 'prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0)'
VERIFIC-WARNING [VERI-1209] prim_packer_fifo.sv:142: expression size 32 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] prim_packer_fifo.sv:146: expression size 4 truncated to fit in target size 3
VERIFIC-INFO [VERI-1018] edn_ack_sm.sv:8: compiling module 'edn_ack_sm'
VERIFIC-INFO [VERI-1018] prim_sparse_fsm_flop.sv:6: compiling module 'prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101)'
VERIFIC-INFO [VERI-1018] prim_flop.sv:16: compiling module 'prim_flop(Width=6,ResetValue=6'b101101)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(Width=6,ResetValue=6'b101101)'
VERIFIC-WARNING [VDB-1002] edn_core.sv:112: net 'sfifo_rescmd_depth[3]' does not have a driver
VERIFIC-WARNING [VDB-1002] edn_core.sv:120: net 'sfifo_rescmd_full' does not have a driver
VERIFIC-WARNING [VDB-1002] edn_core.sv:125: net 'sfifo_gencmd_depth[3]' does not have a driver
VERIFIC-WARNING [VDB-1002] edn_core.sv:132: net 'sfifo_gencmd_full' does not have a driver
VERIFIC-WARNING [VDB-1053] edn_core.sv:674: input port 'req_chk_i' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender(IsFatal=0)'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender(IsFatal=1)'
Importing module edn.
Importing module edn_core(NumEndPoints=8).
Importing module edn_ack_sm.
Importing module edn_main_sm.
Importing module edn_reg_top.
Importing module prim_alert_sender(IsFatal=0).
Importing module prim_alert_sender(IsFatal=1).
Importing module prim_arbiter_ppc(N=32'b01000).
Importing module prim_buf.
Importing module prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg).
Importing module prim_buf(Width=32).
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101).
Importing module prim_flop(Width=32,ResetValue=32'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop(Width=32,ResetValue=32'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module prim_intr_hw.
Importing module prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0).
Importing module prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0).
Importing module prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0).
Importing module prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0).
Importing module prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0).
Importing module prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0).
Importing module prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101).
Importing module prim_flop(Width=6,ResetValue=6'b101101).
Importing module prim_generic_flop(Width=6,ResetValue=6'b101101).
Importing module prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011).
Importing module prim_flop(Width=6,ResetValue=6'b111011).
Importing module prim_generic_flop(Width=6,ResetValue=6'b111011).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101).
Importing module prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0).
Importing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0).
Importing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01).
Importing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011).
Importing module prim_subreg_ext.
Importing module prim_subreg_ext(DW=32'b01).
Importing module tlul_adapter_reg(RegAw=7).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

3.3.1. Analyzing design hierarchy..
Top module:  \edn
Used module:     \prim_alert_sender(IsFatal=1)
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \prim_alert_sender(IsFatal=0)
Used module:     \edn_core(NumEndPoints=8)
Used module:         \edn_ack_sm
Used module:             \prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101)
Used module:                 \prim_flop(Width=6,ResetValue=6'b101101)
Used module:                     \prim_generic_flop(Width=6,ResetValue=6'b101101)
Used module:         \prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0)
Used module:         \prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0)
Used module:         \prim_arbiter_ppc(N=32'b01000)
Used module:         \prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0)
Used module:         \prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg)
Used module:             \prim_flop(Width=32,ResetValue=32'b0)
Used module:                 \prim_generic_flop(Width=32,ResetValue=32'b0)
Used module:             \prim_buf(Width=32)
Used module:         \edn_main_sm
Used module:             \prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011)
Used module:                 \prim_flop(Width=6,ResetValue=6'b111011)
Used module:                     \prim_generic_flop(Width=6,ResetValue=6'b111011)
Used module:         \prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101)
Used module:         \prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0)
Used module:         \prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0)
Used module:         \prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0)
Used module:         \prim_intr_hw
Used module:     \edn_reg_top
Used module:         \prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0)
Used module:         \prim_subreg_ext
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec

3.3.2. Analyzing design hierarchy..
Top module:  \edn
Used module:     \prim_alert_sender(IsFatal=1)
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \prim_alert_sender(IsFatal=0)
Used module:     \edn_core(NumEndPoints=8)
Used module:         \edn_ack_sm
Used module:             \prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101)
Used module:                 \prim_flop(Width=6,ResetValue=6'b101101)
Used module:                     \prim_generic_flop(Width=6,ResetValue=6'b101101)
Used module:         \prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0)
Used module:         \prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0)
Used module:         \prim_arbiter_ppc(N=32'b01000)
Used module:         \prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0)
Used module:         \prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg)
Used module:             \prim_flop(Width=32,ResetValue=32'b0)
Used module:                 \prim_generic_flop(Width=32,ResetValue=32'b0)
Used module:             \prim_buf(Width=32)
Used module:         \edn_main_sm
Used module:             \prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011)
Used module:                 \prim_flop(Width=6,ResetValue=6'b111011)
Used module:                     \prim_generic_flop(Width=6,ResetValue=6'b111011)
Used module:         \prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101)
Used module:         \prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0)
Used module:         \prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0)
Used module:         \prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0)
Used module:         \prim_intr_hw
Used module:     \edn_reg_top
Used module:         \prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0)
Used module:         \prim_subreg_ext
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=7).
<suppressed ~11 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg_ext.
Optimizing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_generic_flop(Width=6,ResetValue=6'b111011).
<suppressed ~2 debug messages>
Optimizing module prim_flop(Width=6,ResetValue=6'b111011).
Optimizing module prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011).
Optimizing module prim_generic_flop(Width=6,ResetValue=6'b101101).
<suppressed ~2 debug messages>
Optimizing module prim_flop(Width=6,ResetValue=6'b101101).
Optimizing module prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101).
Optimizing module prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0).
<suppressed ~9 debug messages>
Optimizing module prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0).
<suppressed ~5 debug messages>
Optimizing module prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0).
Optimizing module prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0).
Optimizing module prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0).
Optimizing module prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0).
Optimizing module prim_intr_hw.
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_flop(Width=32,ResetValue=32'b0).
<suppressed ~2 debug messages>
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_flop(Width=32,ResetValue=32'b0).
Optimizing module prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101).
<suppressed ~3 debug messages>
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf(Width=32).
Optimizing module prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg).
<suppressed ~4 debug messages>
Optimizing module prim_buf.
Optimizing module prim_arbiter_ppc(N=32'b01000).
<suppressed ~2 debug messages>
Optimizing module prim_alert_sender(IsFatal=1).
<suppressed ~7 debug messages>
Optimizing module prim_alert_sender(IsFatal=0).
<suppressed ~7 debug messages>
Optimizing module edn_reg_top.
<suppressed ~2 debug messages>
Optimizing module edn_main_sm.
Optimizing module edn_ack_sm.
Optimizing module edn_core(NumEndPoints=8).
<suppressed ~22 debug messages>
Optimizing module edn.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module tlul_rsp_intg_gen.
Deleting now unused module tlul_err.
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_adapter_reg(RegAw=7).
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_subreg_ext.
Deleting now unused module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011).
Deleting now unused module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01).
Deleting now unused module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0).
Deleting now unused module prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0).
Deleting now unused module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_generic_flop(Width=6,ResetValue=6'b111011).
Deleting now unused module prim_flop(Width=6,ResetValue=6'b111011).
Deleting now unused module prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011).
Deleting now unused module prim_generic_flop(Width=6,ResetValue=6'b101101).
Deleting now unused module prim_flop(Width=6,ResetValue=6'b101101).
Deleting now unused module prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101).
Deleting now unused module prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0).
Deleting now unused module prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0).
Deleting now unused module prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0).
Deleting now unused module prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0).
Deleting now unused module prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0).
Deleting now unused module prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0).
Deleting now unused module prim_intr_hw.
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_flop(Width=32,ResetValue=32'b0).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_flop(Width=32,ResetValue=32'b0).
Deleting now unused module prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101).
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_buf(Width=32).
Deleting now unused module prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg).
Deleting now unused module prim_buf.
Deleting now unused module prim_arbiter_ppc(N=32'b01000).
Deleting now unused module prim_alert_sender(IsFatal=1).
Deleting now unused module prim_alert_sender(IsFatal=0).
Deleting now unused module edn_reg_top.
Deleting now unused module edn_main_sm.
Deleting now unused module edn_ack_sm.
Deleting now unused module edn_core(NumEndPoints=8).
<suppressed ~258 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~49 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 281 unused cells and 8071 unused wires.
<suppressed ~1445 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module edn...
Warning: Wire edn.\u_reg.u_reg_if.malformed_meta_err is used but has no driver.
Warning: Wire edn.\u_edn_core.sfifo_gencmd_depth [3] is used but has no driver.
Warning: Wire edn.\u_edn_core.sfifo_gencmd_depth [2] is used but has no driver.
Warning: Wire edn.\u_edn_core.sfifo_gencmd_depth [1] is used but has no driver.
Warning: Wire edn.\u_edn_core.sfifo_gencmd_depth [0] is used but has no driver.
Warning: Wire edn.\u_edn_core.sfifo_rescmd_depth [3] is used but has no driver.
Warning: Wire edn.\u_edn_core.sfifo_rescmd_depth [2] is used but has no driver.
Warning: Wire edn.\u_edn_core.sfifo_rescmd_depth [1] is used but has no driver.
Warning: Wire edn.\u_edn_core.sfifo_rescmd_depth [0] is used but has no driver.
Warning: Wire edn.\u_edn_core.sfifo_gencmd_full is used but has no driver.
Warning: Wire edn.\u_edn_core.sfifo_rescmd_full is used but has no driver.
Found and reported 11 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~24 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~195 debug messages>
Removed a total of 65 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_reg.\u_recov_alert_sts_edn_bus_cmp_alert.$verific$i17$prim_subreg.sv:72$7654: \u_reg.u_recov_alert_sts_edn_bus_cmp_alert.wr_en -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~172 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_305$edn_reg_top.sv:1268$6212: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1563$4469 $flatten\u_reg.$verific$n1572$4478 $flatten\u_reg.$verific$n1575$4481 $flatten\u_reg.$verific$n1578$4484 $flatten\u_reg.$verific$n1581$4487 $flatten\u_reg.$verific$n1584$4490 $flatten\u_reg.$verific$n1590$4496 $flatten\u_reg.$verific$n1599$4505 $flatten\u_reg.$verific$n1602$4508 $flatten\u_reg.$verific$n1605$4511 $flatten\u_reg.$verific$n1608$4514 $flatten\u_reg.$verific$n1610$4516 }
  Optimizing cells in module \edn.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u_reg.\u_sw_cmd_sts_cmd_sts.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_sw_cmd_sts_cmd_rdy.$verific$q_reg[0]$prim_subreg.sv:72$7621 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$6324 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_sum_sts_req_mode_sm_sts.$verific$q_reg[0]$prim_subreg.sv:72$7638 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_sum_sts_boot_inst_ack.$verific$q_reg[0]$prim_subreg.sv:72$7638 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$7676 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6950 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6950 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$7882 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$7881 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$7880 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$7890 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$7870 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$7891 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_sts_edn_enable_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_sts_edn_bus_cmp_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_sts_cmd_fifo_rst_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_sts_boot_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_sts_auto_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$qe_reg$prim_subreg.sv:67$7748 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$6325 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_edn_fatal_err.$verific$q_reg[0]$prim_subreg.sv:72$7693 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_edn_cmd_req_done.$verific$q_reg[0]$prim_subreg.sv:72$7693 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_edn_fatal_err.$verific$q_reg[0]$prim_subreg.sv:72$7638 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_edn_cmd_req_done.$verific$q_reg[0]$prim_subreg.sv:72$7638 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_test.$verific$qe_reg$prim_subreg.sv:67$7729 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7733 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_sfifo_rescmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_sfifo_gencmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_fifo_write_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_fifo_state_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_fifo_read_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_edn_main_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_edn_cntr_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_edn_ack_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7714 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7714 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$6326 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$edn_reg_top.sv:61$4647 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6967 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6967 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_packer_fifo_cs.$verific$gen_unpack_mode.ptr_q_reg[0]$prim_packer_fifo.sv:128$7388 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_packer_fifo_cs.$verific$depth_q_reg[0]$prim_packer_fifo.sv:87$7382 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_packer_fifo_cs.$verific$data_q_reg$prim_packer_fifo.sv:87$7383 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_fifo_sync_rescmd.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$6829 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_fifo_sync_rescmd.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$6836 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_fifo_sync_gencmd.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$6829 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_fifo_sync_gencmd.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$6836 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.$verific$max_val_reg$prim_count.sv:82$6577 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.$verific$gen_cross_cnt_hardening.down_cnt_reg$prim_count.sv:127$6660 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_arbiter_ppc_packer_arb.$verific$gen_normal_case.mask_reg$prim_arbiter_ppc.sv:102$6511 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_intr_hw_edn_fatal_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$6987 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_intr_hw_edn_cmd_req_done.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$6987 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_edn_main_sm.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7584 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[7].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[7].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[7].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[6].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[6].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[6].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[5].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[5].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[5].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[4].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[4].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[4].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[3].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[3].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[3].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6759 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$6760 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$6761 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[2].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[2].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[2].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[1].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[1].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[1].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6950 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6950 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$clr_q_reg$prim_packer_fifo.sv:87$7466 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$sw_rdy_sts_q_reg$edn_core.sv:213$1470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$send_rescmd_q_reg$edn_core.sv:213$1461 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$send_gencmd_q_reg$edn_core.sv:213$1462 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$6432 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6967 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6967 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$6762 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6759 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$6760 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$6761 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$6323 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$6327 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$csrng_fips_q_reg$edn_core.sv:213$1463 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_rdata_capt_vld_q_reg$edn_core.sv:213$1469 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_rdata_capt_q_reg$edn_core.sv:213$1468 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_cmd_req_vld_q_reg$edn_core.sv:213$1457 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_cmd_req_vld_out_q_reg$edn_core.sv:213$1459 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_cmd_req_q_reg$edn_core.sv:213$1456 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cmd_fifo_cnt_q_reg$edn_core.sv:213$1460 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$boot_req_q_reg$edn_core.sv:213$1465 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$boot_auto_req_wack_q_reg$edn_core.sv:213$1466 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$boot_auto_req_dly_q_reg$edn_core.sv:213$1467 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6950 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6950 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6967 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6967 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6759 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$6760 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$6761 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6950 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6950 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6967 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6967 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$6762 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6759 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$6760 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$6761 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$6430 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$6434 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$6433 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$6431 ($aldff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 12 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 13 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 14 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 15 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 16 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 17 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 18 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 19 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 20 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 21 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 22 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 23 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6933 ($adff) from module edn.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 10 unused cells and 61 unused wires.
<suppressed ~17 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~171 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$7676 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_edn_fatal_err.$verific$q_reg[0]$prim_subreg.sv:72$7638 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_edn_cmd_req_done.$verific$q_reg[0]$prim_subreg.sv:72$7638 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7733 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7714 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7714 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($adff) from module edn (removing D path).
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 15 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 16 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 17 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 18 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 19 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 20 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 21 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 22 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 23 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7794 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7773 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7714 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7733 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7733 ($dlatch) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7733 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7733 ($dlatch) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7733 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_edn_cmd_req_done.$verific$q_reg[0]$prim_subreg.sv:72$7638 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_edn_fatal_err.$verific$q_reg[0]$prim_subreg.sv:72$7638 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7752 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$7676 ($dlatch) from module edn.

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~167 debug messages>

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i325$edn_core.sv:445$1828.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i325$edn_core.sv:445$1828.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i336$edn_core.sv:460$1838.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i336$edn_core.sv:460$1838.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i337$edn_core.sv:460$1839.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i337$edn_core.sv:460$1839.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i338$edn_core.sv:460$1840.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i338$edn_core.sv:460$1840.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i435$edn_core.sv:649$2197.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i435$edn_core.sv:649$2197.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i436$edn_core.sv:649$2198.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i436$edn_core.sv:649$2198.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i475$edn_core.sv:713$2753.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i475$edn_core.sv:713$2753.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i483$edn_core.sv:732$2760.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i483$edn_core.sv:732$2760.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i501$edn_core.sv:773$2939.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i501$edn_core.sv:773$2939.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i515$edn_core.sv:773$3120.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i515$edn_core.sv:773$3120.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i529$edn_core.sv:773$3301.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i529$edn_core.sv:773$3301.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i543$edn_core.sv:773$3482.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i543$edn_core.sv:773$3482.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i557$edn_core.sv:773$3663.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i557$edn_core.sv:773$3663.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i571$edn_core.sv:773$3844.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i571$edn_core.sv:773$3844.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i585$edn_core.sv:773$4025.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i585$edn_core.sv:773$4025.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i599$edn_core.sv:773$4210.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i599$edn_core.sv:773$4210.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_307$edn_core.sv:429$1815.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_307$edn_core.sv:429$1815.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_308$edn_core.sv:429$1816.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_308$edn_core.sv:429$1816.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_317$edn_core.sv:440$1822.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_317$edn_core.sv:440$1822.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_318$edn_core.sv:440$1823.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_318$edn_core.sv:440$1823.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_319$edn_core.sv:440$1824.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_319$edn_core.sv:440$1824.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_397$edn_core.sv:606$2147.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_397$edn_core.sv:606$2147.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_398$edn_core.sv:606$2148.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_398$edn_core.sv:606$2148.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_399$edn_core.sv:606$2149.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_399$edn_core.sv:606$2149.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_400$edn_core.sv:606$2150.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_400$edn_core.sv:606$2150.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4260.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4261.
    dead port 1/2 on $mux $flatten\u_edn_core.\u_prim_fifo_sync_gencmd.$verific$mux_64$prim_fifo_sync.sv:141$6847.
    dead port 2/2 on $mux $flatten\u_edn_core.\u_prim_fifo_sync_gencmd.$verific$mux_64$prim_fifo_sync.sv:141$6847.
    dead port 1/2 on $mux $flatten\u_edn_core.\u_prim_fifo_sync_rescmd.$verific$mux_64$prim_fifo_sync.sv:141$6847.
    dead port 2/2 on $mux $flatten\u_edn_core.\u_prim_fifo_sync_rescmd.$verific$mux_64$prim_fifo_sync.sv:141$6847.
Removed 102 multiplexer ports.
<suppressed ~136 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273: { $auto$opt_reduce.cc:134:opt_pmux$8868 $auto$opt_reduce.cc:134:opt_pmux$8866 $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$n60$4236 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273: { $auto$opt_reduce.cc:134:opt_pmux$8872 $auto$opt_reduce.cc:134:opt_pmux$8870 $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$n60$4236 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273: { $auto$opt_reduce.cc:134:opt_pmux$8876 $auto$opt_reduce.cc:134:opt_pmux$8874 $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$n60$4236 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273: { $auto$opt_reduce.cc:134:opt_pmux$8880 $auto$opt_reduce.cc:134:opt_pmux$8878 $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$n60$4236 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273: { $auto$opt_reduce.cc:134:opt_pmux$8884 $auto$opt_reduce.cc:134:opt_pmux$8882 $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$n60$4236 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273: { $auto$opt_reduce.cc:134:opt_pmux$8888 $auto$opt_reduce.cc:134:opt_pmux$8886 $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$n60$4236 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273: { $auto$opt_reduce.cc:134:opt_pmux$8892 $auto$opt_reduce.cc:134:opt_pmux$8890 $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$n60$4236 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273: { $auto$opt_reduce.cc:134:opt_pmux$8896 $auto$opt_reduce.cc:134:opt_pmux$8894 $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$n60$4236 }
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_305$edn_reg_top.sv:1268$6212: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1575$4481 $flatten\u_reg.$verific$n1578$4484 $auto$opt_reduce.cc:134:opt_pmux$8898 $flatten\u_reg.$verific$n1584$4490 $flatten\u_reg.$verific$n1590$4496 $flatten\u_reg.$verific$n1602$4508 $flatten\u_reg.$verific$n1605$4511 $flatten\u_reg.$verific$n1610$4516 }
  Optimizing cells in module \edn.
Performed a total of 9 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_dff -nodffe -nosdff

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_edn_core.$verific$boot_auto_req_dly_q_reg$edn_core.sv:213$1467 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.$verific$boot_req_q_reg$edn_core.sv:213$1465 ($adff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.$verific$boot_req_q_reg$edn_core.sv:213$1465 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.$verific$boot_req_q_reg$edn_core.sv:213$1465 ($adff) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_edn_core.$verific$boot_req_q_reg$edn_core.sv:213$1465 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 12 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 13 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 14 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 15 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 16 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 17 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 18 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 19 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 20 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 21 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 22 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 23 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$clr_q_reg$prim_packer_fifo.sv:87$7466 ($adff) from module edn.

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 117 unused cells and 317 unused wires.
<suppressed ~195 debug messages>

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~100 debug messages>

3.11.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_edn_core.\u_edn_main_sm.$verific$i32$edn_main_sm.sv:141$4342.
    dead port 2/2 on $mux $flatten\u_edn_core.\u_edn_main_sm.$verific$i32$edn_main_sm.sv:141$4342.
    dead port 1/2 on $mux $flatten\u_edn_core.\u_edn_main_sm.$verific$i34$edn_main_sm.sv:141$4344.
    dead port 2/2 on $mux $flatten\u_edn_core.\u_edn_main_sm.$verific$i34$edn_main_sm.sv:141$4344.
Removed 4 multiplexer ports.
<suppressed ~84 debug messages>

yosys> opt_reduce

3.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New ctrl vector for $pmux cell $flatten\u_edn_core.\u_edn_main_sm.$verific$select_28$edn_main_sm.sv:141$4339: { $flatten\u_edn_core.\u_edn_main_sm.$verific$n77$4283 $flatten\u_edn_core.\u_edn_main_sm.$verific$n78$4284 $flatten\u_edn_core.\u_edn_main_sm.$verific$n79$4285 $flatten\u_edn_core.\u_edn_main_sm.$verific$n81$4287 $auto$opt_reduce.cc:134:opt_pmux$8900 $flatten\u_edn_core.\u_edn_main_sm.$verific$n84$4290 }
  Optimizing cells in module \edn.
Performed a total of 1 changes.

yosys> opt_merge

3.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~135 debug messages>
Removed a total of 45 cells.

yosys> opt_dff -nodffe -nosdff

3.11.27. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_recov_alert_sts_edn_enable_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_recov_alert_sts_cmd_fifo_rst_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_recov_alert_sts_boot_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_recov_alert_sts_auto_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_sfifo_rescmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_sfifo_gencmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_fifo_write_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_fifo_state_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_fifo_read_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_edn_main_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_edn_ack_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($adff) from module edn (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_edn_ack_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 12 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 13 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 14 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 15 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 16 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 17 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 18 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 19 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 20 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 21 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 22 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 23 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 32 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 33 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 34 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 35 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 36 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 37 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 38 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 39 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 40 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 41 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 42 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 43 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 44 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 45 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 46 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 47 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 48 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 49 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 50 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 51 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 52 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 53 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 54 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 55 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 56 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 57 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 58 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 59 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 60 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 61 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 62 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 63 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 64 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 65 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 66 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 67 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 68 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 69 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 70 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 71 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 72 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 73 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 74 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 75 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 76 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 77 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 78 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 79 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 80 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 81 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 82 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 83 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 84 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 85 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 86 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 87 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 88 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 89 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 90 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 91 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 92 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 93 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 94 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 95 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 96 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 97 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 98 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 99 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 100 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 101 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 102 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 103 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 104 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 105 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 106 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 107 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 108 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 109 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 110 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 111 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 112 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 113 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 114 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 115 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 116 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 117 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 118 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 119 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 120 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 121 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 122 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 123 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 124 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 125 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 126 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 127 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7465 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($adff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7464 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.\u_prim_packer_fifo_cs.$verific$depth_q_reg[0]$prim_packer_fifo.sv:87$7382 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_edn_main_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_fifo_read_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_fifo_state_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_fifo_write_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_sfifo_gencmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_sfifo_rescmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_recov_alert_sts_auto_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_recov_alert_sts_boot_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_recov_alert_sts_cmd_fifo_rst_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_recov_alert_sts_edn_enable_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($dlatch) from module edn.

yosys> opt_clean

3.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 32 unused cells and 138 unused wires.
<suppressed ~84 debug messages>

yosys> opt_expr

3.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~1 debug messages>

3.11.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~82 debug messages>

yosys> opt_reduce

3.11.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.11.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.34. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_recov_alert_sts_edn_bus_cmp_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($adff) from module edn (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_recov_alert_sts_edn_bus_cmp_alert.$verific$q_reg[0]$prim_subreg.sv:72$7655 ($dlatch) from module edn.

yosys> opt_clean

3.11.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.11.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.11.37. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~82 debug messages>

yosys> opt_reduce

3.11.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_305$edn_reg_top.sv:1268$6212: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1575$4481 $flatten\u_reg.$verific$n1578$4484 $auto$opt_reduce.cc:134:opt_pmux$8898 $flatten\u_reg.$verific$n1584$4490 $flatten\u_reg.$verific$n1590$4496 $flatten\u_reg.$verific$n1605$4511 $flatten\u_reg.$verific$n1610$4516 }
  Optimizing cells in module \edn.
Performed a total of 1 changes.

yosys> opt_merge

3.11.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.11.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.11.44. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~82 debug messages>

yosys> opt_reduce

3.11.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.11.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.48. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.11.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.11.51. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking edn.u_edn_core.gen_ep_blk[0].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[1].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[2].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[3].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[4].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[5].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[6].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[7].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Found FSM state register edn.u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o.
Not marking edn.u_edn_core.u_prim_count_max_reqs_cntr.gen_cross_cnt_hardening.down_cnt as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking edn.u_edn_core.u_prim_count_max_reqs_cntr.max_val as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o' from module `\edn'.
  found $adff cell for state register: $flatten\u_edn_core.\u_edn_main_sm.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7584
  root of input selection tree: \u_edn_core.u_edn_main_sm.state_d
  found reset state: 6'111011 (from async reset)
  found ctrl input: \u_edn_core.edn_cntr_err_sum
  found ctrl input: $flatten\u_edn_core.\u_edn_main_sm.$verific$n84$4290
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$8900
  found ctrl input: $flatten\u_edn_core.\u_edn_main_sm.$verific$n81$4287
  found ctrl input: $flatten\u_edn_core.\u_edn_main_sm.$verific$n79$4285
  found ctrl input: $flatten\u_edn_core.\u_edn_main_sm.$verific$n78$4284
  found ctrl input: $flatten\u_edn_core.\u_edn_main_sm.$verific$n77$4283
  found state code: 6'000000
  found state code: 6'100101
  found state code: 6'000010
  found state code: 6'001001
  found ctrl input: \csrng_cmd_i.csrng_rsp_ack
  found state code: 6'011100
  found ctrl output: $flatten\u_edn_core.$verific$n1444$1326
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n77$4283
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n78$4284
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n79$4285
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n80$4286
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n81$4287
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n82$4288
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n83$4289
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$8900 \u_edn_core.edn_cntr_err_sum $flatten\u_edn_core.\u_edn_main_sm.$verific$n84$4290 \csrng_cmd_i.csrng_rsp_ack }
  ctrl outputs: { $flatten\u_edn_core.$verific$n1444$1326 \u_edn_core.u_edn_main_sm.state_d $flatten\u_edn_core.\u_edn_main_sm.$verific$n83$4289 $flatten\u_edn_core.\u_edn_main_sm.$verific$n82$4288 $flatten\u_edn_core.\u_edn_main_sm.$verific$n81$4287 $flatten\u_edn_core.\u_edn_main_sm.$verific$n80$4286 $flatten\u_edn_core.\u_edn_main_sm.$verific$n79$4285 $flatten\u_edn_core.\u_edn_main_sm.$verific$n78$4284 $flatten\u_edn_core.\u_edn_main_sm.$verific$n77$4283 }
  transition:   6'000000 4'00-- ->   6'100101 14'01001010000000
  transition:   6'000000 4'-1-- ->   6'100101 14'01001010000000
  transition:   6'011100 4'-0-- ->   6'111011 14'01110110000010
  transition:   6'011100 4'-1-- ->   6'100101 14'01001010000010
  transition:   6'000010 4'-0-- ->   6'000010 14'00000100100000
  transition:   6'000010 4'-1-- ->   6'100101 14'01001010100000
  transition:   6'001001 4'-0-- ->   6'001001 14'00010010001000
  transition:   6'001001 4'-1-- ->   6'100101 14'01001010001000
  transition:   6'100101 4'-0-- ->   6'100101 14'01001011000000
  transition:   6'100101 4'-1-- ->   6'100101 14'01001011000000
  transition:   6'111011 4'-0-- ->   6'111011 14'11110110000000
  transition:   6'111011 4'-1-- ->   6'100101 14'11001010000000

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$8901' from module `\edn'.
  Removing unreachable state 6'000000.
  Removing unreachable state 6'011100.
  Merging pattern 4'-0-- and 4'-1-- from group (2 2 14'01001011000000).
  Merging pattern 4'-1-- and 4'-0-- from group (2 2 14'01001011000000).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$8900.
  Removing unused input signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n84$4290.
  Removing unused input signal \csrng_cmd_i.csrng_rsp_ack.

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 15 unused cells and 19 unused wires.
<suppressed ~20 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$8901' from module `\edn'.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n77$4283.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n79$4285.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n80$4286.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n81$4287.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n82$4288.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n83$4289.
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [0].
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [1].
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [2].
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [3].
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [4].
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [5].

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$8901' from module `\edn' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000010 -> 01
  001001 -> 10
  100101 -> 11
  111011 -> 00

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$8901' from module `edn':
-------------------------------------

  Information on FSM $fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$8901 (\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o):

  Number of input signals:    1
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \u_edn_core.edn_cntr_err_sum

  Output signals:
    0: $flatten\u_edn_core.\u_edn_main_sm.$verific$n78$4284
    1: $flatten\u_edn_core.$verific$n1444$1326

  State encoding:
    0:       2'01
    1:       2'10
    2:       2'11
    3:       2'00  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 1'0   ->     0 2'00
      1:     0 1'1   ->     2 2'00
      2:     1 1'0   ->     1 2'00
      3:     1 1'1   ->     2 2'00
      4:     2 1'-   ->     2 2'00
      5:     3 1'1   ->     2 2'10
      6:     3 1'0   ->     3 2'10

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$8901' from module `\edn'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~81 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_sw_cmd_sts_cmd_sts.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($adff) from module edn (D = \csrng_cmd_i.csrng_rsp_sts, Q = \u_reg.u_sw_cmd_sts_cmd_sts.q).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$7882 ($adff) from module edn (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$7881 ($adff) from module edn (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$7880 ($adff) from module edn (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$7890 ($adff) from module edn (D = $flatten\u_reg.\u_reg_if.$verific$n182$7840, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$7870 ($adff) from module edn (D = $flatten\u_reg.\u_reg_if.$verific$n75$7820, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$7891 ($adff) from module edn (D = $flatten\u_reg.\u_reg_if.$verific$n248$7822, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_intr_state_edn_fatal_err.$verific$q_reg[0]$prim_subreg.sv:72$7693 ($adff) from module edn (D = \u_edn_core.hw2reg.intr_state.edn_fatal_err.d, Q = \u_reg.u_intr_state_edn_fatal_err.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_edn_cmd_req_done.$verific$q_reg[0]$prim_subreg.sv:72$7693 ($adff) from module edn (D = \u_edn_core.hw2reg.intr_state.edn_cmd_req_done.d, Q = \u_reg.u_intr_state_edn_cmd_req_done.q).
Adding EN signal on $flatten\u_reg.\u_err_code_edn_cntr_err.$verific$q_reg[0]$prim_subreg.sv:72$7600 ($adff) from module edn (D = 1'1, Q = \u_reg.u_err_code_edn_cntr_err.q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$edn_reg_top.sv:61$4647 ($adff) from module edn (D = 1'1, Q = \u_reg.intg_err_q).
Adding EN signal on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.$verific$max_val_reg$prim_count.sv:82$6577 ($adff) from module edn (D = 0, Q = \u_edn_core.u_prim_count_max_reqs_cntr.max_val).
Adding EN signal on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.$verific$gen_cross_cnt_hardening.down_cnt_reg$prim_count.sv:127$6660 ($adff) from module edn (D = 0, Q = \u_edn_core.u_prim_count_max_reqs_cntr.gen_cross_cnt_hardening.down_cnt).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[7].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[7].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[6].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[6].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[5].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[5].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[4].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[4].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[3].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[3].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[2].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[2].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[1].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[1].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7545 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[0].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[0].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$6326 ($adff) from module edn (D = 1'0, Q = \gen_alert_tx[0].u_prim_alert_sender.alert_set_q).
Adding EN signal on $auto$ff.cc:262:slice$8864 ($adff) from module edn (D = 1'0, Q = \u_edn_core.u_prim_count_max_reqs_cntr.gen_cnts[0].u_cnt_flop.gen_generic.u_impl_generic.q_o [0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$8975 ($adffe) from module edn.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$8974 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$8971 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$8971 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$8968 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$8968 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$8965 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$8965 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$8962 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$8962 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$8959 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$8959 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$8956 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$8956 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$8953 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$8953 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$8950 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$8950 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$8936 ($adffe) from module edn.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$8936 ($adffe) from module edn.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 17 unused cells and 37 unused wires.
<suppressed ~30 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~53 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4273.
Removed 8 multiplexer ports.
<suppressed ~59 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4270: { $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$n56$4232 $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$n59$4235 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4270: { $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$n59$4235 $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$n56$4232 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4270: { $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$n59$4235 $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$n56$4232 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4270: { $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$n59$4235 $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$n56$4232 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4270: { $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$n59$4235 $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$n56$4232 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4270: { $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$n59$4235 $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$n56$4232 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4270: { $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$n59$4235 $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$n56$4232 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4270: { $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$n59$4235 $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$n56$4232 }
  Optimizing cells in module \edn.
Performed a total of 8 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~57 debug messages>
Removed a total of 19 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$fsm_map.cc:172:map_fsm$8912 ($adff) from module edn.
Setting constant 0-bit at position 1 on $auto$fsm_map.cc:172:map_fsm$8912 ($adff) from module edn.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 56 unused cells and 113 unused wires.
<suppressed ~90 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~6 debug messages>

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_sum_sts_req_mode_sm_sts.$verific$q_reg[0]$prim_subreg.sv:72$7638 ($adff) from module edn.

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 4 unused cells and 10 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.13.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.13.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_305$edn_reg_top.sv:1268$6212: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1575$4481 $auto$opt_reduce.cc:134:opt_pmux$8898 $flatten\u_reg.$verific$n1584$4490 $flatten\u_reg.$verific$n1590$4496 $flatten\u_reg.$verific$n1605$4511 $flatten\u_reg.$verific$n1610$4516 }
  Optimizing cells in module \edn.
Performed a total of 1 changes.

yosys> opt_merge

3.13.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.13.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.13.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.13.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.13.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.34. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.13.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.13.37. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell edn.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$7850 ($eq).
Removed top 31 bits (of 32) from port A of cell edn.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$8498 ($shl).
Removed top 28 bits (of 32) from port Y of cell edn.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$8498 ($shl).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_53$edn_reg_top.sv:1076$6041 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_51$edn_reg_top.sv:1075$6040 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_49$edn_reg_top.sv:1074$6039 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_47$edn_reg_top.sv:1073$6038 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_45$edn_reg_top.sv:1072$6037 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_43$edn_reg_top.sv:1071$6036 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_41$edn_reg_top.sv:1070$6035 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_39$edn_reg_top.sv:1069$6034 ($eq).
Removed top 2 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_37$edn_reg_top.sv:1068$6033 ($eq).
Removed top 2 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_35$edn_reg_top.sv:1067$6032 ($eq).
Removed top 2 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_33$edn_reg_top.sv:1066$6031 ($eq).
Removed top 2 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_31$edn_reg_top.sv:1065$6030 ($eq).
Removed top 3 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_29$edn_reg_top.sv:1064$6029 ($eq).
Removed top 3 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_27$edn_reg_top.sv:1063$6028 ($eq).
Removed top 4 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_25$edn_reg_top.sv:1062$6027 ($eq).
Removed top 30 bits (of 31) from port A of cell edn.$flatten\u_edn_core.$verific$and_622$edn_core.sv:320$1577 ($and).
Removed top 8 bits (of 31) from port Y of cell edn.$flatten\u_edn_core.$verific$and_622$edn_core.sv:320$1577 ($and).
Removed top 8 bits (of 31) from port B of cell edn.$flatten\u_edn_core.$verific$and_622$edn_core.sv:320$1577 ($and).
Removed top 2 bits (of 4) from wire edn.$flatten\u_reg.$verific$n1003$4521.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 2 unused cells and 5 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module edn:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== edn ===

   Number of wires:               2721
   Number of wire bits:          13986
   Number of public wires:        2500
   Number of public wire bits:   13493
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                390
     $adff                          42
     $adffe                         11
     $and                           52
     $bmux                          26
     $eq                            18
     $logic_not                      2
     $mux                           61
     $ne                             2
     $not                           53
     $or                            64
     $reduce_and                     3
     $reduce_bool                    1
     $reduce_or                     14
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== edn ===

   Number of wires:               2721
   Number of wire bits:          13986
   Number of public wires:        2500
   Number of public wire bits:   13493
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                390
     $adff                          42
     $adffe                         11
     $and                           52
     $bmux                          26
     $eq                            18
     $logic_not                      2
     $mux                           61
     $ne                             2
     $not                           53
     $or                            64
     $reduce_and                     3
     $reduce_bool                    1
     $reduce_or                     14
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> stat

3.24. Printing statistics.

=== edn ===

   Number of wires:               2721
   Number of wire bits:          13986
   Number of public wires:        2500
   Number of public wire bits:   13493
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                390
     $adff                          42
     $adffe                         11
     $and                           52
     $bmux                          26
     $eq                            18
     $logic_not                      2
     $mux                           61
     $ne                             2
     $not                           53
     $or                            64
     $reduce_and                     3
     $reduce_bool                    1
     $reduce_or                     14
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $ne.
No more expansions possible.
<suppressed ~634 debug messages>

yosys> stat

3.26. Printing statistics.

=== edn ===

   Number of wires:               3040
   Number of wire bits:          17005
   Number of public wires:        2500
   Number of public wire bits:   13493
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1634
     $_AND_                         85
     $_DFFE_PN0P_                   50
     $_DFF_PN0_                     35
     $_DFF_PN1_                     15
     $_MUX_                        509
     $_NOT_                         81
     $_OR_                         191
     $_XOR_                        668


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~494 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~882 debug messages>
Removed a total of 294 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$11017 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[1].u_prim_alert_sender.state_d [2], Q = \gen_alert_tx[1].u_prim_alert_sender.state_q [2]).
Adding EN signal on $auto$ff.cc:262:slice$10825 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [2], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [2]).
Handling never-active EN on $auto$ff.cc:262:slice$9164 ($_DFFE_PN0P_) from module edn (removing D path).
Adding EN signal on $auto$ff.cc:262:slice$10823 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$11016 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[1].u_prim_alert_sender.state_d [1], Q = \gen_alert_tx[1].u_prim_alert_sender.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$11015 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[1].u_prim_alert_sender.state_d [0], Q = \gen_alert_tx[1].u_prim_alert_sender.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$10824 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9164 ($_DLATCH_N_) from module edn.

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 3 unused cells and 218 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~94 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~183 debug messages>
Removed a total of 61 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10758 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$10950 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ack.gen_async.state_d [1], Q = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ack.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$10759 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$11003 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ping.gen_async.state_d [0], Q = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$11004 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ping.gen_async.state_d [1], Q = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ping.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$10949 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ack.gen_async.state_d [0], Q = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ack.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$10813 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$10812 ($_DFF_PN0_) from module edn (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 96 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~67 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~180 debug messages>
Removed a total of 60 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 77 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~237 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:262:slice$9285 ($_DFFE_PN0P_) from module edn (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9285 ($_DLATCH_N_) from module edn.

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 242 unused cells and 213 unused wires.
<suppressed ~262 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~21 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10797 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$10781
        $auto$simplemap.cc:278:simplemap_mux$10777

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10802 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$10782
        $auto$simplemap.cc:278:simplemap_mux$10778

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10988 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$10972
        $auto$simplemap.cc:278:simplemap_mux$10968

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10993 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$10973
        $auto$simplemap.cc:278:simplemap_mux$10969


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~4 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.30.26. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$8941, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11769, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11649, arst=!\rst_ni, srst={ }
  23 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11569, arst=!\rst_ni, srst={ }
  23 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11529, arst=!\rst_ni, srst={ }
  28 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11238, arst=!\rst_ni, srst={ }
  25 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11262, arst=!\rst_ni, srst={ }
  35 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11313, arst=!\rst_ni, srst={ }
  38 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11255, arst=!\rst_ni, srst={ }
  76 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  23 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }

3.31.2. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$8941, asynchronously reset by !\rst_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        4
Removing temp directory.

3.31.3. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               XOR cells:       49
ABC RESULTS:              XNOR cells:      160
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:       13
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:      256
ABC RESULTS:           input signals:       90
ABC RESULTS:          output signals:        2
Removing temp directory.

3.31.4. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11769, asynchronously reset by !\rst_ni
Extracted 27 gates and 35 wires to a netlist network with 7 inputs and 6 outputs.

3.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               AND cells:        6
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        6
Removing temp directory.

3.31.5. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11649, asynchronously reset by !\rst_ni
Extracted 27 gates and 35 wires to a netlist network with 7 inputs and 6 outputs.

3.31.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               AND cells:        6
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        6
Removing temp directory.

3.31.6. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11569, asynchronously reset by !\rst_ni
Extracted 23 gates and 29 wires to a netlist network with 5 inputs and 3 outputs.

3.31.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               AND cells:        3
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        3
Removing temp directory.

3.31.7. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11529, asynchronously reset by !\rst_ni
Extracted 23 gates and 29 wires to a netlist network with 5 inputs and 3 outputs.

3.31.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        3
Removing temp directory.

3.31.8. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11238, asynchronously reset by !\rst_ni
Extracted 28 gates and 42 wires to a netlist network with 12 inputs and 17 outputs.

3.31.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:              NAND cells:        2
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:               NOT cells:        4
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       17
Removing temp directory.

3.31.9. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11262, asynchronously reset by !\rst_ni
Extracted 25 gates and 38 wires to a netlist network with 11 inputs and 17 outputs.

3.31.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:               MUX cells:        2
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        5
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:       17
Removing temp directory.

3.31.10. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11313, asynchronously reset by !\rst_ni
Extracted 35 gates and 55 wires to a netlist network with 18 inputs and 11 outputs.

3.31.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.10.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       10
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               AND cells:       10
ABC RESULTS:               NOR cells:        2
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       11
Removing temp directory.

3.31.11. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11255, asynchronously reset by !\rst_ni
Extracted 38 gates and 58 wires to a netlist network with 18 inputs and 12 outputs.

3.31.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.11.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:                OR cells:        4
ABC RESULTS:               AND cells:        5
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:               MUX cells:        9
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       28
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       12
Removing temp directory.

3.31.12. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 76 gates and 105 wires to a netlist network with 28 inputs and 35 outputs.

3.31.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.12.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       33
ABC RESULTS:               NOT cells:       12
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        8
ABC RESULTS:                OR cells:       12
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               AND cells:       13
ABC RESULTS:               BUF cells:       28
ABC RESULTS:        internal signals:       42
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       35
Removing temp directory.

3.31.13. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11891$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 23 gates and 38 wires to a netlist network with 14 inputs and 16 outputs.

3.31.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.13.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       12
ABC RESULTS:               NOT cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:       22
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       16
Removing temp directory.

yosys> abc -script /tmp/yosys_lLokhA/abc_tmp_1.scr

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Extracted 465 gates and 609 wires to a netlist network with 144 inputs and 53 outputs.

3.32.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_lLokhA/abc_tmp_1.scr 
ABC:   #Luts =   131  Max Lvl =  11  Avg Lvl =   2.64  [   0.21 sec. at Pass 0]
ABC:   #Luts =   115  Max Lvl =  12  Avg Lvl =   2.77  [   3.20 sec. at Pass 1]
ABC:   #Luts =   110  Max Lvl =   9  Avg Lvl =   2.43  [   0.74 sec. at Pass 2]
ABC:   #Luts =   110  Max Lvl =   9  Avg Lvl =   2.43  [   1.61 sec. at Pass 3]
ABC:   #Luts =   109  Max Lvl =  10  Avg Lvl =   2.57  [   1.18 sec. at Pass 4]
ABC:   #Luts =   109  Max Lvl =  10  Avg Lvl =   2.57  [   1.79 sec. at Pass 5]
ABC:   #Luts =   108  Max Lvl =  10  Avg Lvl =   2.57  [   1.68 sec. at Pass 6]
ABC:   #Luts =   107  Max Lvl =  11  Avg Lvl =   2.70  [   1.89 sec. at Pass 7]
ABC:   #Luts =   107  Max Lvl =  11  Avg Lvl =   2.70  [   1.93 sec. at Pass 8]
ABC:   #Luts =   107  Max Lvl =  11  Avg Lvl =   2.70  [   1.97 sec. at Pass 9]
ABC:   #Luts =   107  Max Lvl =  11  Avg Lvl =   2.70  [   1.42 sec. at Pass 10]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      107
ABC RESULTS:        internal signals:      412
ABC RESULTS:           input signals:      144
ABC RESULTS:          output signals:       53
Removing temp directory.

yosys> opt

3.33. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_merge -nomux

3.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff

3.33.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 1285 unused wires.
<suppressed ~145 debug messages>

yosys> opt_expr

3.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.33.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff

3.33.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.33.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.34. Printing statistics.

=== edn ===

   Number of wires:               2472
   Number of wire bits:          13420
   Number of public wires:        2335
   Number of public wire bits:   13283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                171
     $_DFFE_PN0P_                   28
     $_DFF_PN0_                     33
     $lut                          106
     $mux                            4


yosys> shregmap -minlen 8 -maxlen 20

3.35. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.37. Printing statistics.

=== edn ===

   Number of wires:               2472
   Number of wire bits:          13420
   Number of public wires:        2335
   Number of public wire bits:   13283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                171
     $_DFFE_PN0P_                   28
     $_DFF_PN0_                     33
     $lut                          106
     $mux                            4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.38. Executing TECHMAP pass (map to technology primitives).

3.38.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.38.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.38.3. Continuing TECHMAP pass.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~307 debug messages>

yosys> opt_expr -mux_undef

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~2066 debug messages>

yosys> simplemap

3.40. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~3075 debug messages>
Removed a total of 1025 cells.

yosys> opt_dff -nodffe -nosdff

3.43. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 416 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_lLokhA/abc_tmp_2.scr

3.46. Executing ABC pass (technology mapping using ABC).

3.46.1. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Extracted 700 gates and 842 wires to a netlist network with 140 inputs and 46 outputs.

3.46.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_lLokhA/abc_tmp_2.scr 
ABC:   #Luts =   103  Max Lvl =  10  Avg Lvl =   2.85  [   0.28 sec. at Pass 0]
ABC:   #Luts =   103  Max Lvl =  10  Avg Lvl =   2.85  [   2.91 sec. at Pass 1]
ABC:   #Luts =   103  Max Lvl =  10  Avg Lvl =   2.85  [   0.65 sec. at Pass 2]
ABC:   #Luts =   103  Max Lvl =   8  Avg Lvl =   2.54  [   1.41 sec. at Pass 3]
ABC:   #Luts =   103  Max Lvl =   8  Avg Lvl =   2.54  [   1.01 sec. at Pass 4]
ABC:   #Luts =   103  Max Lvl =   8  Avg Lvl =   2.54  [   1.54 sec. at Pass 5]
ABC:   #Luts =   102  Max Lvl =   9  Avg Lvl =   2.70  [   1.50 sec. at Pass 6]
ABC:   #Luts =   102  Max Lvl =   9  Avg Lvl =   2.70  [   1.09 sec. at Pass 7]
ABC:   #Luts =   102  Max Lvl =   8  Avg Lvl =   2.54  [   1.41 sec. at Pass 8]
ABC:   #Luts =   101  Max Lvl =   9  Avg Lvl =   2.70  [   1.14 sec. at Pass 9]
ABC:   #Luts =   101  Max Lvl =   9  Avg Lvl =   2.70  [   1.26 sec. at Pass 10]
ABC:   #Luts =   101  Max Lvl =   9  Avg Lvl =   2.70  [   1.02 sec. at Pass 11]
ABC:   #Luts =   101  Max Lvl =   9  Avg Lvl =   2.70  [   0.80 sec. at Pass 12]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.46.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      101
ABC RESULTS:        internal signals:      656
ABC RESULTS:           input signals:      140
ABC RESULTS:          output signals:       46
Removing temp directory.

yosys> opt

3.47. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_merge -nomux

3.47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.47.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.47.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff

3.47.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 596 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.47.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.47.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.47.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.47.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff

3.47.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.47.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

3.47.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.48. Executing HIERARCHY pass (managing design hierarchy).

3.48.1. Analyzing design hierarchy..
Top module:  \edn

3.48.2. Analyzing design hierarchy..
Top module:  \edn
Removed 0 unused modules.

yosys> stat

3.49. Printing statistics.

=== edn ===

   Number of wires:               2463
   Number of wire bits:          13411
   Number of public wires:        2335
   Number of public wire bits:   13283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                162
     $lut                          101
     dffsre                         61


yosys> opt_clean -purge

3.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 2242 unused wires.
<suppressed ~2242 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.51. Executing Verilog backend.

yosys> bmuxmap

3.51.1. Executing BMUXMAP pass.

yosys> demuxmap

3.51.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\edn'.

Warnings: 208 unique messages, 208 total
End of script. Logfile hash: 733c5dba7c, CPU: user 12.29s system 0.15s, MEM: 49.03 MB peak
Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)
Time spent: 94% 3x abc (196 sec), 1% 36x opt_clean (4 sec), ...
real 62.55
user 187.50
sys 21.60
