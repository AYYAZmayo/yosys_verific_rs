
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.19
 Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl AsyncMux.vhd counter.vhd keyupd.vhd kody.vhd pLayer.vhd Reg.vhd slayer.vhd PresentEnc.vhd PresentStateMachine.vhd

yosys> verific -vhdl AsyncMux.vhd counter.vhd keyupd.vhd kody.vhd pLayer.vhd Reg.vhd slayer.vhd PresentEnc.vhd PresentStateMachine.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'AsyncMux.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-INFO [VHDL-1012] AsyncMux.vhd:55: analyzing entity 'asyncmux'
VERIFIC-INFO [VHDL-1010] AsyncMux.vhd:67: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'counter.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] counter.vhd:48: analyzing entity 'counter'
VERIFIC-INFO [VHDL-1010] counter.vhd:58: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'keyupd.vhd'
VERIFIC-INFO [VHDL-1012] keyupd.vhd:52: analyzing entity 'keyupd'
VERIFIC-INFO [VHDL-1010] keyupd.vhd:64: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'kody.vhd'
VERIFIC-INFO [VHDL-1014] kody.vhd:52: analyzing package 'kody'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'pLayer.vhd'
VERIFIC-INFO [VHDL-1012] pLayer.vhd:51: analyzing entity 'player'
VERIFIC-INFO [VHDL-1010] pLayer.vhd:59: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'Reg.vhd'
VERIFIC-INFO [VHDL-1012] Reg.vhd:55: analyzing entity 'reg'
VERIFIC-INFO [VHDL-1010] Reg.vhd:66: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'slayer.vhd'
VERIFIC-INFO [VHDL-1012] slayer.vhd:51: analyzing entity 'slayer'
VERIFIC-INFO [VHDL-1010] slayer.vhd:61: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'PresentEnc.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-INFO [VHDL-1012] PresentEnc.vhd:51: analyzing entity 'presentenc'
VERIFIC-INFO [VHDL-1010] PresentEnc.vhd:69: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'PresentStateMachine.vhd'
VERIFIC-INFO [VHDL-1012] PresentStateMachine.vhd:51: analyzing entity 'presentstatemachine'
VERIFIC-INFO [VHDL-1010] PresentStateMachine.vhd:62: analyzing architecture 'behavioral'

yosys> synth_rs -top PresentEnc -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.44

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top PresentEnc

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] PresentEnc.vhd:51: processing 'PresentEnc(Behavioral)'
VERIFIC-INFO [VHDL-1067] AsyncMux.vhd:55: processing 'AsyncMux(Behavioral)'
VERIFIC-INFO [VHDL-1067] Reg.vhd:55: processing 'Reg(Behavioral)'
VERIFIC-INFO [VHDL-1067] AsyncMux.vhd:55: processing 'AsyncMux(width=80)(Behavioral)'
VERIFIC-INFO [VHDL-1067] Reg.vhd:55: processing 'Reg(width=80)(Behavioral)'
VERIFIC-INFO [VHDL-1067] slayer.vhd:51: processing 'slayer(Behavioral)'
VERIFIC-INFO [VHDL-1067] pLayer.vhd:51: processing 'pLayer(Behavioral)'
VERIFIC-INFO [VHDL-1067] keyupd.vhd:52: processing 'keyupd(Behavioral)'
VERIFIC-INFO [VHDL-1067] PresentStateMachine.vhd:51: processing 'PresentStateMachine(Behavioral)'
VERIFIC-INFO [VHDL-1067] counter.vhd:48: processing 'counter(Behavioral)'
Importing module PresentEnc.
Importing module AsyncMux(Behavioral).
Importing module AsyncMux(width=80)(Behavioral).
Importing module PresentStateMachine(Behavioral).
Importing module Reg(Behavioral).
Importing module Reg(width=80)(Behavioral).
Importing module counter(Behavioral).
Importing module keyupd(Behavioral).
Importing module pLayer(Behavioral).
Importing module slayer(Behavioral).

3.3.1. Analyzing design hierarchy..
Top module:  \PresentEnc
Used module:     \counter(Behavioral)
Used module:     \PresentStateMachine(Behavioral)
Used module:     \keyupd(Behavioral)
Used module:         \slayer(Behavioral)
Used module:     \pLayer(Behavioral)
Used module:     \Reg(width=80)(Behavioral)
Used module:     \AsyncMux(width=80)(Behavioral)
Used module:     \Reg(Behavioral)
Used module:     \AsyncMux(Behavioral)

3.3.2. Analyzing design hierarchy..
Top module:  \PresentEnc
Used module:     \counter(Behavioral)
Used module:     \PresentStateMachine(Behavioral)
Used module:     \keyupd(Behavioral)
Used module:         \slayer(Behavioral)
Used module:     \pLayer(Behavioral)
Used module:     \Reg(width=80)(Behavioral)
Used module:     \AsyncMux(width=80)(Behavioral)
Used module:     \Reg(Behavioral)
Used module:     \AsyncMux(Behavioral)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module slayer(Behavioral).
<suppressed ~1 debug messages>
Optimizing module pLayer(Behavioral).
Optimizing module keyupd(Behavioral).
Optimizing module counter(Behavioral).
<suppressed ~1 debug messages>
Optimizing module Reg(width=80)(Behavioral).
<suppressed ~1 debug messages>
Optimizing module Reg(Behavioral).
<suppressed ~1 debug messages>
Optimizing module PresentStateMachine(Behavioral).
<suppressed ~5 debug messages>
Optimizing module AsyncMux(width=80)(Behavioral).
Optimizing module AsyncMux(Behavioral).
Optimizing module PresentEnc.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module slayer(Behavioral).
Deleting now unused module pLayer(Behavioral).
Deleting now unused module keyupd(Behavioral).
Deleting now unused module counter(Behavioral).
Deleting now unused module Reg(width=80)(Behavioral).
Deleting now unused module Reg(Behavioral).
Deleting now unused module PresentStateMachine(Behavioral).
Deleting now unused module AsyncMux(width=80)(Behavioral).
Deleting now unused module AsyncMux(Behavioral).
<suppressed ~25 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..
Removed 272 unused cells and 540 unused wires.
<suppressed ~359 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module PresentEnc...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\regText.$verific$reg_reg$Reg.vhd:79$136 ($aldff) from module PresentEnc.
Changing const-value async load to async reset on $flatten\regKey.$verific$reg_reg$Reg.vhd:79$146 ($aldff) from module PresentEnc.
Changing const-value async load to async reset on $flatten\count.$verific$cnt_reg$counter.vhd:69$160 ($aldff) from module PresentEnc.
Changing const-value async load to async reset on $flatten\SM.$verific$state_reg$PresentStateMachine.vhd:126$126 ($aldff) from module PresentEnc.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\regText.$verific$reg_reg$Reg.vhd:79$136 ($adff) from module PresentEnc (D = \mux_64.output, Q = \regText.reg).
Adding EN signal on $flatten\regKey.$verific$reg_reg$Reg.vhd:79$146 ($adff) from module PresentEnc (D = \mux_80.output, Q = \regKey.reg).
Adding EN signal on $flatten\count.$verific$cnt_reg$counter.vhd:69$160 ($adff) from module PresentEnc (D = $flatten\count.$verific$n11$151, Q = \count.cnt).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[15].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[15].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[15].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[15].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[15].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[15].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[15].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[14].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[14].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[14].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[14].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[14].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[14].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[14].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[13].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[13].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[13].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[13].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[13].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[13].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[13].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[12].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[12].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[12].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[12].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[12].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[12].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[12].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[11].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[11].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[11].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[11].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[11].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[11].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[11].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[10].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[10].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[10].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[10].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[10].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[10].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[10].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[9].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[9].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[9].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[9].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[9].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[9].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[9].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[8].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[8].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[8].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[8].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[8].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[8].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[8].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[7].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[7].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[7].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[7].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[7].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[7].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[7].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[6].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[6].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[6].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[6].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[6].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[6].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[6].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[5].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[5].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[5].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[5].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[5].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[5].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[5].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[4].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[4].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[4].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[4].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[4].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[4].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[4].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[3].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[3].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[3].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[3].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[3].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[3].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[3].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[2].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[2].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[2].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[2].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[2].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[2].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[2].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[1].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[1].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[1].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[1].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[1].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[1].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[1].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[0].s_x.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[0].s_x.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[0].s_x.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[0].s_x.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[0].s_x.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[0].s_x.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\slayers[0].s_x.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 3 bits (of 4) from port B of cell PresentEnc.$flatten\mixer.\s1.$verific$equal_4$slayer.vhd:65$263 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\mixer.\s1.$verific$equal_5$slayer.vhd:66$264 ($eq).
Removed top 2 bits (of 4) from port B of cell PresentEnc.$flatten\mixer.\s1.$verific$equal_6$slayer.vhd:67$265 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\mixer.\s1.$verific$equal_7$slayer.vhd:68$266 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\mixer.\s1.$verific$equal_8$slayer.vhd:69$267 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\mixer.\s1.$verific$equal_9$slayer.vhd:70$268 ($eq).
Removed top 1 bits (of 4) from port B of cell PresentEnc.$flatten\mixer.\s1.$verific$equal_10$slayer.vhd:71$269 ($eq).
Removed top 4 bits (of 5) from port B of cell PresentEnc.$flatten\count.$verific$add_4$counter.vhd:67$157 ($add).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module PresentEnc:
  creating $macc model for $flatten\count.$verific$add_4$counter.vhd:67$157 ($add).
  creating $alu model for $macc $flatten\count.$verific$add_4$counter.vhd:67$157.
  creating $alu cell for $flatten\count.$verific$add_4$counter.vhd:67$157: $auto$alumacc.cc:485:replace_alu$354
  created 1 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== PresentEnc ===

   Number of wires:               1198
   Number of wire bits:           3317
   Number of public wires:          97
   Number of public wire bits:    2199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1177
     $adff                           1
     $adffe                          3
     $alu                            1
     $bmux                           4
     $eq                           239
     $logic_not                     18
     $mux                          892
     $not                           17
     $xor                            2


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== PresentEnc ===

   Number of wires:               1198
   Number of wire bits:           3317
   Number of public wires:          97
   Number of public wire bits:    2199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1177
     $adff                           1
     $adffe                          3
     $alu                            1
     $bmux                           4
     $eq                           239
     $logic_not                     18
     $mux                          892
     $not                           17
     $xor                            2


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> stat

3.24. Printing statistics.

=== PresentEnc ===

   Number of wires:               1198
   Number of wire bits:           3317
   Number of public wires:          97
   Number of public wire bits:    2199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1177
     $adff                           1
     $adffe                          3
     $alu                            1
     $bmux                           4
     $eq                           239
     $logic_not                     18
     $mux                          892
     $not                           17
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~1476 debug messages>

yosys> stat

3.26. Printing statistics.

=== PresentEnc ===

   Number of wires:               2233
   Number of wire bits:           6492
   Number of public wires:          97
   Number of public wire bits:    2199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3319
     $_AND_                         12
     $_DFFE_PP0P_                  149
     $_DFF_PP0_                      2
     $_MUX_                       1061
     $_NOT_                        279
     $_OR_                         779
     $_XOR_                       1037


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.
<suppressed ~1897 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
<suppressed ~2373 debug messages>
Removed a total of 791 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..
Removed 206 unused cells and 1305 unused wires.
<suppressed ~207 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.
<suppressed ~418 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  18 cells in clk=\clk, en={ }, arst=\reset, srst={ }
  1774 cells in clk=\clk, en=\SM.RegEn, arst=\reset, srst={ }

3.31.2. Extracting gate netlist of module `\PresentEnc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \reset
Extracted 18 gates and 27 wires to a netlist network with 7 inputs and 3 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

3.31.3. Extracting gate netlist of module `\PresentEnc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \SM.RegEn, asynchronously reset by \reset
Extracted 1774 gates and 1923 wires to a netlist network with 147 inputs and 71 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      149
ABC RESULTS:             ORNOT cells:       59
ABC RESULTS:            ANDNOT cells:       22
ABC RESULTS:               XOR cells:       19
ABC RESULTS:                OR cells:       36
ABC RESULTS:              NAND cells:      268
ABC RESULTS:               MUX cells:      138
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:       70
ABC RESULTS:              XNOR cells:       93
ABC RESULTS:               NOT cells:       64
ABC RESULTS:        internal signals:     1705
ABC RESULTS:           input signals:      147
ABC RESULTS:          output signals:       71
Removing temp directory.

yosys> abc -script /tmp/yosys_c0C79O/abc_tmp_1.scr

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Extracting gate netlist of module `\PresentEnc' to `<abc-temp-dir>/input.blif'..
Extracted 792 gates and 1088 wires to a netlist network with 296 inputs and 216 outputs.

3.32.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_c0C79O/abc_tmp_1.scr 
ABC:   #Luts =   220  Max Lvl =   3  Avg Lvl =   2.35  [   0.11 sec. at Pass 0]
ABC:   #Luts =   219  Max Lvl =   3  Avg Lvl =   2.34  [   0.91 sec. at Pass 1]
ABC:   #Luts =   219  Max Lvl =   3  Avg Lvl =   2.34  [   0.31 sec. at Pass 2]
ABC:   #Luts =   219  Max Lvl =   3  Avg Lvl =   2.34  [   0.37 sec. at Pass 3]
ABC:   #Luts =   219  Max Lvl =   3  Avg Lvl =   2.34  [   0.35 sec. at Pass 4]
ABC:   #Luts =   219  Max Lvl =   3  Avg Lvl =   2.34  [   0.47 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      219
ABC RESULTS:        internal signals:      576
ABC RESULTS:           input signals:      296
ABC RESULTS:          output signals:      216
Removing temp directory.

yosys> opt

3.33. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

yosys> opt_merge -nomux

3.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff

3.33.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..
Removed 0 unused cells and 2639 unused wires.
<suppressed ~17 debug messages>

yosys> opt_expr

3.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.33.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff

3.33.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> opt_expr

3.33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.33.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.34. Printing statistics.

=== PresentEnc ===

   Number of wires:                384
   Number of wire bits:           2087
   Number of public wires:          81
   Number of public wire bits:    1784
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                370
     $_DFFE_PP0P_                  149
     $_DFF_PP0_                      2
     $lut                          219


yosys> shregmap -minlen 8 -maxlen 20

3.35. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.37. Printing statistics.

=== PresentEnc ===

   Number of wires:                384
   Number of wire bits:           2087
   Number of public wires:          81
   Number of public wire bits:    1784
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                370
     $_DFFE_PP0P_                  149
     $_DFF_PP0_                      2
     $lut                          219


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.38. Executing TECHMAP pass (map to technology primitives).

3.38.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.38.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.38.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~657 debug messages>

yosys> opt_expr -mux_undef

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.
<suppressed ~4357 debug messages>

yosys> simplemap

3.40. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
<suppressed ~945 debug messages>
Removed a total of 315 cells.

yosys> opt_dff -nodffe -nosdff

3.43. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..
Removed 0 unused cells and 1373 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.
<suppressed ~17 debug messages>

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.45.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_c0C79O/abc_tmp_2.scr

3.46. Executing ABC pass (technology mapping using ABC).

3.46.1. Extracting gate netlist of module `\PresentEnc' to `<abc-temp-dir>/input.blif'..
Extracted 721 gates and 1020 wires to a netlist network with 297 inputs and 217 outputs.

3.46.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_c0C79O/abc_tmp_2.scr 
ABC:   #Luts =   221  Max Lvl =   4  Avg Lvl =   3.00  [   0.07 sec. at Pass 0]
ABC:   #Luts =   220  Max Lvl =   3  Avg Lvl =   2.34  [   1.32 sec. at Pass 1]
ABC:   #Luts =   220  Max Lvl =   3  Avg Lvl =   2.34  [   0.32 sec. at Pass 2]
ABC:   #Luts =   220  Max Lvl =   3  Avg Lvl =   2.34  [   0.36 sec. at Pass 3]
ABC:   #Luts =   220  Max Lvl =   3  Avg Lvl =   2.34  [   0.38 sec. at Pass 4]
ABC:   #Luts =   220  Max Lvl =   3  Avg Lvl =   2.34  [   0.49 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.46.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      220
ABC RESULTS:        internal signals:      506
ABC RESULTS:           input signals:      297
ABC RESULTS:          output signals:      217
Removing temp directory.

yosys> opt

3.47. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

yosys> opt_merge -nomux

3.47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.47.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.47.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff

3.47.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..
Removed 0 unused cells and 854 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.47.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.47.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.47.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PresentEnc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PresentEnc.
Performed a total of 0 changes.

yosys> opt_merge

3.47.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PresentEnc'.
Removed a total of 0 cells.

yosys> opt_dff

3.47.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..

yosys> opt_expr

3.47.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PresentEnc.

3.47.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.48. Executing HIERARCHY pass (managing design hierarchy).

3.48.1. Analyzing design hierarchy..
Top module:  \PresentEnc

3.48.2. Analyzing design hierarchy..
Top module:  \PresentEnc
Removed 0 unused modules.

yosys> stat

3.49. Printing statistics.

=== PresentEnc ===

   Number of wires:                385
   Number of wire bits:           2088
   Number of public wires:          81
   Number of public wire bits:    1784
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                371
     $lut                          220
     dffsre                        151


yosys> opt_clean -purge

3.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PresentEnc..
Removed 0 unused cells and 72 unused wires.
<suppressed ~72 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.51. Executing Verilog backend.

yosys> bmuxmap

3.51.1. Executing BMUXMAP pass.

yosys> demuxmap

3.51.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\PresentEnc'.

End of script. Logfile hash: 12e891fb4d, CPU: user 4.36s system 0.05s, MEM: 33.10 MB peak
Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)
Time spent: 88% 3x abc (34 sec), 3% 28x opt_expr (1 sec), ...
real 10.67
user 32.12
sys 6.19
