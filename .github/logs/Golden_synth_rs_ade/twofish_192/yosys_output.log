
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl twofish.vhd

yosys> verific -vhdl twofish.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'twofish.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-INFO [VHDL-1012] twofish.vhd:44: analyzing entity 'q0'
VERIFIC-INFO [VHDL-1010] twofish.vhd:51: analyzing architecture 'q0_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:199: analyzing entity 'q1'
VERIFIC-INFO [VHDL-1010] twofish.vhd:207: analyzing architecture 'q1_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:355: analyzing entity 'mul_ef'
VERIFIC-INFO [VHDL-1010] twofish.vhd:363: analyzing architecture 'mul_ef_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:391: analyzing entity 'mul_5b'
VERIFIC-INFO [VHDL-1010] twofish.vhd:398: analyzing architecture 'mul_5b_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:423: analyzing entity 'mds'
VERIFIC-INFO [VHDL-1010] twofish.vhd:438: analyzing architecture 'mds_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:544: analyzing entity 'adder'
VERIFIC-INFO [VHDL-1010] twofish.vhd:554: analyzing architecture 'adder_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:681: analyzing entity 'mul01'
VERIFIC-INFO [VHDL-1010] twofish.vhd:688: analyzing architecture 'mul01_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:707: analyzing entity 'mula4'
VERIFIC-INFO [VHDL-1010] twofish.vhd:714: analyzing architecture 'mula4_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:740: analyzing entity 'mul55'
VERIFIC-INFO [VHDL-1010] twofish.vhd:747: analyzing architecture 'mul55_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:773: analyzing entity 'mul87'
VERIFIC-INFO [VHDL-1010] twofish.vhd:780: analyzing architecture 'mul87_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:806: analyzing entity 'mul5a'
VERIFIC-INFO [VHDL-1010] twofish.vhd:813: analyzing architecture 'mul5a_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:839: analyzing entity 'mul58'
VERIFIC-INFO [VHDL-1010] twofish.vhd:846: analyzing architecture 'mul58_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:872: analyzing entity 'muldb'
VERIFIC-INFO [VHDL-1010] twofish.vhd:879: analyzing architecture 'muldb_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:905: analyzing entity 'mul9e'
VERIFIC-INFO [VHDL-1010] twofish.vhd:912: analyzing architecture 'mul9e_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:938: analyzing entity 'mul56'
VERIFIC-INFO [VHDL-1010] twofish.vhd:945: analyzing architecture 'mul56_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:971: analyzing entity 'mul82'
VERIFIC-INFO [VHDL-1010] twofish.vhd:978: analyzing architecture 'mul82_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1004: analyzing entity 'mulf3'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1011: analyzing architecture 'mulf3_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1038: analyzing entity 'mul1e'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1045: analyzing architecture 'mul1e_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1070: analyzing entity 'mulc6'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1077: analyzing architecture 'mulc6_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1103: analyzing entity 'mul68'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1111: analyzing architecture 'mul68_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1137: analyzing entity 'mule5'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1145: analyzing architecture 'mule5_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1171: analyzing entity 'mul02'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1179: analyzing architecture 'mul02_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1205: analyzing entity 'mula1'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1212: analyzing architecture 'mula1_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1238: analyzing entity 'mulfc'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1246: analyzing architecture 'mulfc_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1272: analyzing entity 'mulc1'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1280: analyzing architecture 'mulc1_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1306: analyzing entity 'mul47'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1313: analyzing architecture 'mul47_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1339: analyzing entity 'mulae'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1346: analyzing architecture 'mulae_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1372: analyzing entity 'mul3d'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1379: analyzing architecture 'mul3d_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1405: analyzing entity 'mul19'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1412: analyzing architecture 'mul19_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1438: analyzing entity 'mul03'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1445: analyzing architecture 'mul03_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1474: analyzing entity 'twofish_data_input'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1481: analyzing architecture 'twofish_data_input_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1540: analyzing entity 'twofish_data_output'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1547: analyzing architecture 'twofish_data_output_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:1604: analyzing entity 'reed_solomon128'
VERIFIC-INFO [VHDL-1010] twofish.vhd:1612: analyzing architecture 'rs_128_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:2297: analyzing entity 'h_128'
VERIFIC-INFO [VHDL-1010] twofish.vhd:2306: analyzing architecture 'h128_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:2449: analyzing entity 'g_128'
VERIFIC-INFO [VHDL-1010] twofish.vhd:2458: analyzing architecture 'g128_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:2600: analyzing entity 'f_128'
VERIFIC-INFO [VHDL-1010] twofish.vhd:2613: analyzing architecture 'f128_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:2755: analyzing entity 'twofish_keysched128'
VERIFIC-INFO [VHDL-1010] twofish.vhd:2765: analyzing architecture 'twofish_keysched128_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:2876: analyzing entity 'twofish_s128'
VERIFIC-INFO [VHDL-1010] twofish.vhd:2884: analyzing architecture 'twofish_s128_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:2950: analyzing entity 'twofish_whit_keysched128'
VERIFIC-INFO [VHDL-1010] twofish.vhd:2964: analyzing architecture 'twofish_whit_keysched128_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:3210: analyzing entity 'twofish_encryption_round128'
VERIFIC-INFO [VHDL-1010] twofish.vhd:3227: analyzing architecture 'twofish_encryption_round128_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:3307: analyzing entity 'twofish_decryption_round128'
VERIFIC-INFO [VHDL-1010] twofish.vhd:3324: analyzing architecture 'twofish_decryption_round128_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:3398: analyzing entity 'reed_solomon192'
VERIFIC-INFO [VHDL-1010] twofish.vhd:3407: analyzing architecture 'rs_192_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:4314: analyzing entity 'h_192'
VERIFIC-INFO [VHDL-1010] twofish.vhd:4324: analyzing architecture 'h192_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:4498: analyzing entity 'g_192'
VERIFIC-INFO [VHDL-1010] twofish.vhd:4508: analyzing architecture 'g192_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:4677: analyzing entity 'f_192'
VERIFIC-INFO [VHDL-1010] twofish.vhd:4691: analyzing architecture 'f192_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:4836: analyzing entity 'twofish_keysched192'
VERIFIC-INFO [VHDL-1010] twofish.vhd:4846: analyzing architecture 'twofish_keysched192_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:4972: analyzing entity 'twofish_s192'
VERIFIC-INFO [VHDL-1010] twofish.vhd:4981: analyzing architecture 'twofish_s192_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:5060: analyzing entity 'twofish_whit_keysched192'
VERIFIC-INFO [VHDL-1010] twofish.vhd:5074: analyzing architecture 'twofish_whit_keysched192_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:5341: analyzing entity 'twofish_encryption_round192'
VERIFIC-INFO [VHDL-1010] twofish.vhd:5359: analyzing architecture 'twofish_encryption_round192_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:5441: analyzing entity 'twofish_decryption_round192'
VERIFIC-INFO [VHDL-1010] twofish.vhd:5459: analyzing architecture 'twofish_decryption_round192_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:5537: analyzing entity 'reed_solomon256'
VERIFIC-INFO [VHDL-1010] twofish.vhd:5547: analyzing architecture 'rs_256_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:6676: analyzing entity 'h_256'
VERIFIC-INFO [VHDL-1010] twofish.vhd:6687: analyzing architecture 'h256_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:6891: analyzing entity 'g_256'
VERIFIC-INFO [VHDL-1010] twofish.vhd:6902: analyzing architecture 'g256_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:7106: analyzing entity 'f_256'
VERIFIC-INFO [VHDL-1010] twofish.vhd:7121: analyzing architecture 'f256_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:7268: analyzing entity 'twofish_keysched256'
VERIFIC-INFO [VHDL-1010] twofish.vhd:7278: analyzing architecture 'twofish_keysched256_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:7419: analyzing entity 'twofish_s256'
VERIFIC-INFO [VHDL-1010] twofish.vhd:7429: analyzing architecture 'twofish_s256_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:7521: analyzing entity 'twofish_whit_keysched256'
VERIFIC-INFO [VHDL-1010] twofish.vhd:7535: analyzing architecture 'twofish_whit_keysched256_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:7821: analyzing entity 'twofish_encryption_round256'
VERIFIC-INFO [VHDL-1010] twofish.vhd:7840: analyzing architecture 'twofish_encryption_round256_arch'
VERIFIC-INFO [VHDL-1012] twofish.vhd:7924: analyzing entity 'twofish_decryption_round256'
VERIFIC-INFO [VHDL-1010] twofish.vhd:7943: analyzing architecture 'twofish_decryption_round256_arch'

yosys> synth_rs -top twofish_whit_keysched192 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top twofish_whit_keysched192

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] twofish.vhd:5060: processing 'twofish_whit_keysched192(twofish_whit_keysched192_arch)'
VERIFIC-INFO [VHDL-1067] twofish.vhd:4314: processing 'h_192(h192_arch)'
VERIFIC-INFO [VHDL-1067] twofish.vhd:199: processing 'q1(q1_arch)'
VERIFIC-INFO [VHDL-1067] twofish.vhd:44: processing 'q0(q0_arch)'
VERIFIC-INFO [VHDL-1067] twofish.vhd:423: processing 'mds(mds_arch)'
VERIFIC-INFO [VHDL-1067] twofish.vhd:355: processing 'mul_ef(mul_ef_arch)'
VERIFIC-INFO [VHDL-1067] twofish.vhd:391: processing 'mul_5b(mul_5b_arch)'
VERIFIC-WARNING [VHDL-1250] twofish.vhd:5112: 'pht' remains a black box since it has no binding entity
Importing module twofish_whit_keysched192.
Importing module h_192(h192_arch).
Importing module mds(mds_arch).
Importing module mul_5b(mul_5b_arch).
Importing module mul_ef(mul_ef_arch).
Importing blackbox module pht.
Importing module q0(q0_arch).
Importing module q1(q1_arch).

3.3.1. Analyzing design hierarchy..
Top module:  \twofish_whit_keysched192
Used module:     \h_192(h192_arch)
Used module:         \mds(mds_arch)
Used module:             \mul_5b(mul_5b_arch)
Used module:             \mul_ef(mul_ef_arch)
Used module:         \q0(q0_arch)
Used module:         \q1(q1_arch)

3.3.2. Analyzing design hierarchy..
Top module:  \twofish_whit_keysched192
Used module:     \h_192(h192_arch)
Used module:         \mds(mds_arch)
Used module:             \mul_5b(mul_5b_arch)
Used module:             \mul_ef(mul_ef_arch)
Used module:         \q0(q0_arch)
Used module:         \q1(q1_arch)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module q1(q1_arch).
Optimizing module q0(q0_arch).
Optimizing module mul_ef(mul_ef_arch).
Optimizing module mul_5b(mul_5b_arch).
Optimizing module mds(mds_arch).
Optimizing module h_192(h192_arch).
Optimizing module twofish_whit_keysched192.
<suppressed ~8 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module q1(q1_arch).
Deleting now unused module q0(q0_arch).
Deleting now unused module mul_ef(mul_ef_arch).
Deleting now unused module mul_5b(mul_5b_arch).
Deleting now unused module mds(mds_arch).
Deleting now unused module h_192(h192_arch).
<suppressed ~33 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.
<suppressed ~288 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..
Removed 0 unused cells and 1938 unused wires.
<suppressed ~1887 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module twofish_whit_keysched192...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
<suppressed ~336 debug messages>
Removed a total of 112 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 32 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.
<suppressed ~41 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 32 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.11.23. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 32) from port A of cell twofish_whit_keysched192.$flatten\lower_h4.$verific$xor_3$twofish.vhd:4393$118 ($xor).
Removed top 1 bits (of 32) from port A of cell twofish_whit_keysched192.$flatten\lower_h1.$verific$xor_3$twofish.vhd:4393$118 ($xor).
Removed top 5 bits (of 32) from port A of cell twofish_whit_keysched192.$flatten\upper_h3.$verific$xor_3$twofish.vhd:4393$118 ($xor).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module twofish_whit_keysched192:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> stat

3.22. Printing statistics.

=== twofish_whit_keysched192 ===

   Number of wires:               3167
   Number of wire bits:          17504
   Number of public wires:        2463
   Number of public wire bits:   15552
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1596
     $bmux                         384
     $xor                         1208
     pht                             4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $bmux.
No more expansions possible.
<suppressed ~1663 debug messages>

yosys> stat

3.24. Printing statistics.

=== twofish_whit_keysched192 ===

   Number of wires:               4703
   Number of wire bits:          40544
   Number of public wires:        2463
   Number of public wire bits:   15552
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              28068
     $_MUX_                      23040
     $_XOR_                       5024
     pht                             4


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.
<suppressed ~11824 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
<suppressed ~13254 debug messages>
Removed a total of 4418 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..
Removed 0 unused cells and 566 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.
<suppressed ~332 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.25.23. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.
<suppressed ~1090 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.28.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\twofish_whit_keysched192' to `<abc-temp-dir>/input.blif'..
Extracted 11642 gates and 11836 wires to a netlist network with 192 inputs and 256 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/twofish_192/abc_tmp.scr 
ABC:   #Luts =  3368  Max Lvl =  16  Avg Lvl =  14.53  [   2.67 sec. at Pass 0]
ABC:   #Luts =  2945  Max Lvl =  20  Avg Lvl =  17.75  [ 208.05 sec. at Pass 1]
ABC:   #Luts =  2808  Max Lvl =  19  Avg Lvl =  17.55  [  13.83 sec. at Pass 2]
ABC:   #Luts =  2808  Max Lvl =  19  Avg Lvl =  17.55  [ 305.81 sec. at Pass 3]
ABC:   #Luts =  2808  Max Lvl =  19  Avg Lvl =  17.55  [  19.31 sec. at Pass 4]
ABC:   #Luts =  2808  Max Lvl =  19  Avg Lvl =  17.55  [ 261.64 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2808
ABC RESULTS:        internal signals:    11388
ABC RESULTS:           input signals:      192
ABC RESULTS:          output signals:      256
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..
Removed 0 unused cells and 3759 unused wires.
<suppressed ~1485 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== twofish_whit_keysched192 ===

   Number of wires:               3531
   Number of wire bits:           9512
   Number of public wires:         979
   Number of public wire bits:    6960
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2812
     $lut                         2808
     pht                             4


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== twofish_whit_keysched192 ===

   Number of wires:               3531
   Number of wire bits:           9512
   Number of public wires:         979
   Number of public wire bits:    6960
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2812
     $lut                         2808
     pht                             4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~2944 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.
<suppressed ~42376 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
<suppressed ~83538 debug messages>
Removed a total of 27846 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..
Removed 0 unused cells and 5711 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.
<suppressed ~449 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
<suppressed ~210 debug messages>
Removed a total of 70 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..
Removed 0 unused cells and 93 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\twofish_whit_keysched192' to `<abc-temp-dir>/input.blif'..
Extracted 20303 gates and 20497 wires to a netlist network with 192 inputs and 256 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/twofish_192/abc_tmp.scr 
ABC:   #Luts =  3086  Max Lvl =  20  Avg Lvl =  17.68  [   1.93 sec. at Pass 0]
ABC:   #Luts =  3065  Max Lvl =  19  Avg Lvl =  17.18  [ 204.72 sec. at Pass 1]
ABC:   #Luts =  2886  Max Lvl =  19  Avg Lvl =  17.29  [  18.61 sec. at Pass 2]
ABC:   #Luts =  2886  Max Lvl =  19  Avg Lvl =  17.29  [ 260.21 sec. at Pass 3]
ABC:   #Luts =  2855  Max Lvl =  20  Avg Lvl =  17.40  [  13.38 sec. at Pass 4]
ABC:   #Luts =  2855  Max Lvl =  20  Avg Lvl =  17.40  [ 225.62 sec. at Pass 5]
ABC:   #Luts =  2849  Max Lvl =  20  Avg Lvl =  17.24  [  10.74 sec. at Pass 6]
ABC:   #Luts =  2849  Max Lvl =  20  Avg Lvl =  17.24  [ 132.45 sec. at Pass 7]
ABC:   #Luts =  2838  Max Lvl =  19  Avg Lvl =  17.31  [   9.44 sec. at Pass 8]
ABC:   #Luts =  2838  Max Lvl =  19  Avg Lvl =  17.31  [ 139.54 sec. at Pass 9]
ABC:   #Luts =  2827  Max Lvl =  19  Avg Lvl =  17.28  [   9.01 sec. at Pass 10]
ABC:   #Luts =  2827  Max Lvl =  19  Avg Lvl =  17.28  [ 128.91 sec. at Pass 11]
ABC:   #Luts =  2824  Max Lvl =  19  Avg Lvl =  17.17  [  10.63 sec. at Pass 12]
ABC:   #Luts =  2824  Max Lvl =  19  Avg Lvl =  17.17  [ 140.64 sec. at Pass 13]
ABC:   #Luts =  2824  Max Lvl =  19  Avg Lvl =  17.17  [  10.62 sec. at Pass 14]
ABC:   #Luts =  2824  Max Lvl =  19  Avg Lvl =  17.17  [ 151.83 sec. at Pass 15]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2824
ABC RESULTS:        internal signals:    20049
ABC RESULTS:           input signals:      192
ABC RESULTS:          output signals:      256
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..
Removed 0 unused cells and 10180 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \twofish_whit_keysched192..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \twofish_whit_keysched192.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\twofish_whit_keysched192'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module twofish_whit_keysched192.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \twofish_whit_keysched192

3.45.2. Analyzing design hierarchy..
Top module:  \twofish_whit_keysched192
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== twofish_whit_keysched192 ===

   Number of wires:               3547
   Number of wire bits:           9528
   Number of public wires:         979
   Number of public wire bits:    6960
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2828
     $lut                         2824
     pht                             4


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \twofish_whit_keysched192..
Removed 0 unused cells and 934 unused wires.
<suppressed ~934 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\twofish_whit_keysched192'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: efe1b83b54, CPU: user 48.56s system 0.32s, MEM: 181.55 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 2x abc (20143 sec), 0% 28x opt_expr (22 sec), ...
real 2353.04
user 19791.96
sys 399.56
