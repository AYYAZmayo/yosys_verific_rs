
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k ksa.v ksa1.v tfl.v control.v conv2d.v

yosys> verific -vlog2k ksa.v ksa1.v tfl.v control.v conv2d.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ksa.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ksa1.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tfl.v'
VERIFIC-WARNING [VERI-1407] tfl.v:385: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:260: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:254: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:248: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:241: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:237: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:236: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:225: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:221: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:219: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:218: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:217: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:216: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:215: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:214: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:213: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:212: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:211: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:210: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:209: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:206: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:160: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:158: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:156: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:149: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:144: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:129: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:128: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:5: attribute target identifier 'pad' not found in this scope
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'control.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'conv2d.v'

yosys> synth_rs -top conv2d -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top conv2d

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] conv2d.v:2: compiling module 'conv2d'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=20)'
VERIFIC-WARNING [VERI-1209] conv2d.v:418: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:435: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:442: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:449: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:456: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:463: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:470: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:477: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1173] conv2d.v:398: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:540: expression size 14 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] conv2d.v:606: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:630: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:638: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:669: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:672: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:673: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:681: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:685: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:687: expression size 32 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] conv2d.v:688: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:689: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:717: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:720: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:721: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:729: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:733: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:735: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:736: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:842: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:867: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:869: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:874: expression size 17 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=24)'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=16)'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=12)'
VERIFIC-INFO [VERI-1018] ksa1.v:1: compiling module 'ksa1(WIDTH=12)'
VERIFIC-WARNING [VERI-1209] conv2d.v:1119: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1138: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1153: expression size 3 truncated to fit in target size 2
VERIFIC-WARNING [VERI-1209] conv2d.v:1156: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1169: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1173: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1181: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1199: expression size 17 truncated to fit in target size 16
Importing module conv2d.
Importing module ksa(WIDTH=12).
Importing module ksa(WIDTH=16).
Importing module ksa(WIDTH=20).
Importing module ksa(WIDTH=24).
Importing module ksa1(WIDTH=12).

3.3.1. Analyzing design hierarchy..
Top module:  \conv2d
Used module:     \ksa1(WIDTH=12)
Used module:     \ksa(WIDTH=12)
Used module:     \ksa(WIDTH=16)
Used module:     \ksa(WIDTH=24)
Used module:     \ksa(WIDTH=20)

3.3.2. Analyzing design hierarchy..
Top module:  \conv2d
Used module:     \ksa1(WIDTH=12)
Used module:     \ksa(WIDTH=12)
Used module:     \ksa(WIDTH=16)
Used module:     \ksa(WIDTH=24)
Used module:     \ksa(WIDTH=20)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module ksa1(WIDTH=12).
Optimizing module ksa(WIDTH=24).
Optimizing module ksa(WIDTH=20).
Optimizing module ksa(WIDTH=16).
Optimizing module ksa(WIDTH=12).
Optimizing module conv2d.
<suppressed ~168 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module ksa1(WIDTH=12).
Deleting now unused module ksa(WIDTH=24).
Deleting now unused module ksa(WIDTH=20).
Deleting now unused module ksa(WIDTH=16).
Deleting now unused module ksa(WIDTH=12).
<suppressed ~21 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~3 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 104 unused cells and 3051 unused wires.
<suppressed ~409 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module conv2d...
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [0]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [10]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [1]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [2]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [3]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [4]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [5]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [6]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [7]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [8]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [9]
    wire \pk2.c_gen [10]
Found and reported 11 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $verific$i1027$conv2d.v:1124$2533: \filter_reload -> 1'0
      Replacing known input bits on port A of cell $verific$i1014$conv2d.v:1113$2524: \filter_reload -> 1'1
      Replacing known input bits on port A of cell $verific$i357$conv2d.v:607$1098: \i_bias_wen -> 1'0
      Replacing known input bits on port A of cell $verific$i727$conv2d.v:843$1320: \i_pixel_wen -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~115 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
    New ctrl vector for $pmux cell $verific$Select_1181$conv2d.v:1245$2617: { $verific$n11580$198 $verific$n11243$183 $verific$n11249$189 }
    New ctrl vector for $pmux cell $verific$Select_1184$conv2d.v:1245$2620: { $verific$n11243$183 $verific$n11249$189 }
    New ctrl vector for $pmux cell $verific$Select_1194$conv2d.v:1245$2629: { $verific$n11615$206 $verific$n11256$196 }
    New ctrl vector for $pmux cell $verific$Select_1197$conv2d.v:1245$2632: { $verific$n11617$208 $verific$n11618$209 }
    New ctrl vector for $pmux cell $verific$Select_1203$conv2d.v:1245$2636: { $verific$n11636$212 $verific$n11249$189 }
    New ctrl vector for $pmux cell $verific$Select_632$conv2d.v:784$1242: { $verific$n6557$87 $auto$opt_reduce.cc:134:opt_pmux$3597 $verific$n6560$90 $verific$n6561$91 }
    New ctrl vector for $pmux cell $verific$Select_633$conv2d.v:784$1243: { $verific$n6557$87 $auto$opt_reduce.cc:134:opt_pmux$3599 $verific$n6560$90 $verific$n6561$91 }
    New ctrl vector for $pmux cell $verific$Select_638$conv2d.v:784$1248: $auto$opt_reduce.cc:134:opt_pmux$3601
    New ctrl vector for $pmux cell $verific$Select_640$conv2d.v:784$1249: $auto$opt_reduce.cc:134:opt_pmux$3603
    New ctrl vector for $pmux cell $verific$Select_643$conv2d.v:784$1252: { $verific$n6698$97 $auto$opt_reduce.cc:134:opt_pmux$3605 $verific$n6560$90 }
    New ctrl vector for $pmux cell $verific$Select_826$conv2d.v:912$1380: { $verific$n8234$126 $verific$n8268$130 }
    New ctrl vector for $pmux cell $verific$Select_828$conv2d.v:912$1381: { $verific$n8234$126 $verific$n8268$130 }
    New ctrl vector for $pmux cell $verific$select_106$conv2d.v:223$781: { $verific$n851$8 $verific$n852$9 $verific$n853$10 $verific$n854$11 $verific$n856$13 $verific$n858$15 }
    New ctrl vector for $pmux cell $verific$select_1164$conv2d.v:1245$2600: { $verific$n11242$182 $verific$n11251$191 $verific$n11256$196 $auto$opt_reduce.cc:134:opt_pmux$3607 }
    New ctrl vector for $pmux cell $verific$select_1165$conv2d.v:1245$2601: { $auto$opt_reduce.cc:134:opt_pmux$3611 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3609 }
    New ctrl vector for $pmux cell $verific$select_1166$conv2d.v:1245$2602: { $auto$opt_reduce.cc:134:opt_pmux$3615 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3613 }
    New ctrl vector for $pmux cell $verific$select_1167$conv2d.v:1245$2603: { $auto$opt_reduce.cc:134:opt_pmux$3619 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3617 }
    New ctrl vector for $pmux cell $verific$select_1168$conv2d.v:1245$2604: { $auto$opt_reduce.cc:134:opt_pmux$3623 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3621 }
    New ctrl vector for $pmux cell $verific$select_1169$conv2d.v:1245$2605: { $auto$opt_reduce.cc:134:opt_pmux$3627 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3625 }
    New ctrl vector for $pmux cell $verific$select_1170$conv2d.v:1245$2606: { $auto$opt_reduce.cc:134:opt_pmux$3631 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3629 }
    New ctrl vector for $pmux cell $verific$select_1171$conv2d.v:1245$2607: { $auto$opt_reduce.cc:134:opt_pmux$3635 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3633 }
    New ctrl vector for $pmux cell $verific$select_1172$conv2d.v:1245$2608: { $auto$opt_reduce.cc:134:opt_pmux$3639 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3637 }
    New ctrl vector for $pmux cell $verific$select_1173$conv2d.v:1245$2609: { $verific$n11242$182 $verific$n11243$183 $verific$n11244$184 $verific$n11245$185 $auto$opt_reduce.cc:134:opt_pmux$3641 $verific$n11248$188 $verific$n11249$189 $verific$n11250$190 $verific$n11251$191 $verific$n11252$192 $verific$n11253$193 $verific$n11254$194 $verific$n11255$195 $verific$n11256$196 $verific$n11257$197 }
    New ctrl vector for $pmux cell $verific$select_1174$conv2d.v:1245$2610: { $verific$n11243$183 $verific$n11249$189 $verific$n11251$191 $verific$n11252$192 $auto$opt_reduce.cc:134:opt_pmux$3643 }
    New ctrl vector for $pmux cell $verific$select_1175$conv2d.v:1245$2611: { $auto$opt_reduce.cc:134:opt_pmux$3647 $auto$opt_reduce.cc:134:opt_pmux$3645 }
    New ctrl vector for $pmux cell $verific$select_1176$conv2d.v:1245$2612: { $auto$opt_reduce.cc:134:opt_pmux$3651 $auto$opt_reduce.cc:134:opt_pmux$3649 }
    New ctrl vector for $pmux cell $verific$select_1177$conv2d.v:1245$2613: { $verific$n11243$183 $verific$n11251$191 $auto$opt_reduce.cc:134:opt_pmux$3653 }
    New ctrl vector for $pmux cell $verific$select_1178$conv2d.v:1245$2614: { $verific$n11243$183 $verific$n11253$193 $auto$opt_reduce.cc:134:opt_pmux$3655 }
    New ctrl vector for $pmux cell $verific$select_1179$conv2d.v:1245$2615: { $verific$n11243$183 $auto$opt_reduce.cc:134:opt_pmux$3657 }
    New ctrl vector for $pmux cell $verific$select_1182$conv2d.v:1245$2618: { $verific$n11243$183 $verific$n11249$189 $verific$n11252$192 $auto$opt_reduce.cc:134:opt_pmux$3659 }
    New ctrl vector for $pmux cell $verific$select_1189$conv2d.v:1245$2625: { $verific$n11251$191 $auto$opt_reduce.cc:134:opt_pmux$3661 }
    New ctrl vector for $pmux cell $verific$select_1190$conv2d.v:1245$2626: { $verific$n11248$188 $verific$n11249$189 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3665 $auto$opt_reduce.cc:134:opt_pmux$3663 }
    New ctrl vector for $pmux cell $verific$select_1191$conv2d.v:1245$2627: { $verific$n11248$188 $verific$n11251$191 $auto$opt_reduce.cc:134:opt_pmux$3667 }
    New ctrl vector for $pmux cell $verific$select_1201$conv2d.v:1245$2634: { $verific$n11249$189 $verific$n11250$190 $verific$n11251$191 $verific$n11252$192 $auto$opt_reduce.cc:134:opt_pmux$3669 }
    New ctrl vector for $pmux cell $verific$select_409$conv2d.v:648$1135: { $verific$n5060$47 $auto$opt_reduce.cc:134:opt_pmux$3671 }
    New ctrl vector for $pmux cell $verific$select_410$conv2d.v:648$1136: $auto$opt_reduce.cc:134:opt_pmux$3673
    New ctrl vector for $pmux cell $verific$select_411$conv2d.v:648$1137: { $verific$n5060$47 $verific$n5061$48 $auto$opt_reduce.cc:134:opt_pmux$3675 }
    New ctrl vector for $pmux cell $verific$select_418$conv2d.v:648$1143: { $verific$n5061$48 $auto$opt_reduce.cc:134:opt_pmux$3677 }
    New ctrl vector for $pmux cell $verific$select_627$conv2d.v:784$1237: { $verific$n6558$88 $verific$n6559$89 $verific$n6560$90 $verific$n6561$91 }
    New ctrl vector for $pmux cell $verific$select_629$conv2d.v:784$1239: { $verific$n6557$87 $verific$n6558$88 $auto$opt_reduce.cc:134:opt_pmux$3679 }
    New ctrl vector for $pmux cell $verific$select_630$conv2d.v:784$1240: { $verific$n6558$88 $verific$n6559$89 $verific$n6560$90 $verific$n6561$91 }
    New ctrl vector for $pmux cell $verific$select_631$conv2d.v:784$1241: { $verific$n6557$87 $verific$n6558$88 $verific$n6559$89 $auto$opt_reduce.cc:134:opt_pmux$3681 }
    New ctrl vector for $pmux cell $verific$select_636$conv2d.v:784$1246: { $verific$n6558$88 $verific$n6559$89 $auto$opt_reduce.cc:134:opt_pmux$3683 }
    New ctrl vector for $pmux cell $verific$select_641$conv2d.v:784$1250: { $verific$n6558$88 $verific$n6559$89 $verific$n6560$90 $auto$opt_reduce.cc:134:opt_pmux$3685 }
    New ctrl vector for $pmux cell $verific$select_75$conv2d.v:164$777: { $verific$n851$8 $verific$n852$9 $verific$n853$10 $verific$n854$11 $verific$n856$13 $verific$n858$15 }
    New ctrl vector for $pmux cell $verific$select_823$conv2d.v:912$1377: { $verific$n8234$126 $auto$opt_reduce.cc:134:opt_pmux$3687 }
    New ctrl vector for $pmux cell $verific$select_824$conv2d.v:912$1378: { $verific$n8236$128 $auto$opt_reduce.cc:134:opt_pmux$3689 }
    New ctrl vector for $pmux cell $verific$select_829$conv2d.v:912$1382: { $verific$n8233$125 $verific$n8234$126 $auto$opt_reduce.cc:134:opt_pmux$3691 }
    New ctrl vector for $pmux cell $verific$select_830$conv2d.v:912$1383: { $verific$n8234$126 $verific$n8236$128 $auto$opt_reduce.cc:134:opt_pmux$3693 }
    New ctrl vector for $pmux cell $verific$select_836$conv2d.v:912$1388: { $verific$n8234$126 $auto$opt_reduce.cc:134:opt_pmux$3695 }
    New ctrl vector for $pmux cell $verific$select_838$conv2d.v:912$1390: { $verific$n8234$126 $auto$opt_reduce.cc:134:opt_pmux$3697 }
  Optimizing cells in module \conv2d.
Performed a total of 53 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$write2_reg$conv2d.v:1246$2675 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$wdata2_reg$conv2d.v:785$1274 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$total_pixels_done_reg$conv2d.v:1246$2661 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$total_filters_done_reg$conv2d.v:1246$2655 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat37_reg$conv2d.v:92$743 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat26_reg$conv2d.v:92$742 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat15_reg$conv2d.v:92$741 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat04_reg$conv2d.v:92$740 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$running_reg$conv2d.v:1246$2657 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$result_base_reg$conv2d.v:785$1272 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$reset_bias_address_reg$conv2d.v:785$1297 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixels_read_reg$conv2d.v:913$1393 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixel_start_reg$conv2d.v:913$1400 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixel_select_reg$conv2d.v:1246$2673 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$p2_raddr_reg$conv2d.v:1246$2643 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$p1_raddr_reg$conv2d.v:1246$2642 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$next_buffer_reg$conv2d.v:1246$2672 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_more_pixels_reg$conv2d.v:1246$2660 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_more_filters_reg$conv2d.v:1246$2659 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_ext_acc_reg$conv2d.v:1246$2662 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_buffer_reg$conv2d.v:913$1402 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$last_start2d_reg$conv2d.v:785$1296 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_wen_reg$conv2d.v:785$1283 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_req_reg$conv2d.v:785$1282 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_rdata_reg$conv2d.v:785$1299 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wreq_reg$conv2d.v:785$1281 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wen_reg$conv2d.v:785$1291 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wdata_reg$conv2d.v:785$1273 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_rreq_reg$conv2d.v:785$1280 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_rdata_reg$conv2d.v:785$1298 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_wen_reg$conv2d.v:913$1395 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_req_reg$conv2d.v:913$1396 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_rdata_reg$conv2d.v:913$1403 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_sat_reg$conv2d.v:1246$2646 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_wen_reg$conv2d.v:913$1397 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_wdata_reg$conv2d.v:913$1399 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_waddr_reg$conv2d.v:913$1398 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_raddr_reg$conv2d.v:1246$2651 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_outsel_reg$conv2d.v:1246$2650 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mult2_coef_reg$conv2d.v:1246$2677 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mult1_coef_reg$conv2d.v:1246$2676 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_math_mode_reg$conv2d.v:1246$2647 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mac_clr_reg$conv2d.v:1246$2648 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mac_clken_reg$conv2d.v:1246$2649 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_wdata_reg$conv2d.v:785$1287 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_waddr_reg$conv2d.v:785$1286 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_raddr_reg$conv2d.v:1246$2652 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter2_wen_reg$conv2d.v:785$1289 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter1_wen_reg$conv2d.v:785$1288 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_done2d_reg$conv2d.v:1246$2656 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_csel_reg$conv2d.v:1246$2645 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_wen_reg$conv2d.v:785$1284 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_wdata_reg$conv2d.v:785$1285 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_waddr_reg$conv2d.v:785$1277 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_raddr_reg$conv2d.v:785$1276 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i3_t2_waddr_reg$conv2d.v:785$1255 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i2_t2_waddr_reg$conv2d.v:785$1254 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i1_t2_waddr_reg$conv2d.v:785$1253 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_writechannels_reg$conv2d.v:785$1295 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_loadacc_reg$conv2d.v:785$1261 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getpixels_reg$conv2d.v:913$1391 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getfilters_reg$conv2d.v:785$1259 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getbias_reg$conv2d.v:785$1260 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_conv2d_reg$conv2d.v:1246$2644 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fract_select_reg$conv2d.v:1246$2674 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_loaded_reg$conv2d.v:785$1256 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_done_reg$conv2d.v:1246$2654 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_complete_reg$conv2d.v:785$1294 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_stride_reg$conv2d.v:785$1257 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_start_reg$conv2d.v:785$1292 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_space_left_reg$conv2d.v:785$1293 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_reload_reg$conv2d.v:1246$2658 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_channels_reg$conv2d.v:785$1290 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$copy_acc_reg$conv2d.v:1246$2663 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$channels_loaded_reg$conv2d.v:913$1392 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$channels_done_reg$conv2d.v:1246$2653 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$buffers_used_reg$conv2d.v:913$1401 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias_loaded_reg$conv2d.v:785$1279 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias_base_addr_reg$conv2d.v:785$1278 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias7_reg$conv2d.v:785$1269 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias6_reg$conv2d.v:785$1268 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias5_reg$conv2d.v:785$1267 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias4_reg$conv2d.v:785$1266 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias3_reg$conv2d.v:785$1265 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias2_reg$conv2d.v:785$1264 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias1_reg$conv2d.v:785$1263 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias0_reg$conv2d.v:785$1262 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$add_stride_reg$conv2d.v:785$1258 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc7_reg$conv2d.v:1246$2671 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc6_reg$conv2d.v:1246$2670 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc5_reg$conv2d.v:1246$2669 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc4_reg$conv2d.v:1246$2668 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc3_reg$conv2d.v:1246$2667 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc2_reg$conv2d.v:1246$2666 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc1_reg$conv2d.v:1246$2665 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc0_reg$conv2d.v:1246$2664 ($aldff) from module conv2d.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 3 unused cells and 31 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~113 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking conv2d.fract_select as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register conv2d.fsm_conv2d.
Found FSM state register conv2d.fsm_getbias.
Found FSM state register conv2d.fsm_getpixels.
Not marking conv2d.i_outsel as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\fsm_conv2d' from module `\conv2d'.
  found $adff cell for state register: $verific$fsm_conv2d_reg$conv2d.v:1246$2644
  root of input selection tree: $verific$n11461$707
  found reset state: 5'00000 (from async reset)
  found ctrl input: $verific$n11257$197
  found ctrl input: $verific$n11256$196
  found ctrl input: $verific$n11255$195
  found ctrl input: $verific$n11254$194
  found ctrl input: $verific$n11253$193
  found ctrl input: $verific$n11252$192
  found ctrl input: $verific$n11251$191
  found ctrl input: $verific$n11250$190
  found ctrl input: $verific$n11249$189
  found ctrl input: $verific$n11248$188
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$3641
  found ctrl input: $verific$n11245$185
  found ctrl input: $verific$n11244$184
  found ctrl input: $verific$n11243$183
  found ctrl input: $verific$n11242$182
  found ctrl input: \start2d
  found state code: 5'01100
  found ctrl input: $verific$n11095$177
  found state code: 5'01001
  found state code: 5'01000
  found state code: 5'00100
  found state code: 5'00011
  found ctrl input: $verific$n10441$167
  found ctrl input: $verific$n10472$171
  found state code: 5'00010
  found state code: 5'00001
  found ctrl input: \filter_reload
  found ctrl input: $verific$n10079$157
  found ctrl input: $verific$n10042$153
  found state code: 5'00110
  found state code: 5'00111
  found state code: 5'01111
  found ctrl input: $verific$n9562$137
  found ctrl input: $verific$n9563$138
  found ctrl input: $verific$n9583$139
  found ctrl input: $verific$n9612$140
  found state code: 5'00101
  found state code: 5'01010
  found ctrl output: $verific$n11242$182
  found ctrl output: $verific$n11243$183
  found ctrl output: $verific$n11244$184
  found ctrl output: $verific$n11245$185
  found ctrl output: $verific$n11246$186
  found ctrl output: $verific$n11247$187
  found ctrl output: $verific$n11248$188
  found ctrl output: $verific$n11249$189
  found ctrl output: $verific$n11250$190
  found ctrl output: $verific$n11251$191
  found ctrl output: $verific$n11252$192
  found ctrl output: $verific$n11253$193
  found ctrl output: $verific$n11254$194
  found ctrl output: $verific$n11255$195
  found ctrl output: $verific$n11256$196
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$3641 $verific$n11257$197 $verific$n11095$177 $verific$n10472$171 $verific$n10441$167 $verific$n10079$157 $verific$n10042$153 $verific$n9612$140 $verific$n9583$139 $verific$n9563$138 $verific$n9562$137 \filter_reload \start2d }
  ctrl outputs: { $verific$n11461$707 $verific$n11256$196 $verific$n11255$195 $verific$n11254$194 $verific$n11253$193 $verific$n11252$192 $verific$n11251$191 $verific$n11250$190 $verific$n11249$189 $verific$n11248$188 $verific$n11247$187 $verific$n11246$186 $verific$n11245$185 $verific$n11244$184 $verific$n11243$183 $verific$n11242$182 }
  transition:    5'00000 13'------0------ ->    5'00000 20'00000000000001000000
  transition:    5'00000 13'------1------ ->    5'00110 20'00110000000001000000
  transition:    5'01000 13'------------- ->    5'00001 20'00001000000100000000
  transition:    5'00100 13'--0---------- ->    5'01001 20'01001001000000000000
  transition:    5'00100 13'--1---------- ->    5'01000 20'01000001000000000000
  transition:    5'01100 13'------------0 ->    5'00000 20'00000100000000000000
  transition:    5'01100 13'------------1 ->    5'01100 20'01100100000000000000
  transition:    5'00010 13'------------- ->    5'00011 20'00011000010000000000
  transition:    5'01010 13'----------0-- ->    5'01010 20'01010000000000000010
  transition:    5'01010 13'--------001-- ->    5'00111 20'00111000000000000010
  transition:    5'01010 13'-------0101-- ->    5'00111 20'00111000000000000010
  transition:    5'01010 13'-------1101-- ->    5'00101 20'00101000000000000010
  transition:    5'01010 13'---------11-- ->    5'00111 20'00111000000000000010
  transition:    5'00110 13'-----------0- ->    5'00001 20'00001000000010000000
  transition:    5'00110 13'-----0-----1- ->    5'00110 20'00110000000010000000
  transition:    5'00110 13'-----1-----1- ->    5'00000 20'00000000000010000000
  transition:    5'00001 13'----0-------- ->    5'00001 20'00001000001000000000
  transition:    5'00001 13'---01-------- ->    5'00001 20'00001000001000000000
  transition:    5'00001 13'---11-------- ->    5'00010 20'00010000001000000000
  transition:    5'01001 13'------------- ->    5'01010 20'01010000000000000001
  transition:    5'00101 13'------------- ->    5'01100 20'01100010000000000000
  transition:    5'00011 13'------------- ->    5'00100 20'00100000100000000000
  transition:    5'00111 13'------------- ->    5'00110 20'00110000000000010000
  transition:    5'01111 13'------------- ->    5'00111 20'00111000000000001000
Extracting FSM `\fsm_getbias' from module `\conv2d'.
  found $adff cell for state register: $verific$fsm_getbias_reg$conv2d.v:785$1260
  root of input selection tree: $verific$n5122$425
  found reset state: 3'000 (from async reset)
  found ctrl input: $verific$n5063$50
  found ctrl input: $verific$n5062$49
  found ctrl input: $verific$n5061$48
  found ctrl input: $verific$n5060$47
  found ctrl input: \i_done2d
  found ctrl input: \tcdm3_valid
  found ctrl input: $verific$n4916$41
  found state code: 3'010
  found ctrl input: \start2d
  found state code: 3'001
  found ctrl output: $verific$n5060$47
  found ctrl output: $verific$n5061$48
  found ctrl output: $verific$n5062$49
  ctrl inputs: { $verific$n5063$50 $verific$n4916$41 \i_done2d \tcdm3_valid \start2d }
  ctrl outputs: { $verific$n5122$425 $verific$n5062$49 $verific$n5061$48 $verific$n5060$47 }
  transition:      3'000 5'----0 ->      3'000 6'000001
  transition:      3'000 5'----1 ->      3'001 6'001001
  transition:      3'010 5'--0-- ->      3'010 6'010100
  transition:      3'010 5'--1-- ->      3'000 6'000100
  transition:      3'001 5'---0- ->      3'001 6'001010
  transition:      3'001 5'-0-1- ->      3'001 6'001010
  transition:      3'001 5'-1-1- ->      3'010 6'010010
Extracting FSM `\fsm_getpixels' from module `\conv2d'.
  found $adff cell for state register: $verific$fsm_getpixels_reg$conv2d.v:913$1391
  root of input selection tree: $verific$n8296$544
  found reset state: 3'000 (from async reset)
  found ctrl input: $verific$n8237$129
  found ctrl input: $verific$n8236$128
  found ctrl input: $verific$n8235$127
  found ctrl input: $verific$n8234$126
  found ctrl input: $verific$n8233$125
  found ctrl input: $verific$n8211$121
  found state code: 3'001
  found ctrl input: \i_done2d
  found ctrl input: \load_more_filters
  found ctrl input: \tcdm1_valid
  found ctrl input: $verific$n7947$106
  found ctrl input: $verific$n8018$110
  found state code: 3'011
  found state code: 3'010
  found ctrl input: \start2d
  found ctrl output: $verific$n8233$125
  found ctrl output: $verific$n8234$126
  found ctrl output: $verific$n8235$127
  found ctrl output: $verific$n8236$128
  ctrl inputs: { $verific$n8237$129 $verific$n8211$121 $verific$n8018$110 $verific$n7947$106 \load_more_filters \i_done2d \tcdm1_valid \start2d }
  ctrl outputs: { $verific$n8296$544 $verific$n8236$128 $verific$n8235$127 $verific$n8234$126 $verific$n8233$125 }
  transition:      3'000 8'-------0 ->      3'000 7'0000001
  transition:      3'000 8'-------1 ->      3'001 7'0010001
  transition:      3'010 8'----00-- ->      3'010 7'0100100
  transition:      3'010 8'----10-- ->      3'000 7'0000100
  transition:      3'010 8'-----1-- ->      3'000 7'0000100
  transition:      3'001 8'------0- ->      3'001 7'0010010
  transition:      3'001 8'---0--1- ->      3'001 7'0010010
  transition:      3'001 8'--01--1- ->      3'011 7'0110010
  transition:      3'001 8'--11--1- ->      3'010 7'0100010
  transition:      3'011 8'-0------ ->      3'001 7'0011000
  transition:      3'011 8'-1------ ->      3'011 7'0111000

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\fsm_getpixels$3720' from module `\conv2d'.
  Removing unused input signal $verific$n8237$129.
Optimizing FSM `$fsm$\fsm_getbias$3715' from module `\conv2d'.
  Removing unused input signal $verific$n5063$50.
Optimizing FSM `$fsm$\fsm_conv2d$3698' from module `\conv2d'.
  Removing unreachable state 5'01111.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$3641.
  Removing unused input signal $verific$n11257$197.

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 51 unused cells and 51 unused wires.
<suppressed ~52 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\fsm_conv2d$3698' from module `\conv2d'.
  Removing unused output signal $verific$n11461$707 [0].
  Removing unused output signal $verific$n11461$707 [1].
  Removing unused output signal $verific$n11461$707 [2].
  Removing unused output signal $verific$n11461$707 [3].
  Removing unused output signal $verific$n11461$707 [4].
Optimizing FSM `$fsm$\fsm_getbias$3715' from module `\conv2d'.
  Removing unused output signal $verific$n5122$425 [0].
  Removing unused output signal $verific$n5122$425 [1].
  Removing unused output signal $verific$n5122$425 [2].
Optimizing FSM `$fsm$\fsm_getpixels$3720' from module `\conv2d'.
  Removing unused output signal $verific$n8296$544 [0].
  Removing unused output signal $verific$n8296$544 [1].
  Removing unused output signal $verific$n8296$544 [2].

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\fsm_conv2d$3698' from module `\conv2d' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000 -> 0000
  01000 -> 0001
  00100 -> 0010
  01100 -> 0011
  00010 -> 0100
  01010 -> 0101
  00110 -> 0110
  00001 -> 0111
  01001 -> 1000
  00101 -> 1001
  00011 -> 1010
  00111 -> 1011
Recoding FSM `$fsm$\fsm_getbias$3715' from module `\conv2d' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000 -> 00
  010 -> 01
  001 -> 10
Recoding FSM `$fsm$\fsm_getpixels$3720' from module `\conv2d' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000 -> 00
  010 -> 01
  001 -> 10
  011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\fsm_conv2d$3698' from module `conv2d':
-------------------------------------

  Information on FSM $fsm$\fsm_conv2d$3698 (\fsm_conv2d):

  Number of input signals:   11
  Number of output signals:  15
  Number of state bits:       4

  Input signals:
    0: \start2d
    1: \filter_reload
    2: $verific$n9562$137
    3: $verific$n9563$138
    4: $verific$n9583$139
    5: $verific$n9612$140
    6: $verific$n10042$153
    7: $verific$n10079$157
    8: $verific$n10441$167
    9: $verific$n10472$171
   10: $verific$n11095$177

  Output signals:
    0: $verific$n11242$182
    1: $verific$n11243$183
    2: $verific$n11244$184
    3: $verific$n11245$185
    4: $verific$n11246$186
    5: $verific$n11247$187
    6: $verific$n11248$188
    7: $verific$n11249$189
    8: $verific$n11250$190
    9: $verific$n11251$191
   10: $verific$n11252$192
   11: $verific$n11253$193
   12: $verific$n11254$194
   13: $verific$n11255$195
   14: $verific$n11256$196

  State encoding:
    0:     4'0000  <RESET STATE>
    1:     4'0001
    2:     4'0010
    3:     4'0011
    4:     4'0100
    5:     4'0101
    6:     4'0110
    7:     4'0111
    8:     4'1000
    9:     4'1001
   10:     4'1010
   11:     4'1011

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 11'----0------   ->     0 15'000000001000000
      1:     0 11'----1------   ->     6 15'000000001000000
      2:     1 11'-----------   ->     7 15'000000100000000
      3:     2 11'1----------   ->     1 15'001000000000000
      4:     2 11'0----------   ->     8 15'001000000000000
      5:     3 11'----------0   ->     0 15'100000000000000
      6:     3 11'----------1   ->     3 15'100000000000000
      7:     4 11'-----------   ->    10 15'000010000000000
      8:     5 11'--------0--   ->     5 15'000000000000010
      9:     5 11'-----1101--   ->     9 15'000000000000010
     10:     5 11'------001--   ->    11 15'000000000000010
     11:     5 11'-----0101--   ->    11 15'000000000000010
     12:     5 11'-------11--   ->    11 15'000000000000010
     13:     6 11'---1-----1-   ->     0 15'000000010000000
     14:     6 11'---0-----1-   ->     6 15'000000010000000
     15:     6 11'---------0-   ->     7 15'000000010000000
     16:     7 11'-11--------   ->     4 15'000001000000000
     17:     7 11'--0--------   ->     7 15'000001000000000
     18:     7 11'-01--------   ->     7 15'000001000000000
     19:     8 11'-----------   ->     5 15'000000000000001
     20:     9 11'-----------   ->     3 15'010000000000000
     21:    10 11'-----------   ->     2 15'000100000000000
     22:    11 11'-----------   ->     6 15'000000000010000

-------------------------------------

FSM `$fsm$\fsm_getbias$3715' from module `conv2d':
-------------------------------------

  Information on FSM $fsm$\fsm_getbias$3715 (\fsm_getbias):

  Number of input signals:    4
  Number of output signals:   3
  Number of state bits:       2

  Input signals:
    0: \start2d
    1: \tcdm3_valid
    2: \i_done2d
    3: $verific$n4916$41

  Output signals:
    0: $verific$n5060$47
    1: $verific$n5061$48
    2: $verific$n5062$49

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 4'---0   ->     0 3'001
      1:     0 4'---1   ->     2 3'001
      2:     1 4'-1--   ->     0 3'100
      3:     1 4'-0--   ->     1 3'100
      4:     2 4'1-1-   ->     1 3'010
      5:     2 4'--0-   ->     2 3'010
      6:     2 4'0-1-   ->     2 3'010

-------------------------------------

FSM `$fsm$\fsm_getpixels$3720' from module `conv2d':
-------------------------------------

  Information on FSM $fsm$\fsm_getpixels$3720 (\fsm_getpixels):

  Number of input signals:    7
  Number of output signals:   4
  Number of state bits:       2

  Input signals:
    0: \start2d
    1: \tcdm1_valid
    2: \i_done2d
    3: \load_more_filters
    4: $verific$n7947$106
    5: $verific$n8018$110
    6: $verific$n8211$121

  Output signals:
    0: $verific$n8233$125
    1: $verific$n8234$126
    2: $verific$n8235$127
    3: $verific$n8236$128

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 7'------0   ->     0 4'0001
      1:     0 7'------1   ->     2 4'0001
      2:     1 7'---10--   ->     0 4'0100
      3:     1 7'----1--   ->     0 4'0100
      4:     1 7'---00--   ->     1 4'0100
      5:     2 7'-11--1-   ->     1 4'0010
      6:     2 7'-----0-   ->     2 4'0010
      7:     2 7'--0--1-   ->     2 4'0010
      8:     2 7'-01--1-   ->     3 4'0010
      9:     3 7'0------   ->     2 4'1000
     10:     3 7'1------   ->     3 4'1000

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\fsm_conv2d$3698' from module `\conv2d'.
Mapping FSM `$fsm$\fsm_getbias$3715' from module `\conv2d'.
Mapping FSM `$fsm$\fsm_getpixels$3720' from module `\conv2d'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~24 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~113 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
    New input vector for $reduce_or cell $verific$reduce_or_1206$conv2d.v:1245$2638: { $auto$fsm_map.cc:194:map_fsm$3728 [11:7] $auto$fsm_map.cc:194:map_fsm$3728 [5:4] $auto$fsm_map.cc:194:map_fsm$3728 [1:0] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_or_1202$conv2d.v:1245$2635: { $auto$fsm_map.cc:194:map_fsm$3728 [11:7] $auto$fsm_map.cc:194:map_fsm$3728 [5:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_or_1195$conv2d.v:1245$2630: { $auto$fsm_map.cc:194:map_fsm$3728 [11:8] $auto$fsm_map.cc:194:map_fsm$3728 [6:3] $auto$fsm_map.cc:194:map_fsm$3728 [1] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_or_1193$conv2d.v:1245$2628: { $auto$fsm_map.cc:194:map_fsm$3728 [11:4] $auto$fsm_map.cc:194:map_fsm$3728 [2:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_or_1185$conv2d.v:1245$2621: { $auto$fsm_map.cc:194:map_fsm$3728 [11:6] $auto$fsm_map.cc:194:map_fsm$3728 [4:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_or_1180$conv2d.v:1245$2616: { $auto$fsm_map.cc:194:map_fsm$3728 [11:7] $auto$fsm_map.cc:194:map_fsm$3728 [4:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_nor_1163$conv2d.v:1245$2598: $auto$fsm_map.cc:194:map_fsm$3728
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3668: { $auto$fsm_map.cc:194:map_fsm$3728 [11:8] $auto$fsm_map.cc:194:map_fsm$3728 [5] $auto$fsm_map.cc:194:map_fsm$3728 [3:2] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3666: { $auto$fsm_map.cc:194:map_fsm$3728 [10:8] $auto$fsm_map.cc:194:map_fsm$3728 [6:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3662: { $auto$fsm_map.cc:194:map_fsm$3728 [10] $auto$fsm_map.cc:194:map_fsm$3728 [8:7] $auto$fsm_map.cc:194:map_fsm$3728 [5:3] $auto$fsm_map.cc:194:map_fsm$3728 [1] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3658: { $auto$fsm_map.cc:194:map_fsm$3728 [11:10] $auto$fsm_map.cc:194:map_fsm$3728 [8:7] $auto$fsm_map.cc:194:map_fsm$3728 [3:0] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3656: { $auto$fsm_map.cc:194:map_fsm$3728 [11:10] $auto$fsm_map.cc:194:map_fsm$3728 [8:6] $auto$fsm_map.cc:194:map_fsm$3728 [4:0] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3654: { $auto$fsm_map.cc:194:map_fsm$3728 [11] $auto$fsm_map.cc:194:map_fsm$3728 [9:6] $auto$fsm_map.cc:194:map_fsm$3728 [4:0] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3652: { $auto$fsm_map.cc:194:map_fsm$3728 [11:8] $auto$fsm_map.cc:194:map_fsm$3728 [6] $auto$fsm_map.cc:194:map_fsm$3728 [4:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3648: { $auto$fsm_map.cc:194:map_fsm$3728 [10] $auto$fsm_map.cc:194:map_fsm$3728 [8:6] $auto$fsm_map.cc:194:map_fsm$3728 [4:0] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3642: { $auto$fsm_map.cc:194:map_fsm$3728 [11] $auto$fsm_map.cc:194:map_fsm$3728 [9:8] $auto$fsm_map.cc:194:map_fsm$3728 [3:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3636: { $auto$fsm_map.cc:194:map_fsm$3728 [11] $auto$fsm_map.cc:194:map_fsm$3728 [9] $auto$fsm_map.cc:194:map_fsm$3728 [7:3] $auto$fsm_map.cc:194:map_fsm$3728 [0] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3606: { $auto$fsm_map.cc:194:map_fsm$3728 [11:9] $auto$fsm_map.cc:194:map_fsm$3728 [6:4] $auto$fsm_map.cc:194:map_fsm$3728 [2:0] $verific$n11257$197 }
  Optimizing cells in module \conv2d.
Performed a total of 18 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$total_filters_done_reg$conv2d.v:1246$2655 ($adff) from module conv2d (D = $verific$n11570$713, Q = \total_filters_done).
Adding EN signal on $verific$running_reg$conv2d.v:1246$2657 ($adff) from module conv2d (D = $verific$n11639$214, Q = \running).
Adding EN signal on $verific$pixels_read_reg$conv2d.v:913$1393 ($adff) from module conv2d (D = $verific$n8238$540, Q = \pixels_read).
Adding EN signal on $verific$pixel_start_reg$conv2d.v:913$1400 ($adff) from module conv2d (D = $verific$n8271$132, Q = \pixel_start).
Adding EN signal on $verific$pixel_select_reg$conv2d.v:1246$2673 ($adff) from module conv2d (D = $verific$n11598$715, Q = \pixel_select).
Adding EN signal on $verific$next_buffer_reg$conv2d.v:1246$2672 ($adff) from module conv2d (D = $verific$n11595$203, Q = \next_buffer).
Adding EN signal on $verific$load_more_filters_reg$conv2d.v:1246$2659 ($adff) from module conv2d (D = $verific$n11637$213, Q = \load_more_filters).
Adding EN signal on $verific$load_buffer_reg$conv2d.v:913$1402 ($adff) from module conv2d (D = $verific$n8269$131, Q = \load_buffer).
Adding EN signal on $verific$i_tcdm3_wen_reg$conv2d.v:785$1283 ($adff) from module conv2d (D = $verific$n5111$53, Q = \i_tcdm3_wen).
Adding EN signal on $verific$i_tcdm3_req_reg$conv2d.v:785$1282 ($adff) from module conv2d (D = $verific$n5109$52, Q = \i_tcdm3_req).
Adding EN signal on $verific$i_tcdm3_raddr_reg$conv2d.v:785$1275 ($aldff) from module conv2d (D = $verific$n5087$423 [1:0], Q = \i_tcdm3_raddr [1:0]).
Adding EN signal on $verific$i_tcdm3_raddr_reg$conv2d.v:785$1275 ($aldff) from module conv2d (D = $verific$n5087$423 [19:2], Q = \i_tcdm3_raddr [19:2]).
Adding EN signal on $verific$i_tcdm2_wen_reg$conv2d.v:785$1291 ($adff) from module conv2d (D = $verific$n6636$93, Q = \i_tcdm2_wen).
Adding EN signal on $verific$i_tcdm2_rreq_reg$conv2d.v:785$1280 ($adff) from module conv2d (D = $verific$n6635$92, Q = \i_tcdm2_rreq).
Adding EN signal on $verific$i_tcdm2_raddr_reg$conv2d.v:785$1270 ($aldff) from module conv2d (D = $verific$n6614$497 [1:0], Q = \i_tcdm2_raddr [1:0]).
Adding EN signal on $verific$i_tcdm2_raddr_reg$conv2d.v:785$1270 ($aldff) from module conv2d (D = $verific$n6614$497 [19:2], Q = \i_tcdm2_raddr [19:2]).
Adding EN signal on $verific$i_tcdm1_wen_reg$conv2d.v:913$1395 ($adff) from module conv2d (D = $verific$n8303$135, Q = \i_tcdm1_wen).
Adding EN signal on $verific$i_tcdm1_req_reg$conv2d.v:913$1396 ($adff) from module conv2d (D = $verific$n8301$134, Q = \i_tcdm1_req).
Adding EN signal on $verific$i_tcdm1_addr_reg$conv2d.v:913$1394 ($aldff) from module conv2d (D = $verific$n8272$542 [1:0], Q = \i_tcdm1_addr [1:0]).
Adding EN signal on $verific$i_tcdm1_addr_reg$conv2d.v:913$1394 ($aldff) from module conv2d (D = $verific$n8272$542 [19:2], Q = \i_tcdm1_addr [19:2]).
Adding EN signal on $verific$i_pixel_wdata_reg$conv2d.v:913$1399 ($adff) from module conv2d (D = $verific$n8304$545, Q = \i_pixel_wdata).
Adding EN signal on $verific$i_pixel_raddr_reg$conv2d.v:1246$2651 ($adff) from module conv2d (D = $verific$n11540$711, Q = \i_pixel_raddr).
Adding EN signal on $verific$i_outsel_reg$conv2d.v:1246$2650 ($adff) from module conv2d (D = $verific$n11467$708, Q = \i_outsel).
Adding EN signal on $verific$i_mult2_coef_reg$conv2d.v:1246$2677 ($adff) from module conv2d (D = $verific$n11507$710, Q = \i_mult2_coef).
Adding EN signal on $verific$i_mult1_coef_reg$conv2d.v:1246$2676 ($adff) from module conv2d (D = $verific$n11474$709, Q = \i_mult1_coef).
Adding EN signal on $verific$i_math_mode_reg$conv2d.v:1246$2647 ($adff) from module conv2d (D = $verific$n11258$698, Q = \i_math_mode).
Adding EN signal on $verific$i_mac_clr_reg$conv2d.v:1246$2648 ($adff) from module conv2d (D = $verific$n11619$210, Q = \i_mac_clr).
Adding EN signal on $verific$i_mac_clken_reg$conv2d.v:1246$2649 ($adff) from module conv2d (D = $verific$n11622$211, Q = \i_mac_clken).
Adding EN signal on $verific$i_filter_wdata_reg$conv2d.v:785$1287 ($adff) from module conv2d (D = $verific$n6651$500, Q = \i_filter_wdata).
Adding EN signal on $verific$i_filter_waddr_reg$conv2d.v:785$1286 ($adff) from module conv2d (D = $verific$n6562$493 [0], Q = \i_filter_waddr [0]).
Adding EN signal on $verific$i_filter_waddr_reg$conv2d.v:785$1286 ($adff) from module conv2d (D = $verific$n6562$493 [11:1], Q = \i_filter_waddr [11:1]).
Adding EN signal on $verific$i_filter_raddr_reg$conv2d.v:1246$2652 ($adff) from module conv2d (D = $verific$n11623$718 [1:0], Q = \i_filter_raddr [1:0]).
Adding EN signal on $verific$i_filter_raddr_reg$conv2d.v:1246$2652 ($adff) from module conv2d (D = $verific$n11623$718 [11:2], Q = \i_filter_raddr [11:2]).
Adding EN signal on $verific$i_done2d_reg$conv2d.v:1246$2656 ($adff) from module conv2d (D = $verific$n11616$207, Q = \i_done2d).
Adding EN signal on $verific$i_csel_reg$conv2d.v:1246$2645 ($adff) from module conv2d (D = $verific$n11641$216, Q = \i_csel).
Adding EN signal on $verific$i_bias_wdata_reg$conv2d.v:785$1285 ($adff) from module conv2d (D = $verific$n5126$426, Q = \i_bias_wdata).
Adding EN signal on $verific$i_bias_waddr_reg$conv2d.v:785$1277 ($adff) from module conv2d (D = $verific$n5064$421 [11:2], Q = \i_bias_waddr [11:2]).
Adding EN signal on $verific$i_bias_waddr_reg$conv2d.v:785$1277 ($adff) from module conv2d (D = $verific$n5064$421 [1:0], Q = \i_bias_waddr [1:0]).
Adding EN signal on $verific$fsm_getfilters_reg$conv2d.v:785$1259 ($adff) from module conv2d (D = $verific$n6647$499, Q = \fsm_getfilters).
Adding EN signal on $verific$fract_select_reg$conv2d.v:1246$2674 ($adff) from module conv2d (D = $verific$n11601$716, Q = \fract_select).
Adding EN signal on $verific$filters_loaded_reg$conv2d.v:785$1256 ($adff) from module conv2d (D = $verific$n6604$496, Q = \filters_loaded).
Adding EN signal on $verific$filters_done_reg$conv2d.v:1246$2654 ($adff) from module conv2d (D = $verific$n11582$714 [2:0], Q = \filters_done [2:0]).
Adding EN signal on $verific$filters_done_reg$conv2d.v:1246$2654 ($adff) from module conv2d (D = $verific$n11582$714 [8:3], Q = \filters_done [8:3]).
Adding EN signal on $verific$filter_stride_reg$conv2d.v:785$1257 ($adff) from module conv2d (D = $verific$n6590$495, Q = \filter_stride).
Adding EN signal on $verific$filter_start_reg$conv2d.v:785$1292 ($adff) from module conv2d (D = $verific$n6699$98, Q = \filter_start).
Adding EN signal on $verific$filter_space_left_reg$conv2d.v:785$1293 ($adff) from module conv2d (D = $verific$n6575$494, Q = \filter_space_left).
Adding EN signal on $verific$filter_reload_reg$conv2d.v:1246$2658 ($adff) from module conv2d (D = $verific$n11581$199, Q = \filter_reload).
Adding EN signal on $verific$filter_channels_reg$conv2d.v:785$1290 ($adff) from module conv2d (D = $verific$n6637$498, Q = \filter_channels).
Adding EN signal on $verific$channels_loaded_reg$conv2d.v:913$1392 ($adff) from module conv2d (D = $verific$n8338$546 [1:0], Q = \channels_loaded [1:0]).
Adding EN signal on $verific$channels_loaded_reg$conv2d.v:913$1392 ($adff) from module conv2d (D = $verific$n8338$546 [8:2], Q = \channels_loaded [8:2]).
Adding EN signal on $verific$channels_done_reg$conv2d.v:1246$2653 ($adff) from module conv2d (D = $verific$n11604$717 [1:0], Q = \channels_done [1:0]).
Adding EN signal on $verific$channels_done_reg$conv2d.v:1246$2653 ($adff) from module conv2d (D = $verific$n11604$717 [8:2], Q = \channels_done [8:2]).
Adding EN signal on $verific$buffers_used_reg$conv2d.v:913$1401 ($adff) from module conv2d (D = $verific$n8293$543 [1], Q = \buffers_used [1]).
Adding EN signal on $verific$buffers_used_reg$conv2d.v:913$1401 ($adff) from module conv2d (D = $verific$n8293$543 [0], Q = \buffers_used [0]).
Adding EN signal on $verific$bias_loaded_reg$conv2d.v:785$1279 ($adff) from module conv2d (D = $verific$n5112$424, Q = \bias_loaded).
Adding EN signal on $verific$acc7_reg$conv2d.v:1246$2671 ($adff) from module conv2d (D = $verific$n11436$706 [7:0], Q = \acc7 [7:0]).
Adding EN signal on $verific$acc7_reg$conv2d.v:1246$2671 ($adff) from module conv2d (D = $verific$n11436$706 [15:8], Q = \acc7 [15:8]).
Adding EN signal on $verific$acc7_reg$conv2d.v:1246$2671 ($adff) from module conv2d (D = $verific$n11436$706 [23:16], Q = \acc7 [23:16]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1246$2670 ($adff) from module conv2d (D = $verific$n11411$705 [7:0], Q = \acc6 [7:0]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1246$2670 ($adff) from module conv2d (D = $verific$n11411$705 [15:8], Q = \acc6 [15:8]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1246$2670 ($adff) from module conv2d (D = $verific$n11411$705 [23:16], Q = \acc6 [23:16]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1246$2669 ($adff) from module conv2d (D = $verific$n11386$704 [7:0], Q = \acc5 [7:0]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1246$2669 ($adff) from module conv2d (D = $verific$n11386$704 [15:8], Q = \acc5 [15:8]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1246$2669 ($adff) from module conv2d (D = $verific$n11386$704 [23:16], Q = \acc5 [23:16]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1246$2668 ($adff) from module conv2d (D = $verific$n11361$703 [7:0], Q = \acc4 [7:0]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1246$2668 ($adff) from module conv2d (D = $verific$n11361$703 [15:8], Q = \acc4 [15:8]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1246$2668 ($adff) from module conv2d (D = $verific$n11361$703 [23:16], Q = \acc4 [23:16]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1246$2667 ($adff) from module conv2d (D = $verific$n11336$702 [7:0], Q = \acc3 [7:0]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1246$2667 ($adff) from module conv2d (D = $verific$n11336$702 [15:8], Q = \acc3 [15:8]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1246$2667 ($adff) from module conv2d (D = $verific$n11336$702 [23:16], Q = \acc3 [23:16]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1246$2666 ($adff) from module conv2d (D = $verific$n11311$701 [7:0], Q = \acc2 [7:0]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1246$2666 ($adff) from module conv2d (D = $verific$n11311$701 [15:8], Q = \acc2 [15:8]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1246$2666 ($adff) from module conv2d (D = $verific$n11311$701 [23:16], Q = \acc2 [23:16]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1246$2665 ($adff) from module conv2d (D = $verific$n11286$700 [7:0], Q = \acc1 [7:0]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1246$2665 ($adff) from module conv2d (D = $verific$n11286$700 [15:8], Q = \acc1 [15:8]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1246$2665 ($adff) from module conv2d (D = $verific$n11286$700 [23:16], Q = \acc1 [23:16]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1246$2664 ($adff) from module conv2d (D = $verific$n11261$699 [7:0], Q = \acc0 [7:0]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1246$2664 ($adff) from module conv2d (D = $verific$n11261$699 [15:8], Q = \acc0 [15:8]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1246$2664 ($adff) from module conv2d (D = $verific$n11261$699 [23:16], Q = \acc0 [23:16]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4407 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4407 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4391 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4391 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4292 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4292 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4292 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4194 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4194 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4164 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$bias_base_addr_reg$conv2d.v:785$1278 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$bias_base_addr_reg$conv2d.v:785$1278 ($adff) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4354 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4354 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4354 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$filters_complete_reg$conv2d.v:785$1294 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$filters_complete_reg$conv2d.v:785$1294 ($adff) from module conv2d.
Setting constant 0-bit at position 2 on $verific$filters_complete_reg$conv2d.v:785$1294 ($adff) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4281 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4281 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4281 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4259 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4252 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4252 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$i_pixel_waddr_reg$conv2d.v:913$1398 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$i_pixel_waddr_reg$conv2d.v:913$1398 ($adff) from module conv2d.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 55 unused cells and 87 unused wires.
<suppressed ~56 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~117 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~113 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~465 debug messages>
Removed a total of 155 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4622 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4622 ($adff) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4622 ($adff) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3913 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3913 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3913 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$i_bias_raddr_reg$conv2d.v:785$1276 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$i_bias_raddr_reg$conv2d.v:785$1276 ($adff) from module conv2d.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 1 unused cells and 163 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~117 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$3733 ($eq).
Removed top 3 bits (of 4) from port B of cell conv2d.$verific$equal_67$conv2d.v:121$763 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_68$conv2d.v:122$764 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_69$conv2d.v:123$765 ($eq).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$add_190$conv2d.v:409$1002 ($add).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_202$conv2d.v:418$1011 ($add).
Removed top 10 bits (of 11) from port B of cell conv2d.$verific$add_291$conv2d.v:540$1061 ($add).
Removed top 1 bits (of 4) from mux cell conv2d.$verific$mux_324$conv2d.v:579$1079 ($mux).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_354$conv2d.v:606$1096 ($add).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_381$conv2d.v:630$1110 ($add).
Removed top 8 bits (of 9) from port B of cell conv2d.$verific$add_387$conv2d.v:638$1114 ($add).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$3821 ($eq).
Removed top 10 bits (of 11) from port B of cell conv2d.$verific$add_436$conv2d.v:669$1152 ($add).
Removed top 1 bits (of 15) from port A of cell conv2d.$verific$sub_439$conv2d.v:672$1154 ($sub).
Removed top 11 bits (of 15) from port B of cell conv2d.$verific$sub_439$conv2d.v:672$1154 ($sub).
Removed top 1 bits (of 15) from port Y of cell conv2d.$verific$sub_439$conv2d.v:672$1154 ($sub).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_454$conv2d.v:681$1164 ($add).
Removed top 8 bits (of 9) from port B of cell conv2d.$verific$add_460$conv2d.v:685$1170 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_463$conv2d.v:686$1172 ($eq).
Removed top 1 bits (of 14) from port A of cell conv2d.$verific$sub_464$conv2d.v:687$1173 ($sub).
Removed top 10 bits (of 14) from port B of cell conv2d.$verific$sub_464$conv2d.v:687$1173 ($sub).
Removed top 1 bits (of 14) from port Y of cell conv2d.$verific$sub_464$conv2d.v:687$1173 ($sub).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_466$conv2d.v:688$1176 ($add).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_468$conv2d.v:689$1178 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$LessThan_471$conv2d.v:690$1180 ($lt).
Removed top 2 bits (of 14) from port A of cell conv2d.$verific$LessThan_472$conv2d.v:691$1181 ($le).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_486$conv2d.v:702$1186 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_496$conv2d.v:707$1193 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_506$conv2d.v:712$1200 ($mux).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$equal_623$conv2d.v:667$1231 ($eq).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$select_635$conv2d.v:784$1245 ($pmux).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_724$conv2d.v:842$1318 ($add).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_750$conv2d.v:867$1329 ($add).
Removed top 6 bits (of 7) from port B of cell conv2d.$verific$add_753$conv2d.v:869$1331 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_756$conv2d.v:870$1333 ($eq).
Removed top 15 bits (of 16) from port B of cell conv2d.$verific$add_764$conv2d.v:874$1337 ($add).
Removed top 1 bits (of 17) from port B of cell conv2d.$verific$equal_768$conv2d.v:876$1339 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$3808 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$3732 ($eq).
Removed top 1 bits (of 6) from mux cell conv2d.$verific$mux_1278$conv2d.v:713$2470 ($mux).
Removed top 2 bits (of 3) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$3804 ($eq).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_1018$conv2d.v:1119$2526 ($add).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$add_1063$conv2d.v:1153$2545 ($add).
Removed top 6 bits (of 7) from port B of cell conv2d.$verific$add_1066$conv2d.v:1156$2547 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_1069$conv2d.v:1157$2549 ($eq).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_1091$conv2d.v:1181$2563 ($add).
Removed top 1 bits (of 7) from port B of cell conv2d.$verific$equal_1094$conv2d.v:1182$2565 ($eq).
Removed top 15 bits (of 16) from port B of cell conv2d.$verific$add_1110$conv2d.v:1199$2569 ($add).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$3791 ($eq).
Removed top 11 bits (of 20) from port B of cell conv2d.$flatten\t2_1.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port Y of cell conv2d.$flatten\t2_1.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port A of cell conv2d.$flatten\t2_1.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 11 bits (of 20) from port B of cell conv2d.$flatten\t2_1.$verific$xor_4$ksa.v:12$3134 ($xor).
Removed top 17 bits (of 20) from port B of cell conv2d.$flatten\t2_2.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port Y of cell conv2d.$flatten\t2_2.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port A of cell conv2d.$flatten\t2_2.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 17 bits (of 20) from port B of cell conv2d.$flatten\t2_2.$verific$xor_4$ksa.v:12$3134 ($xor).
Removed top 7 bits (of 20) from port B of cell conv2d.$flatten\t2_3.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port Y of cell conv2d.$flatten\t2_3.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port A of cell conv2d.$flatten\t2_3.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 7 bits (of 20) from port B of cell conv2d.$flatten\t2_3.$verific$xor_4$ksa.v:12$3134 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k0.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k0.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k0.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k0.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k1.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k1.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k1.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k1.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k2.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k2.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k2.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k2.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k3.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k3.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k3.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k3.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k4.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k4.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k4.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k4.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k5.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k5.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k5.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k5.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k6.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k6.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k6.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k6.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k7.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k7.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k7.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k7.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_0.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_0.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_0.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_0.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_1.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_1.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_1.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_1.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_2.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_2.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_2.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_2.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_3.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_3.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_3.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_3.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_4.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_4.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_4.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_4.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_5.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_5.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_5.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_5.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 1 bits (of 3) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$3904 ($eq).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$3895 ($eq).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_6.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_6.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_6.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_6.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$3860 ($eq).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_7.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_7.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_7.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_7.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$3851 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$3736 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$3735 ($eq).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$3774 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$3734 ($eq).
Removed top 9 bits (of 12) from port B of cell conv2d.$flatten\pk1.$verific$and_6$ksa.v:13$2750 ($and).
Removed top 1 bits (of 12) from port Y of cell conv2d.$flatten\pk1.$verific$and_6$ksa.v:13$2750 ($and).
Removed top 1 bits (of 12) from port A of cell conv2d.$flatten\pk1.$verific$and_6$ksa.v:13$2750 ($and).
Removed top 9 bits (of 12) from port B of cell conv2d.$flatten\pk1.$verific$xor_4$ksa.v:12$2748 ($xor).
Removed top 2 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$3731 ($eq).
Removed top 3 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$3730 ($eq).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$or_129$ksa1.v:30$3586 ($or).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$or_129$ksa1.v:30$3586 ($or).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$or_129$ksa1.v:30$3586 ($or).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$and_130$ksa1.v:30$3585 ($and).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$and_130$ksa1.v:30$3585 ($and).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$and_130$ksa1.v:30$3585 ($and).
Removed cell conv2d.$flatten\pk2.$verific$i116$ksa1.v:29$3582 ($and).
Removed top 1 bits (of 12) from port Y of cell conv2d.$flatten\pk2.$verific$and_6$ksa1.v:18$3569 ($and).
Removed top 1 bits (of 12) from port A of cell conv2d.$flatten\pk2.$verific$and_6$ksa1.v:18$3569 ($and).
Removed top 1 bits (of 12) from port B of cell conv2d.$flatten\pk2.$verific$and_6$ksa1.v:18$3569 ($and).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_435$conv2d.v:665$1151 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_621$conv2d.v:782$1229 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_617$conv2d.v:779$1227 ($mux).
Removed top 1 bits (of 11) from wire conv2d.$flatten\pk2.$verific$n203$3562.
Removed top 1 bits (of 11) from wire conv2d.$flatten\pk2.$verific$n206$3564.
Removed top 1 bits (of 4) from wire conv2d.$verific$n4415$382.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5316$431.
Removed top 1 bits (of 15) from wire conv2d.$verific$n5359$435.
Removed top 1 bits (of 14) from wire conv2d.$verific$n5563$444.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5681$450.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5734$455.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5787$460.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5894$467.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6534$490.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6553$492.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6647$499.
Removed top 1 bits (of 3) from wire conv2d.fsm_getfilters.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 122 unused cells and 199 unused wires.
<suppressed ~123 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module conv2d:
  creating $macc model for $verific$add_1018$conv2d.v:1119$2526 ($add).
  creating $macc model for $verific$add_1063$conv2d.v:1153$2545 ($add).
  creating $macc model for $verific$add_1066$conv2d.v:1156$2547 ($add).
  creating $macc model for $verific$add_1091$conv2d.v:1181$2563 ($add).
  creating $macc model for $verific$add_1110$conv2d.v:1199$2569 ($add).
  creating $macc model for $verific$add_190$conv2d.v:409$1002 ($add).
  creating $macc model for $verific$add_202$conv2d.v:418$1011 ($add).
  creating $macc model for $verific$add_291$conv2d.v:540$1061 ($add).
  creating $macc model for $verific$add_354$conv2d.v:606$1096 ($add).
  creating $macc model for $verific$add_381$conv2d.v:630$1110 ($add).
  creating $macc model for $verific$add_387$conv2d.v:638$1114 ($add).
  creating $macc model for $verific$add_436$conv2d.v:669$1152 ($add).
  creating $macc model for $verific$add_454$conv2d.v:681$1164 ($add).
  creating $macc model for $verific$add_460$conv2d.v:685$1170 ($add).
  creating $macc model for $verific$add_466$conv2d.v:688$1176 ($add).
  creating $macc model for $verific$add_468$conv2d.v:689$1178 ($add).
  creating $macc model for $verific$add_724$conv2d.v:842$1318 ($add).
  creating $macc model for $verific$add_750$conv2d.v:867$1329 ($add).
  creating $macc model for $verific$add_753$conv2d.v:869$1331 ($add).
  creating $macc model for $verific$add_764$conv2d.v:874$1337 ($add).
  creating $macc model for $verific$add_903$conv2d.v:1018$2452 ($add).
  creating $macc model for $verific$add_905$conv2d.v:1019$2454 ($add).
  creating $macc model for $verific$add_907$conv2d.v:1020$2456 ($add).
  creating $macc model for $verific$add_909$conv2d.v:1021$2458 ($add).
  creating $macc model for $verific$add_911$conv2d.v:1022$2460 ($add).
  creating $macc model for $verific$add_913$conv2d.v:1023$2462 ($add).
  creating $macc model for $verific$add_915$conv2d.v:1024$2464 ($add).
  creating $macc model for $verific$add_917$conv2d.v:1025$2466 ($add).
  creating $macc model for $verific$add_929$conv2d.v:1041$2476 ($add).
  creating $macc model for $verific$sub_439$conv2d.v:672$1154 ($sub).
  creating $macc model for $verific$sub_464$conv2d.v:687$1173 ($sub).
  creating $macc model for $verific$sub_697$conv2d.v:804$1306 ($sub).
  creating $macc model for $verific$sub_699$conv2d.v:805$1308 ($sub).
  creating $macc model for $verific$sub_701$conv2d.v:806$1310 ($sub).
  creating $macc model for $verific$sub_703$conv2d.v:807$1312 ($sub).
  creating $alu model for $macc $verific$sub_703$conv2d.v:807$1312.
  creating $alu model for $macc $verific$sub_701$conv2d.v:806$1310.
  creating $alu model for $macc $verific$sub_699$conv2d.v:805$1308.
  creating $alu model for $macc $verific$sub_697$conv2d.v:804$1306.
  creating $alu model for $macc $verific$sub_464$conv2d.v:687$1173.
  creating $alu model for $macc $verific$sub_439$conv2d.v:672$1154.
  creating $alu model for $macc $verific$add_929$conv2d.v:1041$2476.
  creating $alu model for $macc $verific$add_917$conv2d.v:1025$2466.
  creating $alu model for $macc $verific$add_915$conv2d.v:1024$2464.
  creating $alu model for $macc $verific$add_913$conv2d.v:1023$2462.
  creating $alu model for $macc $verific$add_911$conv2d.v:1022$2460.
  creating $alu model for $macc $verific$add_909$conv2d.v:1021$2458.
  creating $alu model for $macc $verific$add_907$conv2d.v:1020$2456.
  creating $alu model for $macc $verific$add_905$conv2d.v:1019$2454.
  creating $alu model for $macc $verific$add_903$conv2d.v:1018$2452.
  creating $alu model for $macc $verific$add_764$conv2d.v:874$1337.
  creating $alu model for $macc $verific$add_753$conv2d.v:869$1331.
  creating $alu model for $macc $verific$add_750$conv2d.v:867$1329.
  creating $alu model for $macc $verific$add_724$conv2d.v:842$1318.
  creating $alu model for $macc $verific$add_468$conv2d.v:689$1178.
  creating $alu model for $macc $verific$add_466$conv2d.v:688$1176.
  creating $alu model for $macc $verific$add_460$conv2d.v:685$1170.
  creating $alu model for $macc $verific$add_454$conv2d.v:681$1164.
  creating $alu model for $macc $verific$add_436$conv2d.v:669$1152.
  creating $alu model for $macc $verific$add_387$conv2d.v:638$1114.
  creating $alu model for $macc $verific$add_381$conv2d.v:630$1110.
  creating $alu model for $macc $verific$add_354$conv2d.v:606$1096.
  creating $alu model for $macc $verific$add_291$conv2d.v:540$1061.
  creating $alu model for $macc $verific$add_202$conv2d.v:418$1011.
  creating $alu model for $macc $verific$add_190$conv2d.v:409$1002.
  creating $alu model for $macc $verific$add_1110$conv2d.v:1199$2569.
  creating $alu model for $macc $verific$add_1091$conv2d.v:1181$2563.
  creating $alu model for $macc $verific$add_1066$conv2d.v:1156$2547.
  creating $alu model for $macc $verific$add_1063$conv2d.v:1153$2545.
  creating $alu model for $macc $verific$add_1018$conv2d.v:1119$2526.
  creating $alu model for $verific$LessThan_471$conv2d.v:690$1180 ($lt): new $alu
  creating $alu model for $verific$LessThan_472$conv2d.v:691$1181 ($le): new $alu
  creating $alu model for $verific$LessThan_924$conv2d.v:1033$2472 ($lt): new $alu
  creating $alu cell for $verific$LessThan_924$conv2d.v:1033$2472: $auto$alumacc.cc:485:replace_alu$5416
  creating $alu cell for $verific$LessThan_472$conv2d.v:691$1181: $auto$alumacc.cc:485:replace_alu$5421
  creating $alu cell for $verific$LessThan_471$conv2d.v:690$1180: $auto$alumacc.cc:485:replace_alu$5430
  creating $alu cell for $verific$add_1018$conv2d.v:1119$2526: $auto$alumacc.cc:485:replace_alu$5441
  creating $alu cell for $verific$add_1063$conv2d.v:1153$2545: $auto$alumacc.cc:485:replace_alu$5444
  creating $alu cell for $verific$add_1066$conv2d.v:1156$2547: $auto$alumacc.cc:485:replace_alu$5447
  creating $alu cell for $verific$add_1091$conv2d.v:1181$2563: $auto$alumacc.cc:485:replace_alu$5450
  creating $alu cell for $verific$add_1110$conv2d.v:1199$2569: $auto$alumacc.cc:485:replace_alu$5453
  creating $alu cell for $verific$add_190$conv2d.v:409$1002: $auto$alumacc.cc:485:replace_alu$5456
  creating $alu cell for $verific$add_202$conv2d.v:418$1011: $auto$alumacc.cc:485:replace_alu$5459
  creating $alu cell for $verific$add_291$conv2d.v:540$1061: $auto$alumacc.cc:485:replace_alu$5462
  creating $alu cell for $verific$add_354$conv2d.v:606$1096: $auto$alumacc.cc:485:replace_alu$5465
  creating $alu cell for $verific$add_381$conv2d.v:630$1110: $auto$alumacc.cc:485:replace_alu$5468
  creating $alu cell for $verific$add_387$conv2d.v:638$1114: $auto$alumacc.cc:485:replace_alu$5471
  creating $alu cell for $verific$add_436$conv2d.v:669$1152: $auto$alumacc.cc:485:replace_alu$5474
  creating $alu cell for $verific$add_454$conv2d.v:681$1164: $auto$alumacc.cc:485:replace_alu$5477
  creating $alu cell for $verific$add_460$conv2d.v:685$1170: $auto$alumacc.cc:485:replace_alu$5480
  creating $alu cell for $verific$add_466$conv2d.v:688$1176: $auto$alumacc.cc:485:replace_alu$5483
  creating $alu cell for $verific$add_468$conv2d.v:689$1178: $auto$alumacc.cc:485:replace_alu$5486
  creating $alu cell for $verific$add_724$conv2d.v:842$1318: $auto$alumacc.cc:485:replace_alu$5489
  creating $alu cell for $verific$add_750$conv2d.v:867$1329: $auto$alumacc.cc:485:replace_alu$5492
  creating $alu cell for $verific$add_753$conv2d.v:869$1331: $auto$alumacc.cc:485:replace_alu$5495
  creating $alu cell for $verific$add_764$conv2d.v:874$1337: $auto$alumacc.cc:485:replace_alu$5498
  creating $alu cell for $verific$add_903$conv2d.v:1018$2452: $auto$alumacc.cc:485:replace_alu$5501
  creating $alu cell for $verific$add_905$conv2d.v:1019$2454: $auto$alumacc.cc:485:replace_alu$5504
  creating $alu cell for $verific$add_907$conv2d.v:1020$2456: $auto$alumacc.cc:485:replace_alu$5507
  creating $alu cell for $verific$add_909$conv2d.v:1021$2458: $auto$alumacc.cc:485:replace_alu$5510
  creating $alu cell for $verific$add_911$conv2d.v:1022$2460: $auto$alumacc.cc:485:replace_alu$5513
  creating $alu cell for $verific$add_913$conv2d.v:1023$2462: $auto$alumacc.cc:485:replace_alu$5516
  creating $alu cell for $verific$add_915$conv2d.v:1024$2464: $auto$alumacc.cc:485:replace_alu$5519
  creating $alu cell for $verific$add_917$conv2d.v:1025$2466: $auto$alumacc.cc:485:replace_alu$5522
  creating $alu cell for $verific$add_929$conv2d.v:1041$2476: $auto$alumacc.cc:485:replace_alu$5525
  creating $alu cell for $verific$sub_439$conv2d.v:672$1154: $auto$alumacc.cc:485:replace_alu$5528
  creating $alu cell for $verific$sub_464$conv2d.v:687$1173: $auto$alumacc.cc:485:replace_alu$5531
  creating $alu cell for $verific$sub_697$conv2d.v:804$1306: $auto$alumacc.cc:485:replace_alu$5534
  creating $alu cell for $verific$sub_699$conv2d.v:805$1308: $auto$alumacc.cc:485:replace_alu$5537
  creating $alu cell for $verific$sub_701$conv2d.v:806$1310: $auto$alumacc.cc:485:replace_alu$5540
  creating $alu cell for $verific$sub_703$conv2d.v:807$1312: $auto$alumacc.cc:485:replace_alu$5543
  created 38 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~19 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~126 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$5163: { $auto$fsm_map.cc:194:map_fsm$3728 [11:7] $auto$fsm_map.cc:194:map_fsm$3728 [5:2] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$5057: { $auto$fsm_map.cc:194:map_fsm$3728 [11] $auto$fsm_map.cc:194:map_fsm$3728 [9:7] $auto$fsm_map.cc:194:map_fsm$3728 [4:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4657: { $auto$fsm_map.cc:194:map_fsm$3728 [10:9] $auto$fsm_map.cc:118:implement_pattern_cache$3757 $auto$fsm_map.cc:118:implement_pattern_cache$3761 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4673: { $auto$fsm_map.cc:118:implement_pattern_cache$3775 $auto$fsm_map.cc:118:implement_pattern_cache$3779 $auto$fsm_map.cc:194:map_fsm$3728 [11:8] $auto$fsm_map.cc:118:implement_pattern_cache$3757 $auto$fsm_map.cc:118:implement_pattern_cache$3770 $auto$fsm_map.cc:118:implement_pattern_cache$3766 $auto$fsm_map.cc:118:implement_pattern_cache$3761 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$5135: { $auto$fsm_map.cc:194:map_fsm$3728 [11:7] $auto$fsm_map.cc:194:map_fsm$3728 [5:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4669: { $auto$fsm_map.cc:118:implement_pattern_cache$3784 $auto$fsm_map.cc:118:implement_pattern_cache$3788 $auto$fsm_map.cc:118:implement_pattern_cache$3792 $auto$fsm_map.cc:118:implement_pattern_cache$3797 $auto$fsm_map.cc:118:implement_pattern_cache$3801 $auto$fsm_map.cc:194:map_fsm$3728 [1] }
  Optimizing cells in module \conv2d.
Performed a total of 6 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 2 unused cells and 32 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> stat

3.22. Printing statistics.

=== conv2d ===

   Number of wires:               2003
   Number of wire bits:          13340
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3113
     $adff                          46
     $adffe                         66
     $aldff                          1
     $aldffe                         6
     $alu                           38
     $and                         1125
     $bmux                          22
     $eq                            49
     $logic_not                      6
     $mux                          409
     $ne                            55
     $not                           58
     $or                           738
     $reduce_and                    42
     $reduce_or                     57
     $xor                          395


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$ea402187f386206c0840504755479bf827f47707\_90_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
Using template $paramod$c703ee6d780d90e162c7eed92bfd050bee00636f\_90_alu for cells of type $alu.
Using template $paramod$b2626aff51a34e60b9c57dceb41667aaf5650a38\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using template $paramod$f28fc3f2e267d7716249e826e8c90c34ca9542c1\_90_alu for cells of type $alu.
Using template $paramod$49641a5ace7a8dbedd31c417f5a1b54fcecf6c7d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $aldff.
Using extmapper simplemap for cells of type $aldffe.
Using template $paramod$0a77e3c00010cb33e399decd813a7380c6e25cba\_90_alu for cells of type $alu.
Using template $paramod$f30f8fc2e30bd83d28cb1ad43b9d9ec083109075\_90_alu for cells of type $alu.
Using template $paramod$0d6d95e3fa0eb6b4a427f21fbcbdc6321e6ab338\_80_rs_alu for cells of type $alu.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$46d3f1a4a915912bab1067a0beb0fb376719baeb\_90_alu for cells of type $alu.
Using template $paramod$403c17aef119cccdd585ba431bb1c77ec6e3c700\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
No more expansions possible.
<suppressed ~7640 debug messages>

yosys> stat

3.24. Printing statistics.

=== conv2d ===

   Number of wires:               4412
   Number of wire bits:          60320
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              18133
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_AND_                       2609
     $_DFFE_PN0N_                   99
     $_DFFE_PN0P_                  365
     $_DFFE_PN1N_                    1
     $_DFFE_PN1P_                   21
     $_DFF_PN0_                    575
     $_DFF_PN1_                      3
     $_MUX_                      10100
     $_NOT_                        524
     $_OR_                        1780
     $_XOR_                       1912
     adder_carry                    64


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~6969 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~3279 debug messages>
Removed a total of 1093 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$15262 ($_DFFE_PN1P_) from module conv2d (D = $auto$rtlil.cc:2464:Mux$4932 [1], Q = \i_math_mode [1]).
Adding EN signal on $auto$ff.cc:262:slice$15140 ($_DFFE_PN0P_) from module conv2d (D = $auto$rtlil.cc:2464:Mux$5250 [0], Q = \filter_stride [0]).
Adding EN signal on $auto$ff.cc:262:slice$15141 ($_DFFE_PN0P_) from module conv2d (D = $auto$rtlil.cc:2464:Mux$5250 [1], Q = \filter_stride [1]).
Adding EN signal on $auto$ff.cc:262:slice$15142 ($_DFFE_PN0P_) from module conv2d (D = $auto$rtlil.cc:2464:Mux$5250 [2], Q = \filter_stride [2]).
Adding EN signal on $auto$ff.cc:262:slice$15261 ($_DFFE_PN0P_) from module conv2d (D = $auto$rtlil.cc:2464:Mux$4932 [0], Q = \i_math_mode [0]).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 1363 unused cells and 2607 unused wires.
<suppressed ~1364 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~36 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$21510 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7363 [11], Q = \i_bias_raddr [11]).
Adding EN signal on $auto$ff.cc:262:slice$21509 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7363 [10], Q = \i_bias_raddr [10]).
Adding EN signal on $auto$ff.cc:262:slice$21508 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7363 [9], Q = \i_bias_raddr [9]).
Adding EN signal on $auto$ff.cc:262:slice$21507 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7363 [8], Q = \i_bias_raddr [8]).
Adding EN signal on $auto$ff.cc:262:slice$21506 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7363 [7], Q = \i_bias_raddr [7]).
Adding EN signal on $auto$ff.cc:262:slice$21505 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7363 [6], Q = \i_bias_raddr [6]).
Adding EN signal on $auto$ff.cc:262:slice$21504 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7363 [5], Q = \i_bias_raddr [5]).
Adding EN signal on $auto$ff.cc:262:slice$15269 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7179 [11], Q = \bias_base_addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$15268 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7179 [10], Q = \bias_base_addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$15267 ($_DFF_PN1_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7179 [9], Q = \bias_base_addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$15266 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7179 [8], Q = \bias_base_addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$15265 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7179 [7], Q = \bias_base_addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$15264 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7179 [6], Q = \bias_base_addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$15263 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7179 [5], Q = \bias_base_addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$13621 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11384 [3], Q = \fsm_writechannels [3]).
Adding EN signal on $auto$ff.cc:262:slice$13620 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11384 [2], Q = \fsm_writechannels [2]).
Adding EN signal on $auto$ff.cc:262:slice$13619 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11384 [1], Q = \fsm_writechannels [1]).
Adding EN signal on $auto$ff.cc:262:slice$13618 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11384 [0], Q = \fsm_writechannels [0]).
Adding EN signal on $auto$ff.cc:262:slice$13581 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11887 [0], Q = \i_tcdm2_wreq).
Adding EN signal on $auto$ff.cc:262:slice$13558 ($_DFF_PN0_) from module conv2d (D = \sat04 [7], Q = \wdata2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$13557 ($_DFF_PN0_) from module conv2d (D = \sat04 [6], Q = \wdata2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$13556 ($_DFF_PN0_) from module conv2d (D = \sat04 [5], Q = \wdata2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$13555 ($_DFF_PN0_) from module conv2d (D = \sat04 [4], Q = \wdata2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$13554 ($_DFF_PN0_) from module conv2d (D = \sat04 [3], Q = \wdata2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$13553 ($_DFF_PN0_) from module conv2d (D = \sat04 [2], Q = \wdata2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$13552 ($_DFF_PN0_) from module conv2d (D = \sat04 [1], Q = \wdata2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$13551 ($_DFF_PN0_) from module conv2d (D = \sat04 [0], Q = \wdata2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$13550 ($_DFF_PN0_) from module conv2d (D = \sat15 [7], Q = \wdata2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$13549 ($_DFF_PN0_) from module conv2d (D = \sat15 [6], Q = \wdata2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$13548 ($_DFF_PN0_) from module conv2d (D = \sat15 [5], Q = \wdata2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$13547 ($_DFF_PN0_) from module conv2d (D = \sat15 [4], Q = \wdata2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$13546 ($_DFF_PN0_) from module conv2d (D = \sat15 [3], Q = \wdata2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$13545 ($_DFF_PN0_) from module conv2d (D = \sat15 [2], Q = \wdata2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$13544 ($_DFF_PN0_) from module conv2d (D = \sat15 [1], Q = \wdata2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$13543 ($_DFF_PN0_) from module conv2d (D = \sat15 [0], Q = \wdata2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$13542 ($_DFF_PN0_) from module conv2d (D = \sat26 [7], Q = \wdata2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$13541 ($_DFF_PN0_) from module conv2d (D = \sat26 [6], Q = \wdata2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$13540 ($_DFF_PN0_) from module conv2d (D = \sat26 [5], Q = \wdata2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$13539 ($_DFF_PN0_) from module conv2d (D = \sat26 [4], Q = \wdata2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$13538 ($_DFF_PN0_) from module conv2d (D = \sat26 [3], Q = \wdata2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$13537 ($_DFF_PN0_) from module conv2d (D = \sat26 [2], Q = \wdata2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$13536 ($_DFF_PN0_) from module conv2d (D = \sat26 [1], Q = \wdata2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$13535 ($_DFF_PN0_) from module conv2d (D = \sat26 [0], Q = \wdata2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$13534 ($_DFF_PN0_) from module conv2d (D = \sat37 [7], Q = \wdata2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$13533 ($_DFF_PN0_) from module conv2d (D = \sat37 [6], Q = \wdata2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$13532 ($_DFF_PN0_) from module conv2d (D = \sat37 [5], Q = \wdata2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$13531 ($_DFF_PN0_) from module conv2d (D = \sat37 [4], Q = \wdata2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$13530 ($_DFF_PN0_) from module conv2d (D = \sat37 [3], Q = \wdata2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$13529 ($_DFF_PN0_) from module conv2d (D = \sat37 [2], Q = \wdata2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$13528 ($_DFF_PN0_) from module conv2d (D = \sat37 [1], Q = \wdata2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13527 ($_DFF_PN0_) from module conv2d (D = \sat37 [0], Q = \wdata2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$13526 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [31], Q = \i_tcdm2_wdata [31]).
Adding EN signal on $auto$ff.cc:262:slice$13525 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [30], Q = \i_tcdm2_wdata [30]).
Adding EN signal on $auto$ff.cc:262:slice$13524 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [29], Q = \i_tcdm2_wdata [29]).
Adding EN signal on $auto$ff.cc:262:slice$13523 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [28], Q = \i_tcdm2_wdata [28]).
Adding EN signal on $auto$ff.cc:262:slice$13522 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [27], Q = \i_tcdm2_wdata [27]).
Adding EN signal on $auto$ff.cc:262:slice$13521 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [26], Q = \i_tcdm2_wdata [26]).
Adding EN signal on $auto$ff.cc:262:slice$13520 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [25], Q = \i_tcdm2_wdata [25]).
Adding EN signal on $auto$ff.cc:262:slice$13519 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [24], Q = \i_tcdm2_wdata [24]).
Adding EN signal on $auto$ff.cc:262:slice$13518 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [23], Q = \i_tcdm2_wdata [23]).
Adding EN signal on $auto$ff.cc:262:slice$13517 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [22], Q = \i_tcdm2_wdata [22]).
Adding EN signal on $auto$ff.cc:262:slice$13516 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [21], Q = \i_tcdm2_wdata [21]).
Adding EN signal on $auto$ff.cc:262:slice$13515 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [20], Q = \i_tcdm2_wdata [20]).
Adding EN signal on $auto$ff.cc:262:slice$13514 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [19], Q = \i_tcdm2_wdata [19]).
Adding EN signal on $auto$ff.cc:262:slice$13513 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [18], Q = \i_tcdm2_wdata [18]).
Adding EN signal on $auto$ff.cc:262:slice$13512 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [17], Q = \i_tcdm2_wdata [17]).
Adding EN signal on $auto$ff.cc:262:slice$13511 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [16], Q = \i_tcdm2_wdata [16]).
Adding EN signal on $auto$ff.cc:262:slice$13510 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [15], Q = \i_tcdm2_wdata [15]).
Adding EN signal on $auto$ff.cc:262:slice$13509 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [14], Q = \i_tcdm2_wdata [14]).
Adding EN signal on $auto$ff.cc:262:slice$13508 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [13], Q = \i_tcdm2_wdata [13]).
Adding EN signal on $auto$ff.cc:262:slice$13507 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [12], Q = \i_tcdm2_wdata [12]).
Adding EN signal on $auto$ff.cc:262:slice$13506 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [11], Q = \i_tcdm2_wdata [11]).
Adding EN signal on $auto$ff.cc:262:slice$13505 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [10], Q = \i_tcdm2_wdata [10]).
Adding EN signal on $auto$ff.cc:262:slice$13504 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [9], Q = \i_tcdm2_wdata [9]).
Adding EN signal on $auto$ff.cc:262:slice$13503 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [8], Q = \i_tcdm2_wdata [8]).
Adding EN signal on $auto$ff.cc:262:slice$13502 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [7], Q = \i_tcdm2_wdata [7]).
Adding EN signal on $auto$ff.cc:262:slice$13501 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [6], Q = \i_tcdm2_wdata [6]).
Adding EN signal on $auto$ff.cc:262:slice$13500 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [5], Q = \i_tcdm2_wdata [5]).
Adding EN signal on $auto$ff.cc:262:slice$13499 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [4], Q = \i_tcdm2_wdata [4]).
Adding EN signal on $auto$ff.cc:262:slice$13498 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [3], Q = \i_tcdm2_wdata [3]).
Adding EN signal on $auto$ff.cc:262:slice$13497 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [2], Q = \i_tcdm2_wdata [2]).
Adding EN signal on $auto$ff.cc:262:slice$13496 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [1], Q = \i_tcdm2_wdata [1]).
Adding EN signal on $auto$ff.cc:262:slice$13495 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$12278 [0], Q = \i_tcdm2_wdata [0]).
Adding EN signal on $auto$ff.cc:262:slice$13494 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [19], Q = \result_base [19]).
Adding EN signal on $auto$ff.cc:262:slice$13493 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [18], Q = \result_base [18]).
Adding EN signal on $auto$ff.cc:262:slice$13492 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [17], Q = \result_base [17]).
Adding EN signal on $auto$ff.cc:262:slice$13491 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [16], Q = \result_base [16]).
Adding EN signal on $auto$ff.cc:262:slice$13490 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [15], Q = \result_base [15]).
Adding EN signal on $auto$ff.cc:262:slice$13489 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [14], Q = \result_base [14]).
Adding EN signal on $auto$ff.cc:262:slice$13488 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [13], Q = \result_base [13]).
Adding EN signal on $auto$ff.cc:262:slice$13487 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [12], Q = \result_base [12]).
Adding EN signal on $auto$ff.cc:262:slice$13486 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [11], Q = \result_base [11]).
Adding EN signal on $auto$ff.cc:262:slice$13485 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [10], Q = \result_base [10]).
Adding EN signal on $auto$ff.cc:262:slice$13484 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [9], Q = \result_base [9]).
Adding EN signal on $auto$ff.cc:262:slice$13483 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [8], Q = \result_base [8]).
Adding EN signal on $auto$ff.cc:262:slice$13482 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [7], Q = \result_base [7]).
Adding EN signal on $auto$ff.cc:262:slice$13481 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [6], Q = \result_base [6]).
Adding EN signal on $auto$ff.cc:262:slice$13480 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [5], Q = \result_base [5]).
Adding EN signal on $auto$ff.cc:262:slice$13479 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [4], Q = \result_base [4]).
Adding EN signal on $auto$ff.cc:262:slice$13478 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [3], Q = \result_base [3]).
Adding EN signal on $auto$ff.cc:262:slice$13477 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [2], Q = \result_base [2]).
Adding EN signal on $auto$ff.cc:262:slice$13476 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [1], Q = \result_base [1]).
Adding EN signal on $auto$ff.cc:262:slice$13475 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11105 [0], Q = \result_base [0]).
Adding EN signal on $auto$ff.cc:262:slice$13448 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [42], Q = \bias7 [18]).
Adding EN signal on $auto$ff.cc:262:slice$13447 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [41], Q = \bias7 [17]).
Adding EN signal on $auto$ff.cc:262:slice$13446 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [40], Q = \bias7 [16]).
Adding EN signal on $auto$ff.cc:262:slice$13445 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [39], Q = \bias7 [15]).
Adding EN signal on $auto$ff.cc:262:slice$13444 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [38], Q = \bias7 [14]).
Adding EN signal on $auto$ff.cc:262:slice$13443 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [37], Q = \bias7 [13]).
Adding EN signal on $auto$ff.cc:262:slice$13442 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [36], Q = \bias7 [12]).
Adding EN signal on $auto$ff.cc:262:slice$13441 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [35], Q = \bias7 [11]).
Adding EN signal on $auto$ff.cc:262:slice$13440 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [34], Q = \bias7 [10]).
Adding EN signal on $auto$ff.cc:262:slice$13439 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [33], Q = \bias7 [9]).
Adding EN signal on $auto$ff.cc:262:slice$13438 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [32], Q = \bias7 [8]).
Adding EN signal on $auto$ff.cc:262:slice$13437 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [31], Q = \bias7 [7]).
Adding EN signal on $auto$ff.cc:262:slice$13436 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [30], Q = \bias7 [6]).
Adding EN signal on $auto$ff.cc:262:slice$13435 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [29], Q = \bias7 [5]).
Adding EN signal on $auto$ff.cc:262:slice$13434 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [28], Q = \bias7 [4]).
Adding EN signal on $auto$ff.cc:262:slice$13433 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [27], Q = \bias7 [3]).
Adding EN signal on $auto$ff.cc:262:slice$13432 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [26], Q = \bias7 [2]).
Adding EN signal on $auto$ff.cc:262:slice$13431 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [25], Q = \bias7 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13430 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$10283 [24], Q = \bias7 [0]).
Adding EN signal on $auto$ff.cc:262:slice$13424 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [18], Q = \bias6 [18]).
Adding EN signal on $auto$ff.cc:262:slice$13423 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [17], Q = \bias6 [17]).
Adding EN signal on $auto$ff.cc:262:slice$13422 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [16], Q = \bias6 [16]).
Adding EN signal on $auto$ff.cc:262:slice$13421 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [15], Q = \bias6 [15]).
Adding EN signal on $auto$ff.cc:262:slice$13420 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [14], Q = \bias6 [14]).
Adding EN signal on $auto$ff.cc:262:slice$13419 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [13], Q = \bias6 [13]).
Adding EN signal on $auto$ff.cc:262:slice$13418 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [12], Q = \bias6 [12]).
Adding EN signal on $auto$ff.cc:262:slice$13417 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [11], Q = \bias6 [11]).
Adding EN signal on $auto$ff.cc:262:slice$13416 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [10], Q = \bias6 [10]).
Adding EN signal on $auto$ff.cc:262:slice$13415 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [9], Q = \bias6 [9]).
Adding EN signal on $auto$ff.cc:262:slice$13414 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [8], Q = \bias6 [8]).
Adding EN signal on $auto$ff.cc:262:slice$13413 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [7], Q = \bias6 [7]).
Adding EN signal on $auto$ff.cc:262:slice$13412 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [6], Q = \bias6 [6]).
Adding EN signal on $auto$ff.cc:262:slice$13411 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [5], Q = \bias6 [5]).
Adding EN signal on $auto$ff.cc:262:slice$13410 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [4], Q = \bias6 [4]).
Adding EN signal on $auto$ff.cc:262:slice$13409 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [3], Q = \bias6 [3]).
Adding EN signal on $auto$ff.cc:262:slice$13408 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [2], Q = \bias6 [2]).
Adding EN signal on $auto$ff.cc:262:slice$13407 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [1], Q = \bias6 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13406 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9968 [0], Q = \bias6 [0]).
Adding EN signal on $auto$ff.cc:262:slice$13400 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [18], Q = \bias5 [18]).
Adding EN signal on $auto$ff.cc:262:slice$13399 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [17], Q = \bias5 [17]).
Adding EN signal on $auto$ff.cc:262:slice$13398 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [16], Q = \bias5 [16]).
Adding EN signal on $auto$ff.cc:262:slice$13397 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [15], Q = \bias5 [15]).
Adding EN signal on $auto$ff.cc:262:slice$13396 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [14], Q = \bias5 [14]).
Adding EN signal on $auto$ff.cc:262:slice$13395 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [13], Q = \bias5 [13]).
Adding EN signal on $auto$ff.cc:262:slice$13394 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [12], Q = \bias5 [12]).
Adding EN signal on $auto$ff.cc:262:slice$13393 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [11], Q = \bias5 [11]).
Adding EN signal on $auto$ff.cc:262:slice$13392 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [10], Q = \bias5 [10]).
Adding EN signal on $auto$ff.cc:262:slice$13391 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [9], Q = \bias5 [9]).
Adding EN signal on $auto$ff.cc:262:slice$13390 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [8], Q = \bias5 [8]).
Adding EN signal on $auto$ff.cc:262:slice$13389 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [7], Q = \bias5 [7]).
Adding EN signal on $auto$ff.cc:262:slice$13388 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [6], Q = \bias5 [6]).
Adding EN signal on $auto$ff.cc:262:slice$13387 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [5], Q = \bias5 [5]).
Adding EN signal on $auto$ff.cc:262:slice$13386 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [4], Q = \bias5 [4]).
Adding EN signal on $auto$ff.cc:262:slice$13385 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [3], Q = \bias5 [3]).
Adding EN signal on $auto$ff.cc:262:slice$13384 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [2], Q = \bias5 [2]).
Adding EN signal on $auto$ff.cc:262:slice$13383 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [1], Q = \bias5 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13382 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9604 [0], Q = \bias5 [0]).
Adding EN signal on $auto$ff.cc:262:slice$13376 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [18], Q = \bias4 [18]).
Adding EN signal on $auto$ff.cc:262:slice$13375 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [17], Q = \bias4 [17]).
Adding EN signal on $auto$ff.cc:262:slice$13374 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [16], Q = \bias4 [16]).
Adding EN signal on $auto$ff.cc:262:slice$13373 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [15], Q = \bias4 [15]).
Adding EN signal on $auto$ff.cc:262:slice$13372 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [14], Q = \bias4 [14]).
Adding EN signal on $auto$ff.cc:262:slice$13371 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [13], Q = \bias4 [13]).
Adding EN signal on $auto$ff.cc:262:slice$13370 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [12], Q = \bias4 [12]).
Adding EN signal on $auto$ff.cc:262:slice$13369 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [11], Q = \bias4 [11]).
Adding EN signal on $auto$ff.cc:262:slice$13368 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [10], Q = \bias4 [10]).
Adding EN signal on $auto$ff.cc:262:slice$13367 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [9], Q = \bias4 [9]).
Adding EN signal on $auto$ff.cc:262:slice$13366 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [8], Q = \bias4 [8]).
Adding EN signal on $auto$ff.cc:262:slice$13365 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [7], Q = \bias4 [7]).
Adding EN signal on $auto$ff.cc:262:slice$13364 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [6], Q = \bias4 [6]).
Adding EN signal on $auto$ff.cc:262:slice$13363 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [5], Q = \bias4 [5]).
Adding EN signal on $auto$ff.cc:262:slice$13362 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [4], Q = \bias4 [4]).
Adding EN signal on $auto$ff.cc:262:slice$13361 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [3], Q = \bias4 [3]).
Adding EN signal on $auto$ff.cc:262:slice$13360 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [2], Q = \bias4 [2]).
Adding EN signal on $auto$ff.cc:262:slice$13359 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [1], Q = \bias4 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13358 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$9240 [0], Q = \bias4 [0]).
Adding EN signal on $auto$ff.cc:262:slice$13352 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [18], Q = \bias3 [18]).
Adding EN signal on $auto$ff.cc:262:slice$13351 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [17], Q = \bias3 [17]).
Adding EN signal on $auto$ff.cc:262:slice$13350 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [16], Q = \bias3 [16]).
Adding EN signal on $auto$ff.cc:262:slice$13349 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [15], Q = \bias3 [15]).
Adding EN signal on $auto$ff.cc:262:slice$13348 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [14], Q = \bias3 [14]).
Adding EN signal on $auto$ff.cc:262:slice$13347 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [13], Q = \bias3 [13]).
Adding EN signal on $auto$ff.cc:262:slice$13346 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [12], Q = \bias3 [12]).
Adding EN signal on $auto$ff.cc:262:slice$13345 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [11], Q = \bias3 [11]).
Adding EN signal on $auto$ff.cc:262:slice$13344 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [10], Q = \bias3 [10]).
Adding EN signal on $auto$ff.cc:262:slice$13343 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [9], Q = \bias3 [9]).
Adding EN signal on $auto$ff.cc:262:slice$13342 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [8], Q = \bias3 [8]).
Adding EN signal on $auto$ff.cc:262:slice$13341 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [7], Q = \bias3 [7]).
Adding EN signal on $auto$ff.cc:262:slice$13340 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [6], Q = \bias3 [6]).
Adding EN signal on $auto$ff.cc:262:slice$13339 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [5], Q = \bias3 [5]).
Adding EN signal on $auto$ff.cc:262:slice$13338 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [4], Q = \bias3 [4]).
Adding EN signal on $auto$ff.cc:262:slice$13337 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [3], Q = \bias3 [3]).
Adding EN signal on $auto$ff.cc:262:slice$13336 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [2], Q = \bias3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$13335 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [1], Q = \bias3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13334 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8876 [0], Q = \bias3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$13328 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [18], Q = \bias2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$13327 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [17], Q = \bias2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$13326 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [16], Q = \bias2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$13325 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [15], Q = \bias2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$13324 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [14], Q = \bias2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$13323 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [13], Q = \bias2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$13322 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [12], Q = \bias2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$13321 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [11], Q = \bias2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$13320 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [10], Q = \bias2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$13319 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [9], Q = \bias2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$13318 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [8], Q = \bias2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$13317 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [7], Q = \bias2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$13316 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [6], Q = \bias2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$13315 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [5], Q = \bias2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$13314 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [4], Q = \bias2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$13313 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [3], Q = \bias2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$13312 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [2], Q = \bias2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$13311 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [1], Q = \bias2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13310 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8512 [0], Q = \bias2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$13304 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [18], Q = \bias1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$13303 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [17], Q = \bias1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$13302 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [16], Q = \bias1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$13301 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [15], Q = \bias1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$13300 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [14], Q = \bias1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$13299 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [13], Q = \bias1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$13298 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [12], Q = \bias1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$13297 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [11], Q = \bias1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$13296 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [10], Q = \bias1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$13295 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [9], Q = \bias1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$13294 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [8], Q = \bias1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$13293 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [7], Q = \bias1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$13292 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [6], Q = \bias1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$13291 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [5], Q = \bias1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$13290 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [4], Q = \bias1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$13289 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [3], Q = \bias1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$13288 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [2], Q = \bias1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$13287 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [1], Q = \bias1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13286 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$8148 [0], Q = \bias1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$13280 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [18], Q = \bias0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$13279 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [17], Q = \bias0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$13278 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [16], Q = \bias0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$13277 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [15], Q = \bias0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$13276 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [14], Q = \bias0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$13275 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [13], Q = \bias0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$13274 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [12], Q = \bias0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$13273 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [11], Q = \bias0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$13272 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [10], Q = \bias0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$13271 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [9], Q = \bias0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$13270 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [8], Q = \bias0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$13269 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [7], Q = \bias0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$13268 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [6], Q = \bias0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$13267 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [5], Q = \bias0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$13266 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [4], Q = \bias0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$13265 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [3], Q = \bias0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$13264 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [2], Q = \bias0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$13263 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [1], Q = \bias0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13262 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7784 [0], Q = \bias0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$13261 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7440 [3], Q = \fsm_loadacc [3]).
Adding EN signal on $auto$ff.cc:262:slice$13260 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7440 [2], Q = \fsm_loadacc [2]).
Adding EN signal on $auto$ff.cc:262:slice$13259 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7440 [1], Q = \fsm_loadacc [1]).
Adding EN signal on $auto$ff.cc:262:slice$13258 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$7440 [0], Q = \fsm_loadacc [0]).
Adding EN signal on $auto$ff.cc:262:slice$13253 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [12], Q = \add_stride [12]).
Adding EN signal on $auto$ff.cc:262:slice$13252 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [11], Q = \add_stride [11]).
Adding EN signal on $auto$ff.cc:262:slice$13251 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [10], Q = \add_stride [10]).
Adding EN signal on $auto$ff.cc:262:slice$13250 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [9], Q = \add_stride [9]).
Adding EN signal on $auto$ff.cc:262:slice$13249 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [8], Q = \add_stride [8]).
Adding EN signal on $auto$ff.cc:262:slice$13248 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [7], Q = \add_stride [7]).
Adding EN signal on $auto$ff.cc:262:slice$13247 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [6], Q = \add_stride [6]).
Adding EN signal on $auto$ff.cc:262:slice$13246 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [5], Q = \add_stride [5]).
Adding EN signal on $auto$ff.cc:262:slice$13245 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [4], Q = \add_stride [4]).
Adding EN signal on $auto$ff.cc:262:slice$13244 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [3], Q = \add_stride [3]).
Adding EN signal on $auto$ff.cc:262:slice$13243 ($_DFF_PN1_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [2], Q = \add_stride [2]).
Adding EN signal on $auto$ff.cc:262:slice$13242 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [1], Q = \add_stride [1]).
Adding EN signal on $auto$ff.cc:262:slice$13241 ($_DFF_PN0_) from module conv2d (D = $auto$simplemap.cc:309:simplemap_bmux$11311 [0], Q = \add_stride [0]).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 180 unused cells and 1642 unused wires.
<suppressed ~181 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~5352 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~22410 debug messages>
Removed a total of 7470 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 7100 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.25.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~3088 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 220 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~92 debug messages>

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$14040 ($_ALDFFE_PNP_) from module conv2d (D = \ext_pixel_base [1], Q = \i_tcdm1_addr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$14039 ($_ALDFFE_PNP_) from module conv2d (D = \ext_pixel_base [0], Q = \i_tcdm1_addr [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13583 ($_ALDFFE_PNP_) from module conv2d (D = \ext_bias_base [1], Q = \i_tcdm3_raddr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13582 ($_ALDFFE_PNP_) from module conv2d (D = \ext_bias_base [0], Q = \i_tcdm3_raddr [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13580 ($_ALDFFE_PNP_) from module conv2d (D = \ext_filter_base [1], Q = \i_tcdm2_raddr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13579 ($_ALDFFE_PNP_) from module conv2d (D = \ext_filter_base [0], Q = \i_tcdm2_raddr [0], rval = 1'0).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 6 unused cells and 0 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.28.18. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Extracted 5977 gates and 7164 wires to a netlist network with 1185 inputs and 1115 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/conv2d/abc_tmp.scr 
ABC:   #Luts =  2038  Max Lvl =  17  Avg Lvl =   3.19  [   1.56 sec. at Pass 0]
ABC:   #Luts =  1750  Max Lvl =  10  Avg Lvl =   2.66  [  33.10 sec. at Pass 1]
ABC:   #Luts =  1734  Max Lvl =   9  Avg Lvl =   2.61  [   6.00 sec. at Pass 2]
ABC:   #Luts =  1716  Max Lvl =   9  Avg Lvl =   2.69  [  13.41 sec. at Pass 3]
ABC:   #Luts =  1708  Max Lvl =   9  Avg Lvl =   2.63  [   8.73 sec. at Pass 4]
ABC:   #Luts =  1685  Max Lvl =   9  Avg Lvl =   2.63  [  14.56 sec. at Pass 5]
ABC:   #Luts =  1682  Max Lvl =   9  Avg Lvl =   2.63  [   7.90 sec. at Pass 6]
ABC:   #Luts =  1672  Max Lvl =   9  Avg Lvl =   2.55  [  12.16 sec. at Pass 7]
ABC:   #Luts =  1666  Max Lvl =   9  Avg Lvl =   2.62  [   9.12 sec. at Pass 8]
ABC:   #Luts =  1662  Max Lvl =   9  Avg Lvl =   2.59  [  10.59 sec. at Pass 9]
ABC:   #Luts =  1658  Max Lvl =   8  Avg Lvl =   2.56  [   7.89 sec. at Pass 10]
ABC:   #Luts =  1657  Max Lvl =   8  Avg Lvl =   2.58  [  10.31 sec. at Pass 11]
ABC:   #Luts =  1657  Max Lvl =   8  Avg Lvl =   2.58  [   7.26 sec. at Pass 12]
ABC:   #Luts =  1657  Max Lvl =   8  Avg Lvl =   2.58  [  11.93 sec. at Pass 13]
ABC:   #Luts =  1654  Max Lvl =   8  Avg Lvl =   2.57  [   8.57 sec. at Pass 14]
ABC:   #Luts =  1654  Max Lvl =   8  Avg Lvl =   2.57  [   9.72 sec. at Pass 15]
ABC:   #Luts =  1654  Max Lvl =   8  Avg Lvl =   2.57  [   6.28 sec. at Pass 16]
ABC:   #Luts =  1654  Max Lvl =   8  Avg Lvl =   2.57  [   8.43 sec. at Pass 17]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1653
ABC RESULTS:        internal signals:     4864
ABC RESULTS:           input signals:     1185
ABC RESULTS:          output signals:     1115
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 2999 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== conv2d ===

   Number of wires:               1843
   Number of wire bits:           8174
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2684
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_DFFE_PN0N_                   43
     $_DFFE_PN0P_                  635
     $_DFFE_PN1N_                    1
     $_DFFE_PN1P_                   21
     $_DFF_PN0_                    265
     $_DFF_PN1_                      1
     $lut                         1606
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== conv2d ===

   Number of wires:               2003
   Number of wire bits:           8334
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2844
     $_DFFE_PN0N_                   43
     $_DFFE_PN0P_                  635
     $_DFFE_PN1N_                    1
     $_DFFE_PN1P_                   21
     $_DFFSRE_PNNP_                 60
     $_DFFSR_PNN_                   20
     $_DFF_PN0_                    265
     $_DFF_PN1_                      1
     $_ORNOT_                       80
     $_OR_                          80
     $lut                         1606
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFSRE_PNNP_ for cells of type $_DFFSRE_PNNP_.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFFSR_PNN_ for cells of type $_DFFSR_PNN_.
Using template \$_DFFE_PN1P_ for cells of type $_DFFE_PN1P_.
Using template \$_DFFE_PN0N_ for cells of type $_DFFE_PN0N_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using template \$_DFFE_PN1N_ for cells of type $_DFFE_PN1N_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2832 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~27211 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~14784 debug messages>
Removed a total of 4928 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 8249 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~967 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 205 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Extracted 7012 gates and 8154 wires to a netlist network with 1140 inputs and 1227 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/conv2d/abc_tmp.scr 
ABC:   #Luts =  1770  Max Lvl =   8  Avg Lvl =   2.46  [   0.60 sec. at Pass 0]
ABC:   #Luts =  1770  Max Lvl =   8  Avg Lvl =   2.46  [  21.88 sec. at Pass 1]
ABC:   #Luts =  1770  Max Lvl =   8  Avg Lvl =   2.46  [   6.09 sec. at Pass 2]
ABC:   #Luts =  1770  Max Lvl =   8  Avg Lvl =   2.46  [   9.51 sec. at Pass 3]
ABC:   #Luts =  1770  Max Lvl =   8  Avg Lvl =   2.46  [   6.15 sec. at Pass 4]
ABC:   #Luts =  1770  Max Lvl =   8  Avg Lvl =   2.46  [   9.44 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1770
ABC RESULTS:        internal signals:     5787
ABC RESULTS:           input signals:     1140
ABC RESULTS:          output signals:     1227
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 6250 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \conv2d

3.45.2. Analyzing design hierarchy..
Top module:  \conv2d
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== conv2d ===

   Number of wires:               2007
   Number of wire bits:           8338
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2848
     $lut                         1770
     adder_carry                    32
     dffsre                       1046


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 264 unused wires.
<suppressed ~264 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\conv2d'.

Warnings: 80 unique messages, 80 total
End of script. Logfile hash: a110858696, CPU: user 59.83s system 0.19s, MEM: 104.91 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 94% 2x abc (978 sec), 1% 33x opt_dff (19 sec), ...
real 419.38
user 950.83
sys 87.05
