
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl sdpram_infer_read_first.vhd sync_fifo_fwft_infer.vhd

yosys> verific -vhdl sdpram_infer_read_first.vhd sync_fifo_fwft_infer.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'sdpram_infer_read_first.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] sdpram_infer_read_first.vhd:40: analyzing entity 'sdpram_infer_read_first'
VERIFIC-INFO [VHDL-1010] sdpram_infer_read_first.vhd:56: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'sync_fifo_fwft_infer.vhd'
VERIFIC-INFO [VHDL-1012] sync_fifo_fwft_infer.vhd:39: analyzing entity 'sync_fifo_fwft_infer'
VERIFIC-INFO [VHDL-1010] sync_fifo_fwft_infer.vhd:71: analyzing architecture 'behavioral'

yosys> synth_rs -top sync_fifo_fwft_infer -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top sync_fifo_fwft_infer

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] sync_fifo_fwft_infer.vhd:39: processing 'sync_fifo_fwft_infer(behavioral)'
VERIFIC-INFO [VHDL-1067] sdpram_infer_read_first.vhd:40: processing 'sdpram_infer_read_first(gaddress_width=8,gdata_width=32)(behavioral)'
VERIFIC-INFO [VHDL-1754] sdpram_infer_read_first.vhd:62: extracting RAM for identifier 'svRAM'
Importing module sync_fifo_fwft_infer.
Importing module sdpram_infer_read_first(gaddress_width=8,gdata_width=32)(behavioral).

3.3.1. Analyzing design hierarchy..
Top module:  \sync_fifo_fwft_infer
Used module:     \sdpram_infer_read_first(gaddress_width=8,gdata_width=32)(behavioral)

3.3.2. Analyzing design hierarchy..
Top module:  \sync_fifo_fwft_infer
Used module:     \sdpram_infer_read_first(gaddress_width=8,gdata_width=32)(behavioral)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module sdpram_infer_read_first(gaddress_width=8,gdata_width=32)(behavioral).
Optimizing module sync_fifo_fwft_infer.
<suppressed ~2 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module sdpram_infer_read_first(gaddress_width=8,gdata_width=32)(behavioral).
<suppressed ~1 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 0 unused cells and 26 unused wires.
<suppressed ~27 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module sync_fifo_fwft_infer...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$svWriteAddr_reg$sync_fifo_fwft_infer.vhd:151$98 ($aldff) from module sync_fifo_fwft_infer.
Removing never-active async load on $verific$svReadAddr_reg$sync_fifo_fwft_infer.vhd:162$103 ($aldff) from module sync_fifo_fwft_infer.
Removing never-active async load on $verific$svFifoCount_reg$sync_fifo_fwft_infer.vhd:333$179 ($aldff) from module sync_fifo_fwft_infer.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$svWriteAddr_reg$sync_fifo_fwft_infer.vhd:151$98 ($dff) from module sync_fifo_fwft_infer (D = $verific$n119$67, Q = \svWriteAddr, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$211 ($sdff) from module sync_fifo_fwft_infer (D = $verific$n101$65, Q = \svWriteAddr).
Adding SRST signal on $verific$svReadAddr_reg$sync_fifo_fwft_infer.vhd:162$103 ($dff) from module sync_fifo_fwft_infer (D = $verific$n177$71, Q = \svReadAddr, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$213 ($sdff) from module sync_fifo_fwft_infer (D = $verific$n159$69, Q = \svReadAddr).
Adding SRST signal on $verific$svFifoCount_reg$sync_fifo_fwft_infer.vhd:333$179 ($dff) from module sync_fifo_fwft_infer (D = $verific$n319$80, Q = \svFifoCount, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$215 ($sdff) from module sync_fifo_fwft_infer (D = $verific$n319$80, Q = \svFifoCount).
Adding SRST signal on $verific$sProgFull_reg$sync_fifo_fwft_infer.vhd:333$184 ($dff) from module sync_fifo_fwft_infer (D = $verific$n407$45, Q = \sProgFull, rval = 1'0).
Adding SRST signal on $verific$sProgEmpty_reg$sync_fifo_fwft_infer.vhd:333$185 ($dff) from module sync_fifo_fwft_infer (D = $verific$n425$51, Q = \sProgEmpty, rval = 1'1).
Adding SRST signal on $verific$sFifoUnderflow_reg$sync_fifo_fwft_infer.vhd:333$187 ($dff) from module sync_fifo_fwft_infer (D = $verific$n431$55, Q = \sFifoUnderflow, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$221 ($sdff) from module sync_fifo_fwft_infer (D = 1'1, Q = \sFifoUnderflow).
Adding SRST signal on $verific$sFifoOverflow_reg$sync_fifo_fwft_infer.vhd:333$186 ($dff) from module sync_fifo_fwft_infer (D = $verific$n428$53, Q = \sFifoOverflow, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$223 ($sdff) from module sync_fifo_fwft_infer (D = 1'1, Q = \sFifoOverflow).
Adding SRST signal on $verific$sFifoFull_reg$sync_fifo_fwft_infer.vhd:333$180 ($dff) from module sync_fifo_fwft_infer (D = $verific$n340$21, Q = \sFifoFull, rval = 1'0).
Adding SRST signal on $verific$sFifoEmpty_reg$sync_fifo_fwft_infer.vhd:333$181 ($dff) from module sync_fifo_fwft_infer (D = $verific$n353$29, Q = \sFifoEmpty, rval = 1'1).
Adding SRST signal on $verific$sAlmostFull_reg$sync_fifo_fwft_infer.vhd:333$182 ($dff) from module sync_fifo_fwft_infer (D = $verific$n371$34, Q = \sAlmostFull, rval = 1'0).
Adding SRST signal on $verific$sAlmostEmpty_reg$sync_fifo_fwft_infer.vhd:333$183 ($dff) from module sync_fifo_fwft_infer (D = $verific$n389$39, Q = \sAlmostEmpty, rval = 1'1).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 15 unused cells and 15 unused wires.
<suppressed ~16 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.
<suppressed ~1 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 7 bits (of 8) from port B of cell sync_fifo_fwft_infer.$verific$add_8$sync_fifo_fwft_infer.vhd:149$94 ($add).
Removed top 7 bits (of 8) from port B of cell sync_fifo_fwft_infer.$verific$add_17$sync_fifo_fwft_infer.vhd:160$99 ($add).
Removed top 1 bits (of 9) from port A of cell sync_fifo_fwft_infer.$verific$sub_28$sync_fifo_fwft_infer.vhd:181$110 ($sub).
Removed top 8 bits (of 9) from port B of cell sync_fifo_fwft_infer.$verific$sub_28$sync_fifo_fwft_infer.vhd:181$110 ($sub).
Removed top 1 bits (of 9) from port Y of cell sync_fifo_fwft_infer.$verific$sub_28$sync_fifo_fwft_infer.vhd:181$110 ($sub).
Removed top 7 bits (of 8) from port B of cell sync_fifo_fwft_infer.$verific$add_30$sync_fifo_fwft_infer.vhd:194$113 ($add).
Removed top 7 bits (of 8) from port B of cell sync_fifo_fwft_infer.$verific$add_46$sync_fifo_fwft_infer.vhd:214$119 ($add).
Removed top 1 bits (of 9) from port A of cell sync_fifo_fwft_infer.$verific$sub_50$sync_fifo_fwft_infer.vhd:216$123 ($sub).
Removed top 8 bits (of 9) from port B of cell sync_fifo_fwft_infer.$verific$sub_50$sync_fifo_fwft_infer.vhd:216$123 ($sub).
Removed top 1 bits (of 9) from port Y of cell sync_fifo_fwft_infer.$verific$sub_50$sync_fifo_fwft_infer.vhd:216$123 ($sub).
Removed top 7 bits (of 8) from port B of cell sync_fifo_fwft_infer.$verific$equal_67$sync_fifo_fwft_infer.vhd:235$136 ($eq).
Removed top 6 bits (of 8) from port B of cell sync_fifo_fwft_infer.$verific$equal_98$sync_fifo_fwft_infer.vhd:269$149 ($eq).
Removed top 1 bits (of 9) from wire sync_fifo_fwft_infer.$verific$n291$77.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module sync_fifo_fwft_infer:
  creating $macc model for $verific$add_17$sync_fifo_fwft_infer.vhd:160$99 ($add).
  creating $macc model for $verific$add_30$sync_fifo_fwft_infer.vhd:194$113 ($add).
  creating $macc model for $verific$add_46$sync_fifo_fwft_infer.vhd:214$119 ($add).
  creating $macc model for $verific$add_8$sync_fifo_fwft_infer.vhd:149$94 ($add).
  creating $macc model for $verific$sub_28$sync_fifo_fwft_infer.vhd:181$110 ($sub).
  creating $macc model for $verific$sub_50$sync_fifo_fwft_infer.vhd:216$123 ($sub).
  creating $alu model for $macc $verific$sub_50$sync_fifo_fwft_infer.vhd:216$123.
  creating $alu model for $macc $verific$sub_28$sync_fifo_fwft_infer.vhd:181$110.
  creating $alu model for $macc $verific$add_8$sync_fifo_fwft_infer.vhd:149$94.
  creating $alu model for $macc $verific$add_46$sync_fifo_fwft_infer.vhd:214$119.
  creating $alu model for $macc $verific$add_30$sync_fifo_fwft_infer.vhd:194$113.
  creating $alu model for $macc $verific$add_17$sync_fifo_fwft_infer.vhd:160$99.
  creating $alu model for $verific$LessThan_128$sync_fifo_fwft_infer.vhd:299$156 ($lt): new $alu
  creating $alu model for $verific$LessThan_146$sync_fifo_fwft_infer.vhd:317$162 ($lt): new $alu
  creating $alu model for $verific$equal_122$sync_fifo_fwft_infer.vhd:293$155 ($eq): merged with $verific$LessThan_128$sync_fifo_fwft_infer.vhd:299$156.
  creating $alu model for $verific$equal_140$sync_fifo_fwft_infer.vhd:311$161 ($eq): merged with $verific$LessThan_146$sync_fifo_fwft_infer.vhd:317$162.
  creating $alu cell for $verific$LessThan_146$sync_fifo_fwft_infer.vhd:317$162, $verific$equal_140$sync_fifo_fwft_infer.vhd:311$161: $auto$alumacc.cc:485:replace_alu$232
  creating $alu cell for $verific$LessThan_128$sync_fifo_fwft_infer.vhd:299$156, $verific$equal_122$sync_fifo_fwft_infer.vhd:293$155: $auto$alumacc.cc:485:replace_alu$243
  creating $alu cell for $verific$add_17$sync_fifo_fwft_infer.vhd:160$99: $auto$alumacc.cc:485:replace_alu$250
  creating $alu cell for $verific$add_30$sync_fifo_fwft_infer.vhd:194$113: $auto$alumacc.cc:485:replace_alu$253
  creating $alu cell for $verific$add_46$sync_fifo_fwft_infer.vhd:214$119: $auto$alumacc.cc:485:replace_alu$256
  creating $alu cell for $verific$add_8$sync_fifo_fwft_infer.vhd:149$94: $auto$alumacc.cc:485:replace_alu$259
  creating $alu cell for $verific$sub_28$sync_fifo_fwft_infer.vhd:181$110: $auto$alumacc.cc:485:replace_alu$262
  creating $alu cell for $verific$sub_50$sync_fifo_fwft_infer.vhd:216$123: $auto$alumacc.cc:485:replace_alu$265
  created 8 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 2 unused cells and 6 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing sync_fifo_fwft_infer.sdpram_inst.svRAM write port 0.

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\sdpram_inst.svRAM'[0] in module `\sync_fifo_fwft_infer': no output FF found.
Checking read port address `\sdpram_inst.svRAM'[0] in module `\sync_fifo_fwft_infer': address FF has fully-defined init value, not supported.

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> stat

3.22. Printing statistics.

=== sync_fifo_fwft_infer ===

   Number of wires:                115
   Number of wire bits:            564
   Number of public wires:          44
   Number of public wire bits:     324
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 71
     $alu                            8
     $and                            8
     $eq                             7
     $logic_not                      1
     $mem_v2                         1
     $mux                           24
     $not                            7
     $or                             1
     $reduce_and                     2
     $reduce_bool                    1
     $sdff                           6
     $sdffe                          5


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$089a78a8a0966fcc055e2feb3e29c6d35fa032d4\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~671 debug messages>

yosys> stat

3.24. Printing statistics.

=== sync_fifo_fwft_infer ===

   Number of wires:                474
   Number of wire bits:           8482
   Number of public wires:          44
   Number of public wire bits:     324
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                708
     $_AND_                        166
     $_MUX_                        106
     $_NOT_                         79
     $_OR_                         130
     $_SDFFE_PP0P_                  26
     $_SDFF_PP0_                     3
     $_SDFF_PP1_                     3
     $_XOR_                        178
     $mem_v2                         1
     adder_carry                    16


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.
<suppressed ~314 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
<suppressed ~222 debug messages>
Removed a total of 74 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 59 unused cells and 355 unused wires.
<suppressed ~60 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.25.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.
<suppressed ~37 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \sdpram_inst.svRAM in module \sync_fifo_fwft_infer:
  created 256 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 255 $mux cells.
  write interface: 256 write mux blocks.

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.
<suppressed ~16 debug messages>

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~257 debug messages>

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$440 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$832
        $auto$simplemap.cc:86:simplemap_bitop$791


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 0 unused cells and 520 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.
<suppressed ~1 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~258 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\sdpram_inst.svRAM[9]$1284 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[9]).
Adding EN signal on $memory\sdpram_inst.svRAM[99]$1464 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[99]).
Adding EN signal on $memory\sdpram_inst.svRAM[98]$1462 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[98]).
Adding EN signal on $memory\sdpram_inst.svRAM[97]$1460 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[97]).
Adding EN signal on $memory\sdpram_inst.svRAM[96]$1458 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[96]).
Adding EN signal on $memory\sdpram_inst.svRAM[95]$1456 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[95]).
Adding EN signal on $memory\sdpram_inst.svRAM[94]$1454 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[94]).
Adding EN signal on $memory\sdpram_inst.svRAM[93]$1452 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[93]).
Adding EN signal on $memory\sdpram_inst.svRAM[92]$1450 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[92]).
Adding EN signal on $memory\sdpram_inst.svRAM[91]$1448 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[91]).
Adding EN signal on $memory\sdpram_inst.svRAM[90]$1446 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[90]).
Adding EN signal on $memory\sdpram_inst.svRAM[8]$1282 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[8]).
Adding EN signal on $memory\sdpram_inst.svRAM[89]$1444 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[89]).
Adding EN signal on $memory\sdpram_inst.svRAM[88]$1442 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[88]).
Adding EN signal on $memory\sdpram_inst.svRAM[87]$1440 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[87]).
Adding EN signal on $memory\sdpram_inst.svRAM[86]$1438 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[86]).
Adding EN signal on $memory\sdpram_inst.svRAM[85]$1436 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[85]).
Adding EN signal on $memory\sdpram_inst.svRAM[84]$1434 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[84]).
Adding EN signal on $memory\sdpram_inst.svRAM[83]$1432 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[83]).
Adding EN signal on $memory\sdpram_inst.svRAM[82]$1430 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[82]).
Adding EN signal on $memory\sdpram_inst.svRAM[81]$1428 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[81]).
Adding EN signal on $memory\sdpram_inst.svRAM[80]$1426 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[80]).
Adding EN signal on $memory\sdpram_inst.svRAM[7]$1280 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[7]).
Adding EN signal on $memory\sdpram_inst.svRAM[79]$1424 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[79]).
Adding EN signal on $memory\sdpram_inst.svRAM[78]$1422 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[78]).
Adding EN signal on $memory\sdpram_inst.svRAM[77]$1420 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[77]).
Adding EN signal on $memory\sdpram_inst.svRAM[76]$1418 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[76]).
Adding EN signal on $memory\sdpram_inst.svRAM[75]$1416 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[75]).
Adding EN signal on $memory\sdpram_inst.svRAM[74]$1414 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[74]).
Adding EN signal on $memory\sdpram_inst.svRAM[73]$1412 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[73]).
Adding EN signal on $memory\sdpram_inst.svRAM[72]$1410 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[72]).
Adding EN signal on $memory\sdpram_inst.svRAM[71]$1408 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[71]).
Adding EN signal on $memory\sdpram_inst.svRAM[70]$1406 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[70]).
Adding EN signal on $memory\sdpram_inst.svRAM[6]$1278 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[6]).
Adding EN signal on $memory\sdpram_inst.svRAM[69]$1404 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[69]).
Adding EN signal on $memory\sdpram_inst.svRAM[68]$1402 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[68]).
Adding EN signal on $memory\sdpram_inst.svRAM[67]$1400 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[67]).
Adding EN signal on $memory\sdpram_inst.svRAM[66]$1398 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[66]).
Adding EN signal on $memory\sdpram_inst.svRAM[65]$1396 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[65]).
Adding EN signal on $memory\sdpram_inst.svRAM[64]$1394 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[64]).
Adding EN signal on $memory\sdpram_inst.svRAM[63]$1392 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[63]).
Adding EN signal on $memory\sdpram_inst.svRAM[62]$1390 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[62]).
Adding EN signal on $memory\sdpram_inst.svRAM[61]$1388 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[61]).
Adding EN signal on $memory\sdpram_inst.svRAM[60]$1386 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[60]).
Adding EN signal on $memory\sdpram_inst.svRAM[5]$1276 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[5]).
Adding EN signal on $memory\sdpram_inst.svRAM[59]$1384 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[59]).
Adding EN signal on $memory\sdpram_inst.svRAM[58]$1382 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[58]).
Adding EN signal on $memory\sdpram_inst.svRAM[57]$1380 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[57]).
Adding EN signal on $memory\sdpram_inst.svRAM[56]$1378 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[56]).
Adding EN signal on $memory\sdpram_inst.svRAM[55]$1376 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[55]).
Adding EN signal on $memory\sdpram_inst.svRAM[54]$1374 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[54]).
Adding EN signal on $memory\sdpram_inst.svRAM[53]$1372 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[53]).
Adding EN signal on $memory\sdpram_inst.svRAM[52]$1370 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[52]).
Adding EN signal on $memory\sdpram_inst.svRAM[51]$1368 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[51]).
Adding EN signal on $memory\sdpram_inst.svRAM[50]$1366 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[50]).
Adding EN signal on $memory\sdpram_inst.svRAM[4]$1274 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[4]).
Adding EN signal on $memory\sdpram_inst.svRAM[49]$1364 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[49]).
Adding EN signal on $memory\sdpram_inst.svRAM[48]$1362 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[48]).
Adding EN signal on $memory\sdpram_inst.svRAM[47]$1360 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[47]).
Adding EN signal on $memory\sdpram_inst.svRAM[46]$1358 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[46]).
Adding EN signal on $memory\sdpram_inst.svRAM[45]$1356 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[45]).
Adding EN signal on $memory\sdpram_inst.svRAM[44]$1354 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[44]).
Adding EN signal on $memory\sdpram_inst.svRAM[43]$1352 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[43]).
Adding EN signal on $memory\sdpram_inst.svRAM[42]$1350 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[42]).
Adding EN signal on $memory\sdpram_inst.svRAM[41]$1348 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[41]).
Adding EN signal on $memory\sdpram_inst.svRAM[40]$1346 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[40]).
Adding EN signal on $memory\sdpram_inst.svRAM[3]$1272 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[3]).
Adding EN signal on $memory\sdpram_inst.svRAM[39]$1344 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[39]).
Adding EN signal on $memory\sdpram_inst.svRAM[38]$1342 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[38]).
Adding EN signal on $memory\sdpram_inst.svRAM[37]$1340 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[37]).
Adding EN signal on $memory\sdpram_inst.svRAM[36]$1338 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[36]).
Adding EN signal on $memory\sdpram_inst.svRAM[35]$1336 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[35]).
Adding EN signal on $memory\sdpram_inst.svRAM[34]$1334 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[34]).
Adding EN signal on $memory\sdpram_inst.svRAM[33]$1332 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[33]).
Adding EN signal on $memory\sdpram_inst.svRAM[32]$1330 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[32]).
Adding EN signal on $memory\sdpram_inst.svRAM[31]$1328 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[31]).
Adding EN signal on $memory\sdpram_inst.svRAM[30]$1326 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[30]).
Adding EN signal on $memory\sdpram_inst.svRAM[2]$1270 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[2]).
Adding EN signal on $memory\sdpram_inst.svRAM[29]$1324 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[29]).
Adding EN signal on $memory\sdpram_inst.svRAM[28]$1322 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[28]).
Adding EN signal on $memory\sdpram_inst.svRAM[27]$1320 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[27]).
Adding EN signal on $memory\sdpram_inst.svRAM[26]$1318 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[26]).
Adding EN signal on $memory\sdpram_inst.svRAM[25]$1316 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[25]).
Adding EN signal on $memory\sdpram_inst.svRAM[255]$1776 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[255]).
Adding EN signal on $memory\sdpram_inst.svRAM[254]$1774 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[254]).
Adding EN signal on $memory\sdpram_inst.svRAM[253]$1772 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[253]).
Adding EN signal on $memory\sdpram_inst.svRAM[252]$1770 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[252]).
Adding EN signal on $memory\sdpram_inst.svRAM[251]$1768 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[251]).
Adding EN signal on $memory\sdpram_inst.svRAM[250]$1766 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[250]).
Adding EN signal on $memory\sdpram_inst.svRAM[24]$1314 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[24]).
Adding EN signal on $memory\sdpram_inst.svRAM[249]$1764 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[249]).
Adding EN signal on $memory\sdpram_inst.svRAM[248]$1762 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[248]).
Adding EN signal on $memory\sdpram_inst.svRAM[247]$1760 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[247]).
Adding EN signal on $memory\sdpram_inst.svRAM[246]$1758 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[246]).
Adding EN signal on $memory\sdpram_inst.svRAM[245]$1756 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[245]).
Adding EN signal on $memory\sdpram_inst.svRAM[244]$1754 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[244]).
Adding EN signal on $memory\sdpram_inst.svRAM[243]$1752 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[243]).
Adding EN signal on $memory\sdpram_inst.svRAM[242]$1750 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[242]).
Adding EN signal on $memory\sdpram_inst.svRAM[241]$1748 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[241]).
Adding EN signal on $memory\sdpram_inst.svRAM[240]$1746 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[240]).
Adding EN signal on $memory\sdpram_inst.svRAM[23]$1312 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[23]).
Adding EN signal on $memory\sdpram_inst.svRAM[239]$1744 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[239]).
Adding EN signal on $memory\sdpram_inst.svRAM[238]$1742 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[238]).
Adding EN signal on $memory\sdpram_inst.svRAM[237]$1740 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[237]).
Adding EN signal on $memory\sdpram_inst.svRAM[236]$1738 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[236]).
Adding EN signal on $memory\sdpram_inst.svRAM[235]$1736 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[235]).
Adding EN signal on $memory\sdpram_inst.svRAM[234]$1734 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[234]).
Adding EN signal on $memory\sdpram_inst.svRAM[233]$1732 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[233]).
Adding EN signal on $memory\sdpram_inst.svRAM[232]$1730 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[232]).
Adding EN signal on $memory\sdpram_inst.svRAM[231]$1728 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[231]).
Adding EN signal on $memory\sdpram_inst.svRAM[230]$1726 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[230]).
Adding EN signal on $memory\sdpram_inst.svRAM[22]$1310 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[22]).
Adding EN signal on $memory\sdpram_inst.svRAM[229]$1724 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[229]).
Adding EN signal on $memory\sdpram_inst.svRAM[228]$1722 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[228]).
Adding EN signal on $memory\sdpram_inst.svRAM[227]$1720 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[227]).
Adding EN signal on $memory\sdpram_inst.svRAM[226]$1718 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[226]).
Adding EN signal on $memory\sdpram_inst.svRAM[225]$1716 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[225]).
Adding EN signal on $memory\sdpram_inst.svRAM[224]$1714 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[224]).
Adding EN signal on $memory\sdpram_inst.svRAM[223]$1712 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[223]).
Adding EN signal on $memory\sdpram_inst.svRAM[222]$1710 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[222]).
Adding EN signal on $memory\sdpram_inst.svRAM[221]$1708 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[221]).
Adding EN signal on $memory\sdpram_inst.svRAM[220]$1706 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[220]).
Adding EN signal on $memory\sdpram_inst.svRAM[21]$1308 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[21]).
Adding EN signal on $memory\sdpram_inst.svRAM[219]$1704 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[219]).
Adding EN signal on $memory\sdpram_inst.svRAM[218]$1702 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[218]).
Adding EN signal on $memory\sdpram_inst.svRAM[217]$1700 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[217]).
Adding EN signal on $memory\sdpram_inst.svRAM[216]$1698 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[216]).
Adding EN signal on $memory\sdpram_inst.svRAM[215]$1696 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[215]).
Adding EN signal on $memory\sdpram_inst.svRAM[214]$1694 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[214]).
Adding EN signal on $memory\sdpram_inst.svRAM[213]$1692 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[213]).
Adding EN signal on $memory\sdpram_inst.svRAM[212]$1690 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[212]).
Adding EN signal on $memory\sdpram_inst.svRAM[211]$1688 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[211]).
Adding EN signal on $memory\sdpram_inst.svRAM[210]$1686 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[210]).
Adding EN signal on $memory\sdpram_inst.svRAM[20]$1306 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[20]).
Adding EN signal on $memory\sdpram_inst.svRAM[209]$1684 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[209]).
Adding EN signal on $memory\sdpram_inst.svRAM[208]$1682 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[208]).
Adding EN signal on $memory\sdpram_inst.svRAM[207]$1680 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[207]).
Adding EN signal on $memory\sdpram_inst.svRAM[206]$1678 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[206]).
Adding EN signal on $memory\sdpram_inst.svRAM[205]$1676 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[205]).
Adding EN signal on $memory\sdpram_inst.svRAM[204]$1674 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[204]).
Adding EN signal on $memory\sdpram_inst.svRAM[203]$1672 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[203]).
Adding EN signal on $memory\sdpram_inst.svRAM[202]$1670 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[202]).
Adding EN signal on $memory\sdpram_inst.svRAM[201]$1668 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[201]).
Adding EN signal on $memory\sdpram_inst.svRAM[200]$1666 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[200]).
Adding EN signal on $memory\sdpram_inst.svRAM[1]$1268 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[1]).
Adding EN signal on $memory\sdpram_inst.svRAM[19]$1304 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[19]).
Adding EN signal on $memory\sdpram_inst.svRAM[199]$1664 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[199]).
Adding EN signal on $memory\sdpram_inst.svRAM[198]$1662 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[198]).
Adding EN signal on $memory\sdpram_inst.svRAM[197]$1660 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[197]).
Adding EN signal on $memory\sdpram_inst.svRAM[196]$1658 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[196]).
Adding EN signal on $memory\sdpram_inst.svRAM[195]$1656 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[195]).
Adding EN signal on $memory\sdpram_inst.svRAM[194]$1654 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[194]).
Adding EN signal on $memory\sdpram_inst.svRAM[193]$1652 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[193]).
Adding EN signal on $memory\sdpram_inst.svRAM[192]$1650 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[192]).
Adding EN signal on $memory\sdpram_inst.svRAM[191]$1648 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[191]).
Adding EN signal on $memory\sdpram_inst.svRAM[190]$1646 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[190]).
Adding EN signal on $memory\sdpram_inst.svRAM[18]$1302 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[18]).
Adding EN signal on $memory\sdpram_inst.svRAM[189]$1644 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[189]).
Adding EN signal on $memory\sdpram_inst.svRAM[188]$1642 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[188]).
Adding EN signal on $memory\sdpram_inst.svRAM[187]$1640 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[187]).
Adding EN signal on $memory\sdpram_inst.svRAM[186]$1638 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[186]).
Adding EN signal on $memory\sdpram_inst.svRAM[185]$1636 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[185]).
Adding EN signal on $memory\sdpram_inst.svRAM[184]$1634 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[184]).
Adding EN signal on $memory\sdpram_inst.svRAM[183]$1632 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[183]).
Adding EN signal on $memory\sdpram_inst.svRAM[182]$1630 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[182]).
Adding EN signal on $memory\sdpram_inst.svRAM[181]$1628 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[181]).
Adding EN signal on $memory\sdpram_inst.svRAM[180]$1626 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[180]).
Adding EN signal on $memory\sdpram_inst.svRAM[17]$1300 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[17]).
Adding EN signal on $memory\sdpram_inst.svRAM[179]$1624 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[179]).
Adding EN signal on $memory\sdpram_inst.svRAM[178]$1622 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[178]).
Adding EN signal on $memory\sdpram_inst.svRAM[177]$1620 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[177]).
Adding EN signal on $memory\sdpram_inst.svRAM[176]$1618 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[176]).
Adding EN signal on $memory\sdpram_inst.svRAM[175]$1616 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[175]).
Adding EN signal on $memory\sdpram_inst.svRAM[174]$1614 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[174]).
Adding EN signal on $memory\sdpram_inst.svRAM[173]$1612 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[173]).
Adding EN signal on $memory\sdpram_inst.svRAM[172]$1610 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[172]).
Adding EN signal on $memory\sdpram_inst.svRAM[171]$1608 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[171]).
Adding EN signal on $memory\sdpram_inst.svRAM[170]$1606 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[170]).
Adding EN signal on $memory\sdpram_inst.svRAM[16]$1298 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[16]).
Adding EN signal on $memory\sdpram_inst.svRAM[169]$1604 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[169]).
Adding EN signal on $memory\sdpram_inst.svRAM[168]$1602 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[168]).
Adding EN signal on $memory\sdpram_inst.svRAM[167]$1600 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[167]).
Adding EN signal on $memory\sdpram_inst.svRAM[166]$1598 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[166]).
Adding EN signal on $memory\sdpram_inst.svRAM[165]$1596 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[165]).
Adding EN signal on $memory\sdpram_inst.svRAM[164]$1594 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[164]).
Adding EN signal on $memory\sdpram_inst.svRAM[163]$1592 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[163]).
Adding EN signal on $memory\sdpram_inst.svRAM[162]$1590 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[162]).
Adding EN signal on $memory\sdpram_inst.svRAM[161]$1588 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[161]).
Adding EN signal on $memory\sdpram_inst.svRAM[160]$1586 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[160]).
Adding EN signal on $memory\sdpram_inst.svRAM[15]$1296 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[15]).
Adding EN signal on $memory\sdpram_inst.svRAM[159]$1584 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[159]).
Adding EN signal on $memory\sdpram_inst.svRAM[158]$1582 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[158]).
Adding EN signal on $memory\sdpram_inst.svRAM[157]$1580 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[157]).
Adding EN signal on $memory\sdpram_inst.svRAM[156]$1578 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[156]).
Adding EN signal on $memory\sdpram_inst.svRAM[155]$1576 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[155]).
Adding EN signal on $memory\sdpram_inst.svRAM[154]$1574 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[154]).
Adding EN signal on $memory\sdpram_inst.svRAM[153]$1572 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[153]).
Adding EN signal on $memory\sdpram_inst.svRAM[152]$1570 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[152]).
Adding EN signal on $memory\sdpram_inst.svRAM[151]$1568 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[151]).
Adding EN signal on $memory\sdpram_inst.svRAM[150]$1566 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[150]).
Adding EN signal on $memory\sdpram_inst.svRAM[14]$1294 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[14]).
Adding EN signal on $memory\sdpram_inst.svRAM[149]$1564 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[149]).
Adding EN signal on $memory\sdpram_inst.svRAM[148]$1562 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[148]).
Adding EN signal on $memory\sdpram_inst.svRAM[147]$1560 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[147]).
Adding EN signal on $memory\sdpram_inst.svRAM[146]$1558 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[146]).
Adding EN signal on $memory\sdpram_inst.svRAM[145]$1556 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[145]).
Adding EN signal on $memory\sdpram_inst.svRAM[144]$1554 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[144]).
Adding EN signal on $memory\sdpram_inst.svRAM[143]$1552 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[143]).
Adding EN signal on $memory\sdpram_inst.svRAM[142]$1550 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[142]).
Adding EN signal on $memory\sdpram_inst.svRAM[141]$1548 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[141]).
Adding EN signal on $memory\sdpram_inst.svRAM[140]$1546 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[140]).
Adding EN signal on $memory\sdpram_inst.svRAM[13]$1292 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[13]).
Adding EN signal on $memory\sdpram_inst.svRAM[139]$1544 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[139]).
Adding EN signal on $memory\sdpram_inst.svRAM[138]$1542 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[138]).
Adding EN signal on $memory\sdpram_inst.svRAM[137]$1540 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[137]).
Adding EN signal on $memory\sdpram_inst.svRAM[136]$1538 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[136]).
Adding EN signal on $memory\sdpram_inst.svRAM[135]$1536 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[135]).
Adding EN signal on $memory\sdpram_inst.svRAM[134]$1534 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[134]).
Adding EN signal on $memory\sdpram_inst.svRAM[133]$1532 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[133]).
Adding EN signal on $memory\sdpram_inst.svRAM[132]$1530 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[132]).
Adding EN signal on $memory\sdpram_inst.svRAM[131]$1528 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[131]).
Adding EN signal on $memory\sdpram_inst.svRAM[130]$1526 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[130]).
Adding EN signal on $memory\sdpram_inst.svRAM[12]$1290 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[12]).
Adding EN signal on $memory\sdpram_inst.svRAM[129]$1524 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[129]).
Adding EN signal on $memory\sdpram_inst.svRAM[128]$1522 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[128]).
Adding EN signal on $memory\sdpram_inst.svRAM[127]$1520 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[127]).
Adding EN signal on $memory\sdpram_inst.svRAM[126]$1518 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[126]).
Adding EN signal on $memory\sdpram_inst.svRAM[125]$1516 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[125]).
Adding EN signal on $memory\sdpram_inst.svRAM[124]$1514 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[124]).
Adding EN signal on $memory\sdpram_inst.svRAM[123]$1512 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[123]).
Adding EN signal on $memory\sdpram_inst.svRAM[122]$1510 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[122]).
Adding EN signal on $memory\sdpram_inst.svRAM[121]$1508 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[121]).
Adding EN signal on $memory\sdpram_inst.svRAM[120]$1506 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[120]).
Adding EN signal on $memory\sdpram_inst.svRAM[11]$1288 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[11]).
Adding EN signal on $memory\sdpram_inst.svRAM[119]$1504 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[119]).
Adding EN signal on $memory\sdpram_inst.svRAM[118]$1502 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[118]).
Adding EN signal on $memory\sdpram_inst.svRAM[117]$1500 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[117]).
Adding EN signal on $memory\sdpram_inst.svRAM[116]$1498 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[116]).
Adding EN signal on $memory\sdpram_inst.svRAM[115]$1496 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[115]).
Adding EN signal on $memory\sdpram_inst.svRAM[114]$1494 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[114]).
Adding EN signal on $memory\sdpram_inst.svRAM[113]$1492 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[113]).
Adding EN signal on $memory\sdpram_inst.svRAM[112]$1490 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[112]).
Adding EN signal on $memory\sdpram_inst.svRAM[111]$1488 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[111]).
Adding EN signal on $memory\sdpram_inst.svRAM[110]$1486 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[110]).
Adding EN signal on $memory\sdpram_inst.svRAM[10]$1286 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[10]).
Adding EN signal on $memory\sdpram_inst.svRAM[109]$1484 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[109]).
Adding EN signal on $memory\sdpram_inst.svRAM[108]$1482 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[108]).
Adding EN signal on $memory\sdpram_inst.svRAM[107]$1480 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[107]).
Adding EN signal on $memory\sdpram_inst.svRAM[106]$1478 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[106]).
Adding EN signal on $memory\sdpram_inst.svRAM[105]$1476 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[105]).
Adding EN signal on $memory\sdpram_inst.svRAM[104]$1474 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[104]).
Adding EN signal on $memory\sdpram_inst.svRAM[103]$1472 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[103]).
Adding EN signal on $memory\sdpram_inst.svRAM[102]$1470 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[102]).
Adding EN signal on $memory\sdpram_inst.svRAM[101]$1468 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[101]).
Adding EN signal on $memory\sdpram_inst.svRAM[100]$1466 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[100]).
Adding EN signal on $memory\sdpram_inst.svRAM[0]$1266 ($dff) from module sync_fifo_fwft_infer (D = \ivDataIn, Q = \sdpram_inst.svRAM[0]).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 256 unused cells and 256 unused wires.
<suppressed ~257 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.28.26. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\sync_fifo_fwft_infer' to `<abc-temp-dir>/input.blif'..
Extracted 257 gates and 305 wires to a netlist network with 47 inputs and 49 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/btc_dsha256_Sync_fifo_fwft_infer/abc_tmp.scr 
ABC:   #Luts =    77  Max Lvl =   5  Avg Lvl =   1.65  [   0.26 sec. at Pass 0]
ABC:   #Luts =    74  Max Lvl =   5  Avg Lvl =   1.63  [   1.17 sec. at Pass 1]
ABC:   #Luts =    73  Max Lvl =   5  Avg Lvl =   1.61  [   0.29 sec. at Pass 2]
ABC:   #Luts =    71  Max Lvl =   4  Avg Lvl =   1.57  [   0.90 sec. at Pass 3]
ABC:   #Luts =    71  Max Lvl =   4  Avg Lvl =   1.57  [   0.43 sec. at Pass 4]
ABC:   #Luts =    71  Max Lvl =   4  Avg Lvl =   1.57  [   1.16 sec. at Pass 5]
ABC:   #Luts =    70  Max Lvl =   4  Avg Lvl =   1.57  [   0.52 sec. at Pass 6]
ABC:   #Luts =    70  Max Lvl =   4  Avg Lvl =   1.57  [   0.77 sec. at Pass 7]
ABC:   #Luts =    70  Max Lvl =   4  Avg Lvl =   1.57  [   0.52 sec. at Pass 8]
ABC:   #Luts =    70  Max Lvl =   4  Avg Lvl =   1.57  [   0.74 sec. at Pass 9]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       70
ABC RESULTS:        internal signals:      209
ABC RESULTS:           input signals:       47
ABC RESULTS:          output signals:       49
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 0 unused cells and 187 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== sync_fifo_fwft_infer ===

   Number of wires:               1172
   Number of wire bits:          17327
   Number of public wires:         298
   Number of public wire bits:    8500
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1198
     $_SDFFE_PP0P_                  26
     $_SDFF_PP0_                     3
     $_SDFF_PP1_                     3
     $and                          560
     $dffe                         256
     $lut                           70
     $mux                          256
     $not                            8
     adder_carry                    16


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== sync_fifo_fwft_infer ===

   Number of wires:               1236
   Number of wire bits:          17391
   Number of public wires:         298
   Number of public wire bits:    8500
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1262
     $_DFF_P_                       32
     $_MUX_                         58
     $_NOT_                          6
     $and                          560
     $dffe                         256
     $lut                           70
     $mux                          256
     $not                            8
     adder_carry                    16


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~9510 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.
<suppressed ~1261 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
<suppressed ~393 debug messages>
Removed a total of 131 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 0 unused cells and 32986 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\sync_fifo_fwft_infer' to `<abc-temp-dir>/input.blif'..
Extracted 9116 gates and 17361 wires to a netlist network with 8243 inputs and 335 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/btc_dsha256_Sync_fifo_fwft_infer/abc_tmp.scr 
ABC:   #Luts =  3071  Max Lvl =   5  Avg Lvl =   2.17  [   1.43 sec. at Pass 0]
ABC:   #Luts =  3071  Max Lvl =   5  Avg Lvl =   2.17  [  60.10 sec. at Pass 1]
ABC:   #Luts =  3070  Max Lvl =   4  Avg Lvl =   2.19  [   9.64 sec. at Pass 2]
ABC:   #Luts =  3064  Max Lvl =   4  Avg Lvl =   2.18  [  24.27 sec. at Pass 3]
ABC:   #Luts =  3064  Max Lvl =   4  Avg Lvl =   2.18  [  12.90 sec. at Pass 4]
ABC:   #Luts =  3060  Max Lvl =   5  Avg Lvl =   2.21  [  21.75 sec. at Pass 5]
ABC:   #Luts =  3058  Max Lvl =   5  Avg Lvl =   2.20  [  11.38 sec. at Pass 6]
ABC:   #Luts =  3057  Max Lvl =   5  Avg Lvl =   2.19  [  29.38 sec. at Pass 7]
ABC:   #Luts =  3057  Max Lvl =   4  Avg Lvl =   2.19  [  19.97 sec. at Pass 8]
ABC:   #Luts =  3057  Max Lvl =   4  Avg Lvl =   2.19  [  37.69 sec. at Pass 9]
ABC:   #Luts =  3057  Max Lvl =   4  Avg Lvl =   2.19  [  21.24 sec. at Pass 10]
ABC:   #Luts =  3057  Max Lvl =   4  Avg Lvl =   2.19  [  35.83 sec. at Pass 11]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     3057
ABC RESULTS:        internal signals:     8783
ABC RESULTS:           input signals:     8243
ABC RESULTS:          output signals:      335
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 0 unused cells and 9361 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sync_fifo_fwft_infer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sync_fifo_fwft_infer.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sync_fifo_fwft_infer'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sync_fifo_fwft_infer.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \sync_fifo_fwft_infer

3.45.2. Analyzing design hierarchy..
Top module:  \sync_fifo_fwft_infer
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== sync_fifo_fwft_infer ===

   Number of wires:               3317
   Number of wire bits:          11563
   Number of public wires:         296
   Number of public wire bits:    8498
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11297
     $lut                         3057
     adder_carry                    16
     dffsre                       8224


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sync_fifo_fwft_infer..
Removed 0 unused cells and 20 unused wires.
<suppressed ~20 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\sync_fifo_fwft_infer'.

End of script. Logfile hash: 0f3c9c2e40, CPU: user 26.23s system 0.32s, MEM: 115.70 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 98% 2x abc (1911 sec), 0% 2x write_verilog (6 sec), ...
real 346.63
user 1814.61
sys 123.17
