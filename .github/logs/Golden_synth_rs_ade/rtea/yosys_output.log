
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl rtea.vhdl

yosys> verific -vhdl rtea.vhdl

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'rtea.vhdl'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-INFO [VHDL-1012] rtea.vhdl:20: analyzing entity 'rtea'
VERIFIC-INFO [VHDL-1010] rtea.vhdl:34: analyzing architecture 'behave'

yosys> synth_rs -top rtea -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top rtea

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] rtea.vhdl:20: processing 'rtea(behave)'
Importing module rtea.

3.3.1. Analyzing design hierarchy..
Top module:  \rtea

3.3.2. Analyzing design hierarchy..
Top module:  \rtea
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~14 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 2 unused cells and 25 unused wires.
<suppressed ~19 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module rtea...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_reg$rtea.vhdl:118$127 ($aldff) from module rtea.
Removing never-active async load on $verific$r_reg$rtea.vhdl:118$124 ($aldff) from module rtea.
Removing never-active async load on $verific$l_reg$rtea.vhdl:118$123 ($aldff) from module rtea.
Removing never-active async load on $verific$dout_reg$rtea.vhdl:118$128 ($aldff) from module rtea.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$run_reg$rtea.vhdl:118$126 ($dff) from module rtea (D = $verific$n1158$16, Q = \run, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$130 ($sdff) from module rtea (D = $verific$n1158$16, Q = \run).
Adding EN signal on $verific$round_reg$rtea.vhdl:118$127 ($dff) from module rtea (D = $verific$n1234$59, Q = \round).
Adding EN signal on $verific$r_reg$rtea.vhdl:118$124 ($dff) from module rtea (D = $verific$n1199$58, Q = \r).
Adding EN signal on $verific$mode_reg_reg$rtea.vhdl:118$125 ($dff) from module rtea (D = \mode, Q = \mode_reg).
Adding EN signal on $verific$l_reg$rtea.vhdl:118$123 ($dff) from module rtea (D = $verific$n1166$57, Q = \l).
Adding EN signal on $verific$dout_reg$rtea.vhdl:118$128 ($dff) from module rtea (D = { \r \l }, Q = \dout).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~1 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell rtea.$auto$opt_dff.cc:195:make_patterns_logic$147 ($ne).
Removed top 1 bits (of 2) from port B of cell rtea.$auto$opt_dff.cc:195:make_patterns_logic$135 ($ne).
Removed top 1 bits (of 2) from port B of cell rtea.$verific$equal_5$rtea.vhdl:67$66 ($eq).
Removed top 26 bits (of 32) from port B of cell rtea.$verific$add_12$rtea.vhdl:74$73 ($add).
Removed top 8 bits (of 32) from port B of cell rtea.$verific$xor_14$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3548$75 ($xor).
Removed top 26 bits (of 32) from port B of cell rtea.$verific$add_18$rtea.vhdl:75$79 ($add).
Removed top 8 bits (of 32) from port B of cell rtea.$verific$xor_20$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3548$81 ($xor).
Removed top 1 bits (of 33) from port A of cell rtea.$verific$sub_40$rtea.vhdl:96$94 ($sub).
Removed top 1 bits (of 33) from port B of cell rtea.$verific$sub_40$rtea.vhdl:96$94 ($sub).
Removed top 1 bits (of 33) from port Y of cell rtea.$verific$sub_40$rtea.vhdl:96$94 ($sub).
Removed top 5 bits (of 6) from port B of cell rtea.$verific$add_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105 ($add).
Removed top 1 bits (of 7) from port A of cell rtea.$verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
Removed top 6 bits (of 7) from port B of cell rtea.$verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
Removed top 1 bits (of 7) from port Y of cell rtea.$verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
Removed top 1 bits (of 7) from wire rtea.$verific$n1135$53.
Removed top 1 bits (of 33) from wire rtea.$verific$n744$40.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module rtea:
  creating $macc model for $verific$add_12$rtea.vhdl:74$73 ($add).
  creating $macc model for $verific$add_13$rtea.vhdl:74$74 ($add).
  creating $macc model for $verific$add_16$rtea.vhdl:74$77 ($add).
  creating $macc model for $verific$add_18$rtea.vhdl:75$79 ($add).
  creating $macc model for $verific$add_19$rtea.vhdl:75$80 ($add).
  creating $macc model for $verific$add_22$rtea.vhdl:75$83 ($add).
  creating $macc model for $verific$add_37$rtea.vhdl:93$93 ($add).
  creating $macc model for $verific$add_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105 ($add).
  creating $macc model for $verific$sub_40$rtea.vhdl:96$94 ($sub).
  creating $macc model for $verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
  merging $macc model for $verific$add_22$rtea.vhdl:75$83 into $verific$sub_40$rtea.vhdl:96$94.
  merging $macc model for $verific$add_19$rtea.vhdl:75$80 into $verific$sub_40$rtea.vhdl:96$94.
  merging $macc model for $verific$add_18$rtea.vhdl:75$79 into $verific$sub_40$rtea.vhdl:96$94.
  merging $macc model for $verific$add_16$rtea.vhdl:74$77 into $verific$add_37$rtea.vhdl:93$93.
  merging $macc model for $verific$add_13$rtea.vhdl:74$74 into $verific$add_37$rtea.vhdl:93$93.
  merging $macc model for $verific$add_12$rtea.vhdl:74$73 into $verific$add_37$rtea.vhdl:93$93.
  creating $alu model for $macc $verific$add_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105.
  creating $alu model for $macc $verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110.
  creating $macc cell for $verific$sub_40$rtea.vhdl:96$94: $auto$alumacc.cc:365:replace_macc$159
  creating $macc cell for $verific$add_37$rtea.vhdl:93$93: $auto$alumacc.cc:365:replace_macc$160
  creating $alu cell for $verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110: $auto$alumacc.cc:485:replace_alu$161
  creating $alu cell for $verific$add_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105: $auto$alumacc.cc:485:replace_alu$164
  created 2 $alu and 2 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 6 unused cells and 6 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> stat

3.22. Printing statistics.

=== rtea ===

   Number of wires:                 54
   Number of wire bits:            839
   Number of public wires:          14
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 43
     $alu                            2
     $dffe                           5
     $eq                             3
     $logic_not                      2
     $macc                           2
     $mux                           17
     $ne                             4
     $not                            1
     $reduce_and                     3
     $reduce_bool                    1
     $sdffe                          1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using extmapper maccmap for cells of type $macc.
  add \r (32 bits, unsigned)
  sub \l (32 bits, unsigned)
  sub $verific$n416$29 (32 bits, unsigned)
  sub \key_slice (32 bits, unsigned)
  sub \round (6 bits, unsigned)
  packed 4 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_90_alu for cells of type $alu.
  add \l (32 bits, unsigned)
  add \r (32 bits, unsigned)
  add $verific$n215$24 (32 bits, unsigned)
  add \key_slice (32 bits, unsigned)
  add \round (6 bits, unsigned)
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
Using template $paramod$61e2435132e1ce40c0d75c6c88e4344ff37fc23f\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~929 debug messages>

yosys> stat

3.24. Printing statistics.

=== rtea ===

   Number of wires:                414
   Number of wire bits:           8778
   Number of public wires:          14
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2191
     $_AND_                        535
     $_DFFE_PN_                      1
     $_DFFE_PP_                    134
     $_MUX_                        399
     $_NOT_                        210
     $_OR_                         286
     $_SDFFE_PN1P_                   1
     $_XOR_                        593
     adder_carry                    32


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~464 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~114 debug messages>
Removed a total of 38 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$319 ($_DFFE_PP_) from module rtea (D = $verific$n1159$56 [4], Q = \round [4], rval = 1'0).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 104 unused cells and 257 unused wires.
<suppressed ~105 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.25.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~80 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$720 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1066
        $auto$simplemap.cc:86:simplemap_bitop$1133


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~1 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.28.18. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Extracted 1493 gates and 1791 wires to a netlist network with 298 inputs and 136 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/rtea/abc_tmp.scr 
ABC:   #Luts =   494  Max Lvl =  13  Avg Lvl =   4.15  [   0.39 sec. at Pass 0]
ABC:   #Luts =   440  Max Lvl =  22  Avg Lvl =   4.77  [   7.51 sec. at Pass 1]
ABC:   #Luts =   431  Max Lvl =  22  Avg Lvl =   4.75  [   1.17 sec. at Pass 2]
ABC:   #Luts =   418  Max Lvl =  23  Avg Lvl =   4.74  [   7.87 sec. at Pass 3]
ABC:   #Luts =   413  Max Lvl =  22  Avg Lvl =   4.69  [   2.47 sec. at Pass 4]
ABC:   #Luts =   412  Max Lvl =  22  Avg Lvl =   4.71  [  13.48 sec. at Pass 5]
ABC:   #Luts =   411  Max Lvl =  21  Avg Lvl =   4.69  [   3.06 sec. at Pass 6]
ABC:   #Luts =   405  Max Lvl =  21  Avg Lvl =   4.67  [  12.91 sec. at Pass 7]
ABC:   #Luts =   405  Max Lvl =  21  Avg Lvl =   4.67  [   3.50 sec. at Pass 8]
ABC:   #Luts =   405  Max Lvl =  21  Avg Lvl =   4.67  [  16.35 sec. at Pass 9]
ABC:   #Luts =   404  Max Lvl =  21  Avg Lvl =   4.68  [   3.06 sec. at Pass 10]
ABC:   #Luts =   402  Max Lvl =  21  Avg Lvl =   4.76  [  15.64 sec. at Pass 11]
ABC:   #Luts =   402  Max Lvl =  21  Avg Lvl =   4.76  [   4.05 sec. at Pass 12]
ABC:   #Luts =   402  Max Lvl =  21  Avg Lvl =   4.76  [  19.29 sec. at Pass 13]
ABC:   #Luts =   401  Max Lvl =  21  Avg Lvl =   4.76  [   4.42 sec. at Pass 14]
ABC:   #Luts =   401  Max Lvl =  21  Avg Lvl =   4.76  [  17.79 sec. at Pass 15]
ABC:   #Luts =   401  Max Lvl =  21  Avg Lvl =   4.76  [   3.35 sec. at Pass 16]
ABC:   #Luts =   401  Max Lvl =  21  Avg Lvl =   4.76  [  14.93 sec. at Pass 17]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      401
ABC RESULTS:        internal signals:     1357
ABC RESULTS:           input signals:      298
ABC RESULTS:          output signals:      136
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 540 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== rtea ===

   Number of wires:                359
   Number of wire bits:            814
   Number of public wires:          13
   Number of public wire bits:     338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                570
     $_DFFE_PN_                      1
     $_DFFE_PP_                    133
     $_SDFFCE_PN0P_                  1
     $_SDFFE_PN1P_                   1
     $lut                          401
     $mux                            1
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== rtea ===

   Number of wires:                362
   Number of wire bits:            817
   Number of public wires:          13
   Number of public wire bits:     338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                573
     $_DFFE_PP0N_                    1
     $_DFFE_PP0P_                  134
     $_DFF_P_                        1
     $_MUX_                          3
     $lut                          401
     $mux                            1
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~810 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~8764 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~8343 debug messages>
Removed a total of 2781 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 1670 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~75 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Extracted 2569 gates and 2868 wires to a netlist network with 297 inputs and 136 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/rtea/abc_tmp.scr 
ABC:   #Luts =   407  Max Lvl =  21  Avg Lvl =   4.77  [   0.30 sec. at Pass 0]
ABC:   #Luts =   407  Max Lvl =  20  Avg Lvl =   4.71  [  14.73 sec. at Pass 1]
ABC:   #Luts =   404  Max Lvl =  20  Avg Lvl =   4.66  [   2.21 sec. at Pass 2]
ABC:   #Luts =   402  Max Lvl =  20  Avg Lvl =   4.79  [  12.89 sec. at Pass 3]
ABC:   #Luts =   402  Max Lvl =  20  Avg Lvl =   4.79  [   3.38 sec. at Pass 4]
ABC:   #Luts =   397  Max Lvl =  20  Avg Lvl =   4.85  [  17.06 sec. at Pass 5]
ABC:   #Luts =   397  Max Lvl =  20  Avg Lvl =   4.85  [   4.01 sec. at Pass 6]
ABC:   #Luts =   397  Max Lvl =  20  Avg Lvl =   4.85  [  22.34 sec. at Pass 7]
ABC:   #Luts =   397  Max Lvl =  20  Avg Lvl =   4.85  [   3.77 sec. at Pass 8]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      397
ABC RESULTS:        internal signals:     2435
ABC RESULTS:           input signals:      297
ABC RESULTS:          output signals:      136
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 1734 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \rtea

3.45.2. Analyzing design hierarchy..
Top module:  \rtea
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== rtea ===

   Number of wires:                355
   Number of wire bits:            810
   Number of public wires:          13
   Number of public wire bits:     338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                565
     $lut                          397
     adder_carry                    32
     dffsre                        136


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\rtea'.

End of script. Logfile hash: 1bebe276e4, CPU: user 6.25s system 0.07s, MEM: 41.29 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 2x abc (1041 sec), 0% 34x opt_expr (2 sec), ...
real 256.28
user 976.26
sys 71.92
