
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.20
 Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_pipelined_ecb_decrypt.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_pipelined_ecb_decrypt.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_pipelined_ecb_decrypt.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_pipelined_ecb_decrypt -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.44

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_pipelined_ecb_decrypt

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_pipelined_ecb_decrypt.v:1: compiling module 'gost89_pipelined_ecb_decrypt'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
Importing module gost89_pipelined_ecb_decrypt.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_decrypt
Used module:     \gost89_round
Used module:         \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_decrypt
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_sbox.
Deleting now unused module gost89_round.
<suppressed ~40 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 44258 unused wires.
<suppressed ~356 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module gost89_pipelined_ecb_decrypt...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$n2_reg$gost89_pipelined_ecb_decrypt.v:44$71 ($aldff) from module gost89_pipelined_ecb_decrypt.
Removing never-active async load on $verific$n1_reg$gost89_pipelined_ecb_decrypt.v:44$70 ($aldff) from module gost89_pipelined_ecb_decrypt.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_pipelined_ecb_decrypt:
  creating $macc model for $flatten\r1.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r10.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r11.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r12.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r13.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r14.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r15.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r16.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r17.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r18.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r19.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r2.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r20.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r21.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r22.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r23.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r24.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r25.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r26.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r27.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r28.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r29.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r3.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r30.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r31.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r32.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r4.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r5.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r6.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r7.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r8.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r9.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $alu model for $macc $flatten\r9.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r8.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r7.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r6.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r5.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r4.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r32.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r31.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r30.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r3.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r29.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r28.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r27.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r26.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r25.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r24.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r23.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r22.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r21.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r20.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r2.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r19.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r18.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r17.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r16.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r15.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r14.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r13.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r12.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r11.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r10.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r1.$verific$add_3$gost89_round.v:12$21615.
  creating $alu cell for $flatten\r1.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22214
  creating $alu cell for $flatten\r10.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22217
  creating $alu cell for $flatten\r11.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22220
  creating $alu cell for $flatten\r12.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22223
  creating $alu cell for $flatten\r13.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22226
  creating $alu cell for $flatten\r14.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22229
  creating $alu cell for $flatten\r15.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22232
  creating $alu cell for $flatten\r16.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22235
  creating $alu cell for $flatten\r17.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22238
  creating $alu cell for $flatten\r18.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22241
  creating $alu cell for $flatten\r19.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22244
  creating $alu cell for $flatten\r2.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22247
  creating $alu cell for $flatten\r20.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22250
  creating $alu cell for $flatten\r21.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22253
  creating $alu cell for $flatten\r22.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22256
  creating $alu cell for $flatten\r23.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22259
  creating $alu cell for $flatten\r24.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22262
  creating $alu cell for $flatten\r25.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22265
  creating $alu cell for $flatten\r26.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22268
  creating $alu cell for $flatten\r27.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22271
  creating $alu cell for $flatten\r28.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22274
  creating $alu cell for $flatten\r29.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22277
  creating $alu cell for $flatten\r3.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22280
  creating $alu cell for $flatten\r30.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22283
  creating $alu cell for $flatten\r31.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22286
  creating $alu cell for $flatten\r32.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22289
  creating $alu cell for $flatten\r4.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22292
  creating $alu cell for $flatten\r5.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22295
  creating $alu cell for $flatten\r6.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22298
  creating $alu cell for $flatten\r7.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22301
  creating $alu cell for $flatten\r8.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22304
  creating $alu cell for $flatten\r9.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22307
  created 32 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               1253
   Number of wire bits:          49057
   Number of public wires:        1189
   Number of public wire bits:   47009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                322
     $alu                           32
     $bmux                         256
     $dff                            2
     $xor                           32


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               1253
   Number of wire bits:          49057
   Number of public wires:        1189
   Number of public wire bits:   47009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                322
     $alu                           32
     $bmux                         256
     $dff                            2
     $xor                           32


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> stat

3.24. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               1253
   Number of wire bits:          49057
   Number of public wires:        1189
   Number of public wire bits:   47009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                322
     $alu                           32
     $bmux                         256
     $dff                            2
     $xor                           32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~712 debug messages>

yosys> stat

3.26. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               2981
   Number of wire bits:          79041
   Number of public wires:        1189
   Number of public wire bits:   47009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              22656
     $_DFF_P_                     2048
     $_MUX_                      16448
     $_NOT_                       1024
     $_XOR_                       2112
     adder_carry                  1024


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.
<suppressed ~1024 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
<suppressed ~192 debug messages>
Removed a total of 64 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 992 unused cells and 928 unused wires.
<suppressed ~993 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  20576 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.31.2. Extracting gate netlist of module `\gost89_pipelined_ecb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 19552 gates and 21376 wires to a netlist network with 1824 inputs and 1324 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 2048 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:     2048
ABC RESULTS:               NOT cells:       35
ABC RESULTS:            ANDNOT cells:      196
ABC RESULTS:               NOR cells:      371
ABC RESULTS:                OR cells:      715
ABC RESULTS:             ORNOT cells:     1261
ABC RESULTS:               AND cells:     1671
ABC RESULTS:              NAND cells:     3511
ABC RESULTS:              XNOR cells:      410
ABC RESULTS:               MUX cells:    12817
ABC RESULTS:               XOR cells:     1702
ABC RESULTS:               BUF cells:     1388
ABC RESULTS:        internal signals:    18228
ABC RESULTS:           input signals:     1824
ABC RESULTS:          output signals:     1324
Removing temp directory.

yosys> abc -dff

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Summary of detected clock domains:
  25761 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.32.2. Extracting gate netlist of module `\gost89_pipelined_ecb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 24737 gates and 26561 wires to a netlist network with 1824 inputs and 1324 outputs.

3.32.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 2048 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:     2048
ABC RESULTS:               NOT cells:       21
ABC RESULTS:               XOR cells:     1791
ABC RESULTS:            ANDNOT cells:      200
ABC RESULTS:               NOR cells:      286
ABC RESULTS:                OR cells:     1146
ABC RESULTS:             ORNOT cells:     1470
ABC RESULTS:               AND cells:     1989
ABC RESULTS:              NAND cells:     3132
ABC RESULTS:               MUX cells:    12651
ABC RESULTS:              XNOR cells:      321
ABC RESULTS:               BUF cells:     1388
ABC RESULTS:        internal signals:    23413
ABC RESULTS:           input signals:     1824
ABC RESULTS:          output signals:     1324
Removing temp directory.

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  26079 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.33.2. Extracting gate netlist of module `\gost89_pipelined_ecb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 25055 gates and 26879 wires to a netlist network with 1824 inputs and 1324 outputs.

3.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 2048 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:     2048
ABC RESULTS:               NOT cells:       12
ABC RESULTS:            ANDNOT cells:      114
ABC RESULTS:               NOR cells:      203
ABC RESULTS:              XNOR cells:      382
ABC RESULTS:                OR cells:     1154
ABC RESULTS:               AND cells:     1916
ABC RESULTS:             ORNOT cells:     1617
ABC RESULTS:              NAND cells:     3012
ABC RESULTS:               MUX cells:    12720
ABC RESULTS:               XOR cells:     1730
ABC RESULTS:               BUF cells:     1388
ABC RESULTS:        internal signals:    23731
ABC RESULTS:           input signals:     1824
ABC RESULTS:          output signals:     1324
Removing temp directory.

yosys> opt_ffinv

3.34. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.
<suppressed ~50 debug messages>

yosys> opt_merge -nomux

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 9 unused cells and 61817 unused wires.
<suppressed ~298 debug messages>

yosys> opt_expr

3.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.35.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.35.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  25923 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.36.2. Extracting gate netlist of module `\gost89_pipelined_ecb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 24899 gates and 26723 wires to a netlist network with 1824 inputs and 1324 outputs.

3.36.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 2048 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:     2048
ABC RESULTS:               NOT cells:        9
ABC RESULTS:            ANDNOT cells:      102
ABC RESULTS:               NOR cells:      216
ABC RESULTS:                OR cells:     1269
ABC RESULTS:             ORNOT cells:     1754
ABC RESULTS:               AND cells:     2096
ABC RESULTS:              NAND cells:     3518
ABC RESULTS:              XNOR cells:      459
ABC RESULTS:               MUX cells:    12407
ABC RESULTS:               XOR cells:     1653
ABC RESULTS:               BUF cells:     1388
ABC RESULTS:        internal signals:    23575
ABC RESULTS:           input signals:     1824
ABC RESULTS:          output signals:     1324
Removing temp directory.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> abc -script /tmp/yosys_cKGclr/abc_tmp_1.scr

3.38. Executing ABC pass (technology mapping using ABC).

3.38.1. Extracting gate netlist of module `\gost89_pipelined_ecb_decrypt' to `<abc-temp-dir>/input.blif'..
Extracted 23483 gates and 27291 wires to a netlist network with 3808 inputs and 1984 outputs.

3.38.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_cKGclr/abc_tmp_1.scr 
ABC:   #Luts =  8030  Max Lvl =   4  Avg Lvl =   2.26  [   0.96 sec. at Pass 0]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  37.86 sec. at Pass 1]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  12.78 sec. at Pass 2]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  12.83 sec. at Pass 3]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  12.99 sec. at Pass 4]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  17.67 sec. at Pass 5]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   2.48 sec. at Pass 6]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.38.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     7168
ABC RESULTS:        internal signals:    21499
ABC RESULTS:           input signals:     3808
ABC RESULTS:          output signals:     1984
Removing temp directory.

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 55402 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.40. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.41. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               8889
   Number of wire bits:          54965
   Number of public wires:         901
   Number of public wire bits:   44961
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10240
     $_DFF_P_                     2048
     $lut                         7168
     adder_carry                  1024


yosys> shregmap -minlen 8 -maxlen 20

3.42. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.43. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.44. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               8889
   Number of wire bits:          54965
   Number of public wires:         901
   Number of public wire bits:   44961
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10240
     $_DFF_P_                     2048
     $lut                         7168
     adder_carry                  1024


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.45. Executing TECHMAP pass (map to technology primitives).

3.45.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.45.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.45.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~9352 debug messages>

yosys> opt_expr -mux_undef

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.
<suppressed ~303300 debug messages>

yosys> simplemap

3.47. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
<suppressed ~15297 debug messages>
Removed a total of 5099 cells.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 33254 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.52. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.52.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.
<suppressed ~1558 debug messages>

yosys> opt_merge -nomux

3.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.52.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.52.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 89 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.52.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.52.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.52.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.52.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.52.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.52.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_cKGclr/abc_tmp_2.scr

3.53. Executing ABC pass (technology mapping using ABC).

3.53.1. Extracting gate netlist of module `\gost89_pipelined_ecb_decrypt' to `<abc-temp-dir>/input.blif'..
Extracted 21355 gates and 25165 wires to a netlist network with 3808 inputs and 1984 outputs.

3.53.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_cKGclr/abc_tmp_2.scr 
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   0.62 sec. at Pass 0]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  32.30 sec. at Pass 1]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   8.93 sec. at Pass 2]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  10.30 sec. at Pass 3]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  11.74 sec. at Pass 4]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  13.83 sec. at Pass 5]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   2.13 sec. at Pass 6]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.53.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     7168
ABC RESULTS:        internal signals:    19373
ABC RESULTS:           input signals:     3808
ABC RESULTS:          output signals:     1984
Removing temp directory.

yosys> opt

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 18985 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.55. Executing HIERARCHY pass (managing design hierarchy).

3.55.1. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_decrypt

3.55.2. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_decrypt
Removed 0 unused modules.

yosys> stat

3.56. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               8889
   Number of wire bits:          54965
   Number of public wires:         901
   Number of public wire bits:   44961
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10240
     $lut                         7168
     adder_carry                  1024
     dffsre                       2048


yosys> opt_clean -purge

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 630 unused wires.
<suppressed ~630 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.58. Executing Verilog backend.

yosys> bmuxmap

3.58.1. Executing BMUXMAP pass.

yosys> demuxmap

3.58.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\gost89_pipelined_ecb_decrypt'.

End of script. Logfile hash: 7d0006b251, CPU: user 79.32s system 1.54s, MEM: 656.34 MB peak
Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)
Time spent: 92% 6x abc (884 sec), 3% 29x opt_expr (28 sec), ...
real 299.26
user 857.23
sys 98.75
