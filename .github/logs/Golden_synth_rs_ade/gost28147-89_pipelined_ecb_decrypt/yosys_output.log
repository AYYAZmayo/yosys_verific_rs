
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_pipelined_ecb_decrypt.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_pipelined_ecb_decrypt.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_pipelined_ecb_decrypt.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_pipelined_ecb_decrypt -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_pipelined_ecb_decrypt

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_pipelined_ecb_decrypt.v:1: compiling module 'gost89_pipelined_ecb_decrypt'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
Importing module gost89_pipelined_ecb_decrypt.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_decrypt
Used module:     \gost89_round
Used module:         \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_decrypt
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_sbox.
Deleting now unused module gost89_round.
<suppressed ~40 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 44258 unused wires.
<suppressed ~356 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module gost89_pipelined_ecb_decrypt...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$n2_reg$gost89_pipelined_ecb_decrypt.v:44$71 ($aldff) from module gost89_pipelined_ecb_decrypt.
Removing never-active async load on $verific$n1_reg$gost89_pipelined_ecb_decrypt.v:44$70 ($aldff) from module gost89_pipelined_ecb_decrypt.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_pipelined_ecb_decrypt:
  creating $macc model for $flatten\r1.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r10.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r11.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r12.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r13.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r14.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r15.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r16.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r17.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r18.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r19.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r2.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r20.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r21.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r22.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r23.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r24.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r25.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r26.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r27.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r28.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r29.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r3.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r30.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r31.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r32.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r4.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r5.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r6.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r7.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r8.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r9.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $alu model for $macc $flatten\r9.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r8.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r7.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r6.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r5.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r4.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r32.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r31.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r30.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r3.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r29.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r28.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r27.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r26.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r25.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r24.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r23.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r22.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r21.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r20.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r2.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r19.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r18.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r17.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r16.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r15.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r14.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r13.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r12.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r11.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r10.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r1.$verific$add_3$gost89_round.v:12$21615.
  creating $alu cell for $flatten\r1.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22214
  creating $alu cell for $flatten\r10.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22217
  creating $alu cell for $flatten\r11.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22220
  creating $alu cell for $flatten\r12.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22223
  creating $alu cell for $flatten\r13.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22226
  creating $alu cell for $flatten\r14.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22229
  creating $alu cell for $flatten\r15.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22232
  creating $alu cell for $flatten\r16.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22235
  creating $alu cell for $flatten\r17.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22238
  creating $alu cell for $flatten\r18.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22241
  creating $alu cell for $flatten\r19.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22244
  creating $alu cell for $flatten\r2.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22247
  creating $alu cell for $flatten\r20.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22250
  creating $alu cell for $flatten\r21.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22253
  creating $alu cell for $flatten\r22.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22256
  creating $alu cell for $flatten\r23.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22259
  creating $alu cell for $flatten\r24.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22262
  creating $alu cell for $flatten\r25.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22265
  creating $alu cell for $flatten\r26.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22268
  creating $alu cell for $flatten\r27.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22271
  creating $alu cell for $flatten\r28.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22274
  creating $alu cell for $flatten\r29.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22277
  creating $alu cell for $flatten\r3.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22280
  creating $alu cell for $flatten\r30.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22283
  creating $alu cell for $flatten\r31.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22286
  creating $alu cell for $flatten\r32.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22289
  creating $alu cell for $flatten\r4.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22292
  creating $alu cell for $flatten\r5.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22295
  creating $alu cell for $flatten\r6.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22298
  creating $alu cell for $flatten\r7.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22301
  creating $alu cell for $flatten\r8.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22304
  creating $alu cell for $flatten\r9.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22307
  created 32 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> stat

3.22. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               1253
   Number of wire bits:          49057
   Number of public wires:        1189
   Number of public wire bits:   47009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                322
     $alu                           32
     $bmux                         256
     $dff                            2
     $xor                           32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~712 debug messages>

yosys> stat

3.24. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               2981
   Number of wire bits:          79041
   Number of public wires:        1189
   Number of public wire bits:   47009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              22656
     $_DFF_P_                     2048
     $_MUX_                      16448
     $_NOT_                       1024
     $_XOR_                       2112
     adder_carry                  1024


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.
<suppressed ~1024 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
<suppressed ~96 debug messages>
Removed a total of 32 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 1024 unused cells and 928 unused wires.
<suppressed ~1025 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.25.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.28.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\gost89_pipelined_ecb_decrypt' to `<abc-temp-dir>/input.blif'..
Extracted 17504 gates and 21312 wires to a netlist network with 3808 inputs and 1984 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/gost28147-89_pipelined_ecb_decrypt/abc_tmp.scr 
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   1.63 sec. at Pass 0]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  57.29 sec. at Pass 1]
ABC:   #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  14.44 sec. at Pass 2]
ABC:   #Luts =  7136  Max Lvl =   3  Avg Lvl =   2.03  [  20.37 sec. at Pass 3]
ABC:   #Luts =  7136  Max Lvl =   3  Avg Lvl =   2.03  [  26.19 sec. at Pass 4]
ABC:   #Luts =  7136  Max Lvl =   3  Avg Lvl =   2.03  [  34.49 sec. at Pass 5]
ABC:   #Luts =  7136  Max Lvl =   3  Avg Lvl =   2.03  [  32.07 sec. at Pass 6]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     7136
ABC RESULTS:        internal signals:    15520
ABC RESULTS:           input signals:     3808
ABC RESULTS:          output signals:     1984
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 6848 unused wires.
<suppressed ~289 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               6149
   Number of wire bits:          52225
   Number of public wires:         901
   Number of public wire bits:   44961
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10208
     $_DFF_P_                     2048
     $lut                         7136
     adder_carry                  1024


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               6149
   Number of wire bits:          52225
   Number of public wires:         901
   Number of public wire bits:   44961
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10208
     $_DFF_P_                     2048
     $lut                         7136
     adder_carry                  1024


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~9320 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.
<suppressed ~304043 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
<suppressed ~22374 debug messages>
Removed a total of 7458 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 33389 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.
<suppressed ~830 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 414 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\gost89_pipelined_ecb_decrypt' to `<abc-temp-dir>/input.blif'..
Extracted 20757 gates and 24567 wires to a netlist network with 3808 inputs and 1984 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/gost28147-89_pipelined_ecb_decrypt/abc_tmp.scr 
ABC:   #Luts =  7136  Max Lvl =   3  Avg Lvl =   2.03  [   2.24 sec. at Pass 0]
ABC:   #Luts =  7136  Max Lvl =   3  Avg Lvl =   2.03  [  89.12 sec. at Pass 1]
ABC:   #Luts =  7136  Max Lvl =   3  Avg Lvl =   2.03  [  19.55 sec. at Pass 2]
ABC:   #Luts =  7136  Max Lvl =   3  Avg Lvl =   2.03  [  26.47 sec. at Pass 3]
ABC:   #Luts =  7136  Max Lvl =   3  Avg Lvl =   2.03  [  28.65 sec. at Pass 4]
ABC:   #Luts =  7136  Max Lvl =   3  Avg Lvl =   2.03  [  40.08 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     7136
ABC RESULTS:        internal signals:    18775
ABC RESULTS:           input signals:     3808
ABC RESULTS:          output signals:     1984
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 18517 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_decrypt.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_decrypt

3.45.2. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_decrypt
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== gost89_pipelined_ecb_decrypt ===

   Number of wires:               6149
   Number of wire bits:          52225
   Number of public wires:         901
   Number of public wire bits:   44961
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10208
     $lut                         7136
     adder_carry                  1024
     dffsre                       2048


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_decrypt..
Removed 0 unused cells and 546 unused wires.
<suppressed ~546 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\gost89_pipelined_ecb_decrypt'.

End of script. Logfile hash: 47bea8abec, CPU: user 71.91s system 0.87s, MEM: 657.51 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 2x abc (1396 sec), 1% 26x opt_expr (29 sec), ...
real 525.51
user 1321.27
sys 146.34
