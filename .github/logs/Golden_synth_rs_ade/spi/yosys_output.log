
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.8
 Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k spi_defines.vh spi_clgen.v spi_shift.v spi_top.v timescale.v

yosys> verific -vlog2k spi_defines.vh spi_clgen.v spi_shift.v spi_top.v timescale.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_clgen.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_shift.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'timescale.v'

yosys> synth_rs -top spi_top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.37

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top spi_top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] spi_top.v:43: compiling module 'spi_top'
VERIFIC-WARNING [VERI-2371] spi_top.v:143: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:152: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:154: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:164: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:166: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:168: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:175: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:186: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:219: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:237: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:242: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] spi_clgen.v:42: compiling module 'spi_clgen'
VERIFIC-WARNING [VERI-2371] spi_clgen.v:72: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:76: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:78: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:86: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:88: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:96: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:97: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:101: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:102: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] spi_shift.v:42: compiling module 'spi_shift'
VERIFIC-WARNING [VERI-2371] spi_shift.v:93: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:97: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:99: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:107: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:109: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:111: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:118: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:120: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:127: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:132: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:134: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:136: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:138: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:143: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:147: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:149: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:154: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:156: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:158: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:160: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:169: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:171: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:232: delay control is not supported for synthesis
Importing module spi_top.
Importing module spi_clgen.
Importing module spi_shift.

3.3.1. Analyzing design hierarchy..
Top module:  \spi_top
Used module:     \spi_shift
Used module:     \spi_clgen

3.3.2. Analyzing design hierarchy..
Top module:  \spi_top
Used module:     \spi_shift
Used module:     \spi_clgen
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_shift.
<suppressed ~2 debug messages>
Optimizing module spi_clgen.
<suppressed ~2 debug messages>
Optimizing module spi_top.
<suppressed ~5 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module spi_shift.
Deleting now unused module spi_clgen.
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 305 unused wires.
<suppressed ~45 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module spi_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wb_int_o_reg$spi_top.v:168$139 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$wb_dat_o_reg$spi_top.v:145$126 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$wb_ack_o_reg$spi_top.v:154$131 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$ss_reg$spi_top.v:268$176 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$cnt_reg$spi_clgen.v:79$443 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$divider_reg$spi_top.v:206$149 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$ctrl_reg$spi_top.v:222$162 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$tip_reg$spi_shift.v:111$711 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$s_out_reg$spi_shift.v:120$716 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$clk_out_reg$spi_clgen.v:88$452 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$cnt_reg$spi_shift.v:100$702 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$pos_edge_reg$spi_clgen.v:103$469 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$neg_edge_reg$spi_clgen.v:103$470 ($aldff) from module spi_top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$wb_int_o_reg$spi_top.v:168$139 ($adff) from module spi_top (D = $verific$n351$62, Q = \wb_int_o).
Adding EN signal on $verific$ss_reg$spi_top.v:268$176 ($adff) from module spi_top (D = \wb_dat_i [7:0], Q = \ss).
Adding EN signal on $verific$divider_reg$spi_top.v:206$149 ($adff) from module spi_top (D = \wb_dat_i [7:0], Q = \divider [7:0]).
Adding EN signal on $verific$divider_reg$spi_top.v:206$149 ($adff) from module spi_top (D = \wb_dat_i [15:8], Q = \divider [15:8]).
Adding EN signal on $verific$ctrl_reg$spi_top.v:222$162 ($adff) from module spi_top (D = $verific$n461$86, Q = \ctrl [7:0]).
Adding EN signal on $verific$ctrl_reg$spi_top.v:222$162 ($adff) from module spi_top (D = \wb_dat_i [13:9], Q = \ctrl [13:9]).
Adding EN signal on $verific$ctrl_reg$spi_top.v:222$162 ($adff) from module spi_top (D = $verific$n504$89 [8], Q = \ctrl [8]).
Adding EN signal on $flatten\shift.$verific$tip_reg$spi_shift.v:111$711 ($adff) from module spi_top (D = $flatten\shift.$verific$n333$491, Q = \shift.tip).
Adding EN signal on $flatten\shift.$verific$s_out_reg$spi_shift.v:120$716 ($adff) from module spi_top (D = $flatten\shift.$verific$n339$493, Q = \shift.s_out).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [96], Q = \shift.data [96]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [97], Q = \shift.data [97]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [98], Q = \shift.data [98]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [99], Q = \shift.data [99]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [100], Q = \shift.data [100]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [101], Q = \shift.data [101]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [102], Q = \shift.data [102]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [103], Q = \shift.data [103]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [64], Q = \shift.data [64]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [65], Q = \shift.data [65]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [66], Q = \shift.data [66]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [67], Q = \shift.data [67]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [68], Q = \shift.data [68]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [69], Q = \shift.data [69]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [70], Q = \shift.data [70]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [71], Q = \shift.data [71]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [32], Q = \shift.data [32]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [33], Q = \shift.data [33]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [34], Q = \shift.data [34]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [35], Q = \shift.data [35]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [36], Q = \shift.data [36]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [37], Q = \shift.data [37]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [38], Q = \shift.data [38]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [39], Q = \shift.data [39]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [0], Q = \shift.data [0]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [1], Q = \shift.data [1]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [2], Q = \shift.data [2]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [3], Q = \shift.data [3]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [4], Q = \shift.data [4]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [5], Q = \shift.data [5]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [6], Q = \shift.data [6]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [7], Q = \shift.data [7]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [104], Q = \shift.data [104]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [105], Q = \shift.data [105]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [106], Q = \shift.data [106]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [107], Q = \shift.data [107]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [108], Q = \shift.data [108]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [109], Q = \shift.data [109]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [110], Q = \shift.data [110]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [111], Q = \shift.data [111]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [72], Q = \shift.data [72]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [73], Q = \shift.data [73]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [74], Q = \shift.data [74]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [75], Q = \shift.data [75]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [76], Q = \shift.data [76]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [77], Q = \shift.data [77]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [78], Q = \shift.data [78]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [79], Q = \shift.data [79]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [40], Q = \shift.data [40]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [41], Q = \shift.data [41]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [42], Q = \shift.data [42]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [43], Q = \shift.data [43]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [44], Q = \shift.data [44]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [45], Q = \shift.data [45]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [46], Q = \shift.data [46]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [47], Q = \shift.data [47]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [8], Q = \shift.data [8]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [9], Q = \shift.data [9]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [10], Q = \shift.data [10]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [11], Q = \shift.data [11]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [12], Q = \shift.data [12]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [13], Q = \shift.data [13]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [14], Q = \shift.data [14]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [15], Q = \shift.data [15]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [112], Q = \shift.data [112]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [113], Q = \shift.data [113]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [114], Q = \shift.data [114]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [115], Q = \shift.data [115]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [116], Q = \shift.data [116]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [117], Q = \shift.data [117]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [118], Q = \shift.data [118]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [119], Q = \shift.data [119]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [80], Q = \shift.data [80]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [81], Q = \shift.data [81]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [82], Q = \shift.data [82]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [83], Q = \shift.data [83]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [84], Q = \shift.data [84]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [85], Q = \shift.data [85]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [86], Q = \shift.data [86]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [87], Q = \shift.data [87]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [48], Q = \shift.data [48]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [49], Q = \shift.data [49]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [50], Q = \shift.data [50]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [51], Q = \shift.data [51]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [52], Q = \shift.data [52]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [53], Q = \shift.data [53]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [54], Q = \shift.data [54]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [55], Q = \shift.data [55]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [16], Q = \shift.data [16]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [17], Q = \shift.data [17]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [18], Q = \shift.data [18]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [19], Q = \shift.data [19]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [20], Q = \shift.data [20]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [21], Q = \shift.data [21]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [22], Q = \shift.data [22]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [23], Q = \shift.data [23]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [120], Q = \shift.data [120]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [121], Q = \shift.data [121]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [122], Q = \shift.data [122]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [123], Q = \shift.data [123]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [124], Q = \shift.data [124]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [125], Q = \shift.data [125]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [126], Q = \shift.data [126]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [127], Q = \shift.data [127]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [88], Q = \shift.data [88]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [89], Q = \shift.data [89]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [90], Q = \shift.data [90]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [91], Q = \shift.data [91]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [92], Q = \shift.data [92]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [93], Q = \shift.data [93]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [94], Q = \shift.data [94]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [95], Q = \shift.data [95]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [56], Q = \shift.data [56]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [57], Q = \shift.data [57]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [58], Q = \shift.data [58]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [59], Q = \shift.data [59]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [60], Q = \shift.data [60]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [61], Q = \shift.data [61]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [62], Q = \shift.data [62]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [63], Q = \shift.data [63]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [24], Q = \shift.data [24]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [25], Q = \shift.data [25]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [26], Q = \shift.data [26]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [27], Q = \shift.data [27]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [28], Q = \shift.data [28]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [29], Q = \shift.data [29]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [30], Q = \shift.data [30]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [31], Q = \shift.data [31]).
Adding EN signal on $flatten\shift.$verific$cnt_reg$spi_shift.v:100$702 ($adff) from module spi_top (D = $flatten\shift.$verific$n306$644, Q = \shift.cnt).
Adding EN signal on $flatten\clgen.$verific$clk_out_reg$spi_clgen.v:88$452 ($adff) from module spi_top (D = $flatten\clgen.$verific$n119$408, Q = \clgen.clk_out).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~131 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~1500 debug messages>
Removed a total of 500 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 500 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell spi_top.$verific$equal_16$spi_top.v:105$115 ($eq).
Removed top 1 bits (of 3) from port B of cell spi_top.$verific$equal_20$spi_top.v:106$116 ($eq).
Removed top 1 bits (of 3) from port B of cell spi_top.$verific$equal_24$spi_top.v:107$117 ($eq).
Removed top 7 bits (of 8) from port B of cell spi_top.$verific$or_126$spi_top.v:217$153 ($or).
Removed top 5 bits (of 14) from mux cell spi_top.$verific$mux_147$spi_top.v:222$161 ($mux).
Removed top 3 bits (of 4) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1226 ($ne).
Removed top 2 bits (of 3) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1228 ($ne).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1230 ($ne).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1124 ($ne).
Removed top 2 bits (of 3) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1122 ($ne).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1018 ($ne).
Removed top 96 bits (of 128) from mux cell spi_top.$flatten\shift.$verific$mux_350$spi_shift.v:232$876 ($mux).
Removed top 64 bits (of 128) from mux cell spi_top.$flatten\shift.$verific$mux_349$spi_shift.v:232$875 ($mux).
Removed top 32 bits (of 128) from mux cell spi_top.$flatten\shift.$verific$mux_348$spi_shift.v:232$874 ($mux).
Removed top 127 bits (of 128) from port A of cell spi_top.$flatten\shift.$verific$Decoder_218$spi_shift.v:232$744 ($shl).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_17$spi_shift.v:82$684 ($mux).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_16$spi_shift.v:82$683 ($mux).
Removed top 1 bits (of 8) from port Y of cell spi_top.$flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
Removed top 1 bits (of 8) from port A of cell spi_top.$flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
Removed top 1 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_13$spi_shift.v:81$681 ($mux).
Removed top 7 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
Removed top 1 bits (of 8) from port Y of cell spi_top.$flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
Removed top 1 bits (of 8) from port A of cell spi_top.$flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_8$spi_shift.v:80$678 ($mux).
Removed top 7 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$sub_7$spi_shift.v:80$677 ($sub).
Removed top 1 bits (of 8) from port Y of cell spi_top.$flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
Removed top 1 bits (of 8) from port A of cell spi_top.$flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
Removed top 1 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
Removed cell spi_top.$flatten\shift.$verific$i6$spi_shift.v:80$675 ($not).
Removed top 15 bits (of 16) from port B of cell spi_top.$flatten\clgen.$verific$sub_12$spi_clgen.v:78$441 ($sub).
Removed top 15 bits (of 16) from port B of cell spi_top.$flatten\clgen.$verific$equal_5$spi_clgen.v:66$436 ($eq).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$2574 ($ne).
Removed top 5 bits (of 6) from mux cell spi_top.$verific$mux_176$spi_top.v:219$145 ($mux).
Removed top 32 bits (of 128) from wire spi_top.$flatten\shift.$verific$n1142$652.
Removed top 64 bits (of 128) from wire spi_top.$flatten\shift.$verific$n1271$653.
Removed top 1 bits (of 8) from wire spi_top.$flatten\shift.$verific$n135$631.
Removed top 127 bits (of 128) from wire spi_top.$flatten\shift.$verific$n1400$654.
Removed top 4 bits (of 8) from wire spi_top.$flatten\shift.$verific$n144$632.
Removed top 4 bits (of 8) from wire spi_top.$flatten\shift.$verific$n174$634.
Removed top 2 bits (of 8) from wire spi_top.$flatten\shift.$verific$n183$635.
Removed top 2 bits (of 8) from wire spi_top.$flatten\shift.$verific$n192$636.
Removed top 4 bits (of 8) from wire spi_top.$flatten\shift.$verific$n210$637.
Removed top 5 bits (of 14) from wire spi_top.$verific$n504$89.
Removed top 5 bits (of 6) from wire spi_top.$verific$n786$100.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module spi_top:
  creating $macc model for $flatten\clgen.$verific$sub_12$spi_clgen.v:78$441 ($sub).
  creating $macc model for $flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
  creating $macc model for $flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
  creating $macc model for $flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
  creating $macc model for $flatten\shift.$verific$sub_7$spi_shift.v:80$677 ($sub).
  creating $alu model for $macc $flatten\shift.$verific$sub_7$spi_shift.v:80$677.
  creating $alu model for $macc $flatten\shift.$verific$sub_6$spi_shift.v:80$676.
  creating $alu model for $macc $flatten\shift.$verific$sub_14$spi_shift.v:81$682.
  creating $alu model for $macc $flatten\shift.$verific$add_12$spi_shift.v:81$680.
  creating $alu model for $macc $flatten\clgen.$verific$sub_12$spi_clgen.v:78$441.
  creating $alu cell for $flatten\clgen.$verific$sub_12$spi_clgen.v:78$441: $auto$alumacc.cc:485:replace_alu$2587
  creating $alu cell for $flatten\shift.$verific$add_12$spi_shift.v:81$680: $auto$alumacc.cc:485:replace_alu$2590
  creating $alu cell for $flatten\shift.$verific$sub_14$spi_shift.v:81$682: $auto$alumacc.cc:485:replace_alu$2593
  creating $alu cell for $flatten\shift.$verific$sub_6$spi_shift.v:80$676: $auto$alumacc.cc:485:replace_alu$2596
  creating $alu cell for $flatten\shift.$verific$sub_7$spi_shift.v:80$677: $auto$alumacc.cc:485:replace_alu$2599
  created 5 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> stat

3.22. Printing statistics.

=== spi_top ===

   Number of wires:                589
   Number of wire bits:           2104
   Number of public wires:          72
   Number of public wire bits:     698
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                664
     $adff                           5
     $adffe                        139
     $alu                            5
     $and                           38
     $bmux                           3
     $eq                             7
     $logic_not                      2
     $mux                          154
     $ne                            24
     $not                           10
     $or                             8
     $reduce_and                   134
     $reduce_bool                  131
     $reduce_or                      3
     $shl                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$constmap:5090bc8fbcf3ae403956334bfa77f78b3de013ab$paramod$0b7ef1ec7ff4cd51af214180028bea8c50fdcd6a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$83151c8406433c0495b5b7e0dbb2075d191f092d\_80_rs_alu for cells of type $alu.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
No more expansions possible.
<suppressed ~3295 debug messages>

yosys> stat

3.24. Printing statistics.

=== spi_top ===

   Number of wires:               1564
   Number of wire bits:          10701
   Number of public wires:          72
   Number of public wire bits:     698
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3002
     $_AND_                        673
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     35
     $_DFF_PP1_                     16
     $_MUX_                       1352
     $_NOT_                         72
     $_OR_                         493
     $_XOR_                        169
     adder_carry                    14


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~262 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~1332 debug messages>
Removed a total of 444 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 38 unused cells and 705 unused wires.
<suppressed ~39 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.25.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~509 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 139 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.28.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Extracted 1700 gates and 1951 wires to a netlist network with 250 inputs and 350 outputs.

3.29.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/spi/abc_tmp.scr 
ABC:   #Luts =   630  Max Lvl =   6  Avg Lvl =   4.80  [   0.44 sec. at Pass 0]
ABC:   #Luts =   545  Max Lvl =   7  Avg Lvl =   5.25  [   7.06 sec. at Pass 1]
ABC:   #Luts =   544  Max Lvl =   6  Avg Lvl =   4.88  [   1.16 sec. at Pass 2]
ABC:   #Luts =   538  Max Lvl =   6  Avg Lvl =   4.88  [   3.54 sec. at Pass 3]
ABC:   #Luts =   538  Max Lvl =   6  Avg Lvl =   4.88  [   2.40 sec. at Pass 4]
ABC:   #Luts =   534  Max Lvl =   6  Avg Lvl =   4.75  [   3.73 sec. at Pass 5]
ABC:   #Luts =   532  Max Lvl =   7  Avg Lvl =   5.55  [   2.39 sec. at Pass 6]
ABC:   #Luts =   532  Max Lvl =   7  Avg Lvl =   5.55  [   4.26 sec. at Pass 7]
ABC:   #Luts =   530  Max Lvl =   8  Avg Lvl =   4.85  [   2.73 sec. at Pass 8]
ABC:   #Luts =   529  Max Lvl =   8  Avg Lvl =   4.85  [   4.43 sec. at Pass 9]
ABC:   #Luts =   529  Max Lvl =   8  Avg Lvl =   4.85  [   2.33 sec. at Pass 10]
ABC:   #Luts =   529  Max Lvl =   6  Avg Lvl =   4.75  [   4.10 sec. at Pass 11]
ABC:   #Luts =   529  Max Lvl =   6  Avg Lvl =   4.75  [   2.98 sec. at Pass 12]
ABC:   #Luts =   529  Max Lvl =   6  Avg Lvl =   4.75  [   4.85 sec. at Pass 13]
ABC:   #Luts =   529  Max Lvl =   6  Avg Lvl =   4.75  [   3.08 sec. at Pass 14]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      529
ABC RESULTS:        internal signals:     1351
ABC RESULTS:           input signals:      250
ABC RESULTS:          output signals:      350
Removing temp directory.

yosys> opt

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 1011 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.30.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.30.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.30.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.31. Printing statistics.

=== spi_top ===

   Number of wires:                547
   Number of wire bits:           1205
   Number of public wires:          60
   Number of public wire bits:     680
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                772
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     35
     $_DFF_PP1_                     16
     $lut                          529
     adder_carry                    14


yosys> shregmap -minlen 8 -maxlen 20

3.32. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.33. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.34. Printing statistics.

=== spi_top ===

   Number of wires:                547
   Number of wire bits:           1205
   Number of public wires:          60
   Number of public wire bits:     680
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                772
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     35
     $_DFF_PP1_                     16
     $lut                          529
     adder_carry                    14


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.35.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.35.3. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1123 debug messages>

yosys> opt_expr -mux_undef

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~16402 debug messages>

yosys> simplemap

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~6207 debug messages>
Removed a total of 2069 cells.

yosys> opt_dff -nodffe -nosdff

3.40. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 3050 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~242 debug messages>

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.43. Executing ABC pass (technology mapping using ABC).

3.43.1. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Extracted 1449 gates and 1702 wires to a netlist network with 251 inputs and 351 outputs.

3.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/yosys_verific_rs/result_04-05-2022T15-08-45/Golden_synth_rs_ade.json/spi/abc_tmp.scr 
ABC:   #Luts =   536  Max Lvl =   6  Avg Lvl =   4.88  [   0.20 sec. at Pass 0]
ABC:   #Luts =   536  Max Lvl =   6  Avg Lvl =   4.88  [   6.53 sec. at Pass 1]
ABC:   #Luts =   533  Max Lvl =   6  Avg Lvl =   4.74  [   1.80 sec. at Pass 2]
ABC:   #Luts =   530  Max Lvl =   6  Avg Lvl =   4.70  [   2.70 sec. at Pass 3]
ABC:   #Luts =   530  Max Lvl =   6  Avg Lvl =   4.70  [   1.80 sec. at Pass 4]
ABC:   #Luts =   529  Max Lvl =   6  Avg Lvl =   4.74  [   3.82 sec. at Pass 5]
ABC:   #Luts =   529  Max Lvl =   6  Avg Lvl =   4.74  [   1.98 sec. at Pass 6]
ABC:   #Luts =   529  Max Lvl =   6  Avg Lvl =   4.74  [   3.18 sec. at Pass 7]
ABC:   #Luts =   529  Max Lvl =   6  Avg Lvl =   4.74  [   2.41 sec. at Pass 8]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      529
ABC RESULTS:        internal signals:     1100
ABC RESULTS:           input signals:      251
ABC RESULTS:          output signals:      351
Removing temp directory.

yosys> opt

3.44. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 1522 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.44.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.44.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.44.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.44.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.44.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.44.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.44.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.45. Executing HIERARCHY pass (managing design hierarchy).

3.45.1. Analyzing design hierarchy..
Top module:  \spi_top

3.45.2. Analyzing design hierarchy..
Top module:  \spi_top
Removed 0 unused modules.

yosys> stat

3.46. Printing statistics.

=== spi_top ===

   Number of wires:                547
   Number of wire bits:           1205
   Number of public wires:          60
   Number of public wire bits:     680
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                772
     $lut                          529
     adder_carry                    14
     dffsre                        229


yosys> opt_clean -purge

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 27 unused wires.
<suppressed ~27 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.48. Executing Verilog backend.

yosys> bmuxmap

3.48.1. Executing BMUXMAP pass.

yosys> demuxmap

3.48.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\spi_top'.

Warnings: 51 unique messages, 51 total
End of script. Logfile hash: c114d4c695, CPU: user 8.53s system 0.07s, MEM: 55.83 MB peak
Yosys 0.16+6 (git sha1 7f5477eb1, gcc 9.1.0 -fPIC -Os)
Time spent: 98% 2x abc (448 sec), 0% 36x opt_expr (3 sec), ...
real 97.02
user 418.54
sys 38.36
