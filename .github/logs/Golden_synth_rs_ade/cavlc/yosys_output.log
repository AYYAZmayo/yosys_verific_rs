
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.19
 Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k defines.vh cavlc.v cavlc_fsm.v cavlc_len_gen.v cavlc_read_levels.v cavlc_read_run_befores.v cavlc_read_total_coeffs.v cavlc_read_total_zeros.v

yosys> verific -vlog2k defines.vh cavlc.v cavlc_fsm.v cavlc_len_gen.v cavlc_read_levels.v cavlc_read_run_befores.v cavlc_read_total_coeffs.v cavlc_read_total_zeros.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_fsm.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_len_gen.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_levels.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_run_befores.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_total_coeffs.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_total_zeros.v'

yosys> synth_rs -top cavlc -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.44

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top cavlc

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] cavlc.v:41: compiling module 'cavlc'
VERIFIC-INFO [VERI-1018] cavlc_read_total_coeffs.v:43: compiling module 'cavlc_read_total_coeffs'
VERIFIC-INFO [VERI-1018] cavlc_read_levels.v:44: compiling module 'cavlc_read_levels'
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:155: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:212: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:226: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:229: expression size 31 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:259: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:261: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:263: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:266: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:268: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:270: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:273: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:275: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:277: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:280: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:282: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:284: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:287: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:289: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:291: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:294: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:296: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:298: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:301: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:303: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:305: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:308: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:310: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:312: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:315: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:317: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:319: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:322: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:324: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:326: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:329: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:331: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:333: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:336: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:338: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:340: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:343: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:345: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:347: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:350: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:352: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:354: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:357: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:359: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:361: expression size 32 truncated to fit in target size 9
VERIFIC-INFO [VERI-1018] cavlc_read_total_zeros.v:41: compiling module 'cavlc_read_total_zeros'
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:92: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:93: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:96: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:98: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:101: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:102: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:106: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:107: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:108: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:320: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:321: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:688: expression size 32 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:689: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] cavlc_read_run_befores.v:41: compiling module 'cavlc_read_run_befores'
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:196: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:201: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:242: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:255: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:255: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] cavlc_len_gen.v:41: compiling module 'cavlc_len_gen'
VERIFIC-WARNING [VERI-1174] cavlc_len_gen.v:70: synthesis - simulation differences may occur when using parallel_case directive
VERIFIC-WARNING [VERI-1209] cavlc_len_gen.v:79: expression size 32 truncated to fit in target size 5
VERIFIC-INFO [VERI-1018] cavlc_fsm.v:41: compiling module 'cavlc_fsm'
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:106: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:135: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:139: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:144: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:153: expression size 32 truncated to fit in target size 4
Importing module cavlc.
Importing module cavlc_fsm.
Importing module cavlc_len_gen.
Importing module cavlc_read_levels.
Importing module cavlc_read_run_befores.
Importing module cavlc_read_total_coeffs.
Importing module cavlc_read_total_zeros.

3.3.1. Analyzing design hierarchy..
Top module:  \cavlc
Used module:     \cavlc_fsm
Used module:     \cavlc_len_gen
Used module:     \cavlc_read_run_befores
Used module:     \cavlc_read_total_zeros
Used module:     \cavlc_read_levels
Used module:     \cavlc_read_total_coeffs

3.3.2. Analyzing design hierarchy..
Top module:  \cavlc
Used module:     \cavlc_fsm
Used module:     \cavlc_len_gen
Used module:     \cavlc_read_run_befores
Used module:     \cavlc_read_total_zeros
Used module:     \cavlc_read_levels
Used module:     \cavlc_read_total_coeffs
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc_read_total_zeros.
<suppressed ~63 debug messages>
Optimizing module cavlc_read_total_coeffs.
<suppressed ~127 debug messages>
Optimizing module cavlc_read_run_befores.
<suppressed ~31 debug messages>
Optimizing module cavlc_read_levels.
<suppressed ~43 debug messages>
Optimizing module cavlc_len_gen.
Optimizing module cavlc_fsm.
<suppressed ~15 debug messages>
Optimizing module cavlc.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module cavlc_read_total_zeros.
Deleting now unused module cavlc_read_total_coeffs.
Deleting now unused module cavlc_read_run_befores.
Deleting now unused module cavlc_read_levels.
Deleting now unused module cavlc_len_gen.
Deleting now unused module cavlc_fsm.
<suppressed ~6 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 4 unused cells and 1296 unused wires.
<suppressed ~87 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module cavlc...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\cavlc_read_levels.$verific$mux_134$cavlc_read_levels.v:244$1092: \cavlc_read_levels.level -> { 1'0 \cavlc_read_levels.level [7:0] }
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\cavlc_read_total_zeros.$verific$mux_590$cavlc_read_total_zeros.v:712$3697.
Removed 1 multiplexer ports.
<suppressed ~110 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
    New ctrl vector for $pmux cell $flatten\cavlc_fsm.$verific$select_78$cavlc_fsm.v:156$734: { $flatten\cavlc_fsm.$verific$n328$618 $flatten\cavlc_fsm.$verific$n329$619 $flatten\cavlc_fsm.$verific$n332$622 $flatten\cavlc_fsm.$verific$n333$623 $flatten\cavlc_fsm.$verific$n334$624 $auto$opt_reduce.cc:134:opt_pmux$3705 }
    New ctrl vector for $pmux cell $flatten\cavlc_len_gen.$verific$select_18$cavlc_len_gen.v:80$757: { \cavlc_fsm.state [1] $auto$opt_reduce.cc:134:opt_pmux$3707 \cavlc_fsm.state [6] \cavlc_fsm.state [7] $flatten\cavlc_len_gen.$verific$n48$745 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_121$cavlc_read_run_befores.v:259$1572: { $flatten\cavlc_read_run_befores.$verific$n400$1264 $flatten\cavlc_read_run_befores.$verific$n401$1265 $flatten\cavlc_read_run_befores.$verific$n402$1266 $flatten\cavlc_read_run_befores.$verific$n403$1267 $flatten\cavlc_read_run_befores.$verific$n404$1268 $flatten\cavlc_read_run_befores.$verific$n405$1269 $flatten\cavlc_read_run_befores.$verific$n406$1270 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_122$cavlc_read_run_befores.v:259$1573: { $flatten\cavlc_read_run_befores.$verific$n400$1264 $flatten\cavlc_read_run_befores.$verific$n401$1265 $flatten\cavlc_read_run_befores.$verific$n402$1266 $flatten\cavlc_read_run_befores.$verific$n403$1267 $flatten\cavlc_read_run_befores.$verific$n404$1268 $flatten\cavlc_read_run_befores.$verific$n405$1269 $flatten\cavlc_read_run_befores.$verific$n406$1270 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_236$cavlc_read_run_befores.v:348$1614: { $flatten\cavlc_read_run_befores.$verific$n1178$1278 $auto$opt_reduce.cc:134:opt_pmux$3709 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_237$cavlc_read_run_befores.v:348$1615: { $flatten\cavlc_read_run_befores.$verific$n1179$1279 $auto$opt_reduce.cc:134:opt_pmux$3711 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_238$cavlc_read_run_befores.v:348$1616: { $flatten\cavlc_read_run_befores.$verific$n1180$1280 $auto$opt_reduce.cc:134:opt_pmux$3713 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_239$cavlc_read_run_befores.v:348$1617: { $flatten\cavlc_read_run_befores.$verific$n1181$1281 $auto$opt_reduce.cc:134:opt_pmux$3715 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_240$cavlc_read_run_befores.v:348$1618: { $flatten\cavlc_read_run_befores.$verific$n1182$1282 $auto$opt_reduce.cc:134:opt_pmux$3717 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_241$cavlc_read_run_befores.v:348$1619: { $flatten\cavlc_read_run_befores.$verific$n1183$1283 $auto$opt_reduce.cc:134:opt_pmux$3719 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_242$cavlc_read_run_befores.v:348$1620: { $flatten\cavlc_read_run_befores.$verific$n1184$1284 $auto$opt_reduce.cc:134:opt_pmux$3721 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_243$cavlc_read_run_befores.v:348$1621: { $flatten\cavlc_read_run_befores.$verific$n1185$1285 $auto$opt_reduce.cc:134:opt_pmux$3723 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_244$cavlc_read_run_befores.v:348$1622: { $flatten\cavlc_read_run_befores.$verific$n1186$1286 $auto$opt_reduce.cc:134:opt_pmux$3725 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_245$cavlc_read_run_befores.v:348$1623: { $flatten\cavlc_read_run_befores.$verific$n1187$1287 $auto$opt_reduce.cc:134:opt_pmux$3727 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_246$cavlc_read_run_befores.v:348$1624: { $flatten\cavlc_read_run_befores.$verific$n1188$1288 $auto$opt_reduce.cc:134:opt_pmux$3729 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_247$cavlc_read_run_befores.v:348$1625: { $flatten\cavlc_read_run_befores.$verific$n1189$1289 $auto$opt_reduce.cc:134:opt_pmux$3731 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_248$cavlc_read_run_befores.v:348$1626: { $flatten\cavlc_read_run_befores.$verific$n1190$1290 $auto$opt_reduce.cc:134:opt_pmux$3733 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_249$cavlc_read_run_befores.v:348$1627: { $flatten\cavlc_read_run_befores.$verific$n1191$1291 $auto$opt_reduce.cc:134:opt_pmux$3735 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_250$cavlc_read_run_befores.v:348$1628: { $auto$opt_reduce.cc:134:opt_pmux$3737 $flatten\cavlc_read_run_befores.$verific$n1192$1292 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1051$cavlc_read_total_coeffs.v:1147$3102: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4152$1943 $flatten\cavlc_read_total_coeffs.$verific$n4155$1946 $flatten\cavlc_read_total_coeffs.$verific$n4161$1952 $flatten\cavlc_read_total_coeffs.$verific$n4164$1955 $flatten\cavlc_read_total_coeffs.$verific$n4166$1957 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1052$cavlc_read_total_coeffs.v:1147$3103: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4152$1943 $flatten\cavlc_read_total_coeffs.$verific$n4155$1946 $flatten\cavlc_read_total_coeffs.$verific$n4158$1949 $flatten\cavlc_read_total_coeffs.$verific$n4161$1952 $auto$opt_reduce.cc:134:opt_pmux$3739 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1053$cavlc_read_total_coeffs.v:1147$3104: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4149$1940 $flatten\cavlc_read_total_coeffs.$verific$n4152$1943 $auto$opt_reduce.cc:134:opt_pmux$3743 $flatten\cavlc_read_total_coeffs.$verific$n4164$1955 $auto$opt_reduce.cc:134:opt_pmux$3741 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_384$cavlc_read_total_coeffs.v:444$2771: { $flatten\cavlc_read_total_coeffs.$verific$n1613$1792 $flatten\cavlc_read_total_coeffs.$verific$n1616$1795 $flatten\cavlc_read_total_coeffs.$verific$n1619$1798 $flatten\cavlc_read_total_coeffs.$verific$n1622$1801 $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $flatten\cavlc_read_total_coeffs.$verific$n1640$1819 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $auto$opt_reduce.cc:134:opt_pmux$3745 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_385$cavlc_read_total_coeffs.v:444$2772: { $flatten\cavlc_read_total_coeffs.$verific$n1610$1789 $flatten\cavlc_read_total_coeffs.$verific$n1613$1792 $flatten\cavlc_read_total_coeffs.$verific$n1616$1795 $flatten\cavlc_read_total_coeffs.$verific$n1619$1798 $flatten\cavlc_read_total_coeffs.$verific$n1622$1801 $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $flatten\cavlc_read_total_coeffs.$verific$n1640$1819 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_386$cavlc_read_total_coeffs.v:444$2773: { \cavlc_read_total_coeffs.rbsp_1 [0] $flatten\cavlc_read_total_coeffs.$verific$n1610$1789 $flatten\cavlc_read_total_coeffs.$verific$n1613$1792 $flatten\cavlc_read_total_coeffs.$verific$n1616$1795 $flatten\cavlc_read_total_coeffs.$verific$n1619$1798 $flatten\cavlc_read_total_coeffs.$verific$n1622$1801 $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $auto$opt_reduce.cc:134:opt_pmux$3749 $auto$opt_reduce.cc:134:opt_pmux$3747 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_741$cavlc_read_total_coeffs.v:748$2967: { \cavlc_read_total_coeffs.rbsp_2 [0] $flatten\cavlc_read_total_coeffs.$verific$n2947$1870 $flatten\cavlc_read_total_coeffs.$verific$n2950$1873 $flatten\cavlc_read_total_coeffs.$verific$n2953$1876 $flatten\cavlc_read_total_coeffs.$verific$n2956$1879 $flatten\cavlc_read_total_coeffs.$verific$n2959$1882 $flatten\cavlc_read_total_coeffs.$verific$n2962$1885 $flatten\cavlc_read_total_coeffs.$verific$n2965$1888 $flatten\cavlc_read_total_coeffs.$verific$n2968$1891 $flatten\cavlc_read_total_coeffs.$verific$n2974$1897 $flatten\cavlc_read_total_coeffs.$verific$n2977$1900 $auto$opt_reduce.cc:134:opt_pmux$3751 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_959$cavlc_read_total_coeffs.v:1052$3052: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$1910 $flatten\cavlc_read_total_coeffs.$verific$n3831$1913 $flatten\cavlc_read_total_coeffs.$verific$n3834$1916 $flatten\cavlc_read_total_coeffs.$verific$n3837$1919 $flatten\cavlc_read_total_coeffs.$verific$n3840$1922 $flatten\cavlc_read_total_coeffs.$verific$n3843$1925 $auto$opt_reduce.cc:134:opt_pmux$3753 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_960$cavlc_read_total_coeffs.v:1052$3053: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$1910 $flatten\cavlc_read_total_coeffs.$verific$n3831$1913 $flatten\cavlc_read_total_coeffs.$verific$n3834$1916 $flatten\cavlc_read_total_coeffs.$verific$n3837$1919 $flatten\cavlc_read_total_coeffs.$verific$n3840$1922 $flatten\cavlc_read_total_coeffs.$verific$n3843$1925 $flatten\cavlc_read_total_coeffs.$verific$n3846$1928 $flatten\cavlc_read_total_coeffs.$verific$n3849$1931 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_961$cavlc_read_total_coeffs.v:1052$3054: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$1910 $flatten\cavlc_read_total_coeffs.$verific$n3831$1913 $flatten\cavlc_read_total_coeffs.$verific$n3834$1916 $flatten\cavlc_read_total_coeffs.$verific$n3837$1919 $flatten\cavlc_read_total_coeffs.$verific$n3840$1922 $flatten\cavlc_read_total_coeffs.$verific$n3843$1925 $flatten\cavlc_read_total_coeffs.$verific$n3846$1928 $auto$opt_reduce.cc:134:opt_pmux$3755 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_138$cavlc_read_total_zeros.v:217$3590: { $flatten\cavlc_read_total_zeros.$verific$n440$3154 $flatten\cavlc_read_total_zeros.$verific$n443$3157 $flatten\cavlc_read_total_zeros.$verific$n446$3160 $flatten\cavlc_read_total_zeros.$verific$n449$3163 $flatten\cavlc_read_total_zeros.$verific$n452$3166 $flatten\cavlc_read_total_zeros.$verific$n455$3169 $flatten\cavlc_read_total_zeros.$verific$n458$3172 $flatten\cavlc_read_total_zeros.$verific$n460$3174 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_139$cavlc_read_total_zeros.v:217$3591: { \cavlc_read_total_zeros.rbsp_LE3 [0] $flatten\cavlc_read_total_zeros.$verific$n440$3154 $flatten\cavlc_read_total_zeros.$verific$n443$3157 $flatten\cavlc_read_total_zeros.$verific$n446$3160 $flatten\cavlc_read_total_zeros.$verific$n449$3163 $flatten\cavlc_read_total_zeros.$verific$n452$3166 $flatten\cavlc_read_total_zeros.$verific$n455$3169 $auto$opt_reduce.cc:134:opt_pmux$3757 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_230$cavlc_read_total_zeros.v:317$3616: { \cavlc_read_total_zeros.rbsp_LE3 [0] $flatten\cavlc_read_total_zeros.$verific$n440$3154 $flatten\cavlc_read_total_zeros.$verific$n443$3157 $auto$opt_reduce.cc:134:opt_pmux$3759 $flatten\cavlc_read_total_zeros.$verific$n451$3165 }
  Optimizing cells in module \cavlc.
Performed a total of 32 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_5_reg$cavlc_read_total_coeffs.v:149$2550 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_4_reg$cavlc_read_total_coeffs.v:149$2549 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_3_reg$cavlc_read_total_coeffs.v:149$2548 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_2_reg$cavlc_read_total_coeffs.v:149$2547 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_1_reg$cavlc_read_total_coeffs.v:149$2546 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$TrailingOnes_reg$cavlc_read_total_coeffs.v:1193$3136 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$TotalCoeff_reg$cavlc_read_total_coeffs.v:1193$3137 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_9_reg$cavlc_read_run_befores.v:366$1732 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_8_reg$cavlc_read_run_befores.v:366$1731 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_7_reg$cavlc_read_run_befores.v:366$1730 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_6_reg$cavlc_read_run_befores.v:366$1729 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_5_reg$cavlc_read_run_befores.v:366$1728 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_4_reg$cavlc_read_run_befores.v:366$1727 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_3_reg$cavlc_read_run_befores.v:366$1726 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_2_reg$cavlc_read_run_befores.v:366$1725 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_1_reg$cavlc_read_run_befores.v:366$1724 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_15_reg$cavlc_read_run_befores.v:366$1738 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_14_reg$cavlc_read_run_befores.v:366$1737 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_13_reg$cavlc_read_run_befores.v:366$1736 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_12_reg$cavlc_read_run_befores.v:366$1735 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_11_reg$cavlc_read_run_befores.v:366$1734 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_10_reg$cavlc_read_run_befores.v:366$1733 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_0_reg$cavlc_read_run_befores.v:366$1723 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$ZeroLeft_reg$cavlc_read_run_befores.v:286$1587 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$suffixLength_reg$cavlc_read_levels.v:187$1054 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_prefix_reg$cavlc_read_levels.v:165$1026 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_code_tmp_reg$cavlc_read_levels.v:213$1077 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_abs_reg$cavlc_read_levels.v:245$1095 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_9_reg$cavlc_read_levels.v:382$1210 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_8_reg$cavlc_read_levels.v:382$1209 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_7_reg$cavlc_read_levels.v:382$1208 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_6_reg$cavlc_read_levels.v:382$1207 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_5_reg$cavlc_read_levels.v:382$1206 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_4_reg$cavlc_read_levels.v:382$1205 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_3_reg$cavlc_read_levels.v:382$1204 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_2_reg$cavlc_read_levels.v:382$1203 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_1_reg$cavlc_read_levels.v:382$1202 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_15_reg$cavlc_read_levels.v:382$1216 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_14_reg$cavlc_read_levels.v:382$1215 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_13_reg$cavlc_read_levels.v:382$1214 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_12_reg$cavlc_read_levels.v:382$1213 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_11_reg$cavlc_read_levels.v:382$1212 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_10_reg$cavlc_read_levels.v:382$1211 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_0_reg$cavlc_read_levels.v:382$1201 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$valid_reg$cavlc_fsm.v:156$740 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$state_reg$cavlc_fsm.v:156$738 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$i_reg$cavlc_fsm.v:156$739 ($aldff) from module cavlc.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~110 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking cavlc.cavlc_fsm.state as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking cavlc.cavlc_read_levels.level_prefix as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~110 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_5_reg$cavlc_read_total_coeffs.v:149$2550 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] }, Q = { \cavlc_read_total_coeffs.rbsp_5 [0] \cavlc_read_total_coeffs.rbsp_5 [1] \cavlc_read_total_coeffs.rbsp_5 [2] \cavlc_read_total_coeffs.rbsp_5 [3] \cavlc_read_total_coeffs.rbsp_5 [4] \cavlc_read_total_coeffs.rbsp_5 [5] \cavlc_read_total_coeffs.rbsp_5 [6] \cavlc_read_total_coeffs.rbsp_5 [7] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_4_reg$cavlc_read_total_coeffs.v:149$2549 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] }, Q = { \cavlc_read_total_coeffs.rbsp_4 [0] \cavlc_read_total_coeffs.rbsp_4 [1] \cavlc_read_total_coeffs.rbsp_4 [2] \cavlc_read_total_coeffs.rbsp_4 [3] \cavlc_read_total_coeffs.rbsp_4 [4] \cavlc_read_total_coeffs.rbsp_4 [5] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_3_reg$cavlc_read_total_coeffs.v:149$2548 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] }, Q = { \cavlc_read_total_coeffs.rbsp_3 [0] \cavlc_read_total_coeffs.rbsp_3 [1] \cavlc_read_total_coeffs.rbsp_3 [2] \cavlc_read_total_coeffs.rbsp_3 [3] \cavlc_read_total_coeffs.rbsp_3 [4] \cavlc_read_total_coeffs.rbsp_3 [5] \cavlc_read_total_coeffs.rbsp_3 [6] \cavlc_read_total_coeffs.rbsp_3 [7] \cavlc_read_total_coeffs.rbsp_3 [8] \cavlc_read_total_coeffs.rbsp_3 [9] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_2_reg$cavlc_read_total_coeffs.v:149$2547 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] \rbsp [10] \rbsp [11] \rbsp [12] \rbsp [13] }, Q = { \cavlc_read_total_coeffs.rbsp_2 [0] \cavlc_read_total_coeffs.rbsp_2 [1] \cavlc_read_total_coeffs.rbsp_2 [2] \cavlc_read_total_coeffs.rbsp_2 [3] \cavlc_read_total_coeffs.rbsp_2 [4] \cavlc_read_total_coeffs.rbsp_2 [5] \cavlc_read_total_coeffs.rbsp_2 [6] \cavlc_read_total_coeffs.rbsp_2 [7] \cavlc_read_total_coeffs.rbsp_2 [8] \cavlc_read_total_coeffs.rbsp_2 [9] \cavlc_read_total_coeffs.rbsp_2 [10] \cavlc_read_total_coeffs.rbsp_2 [11] \cavlc_read_total_coeffs.rbsp_2 [12] \cavlc_read_total_coeffs.rbsp_2 [13] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_1_reg$cavlc_read_total_coeffs.v:149$2546 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] \rbsp [10] \rbsp [11] \rbsp [12] \rbsp [13] \rbsp [14] \rbsp [15] }, Q = { \cavlc_read_total_coeffs.rbsp_1 [0] \cavlc_read_total_coeffs.rbsp_1 [1] \cavlc_read_total_coeffs.rbsp_1 [2] \cavlc_read_total_coeffs.rbsp_1 [3] \cavlc_read_total_coeffs.rbsp_1 [4] \cavlc_read_total_coeffs.rbsp_1 [5] \cavlc_read_total_coeffs.rbsp_1 [6] \cavlc_read_total_coeffs.rbsp_1 [7] \cavlc_read_total_coeffs.rbsp_1 [8] \cavlc_read_total_coeffs.rbsp_1 [9] \cavlc_read_total_coeffs.rbsp_1 [10] \cavlc_read_total_coeffs.rbsp_1 [11] \cavlc_read_total_coeffs.rbsp_1 [12] \cavlc_read_total_coeffs.rbsp_1 [13] \cavlc_read_total_coeffs.rbsp_1 [14] \cavlc_read_total_coeffs.rbsp_1 [15] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$TrailingOnes_reg$cavlc_read_total_coeffs.v:1193$3136 ($adff) from module cavlc (D = \cavlc_fsm.TrailingOnes_comb, Q = \cavlc_read_total_coeffs.TrailingOnes).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$TotalCoeff_reg$cavlc_read_total_coeffs.v:1193$3137 ($adff) from module cavlc (D = \cavlc_fsm.TotalCoeff_comb, Q = \cavlc_read_total_coeffs.TotalCoeff).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_9_reg$cavlc_read_run_befores.v:366$1732 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2079$1494, Q = \cavlc_read_run_befores.coeff_9).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_8_reg$cavlc_read_run_befores.v:366$1731 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2069$1493, Q = \cavlc_read_run_befores.coeff_8).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_7_reg$cavlc_read_run_befores.v:366$1730 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2059$1492, Q = \cavlc_read_run_befores.coeff_7).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_6_reg$cavlc_read_run_befores.v:366$1729 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2049$1491, Q = \cavlc_read_run_befores.coeff_6).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_5_reg$cavlc_read_run_befores.v:366$1728 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2039$1490, Q = \cavlc_read_run_befores.coeff_5).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_4_reg$cavlc_read_run_befores.v:366$1727 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2029$1489, Q = \cavlc_read_run_befores.coeff_4).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_3_reg$cavlc_read_run_befores.v:366$1726 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2019$1488, Q = \cavlc_read_run_befores.coeff_3).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_2_reg$cavlc_read_run_befores.v:366$1725 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2009$1487, Q = \cavlc_read_run_befores.coeff_2).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_1_reg$cavlc_read_run_befores.v:366$1724 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n1999$1486, Q = \cavlc_read_run_befores.coeff_1).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_15_reg$cavlc_read_run_befores.v:366$1738 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2139$1500, Q = \cavlc_read_run_befores.coeff_15).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_14_reg$cavlc_read_run_befores.v:366$1737 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2129$1499, Q = \cavlc_read_run_befores.coeff_14).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_13_reg$cavlc_read_run_befores.v:366$1736 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2119$1498, Q = \cavlc_read_run_befores.coeff_13).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_12_reg$cavlc_read_run_befores.v:366$1735 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2109$1497, Q = \cavlc_read_run_befores.coeff_12).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_11_reg$cavlc_read_run_befores.v:366$1734 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2099$1496, Q = \cavlc_read_run_befores.coeff_11).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_10_reg$cavlc_read_run_befores.v:366$1733 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2089$1495, Q = \cavlc_read_run_befores.coeff_10).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_0_reg$cavlc_read_run_befores.v:366$1723 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n1989$1485, Q = \cavlc_read_run_befores.coeff_0).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$ZeroLeft_reg$cavlc_read_run_befores.v:286$1587 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n494$1386, Q = \cavlc_read_run_befores.ZeroLeft).
Adding EN signal on $flatten\cavlc_read_levels.$verific$suffixLength_reg$cavlc_read_levels.v:187$1054 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n363$844, Q = \cavlc_read_levels.suffixLength).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_prefix_reg$cavlc_read_levels.v:165$1026 ($adff) from module cavlc (D = \cavlc_read_levels.level_prefix_comb, Q = \cavlc_read_levels.level_prefix).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_code_tmp_reg$cavlc_read_levels.v:213$1077 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n551$857 [8:0], Q = \cavlc_read_levels.level_code_tmp).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_abs_reg$cavlc_read_levels.v:245$1095 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n800$868, Q = \cavlc_read_levels.level_abs).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_9_reg$cavlc_read_levels.v:382$1210 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961, Q = \cavlc_read_levels.level_9).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_8_reg$cavlc_read_levels.v:382$1209 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962, Q = \cavlc_read_levels.level_8).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_7_reg$cavlc_read_levels.v:382$1208 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963, Q = \cavlc_read_levels.level_7).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_6_reg$cavlc_read_levels.v:382$1207 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964, Q = \cavlc_read_levels.level_6).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_5_reg$cavlc_read_levels.v:382$1206 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965, Q = \cavlc_read_levels.level_5).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_4_reg$cavlc_read_levels.v:382$1205 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966, Q = \cavlc_read_levels.level_4).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_3_reg$cavlc_read_levels.v:382$1204 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967, Q = \cavlc_read_levels.level_3).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_2_reg$cavlc_read_levels.v:382$1203 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968, Q = \cavlc_read_levels.level_2).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_1_reg$cavlc_read_levels.v:382$1202 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969, Q = \cavlc_read_levels.level_1).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_15_reg$cavlc_read_levels.v:382$1216 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955, Q = \cavlc_read_levels.level_15).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_14_reg$cavlc_read_levels.v:382$1215 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956, Q = \cavlc_read_levels.level_14).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_13_reg$cavlc_read_levels.v:382$1214 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957, Q = \cavlc_read_levels.level_13).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_12_reg$cavlc_read_levels.v:382$1213 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958, Q = \cavlc_read_levels.level_12).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_11_reg$cavlc_read_levels.v:382$1212 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959, Q = \cavlc_read_levels.level_11).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_10_reg$cavlc_read_levels.v:382$1211 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960, Q = \cavlc_read_levels.level_10).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_0_reg$cavlc_read_levels.v:382$1201 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970, Q = \cavlc_read_levels.level_0).
Adding EN signal on $flatten\cavlc_fsm.$verific$valid_reg$cavlc_fsm.v:156$740 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n346$627, Q = \cavlc_fsm.valid).
Adding EN signal on $flatten\cavlc_fsm.$verific$state_reg$cavlc_fsm.v:156$738 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n336$667, Q = \cavlc_fsm.state).
Adding EN signal on $flatten\cavlc_fsm.$verific$i_reg$cavlc_fsm.v:156$739 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n347$668, Q = \cavlc_fsm.i).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 28 unused cells and 28 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~38 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~108 debug messages>
Removed a total of 36 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 37 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_963$cavlc_read_total_coeffs.v:1060$3056 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_902$cavlc_read_total_coeffs.v:1013$3018 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_886$cavlc_read_total_coeffs.v:1013$3002 ($mux).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_878$cavlc_read_total_coeffs.v:1004$2999 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_874$cavlc_read_total_coeffs.v:999$2998 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_866$cavlc_read_total_coeffs.v:989$2996 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_959$cavlc_read_total_coeffs.v:1052$3052 ($pmux).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058 ($add).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_686$cavlc_read_total_coeffs.v:741$2927 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_670$cavlc_read_total_coeffs.v:722$2921 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_666$cavlc_read_total_coeffs.v:722$2917 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_993$cavlc_read_total_coeffs.v:1107$3069 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_648$cavlc_read_total_coeffs.v:708$2907 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_624$cavlc_read_total_coeffs.v:690$2892 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_623$cavlc_read_total_coeffs.v:690$2891 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_995$cavlc_read_total_coeffs.v:1107$3071 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_614$cavlc_read_total_coeffs.v:679$2887 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_611$cavlc_read_total_coeffs.v:675$2886 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_608$cavlc_read_total_coeffs.v:671$2885 ($eq).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_585$cavlc_read_total_coeffs.v:655$2869 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_584$cavlc_read_total_coeffs.v:655$2868 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_579$cavlc_read_total_coeffs.v:648$2867 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_576$cavlc_read_total_coeffs.v:644$2866 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_564$cavlc_read_total_coeffs.v:628$2862 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_548$cavlc_read_total_coeffs.v:620$2849 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_547$cavlc_read_total_coeffs.v:620$2848 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_538$cavlc_read_total_coeffs.v:609$2845 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_535$cavlc_read_total_coeffs.v:605$2844 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_526$cavlc_read_total_coeffs.v:593$2841 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_517$cavlc_read_total_coeffs.v:585$2835 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_516$cavlc_read_total_coeffs.v:585$2834 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_997$cavlc_read_total_coeffs.v:1107$3073 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_511$cavlc_read_total_coeffs.v:578$2832 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_501$cavlc_read_total_coeffs.v:566$2827 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_481$cavlc_read_total_coeffs.v:547$2816 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_480$cavlc_read_total_coeffs.v:547$2815 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_475$cavlc_read_total_coeffs.v:540$2814 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_463$cavlc_read_total_coeffs.v:528$2809 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_446$cavlc_read_total_coeffs.v:509$2804 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_1005$cavlc_read_total_coeffs.v:1118$3076 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_436$cavlc_read_total_coeffs.v:509$2794 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_435$cavlc_read_total_coeffs.v:509$2793 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_428$cavlc_read_total_coeffs.v:500$2790 ($eq).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_411$cavlc_read_total_coeffs.v:477$2784 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_409$cavlc_read_total_coeffs.v:477$2782 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_407$cavlc_read_total_coeffs.v:477$2780 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_394$cavlc_read_total_coeffs.v:460$2777 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_393$cavlc_read_total_coeffs.v:460$2776 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_297$cavlc_read_total_coeffs.v:418$2707 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_287$cavlc_read_total_coeffs.v:407$2701 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_284$cavlc_read_total_coeffs.v:403$2699 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_275$cavlc_read_total_coeffs.v:391$2695 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_259$cavlc_read_total_coeffs.v:383$2682 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_258$cavlc_read_total_coeffs.v:383$2681 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_249$cavlc_read_total_coeffs.v:372$2676 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_243$cavlc_read_total_coeffs.v:364$2674 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_240$cavlc_read_total_coeffs.v:360$2672 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_221$cavlc_read_total_coeffs.v:348$2658 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_220$cavlc_read_total_coeffs.v:348$2657 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_1052$cavlc_read_total_coeffs.v:1147$3103 ($pmux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_1053$cavlc_read_total_coeffs.v:1147$3104 ($pmux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_211$cavlc_read_total_coeffs.v:337$2652 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_205$cavlc_read_total_coeffs.v:329$2650 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_202$cavlc_read_total_coeffs.v:325$2648 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_182$cavlc_read_total_coeffs.v:313$2632 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_181$cavlc_read_total_coeffs.v:313$2631 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_176$cavlc_read_total_coeffs.v:306$2628 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_170$cavlc_read_total_coeffs.v:298$2625 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_161$cavlc_read_total_coeffs.v:286$2620 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_152$cavlc_read_total_coeffs.v:278$2614 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_151$cavlc_read_total_coeffs.v:278$2613 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_146$cavlc_read_total_coeffs.v:271$2611 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_134$cavlc_read_total_coeffs.v:259$2604 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_133$cavlc_read_total_coeffs.v:259$2603 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_128$cavlc_read_total_coeffs.v:252$2601 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_116$cavlc_read_total_coeffs.v:240$2594 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_115$cavlc_read_total_coeffs.v:240$2593 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_110$cavlc_read_total_coeffs.v:233$2591 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_98$cavlc_read_total_coeffs.v:221$2584 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_97$cavlc_read_total_coeffs.v:221$2583 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_92$cavlc_read_total_coeffs.v:214$2581 ($eq).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_84$cavlc_read_total_coeffs.v:202$2575 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_80$cavlc_read_total_coeffs.v:202$2571 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_79$cavlc_read_total_coeffs.v:202$2570 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_67$cavlc_read_total_coeffs.v:185$2565 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_63$cavlc_read_total_coeffs.v:185$2561 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_62$cavlc_read_total_coeffs.v:185$2560 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_920$cavlc_read_total_coeffs.v:1045$3025 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_171$cavlc_read_levels.v:270$1106 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_162$cavlc_read_levels.v:263$1100 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_158$cavlc_read_levels.v:259$1097 ($mux).
Removed top 31 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
Removed top 22 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
Removed top 30 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
Removed top 22 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 ($neg).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 ($neg).
Removed top 8 bits (of 9) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082 ($add).
Removed top 7 bits (of 9) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080 ($add).
Removed top 28 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
Removed top 23 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
Removed top 28 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_104$cavlc_read_levels.v:211$1070 ($shl).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_104$cavlc_read_levels.v:211$1070 ($shl).
Removed top 2 bits (of 3) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_85$cavlc_read_levels.v:194$1055 ($lt).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046 ($add).
Removed top 7 bits (of 9) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_72$cavlc_read_levels.v:185$1042 ($shl).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041 ($sub).
Removed top 7 bits (of 9) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_66$cavlc_read_levels.v:181$1038 ($lt).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_59$cavlc_read_levels.v:177$1032 ($lt).
Removed top 28 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$equal_52$cavlc_read_levels.v:171$1029 ($eq).
Removed top 31 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028 ($sub).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027 ($sub).
Removed top 4 bits (of 6) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027 ($sub).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218 ($add).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_403$cavlc_read_levels.v:396$1227 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_404$cavlc_read_levels.v:396$1228 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_405$cavlc_read_levels.v:396$1229 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4004 ($ne).
Removed top 1 bits (of 2) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3936 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3925 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3916 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3907 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3898 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3889 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3880 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3871 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3862 ($ne).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_283$cavlc_read_total_zeros.v:393$3641 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_357$cavlc_read_total_zeros.v:467$3653 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_247$cavlc_read_total_zeros.v:351$3625 ($mux).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_689$cavlc_read_total_zeros.v:505$3666 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_471$cavlc_read_total_zeros.v:576$3667 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_211$cavlc_read_total_zeros.v:315$3615 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_591$cavlc_read_total_zeros.v:712$3698 ($mux).
Removed top 1 bits (of 12) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_690$cavlc_read_total_zeros.v:512$3658 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_195$cavlc_read_total_zeros.v:289$3609 ($mux).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_686$cavlc_read_total_zeros.v:595$3671 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_161$cavlc_read_total_zeros.v:255$3600 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_153$cavlc_read_total_zeros.v:241$3597 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_151$cavlc_read_total_zeros.v:240$3595 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_105$cavlc_read_total_zeros.v:211$3567 ($mux).
Removed top 1 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_682$cavlc_read_total_zeros.v:610$3678 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_101$cavlc_read_total_zeros.v:204$3565 ($mux).
Removed top 2 bits (of 3) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_359$cavlc_read_total_zeros.v:468$3654 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_97$cavlc_read_total_zeros.v:197$3563 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_552$cavlc_read_total_zeros.v:664$3680 ($mux).
Removed top 3 bits (of 16) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_692$cavlc_read_total_zeros.v:565$3657 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_89$cavlc_read_total_zeros.v:183$3559 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_85$cavlc_read_total_zeros.v:176$3557 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_81$cavlc_read_total_zeros.v:169$3555 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_284$cavlc_read_total_zeros.v:394$3642 ($mux).
Removed top 5 bits (of 6) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_664$cavlc_read_total_zeros.v:678$3686 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_60$cavlc_read_total_zeros.v:150$3536 ($mux).
Removed top 1 bits (of 6) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_663$cavlc_read_total_zeros.v:678$3687 ($mux).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_zeros.$verific$equal_45$cavlc_read_total_zeros.v:131$3531 ($eq).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_628$cavlc_read_total_zeros.v:678$3688 ($mux).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_zeros.$verific$equal_30$cavlc_read_total_zeros.v:115$3523 ($eq).
Removed top 3 bits (of 12) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_626$cavlc_read_total_zeros.v:685$3513 ($mux).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3853 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3844 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3835 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3826 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3817 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3808 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3799 ($ne).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_271$cavlc_read_run_befores.v:357$1648 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_268$cavlc_read_run_befores.v:356$1645 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_265$cavlc_read_run_befores.v:355$1642 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_262$cavlc_read_run_befores.v:354$1639 ($le).
Removed top 2 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_259$cavlc_read_run_befores.v:353$1636 ($le).
Removed top 2 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_256$cavlc_read_run_befores.v:352$1633 ($le).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_253$cavlc_read_run_befores.v:351$1630 ($le).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_234$cavlc_read_run_befores.v:345$1610 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_233$cavlc_read_run_befores.v:344$1609 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_232$cavlc_read_run_befores.v:343$1608 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_231$cavlc_read_run_befores.v:342$1607 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_230$cavlc_read_run_befores.v:341$1606 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_229$cavlc_read_run_befores.v:340$1605 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_228$cavlc_read_run_befores.v:339$1604 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_227$cavlc_read_run_befores.v:338$1603 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_226$cavlc_read_run_befores.v:337$1602 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_225$cavlc_read_run_befores.v:336$1601 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_224$cavlc_read_run_befores.v:335$1600 ($eq).
Removed top 3 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_223$cavlc_read_run_befores.v:334$1599 ($eq).
Removed top 3 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_222$cavlc_read_run_befores.v:333$1598 ($eq).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_221$cavlc_read_run_befores.v:332$1597 ($eq).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_203$cavlc_read_run_befores.v:330$1593 ($lt).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_127$cavlc_read_run_befores.v:269$1576 ($lt).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_119$cavlc_read_run_befores.v:223$1568 ($eq).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_118$cavlc_read_run_befores.v:209$1567 ($eq).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_117$cavlc_read_run_befores.v:199$1566 ($eq).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_116$cavlc_read_run_befores.v:195$1565 ($eq).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_115$cavlc_read_run_befores.v:182$1564 ($eq).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_114$cavlc_read_run_befores.v:181$1563 ($eq).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531 ($sub).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531 ($sub).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_56$cavlc_read_run_befores.v:238$1529 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_30$cavlc_read_run_befores.v:207$1521 ($mux).
Removed top 1 bits (of 3) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516 ($sub).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516 ($sub).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_364$cavlc_read_run_befores.v:193$1514 ($mux).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_363$cavlc_read_run_befores.v:193$1507 ($mux).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_372$cavlc_read_run_befores.v:193$1506 ($mux).
Removed top 1 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_72$cavlc_fsm.v:142$726 ($eq).
Removed top 2 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_71$cavlc_fsm.v:130$725 ($eq).
Removed top 3 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_70$cavlc_fsm.v:127$724 ($eq).
Removed top 4 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_69$cavlc_fsm.v:124$723 ($eq).
Removed top 5 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_68$cavlc_fsm.v:116$722 ($eq).
Removed top 6 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_67$cavlc_fsm.v:105$721 ($eq).
Removed top 7 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_66$cavlc_fsm.v:96$720 ($eq).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
Removed top 1 bits (of 5) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 5 bits (of 6) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 2 bits (of 6) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 1 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_33$cavlc_fsm.v:122$697 ($mux).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695 ($sub).
Removed top 3 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$equal_28$cavlc_fsm.v:117$693 ($eq).
Removed top 4 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_24$cavlc_fsm.v:114$689 ($mux).
Removed top 4 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$LessThan_17$cavlc_fsm.v:107$684 ($lt).
Removed top 1 bits (of 2) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$LessThan_16$cavlc_fsm.v:107$683 ($lt).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 5 bits (of 6) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 2 bits (of 6) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 6 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_12$cavlc_fsm.v:103$678 ($mux).
Removed top 1 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n144$645.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_fsm.$verific$n153$646.
Removed top 2 bits (of 6) from wire cavlc.$flatten\cavlc_fsm.$verific$n198$651.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_fsm.$verific$n219$654.
Removed top 6 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n41$633.
Removed top 3 bits (of 6) from wire cavlc.$flatten\cavlc_fsm.$verific$n51$634.
Removed top 4 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n95$639.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1004$871.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1090$873.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1240$877.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4254$978.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4260$979.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4266$980.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n109$1328.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n124$1331.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n238$1351.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n56$1319.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n66$1321.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n71$1322.
Removed top 1 bits (of 3) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n76$1323.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1001$2072.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1004$2073.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1152$2095.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1158$2096.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1300$2114.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1306$2115.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1454$2134.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1689$2164.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1692$2165.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1748$2171.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1760$2173.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1769$2175.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1870$2179.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1873$2180.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1924$2190.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1993$2197.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2062$2203.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2065$2204.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2146$2213.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2206$2217.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2209$2218.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2321$2227.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2327$2228.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2466$2241.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2469$2242.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2617$2257.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2623$2258.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2805$2281.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2826$2285.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2892$2290.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3631$2410.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3712$2426.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3794$2439.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4000$2462.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4009$2464.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4018$2466.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4052$2471.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1008$3334.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1013$3335.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1236$3372.
Removed top 2 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1246$3374.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1356$3394.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1375$3398.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1522$3421.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1568$3425.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1614$3433.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1665$3441.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1818$3465.
Removed top 2 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1832$3468.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1872$3477.
Removed top 1 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1886$3480.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1904$3484.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1978$3496.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n223$3211.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n296$3230.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n316$3234.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n336$3238.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n376$3246.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n396$3250.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n416$3254.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n526$3265.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n531$3266.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n536$3267.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n556$3269.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n576$3271.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n690$3289.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n695$3290.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n770$3301.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n875$3315.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n880$3316.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 94 unused cells and 252 unused wires.
<suppressed ~95 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module cavlc:
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695 ($sub).
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_88$cavlc_read_levels.v:195$1058 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 ($neg).
  creating $macc model for $flatten\cavlc_read_levels.$verific$unary_minus_133$cavlc_read_levels.v:244$1091 ($neg).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$add_205$cavlc_read_run_befores.v:331$1595 ($add).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$sub_140$cavlc_read_run_befores.v:286$1582 ($sub).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516 ($sub).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531 ($sub).
  creating $macc model for $flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058 ($add).
  merging $macc model for $flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 into $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085.
  merging $macc model for $flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 into $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085.
  merging $macc model for $flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 into $flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$sub_140$cavlc_read_run_befores.v:286$1582.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$add_205$cavlc_read_run_befores.v:331$1595.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$unary_minus_133$cavlc_read_levels.v:244$1091.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_88$cavlc_read_levels.v:195$1058.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080.
  creating $alu model for $macc $flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680.
  creating $macc cell for $flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073: $auto$alumacc.cc:365:replace_macc$5021
  creating $macc cell for $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085: $auto$alumacc.cc:365:replace_macc$5022
  creating $alu model for $flatten\cavlc_fsm.$verific$LessThan_16$cavlc_fsm.v:107$683 ($lt): new $alu
  creating $alu model for $flatten\cavlc_fsm.$verific$LessThan_17$cavlc_fsm.v:107$684 ($lt): new $alu
  creating $alu model for $flatten\cavlc_fsm.$verific$LessThan_38$cavlc_fsm.v:131$701 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_59$cavlc_read_levels.v:177$1032 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_60$cavlc_read_levels.v:177$1033 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_66$cavlc_read_levels.v:181$1038 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_73$cavlc_read_levels.v:185$1043 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_74$cavlc_read_levels.v:185$1044 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_85$cavlc_read_levels.v:194$1055 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_86$cavlc_read_levels.v:194$1056 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_127$cavlc_read_run_befores.v:269$1576 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_203$cavlc_read_run_befores.v:330$1593 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_253$cavlc_read_run_befores.v:351$1630 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_256$cavlc_read_run_befores.v:352$1633 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_259$cavlc_read_run_befores.v:353$1636 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_262$cavlc_read_run_befores.v:354$1639 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_265$cavlc_read_run_befores.v:355$1642 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_268$cavlc_read_run_befores.v:356$1645 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_271$cavlc_read_run_befores.v:357$1648 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_274$cavlc_read_run_befores.v:358$1651 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_277$cavlc_read_run_befores.v:359$1654 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_280$cavlc_read_run_befores.v:360$1657 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_283$cavlc_read_run_befores.v:361$1660 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_286$cavlc_read_run_befores.v:362$1663 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_289$cavlc_read_run_befores.v:363$1666 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_292$cavlc_read_run_befores.v:364$1669 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$equal_170$cavlc_read_levels.v:269$1105 ($eq): merged with $flatten\cavlc_read_levels.$verific$LessThan_60$cavlc_read_levels.v:177$1033.
  creating $alu model for $flatten\cavlc_read_levels.$verific$equal_91$cavlc_read_levels.v:196$1061 ($eq): merged with $flatten\cavlc_read_levels.$verific$LessThan_86$cavlc_read_levels.v:194$1056.
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$equal_44$cavlc_read_run_befores.v:224$1523 ($eq): merged with $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516.
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_292$cavlc_read_run_befores.v:364$1669: $auto$alumacc.cc:485:replace_alu$5049
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_289$cavlc_read_run_befores.v:363$1666: $auto$alumacc.cc:485:replace_alu$5062
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_286$cavlc_read_run_befores.v:362$1663: $auto$alumacc.cc:485:replace_alu$5075
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_283$cavlc_read_run_befores.v:361$1660: $auto$alumacc.cc:485:replace_alu$5088
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_280$cavlc_read_run_befores.v:360$1657: $auto$alumacc.cc:485:replace_alu$5101
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_277$cavlc_read_run_befores.v:359$1654: $auto$alumacc.cc:485:replace_alu$5114
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_274$cavlc_read_run_befores.v:358$1651: $auto$alumacc.cc:485:replace_alu$5127
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_271$cavlc_read_run_befores.v:357$1648: $auto$alumacc.cc:485:replace_alu$5140
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_268$cavlc_read_run_befores.v:356$1645: $auto$alumacc.cc:485:replace_alu$5149
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_265$cavlc_read_run_befores.v:355$1642: $auto$alumacc.cc:485:replace_alu$5158
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_262$cavlc_read_run_befores.v:354$1639: $auto$alumacc.cc:485:replace_alu$5167
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_259$cavlc_read_run_befores.v:353$1636: $auto$alumacc.cc:485:replace_alu$5176
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_256$cavlc_read_run_befores.v:352$1633: $auto$alumacc.cc:485:replace_alu$5185
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_253$cavlc_read_run_befores.v:351$1630: $auto$alumacc.cc:485:replace_alu$5194
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_203$cavlc_read_run_befores.v:330$1593: $auto$alumacc.cc:485:replace_alu$5203
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_127$cavlc_read_run_befores.v:269$1576: $auto$alumacc.cc:485:replace_alu$5208
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_86$cavlc_read_levels.v:194$1056, $flatten\cavlc_read_levels.$verific$equal_91$cavlc_read_levels.v:196$1061: $auto$alumacc.cc:485:replace_alu$5213
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_85$cavlc_read_levels.v:194$1055: $auto$alumacc.cc:485:replace_alu$5222
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_74$cavlc_read_levels.v:185$1044: $auto$alumacc.cc:485:replace_alu$5227
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_73$cavlc_read_levels.v:185$1043: $auto$alumacc.cc:485:replace_alu$5232
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_66$cavlc_read_levels.v:181$1038: $auto$alumacc.cc:485:replace_alu$5237
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_60$cavlc_read_levels.v:177$1033, $flatten\cavlc_read_levels.$verific$equal_170$cavlc_read_levels.v:269$1105: $auto$alumacc.cc:485:replace_alu$5242
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_59$cavlc_read_levels.v:177$1032: $auto$alumacc.cc:485:replace_alu$5253
  creating $alu cell for $flatten\cavlc_fsm.$verific$LessThan_38$cavlc_fsm.v:131$701: $auto$alumacc.cc:485:replace_alu$5258
  creating $alu cell for $flatten\cavlc_fsm.$verific$LessThan_17$cavlc_fsm.v:107$684: $auto$alumacc.cc:485:replace_alu$5263
  creating $alu cell for $flatten\cavlc_fsm.$verific$LessThan_16$cavlc_fsm.v:107$683: $auto$alumacc.cc:485:replace_alu$5268
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680: $auto$alumacc.cc:485:replace_alu$5273
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695: $auto$alumacc.cc:485:replace_alu$5276
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704: $auto$alumacc.cc:485:replace_alu$5279
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707: $auto$alumacc.cc:485:replace_alu$5282
  creating $alu cell for $flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058: $auto$alumacc.cc:485:replace_alu$5285
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080: $auto$alumacc.cc:485:replace_alu$5288
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082: $auto$alumacc.cc:485:replace_alu$5291
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218: $auto$alumacc.cc:485:replace_alu$5294
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046: $auto$alumacc.cc:485:replace_alu$5297
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516, $flatten\cavlc_read_run_befores.$verific$equal_44$cavlc_read_run_befores.v:224$1523: $auto$alumacc.cc:485:replace_alu$5300
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027: $auto$alumacc.cc:485:replace_alu$5305
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028: $auto$alumacc.cc:485:replace_alu$5308
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041: $auto$alumacc.cc:485:replace_alu$5311
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_88$cavlc_read_levels.v:195$1058: $auto$alumacc.cc:485:replace_alu$5314
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531: $auto$alumacc.cc:485:replace_alu$5317
  creating $alu cell for $flatten\cavlc_read_levels.$verific$unary_minus_133$cavlc_read_levels.v:244$1091: $auto$alumacc.cc:485:replace_alu$5320
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$add_205$cavlc_read_run_befores.v:331$1595: $auto$alumacc.cc:485:replace_alu$5323
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$sub_140$cavlc_read_run_befores.v:286$1582: $auto$alumacc.cc:485:replace_alu$5326
  created 44 $alu and 2 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~25 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $auto$pmuxtree.cc:65:recursive_mux_generator$4415.
Removed 1 multiplexer ports.
<suppressed ~103 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4897: { $flatten\cavlc_read_total_zeros.$verific$n443$3157 $flatten\cavlc_read_total_zeros.$verific$n446$3160 $flatten\cavlc_read_total_zeros.$verific$n449$3163 $flatten\cavlc_read_total_zeros.$verific$n451$3165 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4675: { $flatten\cavlc_read_total_coeffs.$verific$n2962$1885 $flatten\cavlc_read_total_coeffs.$verific$n2965$1888 $flatten\cavlc_read_total_coeffs.$verific$n2974$1897 $flatten\cavlc_read_total_coeffs.$verific$n2977$1900 $flatten\cavlc_read_total_coeffs.$verific$n2979$1902 $auto$rtlil.cc:2398:Or$4652 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4615: { $flatten\cavlc_read_total_coeffs.$verific$n2971$1894 $flatten\cavlc_read_total_coeffs.$verific$n2974$1897 $flatten\cavlc_read_total_coeffs.$verific$n2977$1900 $flatten\cavlc_read_total_coeffs.$verific$n2979$1902 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4635: { $flatten\cavlc_read_total_coeffs.$verific$n2962$1885 $flatten\cavlc_read_total_coeffs.$verific$n2965$1888 $flatten\cavlc_read_total_coeffs.$verific$n2968$1891 $flatten\cavlc_read_total_coeffs.$verific$n2971$1894 $flatten\cavlc_read_total_coeffs.$verific$n2974$1897 $flatten\cavlc_read_total_coeffs.$verific$n2977$1900 $flatten\cavlc_read_total_coeffs.$verific$n2979$1902 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4579: { $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $flatten\cavlc_read_total_coeffs.$verific$n1640$1819 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4599: { $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $flatten\cavlc_read_total_coeffs.$verific$n1640$1819 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 $auto$rtlil.cc:2398:Or$4576 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4495: { $flatten\cavlc_read_total_coeffs.$verific$n1610$1789 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4515: { $flatten\cavlc_read_total_coeffs.$verific$n1610$1789 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 $auto$rtlil.cc:2398:Or$4492 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4475: { $flatten\cavlc_read_total_coeffs.$verific$n4155$1946 $flatten\cavlc_read_total_coeffs.$verific$n4158$1949 $flatten\cavlc_read_total_coeffs.$verific$n4161$1952 $flatten\cavlc_read_total_coeffs.$verific$n4164$1955 $flatten\cavlc_read_total_coeffs.$verific$n4166$1957 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4175: { $flatten\cavlc_fsm.$verific$n327$617 $flatten\cavlc_fsm.$verific$n330$620 $flatten\cavlc_fsm.$verific$n331$621 $flatten\cavlc_fsm.$verific$n333$623 $flatten\cavlc_fsm.$verific$n334$624 $flatten\cavlc_fsm.$verific$n335$625 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4559: { $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 $auto$rtlil.cc:2398:Or$4492 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4455: { $flatten\cavlc_read_total_coeffs.$verific$n4158$1949 $flatten\cavlc_read_total_coeffs.$verific$n4161$1952 $flatten\cavlc_read_total_coeffs.$verific$n4164$1955 $flatten\cavlc_read_total_coeffs.$verific$n4166$1957 }
  Optimizing cells in module \cavlc.
Performed a total of 12 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 5 unused cells and 65 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== cavlc ===

   Number of wires:               1709
   Number of wire bits:           6872
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1480
     $adffe                         47
     $alu                           44
     $and                           86
     $bmux                          59
     $eq                           123
     $logic_not                     10
     $macc                           2
     $mux                          736
     $ne                            38
     $not                          109
     $or                            97
     $reduce_and                    42
     $reduce_bool                    6
     $reduce_or                     78
     $shl                            2
     $shr                            1


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== cavlc ===

   Number of wires:               1709
   Number of wire bits:           6872
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1480
     $adffe                         47
     $alu                           44
     $and                           86
     $bmux                          59
     $eq                           123
     $logic_not                     10
     $macc                           2
     $mux                          736
     $ne                            38
     $not                          109
     $or                            97
     $reduce_and                    42
     $reduce_bool                    6
     $reduce_or                     78
     $shl                            2
     $shr                            1


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> stat

3.24. Printing statistics.

=== cavlc ===

   Number of wires:               1709
   Number of wire bits:           6872
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1480
     $adffe                         47
     $alu                           44
     $and                           86
     $bmux                          59
     $eq                           123
     $logic_not                     10
     $macc                           2
     $mux                          736
     $ne                            38
     $not                          109
     $or                            97
     $reduce_and                    42
     $reduce_bool                    6
     $reduce_or                     78
     $shl                            2
     $shr                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper maccmap for cells of type $macc.
  add $flatten\cavlc_read_levels.$verific$n475$855 [8:0] (9 bits, unsigned)
  add { $flatten\cavlc_read_levels.$verific$n544$783 $flatten\cavlc_read_levels.$verific$n544$783 $flatten\cavlc_read_levels.$verific$n544$783 $flatten\cavlc_read_levels.$verific$n544$783 } (4 bits, unsigned)
  add \cavlc_read_levels.level_suffix (9 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $and.
Using template $paramod$de9286bb3f6c9573089ef1694e580944d318189a\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using template $paramod$3fca0311880385705807996e952da2d1d9896610\_80_rs_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
  sub \cavlc_read_levels.level_code_tmp (9 bits, unsigned)
  sub { \cavlc_read_levels.tmp1 [1] 1'0 } (2 bits, unsigned)
  add 10'1111111111 (10 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$constmap:2a5a90c887f7f17a34d4032fe665c7aac02a3bb8$paramod$27be44c49fb1346b96bf9a9013de8943094e1f11\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
Using template $paramod$constmap:3e07689e7ff5356da68de1ee7387179a05a469ef$paramod$b54d5ebdaecd24844fc43a347f4baf80efcdaf00\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$0563fff2c395e9892f21c131fa33d5e0ad144e72\_90_alu for cells of type $alu.
Using template $paramod$649fc39eef2451024566705288528c8671211199\_90_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using template $paramod$constmap:1e83989bdaaeae429b09a33fcb9a97ba54f64e9f$paramod$fb16e0492dc88ab7064d5e90ab6662c825c4229e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$7734840312b9a76c20481fb57d094d403d9be18d\_80_rs_alu for cells of type $alu.
Using template $paramod$5a51f938fa54bf7015d956f06feadaa94e2be5b1\_90_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$8706d5589d4916771d2d2e192cb50287f33b8e47\_80_rs_alu for cells of type $alu.
Using template $paramod$a74018a15681c78386967af24851b09924f3590d\_80_rs_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$6819a4e0175d9b7055ee18b0ce45e13f28467299\_80_rs_alu for cells of type $alu.
Using template $paramod$df6ef5e2f1abc2d6122b1a6b508992ec1eda4b4b\_80_rs_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$bff7471ed79c5167ef5c63313ef5b8c950a5492d\_80_rs_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001001 for cells of type $fa.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~6029 debug messages>

yosys> stat

3.26. Printing statistics.

=== cavlc ===

   Number of wires:               4382
   Number of wire bits:          67349
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              13060
     $_AND_                        765
     $_DFFE_PN0P_                  390
     $_DFFE_PN1P_                    1
     $_MUX_                       9087
     $_NOT_                        511
     $_OR_                        1171
     $_XOR_                       1093
     adder_carry                    42


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~6867 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~3156 debug messages>
Removed a total of 1052 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$15221 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [8], Q = \cavlc_read_levels.level_0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14659 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [8], Q = \cavlc_read_levels.level_10 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14695 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [8], Q = \cavlc_read_levels.level_11 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14990 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [8], Q = \cavlc_read_levels.level_12 [8]).
Adding EN signal on $auto$ff.cc:262:slice$15017 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [8], Q = \cavlc_read_levels.level_13 [8]).
Adding EN signal on $auto$ff.cc:262:slice$15035 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [8], Q = \cavlc_read_levels.level_14 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9450 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [8], Q = \cavlc_read_levels.level_15 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9441 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [8], Q = \cavlc_read_levels.level_1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9432 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [8], Q = \cavlc_read_levels.level_2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9423 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [8], Q = \cavlc_read_levels.level_3 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9414 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [8], Q = \cavlc_read_levels.level_4 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9405 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [8], Q = \cavlc_read_levels.level_5 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9396 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [8], Q = \cavlc_read_levels.level_6 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9387 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [8], Q = \cavlc_read_levels.level_7 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9378 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [8], Q = \cavlc_read_levels.level_8 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14497 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [8], Q = \cavlc_read_levels.level_9 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14988 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [6], Q = \cavlc_read_levels.level_12 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14989 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [7], Q = \cavlc_read_levels.level_12 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14987 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [5], Q = \cavlc_read_levels.level_12 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14658 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [7], Q = \cavlc_read_levels.level_10 [7]).
Adding EN signal on $auto$ff.cc:262:slice$15220 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [7], Q = \cavlc_read_levels.level_0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14656 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [5], Q = \cavlc_read_levels.level_10 [5]).
Adding EN signal on $auto$ff.cc:262:slice$15219 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [6], Q = \cavlc_read_levels.level_0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$15218 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [5], Q = \cavlc_read_levels.level_0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14655 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [4], Q = \cavlc_read_levels.level_10 [4]).
Adding EN signal on $auto$ff.cc:262:slice$15217 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [4], Q = \cavlc_read_levels.level_0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14689 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [2], Q = \cavlc_read_levels.level_11 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9370 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [0], Q = \cavlc_read_levels.level_8 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [1], Q = \cavlc_read_levels.level_8 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9372 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [2], Q = \cavlc_read_levels.level_8 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9373 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [3], Q = \cavlc_read_levels.level_8 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9374 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [4], Q = \cavlc_read_levels.level_8 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9375 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [5], Q = \cavlc_read_levels.level_8 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9376 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [6], Q = \cavlc_read_levels.level_8 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9377 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [7], Q = \cavlc_read_levels.level_8 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9379 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [0], Q = \cavlc_read_levels.level_7 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9380 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [1], Q = \cavlc_read_levels.level_7 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9381 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [2], Q = \cavlc_read_levels.level_7 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9382 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [3], Q = \cavlc_read_levels.level_7 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9383 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [4], Q = \cavlc_read_levels.level_7 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9384 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [5], Q = \cavlc_read_levels.level_7 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9385 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [6], Q = \cavlc_read_levels.level_7 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9386 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [7], Q = \cavlc_read_levels.level_7 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9388 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [0], Q = \cavlc_read_levels.level_6 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9389 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [1], Q = \cavlc_read_levels.level_6 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9390 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [2], Q = \cavlc_read_levels.level_6 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9391 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [3], Q = \cavlc_read_levels.level_6 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9392 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [4], Q = \cavlc_read_levels.level_6 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9393 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [5], Q = \cavlc_read_levels.level_6 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9394 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [6], Q = \cavlc_read_levels.level_6 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9395 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [7], Q = \cavlc_read_levels.level_6 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9397 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [0], Q = \cavlc_read_levels.level_5 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9398 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [1], Q = \cavlc_read_levels.level_5 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9399 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [2], Q = \cavlc_read_levels.level_5 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9400 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [3], Q = \cavlc_read_levels.level_5 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9401 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [4], Q = \cavlc_read_levels.level_5 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9402 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [5], Q = \cavlc_read_levels.level_5 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9403 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [6], Q = \cavlc_read_levels.level_5 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9404 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [7], Q = \cavlc_read_levels.level_5 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9406 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [0], Q = \cavlc_read_levels.level_4 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9407 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [1], Q = \cavlc_read_levels.level_4 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9408 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [2], Q = \cavlc_read_levels.level_4 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9409 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [3], Q = \cavlc_read_levels.level_4 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9410 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [4], Q = \cavlc_read_levels.level_4 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9411 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [5], Q = \cavlc_read_levels.level_4 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9412 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [6], Q = \cavlc_read_levels.level_4 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9413 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [7], Q = \cavlc_read_levels.level_4 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9415 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [0], Q = \cavlc_read_levels.level_3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9416 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [1], Q = \cavlc_read_levels.level_3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9417 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [2], Q = \cavlc_read_levels.level_3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9418 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [3], Q = \cavlc_read_levels.level_3 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9419 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [4], Q = \cavlc_read_levels.level_3 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9420 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [5], Q = \cavlc_read_levels.level_3 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9421 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [6], Q = \cavlc_read_levels.level_3 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9422 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [7], Q = \cavlc_read_levels.level_3 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9424 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [0], Q = \cavlc_read_levels.level_2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9425 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [1], Q = \cavlc_read_levels.level_2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9426 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [2], Q = \cavlc_read_levels.level_2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9427 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [3], Q = \cavlc_read_levels.level_2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9428 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [4], Q = \cavlc_read_levels.level_2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9429 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [5], Q = \cavlc_read_levels.level_2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9430 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [6], Q = \cavlc_read_levels.level_2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9431 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [7], Q = \cavlc_read_levels.level_2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9433 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [0], Q = \cavlc_read_levels.level_1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9434 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [1], Q = \cavlc_read_levels.level_1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9435 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [2], Q = \cavlc_read_levels.level_1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9436 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [3], Q = \cavlc_read_levels.level_1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9437 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [4], Q = \cavlc_read_levels.level_1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9438 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [5], Q = \cavlc_read_levels.level_1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9439 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [6], Q = \cavlc_read_levels.level_1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9440 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [7], Q = \cavlc_read_levels.level_1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9442 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [0], Q = \cavlc_read_levels.level_15 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9443 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [1], Q = \cavlc_read_levels.level_15 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [2], Q = \cavlc_read_levels.level_15 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9445 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [3], Q = \cavlc_read_levels.level_15 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9446 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [4], Q = \cavlc_read_levels.level_15 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9447 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [5], Q = \cavlc_read_levels.level_15 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9448 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [6], Q = \cavlc_read_levels.level_15 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9449 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [7], Q = \cavlc_read_levels.level_15 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14694 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [7], Q = \cavlc_read_levels.level_11 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14693 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [6], Q = \cavlc_read_levels.level_11 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14692 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [5], Q = \cavlc_read_levels.level_11 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14691 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [4], Q = \cavlc_read_levels.level_11 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14652 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [1], Q = \cavlc_read_levels.level_10 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14651 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [0], Q = \cavlc_read_levels.level_10 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14657 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [6], Q = \cavlc_read_levels.level_10 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14496 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [7], Q = \cavlc_read_levels.level_9 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14495 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [6], Q = \cavlc_read_levels.level_9 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14493 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [4], Q = \cavlc_read_levels.level_9 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14492 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [3], Q = \cavlc_read_levels.level_9 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14491 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [2], Q = \cavlc_read_levels.level_9 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14489 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [0], Q = \cavlc_read_levels.level_9 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14494 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [5], Q = \cavlc_read_levels.level_9 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14490 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [1], Q = \cavlc_read_levels.level_9 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14690 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [3], Q = \cavlc_read_levels.level_11 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14654 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [3], Q = \cavlc_read_levels.level_10 [3]).
Adding EN signal on $auto$ff.cc:262:slice$15216 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [3], Q = \cavlc_read_levels.level_0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$15215 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [2], Q = \cavlc_read_levels.level_0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$15213 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [0], Q = \cavlc_read_levels.level_0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14688 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [1], Q = \cavlc_read_levels.level_11 [1]).
Adding EN signal on $auto$ff.cc:262:slice$15214 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [1], Q = \cavlc_read_levels.level_0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14986 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [4], Q = \cavlc_read_levels.level_12 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14985 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [3], Q = \cavlc_read_levels.level_12 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14983 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [1], Q = \cavlc_read_levels.level_12 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14982 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [0], Q = \cavlc_read_levels.level_12 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14984 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [2], Q = \cavlc_read_levels.level_12 [2]).
Adding EN signal on $auto$ff.cc:262:slice$15034 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [7], Q = \cavlc_read_levels.level_14 [7]).
Adding EN signal on $auto$ff.cc:262:slice$15033 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [6], Q = \cavlc_read_levels.level_14 [6]).
Adding EN signal on $auto$ff.cc:262:slice$15030 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [3], Q = \cavlc_read_levels.level_14 [3]).
Adding EN signal on $auto$ff.cc:262:slice$15029 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [2], Q = \cavlc_read_levels.level_14 [2]).
Adding EN signal on $auto$ff.cc:262:slice$15027 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [0], Q = \cavlc_read_levels.level_14 [0]).
Adding EN signal on $auto$ff.cc:262:slice$15032 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [5], Q = \cavlc_read_levels.level_14 [5]).
Adding EN signal on $auto$ff.cc:262:slice$15028 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [1], Q = \cavlc_read_levels.level_14 [1]).
Adding EN signal on $auto$ff.cc:262:slice$15031 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [4], Q = \cavlc_read_levels.level_14 [4]).
Adding EN signal on $auto$ff.cc:262:slice$15015 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [6], Q = \cavlc_read_levels.level_13 [6]).
Adding EN signal on $auto$ff.cc:262:slice$15014 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [5], Q = \cavlc_read_levels.level_13 [5]).
Adding EN signal on $auto$ff.cc:262:slice$15011 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [2], Q = \cavlc_read_levels.level_13 [2]).
Adding EN signal on $auto$ff.cc:262:slice$15010 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [1], Q = \cavlc_read_levels.level_13 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14653 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [2], Q = \cavlc_read_levels.level_10 [2]).
Adding EN signal on $auto$ff.cc:262:slice$15016 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [7], Q = \cavlc_read_levels.level_13 [7]).
Adding EN signal on $auto$ff.cc:262:slice$15013 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [4], Q = \cavlc_read_levels.level_13 [4]).
Adding EN signal on $auto$ff.cc:262:slice$15009 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [0], Q = \cavlc_read_levels.level_13 [0]).
Adding EN signal on $auto$ff.cc:262:slice$15012 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [3], Q = \cavlc_read_levels.level_13 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14687 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [0], Q = \cavlc_read_levels.level_11 [0]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 193 unused cells and 4229 unused wires.
<suppressed ~194 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~5982 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~30801 debug messages>
Removed a total of 10267 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 8385 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.27.23. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~1436 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~246 debug messages>
Removed a total of 82 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 1 unused cells and 144 unused wires.
<suppressed ~2 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~8 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15799 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$5783
        $auto$simplemap.cc:278:simplemap_mux$5820

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16050 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$5494
        $auto$simplemap.cc:278:simplemap_mux$5524


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~2 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.30.18. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  29 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4009, arst=!\rst_n, srst={ }
  40 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3804, arst=!\rst_n, srst={ }
  1059 cells in clk=\clk, en=$auto$simplemap.cc:251:simplemap_eqne$15462 [1], arst=!\rst_n, srst={ }
  117 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3793, arst=!\rst_n, srst={ }
  112 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3782, arst=!\rst_n, srst={ }
  109 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3773, arst=!\rst_n, srst={ }
  23 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3766, arst=!\rst_n, srst={ }
  50 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$24216, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$24062, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$23906, arst=!\rst_n, srst={ }
  61 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$23719, arst=!\rst_n, srst={ }
  49 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$23534, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$23380, arst=!\rst_n, srst={ }
  46 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$23225, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$23054, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$22884, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$22731, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$22602, arst=!\rst_n, srst={ }
  61 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$22470, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$22316, arst=!\rst_n, srst={ }
  56 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$22161, arst=!\rst_n, srst={ }
  62 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$21990, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$21820, arst=!\rst_n, srst={ }
  380 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4014, arst=!\rst_n, srst={ }
  234 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4025, arst=!\rst_n, srst={ }
  38 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3912, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3894, arst=!\rst_n, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3903, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3921, arst=!\rst_n, srst={ }
  37 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3930, arst=!\rst_n, srst={ }
  12 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3937, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3813, arst=!\rst_n, srst={ }
  29 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3822, arst=!\rst_n, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3831, arst=!\rst_n, srst={ }
  198 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3945, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3840, arst=!\rst_n, srst={ }
  146 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$3940, arst=!\rst_n, srst={ }
  37 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3885, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3876, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3867, arst=!\rst_n, srst={ }
  29 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3858, arst=!\rst_n, srst={ }
  39 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3849, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3761, arst=!\rst_n, srst={ }
  225 cells in clk=\clk, en=$flatten\cavlc_read_levels.$verific$n474$782, arst=!\rst_n, srst={ }
  64 cells in clk=\clk, en=$flatten\cavlc_read_levels.$verific$n231$765, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=\cavlc_read_levels.level_abs_refresh, arst=!\rst_n, srst={ }

3.31.2. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4009, asynchronously reset by !\rst_n
Extracted 29 gates and 47 wires to a netlist network with 18 inputs and 7 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:                OR cells:        6
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               AND cells:        9
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        7
Removing temp directory.

3.31.3. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3804, asynchronously reset by !\rst_n
Extracted 40 gates and 65 wires to a netlist network with 24 inputs and 15 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        5
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       15
Removing temp directory.

3.31.4. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$simplemap.cc:251:simplemap_eqne$15462 [1], asynchronously reset by !\rst_n
Extracted 1046 gates and 1282 wires to a netlist network with 234 inputs and 75 outputs.

3.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               NOT cells:       27
ABC RESULTS:             ORNOT cells:       70
ABC RESULTS:               NOR cells:       41
ABC RESULTS:              NAND cells:      402
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:                OR cells:      132
ABC RESULTS:               BUF cells:        5
ABC RESULTS:            ANDNOT cells:       79
ABC RESULTS:               MUX cells:       50
ABC RESULTS:               AND cells:      280
ABC RESULTS:        internal signals:      973
ABC RESULTS:           input signals:      234
ABC RESULTS:          output signals:       75
Removing temp directory.

3.31.5. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3793, asynchronously reset by !\rst_n
Extracted 117 gates and 139 wires to a netlist network with 21 inputs and 70 outputs.

3.31.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:       13
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               AND cells:       17
ABC RESULTS:              NAND cells:        8
ABC RESULTS:             ORNOT cells:       17
ABC RESULTS:                OR cells:       16
ABC RESULTS:               BUF cells:       17
ABC RESULTS:        internal signals:       48
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       70
Removing temp directory.

3.31.6. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3782, asynchronously reset by !\rst_n
Extracted 112 gates and 133 wires to a netlist network with 19 inputs and 65 outputs.

3.31.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       14
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:       15
ABC RESULTS:               AND cells:       16
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:                OR cells:       13
ABC RESULTS:             ORNOT cells:       17
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               BUF cells:       14
ABC RESULTS:        internal signals:       49
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       65
Removing temp directory.

3.31.7. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3773, asynchronously reset by !\rst_n
Extracted 109 gates and 125 wires to a netlist network with 14 inputs and 53 outputs.

3.31.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       10
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               XOR cells:        3
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               AND cells:       24
ABC RESULTS:                OR cells:        7
ABC RESULTS:               NOT cells:       13
ABC RESULTS:               BUF cells:       11
ABC RESULTS:        internal signals:       58
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       53
Removing temp directory.

3.31.8. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3766, asynchronously reset by !\rst_n
Extracted 23 gates and 32 wires to a netlist network with 9 inputs and 11 outputs.

3.31.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        6
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        6
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       11
Removing temp directory.

3.31.9. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24216, asynchronously reset by !\rst_n
Extracted 50 gates and 95 wires to a netlist network with 44 inputs and 21 outputs.

3.31.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:       16
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               MUX cells:       11
ABC RESULTS:               BUF cells:        8
ABC RESULTS:        internal signals:       30
ABC RESULTS:           input signals:       44
ABC RESULTS:          output signals:       21
Removing temp directory.

3.31.10. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24062, asynchronously reset by !\rst_n
Extracted 47 gates and 86 wires to a netlist network with 38 inputs and 26 outputs.

3.31.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.10.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        6
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:       18
ABC RESULTS:               MUX cells:       11
ABC RESULTS:               BUF cells:       17
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       38
ABC RESULTS:          output signals:       26
Removing temp directory.

3.31.11. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23906, asynchronously reset by !\rst_n
Extracted 57 gates and 102 wires to a netlist network with 44 inputs and 26 outputs.

3.31.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.11.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        7
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:       20
ABC RESULTS:               MUX cells:       18
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       44
ABC RESULTS:          output signals:       26
Removing temp directory.

3.31.12. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23719, asynchronously reset by !\rst_n
Extracted 61 gates and 109 wires to a netlist network with 47 inputs and 24 outputs.

3.31.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.12.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        8
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:       16
ABC RESULTS:               MUX cells:       25
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       38
ABC RESULTS:           input signals:       47
ABC RESULTS:          output signals:       24
Removing temp directory.

3.31.13. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23534, asynchronously reset by !\rst_n
Extracted 49 gates and 90 wires to a netlist network with 40 inputs and 29 outputs.

3.31.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.13.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        8
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:       18
ABC RESULTS:               MUX cells:       10
ABC RESULTS:               BUF cells:       17
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:       29
Removing temp directory.

3.31.14. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23380, asynchronously reset by !\rst_n
Extracted 53 gates and 98 wires to a netlist network with 44 inputs and 26 outputs.

3.31.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.14.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        4
ABC RESULTS:               AND cells:       18
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               MUX cells:       14
ABC RESULTS:        internal signals:       28
ABC RESULTS:           input signals:       44
ABC RESULTS:          output signals:       26
Removing temp directory.

3.31.15. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23225, asynchronously reset by !\rst_n
Extracted 46 gates and 86 wires to a netlist network with 39 inputs and 24 outputs.

3.31.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.15.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:       19
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               BUF cells:       15
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       39
ABC RESULTS:          output signals:       24
Removing temp directory.

3.31.16. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23054, asynchronously reset by !\rst_n
Extracted 52 gates and 96 wires to a netlist network with 43 inputs and 25 outputs.

3.31.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.16.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:       16
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               MUX cells:       16
ABC RESULTS:        internal signals:       28
ABC RESULTS:           input signals:       43
ABC RESULTS:          output signals:       25
Removing temp directory.

3.31.17. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22884, asynchronously reset by !\rst_n
Extracted 47 gates and 88 wires to a netlist network with 40 inputs and 23 outputs.

3.31.17.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.17.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               AND cells:       17
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               BUF cells:       13
ABC RESULTS:        internal signals:       25
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:       23
Removing temp directory.

3.31.18. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22731, asynchronously reset by !\rst_n
Extracted 47 gates and 82 wires to a netlist network with 35 inputs and 30 outputs.

3.31.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.18.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        3
ABC RESULTS:               AND cells:       17
ABC RESULTS:               MUX cells:       18
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       30
Removing temp directory.

3.31.19. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22602, asynchronously reset by !\rst_n
Extracted 57 gates and 102 wires to a netlist network with 44 inputs and 23 outputs.

3.31.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.19.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:       16
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               MUX cells:       16
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       35
ABC RESULTS:           input signals:       44
ABC RESULTS:          output signals:       23
Removing temp directory.

3.31.20. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22470, asynchronously reset by !\rst_n
Extracted 61 gates and 108 wires to a netlist network with 46 inputs and 32 outputs.

3.31.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.20.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               AND cells:       16
ABC RESULTS:             ORNOT cells:       11
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               MUX cells:       23
ABC RESULTS:        internal signals:       30
ABC RESULTS:           input signals:       46
ABC RESULTS:          output signals:       32
Removing temp directory.

3.31.21. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22316, asynchronously reset by !\rst_n
Extracted 47 gates and 84 wires to a netlist network with 36 inputs and 26 outputs.

3.31.21.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.21.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        5
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:       17
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               MUX cells:       17
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       26
Removing temp directory.

3.31.22. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22161, asynchronously reset by !\rst_n
Extracted 56 gates and 101 wires to a netlist network with 44 inputs and 30 outputs.

3.31.22.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.22.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:       16
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               MUX cells:       18
ABC RESULTS:                OR cells:        9
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:       44
ABC RESULTS:          output signals:       30
Removing temp directory.

3.31.23. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$21990, asynchronously reset by !\rst_n
Extracted 62 gates and 111 wires to a netlist network with 48 inputs and 32 outputs.

3.31.23.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.23.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:              NAND cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        9
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               AND cells:       22
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               MUX cells:       20
ABC RESULTS:        internal signals:       31
ABC RESULTS:           input signals:       48
ABC RESULTS:          output signals:       32
Removing temp directory.

3.31.24. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$21820, asynchronously reset by !\rst_n
Extracted 33 gates and 59 wires to a netlist network with 25 inputs and 20 outputs.

3.31.24.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.24.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        2
ABC RESULTS:               AND cells:        7
ABC RESULTS:               MUX cells:        4
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:       14
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       20
Removing temp directory.

3.31.25. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4014, asynchronously reset by !\rst_n
Extracted 380 gates and 522 wires to a netlist network with 140 inputs and 81 outputs.

3.31.25.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.25.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               XOR cells:        2
ABC RESULTS:             ORNOT cells:       12
ABC RESULTS:               NOT cells:       17
ABC RESULTS:                OR cells:       52
ABC RESULTS:            ANDNOT cells:       38
ABC RESULTS:               MUX cells:       19
ABC RESULTS:              NAND cells:       78
ABC RESULTS:               NOR cells:       39
ABC RESULTS:               AND cells:       80
ABC RESULTS:               BUF cells:        4
ABC RESULTS:        internal signals:      301
ABC RESULTS:           input signals:      140
ABC RESULTS:          output signals:       81
Removing temp directory.

3.31.26. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4025, asynchronously reset by !\rst_n
Extracted 225 gates and 347 wires to a netlist network with 121 inputs and 96 outputs.

3.31.26.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.26.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:       26
ABC RESULTS:               MUX cells:       15
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               XOR cells:        7
ABC RESULTS:             ORNOT cells:       10
ABC RESULTS:            ANDNOT cells:       17
ABC RESULTS:              XNOR cells:       13
ABC RESULTS:               AND cells:       86
ABC RESULTS:              NAND cells:      131
ABC RESULTS:               BUF cells:        3
ABC RESULTS:                OR cells:       22
ABC RESULTS:        internal signals:      130
ABC RESULTS:           input signals:      121
ABC RESULTS:          output signals:       96
Removing temp directory.

3.31.27. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3912, asynchronously reset by !\rst_n
Extracted 38 gates and 62 wires to a netlist network with 23 inputs and 14 outputs.

3.31.27.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.27.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       25
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       14
Removing temp directory.

3.31.28. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3894, asynchronously reset by !\rst_n
Extracted 33 gates and 56 wires to a netlist network with 22 inputs and 10 outputs.

3.31.28.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.28.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       10
Removing temp directory.

3.31.29. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3903, asynchronously reset by !\rst_n
Extracted 35 gates and 58 wires to a netlist network with 22 inputs and 12 outputs.

3.31.29.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.29.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       12
Removing temp directory.

3.31.30. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3921, asynchronously reset by !\rst_n
Extracted 32 gates and 53 wires to a netlist network with 20 inputs and 10 outputs.

3.31.30.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.30.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       20
ABC RESULTS:          output signals:       10
Removing temp directory.

3.31.31. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3930, asynchronously reset by !\rst_n
Extracted 37 gates and 62 wires to a netlist network with 24 inputs and 13 outputs.

3.31.31.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.31.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:               NOR cells:        5
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       25
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       13
Removing temp directory.

3.31.32. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3937, asynchronously reset by !\rst_n
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 11 outputs.

3.31.32.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.32.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       18
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       11
Removing temp directory.

3.31.33. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3813, asynchronously reset by !\rst_n
Extracted 34 gates and 57 wires to a netlist network with 22 inputs and 10 outputs.

3.31.33.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.33.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       25
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       10
Removing temp directory.

3.31.34. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3822, asynchronously reset by !\rst_n
Extracted 29 gates and 49 wires to a netlist network with 19 inputs and 10 outputs.

3.31.34.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.34.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       10
Removing temp directory.

3.31.35. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3831, asynchronously reset by !\rst_n
Extracted 35 gates and 60 wires to a netlist network with 24 inputs and 12 outputs.

3.31.35.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.35.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:               NOR cells:        3
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       12
Removing temp directory.

3.31.36. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3945, asynchronously reset by !\rst_n
Extracted 189 gates and 247 wires to a netlist network with 56 inputs and 53 outputs.

3.31.36.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.36.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               NOT cells:        7
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               XOR cells:        6
ABC RESULTS:               MUX cells:       18
ABC RESULTS:                OR cells:       16
ABC RESULTS:              NAND cells:       23
ABC RESULTS:               AND cells:       29
ABC RESULTS:               NOR cells:        4
ABC RESULTS:        internal signals:      138
ABC RESULTS:           input signals:       56
ABC RESULTS:          output signals:       53
Removing temp directory.

3.31.37. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3840, asynchronously reset by !\rst_n
Extracted 32 gates and 55 wires to a netlist network with 22 inputs and 10 outputs.

3.31.37.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.37.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        3
ABC RESULTS:                OR cells:        2
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       10
Removing temp directory.

3.31.38. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$3940, asynchronously reset by !\rst_n
Extracted 142 gates and 190 wires to a netlist network with 46 inputs and 27 outputs.

3.31.38.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.38.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:       11
ABC RESULTS:             ORNOT cells:       12
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:               MUX cells:       12
ABC RESULTS:              NAND cells:       35
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:                OR cells:       19
ABC RESULTS:               AND cells:       27
ABC RESULTS:               NOR cells:       17
ABC RESULTS:               BUF cells:        4
ABC RESULTS:        internal signals:      117
ABC RESULTS:           input signals:       46
ABC RESULTS:          output signals:       27
Removing temp directory.

3.31.39. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3885, asynchronously reset by !\rst_n
Extracted 37 gates and 64 wires to a netlist network with 26 inputs and 16 outputs.

3.31.39.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.39.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        7
ABC RESULTS:               NOR cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       16
Removing temp directory.

3.31.40. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3876, asynchronously reset by !\rst_n
Extracted 34 gates and 58 wires to a netlist network with 23 inputs and 12 outputs.

3.31.40.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.40.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       12
Removing temp directory.

3.31.41. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3867, asynchronously reset by !\rst_n
Extracted 34 gates and 56 wires to a netlist network with 21 inputs and 13 outputs.

3.31.41.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.41.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       13
Removing temp directory.

3.31.42. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3858, asynchronously reset by !\rst_n
Extracted 29 gates and 49 wires to a netlist network with 19 inputs and 10 outputs.

3.31.42.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.42.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       10
Removing temp directory.

3.31.43. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3849, asynchronously reset by !\rst_n
Extracted 39 gates and 68 wires to a netlist network with 28 inputs and 14 outputs.

3.31.43.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.43.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:        2
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:        9
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       14
Removing temp directory.

3.31.44. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3761, asynchronously reset by !\rst_n
Extracted 47 gates and 59 wires to a netlist network with 11 inputs and 19 outputs.

3.31.44.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.44.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               NOR cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:                OR cells:        6
ABC RESULTS:               AND cells:        8
ABC RESULTS:               BUF cells:       10
ABC RESULTS:        internal signals:       29
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:       19
Removing temp directory.

3.31.45. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53916$flatten\cavlc_read_levels.$verific$n474$782, asynchronously reset by !\rst_n
Extracted 225 gates and 265 wires to a netlist network with 38 inputs and 17 outputs.

3.31.45.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.45.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:        3
ABC RESULTS:             ORNOT cells:       10
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:       63
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               XOR cells:       19
ABC RESULTS:                OR cells:        8
ABC RESULTS:               AND cells:       23
ABC RESULTS:              XNOR cells:       23
ABC RESULTS:        internal signals:      210
ABC RESULTS:           input signals:       38
ABC RESULTS:          output signals:       17
Removing temp directory.

3.31.46. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53916$flatten\cavlc_read_levels.$verific$n231$765, asynchronously reset by !\rst_n
Extracted 64 gates and 82 wires to a netlist network with 16 inputs and 16 outputs.

3.31.46.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.46.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:                OR cells:        1
ABC RESULTS:               NOT cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               NOR cells:       15
ABC RESULTS:              NAND cells:        6
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               AND cells:       13
ABC RESULTS:        internal signals:       50
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       16
Removing temp directory.

3.31.47. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53916$cavlc_read_levels.level_abs_refresh, asynchronously reset by !\rst_n
Extracted 39 gates and 57 wires to a netlist network with 17 inputs and 16 outputs.

3.31.47.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.47.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOT cells:       16
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               AND cells:        1
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       16
Removing temp directory.

yosys> abc -script /tmp/yosys_A8fJ7K/abc_tmp_1.scr

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Extracted 3763 gates and 4064 wires to a netlist network with 301 inputs and 382 outputs.

3.32.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_A8fJ7K/abc_tmp_1.scr 
ABC:   #Luts =  1067  Max Lvl =  15  Avg Lvl =   5.73  [   0.42 sec. at Pass 0]
ABC:   #Luts =   853  Max Lvl =  14  Avg Lvl =   4.61  [  13.95 sec. at Pass 1]
ABC:   #Luts =   842  Max Lvl =  14  Avg Lvl =   5.07  [   1.95 sec. at Pass 2]
ABC:   #Luts =   815  Max Lvl =  14  Avg Lvl =   4.55  [  14.16 sec. at Pass 3]
ABC:   #Luts =   809  Max Lvl =  14  Avg Lvl =   4.53  [   4.34 sec. at Pass 4]
ABC:   #Luts =   802  Max Lvl =  13  Avg Lvl =   4.48  [  21.03 sec. at Pass 5]
ABC:   #Luts =   802  Max Lvl =  13  Avg Lvl =   4.48  [   5.04 sec. at Pass 6]
ABC:   #Luts =   794  Max Lvl =  13  Avg Lvl =   4.31  [  16.77 sec. at Pass 7]
ABC:   #Luts =   793  Max Lvl =  15  Avg Lvl =   4.59  [   3.36 sec. at Pass 8]
ABC:   #Luts =   792  Max Lvl =  13  Avg Lvl =   4.29  [  14.60 sec. at Pass 9]
ABC:   #Luts =   789  Max Lvl =  13  Avg Lvl =   4.51  [   3.08 sec. at Pass 10]
ABC:   #Luts =   789  Max Lvl =  13  Avg Lvl =   4.51  [  16.96 sec. at Pass 11]
ABC:   #Luts =   788  Max Lvl =  13  Avg Lvl =   4.49  [   4.36 sec. at Pass 12]
ABC:   #Luts =   785  Max Lvl =  12  Avg Lvl =   4.45  [  16.99 sec. at Pass 13]
ABC:   #Luts =   784  Max Lvl =  12  Avg Lvl =   4.47  [   3.69 sec. at Pass 14]
ABC:   #Luts =   784  Max Lvl =  12  Avg Lvl =   4.47  [  13.38 sec. at Pass 15]
ABC:   #Luts =   784  Max Lvl =  12  Avg Lvl =   4.47  [   3.02 sec. at Pass 16]
ABC:   #Luts =   782  Max Lvl =  12  Avg Lvl =   4.42  [  16.09 sec. at Pass 17]
ABC:   #Luts =   782  Max Lvl =  12  Avg Lvl =   4.42  [   2.27 sec. at Pass 18]
ABC:   #Luts =   781  Max Lvl =  11  Avg Lvl =   4.42  [  12.27 sec. at Pass 19]
ABC:   #Luts =   781  Max Lvl =  11  Avg Lvl =   4.42  [   2.95 sec. at Pass 20]
ABC:   #Luts =   780  Max Lvl =  11  Avg Lvl =   4.39  [  11.84 sec. at Pass 21]
ABC:   #Luts =   780  Max Lvl =  11  Avg Lvl =   4.39  [   3.01 sec. at Pass 22]
ABC:   #Luts =   778  Max Lvl =  10  Avg Lvl =   4.39  [   9.85 sec. at Pass 23]
ABC:   #Luts =   778  Max Lvl =  10  Avg Lvl =   4.39  [   3.01 sec. at Pass 24]
ABC:   #Luts =   776  Max Lvl =  11  Avg Lvl =   4.41  [  10.86 sec. at Pass 25]
ABC:   #Luts =   776  Max Lvl =  11  Avg Lvl =   4.41  [   3.52 sec. at Pass 26]
ABC:   #Luts =   776  Max Lvl =  11  Avg Lvl =   4.41  [  12.89 sec. at Pass 27]
ABC:   #Luts =   776  Max Lvl =  11  Avg Lvl =   4.41  [   3.97 sec. at Pass 28]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      776
ABC RESULTS:        internal signals:     3381
ABC RESULTS:           input signals:      301
ABC RESULTS:          output signals:      382
Removing temp directory.

yosys> opt

3.33. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.33.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 8358 unused wires.
<suppressed ~53 debug messages>

yosys> opt_expr

3.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.33.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.33.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.33.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.34. Printing statistics.

=== cavlc ===

   Number of wires:               1039
   Number of wire bits:           1973
   Number of public wires:         155
   Number of public wire bits:     965
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1173
     $_DFFE_PN0P_                  391
     $lut                          740
     adder_carry                    42


yosys> shregmap -minlen 8 -maxlen 20

3.35. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.37. Printing statistics.

=== cavlc ===

   Number of wires:               1039
   Number of wire bits:           1973
   Number of public wires:         155
   Number of public wire bits:     965
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1173
     $_DFFE_PN0P_                  391
     $lut                          740
     adder_carry                    42


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.38. Executing TECHMAP pass (map to technology primitives).

3.38.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.38.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.38.3. Continuing TECHMAP pass.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~1267 debug messages>

yosys> opt_expr -mux_undef

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~17113 debug messages>

yosys> simplemap

3.40. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~7251 debug messages>
Removed a total of 2417 cells.

yosys> opt_dff -nodffe -nosdff

3.43. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 3342 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~662 debug messages>

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 59 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_A8fJ7K/abc_tmp_2.scr

3.46. Executing ABC pass (technology mapping using ABC).

3.46.1. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Extracted 3356 gates and 3657 wires to a netlist network with 299 inputs and 344 outputs.

3.46.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_A8fJ7K/abc_tmp_2.scr 
ABC:   #Luts =   743  Max Lvl =  11  Avg Lvl =   4.32  [   0.53 sec. at Pass 0]
ABC:   #Luts =   743  Max Lvl =  11  Avg Lvl =   4.32  [  11.44 sec. at Pass 1]
ABC:   #Luts =   741  Max Lvl =  12  Avg Lvl =   4.35  [   2.89 sec. at Pass 2]
ABC:   #Luts =   738  Max Lvl =  12  Avg Lvl =   4.58  [  15.31 sec. at Pass 3]
ABC:   #Luts =   738  Max Lvl =  12  Avg Lvl =   4.58  [   2.98 sec. at Pass 4]
ABC:   #Luts =   737  Max Lvl =  12  Avg Lvl =   4.58  [  14.48 sec. at Pass 5]
ABC:   #Luts =   737  Max Lvl =  12  Avg Lvl =   4.58  [   3.78 sec. at Pass 6]
ABC:   #Luts =   737  Max Lvl =  11  Avg Lvl =   4.32  [  13.87 sec. at Pass 7]
ABC:   #Luts =   737  Max Lvl =  11  Avg Lvl =   4.32  [   3.00 sec. at Pass 8]
ABC:   #Luts =   732  Max Lvl =  12  Avg Lvl =   4.14  [  17.17 sec. at Pass 9]
ABC:   #Luts =   732  Max Lvl =  12  Avg Lvl =   4.14  [   3.49 sec. at Pass 10]
ABC:   #Luts =   731  Max Lvl =  12  Avg Lvl =   4.15  [  14.46 sec. at Pass 11]
ABC:   #Luts =   731  Max Lvl =  12  Avg Lvl =   4.15  [   2.81 sec. at Pass 12]
ABC:   #Luts =   731  Max Lvl =  11  Avg Lvl =   4.13  [  11.64 sec. at Pass 13]
ABC:   #Luts =   731  Max Lvl =  11  Avg Lvl =   4.13  [   2.95 sec. at Pass 14]
ABC:   #Luts =   731  Max Lvl =  11  Avg Lvl =   4.13  [  16.33 sec. at Pass 15]
ABC:   #Luts =   730  Max Lvl =  10  Avg Lvl =   4.54  [   3.77 sec. at Pass 16]
ABC:   #Luts =   729  Max Lvl =  12  Avg Lvl =   4.15  [  16.92 sec. at Pass 17]
ABC:   #Luts =   729  Max Lvl =  11  Avg Lvl =   4.56  [   3.61 sec. at Pass 18]
ABC:   #Luts =   729  Max Lvl =  11  Avg Lvl =   4.56  [  12.26 sec. at Pass 19]
ABC:   #Luts =   729  Max Lvl =  11  Avg Lvl =   4.56  [   2.46 sec. at Pass 20]
ABC:   #Luts =   729  Max Lvl =  11  Avg Lvl =   4.56  [  12.47 sec. at Pass 21]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.46.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      729
ABC RESULTS:        internal signals:     3014
ABC RESULTS:           input signals:      299
ABC RESULTS:          output signals:      344
Removing temp directory.

yosys> opt

3.47. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.47.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.47.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.47.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 2876 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.47.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.47.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.47.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.47.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.47.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.47.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.47.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.48. Executing HIERARCHY pass (managing design hierarchy).

3.48.1. Analyzing design hierarchy..
Top module:  \cavlc

3.48.2. Analyzing design hierarchy..
Top module:  \cavlc
Removed 0 unused modules.

yosys> stat

3.49. Printing statistics.

=== cavlc ===

   Number of wires:               1028
   Number of wire bits:           1962
   Number of public wires:         155
   Number of public wire bits:     965
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1162
     $lut                          729
     adder_carry                    42
     dffsre                        391


yosys> opt_clean -purge

3.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 108 unused wires.
<suppressed ~108 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.51. Executing Verilog backend.

yosys> bmuxmap

3.51.1. Executing BMUXMAP pass.

yosys> demuxmap

3.51.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\cavlc'.

Warnings: 73 unique messages, 74 total
End of script. Logfile hash: afb79cf749, CPU: user 29.99s system 0.50s, MEM: 81.26 MB peak
Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 3x abc (2895 sec), 0% 51x opt_expr (9 sec), ...
real 540.71
user 2753.61
sys 170.64
