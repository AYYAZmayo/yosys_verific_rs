
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.19
 Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k wb_conmax_defines.vh wb_conmax.v wb_conmax_arb.v wb_conmax_master_if.v wb_conmax_msel.v wb_conmax_pri_dec.v wb_conmax_pri_enc.v wb_conmax_rf.v wb_conmax_slave_if.v

yosys> verific -vlog2k wb_conmax_defines.vh wb_conmax.v wb_conmax_arb.v wb_conmax_master_if.v wb_conmax_msel.v wb_conmax_pri_dec.v wb_conmax_pri_enc.v wb_conmax_rf.v wb_conmax_slave_if.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_arb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_master_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_msel.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_pri_dec.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_pri_enc.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_slave_if.v'

yosys> read -sv wrapper_top.sv

yosys> verific -sv wrapper_top.sv

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wrapper_top.sv'
VERIFIC-WARNING [VERI-2418] wrapper_top.sv:3: parameter 'dw' declared inside compilation unit '$unit_wrapper_top_sv' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] wrapper_top.sv:4: parameter 'aw' declared inside compilation unit '$unit_wrapper_top_sv' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] wrapper_top.sv:5: parameter 'sw' declared inside compilation unit '$unit_wrapper_top_sv' shall be treated as localparam

yosys> synth_rs -top wb_conmax_top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

4. Executing synth_rs pass: v0.4.44

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

4.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top wb_conmax_top

4.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] wb_conmax.v:60: compiling module 'wb_conmax_top'
VERIFIC-INFO [VERI-1018] wb_conmax_master_if.v:60: compiling module 'wb_conmax_master_if(sw=4)'
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:501: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:502: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:505: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:506: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:509: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:510: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:513: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:514: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:517: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:518: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:521: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:522: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:525: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:526: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:529: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:530: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:533: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:534: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:537: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:538: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:541: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:542: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:545: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:546: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:549: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:550: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:553: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:554: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:557: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:558: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:561: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:562: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_slave_if.v:60: compiling module 'wb_conmax_slave_if(sw=4)'
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:252: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_arb.v:62: compiling module 'wb_conmax_arb'
VERIFIC-WARNING [VERI-2371] wb_conmax_arb.v:100: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_arb.v:101: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_msel.v:60: compiling module 'wb_conmax_msel(pri_sel=2'b10)'
VERIFIC-INFO [VERI-1018] wb_conmax_pri_enc.v:60: compiling module 'wb_conmax_pri_enc(pri_sel=2'b10)'
VERIFIC-INFO [VERI-1018] wb_conmax_pri_dec.v:60: compiling module 'wb_conmax_pri_dec(pri_sel=2'b10)'
VERIFIC-WARNING [VERI-2371] wb_conmax_msel.v:143: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_msel.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:364: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:367: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:370: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:373: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:376: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:379: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:382: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:385: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_rf.v:60: compiling module 'wb_conmax_rf(sw=4)'
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:180: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:183: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:189: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:192: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:194: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:202: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:209: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:212: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:219: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:224: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:237: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:239: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:242: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:244: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:247: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:249: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:259: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:271: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:272: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:273: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:274: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:275: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:276: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:277: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:278: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:279: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:280: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:281: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:282: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:283: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:284: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:286: delay control is not supported for synthesis
Importing module wb_conmax_top.
Importing module wb_conmax_master_if(sw=4).
Importing module wb_conmax_rf(sw=4).
Importing module wb_conmax_slave_if(sw=4).
Importing module wb_conmax_arb.
Importing module wb_conmax_msel(pri_sel=2'b10).
Importing module wb_conmax_pri_enc(pri_sel=2'b10).
Importing module wb_conmax_pri_dec(pri_sel=2'b10).

4.3.1. Analyzing design hierarchy..
Top module:  \wb_conmax_top
Used module:     \wb_conmax_rf(sw=4)
Used module:     \wb_conmax_slave_if(sw=4)
Used module:         \wb_conmax_msel(pri_sel=2'b10)
Used module:             \wb_conmax_arb
Used module:             \wb_conmax_pri_enc(pri_sel=2'b10)
Used module:                 \wb_conmax_pri_dec(pri_sel=2'b10)
Used module:     \wb_conmax_master_if(sw=4)

4.3.2. Analyzing design hierarchy..
Top module:  \wb_conmax_top
Used module:     \wb_conmax_rf(sw=4)
Used module:     \wb_conmax_slave_if(sw=4)
Used module:         \wb_conmax_msel(pri_sel=2'b10)
Used module:             \wb_conmax_arb
Used module:             \wb_conmax_pri_enc(pri_sel=2'b10)
Used module:                 \wb_conmax_pri_dec(pri_sel=2'b10)
Used module:     \wb_conmax_master_if(sw=4)
Removed 0 unused modules.

yosys> proc

4.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

4.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

4.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

4.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

4.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

4.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

4.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

4.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

4.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

4.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

4.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

4.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_pri_dec(pri_sel=2'b10).
<suppressed ~4 debug messages>
Optimizing module wb_conmax_pri_enc(pri_sel=2'b10).
Optimizing module wb_conmax_msel(pri_sel=2'b10).
<suppressed ~9 debug messages>
Optimizing module wb_conmax_arb.
<suppressed ~1 debug messages>
Optimizing module wb_conmax_slave_if(sw=4).
<suppressed ~1 debug messages>
Optimizing module wb_conmax_rf(sw=4).
<suppressed ~2 debug messages>
Optimizing module wb_conmax_master_if(sw=4).
<suppressed ~1 debug messages>
Optimizing module wb_conmax_top.

yosys> flatten

4.5. Executing FLATTEN pass (flatten design).
Deleting now unused module wb_conmax_pri_dec(pri_sel=2'b10).
Deleting now unused module wb_conmax_pri_enc(pri_sel=2'b10).
Deleting now unused module wb_conmax_msel(pri_sel=2'b10).
Deleting now unused module wb_conmax_arb.
Deleting now unused module wb_conmax_slave_if(sw=4).
Deleting now unused module wb_conmax_rf(sw=4).
Deleting now unused module wb_conmax_master_if(sw=4).
<suppressed ~40 debug messages>

yosys> tribuf -logic

4.6. Executing TRIBUF pass.

yosys> deminout

4.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~1280 debug messages>

yosys> opt_clean

4.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 2112 unused cells and 39243 unused wires.
<suppressed ~5288 debug messages>

yosys> check

4.10. Executing CHECK pass (checking for obvious problems).
Checking module wb_conmax_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

4.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~1152 debug messages>
Removed a total of 384 cells.

yosys> opt_muxtree

4.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~934 debug messages>

yosys> opt_reduce

4.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\s9.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s9.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s9.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s9.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s9.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s8.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s7.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s6.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s5.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s4.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s3.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s2.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s15.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s14.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s13.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s12.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s11.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s10.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s1.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s0.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\rf.$verific$rf_dout_reg$wb_conmax_rf.v:287$31025 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf9_reg$wb_conmax_rf.v:234$30998 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf8_reg$wb_conmax_rf.v:229$30994 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf7_reg$wb_conmax_rf.v:224$30990 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf6_reg$wb_conmax_rf.v:219$30986 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf5_reg$wb_conmax_rf.v:214$30982 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf4_reg$wb_conmax_rf.v:209$30978 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf3_reg$wb_conmax_rf.v:204$30974 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf2_reg$wb_conmax_rf.v:199$30970 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf1_reg$wb_conmax_rf.v:194$30966 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf15_reg$wb_conmax_rf.v:264$31022 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf14_reg$wb_conmax_rf.v:259$31018 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf13_reg$wb_conmax_rf.v:254$31014 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf12_reg$wb_conmax_rf.v:249$31010 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf11_reg$wb_conmax_rf.v:244$31006 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf10_reg$wb_conmax_rf.v:239$31002 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf0_reg$wb_conmax_rf.v:189$30962 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.

yosys> opt_clean

4.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 384 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~934 debug messages>

yosys> opt_reduce

4.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

4.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

4.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

4.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

4.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

4.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> fsm_opt

4.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

4.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

4.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

4.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

4.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~934 debug messages>

yosys> opt_reduce

4.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

4.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\s9.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s9.\msel.$verific$n29$31525, Q = \s9.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31785 ($sdff) from module wb_conmax_top (D = \s9.msel.pri_enc.pri_out1, Q = \s9.msel.pri_out).
Adding SRST signal on $flatten\s8.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s8.\msel.$verific$n29$31525, Q = \s8.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31787 ($sdff) from module wb_conmax_top (D = \s8.msel.pri_enc.pri_out1, Q = \s8.msel.pri_out).
Adding SRST signal on $flatten\s7.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s7.\msel.$verific$n29$31525, Q = \s7.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31789 ($sdff) from module wb_conmax_top (D = \s7.msel.pri_enc.pri_out1, Q = \s7.msel.pri_out).
Adding SRST signal on $flatten\s6.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s6.\msel.$verific$n29$31525, Q = \s6.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31791 ($sdff) from module wb_conmax_top (D = \s6.msel.pri_enc.pri_out1, Q = \s6.msel.pri_out).
Adding SRST signal on $flatten\s5.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s5.\msel.$verific$n29$31525, Q = \s5.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31793 ($sdff) from module wb_conmax_top (D = \s5.msel.pri_enc.pri_out1, Q = \s5.msel.pri_out).
Adding SRST signal on $flatten\s4.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s4.\msel.$verific$n29$31525, Q = \s4.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31795 ($sdff) from module wb_conmax_top (D = \s4.msel.pri_enc.pri_out1, Q = \s4.msel.pri_out).
Adding SRST signal on $flatten\s3.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s3.\msel.$verific$n29$31525, Q = \s3.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31797 ($sdff) from module wb_conmax_top (D = \s3.msel.pri_enc.pri_out1, Q = \s3.msel.pri_out).
Adding SRST signal on $flatten\s2.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s2.\msel.$verific$n29$31525, Q = \s2.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31799 ($sdff) from module wb_conmax_top (D = \s2.msel.pri_enc.pri_out1, Q = \s2.msel.pri_out).
Adding SRST signal on $flatten\s15.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s15.\msel.$verific$n29$31525, Q = \s15.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31801 ($sdff) from module wb_conmax_top (D = \s15.msel.pri_enc.pri_out1, Q = \s15.msel.pri_out).
Adding SRST signal on $flatten\s14.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s14.\msel.$verific$n29$31525, Q = \s14.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31803 ($sdff) from module wb_conmax_top (D = \s14.msel.pri_enc.pri_out1, Q = \s14.msel.pri_out).
Adding SRST signal on $flatten\s13.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s13.\msel.$verific$n29$31525, Q = \s13.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31805 ($sdff) from module wb_conmax_top (D = \s13.msel.pri_enc.pri_out1, Q = \s13.msel.pri_out).
Adding SRST signal on $flatten\s12.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s12.\msel.$verific$n29$31525, Q = \s12.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31807 ($sdff) from module wb_conmax_top (D = \s12.msel.pri_enc.pri_out1, Q = \s12.msel.pri_out).
Adding SRST signal on $flatten\s11.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s11.\msel.$verific$n29$31525, Q = \s11.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31809 ($sdff) from module wb_conmax_top (D = \s11.msel.pri_enc.pri_out1, Q = \s11.msel.pri_out).
Adding SRST signal on $flatten\s10.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s10.\msel.$verific$n29$31525, Q = \s10.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31811 ($sdff) from module wb_conmax_top (D = \s10.msel.pri_enc.pri_out1, Q = \s10.msel.pri_out).
Adding SRST signal on $flatten\s1.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s1.\msel.$verific$n29$31525, Q = \s1.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31813 ($sdff) from module wb_conmax_top (D = \s1.msel.pri_enc.pri_out1, Q = \s1.msel.pri_out).
Adding SRST signal on $flatten\s0.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s0.\msel.$verific$n29$31525, Q = \s0.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31815 ($sdff) from module wb_conmax_top (D = \s0.msel.pri_enc.pri_out1, Q = \s0.msel.pri_out).
Adding SRST signal on $flatten\rf.$verific$rf_dout_reg$wb_conmax_rf.v:287$31025 ($dff) from module wb_conmax_top (D = $flatten\rf.$verific$n1446$30938, Q = \rf.rf_dout, rval = 16'0000000000000000).
Adding EN signal on $flatten\rf.$verific$conf9_reg$wb_conmax_rf.v:234$30998 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf9).
Adding EN signal on $flatten\rf.$verific$conf8_reg$wb_conmax_rf.v:229$30994 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf8).
Adding EN signal on $flatten\rf.$verific$conf7_reg$wb_conmax_rf.v:224$30990 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf7).
Adding EN signal on $flatten\rf.$verific$conf6_reg$wb_conmax_rf.v:219$30986 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf6).
Adding EN signal on $flatten\rf.$verific$conf5_reg$wb_conmax_rf.v:214$30982 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf5).
Adding EN signal on $flatten\rf.$verific$conf4_reg$wb_conmax_rf.v:209$30978 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf4).
Adding EN signal on $flatten\rf.$verific$conf3_reg$wb_conmax_rf.v:204$30974 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf3).
Adding EN signal on $flatten\rf.$verific$conf2_reg$wb_conmax_rf.v:199$30970 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf2).
Adding EN signal on $flatten\rf.$verific$conf1_reg$wb_conmax_rf.v:194$30966 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf1).
Adding EN signal on $flatten\rf.$verific$conf15_reg$wb_conmax_rf.v:264$31022 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf15).
Adding EN signal on $flatten\rf.$verific$conf14_reg$wb_conmax_rf.v:259$31018 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf14).
Adding EN signal on $flatten\rf.$verific$conf13_reg$wb_conmax_rf.v:254$31014 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf13).
Adding EN signal on $flatten\rf.$verific$conf12_reg$wb_conmax_rf.v:249$31010 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf12).
Adding EN signal on $flatten\rf.$verific$conf11_reg$wb_conmax_rf.v:244$31006 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf11).
Adding EN signal on $flatten\rf.$verific$conf10_reg$wb_conmax_rf.v:239$31002 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf10).
Adding EN signal on $flatten\rf.$verific$conf0_reg$wb_conmax_rf.v:189$30962 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf0).
Adding EN signal on $flatten\m7.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1779$30487, Q = \m7.s9_cyc_o).
Adding EN signal on $flatten\m7.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1773$30484, Q = \m7.s8_cyc_o).
Adding EN signal on $flatten\m7.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1767$30481, Q = \m7.s7_cyc_o).
Adding EN signal on $flatten\m7.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1761$30478, Q = \m7.s6_cyc_o).
Adding EN signal on $flatten\m7.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1755$30475, Q = \m7.s5_cyc_o).
Adding EN signal on $flatten\m7.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1749$30472, Q = \m7.s4_cyc_o).
Adding EN signal on $flatten\m7.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1743$30469, Q = \m7.s3_cyc_o).
Adding EN signal on $flatten\m7.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1737$30466, Q = \m7.s2_cyc_o).
Adding EN signal on $flatten\m7.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1731$30463, Q = \m7.s1_cyc_o).
Adding EN signal on $flatten\m7.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1815$30505, Q = \m7.s15_cyc_o).
Adding EN signal on $flatten\m7.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1809$30502, Q = \m7.s14_cyc_o).
Adding EN signal on $flatten\m7.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1803$30499, Q = \m7.s13_cyc_o).
Adding EN signal on $flatten\m7.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1797$30496, Q = \m7.s12_cyc_o).
Adding EN signal on $flatten\m7.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1791$30493, Q = \m7.s11_cyc_o).
Adding EN signal on $flatten\m7.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1785$30490, Q = \m7.s10_cyc_o).
Adding EN signal on $flatten\m7.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1725$30460, Q = \m7.s0_cyc_o).
Adding EN signal on $flatten\m6.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1779$30487, Q = \m6.s9_cyc_o).
Adding EN signal on $flatten\m6.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1773$30484, Q = \m6.s8_cyc_o).
Adding EN signal on $flatten\m6.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1767$30481, Q = \m6.s7_cyc_o).
Adding EN signal on $flatten\m6.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1761$30478, Q = \m6.s6_cyc_o).
Adding EN signal on $flatten\m6.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1755$30475, Q = \m6.s5_cyc_o).
Adding EN signal on $flatten\m6.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1749$30472, Q = \m6.s4_cyc_o).
Adding EN signal on $flatten\m6.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1743$30469, Q = \m6.s3_cyc_o).
Adding EN signal on $flatten\m6.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1737$30466, Q = \m6.s2_cyc_o).
Adding EN signal on $flatten\m6.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1731$30463, Q = \m6.s1_cyc_o).
Adding EN signal on $flatten\m6.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1815$30505, Q = \m6.s15_cyc_o).
Adding EN signal on $flatten\m6.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1809$30502, Q = \m6.s14_cyc_o).
Adding EN signal on $flatten\m6.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1803$30499, Q = \m6.s13_cyc_o).
Adding EN signal on $flatten\m6.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1797$30496, Q = \m6.s12_cyc_o).
Adding EN signal on $flatten\m6.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1791$30493, Q = \m6.s11_cyc_o).
Adding EN signal on $flatten\m6.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1785$30490, Q = \m6.s10_cyc_o).
Adding EN signal on $flatten\m6.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1725$30460, Q = \m6.s0_cyc_o).
Adding EN signal on $flatten\m5.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1779$30487, Q = \m5.s9_cyc_o).
Adding EN signal on $flatten\m5.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1773$30484, Q = \m5.s8_cyc_o).
Adding EN signal on $flatten\m5.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1767$30481, Q = \m5.s7_cyc_o).
Adding EN signal on $flatten\m5.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1761$30478, Q = \m5.s6_cyc_o).
Adding EN signal on $flatten\m5.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1755$30475, Q = \m5.s5_cyc_o).
Adding EN signal on $flatten\m5.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1749$30472, Q = \m5.s4_cyc_o).
Adding EN signal on $flatten\m5.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1743$30469, Q = \m5.s3_cyc_o).
Adding EN signal on $flatten\m5.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1737$30466, Q = \m5.s2_cyc_o).
Adding EN signal on $flatten\m5.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1731$30463, Q = \m5.s1_cyc_o).
Adding EN signal on $flatten\m5.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1815$30505, Q = \m5.s15_cyc_o).
Adding EN signal on $flatten\m5.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1809$30502, Q = \m5.s14_cyc_o).
Adding EN signal on $flatten\m5.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1803$30499, Q = \m5.s13_cyc_o).
Adding EN signal on $flatten\m5.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1797$30496, Q = \m5.s12_cyc_o).
Adding EN signal on $flatten\m5.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1791$30493, Q = \m5.s11_cyc_o).
Adding EN signal on $flatten\m5.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1785$30490, Q = \m5.s10_cyc_o).
Adding EN signal on $flatten\m5.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1725$30460, Q = \m5.s0_cyc_o).
Adding EN signal on $flatten\m4.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1779$30487, Q = \m4.s9_cyc_o).
Adding EN signal on $flatten\m4.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1773$30484, Q = \m4.s8_cyc_o).
Adding EN signal on $flatten\m4.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1767$30481, Q = \m4.s7_cyc_o).
Adding EN signal on $flatten\m4.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1761$30478, Q = \m4.s6_cyc_o).
Adding EN signal on $flatten\m4.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1755$30475, Q = \m4.s5_cyc_o).
Adding EN signal on $flatten\m4.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1749$30472, Q = \m4.s4_cyc_o).
Adding EN signal on $flatten\m4.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1743$30469, Q = \m4.s3_cyc_o).
Adding EN signal on $flatten\m4.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1737$30466, Q = \m4.s2_cyc_o).
Adding EN signal on $flatten\m4.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1731$30463, Q = \m4.s1_cyc_o).
Adding EN signal on $flatten\m4.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1815$30505, Q = \m4.s15_cyc_o).
Adding EN signal on $flatten\m4.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1809$30502, Q = \m4.s14_cyc_o).
Adding EN signal on $flatten\m4.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1803$30499, Q = \m4.s13_cyc_o).
Adding EN signal on $flatten\m4.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1797$30496, Q = \m4.s12_cyc_o).
Adding EN signal on $flatten\m4.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1791$30493, Q = \m4.s11_cyc_o).
Adding EN signal on $flatten\m4.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1785$30490, Q = \m4.s10_cyc_o).
Adding EN signal on $flatten\m4.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1725$30460, Q = \m4.s0_cyc_o).
Adding EN signal on $flatten\m3.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1779$30487, Q = \m3.s9_cyc_o).
Adding EN signal on $flatten\m3.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1773$30484, Q = \m3.s8_cyc_o).
Adding EN signal on $flatten\m3.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1767$30481, Q = \m3.s7_cyc_o).
Adding EN signal on $flatten\m3.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1761$30478, Q = \m3.s6_cyc_o).
Adding EN signal on $flatten\m3.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1755$30475, Q = \m3.s5_cyc_o).
Adding EN signal on $flatten\m3.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1749$30472, Q = \m3.s4_cyc_o).
Adding EN signal on $flatten\m3.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1743$30469, Q = \m3.s3_cyc_o).
Adding EN signal on $flatten\m3.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1737$30466, Q = \m3.s2_cyc_o).
Adding EN signal on $flatten\m3.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1731$30463, Q = \m3.s1_cyc_o).
Adding EN signal on $flatten\m3.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1815$30505, Q = \m3.s15_cyc_o).
Adding EN signal on $flatten\m3.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1809$30502, Q = \m3.s14_cyc_o).
Adding EN signal on $flatten\m3.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1803$30499, Q = \m3.s13_cyc_o).
Adding EN signal on $flatten\m3.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1797$30496, Q = \m3.s12_cyc_o).
Adding EN signal on $flatten\m3.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1791$30493, Q = \m3.s11_cyc_o).
Adding EN signal on $flatten\m3.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1785$30490, Q = \m3.s10_cyc_o).
Adding EN signal on $flatten\m3.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1725$30460, Q = \m3.s0_cyc_o).
Adding EN signal on $flatten\m2.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1779$30487, Q = \m2.s9_cyc_o).
Adding EN signal on $flatten\m2.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1773$30484, Q = \m2.s8_cyc_o).
Adding EN signal on $flatten\m2.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1767$30481, Q = \m2.s7_cyc_o).
Adding EN signal on $flatten\m2.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1761$30478, Q = \m2.s6_cyc_o).
Adding EN signal on $flatten\m2.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1755$30475, Q = \m2.s5_cyc_o).
Adding EN signal on $flatten\m2.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1749$30472, Q = \m2.s4_cyc_o).
Adding EN signal on $flatten\m2.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1743$30469, Q = \m2.s3_cyc_o).
Adding EN signal on $flatten\m2.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1737$30466, Q = \m2.s2_cyc_o).
Adding EN signal on $flatten\m2.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1731$30463, Q = \m2.s1_cyc_o).
Adding EN signal on $flatten\m2.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1815$30505, Q = \m2.s15_cyc_o).
Adding EN signal on $flatten\m2.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1809$30502, Q = \m2.s14_cyc_o).
Adding EN signal on $flatten\m2.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1803$30499, Q = \m2.s13_cyc_o).
Adding EN signal on $flatten\m2.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1797$30496, Q = \m2.s12_cyc_o).
Adding EN signal on $flatten\m2.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1791$30493, Q = \m2.s11_cyc_o).
Adding EN signal on $flatten\m2.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1785$30490, Q = \m2.s10_cyc_o).
Adding EN signal on $flatten\m2.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1725$30460, Q = \m2.s0_cyc_o).
Adding EN signal on $flatten\m1.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1779$30487, Q = \m1.s9_cyc_o).
Adding EN signal on $flatten\m1.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1773$30484, Q = \m1.s8_cyc_o).
Adding EN signal on $flatten\m1.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1767$30481, Q = \m1.s7_cyc_o).
Adding EN signal on $flatten\m1.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1761$30478, Q = \m1.s6_cyc_o).
Adding EN signal on $flatten\m1.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1755$30475, Q = \m1.s5_cyc_o).
Adding EN signal on $flatten\m1.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1749$30472, Q = \m1.s4_cyc_o).
Adding EN signal on $flatten\m1.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1743$30469, Q = \m1.s3_cyc_o).
Adding EN signal on $flatten\m1.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1737$30466, Q = \m1.s2_cyc_o).
Adding EN signal on $flatten\m1.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1731$30463, Q = \m1.s1_cyc_o).
Adding EN signal on $flatten\m1.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1815$30505, Q = \m1.s15_cyc_o).
Adding EN signal on $flatten\m1.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1809$30502, Q = \m1.s14_cyc_o).
Adding EN signal on $flatten\m1.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1803$30499, Q = \m1.s13_cyc_o).
Adding EN signal on $flatten\m1.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1797$30496, Q = \m1.s12_cyc_o).
Adding EN signal on $flatten\m1.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1791$30493, Q = \m1.s11_cyc_o).
Adding EN signal on $flatten\m1.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1785$30490, Q = \m1.s10_cyc_o).
Adding EN signal on $flatten\m1.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1725$30460, Q = \m1.s0_cyc_o).
Adding EN signal on $flatten\m0.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1779$30487, Q = \m0.s9_cyc_o).
Adding EN signal on $flatten\m0.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1773$30484, Q = \m0.s8_cyc_o).
Adding EN signal on $flatten\m0.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1767$30481, Q = \m0.s7_cyc_o).
Adding EN signal on $flatten\m0.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1761$30478, Q = \m0.s6_cyc_o).
Adding EN signal on $flatten\m0.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1755$30475, Q = \m0.s5_cyc_o).
Adding EN signal on $flatten\m0.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1749$30472, Q = \m0.s4_cyc_o).
Adding EN signal on $flatten\m0.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1743$30469, Q = \m0.s3_cyc_o).
Adding EN signal on $flatten\m0.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1737$30466, Q = \m0.s2_cyc_o).
Adding EN signal on $flatten\m0.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1731$30463, Q = \m0.s1_cyc_o).
Adding EN signal on $flatten\m0.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1815$30505, Q = \m0.s15_cyc_o).
Adding EN signal on $flatten\m0.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1809$30502, Q = \m0.s14_cyc_o).
Adding EN signal on $flatten\m0.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1803$30499, Q = \m0.s13_cyc_o).
Adding EN signal on $flatten\m0.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1797$30496, Q = \m0.s12_cyc_o).
Adding EN signal on $flatten\m0.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1791$30493, Q = \m0.s11_cyc_o).
Adding EN signal on $flatten\m0.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1785$30490, Q = \m0.s10_cyc_o).
Adding EN signal on $flatten\m0.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1725$30460, Q = \m0.s0_cyc_o).

yosys> opt_clean

4.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 177 unused cells and 177 unused wires.
<suppressed ~306 debug messages>

yosys> opt_expr

4.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~917 debug messages>

yosys> opt_reduce

4.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

4.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

4.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s0.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s0.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s0.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s1.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s1.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s1.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s2.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s2.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s2.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s3.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s3.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s3.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s4.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s4.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s4.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s5.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s5.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s5.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s6.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s6.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s6.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s7.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s7.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s7.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s8.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s8.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s8.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s9.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s9.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s9.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s10.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s10.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s10.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s11.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s11.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s11.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s12.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s12.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s12.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s13.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s13.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s13.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s14.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s14.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s14.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s15.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s15.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s15.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_69$wb_conmax_rf.v:224$30987 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_62$wb_conmax_rf.v:219$30983 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_55$wb_conmax_rf.v:214$30979 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_48$wb_conmax_rf.v:209$30975 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_41$wb_conmax_rf.v:204$30971 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_34$wb_conmax_rf.v:199$30967 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_27$wb_conmax_rf.v:194$30963 ($eq).

yosys> peepopt

4.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

4.16. Executing PMUXTREE pass.

yosys> opt_clean

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> alumacc

4.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module wb_conmax_top:
  created 0 $alu and 0 $macc cells.

yosys> opt

4.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~917 debug messages>

yosys> opt_reduce

4.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

4.20. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              12214
   Number of wire bits:          68556
   Number of public wires:        6526
   Number of public wire bits:   53205
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7009
     $adff                          64
     $adffe                        144
     $and                          605
     $bmux                         209
     $dff                          146
     $eq                           632
     $logic_not                    153
     $mux                         4773
     $not                          154
     $or                           112
     $sdff                           1
     $sdffe                         16


yosys> memory -nomap

4.21. Executing MEMORY pass.

yosys> opt_mem

4.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

4.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

4.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

4.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

4.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> memory_share

4.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

4.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

4.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> memory_collect

4.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

4.22. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              12214
   Number of wire bits:          68556
   Number of public wires:        6526
   Number of public wire bits:   53205
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7009
     $adff                          64
     $adffe                        144
     $and                          605
     $bmux                         209
     $dff                          146
     $eq                           632
     $logic_not                    153
     $mux                         4773
     $not                          154
     $or                           112
     $sdff                           1
     $sdffe                         16


yosys> opt_clean

4.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> stat

4.24. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              12214
   Number of wire bits:          68556
   Number of public wires:        6526
   Number of public wire bits:   53205
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7009
     $adff                          64
     $adffe                        144
     $and                          605
     $bmux                         209
     $dff                          146
     $eq                           632
     $logic_not                    153
     $mux                         4773
     $not                          154
     $or                           112
     $sdff                           1
     $sdffe                         16


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $dff.
No more expansions possible.
<suppressed ~7080 debug messages>

yosys> stat

4.26. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              15180
   Number of wire bits:          85919
   Number of public wires:        6526
   Number of public wire bits:   53205
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              34121
     $_AND_                       1053
     $_DFFE_PP0N_                  128
     $_DFFE_PP0P_                  256
     $_DFF_PP0_                    192
     $_DFF_P_                      146
     $_MUX_                      28060
     $_NOT_                        939
     $_OR_                        1651
     $_SDFFE_PP0P_                  32
     $_SDFF_PN0_                    16
     $_XOR_                       1648


yosys> opt

4.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~3200 debug messages>

yosys> opt_merge -nomux

4.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~3564 debug messages>
Removed a total of 1188 cells.

yosys> opt_muxtree

4.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 368 unused cells and 2526 unused wires.
<suppressed ~369 debug messages>

yosys> opt_expr

4.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$69543 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb3.next_state [2], Q = \s15.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$69542 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb3.next_state [1], Q = \s15.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$69541 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb3.next_state [0], Q = \s15.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$69324 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb2.next_state [2], Q = \s15.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$69323 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb2.next_state [1], Q = \s15.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$69322 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb2.next_state [0], Q = \s15.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$69105 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb1.next_state [2], Q = \s15.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$69104 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb1.next_state [1], Q = \s15.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$69103 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb1.next_state [0], Q = \s15.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$68886 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb0.next_state [2], Q = \s15.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$68885 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb0.next_state [1], Q = \s15.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$68884 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb0.next_state [0], Q = \s15.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$67569 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb3.next_state [2], Q = \s14.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$67568 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb3.next_state [1], Q = \s14.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$67567 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb3.next_state [0], Q = \s14.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$67350 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb2.next_state [2], Q = \s14.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$67349 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb2.next_state [1], Q = \s14.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$67348 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb2.next_state [0], Q = \s14.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$67131 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb1.next_state [2], Q = \s14.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$67130 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb1.next_state [1], Q = \s14.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$67129 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb1.next_state [0], Q = \s14.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$66912 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb0.next_state [2], Q = \s14.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$66911 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb0.next_state [1], Q = \s14.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$66910 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb0.next_state [0], Q = \s14.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$65595 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb3.next_state [2], Q = \s13.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$65594 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb3.next_state [1], Q = \s13.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$65593 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb3.next_state [0], Q = \s13.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$65376 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb2.next_state [2], Q = \s13.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$65375 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb2.next_state [1], Q = \s13.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$65374 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb2.next_state [0], Q = \s13.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$65157 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb1.next_state [2], Q = \s13.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$65156 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb1.next_state [1], Q = \s13.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$65155 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb1.next_state [0], Q = \s13.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$64938 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb0.next_state [2], Q = \s13.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$64937 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb0.next_state [1], Q = \s13.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$64936 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb0.next_state [0], Q = \s13.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$63621 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb3.next_state [2], Q = \s12.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$63620 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb3.next_state [1], Q = \s12.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$63619 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb3.next_state [0], Q = \s12.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$63402 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb2.next_state [2], Q = \s12.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$63401 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb2.next_state [1], Q = \s12.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$63400 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb2.next_state [0], Q = \s12.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$63183 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb1.next_state [2], Q = \s12.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$63182 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb1.next_state [1], Q = \s12.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$63181 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb1.next_state [0], Q = \s12.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$62964 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb0.next_state [2], Q = \s12.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$62963 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb0.next_state [1], Q = \s12.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$62962 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb0.next_state [0], Q = \s12.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$61647 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb3.next_state [2], Q = \s11.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$61646 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb3.next_state [1], Q = \s11.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$61645 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb3.next_state [0], Q = \s11.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$61428 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb2.next_state [2], Q = \s11.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$61427 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb2.next_state [1], Q = \s11.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$61426 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb2.next_state [0], Q = \s11.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$61209 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb1.next_state [2], Q = \s11.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$61208 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb1.next_state [1], Q = \s11.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$61207 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb1.next_state [0], Q = \s11.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$60990 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb0.next_state [2], Q = \s11.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$60989 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb0.next_state [1], Q = \s11.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$60988 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb0.next_state [0], Q = \s11.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59673 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb3.next_state [2], Q = \s10.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59672 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb3.next_state [1], Q = \s10.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59671 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb3.next_state [0], Q = \s10.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59454 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb2.next_state [2], Q = \s10.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59453 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb2.next_state [1], Q = \s10.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59452 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb2.next_state [0], Q = \s10.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59235 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb1.next_state [2], Q = \s10.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59234 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb1.next_state [1], Q = \s10.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59233 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb1.next_state [0], Q = \s10.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59016 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb0.next_state [2], Q = \s10.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59015 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb0.next_state [1], Q = \s10.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59014 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb0.next_state [0], Q = \s10.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57699 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb3.next_state [2], Q = \s9.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57698 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb3.next_state [1], Q = \s9.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57697 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb3.next_state [0], Q = \s9.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57480 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb2.next_state [2], Q = \s9.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57479 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb2.next_state [1], Q = \s9.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57478 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb2.next_state [0], Q = \s9.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57261 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb1.next_state [2], Q = \s9.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57260 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb1.next_state [1], Q = \s9.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57259 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb1.next_state [0], Q = \s9.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57042 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb0.next_state [2], Q = \s9.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57041 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb0.next_state [1], Q = \s9.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57040 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb0.next_state [0], Q = \s9.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55725 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb3.next_state [2], Q = \s8.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55724 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb3.next_state [1], Q = \s8.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55723 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb3.next_state [0], Q = \s8.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55506 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb2.next_state [2], Q = \s8.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55505 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb2.next_state [1], Q = \s8.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55504 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb2.next_state [0], Q = \s8.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55287 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb1.next_state [2], Q = \s8.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55286 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb1.next_state [1], Q = \s8.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55285 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb1.next_state [0], Q = \s8.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55068 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb0.next_state [2], Q = \s8.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55067 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb0.next_state [1], Q = \s8.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55066 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb0.next_state [0], Q = \s8.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53751 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb3.next_state [2], Q = \s7.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53750 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb3.next_state [1], Q = \s7.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53749 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb3.next_state [0], Q = \s7.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53532 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb2.next_state [2], Q = \s7.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53531 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb2.next_state [1], Q = \s7.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53530 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb2.next_state [0], Q = \s7.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53313 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb1.next_state [2], Q = \s7.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53312 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb1.next_state [1], Q = \s7.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53311 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb1.next_state [0], Q = \s7.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53094 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb0.next_state [2], Q = \s7.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53093 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb0.next_state [1], Q = \s7.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53092 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb0.next_state [0], Q = \s7.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51777 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb3.next_state [2], Q = \s6.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51776 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb3.next_state [1], Q = \s6.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51775 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb3.next_state [0], Q = \s6.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51558 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb2.next_state [2], Q = \s6.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51557 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb2.next_state [1], Q = \s6.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51556 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb2.next_state [0], Q = \s6.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51339 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb1.next_state [2], Q = \s6.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51338 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb1.next_state [1], Q = \s6.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51337 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb1.next_state [0], Q = \s6.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51120 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb0.next_state [2], Q = \s6.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51119 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb0.next_state [1], Q = \s6.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51118 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb0.next_state [0], Q = \s6.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49803 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb3.next_state [2], Q = \s5.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49802 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb3.next_state [1], Q = \s5.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49801 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb3.next_state [0], Q = \s5.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49584 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb2.next_state [2], Q = \s5.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49583 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb2.next_state [1], Q = \s5.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49582 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb2.next_state [0], Q = \s5.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49365 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb1.next_state [2], Q = \s5.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49364 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb1.next_state [1], Q = \s5.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49363 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb1.next_state [0], Q = \s5.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49146 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb0.next_state [2], Q = \s5.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49145 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb0.next_state [1], Q = \s5.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49144 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb0.next_state [0], Q = \s5.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47829 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb3.next_state [2], Q = \s4.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47828 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb3.next_state [1], Q = \s4.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47827 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb3.next_state [0], Q = \s4.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47610 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb2.next_state [2], Q = \s4.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47609 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb2.next_state [1], Q = \s4.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47608 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb2.next_state [0], Q = \s4.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47391 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb1.next_state [2], Q = \s4.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47390 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb1.next_state [1], Q = \s4.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47389 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb1.next_state [0], Q = \s4.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47172 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb0.next_state [2], Q = \s4.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47171 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb0.next_state [1], Q = \s4.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47170 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb0.next_state [0], Q = \s4.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45855 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb3.next_state [2], Q = \s3.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45854 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb3.next_state [1], Q = \s3.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45853 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb3.next_state [0], Q = \s3.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45636 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb2.next_state [2], Q = \s3.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45635 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb2.next_state [1], Q = \s3.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45634 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb2.next_state [0], Q = \s3.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45417 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb1.next_state [2], Q = \s3.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45416 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb1.next_state [1], Q = \s3.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45415 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb1.next_state [0], Q = \s3.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45198 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb0.next_state [2], Q = \s3.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45197 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb0.next_state [1], Q = \s3.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45196 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb0.next_state [0], Q = \s3.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43881 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb3.next_state [2], Q = \s2.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43880 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb3.next_state [1], Q = \s2.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43879 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb3.next_state [0], Q = \s2.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43662 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb2.next_state [2], Q = \s2.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43661 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb2.next_state [1], Q = \s2.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43660 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb2.next_state [0], Q = \s2.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43443 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb1.next_state [2], Q = \s2.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43442 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb1.next_state [1], Q = \s2.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43441 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb1.next_state [0], Q = \s2.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43224 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb0.next_state [2], Q = \s2.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43223 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb0.next_state [1], Q = \s2.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43222 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb0.next_state [0], Q = \s2.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41907 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb3.next_state [2], Q = \s1.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41906 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb3.next_state [1], Q = \s1.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41905 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb3.next_state [0], Q = \s1.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41688 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb2.next_state [2], Q = \s1.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41687 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb2.next_state [1], Q = \s1.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41686 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb2.next_state [0], Q = \s1.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41469 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb1.next_state [2], Q = \s1.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41468 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb1.next_state [1], Q = \s1.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41467 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb1.next_state [0], Q = \s1.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41250 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb0.next_state [2], Q = \s1.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41249 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb0.next_state [1], Q = \s1.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41248 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb0.next_state [0], Q = \s1.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39933 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb3.next_state [2], Q = \s0.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39932 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb3.next_state [1], Q = \s0.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39931 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb3.next_state [0], Q = \s0.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39714 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb2.next_state [2], Q = \s0.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39713 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb2.next_state [1], Q = \s0.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39712 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb2.next_state [0], Q = \s0.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39495 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb1.next_state [2], Q = \s0.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39494 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb1.next_state [1], Q = \s0.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39493 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb1.next_state [0], Q = \s0.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39276 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb0.next_state [2], Q = \s0.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39275 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb0.next_state [1], Q = \s0.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39274 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb0.next_state [0], Q = \s0.msel.arb0.state [0]).

yosys> opt_clean

4.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 3264 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~23040 debug messages>

4.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~75648 debug messages>
Removed a total of 25216 cells.

yosys> opt_dff

4.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 15361 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

4.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

4.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~8511 debug messages>

yosys> opt_merge

4.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~8640 debug messages>
Removed a total of 2880 cells.

yosys> opt_dff

4.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 1536 unused wires.
<suppressed ~1 debug messages>

4.28.5. Finished fast OPT passes.

yosys> memory_map

4.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

4.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

4.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

4.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_share

4.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

4.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr -full

4.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

4.31. Executing ABC pass (technology mapping using ABC).

4.31.1. Summary of detected clock domains:
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$99180, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$98058, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$96936, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$95814, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$94692, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$93570, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$92448, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$91326, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$90204, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$89082, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$87960, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$86838, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$85716, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$84594, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$83472, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$82350, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$81228, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$80106, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$78984, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$77862, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$76740, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$75618, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$74496, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$73374, arst=\rst_i, srst={ }
  184 cells in clk=\clk_i, en=$flatten\rf.$verific$n1103$30899, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n109$30871, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n180$30873, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n251$30875, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n322$30877, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n393$30879, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n464$30881, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n535$30883, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n606$30885, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n38$30869, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n748$30889, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n819$30891, arst=\rst_i, srst={ }
  139 cells in clk=\clk_i, en=$flatten\rf.$verific$n890$30893, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n961$30895, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n1032$30897, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n677$30887, arst=\rst_i, srst={ }
  29 cells in clk=\clk_i, en=\s15.next, arst={ }, srst=\rst_i
  29 cells in clk=\clk_i, en=\s14.next, arst={ }, srst=\rst_i
  29 cells in clk=\clk_i, en=\s13.next, arst={ }, srst=\rst_i
  29 cells in clk=\clk_i, en=\s12.next, arst={ }, srst=\rst_i
  29 cells in clk=\clk_i, en=\s11.next, arst={ }, srst=\rst_i
  29 cells in clk=\clk_i, en=\s10.next, arst={ }, srst=\rst_i
  34 cells in clk=\clk_i, en=\s9.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s8.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s7.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s6.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s5.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s4.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s3.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s2.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s1.next, arst={ }, srst=\rst_i
  7740 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  35 cells in clk=\clk_i, en=\s0.next, arst={ }, srst=\rst_i
  1021 cells in clk=\clk_i, en={ }, arst={ }, srst=!\rf.rf_sel
  920 cells in clk=\clk_i, en=!$flatten\m7.$verific$n1723$30458, arst=\rst_i, srst={ }
  919 cells in clk=\clk_i, en=!$flatten\m6.$verific$n1723$30458, arst=\rst_i, srst={ }
  919 cells in clk=\clk_i, en=!$flatten\m5.$verific$n1723$30458, arst=\rst_i, srst={ }
  919 cells in clk=\clk_i, en=!$flatten\m4.$verific$n1723$30458, arst=\rst_i, srst={ }
  904 cells in clk=\clk_i, en=!$flatten\m3.$verific$n1723$30458, arst=\rst_i, srst={ }
  904 cells in clk=\clk_i, en=!$flatten\m2.$verific$n1723$30458, arst=\rst_i, srst={ }
  904 cells in clk=\clk_i, en=!$flatten\m1.$verific$n1723$30458, arst=\rst_i, srst={ }
  904 cells in clk=\clk_i, en=!$flatten\m0.$verific$n1723$30458, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$144060, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$142938, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$141816, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$140694, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$139572, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$138450, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$137328, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$136206, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$135084, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$133962, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$132840, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$131718, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$130596, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$129474, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$128352, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$127230, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$126108, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$124986, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$123864, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$122742, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$121620, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$120498, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$119376, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$118254, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$117132, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$116010, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$114888, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$113766, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$112644, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$111522, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$110400, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$109278, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$108156, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$107034, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$105912, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$104790, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$103668, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$102546, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$101424, arst=\rst_i, srst={ }
  171 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$100302, arst=\rst_i, srst={ }

4.31.2. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$99180, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.3. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$98058, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.4. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$96936, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.5. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$95814, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.6. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$94692, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.7. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$93570, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.8. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$92448, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.9. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$91326, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.10. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$90204, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.10.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.11. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$89082, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.11.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.12. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$87960, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.12.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.13. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$86838, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.13.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.14. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$85716, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.14.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.15. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$84594, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.15.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.16. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$83472, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.16.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.17. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$82350, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.17.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.17.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.18. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$81228, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.18.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.19. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$80106, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.19.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.20. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$78984, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.20.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.21. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$77862, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.21.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.21.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.22. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$76740, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.22.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.22.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.23. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$75618, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.23.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.23.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       10
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       39
ABC RESULTS:               AND cells:       25
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.24. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$74496, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.31.24.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.24.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOR cells:       18
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               AND cells:       23
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.25. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$73374, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.25.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.25.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.26. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n1103$30899, asynchronously reset by \rst_i
Extracted 184 gates and 332 wires to a netlist network with 148 inputs and 72 outputs.

4.31.26.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.26.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               MUX cells:      144
ABC RESULTS:        internal signals:      112
ABC RESULTS:           input signals:      148
ABC RESULTS:          output signals:       72
Removing temp directory.

4.31.27. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n109$30871, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.31.27.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.27.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.28. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n180$30873, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.31.28.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.28.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.29. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n251$30875, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.31.29.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.29.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.30. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n322$30877, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.31.30.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.30.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.31. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n393$30879, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.31.31.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.31.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.32. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n464$30881, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.31.32.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.32.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.33. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n535$30883, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.31.33.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.33.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.34. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n606$30885, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.31.34.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.34.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.35. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n38$30869, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.31.35.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.35.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.36. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n748$30889, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.31.36.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.36.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.37. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n819$30891, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.31.37.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.37.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.38. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n890$30893, asynchronously reset by \rst_i
Extracted 139 gates and 197 wires to a netlist network with 58 inputs and 117 outputs.

4.31.38.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.38.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               MUX cells:       83
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       58
ABC RESULTS:          output signals:      117
Removing temp directory.

4.31.39. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n961$30895, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.31.39.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.39.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.40. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n1032$30897, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.31.40.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.40.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.41. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n677$30887, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.31.41.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.41.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       56
Removing temp directory.

4.31.42. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s15.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.31.42.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.42.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.43. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s14.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.31.43.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.43.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.44. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s13.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.31.44.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.44.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.45. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s12.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.31.45.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.45.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.46. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s11.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.31.46.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.46.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.47. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s10.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.31.47.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.47.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.48. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s9.next, synchronously reset by \rst_i
Extracted 34 gates and 70 wires to a netlist network with 35 inputs and 4 outputs.

4.31.48.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.48.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       31
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.49. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s8.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.31.49.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.49.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:        3
Removing temp directory.

4.31.50. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s7.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.31.50.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.50.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:        3
Removing temp directory.

4.31.51. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s6.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.31.51.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.51.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:        3
Removing temp directory.

4.31.52. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s5.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.31.52.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.52.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:        3
Removing temp directory.

4.31.53. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s4.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.31.53.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.53.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:        3
Removing temp directory.

4.31.54. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s3.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.31.54.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.54.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:        3
Removing temp directory.

4.31.55. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s2.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.31.55.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.55.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:        3
Removing temp directory.

4.31.56. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s1.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.31.56.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.56.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:        3
Removing temp directory.

4.31.57. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 7740 gates and 8986 wires to a netlist network with 1245 inputs and 1261 outputs.

4.31.57.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 146 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.57.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      146
ABC RESULTS:               NOT cells:       16
ABC RESULTS:               NOR cells:      642
ABC RESULTS:               MUX cells:      345
ABC RESULTS:              NAND cells:     9004
ABC RESULTS:            ANDNOT cells:      459
ABC RESULTS:               AND cells:     6549
ABC RESULTS:               BUF cells:      145
ABC RESULTS:        internal signals:     6480
ABC RESULTS:           input signals:     1245
ABC RESULTS:          output signals:     1261
Removing temp directory.

4.31.58. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162103$lo008, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.31.58.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.58.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:        3
Removing temp directory.

4.31.59. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by !\rf.rf_sel
Extracted 1021 gates and 1729 wires to a netlist network with 707 inputs and 557 outputs.

4.31.59.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.59.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               NOR cells:       32
ABC RESULTS:            ANDNOT cells:      150
ABC RESULTS:               AND cells:      350
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              NAND cells:      495
ABC RESULTS:               MUX cells:      489
ABC RESULTS:        internal signals:      465
ABC RESULTS:           input signals:      707
ABC RESULTS:          output signals:      557
Removing temp directory.

4.31.60. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m7.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 920 gates and 1583 wires to a netlist network with 662 inputs and 181 outputs.

4.31.60.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.60.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               AND cells:      449
ABC RESULTS:              NAND cells:      891
ABC RESULTS:            ANDNOT cells:       84
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:      740
ABC RESULTS:           input signals:      662
ABC RESULTS:          output signals:      181
Removing temp directory.

4.31.61. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m6.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 919 gates and 1581 wires to a netlist network with 661 inputs and 180 outputs.

4.31.61.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.61.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               AND cells:      448
ABC RESULTS:              NAND cells:      891
ABC RESULTS:            ANDNOT cells:       84
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:      740
ABC RESULTS:           input signals:      661
ABC RESULTS:          output signals:      180
Removing temp directory.

4.31.62. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m5.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 919 gates and 1581 wires to a netlist network with 661 inputs and 180 outputs.

4.31.62.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.62.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               AND cells:      448
ABC RESULTS:              NAND cells:      891
ABC RESULTS:            ANDNOT cells:       84
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:      740
ABC RESULTS:           input signals:      661
ABC RESULTS:          output signals:      180
Removing temp directory.

4.31.63. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m4.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 919 gates and 1581 wires to a netlist network with 661 inputs and 180 outputs.

4.31.63.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.63.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               AND cells:      448
ABC RESULTS:              NAND cells:      891
ABC RESULTS:            ANDNOT cells:       84
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:      740
ABC RESULTS:           input signals:      661
ABC RESULTS:          output signals:      180
Removing temp directory.

4.31.64. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m3.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 904 gates and 1566 wires to a netlist network with 661 inputs and 180 outputs.

4.31.64.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.64.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               AND cells:      465
ABC RESULTS:              NAND cells:      891
ABC RESULTS:            ANDNOT cells:       69
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:      725
ABC RESULTS:           input signals:      661
ABC RESULTS:          output signals:      180
Removing temp directory.

4.31.65. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m2.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 904 gates and 1566 wires to a netlist network with 661 inputs and 180 outputs.

4.31.65.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.65.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               AND cells:      465
ABC RESULTS:              NAND cells:      891
ABC RESULTS:            ANDNOT cells:       69
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:      725
ABC RESULTS:           input signals:      661
ABC RESULTS:          output signals:      180
Removing temp directory.

4.31.66. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m1.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 904 gates and 1566 wires to a netlist network with 661 inputs and 180 outputs.

4.31.66.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.66.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               AND cells:      465
ABC RESULTS:              NAND cells:      891
ABC RESULTS:            ANDNOT cells:       69
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:      725
ABC RESULTS:           input signals:      661
ABC RESULTS:          output signals:      180
Removing temp directory.

4.31.67. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m0.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 904 gates and 1566 wires to a netlist network with 661 inputs and 180 outputs.

4.31.67.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.67.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               AND cells:      465
ABC RESULTS:              NAND cells:      891
ABC RESULTS:            ANDNOT cells:       69
ABC RESULTS:               BUF cells:       16
ABC RESULTS:        internal signals:      725
ABC RESULTS:           input signals:      661
ABC RESULTS:          output signals:      180
Removing temp directory.

4.31.68. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$144060, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.68.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.68.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.69. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$142938, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.69.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.69.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.70. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$141816, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.70.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.70.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.71. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$140694, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.71.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.71.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.72. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$139572, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.72.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.72.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.73. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$138450, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.73.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.73.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.74. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$137328, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.74.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.74.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.75. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$136206, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.75.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.75.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.76. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$135084, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.76.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.76.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.77. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$133962, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.77.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.77.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.78. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$132840, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.78.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.78.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.79. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$131718, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.79.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.79.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.80. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$130596, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.80.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.80.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.81. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$129474, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.81.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.81.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.82. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$128352, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.82.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.82.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.83. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$127230, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.83.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.83.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.84. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$126108, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.84.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.84.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.85. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$124986, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.85.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.85.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.86. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$123864, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.86.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.86.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.87. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$122742, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.87.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.87.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.88. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$121620, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.88.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.88.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.89. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$120498, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.89.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.89.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.90. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$119376, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.90.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.90.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.91. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$118254, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.91.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.91.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.92. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$117132, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.92.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.92.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.93. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$116010, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.93.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.93.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.94. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$114888, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.94.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.94.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.95. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$113766, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.95.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.95.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.96. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$112644, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.96.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.96.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       12
ABC RESULTS:               NOR cells:       20
ABC RESULTS:              NAND cells:       33
ABC RESULTS:               AND cells:       25
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.97. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$111522, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.97.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.97.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       10
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       39
ABC RESULTS:               AND cells:       25
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.98. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$110400, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.98.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.98.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.99. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$109278, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.99.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.99.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       12
ABC RESULTS:               NOR cells:       20
ABC RESULTS:              NAND cells:       33
ABC RESULTS:               AND cells:       25
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.100. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$108156, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.100.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.100.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.101. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$107034, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.101.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.101.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       12
ABC RESULTS:               NOR cells:       20
ABC RESULTS:              NAND cells:       33
ABC RESULTS:               AND cells:       25
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.102. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$105912, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.102.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.102.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       12
ABC RESULTS:               NOR cells:       20
ABC RESULTS:              NAND cells:       33
ABC RESULTS:               AND cells:       25
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.103. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$104790, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.103.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.103.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.104. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$103668, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.104.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.104.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.105. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$102546, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.105.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.105.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.106. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$101424, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.31.106.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.106.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:       14
ABC RESULTS:               NOR cells:       17
ABC RESULTS:              NAND cells:       34
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:      167
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

4.31.107. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$100302, asynchronously reset by \rst_i
Extracted 171 gates and 182 wires to a netlist network with 10 inputs and 4 outputs.

4.31.107.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.31.107.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        6
ABC RESULTS:               NOR cells:       15
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:                OR cells:       14
ABC RESULTS:               AND cells:       22
ABC RESULTS:              NAND cells:       40
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:      168
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        4
Removing temp directory.

yosys> abc -script /tmp/yosys_x3LNj1/abc_tmp_1.scr

4.32. Executing ABC pass (technology mapping using ABC).

4.32.1. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Extracted 38684 gates and 40566 wires to a netlist network with 1882 inputs and 1907 outputs.

4.32.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_x3LNj1/abc_tmp_1.scr 
ABC:   #Luts =  8905  Max Lvl =  10  Avg Lvl =   4.19  [   1.36 sec. at Pass 0]
ABC:   #Luts =  7844  Max Lvl =  10  Avg Lvl =   4.15  [  55.05 sec. at Pass 1]
ABC:   #Luts =  7766  Max Lvl =  11  Avg Lvl =   4.13  [  14.10 sec. at Pass 2]
ABC:   #Luts =  7729  Max Lvl =  10  Avg Lvl =   3.96  [  25.94 sec. at Pass 3]
ABC:   #Luts =  7679  Max Lvl =  10  Avg Lvl =   4.11  [  15.38 sec. at Pass 4]
ABC:   #Luts =  7670  Max Lvl =  11  Avg Lvl =   4.13  [  34.14 sec. at Pass 5]
ABC:   #Luts =  7634  Max Lvl =  10  Avg Lvl =   4.11  [  21.72 sec. at Pass 6]
ABC:   #Luts =  7630  Max Lvl =  11  Avg Lvl =   4.12  [  37.87 sec. at Pass 7]
ABC:   #Luts =  7608  Max Lvl =   9  Avg Lvl =   3.97  [  23.64 sec. at Pass 8]
ABC:   #Luts =  7608  Max Lvl =   9  Avg Lvl =   3.97  [  33.43 sec. at Pass 9]
ABC: + write_blif <abc-temp-dir>/output.blif 

4.32.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     7608
ABC RESULTS:        internal signals:    36777
ABC RESULTS:           input signals:     1882
ABC RESULTS:          output signals:     1907
Removing temp directory.

yosys> opt

4.33. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.33.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 63553 unused wires.
<suppressed ~2016 debug messages>

yosys> opt_expr

4.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.33.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.33.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.33.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

4.34. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              11021
   Number of wire bits:          56404
   Number of public wires:        4511
   Number of public wire bits:   49894
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8362
     $_DFFE_PP0N_                  128
     $_DFFE_PP0P_                  448
     $_DFF_P_                      146
     $_SDFFE_PP0P_                  32
     $_SDFF_PN0_                    16
     $lut                         7592


yosys> shregmap -minlen 8 -maxlen 20

4.35. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

4.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

4.37. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              11101
   Number of wire bits:          56484
   Number of public wires:        4511
   Number of public wire bits:   49894
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8442
     $_DFFE_PP0N_                  128
     $_DFFE_PP0P_                  448
     $_DFF_P_                      194
     $_MUX_                         80
     $lut                         7592


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

4.38. Executing TECHMAP pass (map to technology primitives).

4.38.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.38.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

4.38.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~9202 debug messages>

yosys> opt_expr -mux_undef

4.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~221582 debug messages>

yosys> simplemap

4.40. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

4.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge

4.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~213333 debug messages>
Removed a total of 71111 cells.

yosys> opt_dff -nodffe -nosdff

4.43. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 27113 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

4.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~5421 debug messages>

yosys> opt_merge -nomux

4.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_muxtree

4.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 892 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_x3LNj1/abc_tmp_2.scr

4.46. Executing ABC pass (technology mapping using ABC).

4.46.1. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Extracted 27514 gates and 29415 wires to a netlist network with 1899 inputs and 1891 outputs.

4.46.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_x3LNj1/abc_tmp_2.scr 
ABC:   #Luts =  7691  Max Lvl =   9  Avg Lvl =   3.99  [   1.53 sec. at Pass 0]
ABC:   #Luts =  7691  Max Lvl =   9  Avg Lvl =   3.99  [  70.20 sec. at Pass 1]
ABC:   #Luts =  7654  Max Lvl =  10  Avg Lvl =   4.15  [  19.34 sec. at Pass 2]
ABC:   #Luts =  7651  Max Lvl =  10  Avg Lvl =   4.16  [  40.70 sec. at Pass 3]
ABC:   #Luts =  7626  Max Lvl =   9  Avg Lvl =   4.00  [  27.30 sec. at Pass 4]
ABC:   #Luts =  7622  Max Lvl =   9  Avg Lvl =   3.99  [  61.26 sec. at Pass 5]
ABC:   #Luts =  7608  Max Lvl =   9  Avg Lvl =   4.00  [  23.98 sec. at Pass 6]
ABC:   #Luts =  7594  Max Lvl =   8  Avg Lvl =   3.99  [  38.01 sec. at Pass 7]
ABC:   #Luts =  7590  Max Lvl =   9  Avg Lvl =   3.99  [  20.91 sec. at Pass 8]
ABC:   #Luts =  7590  Max Lvl =   9  Avg Lvl =   3.99  [  36.27 sec. at Pass 9]
ABC: + write_blif <abc-temp-dir>/output.blif 

4.46.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     7590
ABC RESULTS:        internal signals:    25625
ABC RESULTS:           input signals:     1899
ABC RESULTS:          output signals:     1891
Removing temp directory.

yosys> opt

4.47. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.47.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.47.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.47.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.47.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.47.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 23319 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

4.47.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.47.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.47.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.47.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.47.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.47.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.47.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.47.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.47.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

4.48. Executing HIERARCHY pass (managing design hierarchy).

4.48.1. Analyzing design hierarchy..
Top module:  \wb_conmax_top

4.48.2. Analyzing design hierarchy..
Top module:  \wb_conmax_top
Removed 0 unused modules.

yosys> stat

4.49. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              11019
   Number of wire bits:          56402
   Number of public wires:        4510
   Number of public wire bits:   49893
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8360
     $lut                         7590
     dffsre                        770


yosys> opt_clean -purge

4.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 4056 unused wires.
<suppressed ~4056 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

4.51. Executing Verilog backend.

yosys> bmuxmap

4.51.1. Executing BMUXMAP pass.

yosys> demuxmap

4.51.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\wb_conmax_top'.

Warnings: 99 unique messages, 99 total
End of script. Logfile hash: 2813fb2f17, CPU: user 174.95s system 2.91s, MEM: 629.42 MB peak
Yosys 0.16+65 (git sha1 91803ad5c, gcc 9.1.0 -fPIC -Os)
Time spent: 97% 3x abc (5483 sec), 1% 29x opt_expr (63 sec), ...
real 853.91
user 5239.52
sys 402.54
