
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b15.vhd

yosys> verific -vhdl b15.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b15.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b15.vhd:1: analyzing entity 'b15'
VERIFIC-INFO [VHDL-1010] b15.vhd:17: analyzing architecture 'behav'

yosys> synth_rs -top b15 -tech generic -goal area -no_dsp -no_bram -verilog b15.verilog

3. Executing synth_rs pass.

yosys> hierarchy -check -top b15

3.1. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b15.vhd:1: processing 'b15(BEHAV)'
Importing module standard.
Importing module b15.

3.1.1. Analyzing design hierarchy..
Top module:  \b15

3.1.2. Analyzing design hierarchy..
Top module:  \b15
Removing unused module `\standard'.
Removed 1 unused modules.

yosys> proc

3.2. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.2.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.2.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.2.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~17 debug messages>

yosys> flatten

3.3. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.4. Executing TRIBUF pass.

yosys> opt_expr

3.5. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~5 debug messages>

yosys> opt_clean

3.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 7 unused cells and 141 unused wires.
<suppressed ~65 debug messages>

yosys> check

3.7. Executing CHECK pass (checking for obvious problems).
Checking module b15...
Found and reported 0 problems.

yosys> deminout

3.8. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt -nodffe -nosdff

3.9. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

yosys> opt_reduce

3.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
    New ctrl vector for $pmux cell $verific$Select_723$b15.vhd:562$914: { $verific$n7981$95 $verific$n7982$96 $auto$opt_reduce.cc:134:opt_pmux$1085 $auto$opt_reduce.cc:134:opt_pmux$1083 }
    New ctrl vector for $pmux cell $verific$Select_725$b15.vhd:562$916: { $verific$n7981$95 $auto$opt_reduce.cc:134:opt_pmux$1091 $auto$opt_reduce.cc:134:opt_pmux$1089 $auto$opt_reduce.cc:134:opt_pmux$1087 }
    New ctrl vector for $pmux cell $verific$Select_731$b15.vhd:562$922: { $verific$n8173$116 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1093 $verific$n7990$104 }
    New ctrl vector for $pmux cell $verific$Select_733$b15.vhd:562$923: { $verific$n8173$116 $auto$opt_reduce.cc:134:opt_pmux$1097 $auto$opt_reduce.cc:134:opt_pmux$1095 }
    New ctrl vector for $pmux cell $verific$Select_735$b15.vhd:562$924: { $verific$n8173$116 $auto$opt_reduce.cc:134:opt_pmux$1101 $auto$opt_reduce.cc:134:opt_pmux$1099 }
    New ctrl vector for $pmux cell $verific$Select_737$b15.vhd:562$925: { $verific$n8173$116 $auto$opt_reduce.cc:134:opt_pmux$1103 }
    New ctrl vector for $pmux cell $verific$select_720$b15.vhd:562$911: { $verific$n7981$95 $verific$n7982$96 $auto$opt_reduce.cc:134:opt_pmux$1113 $auto$opt_reduce.cc:134:opt_pmux$1111 $auto$opt_reduce.cc:134:opt_pmux$1109 $auto$opt_reduce.cc:134:opt_pmux$1107 $auto$opt_reduce.cc:134:opt_pmux$1105 }
    New ctrl vector for $pmux cell $verific$select_721$b15.vhd:562$912: { $auto$opt_reduce.cc:134:opt_pmux$1123 $auto$opt_reduce.cc:134:opt_pmux$1121 $verific$n7987$101 $verific$n7989$103 $auto$opt_reduce.cc:134:opt_pmux$1119 $auto$opt_reduce.cc:134:opt_pmux$1117 $auto$opt_reduce.cc:134:opt_pmux$1115 }
    New ctrl vector for $pmux cell $verific$select_726$b15.vhd:562$917: { $verific$n7981$95 $verific$n7982$96 $auto$opt_reduce.cc:134:opt_pmux$1125 }
    New ctrl vector for $pmux cell $verific$select_727$b15.vhd:562$918: { $verific$n7985$99 $verific$n7987$101 $verific$n7989$103 $verific$n7995$109 $auto$opt_reduce.cc:134:opt_pmux$1127 }
    New ctrl vector for $pmux cell $verific$select_728$b15.vhd:562$919: { $verific$n7986$100 $verific$n7996$110 $auto$opt_reduce.cc:134:opt_pmux$1129 }
    New ctrl vector for $pmux cell $verific$select_729$b15.vhd:562$920: { $verific$n7987$101 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1133 $auto$opt_reduce.cc:134:opt_pmux$1131 }
    New ctrl vector for $pmux cell $verific$select_738$b15.vhd:562$926: { $verific$n7987$101 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1135 }
    New ctrl vector for $pmux cell $verific$select_739$b15.vhd:562$927: { $verific$n7987$101 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1137 }
    New ctrl vector for $pmux cell $verific$select_740$b15.vhd:562$928: { $verific$n7988$102 $verific$n7990$104 $auto$opt_reduce.cc:134:opt_pmux$1139 }
    New ctrl vector for $pmux cell $verific$select_741$b15.vhd:562$929: { $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1141 }
  Optimizing cells in module \b15.
Performed a total of 16 changes.

yosys> opt_merge

3.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_dff -nodffe -nosdff

3.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$rEIP_reg$b15.vhd:612$1057 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Address_reg$b15.vhd:231$636 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ADS_n_reg$b15.vhd:231$640 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$W_R_n_reg$b15.vhd:231$637 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$State_reg$b15.vhd:231$641 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$StateBS16_reg$b15.vhd:231$643 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$RequestPending_reg$b15.vhd:612$1061 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ReadRequest_reg$b15.vhd:612$1059 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.uWord_reg$b15.vhd:612$1051 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.lWord_reg$b15.vhd:612$1050 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.State2_reg$b15.vhd:612$1027 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.PhyAddrPointer_reg$b15.vhd:612$1047 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.More_reg$b15.vhd:612$1048 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_9$b15.vhd:612$1035 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_8$b15.vhd:612$1034 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_7$b15.vhd:612$1033 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_6$b15.vhd:612$1032 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_5$b15.vhd:612$1031 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_4$b15.vhd:612$1030 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_3$b15.vhd:612$1029 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_2$b15.vhd:612$1028 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_16$b15.vhd:612$1042 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_15$b15.vhd:612$1041 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_14$b15.vhd:612$1040 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_13$b15.vhd:612$1039 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_12$b15.vhd:612$1038 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_11$b15.vhd:612$1037 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_10$b15.vhd:612$1036 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg$b15.vhd:612$1043 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:612$1045 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:612$1044 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstAddrPointer_reg$b15.vhd:612$1046 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.Flush_reg$b15.vhd:612$1049 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$MemoryFetch_reg$b15.vhd:612$1060 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$M_IO_n_reg$b15.vhd:231$639 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EBX_reg$b15.vhd:612$1056 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EAX_reg$b15.vhd:612$1055 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Datao_reg$b15.vhd:612$1053 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$DataWidth_reg$b15.vhd:231$644 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$D_C_n_reg$b15.vhd:231$638 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$CodeFetch_reg$b15.vhd:612$1052 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ByteEnable_reg$b15.vhd:668$1079 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$BE_n_reg$b15.vhd:231$635 ($aldff) from module b15.

yosys> opt_clean

3.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 2 unused cells and 19 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.9.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.9.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.9.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.10. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.10.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.10.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.10.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> fsm_opt

3.10.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$ByteEnable_reg$b15.vhd:668$1079 ($adff) from module b15 (D = $verific$n9780$544, Q = \ByteEnable).
Setting constant 0-bit at position 2 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 3 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 5 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 6 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 7 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 8 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 9 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 10 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 11 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 12 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 13 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 14 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 15 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 16 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 17 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 18 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 19 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 20 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 21 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 22 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 23 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 24 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 25 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 26 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 27 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 28 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 29 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 30 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 31 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 31 on $verific$Datao_reg$b15.vhd:612$1053 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:612$1045 ($adff) from module b15.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~4 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1145 ($adff) from module b15.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$1146 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:612$1044 ($adff) from module b15.

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.11.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.12. Executing WREDUCE pass (reducing word size of cells).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_98$b15.vhd:181$604 ($mux).
Removed top 1 bits (of 31) from port Y of cell b15.$verific$add_113$b15.vhd:197$608 ($add).
Removed top 1 bits (of 31) from port A of cell b15.$verific$add_113$b15.vhd:197$608 ($add).
Removed top 1 bits (of 3) from mux cell b15.$verific$mux_127$b15.vhd:215$614 ($mux).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_193$b15.vhd:305$649 ($shl).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_210$b15.vhd:306$666 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_210$b15.vhd:306$666 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_210$b15.vhd:306$666 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_213$b15.vhd:308$669 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_230$b15.vhd:309$686 ($add).
Removed top 8 bits (of 16) from port Y of cell b15.$verific$add_235$b15.vhd:311$690 ($add).
Removed top 8 bits (of 16) from port A of cell b15.$verific$add_235$b15.vhd:311$690 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_237$b15.vhd:311$695 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_254$b15.vhd:312$712 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_261$b15.vhd:313$720 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_278$b15.vhd:314$737 ($add).
Removed top 29 bits (of 30) from port B of cell b15.$verific$add_281$b15.vhd:315$738 ($add).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_284$b15.vhd:318$740 ($add).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_286$b15.vhd:319$742 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_287$b15.vhd:320$743 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_287$b15.vhd:320$743 ($neg).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_360$b15.vhd:344$768 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_362$b15.vhd:345$770 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_362$b15.vhd:345$770 ($add).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$add_362$b15.vhd:345$770 ($add).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_369$b15.vhd:355$772 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_369$b15.vhd:355$772 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_369$b15.vhd:355$772 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_370$b15.vhd:355$773 ($le).
Removed top 1 bits (of 8) from port A of cell b15.$verific$LessThan_373$b15.vhd:356$775 ($lt).
Removed top 1 bits (of 9) from port A of cell b15.$verific$sub_378$b15.vhd:357$776 ($sub).
Removed top 1 bits (of 9) from port B of cell b15.$verific$sub_378$b15.vhd:357$776 ($sub).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$sub_379$b15.vhd:357$777 ($sub).
Removed top 1 bits (of 33) from port A of cell b15.$verific$sub_379$b15.vhd:357$777 ($sub).
Removed top 1 bits (of 33) from port B of cell b15.$verific$sub_379$b15.vhd:357$777 ($sub).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_383$b15.vhd:360$779 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_387$b15.vhd:360$780 ($add).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_397$b15.vhd:370$787 ($le).
Removed top 29 bits (of 32) from port B of cell b15.$verific$add_399$b15.vhd:371$788 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_403$b15.vhd:371$789 ($add).
Removed top 1 bits (of 3) from port A of cell b15.$verific$add_422$b15.vhd:391$794 ($add).
Removed top 2 bits (of 3) from port B of cell b15.$verific$add_422$b15.vhd:391$794 ($add).
Removed top 1 bits (of 3) from port Y of cell b15.$verific$add_422$b15.vhd:391$794 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_424$b15.vhd:391$797 ($add).
Removed top 3 bits (of 5) from port B of cell b15.$verific$add_424$b15.vhd:391$797 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_424$b15.vhd:391$797 ($add).
Removed top 7 bits (of 8) from port B of cell b15.$verific$add_426$b15.vhd:391$800 ($add).
Removed top 1 bits (of 4) from port A of cell b15.$verific$add_427$b15.vhd:391$801 ($add).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_427$b15.vhd:391$801 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_435$b15.vhd:395$804 ($add).
Removed top 2 bits (of 5) from port B of cell b15.$verific$add_435$b15.vhd:395$804 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_435$b15.vhd:395$804 ($add).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_440$b15.vhd:399$809 ($mux).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_462$b15.vhd:412$812 ($le).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_463$b15.vhd:413$813 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_464$b15.vhd:414$814 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_464$b15.vhd:414$814 ($neg).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_477$b15.vhd:430$819 ($add).
Removed top 1 bits (of 10) from mux cell b15.$verific$mux_958$b15.vhd:444$847 ($mux).
Removed top 1 bits (of 16) from port Y of cell b15.$verific$add_522$b15.vhd:457$852 ($add).
Removed top 1 bits (of 16) from port A of cell b15.$verific$add_522$b15.vhd:457$852 ($add).
Removed top 1 bits (of 3) from port A of cell b15.$verific$equal_528$b15.vhd:462$857 ($eq).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_573$b15.vhd:479$874 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_950$b15.vhd:479$877 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_949$b15.vhd:483$885 ($mux).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_681$b15.vhd:546$886 ($add).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_689$b15.vhd:552$888 ($add).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_702$b15.vhd:348$891 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_713$b15.vhd:525$902 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_714$b15.vhd:530$903 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_717$b15.vhd:545$906 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_718$b15.vhd:551$907 ($eq).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_742$b15.vhd:563$930 ($lt).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_744$b15.vhd:563$932 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$sub_744$b15.vhd:563$932 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_745$b15.vhd:563$933 ($lt).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_755$b15.vhd:579$941 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_759$b15.vhd:585$946 ($mux).
Removed top 1 bits (of 2) from port A of cell b15.$verific$add_760$b15.vhd:586$948 ($add).
Removed top 1 bits (of 4) from mux cell b15.$verific$mux_764$b15.vhd:587$950 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_765$b15.vhd:588$951 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_766$b15.vhd:588$952 ($mux).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_767$b15.vhd:589$953 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_767$b15.vhd:589$953 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_767$b15.vhd:589$953 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_768$b15.vhd:589$954 ($lt).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_770$b15.vhd:594$955 ($mux).
Removed top 1 bits (of 5) from port A of cell b15.$verific$LessThan_771$b15.vhd:597$956 ($le).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_771$b15.vhd:597$956 ($le).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_812$b15.vhd:605$992 ($mux).
Removed top 1 bits (of 33) from FF cell b15.$verific$rEIP_reg$b15.vhd:612$1057 ($adff).
Removed top 1 bits (of 2) from port A of cell b15.$verific$equal_909$b15.vhd:634$1071 ($eq).
Removed top 30 bits (of 32) from port Y of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 30 bits (of 32) from port A of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 30 bits (of 32) from wire b15.$verific$n1001$177.
Removed top 1 bits (of 31) from wire b15.$verific$n1151$182.
Removed top 1 bits (of 3) from wire b15.$verific$n1294$187.
Removed top 1 bits (of 5) from wire b15.$verific$n2071$220.
Removed top 8 bits (of 16) from wire b15.$verific$n2267$241.
Removed top 1 bits (of 33) from wire b15.$verific$n2793$287.
Removed top 1 bits (of 5) from wire b15.$verific$n3660$314.
Removed top 1 bits (of 33) from wire b15.$verific$n3837$321.
Removed top 1 bits (of 3) from wire b15.$verific$n4619$342.
Removed top 1 bits (of 5) from wire b15.$verific$n4633$344.
Removed top 1 bits (of 4) from wire b15.$verific$n4659$347.
Removed top 1 bits (of 5) from wire b15.$verific$n4791$351.
Removed top 1 bits (of 5) from wire b15.$verific$n4869$355.
Removed top 1 bits (of 33) from wire b15.$verific$n5140$358.
Removed top 1 bits (of 5) from wire b15.$verific$n5695$377.
Removed top 1 bits (of 16) from wire b15.$verific$n5974$388.
Removed top 1 bits (of 32) from wire b15.$verific$n6324$395.
Removed top 1 bits (of 5) from wire b15.$verific$n6434$399.
Removed top 1 bits (of 32) from wire b15.$verific$n6510$403.
Removed top 31 bits (of 33) from wire b15.$verific$n8312$453.
Removed top 30 bits (of 32) from wire b15.$verific$n8412$456.
Removed top 1 bits (of 4) from wire b15.$verific$n8452$458.
Removed top 1 bits (of 5) from wire b15.$verific$n8457$459.
Removed top 1 bits (of 5) from wire b15.$verific$n8463$460.
Removed top 3 bits (of 4) from wire b15.$verific$n8477$462.
Removed top 1 bits (of 5) from wire b15.$verific$n8482$463.
Removed top 1 bits (of 5) from wire b15.$verific$n8841$499.
Removed top 30 bits (of 32) from wire b15.DataWidth.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueRd_Addr.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueWr_Addr.

yosys> peepopt

3.13. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.14. Executing PMUXTREE pass.

yosys> opt_clean

3.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 34 unused cells and 95 unused wires.
<suppressed ~35 debug messages>

yosys> techmap

3.16. Executing TECHMAP pass (map to technology primitives).

3.16.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.16.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $and.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=31:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=31:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=31:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=6:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=6:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=6:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=15:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=15:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=15:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=15:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=15:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=15:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $eq.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=6:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=6:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=6:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=2:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=2:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=2:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$91f82ead1edc61e0a1452110f15ef747116b421b\_90_alu for cells of type $alu.
Using template $paramod$076c9a7a3f037230073fe14dd4865d470cb48917\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$a2af9b43308e3114c3b5dd3f4dc3329b2387395d\_90_alu for cells of type $alu.
Using template $paramod$bfceb922395790c0ce92e9f9b5b428d4fc72cc30\_90_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using template $paramod$3b7577489eb4433b1d5620cab7f3794743dee5ea\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using template $paramod$653d0dc5a667330298513325d0bd1def0e6c1128\_90_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$b3c20b05d9b1fc2c940ef2f6c917486aead042e8\_90_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~7015 debug messages>

yosys> alumacc

3.17. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b15:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.18. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~7781 debug messages>

yosys> opt_merge -nomux

3.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~3444 debug messages>
Removed a total of 1148 cells.

yosys> opt_muxtree

3.18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 553 unused cells and 3314 unused wires.
<suppressed ~554 debug messages>

yosys> opt_expr

3.18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~146 debug messages>

3.18.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.18.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$12443 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8679 [5], Q = \P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12563 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [13], Q = \P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$12562 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [12], Q = \P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$12442 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8679 [4], Q = \P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12441 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8679 [3], Q = \P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12440 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8679 [2], Q = \P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12439 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8679 [1], Q = \P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12438 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8679 [0], Q = \P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12437 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8555 [7], Q = \P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12561 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [11], Q = \P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$12560 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [10], Q = \P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$12559 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [9], Q = \P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$12436 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8555 [6], Q = \P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12558 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [8], Q = \P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$12557 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [7], Q = \P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$12556 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [6], Q = \P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$12435 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8555 [5], Q = \P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12555 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [5], Q = \P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$12554 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [4], Q = \P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$12553 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [3], Q = \P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$12552 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [2], Q = \P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$12551 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [1], Q = \P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$12550 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [0], Q = \P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$12549 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10291 [7], Q = \P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12434 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8555 [4], Q = \P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12548 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10291 [6], Q = \P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12547 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10291 [5], Q = \P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12546 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10291 [4], Q = \P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12545 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10291 [3], Q = \P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12544 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10291 [2], Q = \P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12543 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10291 [1], Q = \P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12542 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10291 [0], Q = \P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12433 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8555 [3], Q = \P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12541 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10167 [7], Q = \P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12540 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10167 [6], Q = \P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12539 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10167 [5], Q = \P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12538 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10167 [4], Q = \P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12537 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10167 [3], Q = \P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12536 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10167 [2], Q = \P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12535 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10167 [1], Q = \P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12432 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8555 [2], Q = \P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12534 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10167 [0], Q = \P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12533 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10043 [7], Q = \P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12532 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10043 [6], Q = \P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12531 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10043 [5], Q = \P1.InstQueue[2] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12530 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10043 [4], Q = \P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12529 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10043 [3], Q = \P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12528 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10043 [2], Q = \P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12431 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8555 [1], Q = \P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12527 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10043 [1], Q = \P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12526 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10043 [0], Q = \P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12525 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9919 [7], Q = \P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12524 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9919 [6], Q = \P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12523 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9919 [5], Q = \P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12522 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9919 [4], Q = \P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12521 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9919 [3], Q = \P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12430 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8555 [0], Q = \P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12520 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9919 [2], Q = \P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12519 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9919 [1], Q = \P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12518 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9919 [0], Q = \P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12517 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9795 [7], Q = \P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12516 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9795 [6], Q = \P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12515 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9795 [5], Q = \P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12514 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9795 [4], Q = \P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12429 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8431 [7], Q = \P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12513 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9795 [3], Q = \P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12512 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9795 [2], Q = \P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12511 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9795 [1], Q = \P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12510 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9795 [0], Q = \P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12509 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9671 [7], Q = \P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12508 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9671 [6], Q = \P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12507 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9671 [5], Q = \P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12428 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8431 [6], Q = \P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12506 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9671 [4], Q = \P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12505 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9671 [3], Q = \P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12504 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9671 [2], Q = \P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12503 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9671 [1], Q = \P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12502 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9671 [0], Q = \P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12501 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9547 [7], Q = \P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12500 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9547 [6], Q = \P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12427 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8431 [5], Q = \P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12499 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9547 [5], Q = \P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12498 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9547 [4], Q = \P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12497 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9547 [3], Q = \P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12496 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9547 [2], Q = \P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12495 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9547 [1], Q = \P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12494 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9547 [0], Q = \P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12493 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9423 [7], Q = \P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12426 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8431 [4], Q = \P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12492 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9423 [6], Q = \P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12491 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9423 [5], Q = \P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12490 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9423 [4], Q = \P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12489 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9423 [3], Q = \P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12488 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9423 [2], Q = \P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12487 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9423 [1], Q = \P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12486 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9423 [0], Q = \P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12425 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8431 [3], Q = \P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12485 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9299 [7], Q = \P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12484 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9299 [6], Q = \P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12483 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9299 [5], Q = \P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12482 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9299 [4], Q = \P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12481 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9299 [3], Q = \P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12480 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9299 [2], Q = \P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12479 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9299 [1], Q = \P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12424 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8431 [2], Q = \P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12478 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9299 [0], Q = \P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12477 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9175 [7], Q = \P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12476 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9175 [6], Q = \P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12475 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9175 [5], Q = \P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12474 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9175 [4], Q = \P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12473 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9175 [3], Q = \P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12472 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9175 [2], Q = \P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12423 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8431 [1], Q = \P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12471 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9175 [1], Q = \P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12470 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9175 [0], Q = \P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12469 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9051 [7], Q = \P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12468 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9051 [6], Q = \P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12467 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9051 [5], Q = \P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12466 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9051 [4], Q = \P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12465 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9051 [3], Q = \P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12422 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8431 [0], Q = \P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12464 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9051 [2], Q = \P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12463 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9051 [1], Q = \P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12462 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9051 [0], Q = \P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12461 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8927 [7], Q = \P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12460 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8927 [6], Q = \P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12459 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8927 [5], Q = \P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12458 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8927 [4], Q = \P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12421 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7736 [3], Q = \P1.State2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12457 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8927 [3], Q = \P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12456 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8927 [2], Q = \P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12455 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8927 [1], Q = \P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12454 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8927 [0], Q = \P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12453 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8803 [7], Q = \P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12452 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8803 [6], Q = \P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12451 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8803 [5], Q = \P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12420 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7736 [2], Q = \P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12450 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8803 [4], Q = \P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12449 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8803 [3], Q = \P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12448 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8803 [2], Q = \P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12447 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8803 [1], Q = \P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12446 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8803 [0], Q = \P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12445 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8679 [7], Q = \P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12444 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8679 [6], Q = \P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12419 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7736 [1], Q = \P1.State2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12418 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7736 [0], Q = \P1.State2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$2794 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10452 [3], Q = \P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$2793 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10452 [2], Q = \P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$2792 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10452 [1], Q = \P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$2791 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10452 [0], Q = \P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$2790 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2249, Q = \StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$2789 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2232 [2], Q = \State [2]).
Adding EN signal on $auto$ff.cc:262:slice$2788 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2232 [1], Q = \State [1]).
Adding EN signal on $auto$ff.cc:262:slice$2787 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2232 [0], Q = \State [0]).
Adding EN signal on $auto$ff.cc:262:slice$2786 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2210, Q = \ADS_n).
Adding EN signal on $auto$ff.cc:262:slice$2784 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2200, Q = \D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$2782 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [29], Q = \Address [29]).
Adding EN signal on $auto$ff.cc:262:slice$2781 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [28], Q = \Address [28]).
Adding EN signal on $auto$ff.cc:262:slice$2780 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [27], Q = \Address [27]).
Adding EN signal on $auto$ff.cc:262:slice$2779 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [26], Q = \Address [26]).
Adding EN signal on $auto$ff.cc:262:slice$2778 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [25], Q = \Address [25]).
Adding EN signal on $auto$ff.cc:262:slice$2777 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [24], Q = \Address [24]).
Adding EN signal on $auto$ff.cc:262:slice$2776 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [23], Q = \Address [23]).
Adding EN signal on $auto$ff.cc:262:slice$2775 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [22], Q = \Address [22]).
Adding EN signal on $auto$ff.cc:262:slice$2774 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [21], Q = \Address [21]).
Adding EN signal on $auto$ff.cc:262:slice$2773 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [20], Q = \Address [20]).
Adding EN signal on $auto$ff.cc:262:slice$2772 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [19], Q = \Address [19]).
Adding EN signal on $auto$ff.cc:262:slice$2771 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [18], Q = \Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$2770 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [17], Q = \Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$2769 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [16], Q = \Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$2768 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [15], Q = \Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$2767 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [14], Q = \Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$2766 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [13], Q = \Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$2765 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [12], Q = \Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$2764 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [11], Q = \Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$2763 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [10], Q = \Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$2762 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [9], Q = \Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$2761 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [8], Q = \Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$2760 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [7], Q = \Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$2759 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [6], Q = \Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$2758 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [5], Q = \Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$2757 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [4], Q = \Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$2756 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [3], Q = \Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$2755 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [2], Q = \Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$2754 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [1], Q = \Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$2753 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2667 [0], Q = \Address [0]).
Adding EN signal on $auto$ff.cc:262:slice$1926 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2451 [1], Q = \DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$1925 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2451 [0], Q = \DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$12913 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [30], Q = \Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$12912 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [29], Q = \Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$12911 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [28], Q = \Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$12910 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [27], Q = \Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$12909 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [26], Q = \Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$12908 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [25], Q = \Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$12907 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [24], Q = \Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$12906 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [23], Q = \Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$12905 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [22], Q = \Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$12904 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [21], Q = \Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$12903 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [20], Q = \Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$12902 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [19], Q = \Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$12901 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [18], Q = \Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$12900 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [17], Q = \Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$12899 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [16], Q = \Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$12898 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [15], Q = \Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$12897 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [14], Q = \Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$12896 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [13], Q = \Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$12895 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [12], Q = \Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$12894 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [11], Q = \Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$12893 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [10], Q = \Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$12892 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [9], Q = \Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$12891 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [8], Q = \Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$12890 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [7], Q = \Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$12889 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [6], Q = \Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$12888 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [5], Q = \Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$12887 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [4], Q = \Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$12886 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [3], Q = \Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$12885 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [2], Q = \Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$12884 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [1], Q = \Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$12883 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12384 [0], Q = \Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$12750 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8295, Q = \RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$12749 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8276, Q = \MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$12748 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8257, Q = \ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$12747 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [32], Q = \rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$12746 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [30], Q = \rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$12745 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [29], Q = \rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$12744 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [28], Q = \rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$12743 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [27], Q = \rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$12742 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [26], Q = \rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$12741 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [25], Q = \rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$12740 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [24], Q = \rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$12739 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [23], Q = \rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$12738 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [22], Q = \rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$12737 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [21], Q = \rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$12736 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [20], Q = \rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$12735 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [19], Q = \rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$12734 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [18], Q = \rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$12733 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [17], Q = \rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$12732 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [16], Q = \rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$12731 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [15], Q = \rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$12730 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [14], Q = \rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$12729 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [13], Q = \rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$12728 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [12], Q = \rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$12727 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [11], Q = \rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$12726 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [10], Q = \rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$12725 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [9], Q = \rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$12724 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [8], Q = \rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$12723 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [7], Q = \rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$12722 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [6], Q = \rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$12721 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [5], Q = \rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$12720 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [4], Q = \rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$12719 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [3], Q = \rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$12718 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [2], Q = \rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$12717 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [1], Q = \rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$12716 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8206 [0], Q = \rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$12715 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [31], Q = \EBX [31]).
Adding EN signal on $auto$ff.cc:262:slice$12714 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [30], Q = \EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$12713 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [29], Q = \EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$12712 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [28], Q = \EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$12711 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [27], Q = \EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$12710 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [26], Q = \EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$12709 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [25], Q = \EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$12708 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [24], Q = \EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$12707 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [23], Q = \EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$12706 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [22], Q = \EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$12705 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [21], Q = \EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$12704 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [20], Q = \EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$12703 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [19], Q = \EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$12702 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [18], Q = \EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$12701 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [17], Q = \EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$12700 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [16], Q = \EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$12699 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [15], Q = \EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$12698 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [14], Q = \EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$12697 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [13], Q = \EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$12696 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [12], Q = \EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$12695 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [11], Q = \EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$12694 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [10], Q = \EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$12693 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [9], Q = \EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$12692 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [8], Q = \EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$12691 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [7], Q = \EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$12690 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [6], Q = \EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$12689 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [5], Q = \EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$12688 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [4], Q = \EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$12687 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [3], Q = \EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$12686 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [2], Q = \EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$12685 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [1], Q = \EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$12684 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11413 [0], Q = \EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$12683 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [31], Q = \EAX [31]).
Adding EN signal on $auto$ff.cc:262:slice$12682 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [30], Q = \EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$12681 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [29], Q = \EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$12680 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [28], Q = \EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$12679 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [27], Q = \EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$12678 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [26], Q = \EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$12677 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [25], Q = \EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$12676 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [24], Q = \EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$12675 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [23], Q = \EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$12674 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [22], Q = \EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$12673 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [21], Q = \EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$12672 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [20], Q = \EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$12671 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [19], Q = \EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$12670 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [18], Q = \EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$12669 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [17], Q = \EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$12668 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [16], Q = \EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$12667 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [15], Q = \EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$12666 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [14], Q = \EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$12665 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [13], Q = \EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$12664 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [12], Q = \EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$12663 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [11], Q = \EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$12662 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [10], Q = \EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$12661 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [9], Q = \EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$12660 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [8], Q = \EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$12659 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [7], Q = \EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$12658 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [6], Q = \EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$12657 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [5], Q = \EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$12656 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [4], Q = \EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$12655 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [3], Q = \EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$12654 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [2], Q = \EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$12653 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [1], Q = \EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$12652 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10929 [0], Q = \EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$12651 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10373 [3], Q = \P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$12650 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10373 [2], Q = \P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$12649 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10373 [1], Q = \P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$12648 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10373 [0], Q = \P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$12647 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8314, Q = \CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$12646 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [14], Q = \P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$12645 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [13], Q = \P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$12644 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [12], Q = \P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$12643 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [11], Q = \P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$12642 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [10], Q = \P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$12641 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [9], Q = \P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$12640 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [8], Q = \P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$12639 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [7], Q = \P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$12638 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [6], Q = \P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$12637 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [5], Q = \P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$12636 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [4], Q = \P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$12635 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [3], Q = \P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$12634 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [2], Q = \P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$12633 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [1], Q = \P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$12632 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11659 [0], Q = \P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$12631 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [15], Q = \P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$12630 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [14], Q = \P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$12629 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [13], Q = \P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$12628 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [12], Q = \P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$12627 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [11], Q = \P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$12626 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [10], Q = \P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$12625 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [9], Q = \P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$12624 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [8], Q = \P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$12623 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [7], Q = \P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$12622 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [6], Q = \P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$12621 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [5], Q = \P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$12620 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [4], Q = \P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$12619 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [3], Q = \P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$12618 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [2], Q = \P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$12617 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [1], Q = \P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$12616 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11902 [0], Q = \P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$12615 ($_DFF_PP0_) from module b15 (D = $auto$rtlil.cc:2459:Mux$1194, Q = \P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$12614 ($_DFF_PP0_) from module b15 (D = $auto$rtlil.cc:2459:Mux$1208, Q = \P1.More).
Adding EN signal on $auto$ff.cc:262:slice$12613 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [31], Q = \P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$12612 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [30], Q = \P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$12611 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [29], Q = \P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$12610 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [28], Q = \P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$12609 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [27], Q = \P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$12608 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [26], Q = \P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$12607 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [25], Q = \P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$12606 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [24], Q = \P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$12605 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [23], Q = \P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$12604 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [22], Q = \P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$12603 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [21], Q = \P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$12602 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [20], Q = \P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$12601 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [19], Q = \P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$12600 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [18], Q = \P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$12599 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [17], Q = \P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$12598 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [16], Q = \P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$12597 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [15], Q = \P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$12596 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [14], Q = \P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$12595 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [13], Q = \P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$12594 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [12], Q = \P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$12593 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [11], Q = \P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$12592 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [10], Q = \P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$12591 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [9], Q = \P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$12590 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [8], Q = \P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$12589 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [7], Q = \P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$12588 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [6], Q = \P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$12587 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [5], Q = \P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$12586 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [4], Q = \P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$12585 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [3], Q = \P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$12584 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [2], Q = \P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$12583 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [1], Q = \P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$12582 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7160 [0], Q = \P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$12581 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [31], Q = \P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$12580 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [30], Q = \P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$12579 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [29], Q = \P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$12578 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [28], Q = \P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$12577 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [27], Q = \P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$12576 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [26], Q = \P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$12575 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [25], Q = \P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$12574 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [24], Q = \P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$12573 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [23], Q = \P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$12572 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [22], Q = \P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$12571 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [21], Q = \P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$12570 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [20], Q = \P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$12569 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [19], Q = \P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$12568 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [18], Q = \P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$12567 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [17], Q = \P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$12566 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [16], Q = \P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$12565 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [15], Q = \P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$12564 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7644 [14], Q = \P1.InstAddrPointer [14]).

yosys> opt_clean

3.18.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 7 unused cells and 3174 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.18.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~13201 debug messages>

3.18.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.18.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~53364 debug messages>
Removed a total of 17788 cells.

yosys> opt_dff

3.18.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$2783 ($_DFF_PP0_) from module b15 (D = $verific$n398$17, Q = \W_R_n).
Adding EN signal on $auto$ff.cc:262:slice$2785 ($_DFF_PP0_) from module b15 (D = \MemoryFetch, Q = \M_IO_n).
Adding EN signal on $auto$ff.cc:262:slice$2752 ($_DFF_PP0_) from module b15 (D = \ByteEnable [3], Q = \BE_n [3]).
Adding EN signal on $auto$ff.cc:262:slice$2751 ($_DFF_PP0_) from module b15 (D = \ByteEnable [2], Q = \BE_n [2]).
Adding EN signal on $auto$ff.cc:262:slice$2749 ($_DFF_PP0_) from module b15 (D = \ByteEnable [0], Q = \BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$2750 ($_DFF_PP0_) from module b15 (D = \ByteEnable [1], Q = \BE_n [1]).

yosys> opt_clean

3.18.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 12 unused cells and 15497 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.18.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.18.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.18.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_dff

3.18.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.18.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.18.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.18.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.34. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.18.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.18.37. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.19. Executing MEMORY pass.

yosys> opt_mem

3.19.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.19.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.19.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.19.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.19.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> memory_share

3.19.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.19.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> memory_collect

3.19.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr -mux_undef

3.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~2821 debug messages>

yosys> simplemap

3.22. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge

3.24. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_dff -nodffe -nosdff

3.25. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 156 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.27.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~118 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$21195 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [13], Q = \P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$21417 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [12], Q = \P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$68660 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [14], Q = \P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$68438 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [15], Q = \P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$68216 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [16], Q = \P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$67994 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [17], Q = \P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$67772 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [18], Q = \P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$67550 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [19], Q = \P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$67328 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [20], Q = \P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$67106 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [21], Q = \P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$66884 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [22], Q = \P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$66662 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [23], Q = \P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$66440 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [24], Q = \P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$66218 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [25], Q = \P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$65996 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [26], Q = \P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$65774 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [27], Q = \P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$65552 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [28], Q = \P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$65330 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [29], Q = \P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$65108 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [30], Q = \P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$64886 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [31], Q = \P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$24611 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [1], Q = \P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$24389 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [2], Q = \P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$24167 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [3], Q = \P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$23945 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [4], Q = \P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$23723 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [5], Q = \P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$23407 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [6], Q = \P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$23185 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [7], Q = \P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$22963 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [8], Q = \P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$22647 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [9], Q = \P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$22425 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [10], Q = \P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$22203 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7579 [11], Q = \P1.InstAddrPointer [11]).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 64 unused wires.
<suppressed ~1 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~155 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~639 debug messages>
Removed a total of 213 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 215 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$1948 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$5759
        $auto$simplemap.cc:278:simplemap_mux$5374

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$2228 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$2218
        $auto$simplemap.cc:312:simplemap_bmux$2215


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~2 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.30.26. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~73 debug messages>

yosys> opt

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Extracted 5523 gates and 5920 wires to a netlist network with 395 inputs and 455 outputs.

3.33.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_09-03-2022T20-36-44/All_lut_synth_rs_area.json/b15/abc_tmp.scr 
ABC: netlist  : i/o =    395/    455  and =   10233  lev =   60 (22.44)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1789  edge =    7853  lev =   21 (8.93)  mem = 0.09 MB
ABC: netlist  : i/o =    395/    455  and =   10114  lev =   60 (23.75)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1715  edge =    7612  lev =   21 (8.87)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9790  lev =   61 (24.06)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1689  edge =    7446  lev =   21 (9.02)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =   10113  lev =   58 (21.06)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1645  edge =    7386  lev =   19 (9.06)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9720  lev =   61 (23.60)  mem = 0.13 MB
ABC: Mapping (K=6)  :  lut =   1699  edge =    7486  lev =   19 (9.18)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9780  lev =   59 (23.77)  mem = 0.18 MB
ABC: Mapping (K=6)  :  lut =   1604  edge =    7366  lev =   19 (8.47)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9701  lev =   59 (23.46)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1595  edge =    7294  lev =   20 (8.53)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9755  lev =   59 (23.29)  mem = 0.18 MB
ABC: Mapping (K=6)  :  lut =   1594  edge =    7259  lev =   21 (8.57)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9748  lev =   55 (20.67)  mem = 0.18 MB
ABC: Mapping (K=6)  :  lut =   1589  edge =    7262  lev =   19 (8.38)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9468  lev =   60 (23.05)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1551  edge =    7159  lev =   19 (8.31)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9467  lev =   61 (23.52)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1533  edge =    7205  lev =   20 (8.17)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9788  lev =   61 (22.13)  mem = 0.18 MB
ABC: Mapping (K=6)  :  lut =   1500  edge =    7115  lev =   19 (8.01)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9584  lev =   61 (23.77)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1492  edge =    7051  lev =   19 (8.04)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9584  lev =   61 (23.77)  mem = 0.13 MB
ABC: Mapping (K=6)  :  lut =   1492  edge =    7051  lev =   19 (8.04)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9584  lev =   61 (23.77)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1489  edge =    7045  lev =   19 (8.04)  mem = 0.08 MB
ABC: netlist  : i/o =    395/    455  and =    9711  lev =   59 (23.47)  mem = 0.13 MB
ABC: Mapping (K=6)  :  lut =   1489  edge =    7045  lev =   19 (8.04)  mem = 0.08 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1494
ABC RESULTS:        internal signals:     5070
ABC RESULTS:           input signals:      395
ABC RESULTS:          output signals:      455
Removing temp directory.

yosys> opt

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 1986 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.34.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.34.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.34.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.34.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.34.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.35. Executing HIERARCHY pass (managing design hierarchy).

3.35.1. Analyzing design hierarchy..
Top module:  \b15

3.35.2. Analyzing design hierarchy..
Top module:  \b15
Removed 0 unused modules.

yosys> stat

3.36. Printing statistics.

=== b15 ===

   Number of wires:               1542
   Number of wire bits:           1947
   Number of public wires:          50
   Number of public wire bits:     455
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1907
     $_DFFE_PP0P_                  415
     $lut                         1492


yosys> opt_clean -purge

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> write_verilog -noattr -nohex b15.verilog

3.38. Executing Verilog backend.

yosys> bmuxmap

3.38.1. Executing BMUXMAP pass.

yosys> demuxmap

3.38.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b15'.

End of script. Logfile hash: 8bf2f2017c, CPU: user 27.40s system 0.25s, MEM: 108.98 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 58% 1x abc (39 sec), 12% 54x opt_expr (8 sec), ...
