
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b15.vhd

yosys> verific -vhdl b15.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b15.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b15.vhd:1: analyzing entity 'b15'
VERIFIC-INFO [VHDL-1010] b15.vhd:17: analyzing architecture 'behav'

yosys> synth_rs -top b15 -tech genesis -goal area -de -no_dsp -no_bram -verilog b15.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b15

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b15.vhd:1: processing 'b15(BEHAV)'
Importing module standard.
Importing module b15.

3.3.1. Analyzing design hierarchy..
Top module:  \b15

3.3.2. Analyzing design hierarchy..
Top module:  \b15
Removing unused module `\standard'.
Removed 1 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~17 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~5 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 7 unused cells and 141 unused wires.
<suppressed ~65 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b15...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
    New ctrl vector for $pmux cell $verific$Select_723$b15.vhd:562$914: { $verific$n7981$95 $verific$n7982$96 $auto$opt_reduce.cc:134:opt_pmux$1085 $auto$opt_reduce.cc:134:opt_pmux$1083 }
    New ctrl vector for $pmux cell $verific$Select_725$b15.vhd:562$916: { $verific$n7981$95 $auto$opt_reduce.cc:134:opt_pmux$1091 $auto$opt_reduce.cc:134:opt_pmux$1089 $auto$opt_reduce.cc:134:opt_pmux$1087 }
    New ctrl vector for $pmux cell $verific$Select_731$b15.vhd:562$922: { $verific$n8173$116 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1093 $verific$n7990$104 }
    New ctrl vector for $pmux cell $verific$Select_733$b15.vhd:562$923: { $verific$n8173$116 $auto$opt_reduce.cc:134:opt_pmux$1097 $auto$opt_reduce.cc:134:opt_pmux$1095 }
    New ctrl vector for $pmux cell $verific$Select_735$b15.vhd:562$924: { $verific$n8173$116 $auto$opt_reduce.cc:134:opt_pmux$1101 $auto$opt_reduce.cc:134:opt_pmux$1099 }
    New ctrl vector for $pmux cell $verific$Select_737$b15.vhd:562$925: { $verific$n8173$116 $auto$opt_reduce.cc:134:opt_pmux$1103 }
    New ctrl vector for $pmux cell $verific$select_720$b15.vhd:562$911: { $verific$n7981$95 $verific$n7982$96 $auto$opt_reduce.cc:134:opt_pmux$1113 $auto$opt_reduce.cc:134:opt_pmux$1111 $auto$opt_reduce.cc:134:opt_pmux$1109 $auto$opt_reduce.cc:134:opt_pmux$1107 $auto$opt_reduce.cc:134:opt_pmux$1105 }
    New ctrl vector for $pmux cell $verific$select_721$b15.vhd:562$912: { $auto$opt_reduce.cc:134:opt_pmux$1123 $auto$opt_reduce.cc:134:opt_pmux$1121 $verific$n7987$101 $verific$n7989$103 $auto$opt_reduce.cc:134:opt_pmux$1119 $auto$opt_reduce.cc:134:opt_pmux$1117 $auto$opt_reduce.cc:134:opt_pmux$1115 }
    New ctrl vector for $pmux cell $verific$select_726$b15.vhd:562$917: { $verific$n7981$95 $verific$n7982$96 $auto$opt_reduce.cc:134:opt_pmux$1125 }
    New ctrl vector for $pmux cell $verific$select_727$b15.vhd:562$918: { $verific$n7985$99 $verific$n7987$101 $verific$n7989$103 $verific$n7995$109 $auto$opt_reduce.cc:134:opt_pmux$1127 }
    New ctrl vector for $pmux cell $verific$select_728$b15.vhd:562$919: { $verific$n7986$100 $verific$n7996$110 $auto$opt_reduce.cc:134:opt_pmux$1129 }
    New ctrl vector for $pmux cell $verific$select_729$b15.vhd:562$920: { $verific$n7987$101 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1133 $auto$opt_reduce.cc:134:opt_pmux$1131 }
    New ctrl vector for $pmux cell $verific$select_738$b15.vhd:562$926: { $verific$n7987$101 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1135 }
    New ctrl vector for $pmux cell $verific$select_739$b15.vhd:562$927: { $verific$n7987$101 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1137 }
    New ctrl vector for $pmux cell $verific$select_740$b15.vhd:562$928: { $verific$n7988$102 $verific$n7990$104 $auto$opt_reduce.cc:134:opt_pmux$1139 }
    New ctrl vector for $pmux cell $verific$select_741$b15.vhd:562$929: { $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1141 }
  Optimizing cells in module \b15.
Performed a total of 16 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$rEIP_reg$b15.vhd:612$1057 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Address_reg$b15.vhd:231$636 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ADS_n_reg$b15.vhd:231$640 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$W_R_n_reg$b15.vhd:231$637 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$State_reg$b15.vhd:231$641 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$StateBS16_reg$b15.vhd:231$643 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$RequestPending_reg$b15.vhd:612$1061 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ReadRequest_reg$b15.vhd:612$1059 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.uWord_reg$b15.vhd:612$1051 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.lWord_reg$b15.vhd:612$1050 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.State2_reg$b15.vhd:612$1027 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.PhyAddrPointer_reg$b15.vhd:612$1047 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.More_reg$b15.vhd:612$1048 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_9$b15.vhd:612$1035 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_8$b15.vhd:612$1034 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_7$b15.vhd:612$1033 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_6$b15.vhd:612$1032 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_5$b15.vhd:612$1031 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_4$b15.vhd:612$1030 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_3$b15.vhd:612$1029 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_2$b15.vhd:612$1028 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_16$b15.vhd:612$1042 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_15$b15.vhd:612$1041 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_14$b15.vhd:612$1040 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_13$b15.vhd:612$1039 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_12$b15.vhd:612$1038 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_11$b15.vhd:612$1037 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_10$b15.vhd:612$1036 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg$b15.vhd:612$1043 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:612$1045 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:612$1044 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstAddrPointer_reg$b15.vhd:612$1046 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.Flush_reg$b15.vhd:612$1049 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$MemoryFetch_reg$b15.vhd:612$1060 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$M_IO_n_reg$b15.vhd:231$639 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EBX_reg$b15.vhd:612$1056 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EAX_reg$b15.vhd:612$1055 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Datao_reg$b15.vhd:612$1053 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$DataWidth_reg$b15.vhd:231$644 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$D_C_n_reg$b15.vhd:231$638 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$CodeFetch_reg$b15.vhd:612$1052 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ByteEnable_reg$b15.vhd:668$1079 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$BE_n_reg$b15.vhd:231$635 ($aldff) from module b15.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 2 unused cells and 19 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$ByteEnable_reg$b15.vhd:668$1079 ($adff) from module b15 (D = $verific$n9780$544, Q = \ByteEnable).
Setting constant 0-bit at position 2 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 3 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 5 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 6 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 7 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 8 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 9 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 10 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 11 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 12 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 13 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 14 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 15 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 16 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 17 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 18 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 19 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 20 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 21 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 22 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 23 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 24 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 25 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 26 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 27 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 28 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 29 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 30 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 31 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 31 on $verific$Datao_reg$b15.vhd:612$1053 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:612$1045 ($adff) from module b15.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~4 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1145 ($adff) from module b15.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$1146 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:612$1044 ($adff) from module b15.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_98$b15.vhd:181$604 ($mux).
Removed top 1 bits (of 31) from port Y of cell b15.$verific$add_113$b15.vhd:197$608 ($add).
Removed top 1 bits (of 31) from port A of cell b15.$verific$add_113$b15.vhd:197$608 ($add).
Removed top 1 bits (of 3) from mux cell b15.$verific$mux_127$b15.vhd:215$614 ($mux).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_193$b15.vhd:305$649 ($shl).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_210$b15.vhd:306$666 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_210$b15.vhd:306$666 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_210$b15.vhd:306$666 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_213$b15.vhd:308$669 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_230$b15.vhd:309$686 ($add).
Removed top 8 bits (of 16) from port Y of cell b15.$verific$add_235$b15.vhd:311$690 ($add).
Removed top 8 bits (of 16) from port A of cell b15.$verific$add_235$b15.vhd:311$690 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_237$b15.vhd:311$695 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_254$b15.vhd:312$712 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_261$b15.vhd:313$720 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_278$b15.vhd:314$737 ($add).
Removed top 29 bits (of 30) from port B of cell b15.$verific$add_281$b15.vhd:315$738 ($add).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_284$b15.vhd:318$740 ($add).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_286$b15.vhd:319$742 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_287$b15.vhd:320$743 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_287$b15.vhd:320$743 ($neg).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_360$b15.vhd:344$768 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_362$b15.vhd:345$770 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_362$b15.vhd:345$770 ($add).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$add_362$b15.vhd:345$770 ($add).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_369$b15.vhd:355$772 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_369$b15.vhd:355$772 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_369$b15.vhd:355$772 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_370$b15.vhd:355$773 ($le).
Removed top 1 bits (of 8) from port A of cell b15.$verific$LessThan_373$b15.vhd:356$775 ($lt).
Removed top 1 bits (of 9) from port A of cell b15.$verific$sub_378$b15.vhd:357$776 ($sub).
Removed top 1 bits (of 9) from port B of cell b15.$verific$sub_378$b15.vhd:357$776 ($sub).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$sub_379$b15.vhd:357$777 ($sub).
Removed top 1 bits (of 33) from port A of cell b15.$verific$sub_379$b15.vhd:357$777 ($sub).
Removed top 1 bits (of 33) from port B of cell b15.$verific$sub_379$b15.vhd:357$777 ($sub).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_383$b15.vhd:360$779 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_387$b15.vhd:360$780 ($add).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_397$b15.vhd:370$787 ($le).
Removed top 29 bits (of 32) from port B of cell b15.$verific$add_399$b15.vhd:371$788 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_403$b15.vhd:371$789 ($add).
Removed top 1 bits (of 3) from port A of cell b15.$verific$add_422$b15.vhd:391$794 ($add).
Removed top 2 bits (of 3) from port B of cell b15.$verific$add_422$b15.vhd:391$794 ($add).
Removed top 1 bits (of 3) from port Y of cell b15.$verific$add_422$b15.vhd:391$794 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_424$b15.vhd:391$797 ($add).
Removed top 3 bits (of 5) from port B of cell b15.$verific$add_424$b15.vhd:391$797 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_424$b15.vhd:391$797 ($add).
Removed top 7 bits (of 8) from port B of cell b15.$verific$add_426$b15.vhd:391$800 ($add).
Removed top 1 bits (of 4) from port A of cell b15.$verific$add_427$b15.vhd:391$801 ($add).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_427$b15.vhd:391$801 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_435$b15.vhd:395$804 ($add).
Removed top 2 bits (of 5) from port B of cell b15.$verific$add_435$b15.vhd:395$804 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_435$b15.vhd:395$804 ($add).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_440$b15.vhd:399$809 ($mux).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_462$b15.vhd:412$812 ($le).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_463$b15.vhd:413$813 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_464$b15.vhd:414$814 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_464$b15.vhd:414$814 ($neg).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_477$b15.vhd:430$819 ($add).
Removed top 1 bits (of 10) from mux cell b15.$verific$mux_958$b15.vhd:444$847 ($mux).
Removed top 1 bits (of 16) from port Y of cell b15.$verific$add_522$b15.vhd:457$852 ($add).
Removed top 1 bits (of 16) from port A of cell b15.$verific$add_522$b15.vhd:457$852 ($add).
Removed top 1 bits (of 3) from port A of cell b15.$verific$equal_528$b15.vhd:462$857 ($eq).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_573$b15.vhd:479$874 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_950$b15.vhd:479$877 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_949$b15.vhd:483$885 ($mux).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_681$b15.vhd:546$886 ($add).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_689$b15.vhd:552$888 ($add).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_702$b15.vhd:348$891 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_713$b15.vhd:525$902 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_714$b15.vhd:530$903 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_717$b15.vhd:545$906 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_718$b15.vhd:551$907 ($eq).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_742$b15.vhd:563$930 ($lt).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_744$b15.vhd:563$932 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$sub_744$b15.vhd:563$932 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_745$b15.vhd:563$933 ($lt).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_755$b15.vhd:579$941 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_759$b15.vhd:585$946 ($mux).
Removed top 1 bits (of 2) from port A of cell b15.$verific$add_760$b15.vhd:586$948 ($add).
Removed top 1 bits (of 4) from mux cell b15.$verific$mux_764$b15.vhd:587$950 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_765$b15.vhd:588$951 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_766$b15.vhd:588$952 ($mux).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_767$b15.vhd:589$953 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_767$b15.vhd:589$953 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_767$b15.vhd:589$953 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_768$b15.vhd:589$954 ($lt).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_770$b15.vhd:594$955 ($mux).
Removed top 1 bits (of 5) from port A of cell b15.$verific$LessThan_771$b15.vhd:597$956 ($le).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_771$b15.vhd:597$956 ($le).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_812$b15.vhd:605$992 ($mux).
Removed top 1 bits (of 33) from FF cell b15.$verific$rEIP_reg$b15.vhd:612$1057 ($adff).
Removed top 1 bits (of 2) from port A of cell b15.$verific$equal_909$b15.vhd:634$1071 ($eq).
Removed top 30 bits (of 32) from port Y of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 30 bits (of 32) from port A of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 30 bits (of 32) from wire b15.$verific$n1001$177.
Removed top 1 bits (of 31) from wire b15.$verific$n1151$182.
Removed top 1 bits (of 3) from wire b15.$verific$n1294$187.
Removed top 1 bits (of 5) from wire b15.$verific$n2071$220.
Removed top 8 bits (of 16) from wire b15.$verific$n2267$241.
Removed top 1 bits (of 33) from wire b15.$verific$n2793$287.
Removed top 1 bits (of 5) from wire b15.$verific$n3660$314.
Removed top 1 bits (of 33) from wire b15.$verific$n3837$321.
Removed top 1 bits (of 3) from wire b15.$verific$n4619$342.
Removed top 1 bits (of 5) from wire b15.$verific$n4633$344.
Removed top 1 bits (of 4) from wire b15.$verific$n4659$347.
Removed top 1 bits (of 5) from wire b15.$verific$n4791$351.
Removed top 1 bits (of 5) from wire b15.$verific$n4869$355.
Removed top 1 bits (of 33) from wire b15.$verific$n5140$358.
Removed top 1 bits (of 5) from wire b15.$verific$n5695$377.
Removed top 1 bits (of 16) from wire b15.$verific$n5974$388.
Removed top 1 bits (of 32) from wire b15.$verific$n6324$395.
Removed top 1 bits (of 5) from wire b15.$verific$n6434$399.
Removed top 1 bits (of 32) from wire b15.$verific$n6510$403.
Removed top 31 bits (of 33) from wire b15.$verific$n8312$453.
Removed top 30 bits (of 32) from wire b15.$verific$n8412$456.
Removed top 1 bits (of 4) from wire b15.$verific$n8452$458.
Removed top 1 bits (of 5) from wire b15.$verific$n8457$459.
Removed top 1 bits (of 5) from wire b15.$verific$n8463$460.
Removed top 3 bits (of 4) from wire b15.$verific$n8477$462.
Removed top 1 bits (of 5) from wire b15.$verific$n8482$463.
Removed top 1 bits (of 5) from wire b15.$verific$n8841$499.
Removed top 30 bits (of 32) from wire b15.DataWidth.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueRd_Addr.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueWr_Addr.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 34 unused cells and 95 unused wires.
<suppressed ~35 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b15:
  creating $macc model for $verific$add_113$b15.vhd:197$608 ($add).
  creating $macc model for $verific$add_210$b15.vhd:306$666 ($add).
  creating $macc model for $verific$add_230$b15.vhd:309$686 ($add).
  creating $macc model for $verific$add_235$b15.vhd:311$690 ($add).
  creating $macc model for $verific$add_254$b15.vhd:312$712 ($add).
  creating $macc model for $verific$add_259$b15.vhd:313$716 ($add).
  creating $macc model for $verific$add_278$b15.vhd:314$737 ($add).
  creating $macc model for $verific$add_28$b15.vhd:125$558 ($add).
  creating $macc model for $verific$add_281$b15.vhd:315$738 ($add).
  creating $macc model for $verific$add_284$b15.vhd:318$740 ($add).
  creating $macc model for $verific$add_360$b15.vhd:344$768 ($add).
  creating $macc model for $verific$add_362$b15.vhd:345$770 ($add).
  creating $macc model for $verific$add_383$b15.vhd:360$779 ($add).
  creating $macc model for $verific$add_387$b15.vhd:360$780 ($add).
  creating $macc model for $verific$add_399$b15.vhd:371$788 ($add).
  creating $macc model for $verific$add_403$b15.vhd:371$789 ($add).
  creating $macc model for $verific$add_422$b15.vhd:391$794 ($add).
  creating $macc model for $verific$add_424$b15.vhd:391$797 ($add).
  creating $macc model for $verific$add_426$b15.vhd:391$800 ($add).
  creating $macc model for $verific$add_427$b15.vhd:391$801 ($add).
  creating $macc model for $verific$add_435$b15.vhd:395$804 ($add).
  creating $macc model for $verific$add_477$b15.vhd:430$819 ($add).
  creating $macc model for $verific$add_522$b15.vhd:457$852 ($add).
  creating $macc model for $verific$add_681$b15.vhd:546$886 ($add).
  creating $macc model for $verific$add_689$b15.vhd:552$888 ($add).
  creating $macc model for $verific$add_760$b15.vhd:586$948 ($add).
  creating $macc model for $verific$sub_369$b15.vhd:355$772 ($sub).
  creating $macc model for $verific$sub_378$b15.vhd:357$776 ($sub).
  creating $macc model for $verific$sub_379$b15.vhd:357$777 ($sub).
  creating $macc model for $verific$sub_744$b15.vhd:563$932 ($sub).
  creating $macc model for $verific$sub_767$b15.vhd:589$953 ($sub).
  creating $macc model for $verific$unary_minus_287$b15.vhd:320$743 ($neg).
  creating $macc model for $verific$unary_minus_464$b15.vhd:414$814 ($neg).
  creating $macc model for $verific$unary_minus_756$b15.vhd:580$942 ($neg).
  creating $alu model for $macc $verific$unary_minus_756$b15.vhd:580$942.
  creating $alu model for $macc $verific$unary_minus_464$b15.vhd:414$814.
  creating $alu model for $macc $verific$unary_minus_287$b15.vhd:320$743.
  creating $alu model for $macc $verific$sub_767$b15.vhd:589$953.
  creating $alu model for $macc $verific$sub_744$b15.vhd:563$932.
  creating $alu model for $macc $verific$sub_379$b15.vhd:357$777.
  creating $alu model for $macc $verific$sub_378$b15.vhd:357$776.
  creating $alu model for $macc $verific$sub_369$b15.vhd:355$772.
  creating $alu model for $macc $verific$add_760$b15.vhd:586$948.
  creating $alu model for $macc $verific$add_689$b15.vhd:552$888.
  creating $alu model for $macc $verific$add_681$b15.vhd:546$886.
  creating $alu model for $macc $verific$add_522$b15.vhd:457$852.
  creating $alu model for $macc $verific$add_477$b15.vhd:430$819.
  creating $alu model for $macc $verific$add_435$b15.vhd:395$804.
  creating $alu model for $macc $verific$add_427$b15.vhd:391$801.
  creating $alu model for $macc $verific$add_426$b15.vhd:391$800.
  creating $alu model for $macc $verific$add_424$b15.vhd:391$797.
  creating $alu model for $macc $verific$add_422$b15.vhd:391$794.
  creating $alu model for $macc $verific$add_403$b15.vhd:371$789.
  creating $alu model for $macc $verific$add_399$b15.vhd:371$788.
  creating $alu model for $macc $verific$add_387$b15.vhd:360$780.
  creating $alu model for $macc $verific$add_383$b15.vhd:360$779.
  creating $alu model for $macc $verific$add_362$b15.vhd:345$770.
  creating $alu model for $macc $verific$add_360$b15.vhd:344$768.
  creating $alu model for $macc $verific$add_284$b15.vhd:318$740.
  creating $alu model for $macc $verific$add_281$b15.vhd:315$738.
  creating $alu model for $macc $verific$add_28$b15.vhd:125$558.
  creating $alu model for $macc $verific$add_278$b15.vhd:314$737.
  creating $alu model for $macc $verific$add_259$b15.vhd:313$716.
  creating $alu model for $macc $verific$add_254$b15.vhd:312$712.
  creating $alu model for $macc $verific$add_235$b15.vhd:311$690.
  creating $alu model for $macc $verific$add_230$b15.vhd:309$686.
  creating $alu model for $macc $verific$add_210$b15.vhd:306$666.
  creating $alu model for $macc $verific$add_113$b15.vhd:197$608.
  creating $alu model for $verific$LessThan_286$b15.vhd:319$742 ($lt): new $alu
  creating $alu model for $verific$LessThan_370$b15.vhd:355$773 ($le): new $alu
  creating $alu model for $verific$LessThan_373$b15.vhd:356$775 ($lt): new $alu
  creating $alu model for $verific$LessThan_397$b15.vhd:370$787 ($le): new $alu
  creating $alu model for $verific$LessThan_462$b15.vhd:412$812 ($le): new $alu
  creating $alu model for $verific$LessThan_463$b15.vhd:413$813 ($lt): new $alu
  creating $alu model for $verific$LessThan_742$b15.vhd:563$930 ($lt): new $alu
  creating $alu model for $verific$LessThan_745$b15.vhd:563$933 ($lt): new $alu
  creating $alu model for $verific$LessThan_755$b15.vhd:579$941 ($lt): new $alu
  creating $alu model for $verific$LessThan_768$b15.vhd:589$954 ($lt): new $alu
  creating $alu model for $verific$LessThan_771$b15.vhd:597$956 ($le): new $alu
  creating $alu cell for $verific$LessThan_771$b15.vhd:597$956: $auto$alumacc.cc:485:replace_alu$1426
  creating $alu cell for $verific$LessThan_768$b15.vhd:589$954: $auto$alumacc.cc:485:replace_alu$1435
  creating $alu cell for $verific$LessThan_755$b15.vhd:579$941: $auto$alumacc.cc:485:replace_alu$1440
  creating $alu cell for $verific$LessThan_745$b15.vhd:563$933: $auto$alumacc.cc:485:replace_alu$1445
  creating $alu cell for $verific$LessThan_742$b15.vhd:563$930: $auto$alumacc.cc:485:replace_alu$1450
  creating $alu cell for $verific$LessThan_463$b15.vhd:413$813: $auto$alumacc.cc:485:replace_alu$1461
  creating $alu cell for $verific$LessThan_462$b15.vhd:412$812: $auto$alumacc.cc:485:replace_alu$1466
  creating $alu cell for $verific$LessThan_397$b15.vhd:370$787: $auto$alumacc.cc:485:replace_alu$1479
  creating $alu cell for $verific$LessThan_373$b15.vhd:356$775: $auto$alumacc.cc:485:replace_alu$1492
  creating $alu cell for $verific$LessThan_370$b15.vhd:355$773: $auto$alumacc.cc:485:replace_alu$1497
  creating $alu cell for $verific$LessThan_286$b15.vhd:319$742: $auto$alumacc.cc:485:replace_alu$1510
  creating $alu cell for $verific$add_113$b15.vhd:197$608: $auto$alumacc.cc:485:replace_alu$1515
  creating $alu cell for $verific$add_210$b15.vhd:306$666: $auto$alumacc.cc:485:replace_alu$1518
  creating $alu cell for $verific$add_230$b15.vhd:309$686: $auto$alumacc.cc:485:replace_alu$1521
  creating $alu cell for $verific$add_235$b15.vhd:311$690: $auto$alumacc.cc:485:replace_alu$1524
  creating $alu cell for $verific$add_254$b15.vhd:312$712: $auto$alumacc.cc:485:replace_alu$1527
  creating $alu cell for $verific$add_259$b15.vhd:313$716: $auto$alumacc.cc:485:replace_alu$1530
  creating $alu cell for $verific$add_278$b15.vhd:314$737: $auto$alumacc.cc:485:replace_alu$1533
  creating $alu cell for $verific$add_28$b15.vhd:125$558: $auto$alumacc.cc:485:replace_alu$1536
  creating $alu cell for $verific$add_281$b15.vhd:315$738: $auto$alumacc.cc:485:replace_alu$1539
  creating $alu cell for $verific$add_284$b15.vhd:318$740: $auto$alumacc.cc:485:replace_alu$1542
  creating $alu cell for $verific$add_360$b15.vhd:344$768: $auto$alumacc.cc:485:replace_alu$1545
  creating $alu cell for $verific$add_362$b15.vhd:345$770: $auto$alumacc.cc:485:replace_alu$1548
  creating $alu cell for $verific$add_383$b15.vhd:360$779: $auto$alumacc.cc:485:replace_alu$1551
  creating $alu cell for $verific$add_387$b15.vhd:360$780: $auto$alumacc.cc:485:replace_alu$1554
  creating $alu cell for $verific$add_399$b15.vhd:371$788: $auto$alumacc.cc:485:replace_alu$1557
  creating $alu cell for $verific$add_403$b15.vhd:371$789: $auto$alumacc.cc:485:replace_alu$1560
  creating $alu cell for $verific$add_422$b15.vhd:391$794: $auto$alumacc.cc:485:replace_alu$1563
  creating $alu cell for $verific$add_424$b15.vhd:391$797: $auto$alumacc.cc:485:replace_alu$1566
  creating $alu cell for $verific$add_426$b15.vhd:391$800: $auto$alumacc.cc:485:replace_alu$1569
  creating $alu cell for $verific$add_427$b15.vhd:391$801: $auto$alumacc.cc:485:replace_alu$1572
  creating $alu cell for $verific$add_435$b15.vhd:395$804: $auto$alumacc.cc:485:replace_alu$1575
  creating $alu cell for $verific$add_477$b15.vhd:430$819: $auto$alumacc.cc:485:replace_alu$1578
  creating $alu cell for $verific$add_522$b15.vhd:457$852: $auto$alumacc.cc:485:replace_alu$1581
  creating $alu cell for $verific$add_681$b15.vhd:546$886: $auto$alumacc.cc:485:replace_alu$1584
  creating $alu cell for $verific$add_689$b15.vhd:552$888: $auto$alumacc.cc:485:replace_alu$1587
  creating $alu cell for $verific$add_760$b15.vhd:586$948: $auto$alumacc.cc:485:replace_alu$1590
  creating $alu cell for $verific$sub_369$b15.vhd:355$772: $auto$alumacc.cc:485:replace_alu$1593
  creating $alu cell for $verific$sub_378$b15.vhd:357$776: $auto$alumacc.cc:485:replace_alu$1596
  creating $alu cell for $verific$sub_379$b15.vhd:357$777: $auto$alumacc.cc:485:replace_alu$1599
  creating $alu cell for $verific$sub_744$b15.vhd:563$932: $auto$alumacc.cc:485:replace_alu$1602
  creating $alu cell for $verific$sub_767$b15.vhd:589$953: $auto$alumacc.cc:485:replace_alu$1605
  creating $alu cell for $verific$unary_minus_287$b15.vhd:320$743: $auto$alumacc.cc:485:replace_alu$1608
  creating $alu cell for $verific$unary_minus_464$b15.vhd:414$814: $auto$alumacc.cc:485:replace_alu$1611
  creating $alu cell for $verific$unary_minus_756$b15.vhd:580$942: $auto$alumacc.cc:485:replace_alu$1614
  created 45 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~97 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1327: { $verific$n7997$111 $verific$n7996$110 $verific$n7995$109 $verific$n7994$108 $verific$n7993$107 $verific$n7992$106 $verific$n7991$105 $verific$n7990$104 $verific$n7989$103 $verific$n7988$102 $verific$n7986$100 $verific$n7984$98 $verific$n7983$97 $verific$n7982$96 $verific$n7981$95 $verific$n7980$94 $verific$n7979$93 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1275: { $auto$rtlil.cc:2393:Or$1264 $verific$n7990$104 $verific$n7989$103 $verific$n7988$102 $verific$n7987$101 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1299: { $auto$rtlil.cc:2393:Or$1264 $verific$n7990$104 $verific$n7989$103 $verific$n7988$102 }
  Optimizing cells in module \b15.
Performed a total of 3 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 5 unused cells and 21 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~97 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> techmap

3.22. Executing TECHMAP pass (map to technology primitives).

3.22.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.22.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $and.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$653d0dc5a667330298513325d0bd1def0e6c1128\_90_alu for cells of type $alu.
Using template $paramod$91f82ead1edc61e0a1452110f15ef747116b421b\_90_alu for cells of type $alu.
Using template $paramod$076c9a7a3f037230073fe14dd4865d470cb48917\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$a2af9b43308e3114c3b5dd3f4dc3329b2387395d\_90_alu for cells of type $alu.
Using template $paramod$bfceb922395790c0ce92e9f9b5b428d4fc72cc30\_90_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$3b7577489eb4433b1d5620cab7f3794743dee5ea\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$b3c20b05d9b1fc2c940ef2f6c917486aead042e8\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~6474 debug messages>

yosys> opt

3.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~7674 debug messages>

yosys> opt_merge -nomux

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~3483 debug messages>
Removed a total of 1161 cells.

yosys> opt_muxtree

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 548 unused cells and 3166 unused wires.
<suppressed ~549 debug messages>

yosys> opt_expr

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~146 debug messages>

3.23.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$12726 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8962 [5], Q = \P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12846 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [13], Q = \P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$12845 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [12], Q = \P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$12725 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8962 [4], Q = \P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12724 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8962 [3], Q = \P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12723 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8962 [2], Q = \P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12722 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8962 [1], Q = \P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12721 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8962 [0], Q = \P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12720 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8838 [7], Q = \P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12844 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [11], Q = \P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$12843 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [10], Q = \P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$12842 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [9], Q = \P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$12719 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8838 [6], Q = \P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12841 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [8], Q = \P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$12840 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [7], Q = \P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$12839 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [6], Q = \P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$12718 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8838 [5], Q = \P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12838 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [5], Q = \P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$12837 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [4], Q = \P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$12836 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [3], Q = \P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$12835 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [2], Q = \P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$12834 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [1], Q = \P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$12833 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [0], Q = \P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$12832 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10574 [7], Q = \P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12717 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8838 [4], Q = \P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12831 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10574 [6], Q = \P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12830 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10574 [5], Q = \P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12829 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10574 [4], Q = \P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12828 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10574 [3], Q = \P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12827 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10574 [2], Q = \P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12826 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10574 [1], Q = \P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12825 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10574 [0], Q = \P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12716 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8838 [3], Q = \P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12824 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10450 [7], Q = \P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12823 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10450 [6], Q = \P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12822 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10450 [5], Q = \P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12821 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10450 [4], Q = \P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12820 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10450 [3], Q = \P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12819 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10450 [2], Q = \P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12818 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10450 [1], Q = \P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12715 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8838 [2], Q = \P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12817 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10450 [0], Q = \P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12816 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10326 [7], Q = \P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12815 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10326 [6], Q = \P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12814 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10326 [5], Q = \P1.InstQueue[2] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12813 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10326 [4], Q = \P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12812 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10326 [3], Q = \P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12811 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10326 [2], Q = \P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12714 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8838 [1], Q = \P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12810 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10326 [1], Q = \P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12809 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10326 [0], Q = \P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12808 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10202 [7], Q = \P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12807 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10202 [6], Q = \P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12806 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10202 [5], Q = \P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12805 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10202 [4], Q = \P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12804 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10202 [3], Q = \P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12713 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8838 [0], Q = \P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12803 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10202 [2], Q = \P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12802 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10202 [1], Q = \P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12801 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10202 [0], Q = \P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12800 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10078 [7], Q = \P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12799 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10078 [6], Q = \P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12798 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10078 [5], Q = \P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12797 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10078 [4], Q = \P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12712 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8714 [7], Q = \P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12796 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10078 [3], Q = \P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12795 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10078 [2], Q = \P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12794 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10078 [1], Q = \P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12793 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10078 [0], Q = \P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12792 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9954 [7], Q = \P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12791 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9954 [6], Q = \P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12790 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9954 [5], Q = \P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12711 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8714 [6], Q = \P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12789 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9954 [4], Q = \P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12788 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9954 [3], Q = \P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12787 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9954 [2], Q = \P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12786 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9954 [1], Q = \P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12785 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9954 [0], Q = \P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12784 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9830 [7], Q = \P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12783 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9830 [6], Q = \P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12710 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8714 [5], Q = \P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12782 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9830 [5], Q = \P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12781 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9830 [4], Q = \P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12780 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9830 [3], Q = \P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12779 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9830 [2], Q = \P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12778 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9830 [1], Q = \P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12777 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9830 [0], Q = \P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12776 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9706 [7], Q = \P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12709 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8714 [4], Q = \P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12775 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9706 [6], Q = \P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12774 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9706 [5], Q = \P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12773 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9706 [4], Q = \P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12772 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9706 [3], Q = \P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12771 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9706 [2], Q = \P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12770 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9706 [1], Q = \P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12769 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9706 [0], Q = \P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12708 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8714 [3], Q = \P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12768 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9582 [7], Q = \P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12767 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9582 [6], Q = \P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12766 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9582 [5], Q = \P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12765 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9582 [4], Q = \P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12764 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9582 [3], Q = \P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12763 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9582 [2], Q = \P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12762 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9582 [1], Q = \P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12707 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8714 [2], Q = \P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12761 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9582 [0], Q = \P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12760 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9458 [7], Q = \P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12759 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9458 [6], Q = \P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12758 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9458 [5], Q = \P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12757 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9458 [4], Q = \P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12756 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9458 [3], Q = \P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12755 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9458 [2], Q = \P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12706 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8714 [1], Q = \P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12754 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9458 [1], Q = \P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12753 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9458 [0], Q = \P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12752 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9334 [7], Q = \P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12751 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9334 [6], Q = \P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12750 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9334 [5], Q = \P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12749 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9334 [4], Q = \P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12748 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9334 [3], Q = \P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12705 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8714 [0], Q = \P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12747 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9334 [2], Q = \P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12746 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9334 [1], Q = \P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12745 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9334 [0], Q = \P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12744 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9210 [7], Q = \P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12743 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9210 [6], Q = \P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12742 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9210 [5], Q = \P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12741 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9210 [4], Q = \P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12704 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8019 [3], Q = \P1.State2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12740 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9210 [3], Q = \P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12739 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9210 [2], Q = \P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12738 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9210 [1], Q = \P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12737 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9210 [0], Q = \P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12736 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9086 [7], Q = \P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12735 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9086 [6], Q = \P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12734 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9086 [5], Q = \P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12703 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8019 [2], Q = \P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12733 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9086 [4], Q = \P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12732 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9086 [3], Q = \P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12731 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9086 [2], Q = \P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12730 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9086 [1], Q = \P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12729 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9086 [0], Q = \P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12728 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8962 [7], Q = \P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12727 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8962 [6], Q = \P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12702 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8019 [1], Q = \P1.State2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12701 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8019 [0], Q = \P1.State2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$3045 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10735 [3], Q = \P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$3044 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10735 [2], Q = \P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$3043 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10735 [1], Q = \P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$3042 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10735 [0], Q = \P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$3041 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2500, Q = \StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$3040 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2483 [2], Q = \State [2]).
Adding EN signal on $auto$ff.cc:262:slice$3039 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2483 [1], Q = \State [1]).
Adding EN signal on $auto$ff.cc:262:slice$3038 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2483 [0], Q = \State [0]).
Adding EN signal on $auto$ff.cc:262:slice$3037 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2461, Q = \ADS_n).
Adding EN signal on $auto$ff.cc:262:slice$3035 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2451, Q = \D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$3033 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [29], Q = \Address [29]).
Adding EN signal on $auto$ff.cc:262:slice$3032 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [28], Q = \Address [28]).
Adding EN signal on $auto$ff.cc:262:slice$3031 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [27], Q = \Address [27]).
Adding EN signal on $auto$ff.cc:262:slice$3030 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [26], Q = \Address [26]).
Adding EN signal on $auto$ff.cc:262:slice$3029 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [25], Q = \Address [25]).
Adding EN signal on $auto$ff.cc:262:slice$3028 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [24], Q = \Address [24]).
Adding EN signal on $auto$ff.cc:262:slice$3027 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [23], Q = \Address [23]).
Adding EN signal on $auto$ff.cc:262:slice$3026 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [22], Q = \Address [22]).
Adding EN signal on $auto$ff.cc:262:slice$3025 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [21], Q = \Address [21]).
Adding EN signal on $auto$ff.cc:262:slice$3024 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [20], Q = \Address [20]).
Adding EN signal on $auto$ff.cc:262:slice$3023 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [19], Q = \Address [19]).
Adding EN signal on $auto$ff.cc:262:slice$3022 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [18], Q = \Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$3021 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [17], Q = \Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$3020 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [16], Q = \Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$3019 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [15], Q = \Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$3018 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [14], Q = \Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$3017 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [13], Q = \Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$3016 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [12], Q = \Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$3015 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [11], Q = \Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$3014 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [10], Q = \Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$3013 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [9], Q = \Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$3012 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [8], Q = \Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$3011 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [7], Q = \Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$3010 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [6], Q = \Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$3009 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [5], Q = \Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$3008 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [4], Q = \Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$3007 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [3], Q = \Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$3006 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [2], Q = \Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$3005 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [1], Q = \Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$3004 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2918 [0], Q = \Address [0]).
Adding EN signal on $auto$ff.cc:262:slice$2155 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2702 [1], Q = \DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$2154 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2702 [0], Q = \DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$13203 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [30], Q = \Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$13202 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [29], Q = \Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$13201 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [28], Q = \Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$13200 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [27], Q = \Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$13199 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [26], Q = \Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$13198 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [25], Q = \Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$13197 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [24], Q = \Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$13196 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [23], Q = \Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$13195 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [22], Q = \Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$13194 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [21], Q = \Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$13193 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [20], Q = \Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$13192 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [19], Q = \Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$13191 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [18], Q = \Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$13190 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [17], Q = \Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$13189 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [16], Q = \Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$13188 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [15], Q = \Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$13187 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [14], Q = \Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$13186 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [13], Q = \Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$13185 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [12], Q = \Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$13184 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [11], Q = \Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$13183 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [10], Q = \Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$13182 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [9], Q = \Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$13181 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [8], Q = \Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$13180 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [7], Q = \Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$13179 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [6], Q = \Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$13178 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [5], Q = \Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$13177 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [4], Q = \Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$13176 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [3], Q = \Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$13175 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [2], Q = \Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$13174 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [1], Q = \Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$13173 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12667 [0], Q = \Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$13033 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8578, Q = \RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$13032 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8559, Q = \MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$13031 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8540, Q = \ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$13030 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [32], Q = \rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$13029 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [30], Q = \rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$13028 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [29], Q = \rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$13027 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [28], Q = \rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$13026 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [27], Q = \rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$13025 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [26], Q = \rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$13024 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [25], Q = \rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$13023 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [24], Q = \rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$13022 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [23], Q = \rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$13021 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [22], Q = \rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$13020 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [21], Q = \rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$13019 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [20], Q = \rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$13018 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [19], Q = \rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$13017 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [18], Q = \rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$13016 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [17], Q = \rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$13015 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [16], Q = \rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$13014 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [15], Q = \rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$13013 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [14], Q = \rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$13012 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [13], Q = \rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$13011 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [12], Q = \rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$13010 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [11], Q = \rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$13009 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [10], Q = \rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$13008 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [9], Q = \rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$13007 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [8], Q = \rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$13006 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [7], Q = \rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$13005 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [6], Q = \rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$13004 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [5], Q = \rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$13003 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [4], Q = \rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$13002 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [3], Q = \rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$13001 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [2], Q = \rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$13000 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [1], Q = \rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$12999 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8489 [0], Q = \rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$12998 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [31], Q = \EBX [31]).
Adding EN signal on $auto$ff.cc:262:slice$12997 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [30], Q = \EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$12996 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [29], Q = \EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$12995 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [28], Q = \EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$12994 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [27], Q = \EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$12993 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [26], Q = \EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$12992 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [25], Q = \EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$12991 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [24], Q = \EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$12990 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [23], Q = \EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$12989 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [22], Q = \EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$12988 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [21], Q = \EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$12987 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [20], Q = \EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$12986 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [19], Q = \EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$12985 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [18], Q = \EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$12984 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [17], Q = \EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$12983 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [16], Q = \EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$12982 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [15], Q = \EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$12981 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [14], Q = \EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$12980 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [13], Q = \EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$12979 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [12], Q = \EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$12978 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [11], Q = \EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$12977 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [10], Q = \EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$12976 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [9], Q = \EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$12975 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [8], Q = \EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$12974 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [7], Q = \EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$12973 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [6], Q = \EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$12972 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [5], Q = \EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$12971 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [4], Q = \EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$12970 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [3], Q = \EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$12969 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [2], Q = \EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$12968 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [1], Q = \EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$12967 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11696 [0], Q = \EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$12966 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [31], Q = \EAX [31]).
Adding EN signal on $auto$ff.cc:262:slice$12965 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [30], Q = \EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$12964 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [29], Q = \EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$12963 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [28], Q = \EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$12962 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [27], Q = \EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$12961 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [26], Q = \EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$12960 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [25], Q = \EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$12959 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [24], Q = \EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$12958 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [23], Q = \EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$12957 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [22], Q = \EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$12956 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [21], Q = \EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$12955 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [20], Q = \EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$12954 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [19], Q = \EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$12953 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [18], Q = \EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$12952 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [17], Q = \EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$12951 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [16], Q = \EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$12950 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [15], Q = \EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$12949 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [14], Q = \EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$12948 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [13], Q = \EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$12947 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [12], Q = \EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$12946 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [11], Q = \EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$12945 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [10], Q = \EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$12944 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [9], Q = \EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$12943 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [8], Q = \EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$12942 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [7], Q = \EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$12941 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [6], Q = \EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$12940 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [5], Q = \EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$12939 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [4], Q = \EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$12938 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [3], Q = \EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$12937 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [2], Q = \EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$12936 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [1], Q = \EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$12935 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11212 [0], Q = \EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$12934 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10656 [3], Q = \P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$12933 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10656 [2], Q = \P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$12932 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10656 [1], Q = \P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$12931 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10656 [0], Q = \P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$12930 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8597, Q = \CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$12929 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [14], Q = \P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$12928 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [13], Q = \P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$12927 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [12], Q = \P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$12926 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [11], Q = \P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$12925 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [10], Q = \P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$12924 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [9], Q = \P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$12923 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [8], Q = \P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$12922 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [7], Q = \P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$12921 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [6], Q = \P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$12920 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [5], Q = \P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$12919 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [4], Q = \P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$12918 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [3], Q = \P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$12917 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [2], Q = \P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$12916 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [1], Q = \P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$12915 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11942 [0], Q = \P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$12914 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [15], Q = \P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$12913 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [14], Q = \P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$12912 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [13], Q = \P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$12911 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [12], Q = \P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$12910 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [11], Q = \P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$12909 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [10], Q = \P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$12908 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [9], Q = \P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$12907 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [8], Q = \P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$12906 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [7], Q = \P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$12905 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [6], Q = \P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$12904 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [5], Q = \P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$12903 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [4], Q = \P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$12902 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [3], Q = \P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$12901 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [2], Q = \P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$12900 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [1], Q = \P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$12899 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12185 [0], Q = \P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$12898 ($_DFF_PP0_) from module b15 (D = $auto$rtlil.cc:2459:Mux$1194, Q = \P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$12897 ($_DFF_PP0_) from module b15 (D = $auto$rtlil.cc:2459:Mux$1208, Q = \P1.More).
Adding EN signal on $auto$ff.cc:262:slice$12896 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [31], Q = \P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$12895 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [30], Q = \P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$12894 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [29], Q = \P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$12893 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [28], Q = \P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$12892 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [27], Q = \P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$12891 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [26], Q = \P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$12890 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [25], Q = \P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$12889 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [24], Q = \P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$12888 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [23], Q = \P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$12887 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [22], Q = \P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$12886 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [21], Q = \P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$12885 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [20], Q = \P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$12884 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [19], Q = \P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$12883 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [18], Q = \P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$12882 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [17], Q = \P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$12881 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [16], Q = \P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$12880 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [15], Q = \P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$12879 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [14], Q = \P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$12878 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [13], Q = \P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$12877 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [12], Q = \P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$12876 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [11], Q = \P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$12875 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [10], Q = \P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$12874 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [9], Q = \P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$12873 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [8], Q = \P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$12872 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [7], Q = \P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$12871 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [6], Q = \P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$12870 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [5], Q = \P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$12869 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [4], Q = \P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$12868 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [3], Q = \P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$12867 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [2], Q = \P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$12866 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [1], Q = \P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$12865 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7443 [0], Q = \P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$12864 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [31], Q = \P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$12863 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [30], Q = \P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$12862 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [29], Q = \P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$12861 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [28], Q = \P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$12860 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [27], Q = \P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$12859 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [26], Q = \P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$12858 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [25], Q = \P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$12857 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [24], Q = \P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$12856 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [23], Q = \P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$12855 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [22], Q = \P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$12854 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [21], Q = \P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$12853 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [20], Q = \P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$12852 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [19], Q = \P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$12851 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [18], Q = \P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$12850 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [17], Q = \P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$12849 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [16], Q = \P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$12848 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [15], Q = \P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$12847 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7927 [14], Q = \P1.InstAddrPointer [14]).

yosys> opt_clean

3.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 7 unused cells and 3174 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~13201 debug messages>

3.23.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.23.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~53385 debug messages>
Removed a total of 17795 cells.

yosys> opt_dff

3.23.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$3000 ($_DFF_PP0_) from module b15 (D = \ByteEnable [0], Q = \BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$3001 ($_DFF_PP0_) from module b15 (D = \ByteEnable [1], Q = \BE_n [1]).
Adding EN signal on $auto$ff.cc:262:slice$3003 ($_DFF_PP0_) from module b15 (D = \ByteEnable [3], Q = \BE_n [3]).
Adding EN signal on $auto$ff.cc:262:slice$3002 ($_DFF_PP0_) from module b15 (D = \ByteEnable [2], Q = \BE_n [2]).
Adding EN signal on $auto$ff.cc:262:slice$3036 ($_DFF_PP0_) from module b15 (D = \MemoryFetch, Q = \M_IO_n).
Adding EN signal on $auto$ff.cc:262:slice$3034 ($_DFF_PP0_) from module b15 (D = $verific$n398$17, Q = \W_R_n).

yosys> opt_clean

3.23.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 12 unused cells and 15498 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.23.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.23.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.23.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_dff

3.23.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.23.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.23.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.34. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.23.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.23.37. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.24. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~2918 debug messages>

yosys> opt_merge

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_dff

3.24.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 158 unused wires.
<suppressed ~1 debug messages>

3.24.5. Finished fast OPT passes.

yosys> memory_map

3.25. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~21 debug messages>

yosys> opt_merge -nomux

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.26.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$2192 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$6070
        $auto$simplemap.cc:278:simplemap_mux$5671

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$2479 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$2469
        $auto$simplemap.cc:312:simplemap_bmux$2466


yosys> opt_dff

3.26.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$68756 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [14], Q = \P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$68534 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [15], Q = \P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$68312 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [16], Q = \P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$68090 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [17], Q = \P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$67868 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [18], Q = \P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$67646 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [19], Q = \P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$67424 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [20], Q = \P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$67202 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [21], Q = \P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$66980 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [22], Q = \P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$66758 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [23], Q = \P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$66536 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [24], Q = \P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$66314 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [25], Q = \P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$66092 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [26], Q = \P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$65870 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [27], Q = \P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$65648 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [28], Q = \P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$65426 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [29], Q = \P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$65204 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [30], Q = \P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$64982 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [31], Q = \P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$24707 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [1], Q = \P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$24485 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [2], Q = \P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$24263 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [3], Q = \P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$24041 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [4], Q = \P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$23819 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [5], Q = \P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$23503 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [6], Q = \P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$23281 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [7], Q = \P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$23059 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [8], Q = \P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$22743 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [9], Q = \P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$22521 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [10], Q = \P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$22299 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [11], Q = \P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$21513 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [12], Q = \P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$21291 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7862 [13], Q = \P1.InstAddrPointer [13]).

yosys> opt_clean

3.26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 64 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~157 debug messages>

3.26.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.26.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.26.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~639 debug messages>
Removed a total of 213 cells.

yosys> opt_share

3.26.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 216 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.26.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.26.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.26.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.26.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr -full

3.26.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.26.26. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.27. Executing ABC pass (technology mapping using ABC).

3.27.1. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Extracted 5514 gates and 5913 wires to a netlist network with 397 inputs and 460 outputs.

3.27.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/b15/abc_tmp.scr 
ABC:   #Luts =  2027  Max Lvl =  22  Avg Lvl =  10.10  [   1.25 sec. at Pass 0]
ABC:   #Luts =  1570  Max Lvl =  19  Avg Lvl =   9.38  [  51.67 sec. at Pass 1]
ABC:   #Luts =  1502  Max Lvl =  19  Avg Lvl =   7.63  [   8.32 sec. at Pass 2]
ABC:   #Luts =  1459  Max Lvl =  20  Avg Lvl =   7.44  [  10.65 sec. at Pass 3]
ABC:   #Luts =  1453  Max Lvl =  20  Avg Lvl =   7.54  [   6.28 sec. at Pass 4]
ABC:   #Luts =  1433  Max Lvl =  20  Avg Lvl =   8.13  [  15.08 sec. at Pass 5]
ABC:   #Luts =  1433  Max Lvl =  20  Avg Lvl =   8.13  [   8.60 sec. at Pass 6]
ABC:   #Luts =  1423  Max Lvl =  19  Avg Lvl =   8.03  [  13.12 sec. at Pass 7]
ABC:   #Luts =  1411  Max Lvl =  20  Avg Lvl =   7.45  [   9.80 sec. at Pass 8]
ABC:   #Luts =  1408  Max Lvl =  18  Avg Lvl =   8.07  [  14.10 sec. at Pass 9]
ABC:   #Luts =  1408  Max Lvl =  18  Avg Lvl =   8.07  [   9.30 sec. at Pass 10]
ABC:   #Luts =  1398  Max Lvl =  20  Avg Lvl =   7.91  [  14.99 sec. at Pass 11]
ABC:   #Luts =  1393  Max Lvl =  18  Avg Lvl =   7.70  [   6.51 sec. at Pass 12]
ABC:   #Luts =  1380  Max Lvl =  19  Avg Lvl =   7.94  [  16.68 sec. at Pass 13]
ABC:   #Luts =  1377  Max Lvl =  20  Avg Lvl =   8.03  [  12.85 sec. at Pass 14]
ABC:   #Luts =  1365  Max Lvl =  19  Avg Lvl =   8.17  [  19.05 sec. at Pass 15]
ABC:   #Luts =  1365  Max Lvl =  19  Avg Lvl =   8.17  [  13.23 sec. at Pass 16]
ABC:   #Luts =  1361  Max Lvl =  18  Avg Lvl =   8.19  [  19.72 sec. at Pass 17]
ABC:   #Luts =  1352  Max Lvl =  19  Avg Lvl =   7.69  [   9.13 sec. at Pass 18]
ABC:   #Luts =  1352  Max Lvl =  19  Avg Lvl =   7.69  [  13.61 sec. at Pass 19]
ABC:   #Luts =  1351  Max Lvl =  17  Avg Lvl =   7.67  [   9.58 sec. at Pass 20]
ABC:   #Luts =  1351  Max Lvl =  17  Avg Lvl =   7.67  [  11.85 sec. at Pass 21]
ABC:   #Luts =  1349  Max Lvl =  17  Avg Lvl =   7.67  [   9.72 sec. at Pass 22]
ABC:   #Luts =  1349  Max Lvl =  17  Avg Lvl =   7.67  [  12.24 sec. at Pass 23]
ABC:   #Luts =  1346  Max Lvl =  18  Avg Lvl =   7.86  [  10.15 sec. at Pass 24]
ABC:   #Luts =  1344  Max Lvl =  19  Avg Lvl =   8.13  [  14.70 sec. at Pass 25]
ABC:   #Luts =  1344  Max Lvl =  19  Avg Lvl =   8.13  [  12.09 sec. at Pass 26]
ABC:   #Luts =  1344  Max Lvl =  19  Avg Lvl =   8.13  [  18.84 sec. at Pass 27]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.27.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1349
ABC RESULTS:        internal signals:     5056
ABC RESULTS:           input signals:      397
ABC RESULTS:          output signals:      460
Removing temp directory.

yosys> opt

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 1984 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.28.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.28.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.29. Printing statistics.

=== b15 ===

   Number of wires:               1399
   Number of wire bits:           1804
   Number of public wires:          50
   Number of public wire bits:     455
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1764
     $_DFFE_PP0P_                  415
     $lut                         1347
     $mux                            2


yosys> shregmap -minlen 8 -maxlen 20

3.30. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.31. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.32. Printing statistics.

=== b15 ===

   Number of wires:               1399
   Number of wire bits:           1804
   Number of public wires:          50
   Number of public wire bits:     455
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1764
     $_DFFE_PP0P_                  415
     $lut                         1347
     $mux                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.33. Executing TECHMAP pass (map to technology primitives).

3.33.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.33.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2307 debug messages>

yosys> opt_expr -mux_undef

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~35659 debug messages>

yosys> simplemap

3.35. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~14778 debug messages>
Removed a total of 4926 cells.

yosys> opt_dff -nodffe -nosdff

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 5539 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~1100 debug messages>

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 316 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Extracted 5454 gates and 5852 wires to a netlist network with 396 inputs and 454 outputs.

3.41.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/b15/abc_tmp.scr 
ABC:   #Luts =  1360  Max Lvl =  21  Avg Lvl =   8.96  [   0.55 sec. at Pass 0]
ABC:   #Luts =  1358  Max Lvl =  22  Avg Lvl =   9.21  [  38.34 sec. at Pass 1]
ABC:   #Luts =  1341  Max Lvl =  18  Avg Lvl =   8.19  [  12.56 sec. at Pass 2]
ABC:   #Luts =  1340  Max Lvl =  16  Avg Lvl =   8.00  [  13.04 sec. at Pass 3]
ABC:   #Luts =  1337  Max Lvl =  16  Avg Lvl =   8.24  [  11.85 sec. at Pass 4]
ABC:   #Luts =  1330  Max Lvl =  19  Avg Lvl =   8.55  [  15.52 sec. at Pass 5]
ABC:   #Luts =  1330  Max Lvl =  19  Avg Lvl =   8.55  [   9.80 sec. at Pass 6]
ABC:   #Luts =  1324  Max Lvl =  15  Avg Lvl =   7.38  [  14.67 sec. at Pass 7]
ABC:   #Luts =  1324  Max Lvl =  15  Avg Lvl =   7.38  [  11.53 sec. at Pass 8]
ABC:   #Luts =  1315  Max Lvl =  16  Avg Lvl =   7.67  [  13.92 sec. at Pass 9]
ABC:   #Luts =  1315  Max Lvl =  16  Avg Lvl =   7.67  [   7.08 sec. at Pass 10]
ABC:   #Luts =  1308  Max Lvl =  15  Avg Lvl =   7.43  [  14.39 sec. at Pass 11]
ABC:   #Luts =  1306  Max Lvl =  16  Avg Lvl =   7.36  [   9.67 sec. at Pass 12]
ABC:   #Luts =  1304  Max Lvl =  16  Avg Lvl =   7.64  [  14.37 sec. at Pass 13]
ABC:   #Luts =  1301  Max Lvl =  16  Avg Lvl =   7.50  [   7.59 sec. at Pass 14]
ABC:   #Luts =  1297  Max Lvl =  16  Avg Lvl =   7.35  [  13.52 sec. at Pass 15]
ABC:   #Luts =  1295  Max Lvl =  16  Avg Lvl =   7.49  [   7.44 sec. at Pass 16]
ABC:   #Luts =  1292  Max Lvl =  16  Avg Lvl =   7.65  [  13.88 sec. at Pass 17]
ABC:   #Luts =  1287  Max Lvl =  16  Avg Lvl =   7.12  [   9.72 sec. at Pass 18]
ABC:   #Luts =  1280  Max Lvl =  15  Avg Lvl =   7.22  [  11.75 sec. at Pass 19]
ABC:   #Luts =  1280  Max Lvl =  15  Avg Lvl =   7.22  [   7.90 sec. at Pass 20]
ABC:   #Luts =  1280  Max Lvl =  15  Avg Lvl =   7.22  [  12.14 sec. at Pass 21]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1284
ABC RESULTS:        internal signals:     5002
ABC RESULTS:           input signals:      396
ABC RESULTS:          output signals:      454
Removing temp directory.

yosys> opt

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 4711 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \b15

3.43.2. Analyzing design hierarchy..
Top module:  \b15
Removed 0 unused modules.

yosys> stat

3.44. Printing statistics.

=== b15 ===

   Number of wires:               1333
   Number of wire bits:           1738
   Number of public wires:          50
   Number of public wire bits:     455
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1698
     $lut                         1283
     dffsre                        415


yosys> opt_clean -purge

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> write_verilog -noattr -nohex b15.verilog

3.46. Executing Verilog backend.

yosys> bmuxmap

3.46.1. Executing BMUXMAP pass.

yosys> demuxmap

3.46.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b15'.

End of script. Logfile hash: 8d65f771ee, CPU: user 46.43s system 0.35s, MEM: 110.57 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 99% 2x abc (4648 sec), 0% 58x opt_expr (15 sec), ...
real 760.70
user 4400.58
sys 293.85
