
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k spi_defines.vh spi_clgen.v spi_shift.v spi_top.v timescale.v

yosys> verific -vlog2k spi_defines.vh spi_clgen.v spi_shift.v spi_top.v timescale.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_clgen.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_shift.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'timescale.v'

yosys> synth_rs -top spi_top -tech generic -goal area -no_dsp -no_bram -verilog spi_top.verilog

3. Executing synth_rs pass.

yosys> hierarchy -check -top spi_top

3.1. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] spi_top.v:43: compiling module 'spi_top'
VERIFIC-WARNING [VERI-2371] spi_top.v:143: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:152: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:154: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:164: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:166: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:168: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:175: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:186: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:219: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:237: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:242: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] spi_clgen.v:42: compiling module 'spi_clgen'
VERIFIC-WARNING [VERI-2371] spi_clgen.v:72: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:76: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:78: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:86: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:88: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:96: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:97: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:101: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:102: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] spi_shift.v:42: compiling module 'spi_shift'
VERIFIC-WARNING [VERI-2371] spi_shift.v:93: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:97: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:99: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:107: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:109: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:111: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:118: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:120: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:127: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:132: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:134: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:136: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:138: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:143: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:147: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:149: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:154: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:156: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:158: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:160: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:169: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:171: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:232: delay control is not supported for synthesis
Importing module spi_top.
Importing module spi_clgen.
Importing module spi_shift.

3.1.1. Analyzing design hierarchy..
Top module:  \spi_top
Used module:     \spi_shift
Used module:     \spi_clgen

3.1.2. Analyzing design hierarchy..
Top module:  \spi_top
Used module:     \spi_shift
Used module:     \spi_clgen
Removed 0 unused modules.

yosys> proc

3.2. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.2.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.2.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.2.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_shift.
<suppressed ~2 debug messages>
Optimizing module spi_clgen.
<suppressed ~2 debug messages>
Optimizing module spi_top.
<suppressed ~5 debug messages>

yosys> flatten

3.3. Executing FLATTEN pass (flatten design).
Deleting now unused module spi_shift.
Deleting now unused module spi_clgen.
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.4. Executing TRIBUF pass.

yosys> opt_expr

3.5. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_clean

3.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 305 unused wires.
<suppressed ~45 debug messages>

yosys> check

3.7. Executing CHECK pass (checking for obvious problems).
Checking module spi_top...
Found and reported 0 problems.

yosys> deminout

3.8. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt -nodffe -nosdff

3.9. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

3.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wb_int_o_reg$spi_top.v:168$139 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$wb_dat_o_reg$spi_top.v:145$126 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$wb_ack_o_reg$spi_top.v:154$131 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$ss_reg$spi_top.v:268$176 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$cnt_reg$spi_clgen.v:79$443 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$divider_reg$spi_top.v:206$149 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$ctrl_reg$spi_top.v:222$162 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$tip_reg$spi_shift.v:111$711 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$s_out_reg$spi_shift.v:120$716 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$clk_out_reg$spi_clgen.v:88$452 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$cnt_reg$spi_shift.v:100$702 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$pos_edge_reg$spi_clgen.v:103$469 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$neg_edge_reg$spi_clgen.v:103$470 ($aldff) from module spi_top.

yosys> opt_clean

3.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.9.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.9.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.9.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.10. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.10.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.10.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.10.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> fsm_opt

3.10.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$wb_int_o_reg$spi_top.v:168$139 ($adff) from module spi_top (D = $verific$n351$62, Q = \wb_int_o).
Adding EN signal on $verific$ss_reg$spi_top.v:268$176 ($adff) from module spi_top (D = \wb_dat_i [7:0], Q = \ss).
Adding EN signal on $verific$divider_reg$spi_top.v:206$149 ($adff) from module spi_top (D = \wb_dat_i [7:0], Q = \divider [7:0]).
Adding EN signal on $verific$divider_reg$spi_top.v:206$149 ($adff) from module spi_top (D = \wb_dat_i [15:8], Q = \divider [15:8]).
Adding EN signal on $verific$ctrl_reg$spi_top.v:222$162 ($adff) from module spi_top (D = $verific$n461$86, Q = \ctrl [7:0]).
Adding EN signal on $verific$ctrl_reg$spi_top.v:222$162 ($adff) from module spi_top (D = \wb_dat_i [13:9], Q = \ctrl [13:9]).
Adding EN signal on $verific$ctrl_reg$spi_top.v:222$162 ($adff) from module spi_top (D = $verific$n504$89 [8], Q = \ctrl [8]).
Adding EN signal on $flatten\shift.$verific$tip_reg$spi_shift.v:111$711 ($adff) from module spi_top (D = $flatten\shift.$verific$n333$491, Q = \shift.tip).
Adding EN signal on $flatten\shift.$verific$s_out_reg$spi_shift.v:120$716 ($adff) from module spi_top (D = $flatten\shift.$verific$n339$493, Q = \shift.s_out).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [96], Q = \shift.data [96]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [97], Q = \shift.data [97]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [98], Q = \shift.data [98]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [99], Q = \shift.data [99]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [100], Q = \shift.data [100]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [101], Q = \shift.data [101]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [102], Q = \shift.data [102]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [103], Q = \shift.data [103]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [64], Q = \shift.data [64]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [65], Q = \shift.data [65]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [66], Q = \shift.data [66]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [67], Q = \shift.data [67]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [68], Q = \shift.data [68]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [69], Q = \shift.data [69]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [70], Q = \shift.data [70]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [71], Q = \shift.data [71]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [32], Q = \shift.data [32]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [33], Q = \shift.data [33]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [34], Q = \shift.data [34]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [35], Q = \shift.data [35]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [36], Q = \shift.data [36]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [37], Q = \shift.data [37]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [38], Q = \shift.data [38]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [39], Q = \shift.data [39]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [0], Q = \shift.data [0]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [1], Q = \shift.data [1]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [2], Q = \shift.data [2]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [3], Q = \shift.data [3]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [4], Q = \shift.data [4]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [5], Q = \shift.data [5]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [6], Q = \shift.data [6]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [7], Q = \shift.data [7]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [104], Q = \shift.data [104]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [105], Q = \shift.data [105]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [106], Q = \shift.data [106]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [107], Q = \shift.data [107]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [108], Q = \shift.data [108]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [109], Q = \shift.data [109]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [110], Q = \shift.data [110]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [111], Q = \shift.data [111]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [72], Q = \shift.data [72]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [73], Q = \shift.data [73]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [74], Q = \shift.data [74]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [75], Q = \shift.data [75]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [76], Q = \shift.data [76]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [77], Q = \shift.data [77]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [78], Q = \shift.data [78]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [79], Q = \shift.data [79]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [40], Q = \shift.data [40]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [41], Q = \shift.data [41]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [42], Q = \shift.data [42]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [43], Q = \shift.data [43]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [44], Q = \shift.data [44]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [45], Q = \shift.data [45]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [46], Q = \shift.data [46]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [47], Q = \shift.data [47]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [8], Q = \shift.data [8]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [9], Q = \shift.data [9]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [10], Q = \shift.data [10]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [11], Q = \shift.data [11]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [12], Q = \shift.data [12]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [13], Q = \shift.data [13]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [14], Q = \shift.data [14]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [15], Q = \shift.data [15]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [112], Q = \shift.data [112]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [113], Q = \shift.data [113]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [114], Q = \shift.data [114]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [115], Q = \shift.data [115]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [116], Q = \shift.data [116]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [117], Q = \shift.data [117]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [118], Q = \shift.data [118]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [119], Q = \shift.data [119]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [80], Q = \shift.data [80]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [81], Q = \shift.data [81]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [82], Q = \shift.data [82]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [83], Q = \shift.data [83]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [84], Q = \shift.data [84]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [85], Q = \shift.data [85]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [86], Q = \shift.data [86]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [87], Q = \shift.data [87]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [48], Q = \shift.data [48]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [49], Q = \shift.data [49]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [50], Q = \shift.data [50]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [51], Q = \shift.data [51]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [52], Q = \shift.data [52]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [53], Q = \shift.data [53]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [54], Q = \shift.data [54]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [55], Q = \shift.data [55]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [16], Q = \shift.data [16]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [17], Q = \shift.data [17]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [18], Q = \shift.data [18]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [19], Q = \shift.data [19]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [20], Q = \shift.data [20]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [21], Q = \shift.data [21]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [22], Q = \shift.data [22]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [23], Q = \shift.data [23]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [120], Q = \shift.data [120]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [121], Q = \shift.data [121]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [122], Q = \shift.data [122]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [123], Q = \shift.data [123]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [124], Q = \shift.data [124]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [125], Q = \shift.data [125]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [126], Q = \shift.data [126]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [127], Q = \shift.data [127]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [88], Q = \shift.data [88]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [89], Q = \shift.data [89]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [90], Q = \shift.data [90]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [91], Q = \shift.data [91]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [92], Q = \shift.data [92]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [93], Q = \shift.data [93]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [94], Q = \shift.data [94]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [95], Q = \shift.data [95]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [56], Q = \shift.data [56]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [57], Q = \shift.data [57]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [58], Q = \shift.data [58]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [59], Q = \shift.data [59]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [60], Q = \shift.data [60]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [61], Q = \shift.data [61]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [62], Q = \shift.data [62]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [63], Q = \shift.data [63]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [24], Q = \shift.data [24]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [25], Q = \shift.data [25]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [26], Q = \shift.data [26]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [27], Q = \shift.data [27]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [28], Q = \shift.data [28]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [29], Q = \shift.data [29]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [30], Q = \shift.data [30]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [31], Q = \shift.data [31]).
Adding EN signal on $flatten\shift.$verific$cnt_reg$spi_shift.v:100$702 ($adff) from module spi_top (D = $flatten\shift.$verific$n306$644, Q = \shift.cnt).
Adding EN signal on $flatten\clgen.$verific$clk_out_reg$spi_clgen.v:88$452 ($adff) from module spi_top (D = $flatten\clgen.$verific$n119$408, Q = \clgen.clk_out).

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~131 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~1500 debug messages>
Removed a total of 500 cells.

yosys> opt_dff -sat

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 500 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.11.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.12. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell spi_top.$verific$equal_16$spi_top.v:105$115 ($eq).
Removed top 1 bits (of 3) from port B of cell spi_top.$verific$equal_20$spi_top.v:106$116 ($eq).
Removed top 1 bits (of 3) from port B of cell spi_top.$verific$equal_24$spi_top.v:107$117 ($eq).
Removed top 7 bits (of 8) from port B of cell spi_top.$verific$or_126$spi_top.v:217$153 ($or).
Removed top 5 bits (of 14) from mux cell spi_top.$verific$mux_147$spi_top.v:222$161 ($mux).
Removed top 3 bits (of 4) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1226 ($ne).
Removed top 2 bits (of 3) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1228 ($ne).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1230 ($ne).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1124 ($ne).
Removed top 2 bits (of 3) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1122 ($ne).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1018 ($ne).
Removed top 96 bits (of 128) from mux cell spi_top.$flatten\shift.$verific$mux_350$spi_shift.v:232$876 ($mux).
Removed top 64 bits (of 128) from mux cell spi_top.$flatten\shift.$verific$mux_349$spi_shift.v:232$875 ($mux).
Removed top 32 bits (of 128) from mux cell spi_top.$flatten\shift.$verific$mux_348$spi_shift.v:232$874 ($mux).
Removed top 127 bits (of 128) from port A of cell spi_top.$flatten\shift.$verific$Decoder_218$spi_shift.v:232$744 ($shl).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_17$spi_shift.v:82$684 ($mux).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_16$spi_shift.v:82$683 ($mux).
Removed top 1 bits (of 8) from port Y of cell spi_top.$flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
Removed top 1 bits (of 8) from port A of cell spi_top.$flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
Removed top 1 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_13$spi_shift.v:81$681 ($mux).
Removed top 7 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
Removed top 1 bits (of 8) from port Y of cell spi_top.$flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
Removed top 1 bits (of 8) from port A of cell spi_top.$flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_8$spi_shift.v:80$678 ($mux).
Removed top 7 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$sub_7$spi_shift.v:80$677 ($sub).
Removed top 1 bits (of 8) from port Y of cell spi_top.$flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
Removed top 1 bits (of 8) from port A of cell spi_top.$flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
Removed top 1 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
Removed cell spi_top.$flatten\shift.$verific$i6$spi_shift.v:80$675 ($not).
Removed top 15 bits (of 16) from port B of cell spi_top.$flatten\clgen.$verific$sub_12$spi_clgen.v:78$441 ($sub).
Removed top 15 bits (of 16) from port B of cell spi_top.$flatten\clgen.$verific$equal_5$spi_clgen.v:66$436 ($eq).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$2574 ($ne).
Removed top 5 bits (of 6) from mux cell spi_top.$verific$mux_176$spi_top.v:219$145 ($mux).
Removed top 32 bits (of 128) from wire spi_top.$flatten\shift.$verific$n1142$652.
Removed top 64 bits (of 128) from wire spi_top.$flatten\shift.$verific$n1271$653.
Removed top 1 bits (of 8) from wire spi_top.$flatten\shift.$verific$n135$631.
Removed top 127 bits (of 128) from wire spi_top.$flatten\shift.$verific$n1400$654.
Removed top 4 bits (of 8) from wire spi_top.$flatten\shift.$verific$n144$632.
Removed top 4 bits (of 8) from wire spi_top.$flatten\shift.$verific$n174$634.
Removed top 2 bits (of 8) from wire spi_top.$flatten\shift.$verific$n183$635.
Removed top 2 bits (of 8) from wire spi_top.$flatten\shift.$verific$n192$636.
Removed top 4 bits (of 8) from wire spi_top.$flatten\shift.$verific$n210$637.
Removed top 5 bits (of 14) from wire spi_top.$verific$n504$89.
Removed top 5 bits (of 6) from wire spi_top.$verific$n786$100.

yosys> peepopt

3.13. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.14. Executing PMUXTREE pass.

yosys> opt_clean

3.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> techmap

3.16. Executing TECHMAP pass (map to technology primitives).

3.16.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.16.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$constmap:5090bc8fbcf3ae403956334bfa77f78b3de013ab$paramod$0b7ef1ec7ff4cd51af214180028bea8c50fdcd6a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_or.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=7:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=7:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=7:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=7:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=7:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=7:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=16:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=16:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=16:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=16:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=16:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=16:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$dbcdc7e8aa1a4080cea2deda6fdc8772064f4d90\_90_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
No more expansions possible.
<suppressed ~3292 debug messages>

yosys> alumacc

3.17. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module spi_top:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.18. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~268 debug messages>

yosys> opt_merge -nomux

3.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~1332 debug messages>
Removed a total of 444 cells.

yosys> opt_muxtree

3.18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 42 unused cells and 732 unused wires.
<suppressed ~43 debug messages>

yosys> opt_expr

3.18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.18.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.18.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.18.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.18.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.19. Executing MEMORY pass.

yosys> opt_mem

3.19.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.19.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.19.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.19.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.19.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> memory_share

3.19.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.19.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> memory_collect

3.19.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr -mux_undef

3.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~374 debug messages>

yosys> simplemap

3.22. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge

3.24. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.25. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 139 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.27.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~136 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Extracted 1754 gates and 1993 wires to a netlist network with 238 inputs and 340 outputs.

3.33.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_09-03-2022T20-36-44/All_lut_synth_rs_area.json/spi/abc_tmp.scr 
ABC: netlist  : i/o =    238/    340  and =    3477  lev =   29 (22.72)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    588  edge =    2931  lev =    9 (6.76)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2857  lev =   29 (21.72)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    545  edge =    2431  lev =    7 (6.01)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2796  lev =   27 (19.72)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    550  edge =    2412  lev =    8 (6.10)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2714  lev =   29 (21.84)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    544  edge =    2413  lev =    9 (6.81)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2780  lev =   29 (21.34)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    547  edge =    2412  lev =    7 (5.83)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2698  lev =   27 (20.92)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    539  edge =    2331  lev =    7 (5.74)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2750  lev =   27 (21.05)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    536  edge =    2381  lev =    7 (5.67)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2678  lev =   27 (20.84)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    535  edge =    2318  lev =    8 (6.05)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2694  lev =   24 (19.41)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    540  edge =    2322  lev =    8 (6.06)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2672  lev =   27 (20.78)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    537  edge =    2307  lev =    7 (6.06)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2671  lev =   27 (20.76)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    535  edge =    2303  lev =    7 (5.68)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2677  lev =   27 (20.77)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    535  edge =    2305  lev =    7 (5.68)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2675  lev =   27 (20.77)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    537  edge =    2304  lev =    7 (6.05)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2671  lev =   27 (20.76)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    535  edge =    2303  lev =    7 (5.68)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2671  lev =   27 (20.76)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    535  edge =    2303  lev =    7 (5.68)  mem = 0.03 MB
ABC: netlist  : i/o =    238/    340  and =    2682  lev =   27 (21.09)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    535  edge =    2303  lev =    7 (5.68)  mem = 0.03 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      536
ABC RESULTS:        internal signals:     1415
ABC RESULTS:           input signals:      238
ABC RESULTS:          output signals:      340
Removing temp directory.

yosys> opt

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 1019 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.34.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.34.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.34.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.34.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.34.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.35. Executing HIERARCHY pass (managing design hierarchy).

3.35.1. Analyzing design hierarchy..
Top module:  \spi_top

3.35.2. Analyzing design hierarchy..
Top module:  \spi_top
Removed 0 unused modules.

yosys> stat

3.36. Printing statistics.

=== spi_top ===

   Number of wires:                556
   Number of wire bits:           1176
   Number of public wires:          60
   Number of public wire bits:     680
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                765
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     35
     $_DFF_PP1_                     16
     $lut                          536


yosys> opt_clean -purge

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 27 unused wires.
<suppressed ~27 debug messages>

yosys> write_verilog -noattr -nohex spi_top.verilog

3.38. Executing Verilog backend.

yosys> bmuxmap

3.38.1. Executing BMUXMAP pass.

yosys> demuxmap

3.38.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\spi_top'.

Warnings: 51 unique messages, 51 total
End of script. Logfile hash: d4f98a9889, CPU: user 4.74s system 0.04s, MEM: 31.95 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 66% 1x abc (9 sec), 10% 32x opt_expr (1 sec), ...
