
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k control.v conv2d.v ksa.v ksa1.v tfl.v

yosys> verific -vlog2k control.v conv2d.v ksa.v ksa1.v tfl.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'control.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'conv2d.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ksa.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ksa1.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tfl.v'
VERIFIC-WARNING [VERI-1407] tfl.v:385: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:260: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:254: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:248: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:241: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:237: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:236: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:225: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:221: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:219: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:218: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:217: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:216: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:215: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:214: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:213: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:212: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:211: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:210: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:209: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:206: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:160: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:158: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:156: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:149: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:144: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:129: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:128: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:5: attribute target identifier 'pad' not found in this scope

yosys> synth_rs -top top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.36

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] tfl.v:2: compiling module 'top'
VERIFIC-INFO [VERI-1018] control.v:1: compiling module 'CONTROL'
VERIFIC-WARNING [VERI-1209] control.v:155: expression size 32 truncated to fit in target size 16
VERIFIC-WARNING [VERI-1209] control.v:161: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] control.v:166: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] control.v:171: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] control.v:205: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] control.v:209: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] control.v:213: expression size 21 truncated to fit in target size 20
VERIFIC-INFO [VERI-1018] conv2d.v:2: compiling module 'conv2d'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=20)'
VERIFIC-WARNING [VERI-1209] conv2d.v:418: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:435: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:442: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:449: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:456: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:463: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:470: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:477: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:540: expression size 14 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] conv2d.v:606: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:630: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:638: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:669: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:672: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:673: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:681: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:685: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:687: expression size 32 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] conv2d.v:688: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:689: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:717: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:720: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:721: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:729: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:733: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:735: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:736: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:842: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:867: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:869: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:874: expression size 17 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=24)'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=16)'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=12)'
VERIFIC-INFO [VERI-1018] ksa1.v:1: compiling module 'ksa1(WIDTH=12)'
VERIFIC-WARNING [VERI-1209] conv2d.v:1119: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1138: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1153: expression size 3 truncated to fit in target size 2
VERIFIC-WARNING [VERI-1209] conv2d.v:1156: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1169: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1173: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1181: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1199: expression size 17 truncated to fit in target size 16
Importing module top.
Importing module CONTROL.
Importing module conv2d.
Importing module ksa(WIDTH=12).
Importing module ksa(WIDTH=16).
Importing module ksa(WIDTH=20).
Importing module ksa(WIDTH=24).
Importing module ksa1(WIDTH=12).

3.3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \conv2d
Used module:         \ksa1(WIDTH=12)
Used module:         \ksa(WIDTH=12)
Used module:         \ksa(WIDTH=16)
Used module:         \ksa(WIDTH=24)
Used module:         \ksa(WIDTH=20)
Used module:     \CONTROL

3.3.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \conv2d
Used module:         \ksa1(WIDTH=12)
Used module:         \ksa(WIDTH=12)
Used module:         \ksa(WIDTH=16)
Used module:         \ksa(WIDTH=24)
Used module:         \ksa(WIDTH=20)
Used module:     \CONTROL
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module ksa1(WIDTH=12).
Optimizing module ksa(WIDTH=24).
Optimizing module ksa(WIDTH=20).
Optimizing module ksa(WIDTH=16).
Optimizing module ksa(WIDTH=12).
Optimizing module conv2d.
<suppressed ~168 debug messages>
Optimizing module CONTROL.
<suppressed ~41 debug messages>
Optimizing module top.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module ksa1(WIDTH=12).
Deleting now unused module ksa(WIDTH=24).
Deleting now unused module ksa(WIDTH=20).
Deleting now unused module ksa(WIDTH=16).
Deleting now unused module ksa(WIDTH=12).
Deleting now unused module conv2d.
Deleting now unused module CONTROL.
<suppressed ~23 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 108 unused cells and 4457 unused wires.
<suppressed ~539 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [0]
    wire \u_conv2d.pk2.c_gen [10]
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [10]
    wire \u_conv2d.pk2.c_gen [10]
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [1]
    wire \u_conv2d.pk2.c_gen [10]
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [2]
    wire \u_conv2d.pk2.c_gen [10]
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [3]
    wire \u_conv2d.pk2.c_gen [10]
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [4]
    wire \u_conv2d.pk2.c_gen [10]
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [5]
    wire \u_conv2d.pk2.c_gen [10]
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [6]
    wire \u_conv2d.pk2.c_gen [10]
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [7]
    wire \u_conv2d.pk2.c_gen [10]
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [8]
    wire \u_conv2d.pk2.c_gen [10]
Warning: found logic loop in module top:
    cell $flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and)
    cell $flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or)
    wire $flatten\u_conv2d.\pk2.$verific$n206$5291 [9]
    wire \u_conv2d.pk2.c_gen [10]
Found and reported 11 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\u_conv2d.$verific$i1027$conv2d.v:1124$4260: \u_conv2d.filter_reload -> 1'0
      Replacing known input bits on port A of cell $flatten\u_conv2d.$verific$i1014$conv2d.v:1113$4251: \u_conv2d.filter_reload -> 1'1
      Replacing known input bits on port A of cell $flatten\u_conv2d.$verific$i357$conv2d.v:607$2825: \u_conv2d.i_bias_wen -> 1'0
      Replacing known input bits on port A of cell $flatten\u_conv2d.$verific$i727$conv2d.v:843$3047: \u_conv2d.i_pixel_wen -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~154 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_1181$conv2d.v:1245$4344: { $flatten\u_conv2d.$verific$n11580$1926 $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11249$1917 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_1184$conv2d.v:1245$4347: { $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11249$1917 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_1194$conv2d.v:1245$4356: { $flatten\u_conv2d.$verific$n11615$1934 $flatten\u_conv2d.$verific$n11256$1924 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_1197$conv2d.v:1245$4359: { $flatten\u_conv2d.$verific$n11617$1936 $flatten\u_conv2d.$verific$n11618$1937 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_1203$conv2d.v:1245$4363: { $flatten\u_conv2d.$verific$n11636$1940 $flatten\u_conv2d.$verific$n11249$1917 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_632$conv2d.v:784$2969: { $flatten\u_conv2d.$verific$n6557$1815 $auto$opt_reduce.cc:134:opt_pmux$5324 $flatten\u_conv2d.$verific$n6560$1818 $flatten\u_conv2d.$verific$n6561$1819 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_633$conv2d.v:784$2970: { $flatten\u_conv2d.$verific$n6557$1815 $auto$opt_reduce.cc:134:opt_pmux$5326 $flatten\u_conv2d.$verific$n6560$1818 $flatten\u_conv2d.$verific$n6561$1819 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_638$conv2d.v:784$2975: $auto$opt_reduce.cc:134:opt_pmux$5328
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_640$conv2d.v:784$2976: $auto$opt_reduce.cc:134:opt_pmux$5330
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_643$conv2d.v:784$2979: { $flatten\u_conv2d.$verific$n6698$1825 $auto$opt_reduce.cc:134:opt_pmux$5332 $flatten\u_conv2d.$verific$n6560$1818 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_826$conv2d.v:912$3107: { $flatten\u_conv2d.$verific$n8234$1854 $flatten\u_conv2d.$verific$n8268$1858 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_828$conv2d.v:912$3108: { $flatten\u_conv2d.$verific$n8234$1854 $flatten\u_conv2d.$verific$n8268$1858 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_106$conv2d.v:223$2508: { $flatten\u_conv2d.$verific$n851$1736 $flatten\u_conv2d.$verific$n852$1737 $flatten\u_conv2d.$verific$n853$1738 $flatten\u_conv2d.$verific$n854$1739 $flatten\u_conv2d.$verific$n856$1741 $flatten\u_conv2d.$verific$n858$1743 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1164$conv2d.v:1245$4327: { $flatten\u_conv2d.$verific$n11242$1910 $flatten\u_conv2d.$verific$n11251$1919 $flatten\u_conv2d.$verific$n11256$1924 $auto$opt_reduce.cc:134:opt_pmux$5334 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1165$conv2d.v:1245$4328: { $auto$opt_reduce.cc:134:opt_pmux$5338 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$5336 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1166$conv2d.v:1245$4329: { $auto$opt_reduce.cc:134:opt_pmux$5342 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$5340 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1167$conv2d.v:1245$4330: { $auto$opt_reduce.cc:134:opt_pmux$5346 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$5344 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1168$conv2d.v:1245$4331: { $auto$opt_reduce.cc:134:opt_pmux$5350 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$5348 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1169$conv2d.v:1245$4332: { $auto$opt_reduce.cc:134:opt_pmux$5354 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$5352 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1170$conv2d.v:1245$4333: { $auto$opt_reduce.cc:134:opt_pmux$5358 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$5356 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1171$conv2d.v:1245$4334: { $auto$opt_reduce.cc:134:opt_pmux$5362 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$5360 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1172$conv2d.v:1245$4335: { $auto$opt_reduce.cc:134:opt_pmux$5366 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$5364 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1173$conv2d.v:1245$4336: { $flatten\u_conv2d.$verific$n11242$1910 $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11244$1912 $flatten\u_conv2d.$verific$n11245$1913 $auto$opt_reduce.cc:134:opt_pmux$5368 $flatten\u_conv2d.$verific$n11248$1916 $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11250$1918 $flatten\u_conv2d.$verific$n11251$1919 $flatten\u_conv2d.$verific$n11252$1920 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $flatten\u_conv2d.$verific$n11255$1923 $flatten\u_conv2d.$verific$n11256$1924 $flatten\u_conv2d.$verific$n11257$1925 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1174$conv2d.v:1245$4337: { $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11251$1919 $flatten\u_conv2d.$verific$n11252$1920 $auto$opt_reduce.cc:134:opt_pmux$5370 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1175$conv2d.v:1245$4338: { $auto$opt_reduce.cc:134:opt_pmux$5374 $auto$opt_reduce.cc:134:opt_pmux$5372 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1176$conv2d.v:1245$4339: { $auto$opt_reduce.cc:134:opt_pmux$5378 $auto$opt_reduce.cc:134:opt_pmux$5376 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1177$conv2d.v:1245$4340: { $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11251$1919 $auto$opt_reduce.cc:134:opt_pmux$5380 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1178$conv2d.v:1245$4341: { $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11253$1921 $auto$opt_reduce.cc:134:opt_pmux$5382 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1179$conv2d.v:1245$4342: { $flatten\u_conv2d.$verific$n11243$1911 $auto$opt_reduce.cc:134:opt_pmux$5384 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1182$conv2d.v:1245$4345: { $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11252$1920 $auto$opt_reduce.cc:134:opt_pmux$5386 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1189$conv2d.v:1245$4352: { $flatten\u_conv2d.$verific$n11251$1919 $auto$opt_reduce.cc:134:opt_pmux$5388 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1190$conv2d.v:1245$4353: { $flatten\u_conv2d.$verific$n11248$1916 $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$5392 $auto$opt_reduce.cc:134:opt_pmux$5390 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1191$conv2d.v:1245$4354: { $flatten\u_conv2d.$verific$n11248$1916 $flatten\u_conv2d.$verific$n11251$1919 $auto$opt_reduce.cc:134:opt_pmux$5394 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1201$conv2d.v:1245$4361: { $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11250$1918 $flatten\u_conv2d.$verific$n11251$1919 $flatten\u_conv2d.$verific$n11252$1920 $auto$opt_reduce.cc:134:opt_pmux$5396 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_409$conv2d.v:648$2862: { $flatten\u_conv2d.$verific$n5060$1775 $auto$opt_reduce.cc:134:opt_pmux$5398 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_410$conv2d.v:648$2863: $auto$opt_reduce.cc:134:opt_pmux$5400
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_411$conv2d.v:648$2864: { $flatten\u_conv2d.$verific$n5060$1775 $flatten\u_conv2d.$verific$n5061$1776 $auto$opt_reduce.cc:134:opt_pmux$5402 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_418$conv2d.v:648$2870: { $flatten\u_conv2d.$verific$n5061$1776 $auto$opt_reduce.cc:134:opt_pmux$5404 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_627$conv2d.v:784$2964: { $flatten\u_conv2d.$verific$n6558$1816 $flatten\u_conv2d.$verific$n6559$1817 $flatten\u_conv2d.$verific$n6560$1818 $flatten\u_conv2d.$verific$n6561$1819 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_629$conv2d.v:784$2966: { $flatten\u_conv2d.$verific$n6557$1815 $flatten\u_conv2d.$verific$n6558$1816 $auto$opt_reduce.cc:134:opt_pmux$5406 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_630$conv2d.v:784$2967: { $flatten\u_conv2d.$verific$n6558$1816 $flatten\u_conv2d.$verific$n6559$1817 $flatten\u_conv2d.$verific$n6560$1818 $flatten\u_conv2d.$verific$n6561$1819 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_631$conv2d.v:784$2968: { $flatten\u_conv2d.$verific$n6557$1815 $flatten\u_conv2d.$verific$n6558$1816 $flatten\u_conv2d.$verific$n6559$1817 $auto$opt_reduce.cc:134:opt_pmux$5408 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_636$conv2d.v:784$2973: { $flatten\u_conv2d.$verific$n6558$1816 $flatten\u_conv2d.$verific$n6559$1817 $auto$opt_reduce.cc:134:opt_pmux$5410 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_641$conv2d.v:784$2977: { $flatten\u_conv2d.$verific$n6558$1816 $flatten\u_conv2d.$verific$n6559$1817 $flatten\u_conv2d.$verific$n6560$1818 $auto$opt_reduce.cc:134:opt_pmux$5412 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_75$conv2d.v:164$2504: { $flatten\u_conv2d.$verific$n851$1736 $flatten\u_conv2d.$verific$n852$1737 $flatten\u_conv2d.$verific$n853$1738 $flatten\u_conv2d.$verific$n854$1739 $flatten\u_conv2d.$verific$n856$1741 $flatten\u_conv2d.$verific$n858$1743 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_823$conv2d.v:912$3104: { $flatten\u_conv2d.$verific$n8234$1854 $auto$opt_reduce.cc:134:opt_pmux$5414 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_824$conv2d.v:912$3105: { $flatten\u_conv2d.$verific$n8236$1856 $auto$opt_reduce.cc:134:opt_pmux$5416 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_829$conv2d.v:912$3109: { $flatten\u_conv2d.$verific$n8233$1853 $flatten\u_conv2d.$verific$n8234$1854 $auto$opt_reduce.cc:134:opt_pmux$5418 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_830$conv2d.v:912$3110: { $flatten\u_conv2d.$verific$n8234$1854 $flatten\u_conv2d.$verific$n8236$1856 $auto$opt_reduce.cc:134:opt_pmux$5420 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_836$conv2d.v:912$3115: { $flatten\u_conv2d.$verific$n8234$1854 $auto$opt_reduce.cc:134:opt_pmux$5422 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_838$conv2d.v:912$3117: { $flatten\u_conv2d.$verific$n8234$1854 $auto$opt_reduce.cc:134:opt_pmux$5424 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$Select_225$control.v:223$1677: { $flatten\u_ctl.$verific$n2482$1443 $flatten\u_ctl.$verific$n2485$1446 $flatten\u_ctl.$verific$n2486$1447 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_144$control.v:185$1637: { $flatten\u_ctl.$verific$n1301$1414 $auto$opt_reduce.cc:134:opt_pmux$5426 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_145$control.v:185$1638: { $flatten\u_ctl.$verific$n1302$1415 $auto$opt_reduce.cc:134:opt_pmux$5428 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_146$control.v:185$1639: { $flatten\u_ctl.$verific$n1303$1416 $auto$opt_reduce.cc:134:opt_pmux$5430 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_147$control.v:185$1640: { $flatten\u_ctl.$verific$n1304$1417 $auto$opt_reduce.cc:134:opt_pmux$5432 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_148$control.v:185$1641: { $flatten\u_ctl.$verific$n1305$1418 $auto$opt_reduce.cc:134:opt_pmux$5434 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_149$control.v:185$1642: { $flatten\u_ctl.$verific$n1306$1419 $auto$opt_reduce.cc:134:opt_pmux$5436 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_150$control.v:185$1643: { $flatten\u_ctl.$verific$n1307$1420 $auto$opt_reduce.cc:134:opt_pmux$5438 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_151$control.v:185$1644: { $flatten\u_ctl.$verific$n1308$1421 $auto$opt_reduce.cc:134:opt_pmux$5440 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_152$control.v:185$1645: { $flatten\u_ctl.$verific$n1309$1422 $auto$opt_reduce.cc:134:opt_pmux$5442 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_153$control.v:185$1646: { $flatten\u_ctl.$verific$n1310$1423 $auto$opt_reduce.cc:134:opt_pmux$5444 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_156$control.v:185$1649: { $flatten\u_ctl.$verific$n1313$1426 $auto$opt_reduce.cc:134:opt_pmux$5448 $auto$opt_reduce.cc:134:opt_pmux$5446 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_161$control.v:185$1654: { $flatten\u_ctl.$verific$n1317$1430 $auto$opt_reduce.cc:134:opt_pmux$5450 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_162$control.v:185$1655: { $flatten\u_ctl.$verific$n1318$1431 $auto$opt_reduce.cc:134:opt_pmux$5452 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_163$control.v:185$1656: { $flatten\u_ctl.$verific$n1318$1431 $auto$opt_reduce.cc:134:opt_pmux$5454 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_216$control.v:220$1667: { $auto$opt_reduce.cc:134:opt_pmux$5458 $auto$opt_reduce.cc:134:opt_pmux$5456 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_223$control.v:223$1675: { $flatten\u_ctl.$verific$n2482$1443 $flatten\u_ctl.$verific$n2485$1446 $flatten\u_ctl.$verific$n2486$1447 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_226$control.v:223$1678: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5460 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_227$control.v:223$1679: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5462 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_228$control.v:223$1680: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5464 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_229$control.v:223$1681: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5466 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_230$control.v:223$1682: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5468 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_231$control.v:223$1683: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5470 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_232$control.v:223$1684: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5472 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_233$control.v:223$1685: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5474 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_234$control.v:223$1686: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5476 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_235$control.v:223$1687: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5478 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_238$control.v:223$1690: { $flatten\u_ctl.$verific$n2484$1445 $flatten\u_ctl.$verific$n2485$1446 $auto$opt_reduce.cc:134:opt_pmux$5480 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_243$control.v:223$1695: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5482 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_244$control.v:223$1696: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5484 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_245$control.v:223$1697: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$5486 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_248$control.v:223$1700: { $flatten\u_ctl.$verific$n2485$1446 $auto$opt_reduce.cc:134:opt_pmux$5488 }
  Optimizing cells in module \top.
Performed a total of 85 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~120 debug messages>
Removed a total of 40 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_width_reg$control.v:224$1703 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_total_reg$control.v:224$1712 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_shift_reg$control.v:224$1725 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_sda_reg$control.v:224$1726 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_scl_reg$control.v:224$1727 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_result_base_reg$control.v:224$1711 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_ready_reg$control.v:224$1701 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_quant_reg$control.v:224$1724 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_pixel_base_reg$control.v:224$1709 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_intr_sts_reg$control.v:224$1723 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_intr_en_reg$control.v:224$1722 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_height_reg$control.v:224$1704 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_filters_reg$control.v:224$1706 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_filter_base_reg$control.v:224$1708 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_debug_mux_reg$control.v:224$1715 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_dataout_reg$control.v:224$1707 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_ctl_pwen_reg$control.v:224$1720 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_ctl_pfwaddr_reg$control.v:224$1718 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_ctl_fwen_reg$control.v:224$1719 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_ctl_bwen_reg$control.v:224$1721 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_channels_reg$control.v:224$1705 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_bias_base_reg$control.v:224$1710 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_addr_reg$control.v:224$1717 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$fsm_ctl_reg$control.v:224$1728 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$ctl_reg$control.v:224$1702 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$counter_reg$control.v:224$1713 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$write2_reg$conv2d.v:1246$4402 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$wdata2_reg$conv2d.v:785$3001 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$total_pixels_done_reg$conv2d.v:1246$4388 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$total_filters_done_reg$conv2d.v:1246$4382 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$sat37_reg$conv2d.v:92$2470 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$sat26_reg$conv2d.v:92$2469 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$sat15_reg$conv2d.v:92$2468 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$sat04_reg$conv2d.v:92$2467 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$running_reg$conv2d.v:1246$4384 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$result_base_reg$conv2d.v:785$2999 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$reset_bias_address_reg$conv2d.v:785$3024 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$pixels_read_reg$conv2d.v:913$3120 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$pixel_start_reg$conv2d.v:913$3127 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$pixel_select_reg$conv2d.v:1246$4400 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$p2_raddr_reg$conv2d.v:1246$4370 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$p1_raddr_reg$conv2d.v:1246$4369 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$next_buffer_reg$conv2d.v:1246$4399 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$load_more_pixels_reg$conv2d.v:1246$4387 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$load_more_filters_reg$conv2d.v:1246$4386 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$load_ext_acc_reg$conv2d.v:1246$4389 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$load_buffer_reg$conv2d.v:913$3129 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$last_start2d_reg$conv2d.v:785$3023 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm3_wen_reg$conv2d.v:785$3010 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm3_req_reg$conv2d.v:785$3009 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm3_rdata_reg$conv2d.v:785$3026 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm2_wreq_reg$conv2d.v:785$3008 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm2_wen_reg$conv2d.v:785$3018 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm2_wdata_reg$conv2d.v:785$3000 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm2_rreq_reg$conv2d.v:785$3007 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm2_rdata_reg$conv2d.v:785$3025 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm1_wen_reg$conv2d.v:913$3122 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm1_req_reg$conv2d.v:913$3123 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm1_rdata_reg$conv2d.v:913$3130 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_sat_reg$conv2d.v:1246$4373 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_pixel_wen_reg$conv2d.v:913$3124 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_pixel_wdata_reg$conv2d.v:913$3126 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_pixel_waddr_reg$conv2d.v:913$3125 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_pixel_raddr_reg$conv2d.v:1246$4378 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_outsel_reg$conv2d.v:1246$4377 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_mult2_coef_reg$conv2d.v:1246$4404 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_mult1_coef_reg$conv2d.v:1246$4403 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_math_mode_reg$conv2d.v:1246$4374 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_mac_clr_reg$conv2d.v:1246$4375 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_mac_clken_reg$conv2d.v:1246$4376 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_filter_wdata_reg$conv2d.v:785$3014 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_filter_waddr_reg$conv2d.v:785$3013 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_filter_raddr_reg$conv2d.v:1246$4379 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_filter2_wen_reg$conv2d.v:785$3016 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_filter1_wen_reg$conv2d.v:785$3015 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_done2d_reg$conv2d.v:1246$4383 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_csel_reg$conv2d.v:1246$4372 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_bias_wen_reg$conv2d.v:785$3011 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_bias_wdata_reg$conv2d.v:785$3012 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_bias_waddr_reg$conv2d.v:785$3004 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_bias_raddr_reg$conv2d.v:785$3003 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i3_t2_waddr_reg$conv2d.v:785$2982 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i2_t2_waddr_reg$conv2d.v:785$2981 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i1_t2_waddr_reg$conv2d.v:785$2980 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_writechannels_reg$conv2d.v:785$3022 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_loadacc_reg$conv2d.v:785$2988 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_getpixels_reg$conv2d.v:913$3118 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_getfilters_reg$conv2d.v:785$2986 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_getbias_reg$conv2d.v:785$2987 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_conv2d_reg$conv2d.v:1246$4371 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fract_select_reg$conv2d.v:1246$4401 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filters_loaded_reg$conv2d.v:785$2983 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filters_done_reg$conv2d.v:1246$4381 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filters_complete_reg$conv2d.v:785$3021 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filter_stride_reg$conv2d.v:785$2984 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filter_start_reg$conv2d.v:785$3019 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filter_space_left_reg$conv2d.v:785$3020 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filter_reload_reg$conv2d.v:1246$4385 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filter_channels_reg$conv2d.v:785$3017 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$copy_acc_reg$conv2d.v:1246$4390 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$channels_loaded_reg$conv2d.v:913$3119 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$channels_done_reg$conv2d.v:1246$4380 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$buffers_used_reg$conv2d.v:913$3128 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias_loaded_reg$conv2d.v:785$3006 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias_base_addr_reg$conv2d.v:785$3005 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias7_reg$conv2d.v:785$2996 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias6_reg$conv2d.v:785$2995 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias5_reg$conv2d.v:785$2994 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias4_reg$conv2d.v:785$2993 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias3_reg$conv2d.v:785$2992 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias2_reg$conv2d.v:785$2991 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias1_reg$conv2d.v:785$2990 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias0_reg$conv2d.v:785$2989 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$add_stride_reg$conv2d.v:785$2985 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc7_reg$conv2d.v:1246$4398 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc6_reg$conv2d.v:1246$4397 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc5_reg$conv2d.v:1246$4396 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc4_reg$conv2d.v:1246$4395 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc3_reg$conv2d.v:1246$4394 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc2_reg$conv2d.v:1246$4393 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc1_reg$conv2d.v:1246$4392 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc0_reg$conv2d.v:1246$4391 ($aldff) from module top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 48 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~152 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.u_conv2d.fract_select as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.u_conv2d.fsm_conv2d.
Found FSM state register top.u_conv2d.fsm_getbias.
Found FSM state register top.u_conv2d.fsm_getpixels.
Not marking top.u_conv2d.i_outsel as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Found FSM state register top.u_ctl.fsm_ctl.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u_conv2d.fsm_conv2d' from module `\top'.
  found $adff cell for state register: $flatten\u_conv2d.$verific$fsm_conv2d_reg$conv2d.v:1246$4371
  root of input selection tree: $flatten\u_conv2d.$verific$n11461$2435
  found reset state: 5'00000 (from async reset)
  found ctrl input: $flatten\u_conv2d.$verific$n11257$1925
  found ctrl input: $flatten\u_conv2d.$verific$n11256$1924
  found ctrl input: $flatten\u_conv2d.$verific$n11255$1923
  found ctrl input: $flatten\u_conv2d.$verific$n11254$1922
  found ctrl input: $flatten\u_conv2d.$verific$n11253$1921
  found ctrl input: $flatten\u_conv2d.$verific$n11252$1920
  found ctrl input: $flatten\u_conv2d.$verific$n11251$1919
  found ctrl input: $flatten\u_conv2d.$verific$n11250$1918
  found ctrl input: $flatten\u_conv2d.$verific$n11249$1917
  found ctrl input: $flatten\u_conv2d.$verific$n11248$1916
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5368
  found ctrl input: $flatten\u_conv2d.$verific$n11245$1913
  found ctrl input: $flatten\u_conv2d.$verific$n11244$1912
  found ctrl input: $flatten\u_conv2d.$verific$n11243$1911
  found ctrl input: $flatten\u_conv2d.$verific$n11242$1910
  found ctrl input: \u_ctl.ctl [0]
  found state code: 5'01100
  found ctrl input: $flatten\u_conv2d.$verific$n11095$1905
  found state code: 5'01001
  found state code: 5'01000
  found state code: 5'00100
  found state code: 5'00011
  found ctrl input: $flatten\u_conv2d.$verific$n10441$1895
  found ctrl input: $flatten\u_conv2d.$verific$n10472$1899
  found state code: 5'00010
  found state code: 5'00001
  found ctrl input: \u_conv2d.filter_reload
  found ctrl input: $flatten\u_conv2d.$verific$n10079$1885
  found ctrl input: $flatten\u_conv2d.$verific$n10042$1881
  found state code: 5'00110
  found state code: 5'00111
  found state code: 5'01111
  found ctrl input: $flatten\u_conv2d.$verific$n9562$1865
  found ctrl input: $flatten\u_conv2d.$verific$n9563$1866
  found ctrl input: $flatten\u_conv2d.$verific$n9583$1867
  found ctrl input: $flatten\u_conv2d.$verific$n9612$1868
  found state code: 5'00101
  found state code: 5'01010
  found ctrl output: $flatten\u_conv2d.$verific$n11256$1924
  found ctrl output: $flatten\u_conv2d.$verific$n11255$1923
  found ctrl output: $flatten\u_conv2d.$verific$n11254$1922
  found ctrl output: $flatten\u_conv2d.$verific$n11253$1921
  found ctrl output: $flatten\u_conv2d.$verific$n11252$1920
  found ctrl output: $flatten\u_conv2d.$verific$n11251$1919
  found ctrl output: $flatten\u_conv2d.$verific$n11250$1918
  found ctrl output: $flatten\u_conv2d.$verific$n11249$1917
  found ctrl output: $flatten\u_conv2d.$verific$n11248$1916
  found ctrl output: $flatten\u_conv2d.$verific$n11247$1915
  found ctrl output: $flatten\u_conv2d.$verific$n11246$1914
  found ctrl output: $flatten\u_conv2d.$verific$n11245$1913
  found ctrl output: $flatten\u_conv2d.$verific$n11244$1912
  found ctrl output: $flatten\u_conv2d.$verific$n11243$1911
  found ctrl output: $flatten\u_conv2d.$verific$n11242$1910
  ctrl inputs: { \u_conv2d.filter_reload $flatten\u_conv2d.$verific$n9562$1865 $flatten\u_conv2d.$verific$n9563$1866 $flatten\u_conv2d.$verific$n9583$1867 $flatten\u_conv2d.$verific$n9612$1868 $flatten\u_conv2d.$verific$n10042$1881 $flatten\u_conv2d.$verific$n10079$1885 $flatten\u_conv2d.$verific$n10441$1895 $flatten\u_conv2d.$verific$n10472$1899 $flatten\u_conv2d.$verific$n11095$1905 $flatten\u_conv2d.$verific$n11257$1925 $auto$opt_reduce.cc:134:opt_pmux$5368 \u_ctl.ctl [0] }
  ctrl outputs: { $flatten\u_conv2d.$verific$n11242$1910 $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11244$1912 $flatten\u_conv2d.$verific$n11245$1913 $flatten\u_conv2d.$verific$n11246$1914 $flatten\u_conv2d.$verific$n11247$1915 $flatten\u_conv2d.$verific$n11248$1916 $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11250$1918 $flatten\u_conv2d.$verific$n11251$1919 $flatten\u_conv2d.$verific$n11252$1920 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $flatten\u_conv2d.$verific$n11255$1923 $flatten\u_conv2d.$verific$n11256$1924 $flatten\u_conv2d.$verific$n11461$2435 }
  transition:    5'00000 13'-----0------- ->    5'00000 20'00000010000000000000
  transition:    5'00000 13'-----1------- ->    5'00110 20'00000010000000000110
  transition:    5'01000 13'------------- ->    5'00001 20'00000000100000000001
  transition:    5'00100 13'---------0--- ->    5'01001 20'00000000000010001001
  transition:    5'00100 13'---------1--- ->    5'01000 20'00000000000010001000
  transition:    5'01100 13'------------0 ->    5'00000 20'00000000000000100000
  transition:    5'01100 13'------------1 ->    5'01100 20'00000000000000101100
  transition:    5'00010 13'------------- ->    5'00011 20'00000000001000000011
  transition:    5'01010 13'-0----------- ->    5'01010 20'01000000000000001010
  transition:    5'01010 13'-100--------- ->    5'00111 20'01000000000000000111
  transition:    5'01010 13'-1010-------- ->    5'00111 20'01000000000000000111
  transition:    5'01010 13'-1011-------- ->    5'00101 20'01000000000000000101
  transition:    5'01010 13'-11---------- ->    5'00111 20'01000000000000000111
  transition:    5'00110 13'0------------ ->    5'00001 20'00000001000000000001
  transition:    5'00110 13'1-----0------ ->    5'00110 20'00000001000000000110
  transition:    5'00110 13'1-----1------ ->    5'00000 20'00000001000000000000
  transition:    5'00001 13'-------0----- ->    5'00001 20'00000000010000000001
  transition:    5'00001 13'-------10---- ->    5'00001 20'00000000010000000001
  transition:    5'00001 13'-------11---- ->    5'00010 20'00000000010000000010
  transition:    5'01001 13'------------- ->    5'01010 20'10000000000000001010
  transition:    5'00101 13'------------- ->    5'01100 20'00000000000001001100
  transition:    5'00011 13'------------- ->    5'00100 20'00000000000100000100
  transition:    5'00111 13'------------- ->    5'00110 20'00001000000000000110
  transition:    5'01111 13'------------- ->    5'00111 20'00010000000000000111
Extracting FSM `\u_conv2d.fsm_getbias' from module `\top'.
  found $adff cell for state register: $flatten\u_conv2d.$verific$fsm_getbias_reg$conv2d.v:785$2987
  root of input selection tree: $flatten\u_conv2d.$verific$n5122$2153
  found reset state: 3'000 (from async reset)
  found ctrl input: $flatten\u_conv2d.$verific$n5063$1778
  found ctrl input: $flatten\u_conv2d.$verific$n5062$1777
  found ctrl input: $flatten\u_conv2d.$verific$n5061$1776
  found ctrl input: $flatten\u_conv2d.$verific$n5060$1775
  found ctrl input: \u_conv2d.i_done2d
  found ctrl input: \tcdm_valid_p3
  found ctrl input: $flatten\u_conv2d.$verific$n4916$1769
  found state code: 3'010
  found ctrl input: \u_ctl.ctl [0]
  found state code: 3'001
  found ctrl output: $flatten\u_conv2d.$verific$n5062$1777
  found ctrl output: $flatten\u_conv2d.$verific$n5061$1776
  found ctrl output: $flatten\u_conv2d.$verific$n5060$1775
  ctrl inputs: { \u_conv2d.i_done2d $flatten\u_conv2d.$verific$n4916$1769 $flatten\u_conv2d.$verific$n5063$1778 \u_ctl.ctl [0] \tcdm_valid_p3 }
  ctrl outputs: { $flatten\u_conv2d.$verific$n5060$1775 $flatten\u_conv2d.$verific$n5061$1776 $flatten\u_conv2d.$verific$n5062$1777 $flatten\u_conv2d.$verific$n5122$2153 }
  transition:      3'000 5'---0- ->      3'000 6'100000
  transition:      3'000 5'---1- ->      3'001 6'100001
  transition:      3'010 5'0---- ->      3'010 6'001010
  transition:      3'010 5'1---- ->      3'000 6'001000
  transition:      3'001 5'----0 ->      3'001 6'010001
  transition:      3'001 5'-0--1 ->      3'001 6'010001
  transition:      3'001 5'-1--1 ->      3'010 6'010010
Extracting FSM `\u_conv2d.fsm_getpixels' from module `\top'.
  found $adff cell for state register: $flatten\u_conv2d.$verific$fsm_getpixels_reg$conv2d.v:913$3118
  root of input selection tree: $flatten\u_conv2d.$verific$n8296$2272
  found reset state: 3'000 (from async reset)
  found ctrl input: $flatten\u_conv2d.$verific$n8237$1857
  found ctrl input: $flatten\u_conv2d.$verific$n8236$1856
  found ctrl input: $flatten\u_conv2d.$verific$n8235$1855
  found ctrl input: $flatten\u_conv2d.$verific$n8234$1854
  found ctrl input: $flatten\u_conv2d.$verific$n8233$1853
  found ctrl input: $flatten\u_conv2d.$verific$n8211$1849
  found state code: 3'001
  found ctrl input: \u_conv2d.i_done2d
  found ctrl input: \u_conv2d.load_more_filters
  found ctrl input: \tcdm_valid_p1
  found ctrl input: $flatten\u_conv2d.$verific$n7947$1834
  found ctrl input: $flatten\u_conv2d.$verific$n8018$1838
  found state code: 3'011
  found state code: 3'010
  found ctrl input: \u_ctl.ctl [0]
  found ctrl output: $flatten\u_conv2d.$verific$n8236$1856
  found ctrl output: $flatten\u_conv2d.$verific$n8235$1855
  found ctrl output: $flatten\u_conv2d.$verific$n8234$1854
  found ctrl output: $flatten\u_conv2d.$verific$n8233$1853
  ctrl inputs: { \u_conv2d.i_done2d \u_conv2d.load_more_filters $flatten\u_conv2d.$verific$n7947$1834 $flatten\u_conv2d.$verific$n8018$1838 $flatten\u_conv2d.$verific$n8211$1849 $flatten\u_conv2d.$verific$n8237$1857 \u_ctl.ctl [0] \tcdm_valid_p1 }
  ctrl outputs: { $flatten\u_conv2d.$verific$n8233$1853 $flatten\u_conv2d.$verific$n8234$1854 $flatten\u_conv2d.$verific$n8235$1855 $flatten\u_conv2d.$verific$n8236$1856 $flatten\u_conv2d.$verific$n8296$2272 }
  transition:      3'000 8'------0- ->      3'000 7'1000000
  transition:      3'000 8'------1- ->      3'001 7'1000001
  transition:      3'010 8'00------ ->      3'010 7'0010010
  transition:      3'010 8'01------ ->      3'000 7'0010000
  transition:      3'010 8'1------- ->      3'000 7'0010000
  transition:      3'001 8'-------0 ->      3'001 7'0100001
  transition:      3'001 8'--0----1 ->      3'001 7'0100001
  transition:      3'001 8'--10---1 ->      3'011 7'0100011
  transition:      3'001 8'--11---1 ->      3'010 7'0100010
  transition:      3'011 8'----0--- ->      3'001 7'0001001
  transition:      3'011 8'----1--- ->      3'011 7'0001011
Extracting FSM `\u_ctl.fsm_ctl' from module `\top'.
  found $adff cell for state register: $flatten\u_ctl.$verific$fsm_ctl_reg$control.v:224$1728
  root of input selection tree: $flatten\u_ctl.$verific$n2487$1532
  found reset state: 3'000 (from async reset)
  found ctrl input: $flatten\u_ctl.$verific$n2486$1447
  found ctrl input: $flatten\u_ctl.$verific$n2485$1446
  found ctrl input: $flatten\u_ctl.$verific$n2482$1443
  found state code: 3'011
  found ctrl input: $flatten\u_ctl.$verific$n828$1411
  found ctrl input: $flatten\u_ctl.$verific$n815$1408
  found state code: 3'001
  found state code: 3'010
  found ctrl output: $flatten\u_ctl.$verific$n2485$1446
  found ctrl output: $flatten\u_ctl.$verific$n2484$1445
  found ctrl output: $flatten\u_ctl.$verific$n2483$1444
  found ctrl output: $flatten\u_ctl.$verific$n2482$1443
  ctrl inputs: { $flatten\u_ctl.$verific$n815$1408 $flatten\u_ctl.$verific$n828$1411 $flatten\u_ctl.$verific$n2486$1447 }
  ctrl outputs: { $flatten\u_ctl.$verific$n2482$1443 $flatten\u_ctl.$verific$n2483$1444 $flatten\u_ctl.$verific$n2484$1445 $flatten\u_ctl.$verific$n2485$1446 $flatten\u_ctl.$verific$n2487$1532 }
  transition:      3'000 3'00- ->      3'000 7'1000000
  transition:      3'000 3'10- ->      3'001 7'1000001
  transition:      3'000 3'-1- ->      3'010 7'1000010
  transition:      3'010 3'--- ->      3'011 7'0001011
  transition:      3'001 3'--- ->      3'000 7'0010000
  transition:      3'011 3'--- ->      3'000 7'0100000

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_ctl.fsm_ctl$5517' from module `\top'.
  Removing unused input signal $flatten\u_ctl.$verific$n2486$1447.
Optimizing FSM `$fsm$\u_conv2d.fsm_getpixels$5511' from module `\top'.
  Removing unused input signal $flatten\u_conv2d.$verific$n8237$1857.
Optimizing FSM `$fsm$\u_conv2d.fsm_getbias$5506' from module `\top'.
  Removing unused input signal $flatten\u_conv2d.$verific$n5063$1778.
Optimizing FSM `$fsm$\u_conv2d.fsm_conv2d$5489' from module `\top'.
  Removing unreachable state 5'01111.
  Removing unused input signal $flatten\u_conv2d.$verific$n11257$1925.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$5368.

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 59 unused cells and 59 unused wires.
<suppressed ~60 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_conv2d.fsm_conv2d$5489' from module `\top'.
  Removing unused output signal $flatten\u_conv2d.$verific$n11461$2435 [0].
  Removing unused output signal $flatten\u_conv2d.$verific$n11461$2435 [1].
  Removing unused output signal $flatten\u_conv2d.$verific$n11461$2435 [2].
  Removing unused output signal $flatten\u_conv2d.$verific$n11461$2435 [3].
  Removing unused output signal $flatten\u_conv2d.$verific$n11461$2435 [4].
Optimizing FSM `$fsm$\u_conv2d.fsm_getbias$5506' from module `\top'.
  Removing unused output signal $flatten\u_conv2d.$verific$n5122$2153 [0].
  Removing unused output signal $flatten\u_conv2d.$verific$n5122$2153 [1].
  Removing unused output signal $flatten\u_conv2d.$verific$n5122$2153 [2].
Optimizing FSM `$fsm$\u_conv2d.fsm_getpixels$5511' from module `\top'.
  Removing unused output signal $flatten\u_conv2d.$verific$n8296$2272 [0].
  Removing unused output signal $flatten\u_conv2d.$verific$n8296$2272 [1].
  Removing unused output signal $flatten\u_conv2d.$verific$n8296$2272 [2].
Optimizing FSM `$fsm$\u_ctl.fsm_ctl$5517' from module `\top'.
  Removing unused output signal $flatten\u_ctl.$verific$n2487$1532 [0].
  Removing unused output signal $flatten\u_ctl.$verific$n2487$1532 [1].
  Removing unused output signal $flatten\u_ctl.$verific$n2487$1532 [2].

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u_conv2d.fsm_conv2d$5489' from module `\top' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000 -> 0000
  01000 -> 0001
  00100 -> 0010
  01100 -> 0011
  00010 -> 0100
  01010 -> 0101
  00110 -> 0110
  00001 -> 0111
  01001 -> 1000
  00101 -> 1001
  00011 -> 1010
  00111 -> 1011
Recoding FSM `$fsm$\u_conv2d.fsm_getbias$5506' from module `\top' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000 -> 00
  010 -> 01
  001 -> 10
Recoding FSM `$fsm$\u_conv2d.fsm_getpixels$5511' from module `\top' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000 -> 00
  010 -> 01
  001 -> 10
  011 -> 11
Recoding FSM `$fsm$\u_ctl.fsm_ctl$5517' from module `\top' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000 -> 00
  010 -> 01
  001 -> 10
  011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u_conv2d.fsm_conv2d$5489' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_conv2d.fsm_conv2d$5489 (\u_conv2d.fsm_conv2d):

  Number of input signals:   11
  Number of output signals:  15
  Number of state bits:       4

  Input signals:
    0: \u_ctl.ctl [0]
    1: $flatten\u_conv2d.$verific$n11095$1905
    2: $flatten\u_conv2d.$verific$n10472$1899
    3: $flatten\u_conv2d.$verific$n10441$1895
    4: $flatten\u_conv2d.$verific$n10079$1885
    5: $flatten\u_conv2d.$verific$n10042$1881
    6: $flatten\u_conv2d.$verific$n9612$1868
    7: $flatten\u_conv2d.$verific$n9583$1867
    8: $flatten\u_conv2d.$verific$n9563$1866
    9: $flatten\u_conv2d.$verific$n9562$1865
   10: \u_conv2d.filter_reload

  Output signals:
    0: $flatten\u_conv2d.$verific$n11256$1924
    1: $flatten\u_conv2d.$verific$n11255$1923
    2: $flatten\u_conv2d.$verific$n11254$1922
    3: $flatten\u_conv2d.$verific$n11253$1921
    4: $flatten\u_conv2d.$verific$n11252$1920
    5: $flatten\u_conv2d.$verific$n11251$1919
    6: $flatten\u_conv2d.$verific$n11250$1918
    7: $flatten\u_conv2d.$verific$n11249$1917
    8: $flatten\u_conv2d.$verific$n11248$1916
    9: $flatten\u_conv2d.$verific$n11247$1915
   10: $flatten\u_conv2d.$verific$n11246$1914
   11: $flatten\u_conv2d.$verific$n11245$1913
   12: $flatten\u_conv2d.$verific$n11244$1912
   13: $flatten\u_conv2d.$verific$n11243$1911
   14: $flatten\u_conv2d.$verific$n11242$1910

  State encoding:
    0:     4'0000  <RESET STATE>
    1:     4'0001
    2:     4'0010
    3:     4'0011
    4:     4'0100
    5:     4'0101
    6:     4'0110
    7:     4'0111
    8:     4'1000
    9:     4'1001
   10:     4'1010
   11:     4'1011

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 11'-----0-----   ->     0 15'000000100000000
      1:     0 11'-----1-----   ->     6 15'000000100000000
      2:     1 11'-----------   ->     7 15'000000001000000
      3:     2 11'---------1-   ->     1 15'000000000000100
      4:     2 11'---------0-   ->     8 15'000000000000100
      5:     3 11'----------0   ->     0 15'000000000000001
      6:     3 11'----------1   ->     3 15'000000000000001
      7:     4 11'-----------   ->    10 15'000000000010000
      8:     5 11'-0---------   ->     5 15'010000000000000
      9:     5 11'-1011------   ->     9 15'010000000000000
     10:     5 11'-1010------   ->    11 15'010000000000000
     11:     5 11'-100-------   ->    11 15'010000000000000
     12:     5 11'-11--------   ->    11 15'010000000000000
     13:     6 11'1-----1----   ->     0 15'000000010000000
     14:     6 11'1-----0----   ->     6 15'000000010000000
     15:     6 11'0----------   ->     7 15'000000010000000
     16:     7 11'-------11--   ->     4 15'000000000100000
     17:     7 11'-------10--   ->     7 15'000000000100000
     18:     7 11'-------0---   ->     7 15'000000000100000
     19:     8 11'-----------   ->     5 15'100000000000000
     20:     9 11'-----------   ->     3 15'000000000000010
     21:    10 11'-----------   ->     2 15'000000000001000
     22:    11 11'-----------   ->     6 15'000010000000000

-------------------------------------

FSM `$fsm$\u_conv2d.fsm_getbias$5506' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_conv2d.fsm_getbias$5506 (\u_conv2d.fsm_getbias):

  Number of input signals:    4
  Number of output signals:   3
  Number of state bits:       2

  Input signals:
    0: \tcdm_valid_p3
    1: \u_ctl.ctl [0]
    2: $flatten\u_conv2d.$verific$n4916$1769
    3: \u_conv2d.i_done2d

  Output signals:
    0: $flatten\u_conv2d.$verific$n5062$1777
    1: $flatten\u_conv2d.$verific$n5061$1776
    2: $flatten\u_conv2d.$verific$n5060$1775

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 4'--0-   ->     0 3'100
      1:     0 4'--1-   ->     2 3'100
      2:     1 4'1---   ->     0 3'001
      3:     1 4'0---   ->     1 3'001
      4:     2 4'-1-1   ->     1 3'010
      5:     2 4'---0   ->     2 3'010
      6:     2 4'-0-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\u_conv2d.fsm_getpixels$5511' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_conv2d.fsm_getpixels$5511 (\u_conv2d.fsm_getpixels):

  Number of input signals:    7
  Number of output signals:   4
  Number of state bits:       2

  Input signals:
    0: \tcdm_valid_p1
    1: \u_ctl.ctl [0]
    2: $flatten\u_conv2d.$verific$n8211$1849
    3: $flatten\u_conv2d.$verific$n8018$1838
    4: $flatten\u_conv2d.$verific$n7947$1834
    5: \u_conv2d.load_more_filters
    6: \u_conv2d.i_done2d

  Output signals:
    0: $flatten\u_conv2d.$verific$n8236$1856
    1: $flatten\u_conv2d.$verific$n8235$1855
    2: $flatten\u_conv2d.$verific$n8234$1854
    3: $flatten\u_conv2d.$verific$n8233$1853

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 7'-----0-   ->     0 4'1000
      1:     0 7'-----1-   ->     2 4'1000
      2:     1 7'01-----   ->     0 4'0010
      3:     1 7'1------   ->     0 4'0010
      4:     1 7'00-----   ->     1 4'0010
      5:     2 7'--11--1   ->     1 4'0100
      6:     2 7'------0   ->     2 4'0100
      7:     2 7'--0---1   ->     2 4'0100
      8:     2 7'--10--1   ->     3 4'0100
      9:     3 7'----0--   ->     2 4'0001
     10:     3 7'----1--   ->     3 4'0001

-------------------------------------

FSM `$fsm$\u_ctl.fsm_ctl$5517' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_ctl.fsm_ctl$5517 (\u_ctl.fsm_ctl):

  Number of input signals:    2
  Number of output signals:   4
  Number of state bits:       2

  Input signals:
    0: $flatten\u_ctl.$verific$n828$1411
    1: $flatten\u_ctl.$verific$n815$1408

  Output signals:
    0: $flatten\u_ctl.$verific$n2485$1446
    1: $flatten\u_ctl.$verific$n2484$1445
    2: $flatten\u_ctl.$verific$n2483$1444
    3: $flatten\u_ctl.$verific$n2482$1443

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 4'1000
      1:     0 2'-1   ->     1 4'1000
      2:     0 2'10   ->     2 4'1000
      3:     1 2'--   ->     3 4'0001
      4:     2 2'--   ->     0 4'0010
      5:     3 2'--   ->     0 4'0100

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u_conv2d.fsm_conv2d$5489' from module `\top'.
Mapping FSM `$fsm$\u_conv2d.fsm_getbias$5506' from module `\top'.
Mapping FSM `$fsm$\u_conv2d.fsm_getpixels$5511' from module `\top'.
Mapping FSM `$fsm$\u_ctl.fsm_ctl$5517' from module `\top'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~27 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~152 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1206$conv2d.v:1245$4365: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:7] $auto$fsm_map.cc:194:map_fsm$5525 [5:4] $auto$fsm_map.cc:194:map_fsm$5525 [1:0] }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1202$conv2d.v:1245$4362: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:7] $auto$fsm_map.cc:194:map_fsm$5525 [5:1] }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1195$conv2d.v:1245$4357: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:8] $auto$fsm_map.cc:194:map_fsm$5525 [6:3] $auto$fsm_map.cc:194:map_fsm$5525 [1] }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1193$conv2d.v:1245$4355: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:4] $auto$fsm_map.cc:194:map_fsm$5525 [2:1] }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1185$conv2d.v:1245$4348: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:6] $auto$fsm_map.cc:194:map_fsm$5525 [4:1] }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1180$conv2d.v:1245$4343: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:7] $auto$fsm_map.cc:194:map_fsm$5525 [4:1] }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_nor_1163$conv2d.v:1245$4325: $auto$fsm_map.cc:194:map_fsm$5525
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5395: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:8] $auto$fsm_map.cc:194:map_fsm$5525 [5] $auto$fsm_map.cc:194:map_fsm$5525 [3:2] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5393: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [10:8] $auto$fsm_map.cc:194:map_fsm$5525 [6:1] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5389: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [10] $auto$fsm_map.cc:194:map_fsm$5525 [8:7] $auto$fsm_map.cc:194:map_fsm$5525 [5:3] $auto$fsm_map.cc:194:map_fsm$5525 [1] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5385: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:10] $auto$fsm_map.cc:194:map_fsm$5525 [8:7] $auto$fsm_map.cc:194:map_fsm$5525 [3:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5383: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:10] $auto$fsm_map.cc:194:map_fsm$5525 [8:6] $auto$fsm_map.cc:194:map_fsm$5525 [4:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5381: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11] $auto$fsm_map.cc:194:map_fsm$5525 [9:6] $auto$fsm_map.cc:194:map_fsm$5525 [4:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5379: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:8] $auto$fsm_map.cc:194:map_fsm$5525 [6] $auto$fsm_map.cc:194:map_fsm$5525 [4:1] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5375: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [10] $auto$fsm_map.cc:194:map_fsm$5525 [8:6] $auto$fsm_map.cc:194:map_fsm$5525 [4:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5369: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11] $auto$fsm_map.cc:194:map_fsm$5525 [9:8] $auto$fsm_map.cc:194:map_fsm$5525 [3:1] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5363: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11] $auto$fsm_map.cc:194:map_fsm$5525 [9] $auto$fsm_map.cc:194:map_fsm$5525 [7:3] $auto$fsm_map.cc:194:map_fsm$5525 [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5333: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:9] $auto$fsm_map.cc:194:map_fsm$5525 [6:4] $auto$fsm_map.cc:194:map_fsm$5525 [2:0] }
  Optimizing cells in module \top.
Performed a total of 18 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_ctl.$verific$i_width_reg$control.v:224$1703 ($adff) from module top (D = $flatten\u_ctl.$verific$n2526$1534, Q = \u_ctl.i_width).
Adding EN signal on $flatten\u_ctl.$verific$i_total_reg$control.v:224$1712 ($adff) from module top (D = $flatten\u_ctl.$verific$n2650$1542, Q = \u_ctl.i_total).
Adding EN signal on $flatten\u_ctl.$verific$i_shift_reg$control.v:224$1725 ($adff) from module top (D = $flatten\u_ctl.$verific$n2752$1547, Q = \u_ctl.i_shift).
Adding EN signal on $flatten\u_ctl.$verific$i_sda_reg$control.v:224$1726 ($adff) from module top (D = \PWDATA [0], Q = \u_ctl.i_sda).
Adding EN signal on $flatten\u_ctl.$verific$i_scl_reg$control.v:224$1727 ($adff) from module top (D = \PWDATA [1], Q = \u_ctl.i_scl).
Adding EN signal on $flatten\u_ctl.$verific$i_result_base_reg$control.v:224$1711 ($adff) from module top (D = $flatten\u_ctl.$verific$n2629$1541, Q = \u_ctl.i_result_base).
Adding EN signal on $flatten\u_ctl.$verific$i_ready_reg$control.v:224$1701 ($adff) from module top (D = $flatten\u_ctl.$verific$n2492$1449, Q = \u_ctl.i_ready).
Adding EN signal on $flatten\u_ctl.$verific$i_quant_reg$control.v:224$1724 ($adff) from module top (D = $flatten\u_ctl.$verific$n2735$1546, Q = \u_ctl.i_quant).
Adding EN signal on $flatten\u_ctl.$verific$i_pixel_base_reg$control.v:224$1709 ($adff) from module top (D = $flatten\u_ctl.$verific$n2587$1539, Q = \u_ctl.i_pixel_base).
Adding EN signal on $flatten\u_ctl.$verific$i_intr_en_reg$control.v:224$1722 ($adff) from module top (D = \PWDATA [0], Q = \u_ctl.i_intr_en).
Adding EN signal on $flatten\u_ctl.$verific$i_height_reg$control.v:224$1704 ($adff) from module top (D = $flatten\u_ctl.$verific$n2536$1535, Q = \u_ctl.i_height).
Adding EN signal on $flatten\u_ctl.$verific$i_filters_reg$control.v:224$1706 ($adff) from module top (D = $flatten\u_ctl.$verific$n2556$1537, Q = \u_ctl.i_filters).
Adding EN signal on $flatten\u_ctl.$verific$i_filter_base_reg$control.v:224$1708 ($adff) from module top (D = $flatten\u_ctl.$verific$n2566$1538, Q = \u_ctl.i_filter_base).
Adding EN signal on $flatten\u_ctl.$verific$i_debug_mux_reg$control.v:224$1715 ($adff) from module top (D = $flatten\u_ctl.$verific$n2726$1545, Q = \u_ctl.i_debug_mux).
Adding EN signal on $flatten\u_ctl.$verific$i_dataout_reg$control.v:224$1707 ($adff) from module top (D = $flatten\u_ctl.$verific$n2758$1548, Q = \u_ctl.i_dataout).
Adding EN signal on $flatten\u_ctl.$verific$i_channels_reg$control.v:224$1705 ($adff) from module top (D = $flatten\u_ctl.$verific$n2546$1536, Q = \u_ctl.i_channels).
Adding EN signal on $flatten\u_ctl.$verific$i_bias_base_reg$control.v:224$1710 ($adff) from module top (D = $flatten\u_ctl.$verific$n2608$1540, Q = \u_ctl.i_bias_base).
Adding EN signal on $flatten\u_ctl.$verific$i_addr_reg$control.v:224$1717 ($adff) from module top (D = $flatten\u_ctl.$verific$n2669$1543 [1:0], Q = \u_ctl.i_addr [1:0]).
Adding EN signal on $flatten\u_ctl.$verific$i_addr_reg$control.v:224$1717 ($adff) from module top (D = $flatten\u_ctl.$verific$n2669$1543 [19:2], Q = \u_ctl.i_addr [19:2]).
Adding EN signal on $flatten\u_ctl.$verific$ctl_reg$control.v:224$1702 ($adff) from module top (D = $flatten\u_ctl.$verific$n2493$1533 [31:1], Q = \u_ctl.ctl [31:1]).
Adding EN signal on $flatten\u_conv2d.$verific$total_filters_done_reg$conv2d.v:1246$4382 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11570$2441, Q = \u_conv2d.total_filters_done).
Adding EN signal on $flatten\u_conv2d.$verific$running_reg$conv2d.v:1246$4384 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11639$1942, Q = \u_conv2d.running).
Adding EN signal on $flatten\u_conv2d.$verific$pixels_read_reg$conv2d.v:913$3120 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8238$2268, Q = \u_conv2d.pixels_read).
Adding EN signal on $flatten\u_conv2d.$verific$pixel_start_reg$conv2d.v:913$3127 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8271$1860, Q = \u_conv2d.pixel_start).
Adding EN signal on $flatten\u_conv2d.$verific$pixel_select_reg$conv2d.v:1246$4400 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11598$2443, Q = \u_conv2d.pixel_select).
Adding EN signal on $flatten\u_conv2d.$verific$next_buffer_reg$conv2d.v:1246$4399 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11595$1931, Q = \u_conv2d.next_buffer).
Adding EN signal on $flatten\u_conv2d.$verific$load_more_filters_reg$conv2d.v:1246$4386 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11637$1941, Q = \u_conv2d.load_more_filters).
Adding EN signal on $flatten\u_conv2d.$verific$load_buffer_reg$conv2d.v:913$3129 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8269$1859, Q = \u_conv2d.load_buffer).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm3_wen_reg$conv2d.v:785$3010 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5111$1781, Q = \u_conv2d.i_tcdm3_wen).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm3_req_reg$conv2d.v:785$3009 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5109$1780, Q = \u_conv2d.i_tcdm3_req).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm3_raddr_reg$conv2d.v:785$3002 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n5087$2151 [1:0], Q = \u_conv2d.i_tcdm3_raddr [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm3_raddr_reg$conv2d.v:785$3002 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n5087$2151 [19:2], Q = \u_conv2d.i_tcdm3_raddr [19:2]).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm2_wen_reg$conv2d.v:785$3018 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6636$1821, Q = \u_conv2d.i_tcdm2_wen).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm2_rreq_reg$conv2d.v:785$3007 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6635$1820, Q = \u_conv2d.i_tcdm2_rreq).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm2_raddr_reg$conv2d.v:785$2997 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n6614$2225 [1:0], Q = \u_conv2d.i_tcdm2_raddr [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm2_raddr_reg$conv2d.v:785$2997 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n6614$2225 [19:2], Q = \u_conv2d.i_tcdm2_raddr [19:2]).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm1_wen_reg$conv2d.v:913$3122 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8303$1863, Q = \u_conv2d.i_tcdm1_wen).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm1_req_reg$conv2d.v:913$3123 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8301$1862, Q = \u_conv2d.i_tcdm1_req).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm1_addr_reg$conv2d.v:913$3121 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n8272$2270 [1:0], Q = \u_conv2d.i_tcdm1_addr [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm1_addr_reg$conv2d.v:913$3121 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n8272$2270 [19:2], Q = \u_conv2d.i_tcdm1_addr [19:2]).
Adding EN signal on $flatten\u_conv2d.$verific$i_pixel_wdata_reg$conv2d.v:913$3126 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8304$2273, Q = \u_conv2d.i_pixel_wdata).
Adding EN signal on $flatten\u_conv2d.$verific$i_pixel_raddr_reg$conv2d.v:1246$4378 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11540$2439, Q = \u_conv2d.i_pixel_raddr).
Adding EN signal on $flatten\u_conv2d.$verific$i_outsel_reg$conv2d.v:1246$4377 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11467$2436, Q = \u_conv2d.i_outsel).
Adding EN signal on $flatten\u_conv2d.$verific$i_mult2_coef_reg$conv2d.v:1246$4404 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11507$2438, Q = \u_conv2d.i_mult2_coef).
Adding EN signal on $flatten\u_conv2d.$verific$i_mult1_coef_reg$conv2d.v:1246$4403 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11474$2437, Q = \u_conv2d.i_mult1_coef).
Adding EN signal on $flatten\u_conv2d.$verific$i_math_mode_reg$conv2d.v:1246$4374 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11258$2426, Q = \u_conv2d.i_math_mode).
Adding EN signal on $flatten\u_conv2d.$verific$i_mac_clr_reg$conv2d.v:1246$4375 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11619$1938, Q = \u_conv2d.i_mac_clr).
Adding EN signal on $flatten\u_conv2d.$verific$i_mac_clken_reg$conv2d.v:1246$4376 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11622$1939, Q = \u_conv2d.i_mac_clken).
Adding EN signal on $flatten\u_conv2d.$verific$i_filter_wdata_reg$conv2d.v:785$3014 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6651$2228, Q = \u_conv2d.i_filter_wdata).
Adding EN signal on $flatten\u_conv2d.$verific$i_filter_waddr_reg$conv2d.v:785$3013 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6562$2221 [0], Q = \u_conv2d.i_filter_waddr [0]).
Adding EN signal on $flatten\u_conv2d.$verific$i_filter_waddr_reg$conv2d.v:785$3013 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6562$2221 [11:1], Q = \u_conv2d.i_filter_waddr [11:1]).
Adding EN signal on $flatten\u_conv2d.$verific$i_filter_raddr_reg$conv2d.v:1246$4379 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11623$2446 [1:0], Q = \u_conv2d.i_filter_raddr [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$i_filter_raddr_reg$conv2d.v:1246$4379 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11623$2446 [11:2], Q = \u_conv2d.i_filter_raddr [11:2]).
Adding EN signal on $flatten\u_conv2d.$verific$i_done2d_reg$conv2d.v:1246$4383 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11616$1935, Q = \u_conv2d.i_done2d).
Adding EN signal on $flatten\u_conv2d.$verific$i_csel_reg$conv2d.v:1246$4372 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11641$1944, Q = \u_conv2d.i_csel).
Adding EN signal on $flatten\u_conv2d.$verific$i_bias_wdata_reg$conv2d.v:785$3012 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5126$2154, Q = \u_conv2d.i_bias_wdata).
Adding EN signal on $flatten\u_conv2d.$verific$i_bias_waddr_reg$conv2d.v:785$3004 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5064$2149 [11:2], Q = \u_conv2d.i_bias_waddr [11:2]).
Adding EN signal on $flatten\u_conv2d.$verific$i_bias_waddr_reg$conv2d.v:785$3004 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5064$2149 [1:0], Q = \u_conv2d.i_bias_waddr [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$fsm_getfilters_reg$conv2d.v:785$2986 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6647$2227, Q = \u_conv2d.fsm_getfilters).
Adding EN signal on $flatten\u_conv2d.$verific$fract_select_reg$conv2d.v:1246$4401 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11601$2444, Q = \u_conv2d.fract_select).
Adding EN signal on $flatten\u_conv2d.$verific$filters_loaded_reg$conv2d.v:785$2983 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6604$2224, Q = \u_conv2d.filters_loaded).
Adding EN signal on $flatten\u_conv2d.$verific$filters_done_reg$conv2d.v:1246$4381 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11582$2442 [2:0], Q = \u_conv2d.filters_done [2:0]).
Adding EN signal on $flatten\u_conv2d.$verific$filters_done_reg$conv2d.v:1246$4381 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11582$2442 [8:3], Q = \u_conv2d.filters_done [8:3]).
Adding EN signal on $flatten\u_conv2d.$verific$filter_stride_reg$conv2d.v:785$2984 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6590$2223, Q = \u_conv2d.filter_stride).
Adding EN signal on $flatten\u_conv2d.$verific$filter_start_reg$conv2d.v:785$3019 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6699$1826, Q = \u_conv2d.filter_start).
Adding EN signal on $flatten\u_conv2d.$verific$filter_space_left_reg$conv2d.v:785$3020 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6575$2222, Q = \u_conv2d.filter_space_left).
Adding EN signal on $flatten\u_conv2d.$verific$filter_reload_reg$conv2d.v:1246$4385 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11581$1927, Q = \u_conv2d.filter_reload).
Adding EN signal on $flatten\u_conv2d.$verific$filter_channels_reg$conv2d.v:785$3017 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6637$2226, Q = \u_conv2d.filter_channels).
Adding EN signal on $flatten\u_conv2d.$verific$channels_loaded_reg$conv2d.v:913$3119 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8338$2274 [1:0], Q = \u_conv2d.channels_loaded [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$channels_loaded_reg$conv2d.v:913$3119 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8338$2274 [8:2], Q = \u_conv2d.channels_loaded [8:2]).
Adding EN signal on $flatten\u_conv2d.$verific$channels_done_reg$conv2d.v:1246$4380 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11604$2445 [8:2], Q = \u_conv2d.channels_done [8:2]).
Adding EN signal on $flatten\u_conv2d.$verific$channels_done_reg$conv2d.v:1246$4380 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11604$2445 [1:0], Q = \u_conv2d.channels_done [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$buffers_used_reg$conv2d.v:913$3128 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8293$2271 [1], Q = \u_conv2d.buffers_used [1]).
Adding EN signal on $flatten\u_conv2d.$verific$buffers_used_reg$conv2d.v:913$3128 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8293$2271 [0], Q = \u_conv2d.buffers_used [0]).
Adding EN signal on $flatten\u_conv2d.$verific$bias_loaded_reg$conv2d.v:785$3006 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5112$2152, Q = \u_conv2d.bias_loaded).
Adding EN signal on $flatten\u_conv2d.$verific$acc7_reg$conv2d.v:1246$4398 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11436$2434 [7:0], Q = \u_conv2d.acc7 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc7_reg$conv2d.v:1246$4398 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11436$2434 [15:8], Q = \u_conv2d.acc7 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc7_reg$conv2d.v:1246$4398 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11436$2434 [23:16], Q = \u_conv2d.acc7 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc6_reg$conv2d.v:1246$4397 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11411$2433 [7:0], Q = \u_conv2d.acc6 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc6_reg$conv2d.v:1246$4397 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11411$2433 [15:8], Q = \u_conv2d.acc6 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc6_reg$conv2d.v:1246$4397 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11411$2433 [23:16], Q = \u_conv2d.acc6 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc5_reg$conv2d.v:1246$4396 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11386$2432 [7:0], Q = \u_conv2d.acc5 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc5_reg$conv2d.v:1246$4396 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11386$2432 [15:8], Q = \u_conv2d.acc5 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc5_reg$conv2d.v:1246$4396 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11386$2432 [23:16], Q = \u_conv2d.acc5 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc4_reg$conv2d.v:1246$4395 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11361$2431 [7:0], Q = \u_conv2d.acc4 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc4_reg$conv2d.v:1246$4395 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11361$2431 [15:8], Q = \u_conv2d.acc4 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc4_reg$conv2d.v:1246$4395 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11361$2431 [23:16], Q = \u_conv2d.acc4 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc3_reg$conv2d.v:1246$4394 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11336$2430 [7:0], Q = \u_conv2d.acc3 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc3_reg$conv2d.v:1246$4394 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11336$2430 [15:8], Q = \u_conv2d.acc3 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc3_reg$conv2d.v:1246$4394 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11336$2430 [23:16], Q = \u_conv2d.acc3 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc2_reg$conv2d.v:1246$4393 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11311$2429 [7:0], Q = \u_conv2d.acc2 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc2_reg$conv2d.v:1246$4393 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11311$2429 [15:8], Q = \u_conv2d.acc2 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc2_reg$conv2d.v:1246$4393 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11311$2429 [23:16], Q = \u_conv2d.acc2 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc1_reg$conv2d.v:1246$4392 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11286$2428 [7:0], Q = \u_conv2d.acc1 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc1_reg$conv2d.v:1246$4392 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11286$2428 [15:8], Q = \u_conv2d.acc1 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc1_reg$conv2d.v:1246$4392 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11286$2428 [23:16], Q = \u_conv2d.acc1 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc0_reg$conv2d.v:1246$4391 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11261$2427 [7:0], Q = \u_conv2d.acc0 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc0_reg$conv2d.v:1246$4391 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11261$2427 [15:8], Q = \u_conv2d.acc0 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc0_reg$conv2d.v:1246$4391 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11261$2427 [23:16], Q = \u_conv2d.acc0 [23:16]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6347 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6347 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6248 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6248 ($adffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6248 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6150 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6150 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6120 ($adffe) from module top.
Setting constant 0-bit at position 0 on $flatten\u_conv2d.$verific$bias_base_addr_reg$conv2d.v:785$3005 ($adff) from module top.
Setting constant 0-bit at position 1 on $flatten\u_conv2d.$verific$bias_base_addr_reg$conv2d.v:785$3005 ($adff) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6372 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6372 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6310 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6310 ($adffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6310 ($adffe) from module top.
Setting constant 0-bit at position 0 on $flatten\u_conv2d.$verific$filters_complete_reg$conv2d.v:785$3021 ($adff) from module top.
Setting constant 0-bit at position 1 on $flatten\u_conv2d.$verific$filters_complete_reg$conv2d.v:785$3021 ($adff) from module top.
Setting constant 0-bit at position 2 on $flatten\u_conv2d.$verific$filters_complete_reg$conv2d.v:785$3021 ($adff) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6237 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6237 ($adffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6237 ($adffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6215 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6208 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6208 ($adffe) from module top.
Setting constant 0-bit at position 0 on $flatten\u_conv2d.$verific$i_pixel_waddr_reg$conv2d.v:913$3125 ($adff) from module top.
Setting constant 0-bit at position 1 on $flatten\u_conv2d.$verific$i_pixel_waddr_reg$conv2d.v:913$3125 ($adff) from module top.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 64 unused cells and 102 unused wires.
<suppressed ~65 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~135 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~149 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~519 debug messages>
Removed a total of 173 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5869 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$5869 ($adffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$5869 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6578 ($adff) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6578 ($adff) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6578 ($adff) from module top.
Setting constant 0-bit at position 0 on $flatten\u_conv2d.$verific$i_bias_raddr_reg$conv2d.v:785$3003 ($adff) from module top.
Setting constant 0-bit at position 1 on $flatten\u_conv2d.$verific$i_bias_raddr_reg$conv2d.v:785$3003 ($adff) from module top.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 182 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~153 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 7 bits (of 20) from FF cell top.$flatten\u_ctl.$verific$i_ctl_pfwaddr_reg$control.v:224$1718 ($adff).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$5657 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_211$control.v:216$1662 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_142$control.v:181$1633 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_141$control.v:177$1632 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_140$control.v:174$1631 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_139$control.v:169$1630 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_138$control.v:164$1629 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_137$control.v:159$1628 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_136$control.v:158$1627 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_135$control.v:157$1626 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_134$control.v:156$1625 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_133$control.v:155$1624 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_132$control.v:154$1623 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_131$control.v:153$1622 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_130$control.v:152$1621 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_129$control.v:151$1620 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_128$control.v:150$1619 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_127$control.v:149$1618 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_126$control.v:148$1617 ($eq).
Removed top 6 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_125$control.v:147$1616 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\u_ctl.$verific$add_108$control.v:161$1611 ($add).
Removed top 23 bits (of 24) from port B of cell top.$flatten\u_ctl.$verific$add_69$control.v:118$1593 ($add).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6318 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6316 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6303 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6290 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6225 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6207 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6177 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6147 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6145 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6143 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6083 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$6072 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5981 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5975 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5927 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5886 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5879 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5644 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$5714 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5688 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$5533 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$5532 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$5530 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$5529 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$5528 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$5527 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$5531 ($eq).
Removed top 1 bits (of 11) from port Y of cell top.$flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or).
Removed top 1 bits (of 11) from port A of cell top.$flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or).
Removed top 1 bits (of 11) from port B of cell top.$flatten\u_conv2d.\pk2.$verific$or_132$ksa1.v:31$5316 ($or).
Removed top 9 bits (of 12) from port B of cell top.$flatten\u_conv2d.\pk1.$verific$xor_4$ksa.v:12$4475 ($xor).
Removed top 9 bits (of 12) from port B of cell top.$flatten\u_conv2d.\pk1.$verific$and_6$ksa.v:13$4477 ($and).
Removed top 1 bits (of 12) from port Y of cell top.$flatten\u_conv2d.\pk1.$verific$and_6$ksa.v:13$4477 ($and).
Removed top 1 bits (of 12) from port A of cell top.$flatten\u_conv2d.\pk1.$verific$and_6$ksa.v:13$4477 ($and).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_7.$verific$xor_4$ksa.v:12$4644 ($xor).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_7.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port Y of cell top.$flatten\u_conv2d.\k16_7.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port A of cell top.$flatten\u_conv2d.\k16_7.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_6.$verific$xor_4$ksa.v:12$4644 ($xor).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_6.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port Y of cell top.$flatten\u_conv2d.\k16_6.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port A of cell top.$flatten\u_conv2d.\k16_6.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_5.$verific$xor_4$ksa.v:12$4644 ($xor).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_5.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port Y of cell top.$flatten\u_conv2d.\k16_5.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port A of cell top.$flatten\u_conv2d.\k16_5.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_4.$verific$xor_4$ksa.v:12$4644 ($xor).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_4.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port Y of cell top.$flatten\u_conv2d.\k16_4.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port A of cell top.$flatten\u_conv2d.\k16_4.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_3.$verific$xor_4$ksa.v:12$4644 ($xor).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_3.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port Y of cell top.$flatten\u_conv2d.\k16_3.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port A of cell top.$flatten\u_conv2d.\k16_3.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_2.$verific$xor_4$ksa.v:12$4644 ($xor).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_2.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port Y of cell top.$flatten\u_conv2d.\k16_2.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port A of cell top.$flatten\u_conv2d.\k16_2.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_1.$verific$xor_4$ksa.v:12$4644 ($xor).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_1.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port Y of cell top.$flatten\u_conv2d.\k16_1.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port A of cell top.$flatten\u_conv2d.\k16_1.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_0.$verific$xor_4$ksa.v:12$4644 ($xor).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_0.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port Y of cell top.$flatten\u_conv2d.\k16_0.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 1 bits (of 16) from port A of cell top.$flatten\u_conv2d.\k16_0.$verific$and_6$ksa.v:13$4646 ($and).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k7.$verific$xor_4$ksa.v:12$5126 ($xor).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k7.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port Y of cell top.$flatten\u_conv2d.\k7.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port A of cell top.$flatten\u_conv2d.\k7.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k6.$verific$xor_4$ksa.v:12$5126 ($xor).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k6.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port Y of cell top.$flatten\u_conv2d.\k6.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port A of cell top.$flatten\u_conv2d.\k6.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k5.$verific$xor_4$ksa.v:12$5126 ($xor).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k5.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port Y of cell top.$flatten\u_conv2d.\k5.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port A of cell top.$flatten\u_conv2d.\k5.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k4.$verific$xor_4$ksa.v:12$5126 ($xor).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k4.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port Y of cell top.$flatten\u_conv2d.\k4.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port A of cell top.$flatten\u_conv2d.\k4.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k3.$verific$xor_4$ksa.v:12$5126 ($xor).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k3.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port Y of cell top.$flatten\u_conv2d.\k3.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port A of cell top.$flatten\u_conv2d.\k3.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k2.$verific$xor_4$ksa.v:12$5126 ($xor).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k2.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port Y of cell top.$flatten\u_conv2d.\k2.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port A of cell top.$flatten\u_conv2d.\k2.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k1.$verific$xor_4$ksa.v:12$5126 ($xor).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k1.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port Y of cell top.$flatten\u_conv2d.\k1.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port A of cell top.$flatten\u_conv2d.\k1.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k0.$verific$xor_4$ksa.v:12$5126 ($xor).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k0.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port Y of cell top.$flatten\u_conv2d.\k0.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 1 bits (of 24) from port A of cell top.$flatten\u_conv2d.\k0.$verific$and_6$ksa.v:13$5128 ($and).
Removed top 7 bits (of 20) from port B of cell top.$flatten\u_conv2d.\t2_3.$verific$xor_4$ksa.v:12$4861 ($xor).
Removed top 7 bits (of 20) from port B of cell top.$flatten\u_conv2d.\t2_3.$verific$and_6$ksa.v:13$4863 ($and).
Removed top 1 bits (of 20) from port Y of cell top.$flatten\u_conv2d.\t2_3.$verific$and_6$ksa.v:13$4863 ($and).
Removed top 1 bits (of 20) from port A of cell top.$flatten\u_conv2d.\t2_3.$verific$and_6$ksa.v:13$4863 ($and).
Removed top 17 bits (of 20) from port B of cell top.$flatten\u_conv2d.\t2_2.$verific$xor_4$ksa.v:12$4861 ($xor).
Removed top 17 bits (of 20) from port B of cell top.$flatten\u_conv2d.\t2_2.$verific$and_6$ksa.v:13$4863 ($and).
Removed top 1 bits (of 20) from port Y of cell top.$flatten\u_conv2d.\t2_2.$verific$and_6$ksa.v:13$4863 ($and).
Removed top 1 bits (of 20) from port A of cell top.$flatten\u_conv2d.\t2_2.$verific$and_6$ksa.v:13$4863 ($and).
Removed top 11 bits (of 20) from port B of cell top.$flatten\u_conv2d.\t2_1.$verific$xor_4$ksa.v:12$4861 ($xor).
Removed top 11 bits (of 20) from port B of cell top.$flatten\u_conv2d.\t2_1.$verific$and_6$ksa.v:13$4863 ($and).
Removed top 1 bits (of 20) from port Y of cell top.$flatten\u_conv2d.\t2_1.$verific$and_6$ksa.v:13$4863 ($and).
Removed top 1 bits (of 20) from port A of cell top.$flatten\u_conv2d.\t2_1.$verific$and_6$ksa.v:13$4863 ($and).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$5618 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_conv2d.$verific$add_1110$conv2d.v:1199$4296 ($add).
Removed top 1 bits (of 7) from port B of cell top.$flatten\u_conv2d.$verific$equal_1094$conv2d.v:1182$4292 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\u_conv2d.$verific$add_1091$conv2d.v:1181$4290 ($add).
Removed top 1 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$equal_1069$conv2d.v:1157$4276 ($eq).
Removed top 6 bits (of 7) from port B of cell top.$flatten\u_conv2d.$verific$add_1066$conv2d.v:1156$4274 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_conv2d.$verific$add_1063$conv2d.v:1153$4272 ($add).
Removed top 9 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$add_1018$conv2d.v:1119$4253 ($add).
Removed top 1 bits (of 17) from port B of cell top.$flatten\u_conv2d.$verific$equal_768$conv2d.v:876$3066 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_conv2d.$verific$add_764$conv2d.v:874$3064 ($add).
Removed top 1 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$equal_756$conv2d.v:870$3060 ($eq).
Removed top 6 bits (of 7) from port B of cell top.$flatten\u_conv2d.$verific$add_753$conv2d.v:869$3058 ($add).
Removed top 17 bits (of 18) from port B of cell top.$flatten\u_conv2d.$verific$add_750$conv2d.v:867$3056 ($add).
Removed top 9 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$add_724$conv2d.v:842$3045 ($add).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_conv2d.$verific$select_635$conv2d.v:784$2972 ($pmux).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_conv2d.$verific$equal_623$conv2d.v:667$2958 ($eq).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_conv2d.$verific$mux_621$conv2d.v:782$2956 ($mux).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_conv2d.$verific$mux_617$conv2d.v:779$2954 ($mux).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_conv2d.$verific$mux_486$conv2d.v:702$2913 ($mux).
Removed top 2 bits (of 14) from port A of cell top.$flatten\u_conv2d.$verific$LessThan_472$conv2d.v:691$2908 ($le).
Removed top 1 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$LessThan_471$conv2d.v:690$2907 ($lt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\u_conv2d.$verific$add_468$conv2d.v:689$2905 ($add).
Removed top 5 bits (of 6) from port B of cell top.$flatten\u_conv2d.$verific$add_466$conv2d.v:688$2903 ($add).
Removed top 1 bits (of 14) from port A of cell top.$flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900 ($sub).
Removed top 10 bits (of 14) from port B of cell top.$flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900 ($sub).
Removed top 1 bits (of 14) from port Y of cell top.$flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900 ($sub).
Removed top 1 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$equal_463$conv2d.v:686$2899 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_conv2d.$verific$add_460$conv2d.v:685$2897 ($add).
Removed top 17 bits (of 18) from port B of cell top.$flatten\u_conv2d.$verific$add_454$conv2d.v:681$2891 ($add).
Removed top 1 bits (of 15) from port A of cell top.$flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881 ($sub).
Removed top 11 bits (of 15) from port B of cell top.$flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881 ($sub).
Removed top 1 bits (of 15) from port Y of cell top.$flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881 ($sub).
Removed top 10 bits (of 11) from port B of cell top.$flatten\u_conv2d.$verific$add_436$conv2d.v:669$2879 ($add).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_conv2d.$verific$mux_435$conv2d.v:665$2878 ($mux).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_conv2d.$verific$add_387$conv2d.v:638$2841 ($add).
Removed top 17 bits (of 18) from port B of cell top.$flatten\u_conv2d.$verific$add_381$conv2d.v:630$2837 ($add).
Removed top 9 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$add_354$conv2d.v:606$2823 ($add).
Removed top 1 bits (of 4) from mux cell top.$flatten\u_conv2d.$verific$mux_324$conv2d.v:579$2806 ($mux).
Removed top 10 bits (of 11) from port B of cell top.$flatten\u_conv2d.$verific$add_291$conv2d.v:540$2788 ($add).
Removed top 9 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$add_202$conv2d.v:418$2738 ($add).
Removed top 1 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$add_190$conv2d.v:409$2729 ($add).
Removed top 2 bits (of 4) from port B of cell top.$flatten\u_conv2d.$verific$equal_69$conv2d.v:123$2492 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\u_conv2d.$verific$equal_68$conv2d.v:122$2491 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\u_conv2d.$verific$equal_67$conv2d.v:121$2490 ($eq).
Removed top 1 bits (of 11) from port Y of cell top.$flatten\u_conv2d.\pk2.$verific$or_129$ksa1.v:30$5313 ($or).
Removed top 1 bits (of 11) from port A of cell top.$flatten\u_conv2d.\pk2.$verific$or_129$ksa1.v:30$5313 ($or).
Removed top 1 bits (of 11) from port B of cell top.$flatten\u_conv2d.\pk2.$verific$or_129$ksa1.v:30$5313 ($or).
Removed top 1 bits (of 11) from port Y of cell top.$flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and).
Removed top 1 bits (of 11) from port A of cell top.$flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and).
Removed top 1 bits (of 11) from port B of cell top.$flatten\u_conv2d.\pk2.$verific$and_133$ksa1.v:31$5315 ($and).
Removed top 1 bits (of 6) from mux cell top.$flatten\u_conv2d.$verific$mux_1278$conv2d.v:713$4197 ($mux).
Removed top 1 bits (of 12) from port Y of cell top.$flatten\u_conv2d.\pk2.$verific$and_6$ksa1.v:18$5296 ($and).
Removed top 1 bits (of 12) from port A of cell top.$flatten\u_conv2d.\pk2.$verific$and_6$ksa1.v:18$5296 ($and).
Removed top 1 bits (of 12) from port B of cell top.$flatten\u_conv2d.\pk2.$verific$and_6$ksa1.v:18$5296 ($and).
Removed cell top.$flatten\u_conv2d.\pk2.$verific$i116$ksa1.v:29$5309 ($and).
Removed top 1 bits (of 11) from port Y of cell top.$flatten\u_conv2d.\pk2.$verific$and_130$ksa1.v:30$5312 ($and).
Removed top 1 bits (of 11) from port A of cell top.$flatten\u_conv2d.\pk2.$verific$and_130$ksa1.v:30$5312 ($and).
Removed top 1 bits (of 11) from port B of cell top.$flatten\u_conv2d.\pk2.$verific$and_130$ksa1.v:30$5312 ($and).
Removed top 1 bits (of 4) from wire top.$flatten\u_conv2d.$verific$n4415$2110.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n5316$2159.
Removed top 1 bits (of 15) from wire top.$flatten\u_conv2d.$verific$n5359$2163.
Removed top 1 bits (of 14) from wire top.$flatten\u_conv2d.$verific$n5563$2172.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n5681$2178.
Removed top 1 bits (of 13) from wire top.$flatten\u_conv2d.$verific$n5687$2179.
Removed top 7 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n5701$2180.
Removed top 1 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n5711$2181.
Removed top 3 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n5723$2182.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n5734$2183.
Removed top 2 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n5740$2184.
Removed top 2 bits (of 13) from wire top.$flatten\u_conv2d.$verific$n5750$2185.
Removed top 1 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n5764$2186.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n5894$2195.
Removed top 1 bits (of 12) from wire top.$flatten\u_conv2d.$verific$n5924$2197.
Removed top 1 bits (of 14) from wire top.$flatten\u_conv2d.$verific$n5994$2199.
Removed top 3 bits (of 12) from wire top.$flatten\u_conv2d.$verific$n6009$2200.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n6534$2218.
Removed top 1 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n6538$2219.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n6553$2220.
Removed top 2 bits (of 12) from wire top.$flatten\u_conv2d.$verific$n6562$2221.
Removed top 3 bits (of 14) from wire top.$flatten\u_conv2d.$verific$n6575$2222.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n6647$2227.
Removed top 1 bits (of 32) from wire top.$flatten\u_conv2d.$verific$n6651$2228.
Removed top 7 bits (of 10) from wire top.$flatten\u_conv2d.$verific$n7729$2238.
Removed top 1 bits (of 11) from wire top.$flatten\u_conv2d.\pk2.$verific$n203$5289.
Removed top 1 bits (of 11) from wire top.$flatten\u_conv2d.\pk2.$verific$n206$5291.
Removed top 7 bits (of 20) from wire top.ctl_pfwaddr.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 188 unused cells and 312 unused wires.
<suppressed ~189 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\u_conv2d.$verific$add_1018$conv2d.v:1119$4253 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_1063$conv2d.v:1153$4272 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_1066$conv2d.v:1156$4274 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_1091$conv2d.v:1181$4290 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_1110$conv2d.v:1199$4296 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_190$conv2d.v:409$2729 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_202$conv2d.v:418$2738 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_291$conv2d.v:540$2788 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_354$conv2d.v:606$2823 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_381$conv2d.v:630$2837 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_387$conv2d.v:638$2841 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_436$conv2d.v:669$2879 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_454$conv2d.v:681$2891 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_460$conv2d.v:685$2897 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_466$conv2d.v:688$2903 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_468$conv2d.v:689$2905 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_724$conv2d.v:842$3045 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_750$conv2d.v:867$3056 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_753$conv2d.v:869$3058 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_764$conv2d.v:874$3064 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_903$conv2d.v:1018$4179 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_905$conv2d.v:1019$4181 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_907$conv2d.v:1020$4183 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_909$conv2d.v:1021$4185 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_911$conv2d.v:1022$4187 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_913$conv2d.v:1023$4189 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_915$conv2d.v:1024$4191 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_917$conv2d.v:1025$4193 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_929$conv2d.v:1041$4203 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881 ($sub).
  creating $macc model for $flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900 ($sub).
  creating $macc model for $flatten\u_conv2d.$verific$sub_697$conv2d.v:804$3033 ($sub).
  creating $macc model for $flatten\u_conv2d.$verific$sub_699$conv2d.v:805$3035 ($sub).
  creating $macc model for $flatten\u_conv2d.$verific$sub_701$conv2d.v:806$3037 ($sub).
  creating $macc model for $flatten\u_conv2d.$verific$sub_703$conv2d.v:807$3039 ($sub).
  creating $macc model for $flatten\u_ctl.$verific$add_108$control.v:161$1611 ($add).
  creating $macc model for $flatten\u_ctl.$verific$add_69$control.v:118$1593 ($add).
  creating $alu model for $macc $flatten\u_ctl.$verific$add_69$control.v:118$1593.
  creating $alu model for $macc $flatten\u_ctl.$verific$add_108$control.v:161$1611.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_703$conv2d.v:807$3039.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_701$conv2d.v:806$3037.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_699$conv2d.v:805$3035.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_697$conv2d.v:804$3033.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_929$conv2d.v:1041$4203.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_917$conv2d.v:1025$4193.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_915$conv2d.v:1024$4191.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_913$conv2d.v:1023$4189.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_911$conv2d.v:1022$4187.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_909$conv2d.v:1021$4185.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_907$conv2d.v:1020$4183.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_905$conv2d.v:1019$4181.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_903$conv2d.v:1018$4179.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_764$conv2d.v:874$3064.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_753$conv2d.v:869$3058.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_750$conv2d.v:867$3056.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_724$conv2d.v:842$3045.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_468$conv2d.v:689$2905.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_466$conv2d.v:688$2903.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_460$conv2d.v:685$2897.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_454$conv2d.v:681$2891.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_436$conv2d.v:669$2879.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_387$conv2d.v:638$2841.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_381$conv2d.v:630$2837.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_354$conv2d.v:606$2823.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_291$conv2d.v:540$2788.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_202$conv2d.v:418$2738.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_190$conv2d.v:409$2729.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_1110$conv2d.v:1199$4296.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_1091$conv2d.v:1181$4290.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_1066$conv2d.v:1156$4274.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_1063$conv2d.v:1153$4272.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_1018$conv2d.v:1119$4253.
  creating $alu model for $flatten\u_conv2d.$verific$LessThan_471$conv2d.v:690$2907 ($lt): new $alu
  creating $alu model for $flatten\u_conv2d.$verific$LessThan_472$conv2d.v:691$2908 ($le): new $alu
  creating $alu model for $flatten\u_conv2d.$verific$LessThan_924$conv2d.v:1033$4199 ($lt): new $alu
  creating $alu cell for $flatten\u_conv2d.$verific$LessThan_924$conv2d.v:1033$4199: $auto$alumacc.cc:485:replace_alu$7718
  creating $alu cell for $flatten\u_conv2d.$verific$LessThan_472$conv2d.v:691$2908: $auto$alumacc.cc:485:replace_alu$7723
  creating $alu cell for $flatten\u_conv2d.$verific$LessThan_471$conv2d.v:690$2907: $auto$alumacc.cc:485:replace_alu$7732
  creating $alu cell for $flatten\u_conv2d.$verific$add_1018$conv2d.v:1119$4253: $auto$alumacc.cc:485:replace_alu$7743
  creating $alu cell for $flatten\u_conv2d.$verific$add_1063$conv2d.v:1153$4272: $auto$alumacc.cc:485:replace_alu$7746
  creating $alu cell for $flatten\u_conv2d.$verific$add_1066$conv2d.v:1156$4274: $auto$alumacc.cc:485:replace_alu$7749
  creating $alu cell for $flatten\u_conv2d.$verific$add_1091$conv2d.v:1181$4290: $auto$alumacc.cc:485:replace_alu$7752
  creating $alu cell for $flatten\u_conv2d.$verific$add_1110$conv2d.v:1199$4296: $auto$alumacc.cc:485:replace_alu$7755
  creating $alu cell for $flatten\u_conv2d.$verific$add_190$conv2d.v:409$2729: $auto$alumacc.cc:485:replace_alu$7758
  creating $alu cell for $flatten\u_conv2d.$verific$add_202$conv2d.v:418$2738: $auto$alumacc.cc:485:replace_alu$7761
  creating $alu cell for $flatten\u_conv2d.$verific$add_291$conv2d.v:540$2788: $auto$alumacc.cc:485:replace_alu$7764
  creating $alu cell for $flatten\u_conv2d.$verific$add_354$conv2d.v:606$2823: $auto$alumacc.cc:485:replace_alu$7767
  creating $alu cell for $flatten\u_conv2d.$verific$add_381$conv2d.v:630$2837: $auto$alumacc.cc:485:replace_alu$7770
  creating $alu cell for $flatten\u_conv2d.$verific$add_387$conv2d.v:638$2841: $auto$alumacc.cc:485:replace_alu$7773
  creating $alu cell for $flatten\u_conv2d.$verific$add_436$conv2d.v:669$2879: $auto$alumacc.cc:485:replace_alu$7776
  creating $alu cell for $flatten\u_conv2d.$verific$add_454$conv2d.v:681$2891: $auto$alumacc.cc:485:replace_alu$7779
  creating $alu cell for $flatten\u_conv2d.$verific$add_460$conv2d.v:685$2897: $auto$alumacc.cc:485:replace_alu$7782
  creating $alu cell for $flatten\u_conv2d.$verific$add_466$conv2d.v:688$2903: $auto$alumacc.cc:485:replace_alu$7785
  creating $alu cell for $flatten\u_conv2d.$verific$add_468$conv2d.v:689$2905: $auto$alumacc.cc:485:replace_alu$7788
  creating $alu cell for $flatten\u_conv2d.$verific$add_724$conv2d.v:842$3045: $auto$alumacc.cc:485:replace_alu$7791
  creating $alu cell for $flatten\u_conv2d.$verific$add_750$conv2d.v:867$3056: $auto$alumacc.cc:485:replace_alu$7794
  creating $alu cell for $flatten\u_conv2d.$verific$add_753$conv2d.v:869$3058: $auto$alumacc.cc:485:replace_alu$7797
  creating $alu cell for $flatten\u_conv2d.$verific$add_764$conv2d.v:874$3064: $auto$alumacc.cc:485:replace_alu$7800
  creating $alu cell for $flatten\u_conv2d.$verific$add_903$conv2d.v:1018$4179: $auto$alumacc.cc:485:replace_alu$7803
  creating $alu cell for $flatten\u_conv2d.$verific$add_905$conv2d.v:1019$4181: $auto$alumacc.cc:485:replace_alu$7806
  creating $alu cell for $flatten\u_conv2d.$verific$add_907$conv2d.v:1020$4183: $auto$alumacc.cc:485:replace_alu$7809
  creating $alu cell for $flatten\u_conv2d.$verific$add_909$conv2d.v:1021$4185: $auto$alumacc.cc:485:replace_alu$7812
  creating $alu cell for $flatten\u_conv2d.$verific$add_911$conv2d.v:1022$4187: $auto$alumacc.cc:485:replace_alu$7815
  creating $alu cell for $flatten\u_conv2d.$verific$add_913$conv2d.v:1023$4189: $auto$alumacc.cc:485:replace_alu$7818
  creating $alu cell for $flatten\u_conv2d.$verific$add_915$conv2d.v:1024$4191: $auto$alumacc.cc:485:replace_alu$7821
  creating $alu cell for $flatten\u_conv2d.$verific$add_917$conv2d.v:1025$4193: $auto$alumacc.cc:485:replace_alu$7824
  creating $alu cell for $flatten\u_conv2d.$verific$add_929$conv2d.v:1041$4203: $auto$alumacc.cc:485:replace_alu$7827
  creating $alu cell for $flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881: $auto$alumacc.cc:485:replace_alu$7830
  creating $alu cell for $flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900: $auto$alumacc.cc:485:replace_alu$7833
  creating $alu cell for $flatten\u_conv2d.$verific$sub_697$conv2d.v:804$3033: $auto$alumacc.cc:485:replace_alu$7836
  creating $alu cell for $flatten\u_conv2d.$verific$sub_699$conv2d.v:805$3035: $auto$alumacc.cc:485:replace_alu$7839
  creating $alu cell for $flatten\u_conv2d.$verific$sub_701$conv2d.v:806$3037: $auto$alumacc.cc:485:replace_alu$7842
  creating $alu cell for $flatten\u_conv2d.$verific$sub_703$conv2d.v:807$3039: $auto$alumacc.cc:485:replace_alu$7845
  creating $alu cell for $flatten\u_ctl.$verific$add_108$control.v:161$1611: $auto$alumacc.cc:485:replace_alu$7848
  creating $alu cell for $flatten\u_ctl.$verific$add_69$control.v:118$1593: $auto$alumacc.cc:485:replace_alu$7851
  created 40 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~21 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~57 debug messages>
Removed a total of 19 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~162 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7579: { $auto$rtlil.cc:2398:Or$7534 $flatten\u_ctl.$verific$n1311$1424 $flatten\u_ctl.$verific$n1312$1425 $flatten\u_ctl.$verific$n1313$1426 $flatten\u_ctl.$verific$n1314$1427 $flatten\u_ctl.$verific$n1315$1428 $flatten\u_ctl.$verific$n1316$1429 $flatten\u_ctl.$verific$n1317$1430 $flatten\u_ctl.$verific$n1318$1431 $flatten\u_ctl.$verific$n2420$1441 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7145: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:7] $auto$fsm_map.cc:194:map_fsm$5525 [5:2] }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7039: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11] $auto$fsm_map.cc:194:map_fsm$5525 [9:7] $auto$fsm_map.cc:194:map_fsm$5525 [4:1] }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6627: { $auto$fsm_map.cc:194:map_fsm$5525 [10:9] $auto$fsm_map.cc:118:implement_pattern_cache$5554 $auto$fsm_map.cc:118:implement_pattern_cache$5558 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6643: { $auto$fsm_map.cc:194:map_fsm$5525 [11:8] $auto$fsm_map.cc:118:implement_pattern_cache$5563 $auto$fsm_map.cc:118:implement_pattern_cache$5567 $auto$fsm_map.cc:118:implement_pattern_cache$5572 $auto$fsm_map.cc:118:implement_pattern_cache$5554 $auto$fsm_map.cc:118:implement_pattern_cache$5558 $auto$fsm_map.cc:118:implement_pattern_cache$5576 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7117: { $flatten\u_conv2d.$verific$n11257$1925 $auto$fsm_map.cc:194:map_fsm$5525 [11:7] $auto$fsm_map.cc:194:map_fsm$5525 [5:1] }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6639: { $auto$fsm_map.cc:118:implement_pattern_cache$5581 $auto$fsm_map.cc:118:implement_pattern_cache$5585 $auto$fsm_map.cc:118:implement_pattern_cache$5589 $auto$fsm_map.cc:118:implement_pattern_cache$5594 $auto$fsm_map.cc:118:implement_pattern_cache$5598 $auto$fsm_map.cc:194:map_fsm$5525 [1] }
  Optimizing cells in module \top.
Performed a total of 7 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 33 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~168 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> stat

3.22. Printing statistics.

=== top ===

   Number of wires:               2418
   Number of wire bits:          17395
   Number of public wires:         631
   Number of public wire bits:    8669
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3365
     $adff                          54
     $adffe                         86
     $aldff                          1
     $aldffe                         6
     $alu                           40
     $and                         1132
     $bmux                          22
     $eq                            72
     $logic_not                      8
     $mux                          524
     $ne                            73
     $not                           66
     $or                           744
     $reduce_and                    60
     $reduce_or                     82
     $xor                          395


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$38cb0f029412d9c5be508a54230c018d83428929\_80_rs_alu for cells of type $alu.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $aldffe.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$49641a5ace7a8dbedd31c417f5a1b54fcecf6c7d\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$f28fc3f2e267d7716249e826e8c90c34ca9542c1\_90_alu for cells of type $alu.
Using template $paramod$0a77e3c00010cb33e399decd813a7380c6e25cba\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$403c17aef119cccdd585ba431bb1c77ec6e3c700\_90_alu for cells of type $alu.
Using template $paramod$46d3f1a4a915912bab1067a0beb0fb376719baeb\_90_alu for cells of type $alu.
Using template $paramod$0d6d95e3fa0eb6b4a427f21fbcbdc6321e6ab338\_80_rs_alu for cells of type $alu.
Using template $paramod$f30f8fc2e30bd83d28cb1ad43b9d9ec083109075\_90_alu for cells of type $alu.
Using template $paramod$ea402187f386206c0840504755479bf827f47707\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $aldff.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$b2626aff51a34e60b9c57dceb41667aaf5650a38\_90_alu for cells of type $alu.
Using template $paramod$c703ee6d780d90e162c7eed92bfd050bee00636f\_90_alu for cells of type $alu.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
No more expansions possible.
<suppressed ~8012 debug messages>

yosys> stat

3.24. Printing statistics.

=== top ===

   Number of wires:               5197
   Number of wire bits:          66860
   Number of public wires:         631
   Number of public wire bits:    8669
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              21311
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_AND_                       2698
     $_DFFE_PN0N_                   99
     $_DFFE_PN0P_                  606
     $_DFFE_PN1N_                    1
     $_DFFE_PN1P_                   26
     $_DFF_PN0_                    619
     $_DFF_PN1_                      3
     $_MUX_                      12066
     $_NOT_                        599
     $_OR_                        2274
     $_XOR_                       2152
     adder_carry                    88


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8751 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~4248 debug messages>
Removed a total of 1416 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$26833 ($_DFFE_PN1P_) from module top (D = $auto$rtlil.cc:2464:Mux$6914 [1], Q = \u_conv2d.i_math_mode [1]).
Adding EN signal on $auto$ff.cc:262:slice$26832 ($_DFFE_PN0P_) from module top (D = $auto$rtlil.cc:2464:Mux$6914 [0], Q = \u_conv2d.i_math_mode [0]).
Adding EN signal on $auto$ff.cc:262:slice$20434 ($_DFFE_PN0P_) from module top (D = $auto$rtlil.cc:2464:Mux$7232 [0], Q = \u_conv2d.filter_stride [0]).
Adding EN signal on $auto$ff.cc:262:slice$20435 ($_DFFE_PN0P_) from module top (D = $auto$rtlil.cc:2464:Mux$7232 [1], Q = \u_conv2d.filter_stride [1]).
Adding EN signal on $auto$ff.cc:262:slice$20436 ($_DFFE_PN0P_) from module top (D = $auto$rtlil.cc:2464:Mux$7232 [2], Q = \u_conv2d.filter_stride [2]).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1333 unused cells and 2917 unused wires.
<suppressed ~1334 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~36 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$8374 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26236 [11], Q = \u_conv2d.bias_base_addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$8373 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26236 [10], Q = \u_conv2d.bias_base_addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$8372 ($_DFF_PN1_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26236 [9], Q = \u_conv2d.bias_base_addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$8371 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26236 [8], Q = \u_conv2d.bias_base_addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$8370 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26236 [7], Q = \u_conv2d.bias_base_addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$8369 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26236 [6], Q = \u_conv2d.bias_base_addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$8368 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26236 [5], Q = \u_conv2d.bias_base_addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$20008 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [12], Q = \u_conv2d.add_stride [12]).
Adding EN signal on $auto$ff.cc:262:slice$20007 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [11], Q = \u_conv2d.add_stride [11]).
Adding EN signal on $auto$ff.cc:262:slice$20006 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [10], Q = \u_conv2d.add_stride [10]).
Adding EN signal on $auto$ff.cc:262:slice$20005 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [9], Q = \u_conv2d.add_stride [9]).
Adding EN signal on $auto$ff.cc:262:slice$20004 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [8], Q = \u_conv2d.add_stride [8]).
Adding EN signal on $auto$ff.cc:262:slice$20003 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [7], Q = \u_conv2d.add_stride [7]).
Adding EN signal on $auto$ff.cc:262:slice$20002 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [6], Q = \u_conv2d.add_stride [6]).
Adding EN signal on $auto$ff.cc:262:slice$20001 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [5], Q = \u_conv2d.add_stride [5]).
Adding EN signal on $auto$ff.cc:262:slice$20000 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [4], Q = \u_conv2d.add_stride [4]).
Adding EN signal on $auto$ff.cc:262:slice$19999 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [3], Q = \u_conv2d.add_stride [3]).
Adding EN signal on $auto$ff.cc:262:slice$19998 ($_DFF_PN1_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [2], Q = \u_conv2d.add_stride [2]).
Adding EN signal on $auto$ff.cc:262:slice$19997 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [1], Q = \u_conv2d.add_stride [1]).
Adding EN signal on $auto$ff.cc:262:slice$19996 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22059 [0], Q = \u_conv2d.add_stride [0]).
Adding EN signal on $auto$ff.cc:262:slice$19993 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25857 [3], Q = \u_conv2d.fsm_loadacc [3]).
Adding EN signal on $auto$ff.cc:262:slice$19992 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25857 [2], Q = \u_conv2d.fsm_loadacc [2]).
Adding EN signal on $auto$ff.cc:262:slice$19991 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25857 [1], Q = \u_conv2d.fsm_loadacc [1]).
Adding EN signal on $auto$ff.cc:262:slice$19990 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25857 [0], Q = \u_conv2d.fsm_loadacc [0]).
Adding EN signal on $auto$ff.cc:262:slice$19984 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [18], Q = \u_conv2d.bias0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$19983 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [17], Q = \u_conv2d.bias0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$19982 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [16], Q = \u_conv2d.bias0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$19981 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [15], Q = \u_conv2d.bias0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$19980 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [14], Q = \u_conv2d.bias0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$19979 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [13], Q = \u_conv2d.bias0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$19978 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [12], Q = \u_conv2d.bias0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$19977 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [11], Q = \u_conv2d.bias0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$19976 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [10], Q = \u_conv2d.bias0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$19975 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [9], Q = \u_conv2d.bias0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$19974 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [8], Q = \u_conv2d.bias0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$19973 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [7], Q = \u_conv2d.bias0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$19972 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [6], Q = \u_conv2d.bias0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$19971 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [5], Q = \u_conv2d.bias0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$19970 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [4], Q = \u_conv2d.bias0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$19969 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [3], Q = \u_conv2d.bias0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$19968 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [2], Q = \u_conv2d.bias0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$19967 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [1], Q = \u_conv2d.bias0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$19966 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25773 [0], Q = \u_conv2d.bias0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$19960 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [18], Q = \u_conv2d.bias1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$19959 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [17], Q = \u_conv2d.bias1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$19958 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [16], Q = \u_conv2d.bias1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$19957 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [15], Q = \u_conv2d.bias1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$19956 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [14], Q = \u_conv2d.bias1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$19955 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [13], Q = \u_conv2d.bias1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$19954 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [12], Q = \u_conv2d.bias1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$19953 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [11], Q = \u_conv2d.bias1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$19952 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [10], Q = \u_conv2d.bias1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$19951 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [9], Q = \u_conv2d.bias1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$19950 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [8], Q = \u_conv2d.bias1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$19949 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [7], Q = \u_conv2d.bias1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$19948 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [6], Q = \u_conv2d.bias1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$19947 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [5], Q = \u_conv2d.bias1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$19946 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [4], Q = \u_conv2d.bias1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$19945 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [3], Q = \u_conv2d.bias1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$19944 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [2], Q = \u_conv2d.bias1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$19943 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [1], Q = \u_conv2d.bias1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$19942 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25409 [0], Q = \u_conv2d.bias1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$19936 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [18], Q = \u_conv2d.bias2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$19935 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [17], Q = \u_conv2d.bias2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$19934 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [16], Q = \u_conv2d.bias2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$19933 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [15], Q = \u_conv2d.bias2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$19932 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [14], Q = \u_conv2d.bias2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$19931 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [13], Q = \u_conv2d.bias2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$19930 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [12], Q = \u_conv2d.bias2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$19929 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [11], Q = \u_conv2d.bias2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$19928 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [10], Q = \u_conv2d.bias2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$19927 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [9], Q = \u_conv2d.bias2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$19926 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [8], Q = \u_conv2d.bias2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$19925 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [7], Q = \u_conv2d.bias2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$19924 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [6], Q = \u_conv2d.bias2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$19923 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [5], Q = \u_conv2d.bias2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$19922 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [4], Q = \u_conv2d.bias2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$19921 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [3], Q = \u_conv2d.bias2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$19920 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [2], Q = \u_conv2d.bias2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$19919 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [1], Q = \u_conv2d.bias2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$19918 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$25045 [0], Q = \u_conv2d.bias2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$19912 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [18], Q = \u_conv2d.bias3 [18]).
Adding EN signal on $auto$ff.cc:262:slice$19911 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [17], Q = \u_conv2d.bias3 [17]).
Adding EN signal on $auto$ff.cc:262:slice$19910 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [16], Q = \u_conv2d.bias3 [16]).
Adding EN signal on $auto$ff.cc:262:slice$19909 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [15], Q = \u_conv2d.bias3 [15]).
Adding EN signal on $auto$ff.cc:262:slice$19908 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [14], Q = \u_conv2d.bias3 [14]).
Adding EN signal on $auto$ff.cc:262:slice$19907 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [13], Q = \u_conv2d.bias3 [13]).
Adding EN signal on $auto$ff.cc:262:slice$19906 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [12], Q = \u_conv2d.bias3 [12]).
Adding EN signal on $auto$ff.cc:262:slice$19905 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [11], Q = \u_conv2d.bias3 [11]).
Adding EN signal on $auto$ff.cc:262:slice$19904 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [10], Q = \u_conv2d.bias3 [10]).
Adding EN signal on $auto$ff.cc:262:slice$19903 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [9], Q = \u_conv2d.bias3 [9]).
Adding EN signal on $auto$ff.cc:262:slice$19902 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [8], Q = \u_conv2d.bias3 [8]).
Adding EN signal on $auto$ff.cc:262:slice$19901 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [7], Q = \u_conv2d.bias3 [7]).
Adding EN signal on $auto$ff.cc:262:slice$19900 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [6], Q = \u_conv2d.bias3 [6]).
Adding EN signal on $auto$ff.cc:262:slice$19899 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [5], Q = \u_conv2d.bias3 [5]).
Adding EN signal on $auto$ff.cc:262:slice$19898 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [4], Q = \u_conv2d.bias3 [4]).
Adding EN signal on $auto$ff.cc:262:slice$19897 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [3], Q = \u_conv2d.bias3 [3]).
Adding EN signal on $auto$ff.cc:262:slice$19896 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [2], Q = \u_conv2d.bias3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$19895 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [1], Q = \u_conv2d.bias3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$19894 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24681 [0], Q = \u_conv2d.bias3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$19888 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [18], Q = \u_conv2d.bias4 [18]).
Adding EN signal on $auto$ff.cc:262:slice$19887 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [17], Q = \u_conv2d.bias4 [17]).
Adding EN signal on $auto$ff.cc:262:slice$19886 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [16], Q = \u_conv2d.bias4 [16]).
Adding EN signal on $auto$ff.cc:262:slice$19885 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [15], Q = \u_conv2d.bias4 [15]).
Adding EN signal on $auto$ff.cc:262:slice$19884 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [14], Q = \u_conv2d.bias4 [14]).
Adding EN signal on $auto$ff.cc:262:slice$19883 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [13], Q = \u_conv2d.bias4 [13]).
Adding EN signal on $auto$ff.cc:262:slice$19882 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [12], Q = \u_conv2d.bias4 [12]).
Adding EN signal on $auto$ff.cc:262:slice$19881 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [11], Q = \u_conv2d.bias4 [11]).
Adding EN signal on $auto$ff.cc:262:slice$19880 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [10], Q = \u_conv2d.bias4 [10]).
Adding EN signal on $auto$ff.cc:262:slice$19879 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [9], Q = \u_conv2d.bias4 [9]).
Adding EN signal on $auto$ff.cc:262:slice$19878 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [8], Q = \u_conv2d.bias4 [8]).
Adding EN signal on $auto$ff.cc:262:slice$19877 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [7], Q = \u_conv2d.bias4 [7]).
Adding EN signal on $auto$ff.cc:262:slice$19876 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [6], Q = \u_conv2d.bias4 [6]).
Adding EN signal on $auto$ff.cc:262:slice$19875 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [5], Q = \u_conv2d.bias4 [5]).
Adding EN signal on $auto$ff.cc:262:slice$19874 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [4], Q = \u_conv2d.bias4 [4]).
Adding EN signal on $auto$ff.cc:262:slice$19873 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [3], Q = \u_conv2d.bias4 [3]).
Adding EN signal on $auto$ff.cc:262:slice$19872 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [2], Q = \u_conv2d.bias4 [2]).
Adding EN signal on $auto$ff.cc:262:slice$19871 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [1], Q = \u_conv2d.bias4 [1]).
Adding EN signal on $auto$ff.cc:262:slice$19870 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$24317 [0], Q = \u_conv2d.bias4 [0]).
Adding EN signal on $auto$ff.cc:262:slice$19864 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [18], Q = \u_conv2d.bias5 [18]).
Adding EN signal on $auto$ff.cc:262:slice$19863 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [17], Q = \u_conv2d.bias5 [17]).
Adding EN signal on $auto$ff.cc:262:slice$19862 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [16], Q = \u_conv2d.bias5 [16]).
Adding EN signal on $auto$ff.cc:262:slice$19861 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [15], Q = \u_conv2d.bias5 [15]).
Adding EN signal on $auto$ff.cc:262:slice$19860 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [14], Q = \u_conv2d.bias5 [14]).
Adding EN signal on $auto$ff.cc:262:slice$19859 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [13], Q = \u_conv2d.bias5 [13]).
Adding EN signal on $auto$ff.cc:262:slice$19858 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [12], Q = \u_conv2d.bias5 [12]).
Adding EN signal on $auto$ff.cc:262:slice$19857 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [11], Q = \u_conv2d.bias5 [11]).
Adding EN signal on $auto$ff.cc:262:slice$19856 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [10], Q = \u_conv2d.bias5 [10]).
Adding EN signal on $auto$ff.cc:262:slice$19855 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [9], Q = \u_conv2d.bias5 [9]).
Adding EN signal on $auto$ff.cc:262:slice$19854 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [8], Q = \u_conv2d.bias5 [8]).
Adding EN signal on $auto$ff.cc:262:slice$19853 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [7], Q = \u_conv2d.bias5 [7]).
Adding EN signal on $auto$ff.cc:262:slice$19852 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [6], Q = \u_conv2d.bias5 [6]).
Adding EN signal on $auto$ff.cc:262:slice$19851 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [5], Q = \u_conv2d.bias5 [5]).
Adding EN signal on $auto$ff.cc:262:slice$19850 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [4], Q = \u_conv2d.bias5 [4]).
Adding EN signal on $auto$ff.cc:262:slice$19849 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [3], Q = \u_conv2d.bias5 [3]).
Adding EN signal on $auto$ff.cc:262:slice$19848 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [2], Q = \u_conv2d.bias5 [2]).
Adding EN signal on $auto$ff.cc:262:slice$19847 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [1], Q = \u_conv2d.bias5 [1]).
Adding EN signal on $auto$ff.cc:262:slice$19846 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23953 [0], Q = \u_conv2d.bias5 [0]).
Adding EN signal on $auto$ff.cc:262:slice$19840 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [18], Q = \u_conv2d.bias6 [18]).
Adding EN signal on $auto$ff.cc:262:slice$19839 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [17], Q = \u_conv2d.bias6 [17]).
Adding EN signal on $auto$ff.cc:262:slice$19838 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [16], Q = \u_conv2d.bias6 [16]).
Adding EN signal on $auto$ff.cc:262:slice$19837 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [15], Q = \u_conv2d.bias6 [15]).
Adding EN signal on $auto$ff.cc:262:slice$19836 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [14], Q = \u_conv2d.bias6 [14]).
Adding EN signal on $auto$ff.cc:262:slice$19835 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [13], Q = \u_conv2d.bias6 [13]).
Adding EN signal on $auto$ff.cc:262:slice$19834 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [12], Q = \u_conv2d.bias6 [12]).
Adding EN signal on $auto$ff.cc:262:slice$19833 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [11], Q = \u_conv2d.bias6 [11]).
Adding EN signal on $auto$ff.cc:262:slice$19832 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [10], Q = \u_conv2d.bias6 [10]).
Adding EN signal on $auto$ff.cc:262:slice$19831 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [9], Q = \u_conv2d.bias6 [9]).
Adding EN signal on $auto$ff.cc:262:slice$19830 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [8], Q = \u_conv2d.bias6 [8]).
Adding EN signal on $auto$ff.cc:262:slice$19829 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [7], Q = \u_conv2d.bias6 [7]).
Adding EN signal on $auto$ff.cc:262:slice$19828 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [6], Q = \u_conv2d.bias6 [6]).
Adding EN signal on $auto$ff.cc:262:slice$19827 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [5], Q = \u_conv2d.bias6 [5]).
Adding EN signal on $auto$ff.cc:262:slice$19826 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [4], Q = \u_conv2d.bias6 [4]).
Adding EN signal on $auto$ff.cc:262:slice$19825 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [3], Q = \u_conv2d.bias6 [3]).
Adding EN signal on $auto$ff.cc:262:slice$19824 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [2], Q = \u_conv2d.bias6 [2]).
Adding EN signal on $auto$ff.cc:262:slice$19823 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [1], Q = \u_conv2d.bias6 [1]).
Adding EN signal on $auto$ff.cc:262:slice$19822 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23589 [0], Q = \u_conv2d.bias6 [0]).
Adding EN signal on $auto$ff.cc:262:slice$19816 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [42], Q = \u_conv2d.bias7 [18]).
Adding EN signal on $auto$ff.cc:262:slice$19815 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [41], Q = \u_conv2d.bias7 [17]).
Adding EN signal on $auto$ff.cc:262:slice$19814 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [40], Q = \u_conv2d.bias7 [16]).
Adding EN signal on $auto$ff.cc:262:slice$19813 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [39], Q = \u_conv2d.bias7 [15]).
Adding EN signal on $auto$ff.cc:262:slice$19812 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [38], Q = \u_conv2d.bias7 [14]).
Adding EN signal on $auto$ff.cc:262:slice$19811 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [37], Q = \u_conv2d.bias7 [13]).
Adding EN signal on $auto$ff.cc:262:slice$19810 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [36], Q = \u_conv2d.bias7 [12]).
Adding EN signal on $auto$ff.cc:262:slice$19809 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [35], Q = \u_conv2d.bias7 [11]).
Adding EN signal on $auto$ff.cc:262:slice$19808 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [34], Q = \u_conv2d.bias7 [10]).
Adding EN signal on $auto$ff.cc:262:slice$19807 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [33], Q = \u_conv2d.bias7 [9]).
Adding EN signal on $auto$ff.cc:262:slice$19806 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [32], Q = \u_conv2d.bias7 [8]).
Adding EN signal on $auto$ff.cc:262:slice$19805 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [31], Q = \u_conv2d.bias7 [7]).
Adding EN signal on $auto$ff.cc:262:slice$19804 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [30], Q = \u_conv2d.bias7 [6]).
Adding EN signal on $auto$ff.cc:262:slice$19803 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [29], Q = \u_conv2d.bias7 [5]).
Adding EN signal on $auto$ff.cc:262:slice$19802 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [28], Q = \u_conv2d.bias7 [4]).
Adding EN signal on $auto$ff.cc:262:slice$19801 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [27], Q = \u_conv2d.bias7 [3]).
Adding EN signal on $auto$ff.cc:262:slice$19800 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [26], Q = \u_conv2d.bias7 [2]).
Adding EN signal on $auto$ff.cc:262:slice$19799 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [25], Q = \u_conv2d.bias7 [1]).
Adding EN signal on $auto$ff.cc:262:slice$19798 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$23176 [24], Q = \u_conv2d.bias7 [0]).
Adding EN signal on $auto$ff.cc:262:slice$19776 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [19], Q = \u_conv2d.result_base [19]).
Adding EN signal on $auto$ff.cc:262:slice$19775 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [18], Q = \u_conv2d.result_base [18]).
Adding EN signal on $auto$ff.cc:262:slice$19774 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [17], Q = \u_conv2d.result_base [17]).
Adding EN signal on $auto$ff.cc:262:slice$19773 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [16], Q = \u_conv2d.result_base [16]).
Adding EN signal on $auto$ff.cc:262:slice$19772 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [15], Q = \u_conv2d.result_base [15]).
Adding EN signal on $auto$ff.cc:262:slice$19771 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [14], Q = \u_conv2d.result_base [14]).
Adding EN signal on $auto$ff.cc:262:slice$19770 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [13], Q = \u_conv2d.result_base [13]).
Adding EN signal on $auto$ff.cc:262:slice$19769 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [12], Q = \u_conv2d.result_base [12]).
Adding EN signal on $auto$ff.cc:262:slice$19768 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [11], Q = \u_conv2d.result_base [11]).
Adding EN signal on $auto$ff.cc:262:slice$19767 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [10], Q = \u_conv2d.result_base [10]).
Adding EN signal on $auto$ff.cc:262:slice$19766 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [9], Q = \u_conv2d.result_base [9]).
Adding EN signal on $auto$ff.cc:262:slice$19765 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [8], Q = \u_conv2d.result_base [8]).
Adding EN signal on $auto$ff.cc:262:slice$19764 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [7], Q = \u_conv2d.result_base [7]).
Adding EN signal on $auto$ff.cc:262:slice$19763 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [6], Q = \u_conv2d.result_base [6]).
Adding EN signal on $auto$ff.cc:262:slice$19762 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [5], Q = \u_conv2d.result_base [5]).
Adding EN signal on $auto$ff.cc:262:slice$19761 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [4], Q = \u_conv2d.result_base [4]).
Adding EN signal on $auto$ff.cc:262:slice$19760 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [3], Q = \u_conv2d.result_base [3]).
Adding EN signal on $auto$ff.cc:262:slice$19759 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [2], Q = \u_conv2d.result_base [2]).
Adding EN signal on $auto$ff.cc:262:slice$19758 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [1], Q = \u_conv2d.result_base [1]).
Adding EN signal on $auto$ff.cc:262:slice$19757 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$22356 [0], Q = \u_conv2d.result_base [0]).
Adding EN signal on $auto$ff.cc:262:slice$19756 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [31], Q = \u_conv2d.i_tcdm2_wdata [31]).
Adding EN signal on $auto$ff.cc:262:slice$19755 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [30], Q = \u_conv2d.i_tcdm2_wdata [30]).
Adding EN signal on $auto$ff.cc:262:slice$19754 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [29], Q = \u_conv2d.i_tcdm2_wdata [29]).
Adding EN signal on $auto$ff.cc:262:slice$19753 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [28], Q = \u_conv2d.i_tcdm2_wdata [28]).
Adding EN signal on $auto$ff.cc:262:slice$19752 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [27], Q = \u_conv2d.i_tcdm2_wdata [27]).
Adding EN signal on $auto$ff.cc:262:slice$19751 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [26], Q = \u_conv2d.i_tcdm2_wdata [26]).
Adding EN signal on $auto$ff.cc:262:slice$19750 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [25], Q = \u_conv2d.i_tcdm2_wdata [25]).
Adding EN signal on $auto$ff.cc:262:slice$19749 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [24], Q = \u_conv2d.i_tcdm2_wdata [24]).
Adding EN signal on $auto$ff.cc:262:slice$19748 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [23], Q = \u_conv2d.i_tcdm2_wdata [23]).
Adding EN signal on $auto$ff.cc:262:slice$19747 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [22], Q = \u_conv2d.i_tcdm2_wdata [22]).
Adding EN signal on $auto$ff.cc:262:slice$19746 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [21], Q = \u_conv2d.i_tcdm2_wdata [21]).
Adding EN signal on $auto$ff.cc:262:slice$19745 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [20], Q = \u_conv2d.i_tcdm2_wdata [20]).
Adding EN signal on $auto$ff.cc:262:slice$19744 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [19], Q = \u_conv2d.i_tcdm2_wdata [19]).
Adding EN signal on $auto$ff.cc:262:slice$19743 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [18], Q = \u_conv2d.i_tcdm2_wdata [18]).
Adding EN signal on $auto$ff.cc:262:slice$19742 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [17], Q = \u_conv2d.i_tcdm2_wdata [17]).
Adding EN signal on $auto$ff.cc:262:slice$19741 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [16], Q = \u_conv2d.i_tcdm2_wdata [16]).
Adding EN signal on $auto$ff.cc:262:slice$19740 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [15], Q = \u_conv2d.i_tcdm2_wdata [15]).
Adding EN signal on $auto$ff.cc:262:slice$19739 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [14], Q = \u_conv2d.i_tcdm2_wdata [14]).
Adding EN signal on $auto$ff.cc:262:slice$19738 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [13], Q = \u_conv2d.i_tcdm2_wdata [13]).
Adding EN signal on $auto$ff.cc:262:slice$19737 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [12], Q = \u_conv2d.i_tcdm2_wdata [12]).
Adding EN signal on $auto$ff.cc:262:slice$19736 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [11], Q = \u_conv2d.i_tcdm2_wdata [11]).
Adding EN signal on $auto$ff.cc:262:slice$19735 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [10], Q = \u_conv2d.i_tcdm2_wdata [10]).
Adding EN signal on $auto$ff.cc:262:slice$19734 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [9], Q = \u_conv2d.i_tcdm2_wdata [9]).
Adding EN signal on $auto$ff.cc:262:slice$19733 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [8], Q = \u_conv2d.i_tcdm2_wdata [8]).
Adding EN signal on $auto$ff.cc:262:slice$19732 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [7], Q = \u_conv2d.i_tcdm2_wdata [7]).
Adding EN signal on $auto$ff.cc:262:slice$19731 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [6], Q = \u_conv2d.i_tcdm2_wdata [6]).
Adding EN signal on $auto$ff.cc:262:slice$19730 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [5], Q = \u_conv2d.i_tcdm2_wdata [5]).
Adding EN signal on $auto$ff.cc:262:slice$19729 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [4], Q = \u_conv2d.i_tcdm2_wdata [4]).
Adding EN signal on $auto$ff.cc:262:slice$19728 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [3], Q = \u_conv2d.i_tcdm2_wdata [3]).
Adding EN signal on $auto$ff.cc:262:slice$19727 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [2], Q = \u_conv2d.i_tcdm2_wdata [2]).
Adding EN signal on $auto$ff.cc:262:slice$19726 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [1], Q = \u_conv2d.i_tcdm2_wdata [1]).
Adding EN signal on $auto$ff.cc:262:slice$19725 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21209 [0], Q = \u_conv2d.i_tcdm2_wdata [0]).
Adding EN signal on $auto$ff.cc:262:slice$19724 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [7], Q = \u_conv2d.wdata2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$19723 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [6], Q = \u_conv2d.wdata2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$19722 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [5], Q = \u_conv2d.wdata2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$19721 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [4], Q = \u_conv2d.wdata2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$19720 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [3], Q = \u_conv2d.wdata2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$19719 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [2], Q = \u_conv2d.wdata2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$19718 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [1], Q = \u_conv2d.wdata2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$19717 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [0], Q = \u_conv2d.wdata2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$19716 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [7], Q = \u_conv2d.wdata2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$19715 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [6], Q = \u_conv2d.wdata2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$19714 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [5], Q = \u_conv2d.wdata2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$19713 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [4], Q = \u_conv2d.wdata2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$19712 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [3], Q = \u_conv2d.wdata2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$19711 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [2], Q = \u_conv2d.wdata2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$19710 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [1], Q = \u_conv2d.wdata2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$19709 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [0], Q = \u_conv2d.wdata2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$19708 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [7], Q = \u_conv2d.wdata2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$19707 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [6], Q = \u_conv2d.wdata2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$19706 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [5], Q = \u_conv2d.wdata2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$19705 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [4], Q = \u_conv2d.wdata2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$19704 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [3], Q = \u_conv2d.wdata2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$19703 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [2], Q = \u_conv2d.wdata2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$19702 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [1], Q = \u_conv2d.wdata2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$19701 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [0], Q = \u_conv2d.wdata2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$19700 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [7], Q = \u_conv2d.wdata2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$19699 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [6], Q = \u_conv2d.wdata2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$19698 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [5], Q = \u_conv2d.wdata2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$19697 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [4], Q = \u_conv2d.wdata2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$19696 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [3], Q = \u_conv2d.wdata2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$19695 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [2], Q = \u_conv2d.wdata2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$19694 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [1], Q = \u_conv2d.wdata2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$19693 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [0], Q = \u_conv2d.wdata2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$19661 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21321 [0], Q = \u_conv2d.i_tcdm2_wreq).
Adding EN signal on $auto$ff.cc:262:slice$19645 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26052 [11], Q = \u_conv2d.i_bias_raddr [11]).
Adding EN signal on $auto$ff.cc:262:slice$19644 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26052 [10], Q = \u_conv2d.i_bias_raddr [10]).
Adding EN signal on $auto$ff.cc:262:slice$19643 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26052 [9], Q = \u_conv2d.i_bias_raddr [9]).
Adding EN signal on $auto$ff.cc:262:slice$19642 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26052 [8], Q = \u_conv2d.i_bias_raddr [8]).
Adding EN signal on $auto$ff.cc:262:slice$19641 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26052 [7], Q = \u_conv2d.i_bias_raddr [7]).
Adding EN signal on $auto$ff.cc:262:slice$19640 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26052 [6], Q = \u_conv2d.i_bias_raddr [6]).
Adding EN signal on $auto$ff.cc:262:slice$19639 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26052 [5], Q = \u_conv2d.i_bias_raddr [5]).
Adding EN signal on $auto$ff.cc:262:slice$19638 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26052 [4], Q = \u_conv2d.i_bias_raddr [4]).
Adding EN signal on $auto$ff.cc:262:slice$19637 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26052 [3], Q = \u_conv2d.i_bias_raddr [3]).
Adding EN signal on $auto$ff.cc:262:slice$19636 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$26052 [2], Q = \u_conv2d.i_bias_raddr [2]).
Adding EN signal on $auto$ff.cc:262:slice$19599 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21869 [3], Q = \u_conv2d.fsm_writechannels [3]).
Adding EN signal on $auto$ff.cc:262:slice$19598 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21869 [2], Q = \u_conv2d.fsm_writechannels [2]).
Adding EN signal on $auto$ff.cc:262:slice$19597 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21869 [1], Q = \u_conv2d.fsm_writechannels [1]).
Adding EN signal on $auto$ff.cc:262:slice$19596 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$21869 [0], Q = \u_conv2d.fsm_writechannels [0]).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 180 unused cells and 2057 unused wires.
<suppressed ~181 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6158 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~28383 debug messages>
Removed a total of 9461 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9123 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.25.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3631 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 252 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~95 debug messages>

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$19663 ($_ALDFFE_PNP_) from module top (D = \u_ctl.i_filter_base [1], Q = \u_conv2d.i_tcdm2_raddr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$19662 ($_ALDFFE_PNP_) from module top (D = \u_ctl.i_filter_base [0], Q = \u_conv2d.i_tcdm2_raddr [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$19660 ($_ALDFFE_PNP_) from module top (D = \u_ctl.i_bias_base [1], Q = \u_conv2d.i_tcdm3_raddr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$19659 ($_ALDFFE_PNP_) from module top (D = \u_ctl.i_bias_base [0], Q = \u_conv2d.i_tcdm3_raddr [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$19120 ($_ALDFFE_PNP_) from module top (D = \u_ctl.i_pixel_base [1], Q = \u_conv2d.i_tcdm1_addr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$19119 ($_ALDFFE_PNP_) from module top (D = \u_ctl.i_pixel_base [0], Q = \u_conv2d.i_tcdm1_addr [0], rval = 1'0).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 6 unused cells and 0 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.28.18. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Summary of detected clock domains:
  16 cells in clk=\PCLK, en=!$flatten\u_conv2d.$verific$n11615$1934, arst=!\rstn, srst={ }
  12 cells in clk=\PCLK, en=!$flatten\u_conv2d.$verific$n11617$1936, arst=!\rstn, srst={ }
  25 cells in clk=\PCLK, en=!$auto$opt_reduce.cc:134:opt_pmux$5372, arst=!\rstn, srst={ }
  18 cells in clk=\PCLK, en=!$auto$opt_reduce.cc:134:opt_pmux$5388, arst=!\rstn, srst={ }
  302 cells in clk=\PCLK, en=!$auto$opt_reduce.cc:134:opt_pmux$5336, arst=!\rstn, srst={ }
  1654 cells in clk=\PCLK, en={ }, arst=!\rstn, srst={ }
  29 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$57082, arst=!\rstn, srst={ }
  12 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$56984, arst=!\rstn, srst={ }
  47 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$56628, arst=!\rstn, srst={ }
  13 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$57751, arst=!\rstn, srst={ }
  143 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$58061, arst=!\rstn, srst={ }
  121 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$57948, arst=!\rstn, srst={ }
  109 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5744, arst=!\rstn, srst={ }
  322 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5751, arst=!\rstn, srst={ }
  119 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5764, arst=!\rstn, srst={ }
  10 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5754, arst=!\rstn, srst={ }
  42 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5737, arst=!\rstn, srst={ }
  76 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6345, arst=!\rstn, srst={ }
  37 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6332, arst=!\rstn, srst={ }
  15 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6396, arst=!\rstn, srst={ }
  37 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6370, arst=!\rstn, srst={ }
  109 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6293, arst=!\rstn, srst={ }
  48 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6282, arst=!\rstn, srst={ }
  103 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6319, arst=!\rstn, srst={ }
  19 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6308, arst=!\rstn, srst={ }
  58 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6424, arst=!\rstn, srst={ }
  10 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6411, arst=!\rstn, srst={ }
  739 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6440, arst=!\rstn, srst={ }
  527 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6433, arst=!\rstn, srst={ }
  83 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$35102, arst=!\rstn, srst={ }
  218 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5809, arst=!\rstn, srst={ }
  193 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5837, arst=!\rstn, srst={ }
  103 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5830, arst=!\rstn, srst={ }
  444 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5823, arst=!\rstn, srst={ }
  38 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5816, arst=!\rstn, srst={ }
  13 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5771, arst=!\rstn, srst={ }
  98 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5802, arst=!\rstn, srst={ }
  224 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$34688, arst=!\rstn, srst={ }
  34 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5795, arst=!\rstn, srst={ }
  182 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5785, arst=!\rstn, srst={ }
  9 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5788, arst=!\rstn, srst={ }
  5 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5948, arst=!\rstn, srst={ }
  53 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5930, arst=!\rstn, srst={ }
  18 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5921, arst=!\rstn, srst={ }
  42 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5982, arst=!\rstn, srst={ }
  11 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5955, arst=!\rstn, srst={ }
  296 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5866, arst=!\rstn, srst={ }
  228 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5859, arst=!\rstn, srst={ }
  21 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5850, arst=!\rstn, srst={ }
  110 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5898, arst=!\rstn, srst={ }
  20 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5889, arst=!\rstn, srst={ }
  45 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$5880, arst=!\rstn, srst={ }
  26 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6084, arst=!\rstn, srst={ }
  28 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6073, arst=!\rstn, srst={ }
  84 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6060, arst=!\rstn, srst={ }
  51 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6118, arst=!\rstn, srst={ }
  24 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6109, arst=!\rstn, srst={ }
  20 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6028, arst=!\rstn, srst={ }
  60 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6203, arst=!\rstn, srst={ }
  42 cells in clk=\PCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$6206, arst=!\rstn, srst={ }
  11 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6196, arst=!\rstn, srst={ }
  91 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6246, arst=!\rstn, srst={ }
  152 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6235, arst=!\rstn, srst={ }
  92 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6226, arst=!\rstn, srst={ }
  86 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6148, arst=!\rstn, srst={ }
  109 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$6182, arst=!\rstn, srst={ }
  84 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$37363, arst=!\rstn, srst={ }
  83 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$44146, arst=!\rstn, srst={ }
  23 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$31997, arst=!\rstn, srst={ }
  81 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$48668, arst=!\rstn, srst={ }
  15 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$32038, arst=!\rstn, srst={ }
  82 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$39624, arst=!\rstn, srst={ }
  80 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$50896, arst=!\rstn, srst={ }
  52 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$54476, arst=!\rstn, srst={ }
  54 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$52525, arst=!\rstn, srst={ }
  63 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$32929, arst=!\rstn, srst={ }
  27 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$32200, arst=!\rstn, srst={ }
  79 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$46407, arst=!\rstn, srst={ }
  77 cells in clk=\PCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$41885, arst=!\rstn, srst={ }

3.29.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by !$flatten\u_conv2d.$verific$n11615$1934, asynchronously reset by !\rstn
Extracted 16 gates and 31 wires to a netlist network with 15 inputs and 14 outputs.

3.29.2.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.2.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       12
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by !$flatten\u_conv2d.$verific$n11617$1936, asynchronously reset by !\rstn
Extracted 12 gates and 23 wires to a netlist network with 11 inputs and 9 outputs.

3.29.3.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        8
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.4. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by !$auto$opt_reduce.cc:134:opt_pmux$5372, asynchronously reset by !\rstn
Extracted 25 gates and 50 wires to a netlist network with 25 inputs and 23 outputs.

3.29.4.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.4.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       32
ABC RESULTS:               DFF cells:       16
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       23
Removing temp directory.

3.29.5. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by !$auto$opt_reduce.cc:134:opt_pmux$5388, asynchronously reset by !\rstn
Extracted 18 gates and 27 wires to a netlist network with 8 inputs and 8 outputs.

3.29.5.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by !$auto$opt_reduce.cc:134:opt_pmux$5336, asynchronously reset by !\rstn
Extracted 270 gates and 400 wires to a netlist network with 130 inputs and 83 outputs.

3.29.6.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       24
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:       24
ABC RESULTS:               DFF cells:       24
ABC RESULTS:               MUX cells:       50
ABC RESULTS:              NAND cells:       57
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:       17
ABC RESULTS:             ORNOT cells:       24
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               XOR cells:       40
ABC RESULTS:        internal signals:      187
ABC RESULTS:           input signals:      130
ABC RESULTS:          output signals:       83
Removing temp directory.

3.29.7. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, asynchronously reset by !\rstn
Extracted 1628 gates and 2137 wires to a netlist network with 507 inputs and 456 outputs.

3.29.7.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      283
ABC RESULTS:            ANDNOT cells:      127
ABC RESULTS:               BUF cells:      279
ABC RESULTS:               DFF cells:      300
ABC RESULTS:               MUX cells:      106
ABC RESULTS:              NAND cells:      161
ABC RESULTS:               NOR cells:       88
ABC RESULTS:               NOT cells:       80
ABC RESULTS:               ONE cells:        1
ABC RESULTS:                OR cells:      100
ABC RESULTS:             ORNOT cells:       28
ABC RESULTS:              XNOR cells:       47
ABC RESULTS:               XOR cells:       52
ABC RESULTS:        internal signals:     1174
ABC RESULTS:           input signals:      507
ABC RESULTS:          output signals:      456
Removing temp directory.

3.29.8. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$57082, asynchronously reset by !\rstn
Extracted 29 gates and 45 wires to a netlist network with 16 inputs and 15 outputs.

3.29.8.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        7
ABC RESULTS:              NAND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.9. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$56984, asynchronously reset by !\rstn
Extracted 12 gates and 24 wires to a netlist network with 10 inputs and 6 outputs.

3.29.9.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.10. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$56628, asynchronously reset by !\rstn
Extracted 47 gates and 82 wires to a netlist network with 35 inputs and 33 outputs.

3.29.10.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.10.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       50
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       14
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       33
Removing temp directory.

3.29.11. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$57751, asynchronously reset by !\rstn
Extracted 13 gates and 23 wires to a netlist network with 9 inputs and 12 outputs.

3.29.11.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.11.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.12. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$58061, asynchronously reset by !\rstn
Extracted 143 gates and 275 wires to a netlist network with 131 inputs and 66 outputs.

3.29.12.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.12.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       54
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:       25
ABC RESULTS:              NAND cells:      115
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:        9
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:        internal signals:       78
ABC RESULTS:           input signals:      131
ABC RESULTS:          output signals:       66
Removing temp directory.

3.29.13. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$57948, asynchronously reset by !\rstn
Extracted 121 gates and 274 wires to a netlist network with 152 inputs and 112 outputs.

3.29.13.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.13.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:       95
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        7
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:      152
ABC RESULTS:          output signals:      112
Removing temp directory.

3.29.14. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5744, asynchronously reset by !\rstn
Extracted 109 gates and 187 wires to a netlist network with 77 inputs and 54 outputs.

3.29.14.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.14.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       17
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       16
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               XOR cells:       32
ABC RESULTS:        internal signals:       56
ABC RESULTS:           input signals:       77
ABC RESULTS:          output signals:       54
Removing temp directory.

3.29.15. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5751, asynchronously reset by !\rstn
Extracted 322 gates and 664 wires to a netlist network with 341 inputs and 169 outputs.

3.29.15.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.15.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       46
ABC RESULTS:            ANDNOT cells:       21
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:      204
ABC RESULTS:              NAND cells:       23
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        9
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:        internal signals:      154
ABC RESULTS:           input signals:      341
ABC RESULTS:          output signals:      169
Removing temp directory.

3.29.16. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5764, asynchronously reset by !\rstn
Extracted 101 gates and 163 wires to a netlist network with 61 inputs and 51 outputs.

3.29.16.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.16.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       26
ABC RESULTS:            ANDNOT cells:       21
ABC RESULTS:               BUF cells:       20
ABC RESULTS:               DFF cells:       20
ABC RESULTS:               MUX cells:       22
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        8
ABC RESULTS:        internal signals:       51
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       51
Removing temp directory.

3.29.17. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5754, asynchronously reset by !\rstn
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 7 outputs.

3.29.17.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.17.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.18. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5737, asynchronously reset by !\rstn
Extracted 42 gates and 68 wires to a netlist network with 25 inputs and 11 outputs.

3.29.18.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.18.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.19. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6345, asynchronously reset by !\rstn
Extracted 76 gates and 84 wires to a netlist network with 7 inputs and 11 outputs.

3.29.19.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.19.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       17
ABC RESULTS:            ANDNOT cells:       17
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        8
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:       66
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6332, asynchronously reset by !\rstn
Extracted 37 gates and 67 wires to a netlist network with 30 inputs and 11 outputs.

3.29.20.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.20.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        5
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.21. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6396, asynchronously reset by !\rstn
Extracted 15 gates and 29 wires to a netlist network with 13 inputs and 8 outputs.

3.29.21.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.21.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.22. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6370, asynchronously reset by !\rstn
Extracted 37 gates and 44 wires to a netlist network with 7 inputs and 18 outputs.

3.29.22.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.22.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       14
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.23. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6293, asynchronously reset by !\rstn
Extracted 109 gates and 124 wires to a netlist network with 15 inputs and 16 outputs.

3.29.23.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.23.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        9
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:       10
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:               XOR cells:       10
ABC RESULTS:        internal signals:       93
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.24. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6282, asynchronously reset by !\rstn
Extracted 48 gates and 66 wires to a netlist network with 18 inputs and 27 outputs.

3.29.24.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.24.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       23
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        6
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       11
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       27
Removing temp directory.

3.29.25. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6319, asynchronously reset by !\rstn
Extracted 103 gates and 112 wires to a netlist network with 7 inputs and 12 outputs.

3.29.25.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.25.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       21
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:       11
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:       11
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:        internal signals:       93
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.26. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6308, asynchronously reset by !\rstn
Extracted 19 gates and 30 wires to a netlist network with 11 inputs and 4 outputs.

3.29.26.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.26.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.27. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6424, asynchronously reset by !\rstn
Extracted 58 gates and 68 wires to a netlist network with 9 inputs and 13 outputs.

3.29.27.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.27.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       19
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        9
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:       46
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.28. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6411, asynchronously reset by !\rstn
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 3 outputs.

3.29.28.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.28.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.29. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6440, asynchronously reset by !\rstn
Extracted 739 gates and 894 wires to a netlist network with 154 inputs and 214 outputs.

3.29.29.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.29.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      158
ABC RESULTS:               BUF cells:       53
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               MUX cells:       69
ABC RESULTS:              NAND cells:      360
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        9
ABC RESULTS:                OR cells:       89
ABC RESULTS:              XNOR cells:       12
ABC RESULTS:               XOR cells:       24
ABC RESULTS:        internal signals:      526
ABC RESULTS:           input signals:      154
ABC RESULTS:          output signals:      214
Removing temp directory.

3.29.30. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6433, asynchronously reset by !\rstn
Extracted 527 gates and 658 wires to a netlist network with 130 inputs and 171 outputs.

3.29.30.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.30.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      149
ABC RESULTS:            ANDNOT cells:       48
ABC RESULTS:               BUF cells:       49
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               MUX cells:       44
ABC RESULTS:              NAND cells:       12
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:       13
ABC RESULTS:                OR cells:      105
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:      357
ABC RESULTS:           input signals:      130
ABC RESULTS:          output signals:      171
Removing temp directory.

3.29.31. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$35102, asynchronously reset by !\rstn
Extracted 83 gates and 123 wires to a netlist network with 40 inputs and 28 outputs.

3.29.31.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.31.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        4
ABC RESULTS:                OR cells:        4
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       17
ABC RESULTS:        internal signals:       55
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:       28
Removing temp directory.

3.29.32. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5809, asynchronously reset by !\rstn
Extracted 198 gates and 275 wires to a netlist network with 76 inputs and 61 outputs.

3.29.32.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.32.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       41
ABC RESULTS:            ANDNOT cells:       26
ABC RESULTS:               BUF cells:       20
ABC RESULTS:               DFF cells:       20
ABC RESULTS:               MUX cells:       14
ABC RESULTS:              NAND cells:       35
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       22
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:       17
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      138
ABC RESULTS:           input signals:       76
ABC RESULTS:          output signals:       61
Removing temp directory.

3.29.33. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5837, asynchronously reset by !\rstn
Extracted 173 gates and 247 wires to a netlist network with 73 inputs and 62 outputs.

3.29.33.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.33.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       41
ABC RESULTS:            ANDNOT cells:       21
ABC RESULTS:               BUF cells:       20
ABC RESULTS:               DFF cells:       20
ABC RESULTS:               MUX cells:       20
ABC RESULTS:              NAND cells:       54
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       35
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:      112
ABC RESULTS:           input signals:       73
ABC RESULTS:          output signals:       62
Removing temp directory.

3.29.34. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5830, asynchronously reset by !\rstn
Extracted 103 gates and 168 wires to a netlist network with 64 inputs and 75 outputs.

3.29.34.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.34.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       19
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               MUX cells:        9
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:       13
ABC RESULTS:                OR cells:        4
ABC RESULTS:               XOR cells:       37
ABC RESULTS:        internal signals:       29
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       75
Removing temp directory.

3.29.35. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5823, asynchronously reset by !\rstn
Extracted 444 gates and 706 wires to a netlist network with 261 inputs and 78 outputs.

3.29.35.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.35.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      100
ABC RESULTS:            ANDNOT cells:       30
ABC RESULTS:               BUF cells:       32
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:      115
ABC RESULTS:              NAND cells:      124
ABC RESULTS:               NOR cells:       37
ABC RESULTS:               NOT cells:       19
ABC RESULTS:                OR cells:       31
ABC RESULTS:             ORNOT cells:       27
ABC RESULTS:        internal signals:      367
ABC RESULTS:           input signals:      261
ABC RESULTS:          output signals:       78
Removing temp directory.

3.29.36. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5816, asynchronously reset by !\rstn
Extracted 38 gates and 63 wires to a netlist network with 24 inputs and 10 outputs.

3.29.36.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.36.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       29
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.37. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5771, asynchronously reset by !\rstn
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 7 outputs.

3.29.37.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.37.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.38. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5802, asynchronously reset by !\rstn
Extracted 98 gates and 155 wires to a netlist network with 56 inputs and 58 outputs.

3.29.38.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.38.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       14
ABC RESULTS:            ANDNOT cells:       22
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               MUX cells:        9
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        5
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:               XOR cells:       19
ABC RESULTS:        internal signals:       41
ABC RESULTS:           input signals:       56
ABC RESULTS:          output signals:       58
Removing temp directory.

3.29.39. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$34688, asynchronously reset by !\rstn
Extracted 224 gates and 398 wires to a netlist network with 172 inputs and 153 outputs.

3.29.39.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.39.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       26
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:      123
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        6
ABC RESULTS:               ONE cells:        2
ABC RESULTS:                OR cells:       20
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:        internal signals:       73
ABC RESULTS:           input signals:      172
ABC RESULTS:          output signals:      153
Removing temp directory.

3.29.40. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5795, asynchronously reset by !\rstn
Extracted 34 gates and 52 wires to a netlist network with 17 inputs and 11 outputs.

3.29.40.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.40.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.41. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5785, asynchronously reset by !\rstn
Extracted 162 gates and 223 wires to a netlist network with 60 inputs and 49 outputs.

3.29.41.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.41.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       40
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       20
ABC RESULTS:               DFF cells:       20
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:       36
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       20
ABC RESULTS:              XNOR cells:       17
ABC RESULTS:        internal signals:      114
ABC RESULTS:           input signals:       60
ABC RESULTS:          output signals:       49
Removing temp directory.

3.29.42. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5788, asynchronously reset by !\rstn
Extracted 9 gates and 16 wires to a netlist network with 7 inputs and 5 outputs.

3.29.42.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.42.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.43. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5948, asynchronously reset by !\rstn
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.29.43.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.43.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.44. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5930, asynchronously reset by !\rstn
Extracted 53 gates and 98 wires to a netlist network with 44 inputs and 34 outputs.

3.29.44.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.44.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:       11
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       14
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       44
ABC RESULTS:          output signals:       34
Removing temp directory.

3.29.45. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5921, asynchronously reset by !\rstn
Extracted 18 gates and 31 wires to a netlist network with 12 inputs and 8 outputs.

3.29.45.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.45.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.46. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5982, asynchronously reset by !\rstn
Extracted 42 gates and 98 wires to a netlist network with 54 inputs and 31 outputs.

3.29.46.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.46.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:       20
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       54
ABC RESULTS:          output signals:       31
Removing temp directory.

3.29.47. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5955, asynchronously reset by !\rstn
Extracted 11 gates and 19 wires to a netlist network with 7 inputs and 7 outputs.

3.29.47.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.47.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        3
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.48. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5866, asynchronously reset by !\rstn
Extracted 296 gates and 517 wires to a netlist network with 220 inputs and 201 outputs.

3.29.48.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.48.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       65
ABC RESULTS:            ANDNOT cells:       31
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:      165
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       96
ABC RESULTS:           input signals:      220
ABC RESULTS:          output signals:      201
Removing temp directory.

3.29.49. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5859, asynchronously reset by !\rstn
Extracted 228 gates and 336 wires to a netlist network with 107 inputs and 68 outputs.

3.29.49.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.49.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       29
ABC RESULTS:            ANDNOT cells:       25
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:       18
ABC RESULTS:               MUX cells:       33
ABC RESULTS:              NAND cells:       48
ABC RESULTS:               NOR cells:       10
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       20
ABC RESULTS:              XNOR cells:       17
ABC RESULTS:        internal signals:      161
ABC RESULTS:           input signals:      107
ABC RESULTS:          output signals:       68
Removing temp directory.

3.29.50. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5850, asynchronously reset by !\rstn
Extracted 21 gates and 37 wires to a netlist network with 15 inputs and 9 outputs.

3.29.50.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.50.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.51. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5898, asynchronously reset by !\rstn
Extracted 110 gates and 143 wires to a netlist network with 32 inputs and 33 outputs.

3.29.51.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.51.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       50
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:       17
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        1
ABC RESULTS:               XOR cells:       15
ABC RESULTS:        internal signals:       78
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       33
Removing temp directory.

3.29.52. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5889, asynchronously reset by !\rstn
Extracted 20 gates and 49 wires to a netlist network with 28 inputs and 17 outputs.

3.29.52.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.52.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:       10
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.53. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5880, asynchronously reset by !\rstn
Extracted 45 gates and 64 wires to a netlist network with 18 inputs and 14 outputs.

3.29.53.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.53.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        6
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.54. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6084, asynchronously reset by !\rstn
Extracted 26 gates and 45 wires to a netlist network with 18 inputs and 9 outputs.

3.29.54.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.54.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        4
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        4
ABC RESULTS:               ONE cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.55. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6073, asynchronously reset by !\rstn
Extracted 28 gates and 54 wires to a netlist network with 24 inputs and 15 outputs.

3.29.55.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.55.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       20
ABC RESULTS:               DFF cells:       12
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.56. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6060, asynchronously reset by !\rstn
Extracted 84 gates and 131 wires to a netlist network with 46 inputs and 42 outputs.

3.29.56.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.56.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:       62
ABC RESULTS:               DFF cells:       39
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:       43
ABC RESULTS:           input signals:       46
ABC RESULTS:          output signals:       42
Removing temp directory.

3.29.57. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6118, asynchronously reset by !\rstn
Extracted 51 gates and 102 wires to a netlist network with 51 inputs and 35 outputs.

3.29.57.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.57.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       51
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       13
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       51
ABC RESULTS:          output signals:       35
Removing temp directory.

3.29.58. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6109, asynchronously reset by !\rstn
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 7 outputs.

3.29.58.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.58.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.59. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6028, asynchronously reset by !\rstn
Extracted 20 gates and 30 wires to a netlist network with 9 inputs and 7 outputs.

3.29.59.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.59.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.60. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6203, asynchronously reset by !\rstn
Extracted 60 gates and 98 wires to a netlist network with 37 inputs and 34 outputs.

3.29.60.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.60.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       24
ABC RESULTS:               BUF cells:       41
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       34
Removing temp directory.

3.29.61. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $abc$65103$auto$opt_dff.cc:194:make_patterns_logic$6206, asynchronously reset by !\rstn
Extracted 42 gates and 44 wires to a netlist network with 2 inputs and 10 outputs.

3.29.61.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.61.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       15
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:       10
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        7
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.62. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6196, asynchronously reset by !\rstn
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 4 outputs.

3.29.62.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.62.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.63. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6246, asynchronously reset by !\rstn
Extracted 91 gates and 125 wires to a netlist network with 33 inputs and 48 outputs.

3.29.63.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.63.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       27
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        6
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        6
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:               XOR cells:       24
ABC RESULTS:        internal signals:       44
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       48
Removing temp directory.

3.29.64. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6235, asynchronously reset by !\rstn
Extracted 152 gates and 278 wires to a netlist network with 126 inputs and 69 outputs.

3.29.64.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.64.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:       98
ABC RESULTS:              NAND cells:       67
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:       31
ABC RESULTS:        internal signals:       83
ABC RESULTS:           input signals:      126
ABC RESULTS:          output signals:       69
Removing temp directory.

3.29.65. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6226, asynchronously reset by !\rstn
Extracted 92 gates and 152 wires to a netlist network with 58 inputs and 10 outputs.

3.29.65.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.65.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       35
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:       22
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       84
ABC RESULTS:           input signals:       58
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.66. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6148, asynchronously reset by !\rstn
Extracted 86 gates and 98 wires to a netlist network with 11 inputs and 25 outputs.

3.29.66.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.66.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       25
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:       11
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:       11
ABC RESULTS:                OR cells:        8
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       62
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:       25
Removing temp directory.

3.29.67. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6182, asynchronously reset by !\rstn
Extracted 109 gates and 145 wires to a netlist network with 35 inputs and 14 outputs.

3.29.67.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.67.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       24
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               DFF cells:       10
ABC RESULTS:               MUX cells:       11
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        7
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:       96
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.68. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$37363, asynchronously reset by !\rstn
Extracted 84 gates and 125 wires to a netlist network with 41 inputs and 30 outputs.

3.29.68.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.68.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       23
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        5
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       16
ABC RESULTS:        internal signals:       54
ABC RESULTS:           input signals:       41
ABC RESULTS:          output signals:       30
Removing temp directory.

3.29.69. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$44146, asynchronously reset by !\rstn
Extracted 83 gates and 123 wires to a netlist network with 39 inputs and 29 outputs.

3.29.69.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.69.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       16
ABC RESULTS:        internal signals:       55
ABC RESULTS:           input signals:       39
ABC RESULTS:          output signals:       29
Removing temp directory.

3.29.70. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$31997, asynchronously reset by !\rstn
Extracted 23 gates and 35 wires to a netlist network with 11 inputs and 4 outputs.

3.29.70.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.70.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.71. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$48668, asynchronously reset by !\rstn
Extracted 81 gates and 119 wires to a netlist network with 37 inputs and 28 outputs.

3.29.71.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.71.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       23
ABC RESULTS:               BUF cells:       17
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       16
ABC RESULTS:        internal signals:       54
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       28
Removing temp directory.

3.29.72. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$32038, asynchronously reset by !\rstn
Extracted 15 gates and 27 wires to a netlist network with 11 inputs and 8 outputs.

3.29.72.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.72.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        3
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.73. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$39624, asynchronously reset by !\rstn
Extracted 82 gates and 121 wires to a netlist network with 38 inputs and 30 outputs.

3.29.73.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.73.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       24
ABC RESULTS:               BUF cells:       18
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       16
ABC RESULTS:        internal signals:       53
ABC RESULTS:           input signals:       38
ABC RESULTS:          output signals:       30
Removing temp directory.

3.29.74. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$50896, asynchronously reset by !\rstn
Extracted 80 gates and 115 wires to a netlist network with 35 inputs and 27 outputs.

3.29.74.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.74.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       23
ABC RESULTS:               BUF cells:       19
ABC RESULTS:               DFF cells:       19
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       16
ABC RESULTS:        internal signals:       53
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       27
Removing temp directory.

3.29.75. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$54476, asynchronously reset by !\rstn
Extracted 52 gates and 106 wires to a netlist network with 54 inputs and 33 outputs.

3.29.75.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.75.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:       51
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       13
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       54
ABC RESULTS:          output signals:       33
Removing temp directory.

3.29.76. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$52525, asynchronously reset by !\rstn
Extracted 54 gates and 99 wires to a netlist network with 45 inputs and 42 outputs.

3.29.76.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.76.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       19
ABC RESULTS:               BUF cells:       36
ABC RESULTS:               DFF cells:       20
ABC RESULTS:               MUX cells:       10
ABC RESULTS:              NAND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:       45
ABC RESULTS:          output signals:       42
Removing temp directory.

3.29.77. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$32929, asynchronously reset by !\rstn
Extracted 63 gates and 103 wires to a netlist network with 39 inputs and 28 outputs.

3.29.77.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.77.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       32
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:       13
ABC RESULTS:                OR cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       11
ABC RESULTS:        internal signals:       36
ABC RESULTS:           input signals:       39
ABC RESULTS:          output signals:       28
Removing temp directory.

3.29.78. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$32200, asynchronously reset by !\rstn
Extracted 27 gates and 47 wires to a netlist network with 19 inputs and 13 outputs.

3.29.78.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.78.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.79. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46407, asynchronously reset by !\rstn
Extracted 79 gates and 115 wires to a netlist network with 36 inputs and 27 outputs.

3.29.79.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.79.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:               BUF cells:       17
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       16
ABC RESULTS:        internal signals:       52
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       27
Removing temp directory.

3.29.80. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \PCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$41885, asynchronously reset by !\rstn
Extracted 77 gates and 110 wires to a netlist network with 33 inputs and 27 outputs.

3.29.80.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.80.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:               BUF cells:       19
ABC RESULTS:               DFF cells:       19
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       16
ABC RESULTS:        internal signals:       50
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       27
Removing temp directory.

yosys> abc -script abc_tmp.scr

3.30. Executing ABC pass (technology mapping using ABC).

3.30.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 7095 gates and 8625 wires to a netlist network with 1529 inputs and 1544 outputs.

3.30.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/conv2d/abc_tmp.scr 
ABC:   #Luts =  2637  Max Lvl =  16  Avg Lvl =   2.91  [   0.27 sec. at Pass 0]
ABC:   #Luts =  2353  Max Lvl =  10  Avg Lvl =   2.66  [   9.38 sec. at Pass 1]
ABC:   #Luts =  2342  Max Lvl =   9  Avg Lvl =   2.64  [   1.98 sec. at Pass 2]
ABC:   #Luts =  2340  Max Lvl =   9  Avg Lvl =   2.62  [   2.82 sec. at Pass 3]
ABC:   #Luts =  2329  Max Lvl =   9  Avg Lvl =   2.63  [   2.62 sec. at Pass 4]
ABC:   #Luts =  2329  Max Lvl =   9  Avg Lvl =   2.63  [   3.13 sec. at Pass 5]
ABC:   #Luts =  2328  Max Lvl =   9  Avg Lvl =   2.65  [   2.74 sec. at Pass 6]
ABC:   #Luts =  2323  Max Lvl =   9  Avg Lvl =   2.64  [   3.50 sec. at Pass 7]
ABC:   #Luts =  2322  Max Lvl =   9  Avg Lvl =   2.66  [   2.97 sec. at Pass 8]
ABC:   #Luts =  2313  Max Lvl =   9  Avg Lvl =   2.66  [   3.82 sec. at Pass 9]
ABC:   #Luts =  2313  Max Lvl =   9  Avg Lvl =   2.66  [   2.77 sec. at Pass 10]
ABC:   #Luts =  2313  Max Lvl =   9  Avg Lvl =   2.66  [   3.72 sec. at Pass 11]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.30.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2312
ABC RESULTS:        internal signals:     5552
ABC RESULTS:           input signals:     1529
ABC RESULTS:          output signals:     1544
Removing temp directory.

yosys> opt

3.31. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 16990 unused wires.
<suppressed ~32 debug messages>

yosys> opt_expr

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.31.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.31.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.32. Printing statistics.

=== top ===

   Number of wires:               3148
   Number of wire bits:          11243
   Number of public wires:         600
   Number of public wire bits:    8436
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3650
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_DFFE_PN0N_                   44
     $_DFFE_PN0P_                  903
     $_DFF_PN0_                    300
     $lut                         2267
     adder_carry                    56


yosys> shregmap -minlen 8 -maxlen 20

3.33. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.35. Printing statistics.

=== top ===

   Number of wires:               3308
   Number of wire bits:          11403
   Number of public wires:         600
   Number of public wire bits:    8436
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3810
     $_DFFE_PN0N_                   44
     $_DFFE_PN0P_                  903
     $_DFFSRE_PNNP_                 60
     $_DFFSR_PNN_                   20
     $_DFF_PN0_                    300
     $_ORNOT_                       80
     $_OR_                          80
     $lut                         2267
     adder_carry                    56


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFSRE_PNNP_ for cells of type $_DFFSRE_PNNP_.
Using template \$_DFFSR_PNN_ for cells of type $_DFFSR_PNN_.
Using template \$_DFFE_PN0N_ for cells of type $_DFFE_PN0N_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~3774 debug messages>

yosys> opt_expr -mux_undef

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~39333 debug messages>

yosys> simplemap

3.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~16074 debug messages>
Removed a total of 5358 cells.

yosys> opt_dff -nodffe -nosdff

3.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 11535 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.43. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~769 debug messages>

yosys> opt_merge -nomux

3.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 189 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.43.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.43.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.43.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.43.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.43.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.44. Executing ABC pass (technology mapping using ABC).

3.44.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 8053 gates and 9553 wires to a netlist network with 1498 inputs and 1658 outputs.

3.44.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/conv2d/abc_tmp.scr 
ABC:   #Luts =  2431  Max Lvl =   9  Avg Lvl =   2.56  [   0.28 sec. at Pass 0]
ABC:   #Luts =  2429  Max Lvl =  10  Avg Lvl =   2.58  [  10.96 sec. at Pass 1]
ABC:   #Luts =  2418  Max Lvl =   9  Avg Lvl =   2.55  [   2.58 sec. at Pass 2]
ABC:   #Luts =  2417  Max Lvl =   9  Avg Lvl =   2.53  [   3.35 sec. at Pass 3]
ABC:   #Luts =  2414  Max Lvl =   9  Avg Lvl =   2.57  [   2.59 sec. at Pass 4]
ABC:   #Luts =  2411  Max Lvl =   9  Avg Lvl =   2.52  [   4.06 sec. at Pass 5]
ABC:   #Luts =  2411  Max Lvl =   9  Avg Lvl =   2.52  [   3.25 sec. at Pass 6]
ABC:   #Luts =  2409  Max Lvl =   9  Avg Lvl =   2.53  [   5.10 sec. at Pass 7]
ABC:   #Luts =  2409  Max Lvl =   9  Avg Lvl =   2.53  [   4.08 sec. at Pass 8]
ABC:   #Luts =  2409  Max Lvl =   9  Avg Lvl =   2.53  [   4.78 sec. at Pass 9]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2409
ABC RESULTS:        internal signals:     6397
ABC RESULTS:           input signals:     1498
ABC RESULTS:          output signals:     1658
Removing temp directory.

yosys> opt

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 7607 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \top

3.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.47. Printing statistics.

=== top ===

   Number of wires:               3290
   Number of wire bits:          11385
   Number of public wires:         600
   Number of public wire bits:    8436
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3792
     $lut                         2409
     adder_carry                    56
     dffsre                       1327


yosys> opt_clean -purge

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 437 unused wires.
<suppressed ~437 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.49. Executing Verilog backend.

yosys> bmuxmap

3.49.1. Executing BMUXMAP pass.

yosys> demuxmap

3.49.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\top'.

Warnings: 86 unique messages, 86 total
End of script. Logfile hash: 2eb4100b3a, CPU: user 50.99s system 0.81s, MEM: 132.23 MB peak
Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 3x abc (935 sec), 1% 56x opt_expr (14 sec), ...
real 142.92
user 891.39
sys 91.63
