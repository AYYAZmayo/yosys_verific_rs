
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b22.vhd

yosys> verific -vhdl b22.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b22.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b22.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b22.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:515: analyzing entity 'b14rev'
VERIFIC-INFO [VHDL-1010] b22.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:1025: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b22.vhd:1035: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:1536: analyzing entity 'b22'
VERIFIC-INFO [VHDL-1010] b22.vhd:1544: analyzing architecture 'behav'

yosys> synth_rs -top b22 -tech generic -goal area -no_dsp -no_bram -verilog b22.verilog

3. Executing synth_rs pass.

yosys> hierarchy -check -top b22

3.1. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b22.vhd:1536: processing 'b22(BEHAV)'
VERIFIC-INFO [VHDL-1067] b22.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b22.vhd:1025: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:1502: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b22.vhd:515: processing 'b14rev(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:992: 'others' clause is never selected
Importing module std_logic_arith.
Importing module standard.
Importing module b22.
Importing module b14(BEHAV).
Importing module TEXTIO.
Importing module std_logic_1164.
Importing module b14rev(BEHAV).
Importing module b14_1(BEHAV).

3.1.1. Analyzing design hierarchy..
Top module:  \b22
Used module:     \b14rev(BEHAV)
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.1.2. Analyzing design hierarchy..
Top module:  \b22
Used module:     \b14rev(BEHAV)
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removing unused module `\std_logic_1164'.
Removing unused module `\TEXTIO'.
Removing unused module `\standard'.
Removing unused module `\std_logic_arith'.
Removed 4 unused modules.

yosys> proc

3.2. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.2.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.2.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.2.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b22.
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14rev(BEHAV).
<suppressed ~26 debug messages>

yosys> flatten

3.3. Executing FLATTEN pass (flatten design).
Deleting now unused module b14(BEHAV).
Deleting now unused module b14_1(BEHAV).
Deleting now unused module b14rev(BEHAV).
<suppressed ~3 debug messages>

yosys> tribuf -logic

3.4. Executing TRIBUF pass.

yosys> opt_expr

3.5. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~19 debug messages>

yosys> opt_clean

3.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 26 unused cells and 522 unused wires.
<suppressed ~179 debug messages>

yosys> check

3.7. Executing CHECK pass (checking for obvious problems).
Checking module b22...
Found and reported 0 problems.

yosys> deminout

3.8. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt -nodffe -nosdff

3.9. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b22.vhd:505$570.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b22.vhd:505$561.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b22.vhd:505$572.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b22.vhd:1525$1612.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b22.vhd:1525$1603.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b22.vhd:1525$1614.
    dead port 2/2 on $mux $flatten\P3.$verific$i653$b22.vhd:1015$1106.
    dead port 2/2 on $mux $flatten\P3.$verific$mux_641$b22.vhd:1015$1097.
Removed 8 multiplexer ports.
<suppressed ~71 debug messages>

yosys> opt_reduce

3.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b22.vhd:490$523: { $flatten\P1.$verific$n2255$154 $auto$opt_reduce.cc:134:opt_pmux$1656 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b22.vhd:490$464: { $flatten\P1.$verific$n2256$155 $auto$opt_reduce.cc:134:opt_pmux$1658 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b22.vhd:490$541: { $flatten\P1.$verific$n2257$156 $auto$opt_reduce.cc:134:opt_pmux$1660 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b22.vhd:490$542: { $flatten\P1.$verific$n2258$157 $auto$opt_reduce.cc:134:opt_pmux$1662 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b22.vhd:1510$1563: { $flatten\P2.$verific$n2255$1193 $auto$opt_reduce.cc:134:opt_pmux$1664 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b22.vhd:1510$1504: { $flatten\P2.$verific$n2256$1194 $auto$opt_reduce.cc:134:opt_pmux$1666 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b22.vhd:1510$1581: { $flatten\P2.$verific$n2257$1195 $auto$opt_reduce.cc:134:opt_pmux$1668 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b22.vhd:1510$1582: { $flatten\P2.$verific$n2258$1196 $auto$opt_reduce.cc:134:opt_pmux$1670 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_494$b22.vhd:957$1053: { $flatten\P3.$verific$n2118$672 $auto$opt_reduce.cc:134:opt_pmux$1672 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_495$b22.vhd:957$1054: { $flatten\P3.$verific$n2120$674 $auto$opt_reduce.cc:134:opt_pmux$1674 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_496$b22.vhd:957$1055: { $flatten\P3.$verific$n2119$673 $auto$opt_reduce.cc:134:opt_pmux$1676 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_497$b22.vhd:957$1056: { $flatten\P3.$verific$n2121$675 $auto$opt_reduce.cc:134:opt_pmux$1678 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_534$b22.vhd:977$1059: { $flatten\P3.$verific$n2121$675 $auto$opt_reduce.cc:134:opt_pmux$1680 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_535$b22.vhd:977$1060: { $flatten\P3.$verific$n2119$673 $auto$opt_reduce.cc:134:opt_pmux$1682 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_536$b22.vhd:977$1061: { $flatten\P3.$verific$n2120$674 $auto$opt_reduce.cc:134:opt_pmux$1684 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_537$b22.vhd:977$1062: { $flatten\P3.$verific$n2118$672 $auto$opt_reduce.cc:134:opt_pmux$1686 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_617$b22.vhd:1000$1073: { $flatten\P3.$verific$n2121$675 $auto$opt_reduce.cc:134:opt_pmux$1688 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_618$b22.vhd:1000$1074: { $flatten\P3.$verific$n2120$674 $auto$opt_reduce.cc:134:opt_pmux$1690 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_619$b22.vhd:1000$1075: { $flatten\P3.$verific$n2119$673 $auto$opt_reduce.cc:134:opt_pmux$1692 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_620$b22.vhd:1000$1076: { $flatten\P3.$verific$n2118$672 $auto$opt_reduce.cc:134:opt_pmux$1694 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_717$b22.vhd:877$1044: { $flatten\P3.$verific$n2118$672 $auto$opt_reduce.cc:134:opt_pmux$1696 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_718$b22.vhd:877$1050: { $flatten\P3.$verific$n2119$673 $auto$opt_reduce.cc:134:opt_pmux$1698 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_719$b22.vhd:877$1051: { $flatten\P3.$verific$n2120$674 $auto$opt_reduce.cc:134:opt_pmux$1700 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_720$b22.vhd:877$1052: { $flatten\P3.$verific$n2121$675 $auto$opt_reduce.cc:134:opt_pmux$1702 }
  Optimizing cells in module \b22.
Performed a total of 24 changes.

yosys> opt_merge

3.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_dff -nodffe -nosdff

3.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P3.$verific$wr_reg$b22.vhd:1019$1143 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$state_reg$b22.vhd:1019$1145 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg3_reg$b22.vhd:1019$1140 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg2_reg$b22.vhd:1019$1139 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg1_reg$b22.vhd:1019$1138 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg0_reg$b22.vhd:1019$1137 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$rd_reg$b22.vhd:1019$1142 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b22.vhd:509$600 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$addr_reg$b22.vhd:1019$1141 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$IR_reg$b22.vhd:1019$1134 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$B_reg$b22.vhd:1019$1136 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b22.vhd:1529$1649 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b22.vhd:1529$1651 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1646 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b22.vhd:1529$1645 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b22.vhd:1529$1644 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b22.vhd:1529$1643 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b22.vhd:1529$1648 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b22.vhd:1529$1650 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b22.vhd:1529$1647 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b22.vhd:1529$1640 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b22.vhd:1529$1642 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b22.vhd:509$607 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b22.vhd:509$609 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b22.vhd:509$604 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b22.vhd:509$603 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b22.vhd:509$602 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b22.vhd:509$601 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b22.vhd:509$606 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b22.vhd:509$598 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b22.vhd:509$608 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b22.vhd:509$605 ($aldff) from module b22.

yosys> opt_clean

3.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.9.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

yosys> opt_reduce

3.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.9.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.9.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.10. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.10.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b22.P1.d.
Found FSM state register b22.P2.d.
Found FSM state register b22.P3.d.

yosys> fsm_extract

3.10.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b22'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b22.vhd:509$599
  root of input selection tree: $flatten\P1.$verific$n11472$404
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$250 [0]
  found ctrl input: $flatten\P1.$verific$n10346$221
  found ctrl input: $flatten\P1.$verific$n1405$148
  found ctrl input: $flatten\P1.$verific$n1440$149
  found ctrl input: $flatten\P1.$verific$n1474$150
  found ctrl input: $flatten\P1.$verific$n1475$151
  found ctrl input: $flatten\P1.$verific$n1476$152
  found ctrl input: $flatten\P1.$verific$n1477$153
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.B \P1.state $flatten\P1.$verific$n1405$148 $flatten\P1.$verific$n1440$149 $flatten\P1.$verific$n1474$150 $flatten\P1.$verific$n1475$151 $flatten\P1.$verific$n1476$152 $flatten\P1.$verific$n1477$153 $flatten\P1.$verific$n10346$221 $flatten\P1.$verific$n341$250 [0] }
  ctrl outputs: $flatten\P1.$verific$n11472$404
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P2.d' from module `\b22'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b22.vhd:1529$1641
  root of input selection tree: $flatten\P2.$verific$n11479$1444
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$1289 [0]
  found ctrl input: $flatten\P2.$verific$n10346$1260
  found ctrl input: $flatten\P2.$verific$n1405$1187
  found ctrl input: $flatten\P2.$verific$n1440$1188
  found ctrl input: $flatten\P2.$verific$n1474$1189
  found ctrl input: $flatten\P2.$verific$n1475$1190
  found ctrl input: $flatten\P2.$verific$n1476$1191
  found ctrl input: $flatten\P2.$verific$n1477$1192
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.B \P2.state $flatten\P2.$verific$n1405$1187 $flatten\P2.$verific$n1440$1188 $flatten\P2.$verific$n1474$1189 $flatten\P2.$verific$n1475$1190 $flatten\P2.$verific$n1476$1191 $flatten\P2.$verific$n1477$1192 $flatten\P2.$verific$n10346$1260 $flatten\P2.$verific$n341$1289 [0] }
  ctrl outputs: $flatten\P2.$verific$n11479$1444
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P3.d' from module `\b22'.
  found $adff cell for state register: $flatten\P3.$verific$d_reg$b22.vhd:1019$1135
  root of input selection tree: $flatten\P3.$verific$n11328$923
  found reset state: 0 (from async reset)
  found ctrl input: \P3.state
  found ctrl input: $flatten\P3.$verific$n341$766 [0]
  found ctrl input: $flatten\P3.$verific$n10195$739
  found ctrl input: $flatten\P3.$verific$n1406$666
  found ctrl input: $flatten\P3.$verific$n1441$667
  found ctrl input: $flatten\P3.$verific$n1475$668
  found ctrl input: $flatten\P3.$verific$n1476$669
  found ctrl input: $flatten\P3.$verific$n1477$670
  found ctrl input: $flatten\P3.$verific$n1478$671
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P3.B
  ctrl inputs: { \P3.B \P3.state $flatten\P3.$verific$n1406$666 $flatten\P3.$verific$n1441$667 $flatten\P3.$verific$n1475$668 $flatten\P3.$verific$n1476$669 $flatten\P3.$verific$n1477$670 $flatten\P3.$verific$n1478$671 $flatten\P3.$verific$n10195$739 $flatten\P3.$verific$n341$766 [0] }
  ctrl outputs: $flatten\P3.$verific$n11328$923
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.10.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P3.d$1707' from module `\b22'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P2.d$1705' from module `\b22'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1703' from module `\b22'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

yosys> fsm_opt

3.10.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1703' from module `\b22'.
Optimizing FSM `$fsm$\P2.d$1705' from module `\b22'.
Optimizing FSM `$fsm$\P3.d$1707' from module `\b22'.

yosys> fsm_recode

3.10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1703' from module `\b22' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> ---1
  00000000000000000000000000000010 -> --1-
  00000000000000000000000000000001 -> -1--
  00000000000000000000000000000011 -> 1---
Recoding FSM `$fsm$\P2.d$1705' from module `\b22' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> ---1
  00000000000000000000000000000010 -> --1-
  00000000000000000000000000000001 -> -1--
  00000000000000000000000000000011 -> 1---
Recoding FSM `$fsm$\P3.d$1707' from module `\b22' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> ---1
  00000000000000000000000000000010 -> --1-
  00000000000000000000000000000001 -> -1--
  00000000000000000000000000000011 -> 1---

yosys> fsm_info

3.10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1703' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P1.d$1703 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       4

  Input signals:
    0: $flatten\P1.$verific$n341$250 [0]
    1: $flatten\P1.$verific$n10346$221
    2: $flatten\P1.$verific$n1477$153
    3: $flatten\P1.$verific$n1476$152
    4: $flatten\P1.$verific$n1475$151
    5: $flatten\P1.$verific$n1474$150
    6: $flatten\P1.$verific$n1440$149
    7: $flatten\P1.$verific$n1405$148
    8: \P1.state
    9: \P1.B

  Output signals:
    0: $flatten\P1.$verific$n11472$404 [0]
    1: $flatten\P1.$verific$n11472$404 [1]
    2: $flatten\P1.$verific$n11472$404 [2]
    3: $flatten\P1.$verific$n11472$404 [3]
    4: $flatten\P1.$verific$n11472$404 [4]
    5: $flatten\P1.$verific$n11472$404 [5]
    6: $flatten\P1.$verific$n11472$404 [6]
    7: $flatten\P1.$verific$n11472$404 [7]
    8: $flatten\P1.$verific$n11472$404 [8]
    9: $flatten\P1.$verific$n11472$404 [9]
   10: $flatten\P1.$verific$n11472$404 [10]
   11: $flatten\P1.$verific$n11472$404 [11]
   12: $flatten\P1.$verific$n11472$404 [12]
   13: $flatten\P1.$verific$n11472$404 [13]
   14: $flatten\P1.$verific$n11472$404 [14]
   15: $flatten\P1.$verific$n11472$404 [15]
   16: $flatten\P1.$verific$n11472$404 [16]
   17: $flatten\P1.$verific$n11472$404 [17]
   18: $flatten\P1.$verific$n11472$404 [18]
   19: $flatten\P1.$verific$n11472$404 [19]
   20: $flatten\P1.$verific$n11472$404 [20]
   21: $flatten\P1.$verific$n11472$404 [21]
   22: $flatten\P1.$verific$n11472$404 [22]
   23: $flatten\P1.$verific$n11472$404 [23]
   24: $flatten\P1.$verific$n11472$404 [24]
   25: $flatten\P1.$verific$n11472$404 [25]
   26: $flatten\P1.$verific$n11472$404 [26]
   27: $flatten\P1.$verific$n11472$404 [27]
   28: $flatten\P1.$verific$n11472$404 [28]
   29: $flatten\P1.$verific$n11472$404 [29]
   30: $flatten\P1.$verific$n11472$404 [30]
   31: $flatten\P1.$verific$n11472$404 [31]

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1705' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P2.d$1705 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       4

  Input signals:
    0: $flatten\P2.$verific$n341$1289 [0]
    1: $flatten\P2.$verific$n10346$1260
    2: $flatten\P2.$verific$n1477$1192
    3: $flatten\P2.$verific$n1476$1191
    4: $flatten\P2.$verific$n1475$1190
    5: $flatten\P2.$verific$n1474$1189
    6: $flatten\P2.$verific$n1440$1188
    7: $flatten\P2.$verific$n1405$1187
    8: \P2.state
    9: \P2.B

  Output signals:
    0: $flatten\P2.$verific$n11479$1444 [0]
    1: $flatten\P2.$verific$n11479$1444 [1]
    2: $flatten\P2.$verific$n11479$1444 [2]
    3: $flatten\P2.$verific$n11479$1444 [3]
    4: $flatten\P2.$verific$n11479$1444 [4]
    5: $flatten\P2.$verific$n11479$1444 [5]
    6: $flatten\P2.$verific$n11479$1444 [6]
    7: $flatten\P2.$verific$n11479$1444 [7]
    8: $flatten\P2.$verific$n11479$1444 [8]
    9: $flatten\P2.$verific$n11479$1444 [9]
   10: $flatten\P2.$verific$n11479$1444 [10]
   11: $flatten\P2.$verific$n11479$1444 [11]
   12: $flatten\P2.$verific$n11479$1444 [12]
   13: $flatten\P2.$verific$n11479$1444 [13]
   14: $flatten\P2.$verific$n11479$1444 [14]
   15: $flatten\P2.$verific$n11479$1444 [15]
   16: $flatten\P2.$verific$n11479$1444 [16]
   17: $flatten\P2.$verific$n11479$1444 [17]
   18: $flatten\P2.$verific$n11479$1444 [18]
   19: $flatten\P2.$verific$n11479$1444 [19]
   20: $flatten\P2.$verific$n11479$1444 [20]
   21: $flatten\P2.$verific$n11479$1444 [21]
   22: $flatten\P2.$verific$n11479$1444 [22]
   23: $flatten\P2.$verific$n11479$1444 [23]
   24: $flatten\P2.$verific$n11479$1444 [24]
   25: $flatten\P2.$verific$n11479$1444 [25]
   26: $flatten\P2.$verific$n11479$1444 [26]
   27: $flatten\P2.$verific$n11479$1444 [27]
   28: $flatten\P2.$verific$n11479$1444 [28]
   29: $flatten\P2.$verific$n11479$1444 [29]
   30: $flatten\P2.$verific$n11479$1444 [30]
   31: $flatten\P2.$verific$n11479$1444 [31]

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P3.d$1707' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P3.d$1707 (\P3.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       4

  Input signals:
    0: $flatten\P3.$verific$n341$766 [0]
    1: $flatten\P3.$verific$n10195$739
    2: $flatten\P3.$verific$n1478$671
    3: $flatten\P3.$verific$n1477$670
    4: $flatten\P3.$verific$n1476$669
    5: $flatten\P3.$verific$n1475$668
    6: $flatten\P3.$verific$n1441$667
    7: $flatten\P3.$verific$n1406$666
    8: \P3.state
    9: \P3.B

  Output signals:
    0: $flatten\P3.$verific$n11328$923 [0]
    1: $flatten\P3.$verific$n11328$923 [1]
    2: $flatten\P3.$verific$n11328$923 [2]
    3: $flatten\P3.$verific$n11328$923 [3]
    4: $flatten\P3.$verific$n11328$923 [4]
    5: $flatten\P3.$verific$n11328$923 [5]
    6: $flatten\P3.$verific$n11328$923 [6]
    7: $flatten\P3.$verific$n11328$923 [7]
    8: $flatten\P3.$verific$n11328$923 [8]
    9: $flatten\P3.$verific$n11328$923 [9]
   10: $flatten\P3.$verific$n11328$923 [10]
   11: $flatten\P3.$verific$n11328$923 [11]
   12: $flatten\P3.$verific$n11328$923 [12]
   13: $flatten\P3.$verific$n11328$923 [13]
   14: $flatten\P3.$verific$n11328$923 [14]
   15: $flatten\P3.$verific$n11328$923 [15]
   16: $flatten\P3.$verific$n11328$923 [16]
   17: $flatten\P3.$verific$n11328$923 [17]
   18: $flatten\P3.$verific$n11328$923 [18]
   19: $flatten\P3.$verific$n11328$923 [19]
   20: $flatten\P3.$verific$n11328$923 [20]
   21: $flatten\P3.$verific$n11328$923 [21]
   22: $flatten\P3.$verific$n11328$923 [22]
   23: $flatten\P3.$verific$n11328$923 [23]
   24: $flatten\P3.$verific$n11328$923 [24]
   25: $flatten\P3.$verific$n11328$923 [25]
   26: $flatten\P3.$verific$n11328$923 [26]
   27: $flatten\P3.$verific$n11328$923 [27]
   28: $flatten\P3.$verific$n11328$923 [28]
   29: $flatten\P3.$verific$n11328$923 [29]
   30: $flatten\P3.$verific$n11328$923 [30]
   31: $flatten\P3.$verific$n11328$923 [31]

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1703' from module `\b22'.
Mapping FSM `$fsm$\P2.d$1705' from module `\b22'.
Mapping FSM `$fsm$\P3.d$1707' from module `\b22'.

yosys> opt -sat

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~18 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~486 debug messages>
Removed a total of 162 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~68 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P3.$verific$reg3_reg$b22.vhd:1019$1140 ($adff) from module b22 (D = $flatten\P3.$verific$n11034$918, Q = \P3.reg3).
Adding EN signal on $flatten\P3.$verific$reg2_reg$b22.vhd:1019$1139 ($adff) from module b22 (D = $flatten\P3.$verific$n10128$891, Q = \P3.reg2).
Adding EN signal on $flatten\P3.$verific$reg1_reg$b22.vhd:1019$1138 ($adff) from module b22 (D = $flatten\P3.$verific$n10095$890, Q = \P3.reg1).
Adding EN signal on $flatten\P3.$verific$reg0_reg$b22.vhd:1019$1137 ($adff) from module b22 (D = $flatten\P3.$verific$n10062$889, Q = \P3.reg0).
Adding EN signal on $flatten\P3.$verific$B_reg$b22.vhd:1019$1136 ($adff) from module b22 (D = $flatten\P3.$verific$n10835$745, Q = \P3.B).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1646 ($adff) from module b22 (D = $flatten\P2.$verific$n10312$1413 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1646 ($adff) from module b22 (D = $flatten\P2.$verific$n11185$1439 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b22.vhd:1529$1645 ($adff) from module b22 (D = $flatten\P2.$verific$n10279$1412, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b22.vhd:1529$1644 ($adff) from module b22 (D = $flatten\P2.$verific$n10246$1411, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b22.vhd:1529$1643 ($adff) from module b22 (D = $flatten\P2.$verific$n10213$1410, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b22.vhd:1529$1650 ($adff) from module b22 (D = { $flatten\P2.$verific$add_570$b22.vhd:1490$1572 $flatten\P2.$verific$n10521$1422 [0] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$B_reg$b22.vhd:1529$1642 ($adff) from module b22 (D = $flatten\P2.$verific$n10986$1268, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b22.vhd:509$604 ($adff) from module b22 (D = $flatten\P1.$verific$n10312$374 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b22.vhd:509$604 ($adff) from module b22 (D = $flatten\P1.$verific$n11178$399 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b22.vhd:509$603 ($adff) from module b22 (D = $flatten\P1.$verific$n10279$373, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b22.vhd:509$602 ($adff) from module b22 (D = $flatten\P1.$verific$n10246$372, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b22.vhd:509$601 ($adff) from module b22 (D = $flatten\P1.$verific$n10213$371, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b22.vhd:509$608 ($adff) from module b22 (D = { $flatten\P1.$verific$add_570$b22.vhd:470$532 $flatten\P1.$verific$n10514$382 [0] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$B_reg$b22.vhd:509$600 ($adff) from module b22 (D = $flatten\P1.$verific$n10979$229, Q = \P1.B).

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 39 unused cells and 207 unused wires.
<suppressed ~40 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff -sat

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1641 ($adff) from module b22.
Setting constant 0-bit at position 2 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1135 ($adff) from module b22.

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.11.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.12. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 22) from port A of cell b22.$verific$sub_4$b22.vhd:1596$75 ($sub).
Removed top 2 bits (of 22) from port B of cell b22.$verific$sub_4$b22.vhd:1596$75 ($sub).
Removed top 2 bits (of 22) from port Y of cell b22.$verific$sub_4$b22.vhd:1596$75 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$verific$sub_4$b22.vhd:1596$75 ($sub).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_16$b22.vhd:1601$88 ($lt).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_21$b22.vhd:1602$93 ($lt).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_22$b22.vhd:1602$94 ($lt).
Removed top 1 bits (of 33) from port Y of cell b22.$verific$sub_34$b22.vhd:1605$101 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$verific$sub_34$b22.vhd:1605$101 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$verific$sub_34$b22.vhd:1605$101 ($sub).
Removed top 1 bits (of 5) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2109 ($eq).
Removed top 1 bits (of 6) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2099 ($eq).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$526 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$526 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$526 ($sub).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$524 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$524 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$524 ($add).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_179$b22.vhd:250$518 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_178$b22.vhd:249$517 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_177$b22.vhd:248$516 ($eq).
Removed top 32 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$513 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$513 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$513 ($sub).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_145$b22.vhd:230$507 ($mux).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_143$b22.vhd:228$505 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_142$b22.vhd:227$504 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_141$b22.vhd:225$503 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_140$b22.vhd:224$502 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_138$b22.vhd:220$500 ($mux).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$482 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$482 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$482 ($sub).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P1.$verific$LessThan_83$b22.vhd:152$481 ($lt).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$469 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$469 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$469 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$467 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$467 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$467 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P1.$verific$add_44$b22.vhd:100$459 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$add_44$b22.vhd:100$459 ($add).
Removed top 25 bits (of 26) from port B of cell b22.$flatten\P1.$verific$add_39$b22.vhd:99$455 ($add).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P1.$verific$add_36$b22.vhd:96$449 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P1.$verific$add_36$b22.vhd:96$449 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P1.$verific$add_31$b22.vhd:94$442 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P1.$verific$add_31$b22.vhd:94$442 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P1.$verific$add_26$b22.vhd:92$435 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P1.$verific$add_26$b22.vhd:92$435 ($add).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P1.$verific$add_21$b22.vhd:90$428 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P1.$verific$add_21$b22.vhd:90$428 ($add).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$unary_minus_15$b22.vhd:88$422 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P1.$verific$unary_minus_15$b22.vhd:88$422 ($neg).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P1.$verific$LessThan_14$b22.vhd:87$421 ($lt).
Removed top 1 bits (of 5) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$1895 ($eq).
Removed top 1 bits (of 6) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$1885 ($eq).
Removed top 1 bits (of 6) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2313 ($eq).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1566 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1566 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1566 ($sub).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1564 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1564 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1564 ($add).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_179$b22.vhd:1270$1558 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_178$b22.vhd:1269$1557 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_177$b22.vhd:1268$1556 ($eq).
Removed top 32 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1553 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1553 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1553 ($sub).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_145$b22.vhd:1250$1547 ($mux).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_143$b22.vhd:1248$1545 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_142$b22.vhd:1247$1544 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_141$b22.vhd:1245$1543 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_140$b22.vhd:1244$1542 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_138$b22.vhd:1240$1540 ($mux).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$1522 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$1522 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$1522 ($sub).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P2.$verific$LessThan_83$b22.vhd:1172$1521 ($lt).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$1509 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$1509 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$1509 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$1507 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$1507 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$1507 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P2.$verific$add_44$b22.vhd:1120$1499 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$add_44$b22.vhd:1120$1499 ($add).
Removed top 25 bits (of 26) from port B of cell b22.$flatten\P2.$verific$add_39$b22.vhd:1119$1495 ($add).
Removed top 1 bits (of 5) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2323 ($eq).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P2.$verific$add_36$b22.vhd:1116$1489 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P2.$verific$add_36$b22.vhd:1116$1489 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P2.$verific$add_31$b22.vhd:1114$1482 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P2.$verific$add_31$b22.vhd:1114$1482 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P2.$verific$add_26$b22.vhd:1112$1475 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P2.$verific$add_26$b22.vhd:1112$1475 ($add).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P2.$verific$add_21$b22.vhd:1110$1468 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P2.$verific$add_21$b22.vhd:1110$1468 ($add).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$unary_minus_15$b22.vhd:1108$1462 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P2.$verific$unary_minus_15$b22.vhd:1108$1462 ($neg).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P2.$verific$LessThan_14$b22.vhd:1107$1461 ($lt).
Removed top 3 bits (of 29) from FF cell b22.$auto$ff.cc:262:slice$2424 ($adffe).
Removed top 3 bits (of 29) from FF cell b22.$auto$ff.cc:262:slice$2385 ($adffe).
Removed top 3 bits (of 32) from FF cell b22.$auto$ff.cc:262:slice$2351 ($adffe).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_667$b22.vhd:1016$1118 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_648$b22.vhd:1015$1104 ($mux).
Removed top 1 bits (of 21) from port A of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1089 ($sub).
Removed top 1 bits (of 21) from port B of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1089 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$flatten\P3.$verific$sub_632$b22.vhd:1007$1086 ($sub).
Removed top 1 bits (of 21) from port B of cell b22.$flatten\P3.$verific$sub_632$b22.vhd:1007$1086 ($sub).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1047 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1047 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1047 ($add).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1045 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1045 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1045 ($sub).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_171$b22.vhd:760$1037 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_170$b22.vhd:759$1036 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_169$b22.vhd:758$1035 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_143$b22.vhd:740$1026 ($mux).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_141$b22.vhd:738$1024 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_140$b22.vhd:737$1023 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_139$b22.vhd:735$1022 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_138$b22.vhd:734$1021 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_136$b22.vhd:730$1019 ($mux).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1001 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1001 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1001 ($sub).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P3.$verific$LessThan_81$b22.vhd:662$1000 ($lt).
Removed top 13 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$988 ($sub).
Removed top 13 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$988 ($sub).
Removed top 13 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$988 ($sub).
Removed top 13 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$986 ($sub).
Removed top 13 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$986 ($sub).
Removed top 13 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$986 ($sub).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P3.$verific$add_44$b22.vhd:610$978 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$add_44$b22.vhd:610$978 ($add).
Removed top 1 bits (of 30) from port A of cell b22.$flatten\P3.$verific$sub_39$b22.vhd:609$974 ($sub).
Removed top 26 bits (of 30) from port B of cell b22.$flatten\P3.$verific$sub_39$b22.vhd:609$974 ($sub).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P3.$verific$add_36$b22.vhd:606$968 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P3.$verific$add_36$b22.vhd:606$968 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P3.$verific$add_31$b22.vhd:604$961 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P3.$verific$add_31$b22.vhd:604$961 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P3.$verific$add_26$b22.vhd:602$954 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P3.$verific$add_26$b22.vhd:602$954 ($add).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P3.$verific$add_21$b22.vhd:600$947 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P3.$verific$add_21$b22.vhd:600$947 ($add).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$unary_minus_15$b22.vhd:598$941 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P3.$verific$unary_minus_15$b22.vhd:598$941 ($neg).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P3.$verific$LessThan_14$b22.vhd:597$940 ($lt).
Removed top 1 bits (of 21) from port Y of cell b22.$verific$add_3$b22.vhd:1596$74 ($add).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_698$b22.vhd:506$582 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_697$b22.vhd:1526$1624 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_679$b22.vhd:505$568 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_678$b22.vhd:1525$1610 ($mux).
Removed top 20 bits (of 21) from wire b22.$flatten\P1.$verific$n10477$379.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$verific$n10755$390.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$verific$n11178$399.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n11472$404.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1407$272.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1441$273.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1478$274.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n184$241.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n1987$285.
Removed top 3 bits (of 5) from wire b22.$flatten\P1.$verific$n288$244.
Removed top 5 bits (of 8) from wire b22.$flatten\P1.$verific$n301$246.
Removed top 9 bits (of 13) from wire b22.$flatten\P1.$verific$n318$248.
Removed top 8 bits (of 9) from wire b22.$flatten\P1.$verific$n341$250.
Removed top 2 bits (of 32) from wire b22.$flatten\P1.$verific$n4241$318.
Removed top 1 bits (of 3) from wire b22.$flatten\P1.$verific$n436$254.
Removed top 3 bits (of 33) from wire b22.$flatten\P1.$verific$n5666$332.
Removed top 1 bits (of 32) from wire b22.$flatten\P1.$verific$n862$267.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n933$269.
Removed top 1 bits (of 21) from wire b22.$flatten\P2.$verific$n10477$1420.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$verific$n10762$1430.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$verific$n11185$1439.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n11479$1444.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1407$1311.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1441$1312.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1478$1313.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n184$1280.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n1987$1324.
Removed top 10 bits (of 13) from wire b22.$flatten\P2.$verific$n318$1287.
Removed top 2 bits (of 32) from wire b22.$flatten\P2.$verific$n4241$1357.
Removed top 3 bits (of 33) from wire b22.$flatten\P2.$verific$n5666$1371.
Removed top 1 bits (of 32) from wire b22.$flatten\P2.$verific$n862$1306.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n933$1308.
Removed top 1 bits (of 21) from wire b22.$flatten\P3.$verific$n10326$899.
Removed top 12 bits (of 20) from wire b22.$flatten\P3.$verific$n10457$904.
Removed top 3 bits (of 32) from wire b22.$flatten\P3.$verific$n10611$909.
Removed top 3 bits (of 20) from wire b22.$flatten\P3.$verific$n10813$912.
Removed top 7 bits (of 32) from wire b22.$flatten\P3.$verific$n11034$918.
Removed top 3 bits (of 20) from wire b22.$flatten\P3.$verific$n11102$920.
Removed top 7 bits (of 32) from wire b22.$flatten\P3.$verific$n11157$921.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1408$788.
Removed top 31 bits (of 32) from wire b22.$flatten\P3.$verific$n1442$789.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1479$790.
Removed top 1 bits (of 33) from wire b22.$flatten\P3.$verific$n184$757.
Removed top 3 bits (of 5) from wire b22.$flatten\P3.$verific$n288$760.
Removed top 5 bits (of 8) from wire b22.$flatten\P3.$verific$n301$762.
Removed top 9 bits (of 13) from wire b22.$flatten\P3.$verific$n318$764.
Removed top 8 bits (of 9) from wire b22.$flatten\P3.$verific$n341$766.
Removed top 1 bits (of 3) from wire b22.$flatten\P3.$verific$n439$770.
Removed top 3 bits (of 33) from wire b22.$flatten\P3.$verific$n4798$832.
Removed top 2 bits (of 32) from wire b22.$flatten\P3.$verific$n5506$842.
Removed top 4 bits (of 32) from wire b22.$flatten\P3.$verific$n5776$844.
Removed top 1 bits (of 33) from wire b22.$flatten\P3.$verific$n934$785.
Removed top 1 bits (of 33) from wire b22.$verific$n459$45.

yosys> peepopt

3.13. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.14. Executing PMUXTREE pass.

yosys> opt_clean

3.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 48 unused cells and 203 unused wires.
<suppressed ~49 debug messages>

yosys> techmap

3.16. Executing TECHMAP pass (map to technology primitives).

3.16.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.16.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=20:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=20:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=20:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=20:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=20:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=20:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=19:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=19:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=19:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_and.
Running "alumacc" on wrapper $extern:wrap:$mul:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$mul:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$mul:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $bmux.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=21:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=21:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=21:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=31:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=31:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=31:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_not.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=26:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=27:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=26:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=27:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=26:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=27:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $ne.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=21:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=21:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=21:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=29:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=29:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=29:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:454:run$2459 [0] (3x1 bits, unsigned)
Using template $paramod$a7926d38756e33b5022e02ebfd484599309272c7\_90_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$403d07c18de10cda2ac652a859c56aea81aaf9b5\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using template $paramod$6dc2bc4e177433cbefea60fe94ff11f8a7c6abf8\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~10714 debug messages>

yosys> alumacc

3.17. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b22:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.18. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~11744 debug messages>

yosys> opt_merge -nomux

3.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~18420 debug messages>
Removed a total of 6140 cells.

yosys> opt_muxtree

3.18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$17678 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [19], Q = \P3.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$11115 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [19], Q = \P2.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4932 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [19], Q = \P1.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4910 ($_DFFE_PP0P_) from module b22 (D = $flatten\P1.$verific$n10979$229, Q = \P1.B).
Adding EN signal on $auto$ff.cc:262:slice$11093 ($_DFFE_PP0P_) from module b22 (D = $flatten\P2.$verific$n10986$1268, Q = \P2.B).
Adding EN signal on $auto$ff.cc:262:slice$17775 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$verific$n10835$745, Q = \P3.B).
Adding EN signal on $auto$ff.cc:262:slice$4913 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [0], Q = \P1.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$4914 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [1], Q = \P1.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$4915 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [2], Q = \P1.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$4916 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [3], Q = \P1.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$4917 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [4], Q = \P1.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$4918 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [5], Q = \P1.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$4919 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [6], Q = \P1.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$4920 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [7], Q = \P1.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$4921 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [8], Q = \P1.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$4922 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [9], Q = \P1.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$4923 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [10], Q = \P1.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$4924 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [11], Q = \P1.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$4925 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [12], Q = \P1.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$4926 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [13], Q = \P1.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$4927 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [14], Q = \P1.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$4928 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [15], Q = \P1.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$4929 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [16], Q = \P1.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$4930 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [17], Q = \P1.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$4931 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [18], Q = \P1.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$5063 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11301$402 [0], Q = \P1.IR [0]).
Adding EN signal on $auto$ff.cc:262:slice$11096 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [0], Q = \P2.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$11097 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [1], Q = \P2.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$11098 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [2], Q = \P2.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$11099 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [3], Q = \P2.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$11100 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [4], Q = \P2.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$11101 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [5], Q = \P2.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$11102 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [6], Q = \P2.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$11103 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [7], Q = \P2.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$11104 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [8], Q = \P2.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$11105 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [9], Q = \P2.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$11106 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [10], Q = \P2.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$11107 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [11], Q = \P2.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$11108 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [12], Q = \P2.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$11109 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [13], Q = \P2.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$11110 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [14], Q = \P2.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$11111 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [15], Q = \P2.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$11112 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [16], Q = \P2.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$11113 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [17], Q = \P2.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$11114 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$1441 [18], Q = \P2.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$11249 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11308$1442 [0], Q = \P2.IR [0]).
Adding EN signal on $auto$ff.cc:262:slice$17609 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:454:run$2495 [0], Q = \P3.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$17610 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:454:run$2495 [1], Q = \P3.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$17611 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:454:run$2495 [2], Q = \P3.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$17659 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [0], Q = \P3.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$17660 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [1], Q = \P3.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$17661 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [2], Q = \P3.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$17662 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [3], Q = \P3.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$17663 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [4], Q = \P3.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$17664 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [5], Q = \P3.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$17665 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [6], Q = \P3.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$17666 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [7], Q = \P3.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$17667 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [8], Q = \P3.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$17668 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [9], Q = \P3.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$17669 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [10], Q = \P3.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$17670 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [11], Q = \P3.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$17671 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [12], Q = \P3.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$17672 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [13], Q = \P3.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$17673 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [14], Q = \P3.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$17674 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [15], Q = \P3.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$17675 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [16], Q = \P3.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$17676 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [17], Q = \P3.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$17677 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [18], Q = \P3.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$17779 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2497 [0], Q = \P3.IR [0]).

yosys> opt_clean

3.18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 1858 unused cells and 5553 unused wires.
<suppressed ~1859 debug messages>

yosys> opt_expr

3.18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~955 debug messages>

3.18.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.18.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~1983 debug messages>
Removed a total of 661 cells.

yosys> opt_dff

3.18.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$5020 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [23], Q = \P1.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$5016 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [19], Q = \P1.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$5015 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [18], Q = \P1.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$5014 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [17], Q = \P1.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$5013 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [16], Q = \P1.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$5012 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [15], Q = \P1.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$5011 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [14], Q = \P1.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$5010 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [13], Q = \P1.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$5009 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [12], Q = \P1.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$5008 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [11], Q = \P1.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$5003 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [6], Q = \P1.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$5001 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [4], Q = \P1.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$5002 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [5], Q = \P1.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$5007 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [10], Q = \P1.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$5006 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [9], Q = \P1.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$5005 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [8], Q = \P1.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$5004 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [7], Q = \P1.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$11122 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [6], Q = \P2.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$11120 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [4], Q = \P2.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$11121 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [5], Q = \P2.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$17762 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [19], Q = \P3.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$5019 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [22], Q = \P1.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$5018 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [21], Q = \P1.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$5017 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [20], Q = \P1.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$5021 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [24], Q = \P1.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$11209 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$5025 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [28], Q = \P1.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$5022 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [25], Q = \P1.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$17756 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [13], Q = \P3.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$5027 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [30], Q = \P1.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$5024 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [27], Q = \P1.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$5023 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [26], Q = \P1.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$5028 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [31], Q = \P1.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$5026 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [29], Q = \P1.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$11211 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [31], Q = \P2.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$11210 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$17758 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [15], Q = \P3.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$17757 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [14], Q = \P3.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$17755 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [12], Q = \P3.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$11182 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11179 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$11176 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$11173 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$11170 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$11167 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$11164 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$11161 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$11158 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$11155 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$11152 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$11149 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11146 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [30], Q = \P2.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$11143 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [27], Q = \P2.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$11140 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [24], Q = \P2.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$11137 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [21], Q = \P2.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$11134 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [18], Q = \P2.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$11131 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [15], Q = \P2.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$11128 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [12], Q = \P2.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$11116 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [0], Q = \P2.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11181 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11178 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$11175 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$11172 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$11169 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$11166 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$11163 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$11160 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$11157 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$11154 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$11151 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$11148 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11145 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [29], Q = \P2.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$11142 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [26], Q = \P2.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$11139 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [23], Q = \P2.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$11136 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [20], Q = \P2.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$11133 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [17], Q = \P2.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$11130 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [14], Q = \P2.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$11127 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [11], Q = \P2.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$11180 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11177 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$11174 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$11171 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$11168 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$11165 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$11162 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$11159 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$11156 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$11153 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$11150 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11147 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [31], Q = \P2.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$11144 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [28], Q = \P2.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$11141 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [25], Q = \P2.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$11138 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [22], Q = \P2.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$11135 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [19], Q = \P2.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$11132 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [16], Q = \P2.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$11129 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [13], Q = \P2.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$11126 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [10], Q = \P2.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$11246 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$5826 [2], Q = \P1.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11245 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$5826 [1], Q = \P1.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11244 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$5826 [0], Q = \P1.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11208 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$11207 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$11206 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$11205 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$11204 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$11203 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$11202 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$11201 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$11200 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$11199 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$11198 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$11197 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$11196 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$11195 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$11194 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$11193 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$11192 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$11191 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$11190 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$11189 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$11188 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$11187 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$11186 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$11185 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$11184 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$11183 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4988 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [23], Q = \P1.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4985 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [20], Q = \P1.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4982 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [17], Q = \P1.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4979 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [14], Q = \P1.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4976 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [11], Q = \P1.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4973 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [8], Q = \P1.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4970 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [5], Q = \P1.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4967 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [2], Q = \P1.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4964 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [31], Q = \P1.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4961 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [28], Q = \P1.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4958 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [25], Q = \P1.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4955 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [22], Q = \P1.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4952 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [19], Q = \P1.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4949 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [16], Q = \P1.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4946 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [13], Q = \P1.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4943 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [10], Q = \P1.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4940 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [7], Q = \P1.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4937 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [4], Q = \P1.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4934 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [1], Q = \P1.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11125 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [9], Q = \P2.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4987 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [22], Q = \P1.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4984 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [19], Q = \P1.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4981 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [16], Q = \P1.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4978 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [13], Q = \P1.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4975 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [10], Q = \P1.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4972 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [7], Q = \P1.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4969 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [4], Q = \P1.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4966 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [1], Q = \P1.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4963 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [30], Q = \P1.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4960 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [27], Q = \P1.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4957 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [24], Q = \P1.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4954 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [21], Q = \P1.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4951 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [18], Q = \P1.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4948 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [15], Q = \P1.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4945 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [12], Q = \P1.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4942 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [9], Q = \P1.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4939 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [6], Q = \P1.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4936 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [3], Q = \P1.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4933 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [0], Q = \P1.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11124 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [8], Q = \P2.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4986 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [21], Q = \P1.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4983 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [18], Q = \P1.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4980 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [15], Q = \P1.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4977 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [12], Q = \P1.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4974 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [9], Q = \P1.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4971 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [6], Q = \P1.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4968 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [3], Q = \P1.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4965 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4962 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [29], Q = \P1.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4959 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [26], Q = \P1.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4956 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [23], Q = \P1.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4953 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [20], Q = \P1.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4950 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [17], Q = \P1.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4947 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [14], Q = \P1.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4944 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [11], Q = \P1.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4941 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [8], Q = \P1.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4938 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [5], Q = \P1.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4935 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6310 [2], Q = \P1.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11123 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [7], Q = \P2.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$5000 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [3], Q = \P1.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4999 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [2], Q = \P1.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4998 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [1], Q = \P1.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4997 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4996 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [31], Q = \P1.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4995 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [30], Q = \P1.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4994 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [29], Q = \P1.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4993 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [28], Q = \P1.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4992 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [27], Q = \P1.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4991 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [26], Q = \P1.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4990 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [25], Q = \P1.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4989 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [24], Q = \P1.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$17728 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [17], Q = \P3.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$17725 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [14], Q = \P3.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$17722 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [11], Q = \P3.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$17719 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [8], Q = \P3.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$17716 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [5], Q = \P3.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$17713 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [2], Q = \P3.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$17710 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [31], Q = \P3.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$17707 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [28], Q = \P3.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$17704 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [25], Q = \P3.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$17701 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [22], Q = \P3.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$17698 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [19], Q = \P3.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$17695 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [16], Q = \P3.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$17692 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [13], Q = \P3.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$17689 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [10], Q = \P3.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$17686 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [7], Q = \P3.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$17683 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [4], Q = \P3.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$17680 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [1], Q = \P3.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11119 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [3], Q = \P2.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$17727 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [16], Q = \P3.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$17724 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [13], Q = \P3.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$17721 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [10], Q = \P3.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$17718 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [7], Q = \P3.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$17715 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [4], Q = \P3.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$17712 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [1], Q = \P3.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$17709 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [30], Q = \P3.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$17706 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [27], Q = \P3.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$17703 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [24], Q = \P3.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$17700 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [21], Q = \P3.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$17697 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [18], Q = \P3.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$17694 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [15], Q = \P3.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$17691 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [12], Q = \P3.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$17688 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [9], Q = \P3.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$17685 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [6], Q = \P3.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$17682 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [3], Q = \P3.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$17679 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [0], Q = \P3.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11118 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [2], Q = \P2.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$17726 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [15], Q = \P3.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$17723 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [12], Q = \P3.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$17720 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [9], Q = \P3.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$17717 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [6], Q = \P3.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$17714 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [3], Q = \P3.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$17711 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [0], Q = \P3.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$17708 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [29], Q = \P3.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$17705 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [26], Q = \P3.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$17702 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [23], Q = \P3.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$17699 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [20], Q = \P3.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$17696 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [17], Q = \P3.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$17693 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [14], Q = \P3.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$17690 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [11], Q = \P3.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$17687 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [8], Q = \P3.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$17684 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [5], Q = \P3.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$17681 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$19891 [2], Q = \P3.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11117 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13206 [1], Q = \P2.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$17778 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$12722 [2], Q = \P2.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$17777 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$12722 [1], Q = \P2.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$17776 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$12722 [0], Q = \P2.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$17774 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [31], Q = \P3.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$17773 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [30], Q = \P3.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$17772 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [29], Q = \P3.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$17771 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [28], Q = \P3.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$17770 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [27], Q = \P3.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$17769 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [26], Q = \P3.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$17768 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [25], Q = \P3.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$17767 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [24], Q = \P3.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$17766 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [23], Q = \P3.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$17765 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [22], Q = \P3.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$17764 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [21], Q = \P3.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$17763 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [20], Q = \P3.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$17754 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [11], Q = \P3.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$17753 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [10], Q = \P3.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$17752 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [9], Q = \P3.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$17751 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [8], Q = \P3.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$17750 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [7], Q = \P3.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$17749 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [6], Q = \P3.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$17748 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [5], Q = \P3.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$17747 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [4], Q = \P3.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$17746 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [3], Q = \P3.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$17745 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [2], Q = \P3.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$17744 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [1], Q = \P3.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$17743 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [0], Q = \P3.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$17742 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [31], Q = \P3.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$17741 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [30], Q = \P3.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$17740 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [29], Q = \P3.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$17739 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [28], Q = \P3.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$17738 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [27], Q = \P3.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$17737 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [26], Q = \P3.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$17736 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [25], Q = \P3.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$17735 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [24], Q = \P3.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$17734 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [23], Q = \P3.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$17733 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [22], Q = \P3.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$17732 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [21], Q = \P3.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$17731 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [20], Q = \P3.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$17730 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [19], Q = \P3.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$17729 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [18], Q = \P3.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$17761 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [18], Q = \P3.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$17760 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [17], Q = \P3.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$17759 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [16], Q = \P3.reg0 [16]).

yosys> opt_clean

3.18.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 2498 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.18.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~6486 debug messages>

3.18.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.18.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~30204 debug messages>
Removed a total of 10068 cells.

yosys> opt_dff

3.18.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 9683 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.18.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.18.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.18.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.18.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.18.30. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.19. Executing MEMORY pass.

yosys> opt_mem

3.19.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.19.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.19.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.19.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.19.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> memory_share

3.19.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.19.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> memory_collect

3.19.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr -mux_undef

3.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~1750 debug messages>

yosys> simplemap

3.22. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge

3.24. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.25. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 33 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.27.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~120 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$68334 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [16], Q = \P3.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$68249 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [17], Q = \P3.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$68164 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [18], Q = \P3.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$68079 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [18], Q = \P3.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$67994 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [19], Q = \P3.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$67909 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [20], Q = \P3.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$67824 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [21], Q = \P3.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$67739 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [22], Q = \P3.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$67654 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [23], Q = \P3.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$67569 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [24], Q = \P3.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$67484 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [25], Q = \P3.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$67399 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [26], Q = \P3.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$67314 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [27], Q = \P3.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$67229 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [28], Q = \P3.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$67144 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [29], Q = \P3.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$67059 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [30], Q = \P3.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$66974 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [31], Q = \P3.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$66889 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [0], Q = \P3.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$66804 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [1], Q = \P3.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$66719 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [2], Q = \P3.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$66634 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [3], Q = \P3.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$66549 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [4], Q = \P3.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$66464 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [5], Q = \P3.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$66379 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [6], Q = \P3.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$66294 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [7], Q = \P3.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$66209 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [8], Q = \P3.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$66124 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [9], Q = \P3.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$66039 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [10], Q = \P3.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$65954 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [11], Q = \P3.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$65869 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [20], Q = \P3.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$65784 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [21], Q = \P3.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$65699 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [22], Q = \P3.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$65614 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [23], Q = \P3.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$65529 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [24], Q = \P3.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$65444 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [25], Q = \P3.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$65359 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [26], Q = \P3.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$65274 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [27], Q = \P3.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$65189 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [28], Q = \P3.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$65104 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [29], Q = \P3.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$65019 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [30], Q = \P3.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$64934 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [31], Q = \P3.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$63843 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [0], Q = \P3.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$63758 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [3], Q = \P3.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$63673 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [6], Q = \P3.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$63588 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [9], Q = \P3.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$63503 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [12], Q = \P3.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$63418 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [15], Q = \P3.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$62478 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [1], Q = \P3.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$62393 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [4], Q = \P3.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$62308 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [7], Q = \P3.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$62223 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [10], Q = \P3.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$62138 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [13], Q = \P3.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$62053 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [16], Q = \P3.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$61113 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [2], Q = \P3.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$61028 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [5], Q = \P3.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$60943 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [8], Q = \P3.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$60858 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [11], Q = \P3.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$60773 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [14], Q = \P3.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$60688 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20375 [17], Q = \P3.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$59821 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7278 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$58519 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6794 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$49645 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14174 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$48983 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13690 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$45952 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [12], Q = \P3.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$45867 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [14], Q = \P3.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$45782 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [15], Q = \P3.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$44997 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [13], Q = \P3.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$44212 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20859 [19], Q = \P3.reg0 [19]).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 136 unused wires.
<suppressed ~1 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~272 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~762 debug messages>
Removed a total of 254 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 322 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10150 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$26333
        $auto$simplemap.cc:86:simplemap_bitop$26434

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15500 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15520
        $auto$simplemap.cc:86:simplemap_bitop$15521

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15501 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15518
        $auto$simplemap.cc:86:simplemap_bitop$15519

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15502 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15516
        $auto$simplemap.cc:86:simplemap_bitop$15517

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15503 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15514
        $auto$simplemap.cc:86:simplemap_bitop$15515

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15678 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$27230
        $auto$simplemap.cc:86:simplemap_bitop$28966

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$21984 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22004
        $auto$simplemap.cc:86:simplemap_bitop$22005

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$21985 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22002
        $auto$simplemap.cc:86:simplemap_bitop$22003

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$21986 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22000
        $auto$simplemap.cc:86:simplemap_bitop$22001

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$21987 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$21998
        $auto$simplemap.cc:86:simplemap_bitop$21999

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8703 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8723
        $auto$simplemap.cc:86:simplemap_bitop$8724

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8704 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8721
        $auto$simplemap.cc:86:simplemap_bitop$8722

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8705 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8719
        $auto$simplemap.cc:86:simplemap_bitop$8720

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8706 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8717
        $auto$simplemap.cc:86:simplemap_bitop$8718


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~14 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15507 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15518
        $auto$simplemap.cc:86:simplemap_bitop$15520

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15508 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15514
        $auto$simplemap.cc:86:simplemap_bitop$15516

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$21991 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22002
        $auto$simplemap.cc:86:simplemap_bitop$22004

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$21992 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$21998
        $auto$simplemap.cc:86:simplemap_bitop$22000

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8710 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8721
        $auto$simplemap.cc:86:simplemap_bitop$8723

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8711 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8717
        $auto$simplemap.cc:86:simplemap_bitop$8719


yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~6 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15511 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15514
        $auto$simplemap.cc:86:simplemap_bitop$15518

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$21995 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$21998
        $auto$simplemap.cc:86:simplemap_bitop$22002

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8714 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8717
        $auto$simplemap.cc:86:simplemap_bitop$8721


yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~3 debug messages>

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.30.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~94 debug messages>

yosys> opt

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.32.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Extracted 14917 gates and 15573 wires to a netlist network with 654 inputs and 672 outputs.

3.33.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_09-03-2022T20-36-44/All_lut_synth_rs_area.json/b22/abc_tmp.scr 
ABC: netlist  : i/o =    654/    672  and =   22078  lev =   85 (42.30)  mem = 0.29 MB
ABC: Mapping (K=6)  :  lut =   3643  edge =   15970  lev =   38 (17.61)  mem = 0.18 MB
ABC: netlist  : i/o =    654/    672  and =   21334  lev =   87 (43.86)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   3202  edge =   14540  lev =   41 (19.93)  mem = 0.17 MB
ABC: netlist  : i/o =    654/    672  and =   20889  lev =   85 (44.29)  mem = 0.27 MB
ABC: Mapping (K=6)  :  lut =   3138  edge =   14165  lev =   40 (20.41)  mem = 0.16 MB
ABC: netlist  : i/o =    654/    672  and =   20967  lev =   93 (47.51)  mem = 0.27 MB
ABC: Mapping (K=6)  :  lut =   3089  edge =   13874  lev =   40 (19.86)  mem = 0.16 MB
ABC: netlist  : i/o =    654/    672  and =   18792  lev =   88 (45.36)  mem = 0.25 MB
ABC: Mapping (K=6)  :  lut =   3106  edge =   13431  lev =   42 (20.72)  mem = 0.15 MB
ABC: netlist  : i/o =    654/    672  and =   19193  lev =   88 (45.20)  mem = 0.33 MB
ABC: Mapping (K=6)  :  lut =   2852  edge =   13272  lev =   37 (18.23)  mem = 0.15 MB
ABC: netlist  : i/o =    654/    672  and =   19093  lev =   91 (45.16)  mem = 0.33 MB
ABC: Mapping (K=6)  :  lut =   2842  edge =   13204  lev =   39 (18.11)  mem = 0.15 MB
ABC: netlist  : i/o =    654/    672  and =   19095  lev =   93 (45.25)  mem = 0.33 MB
ABC: Mapping (K=6)  :  lut =   2818  edge =   13203  lev =   36 (18.11)  mem = 0.15 MB
ABC: netlist  : i/o =    654/    672  and =   18467  lev =   95 (47.45)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2743  edge =   12786  lev =   36 (17.56)  mem = 0.15 MB
ABC: netlist  : i/o =    654/    672  and =   18861  lev =   98 (50.95)  mem = 0.33 MB
ABC: Mapping (K=6)  :  lut =   2700  edge =   12586  lev =   37 (18.04)  mem = 0.15 MB
ABC: netlist  : i/o =    654/    672  and =   18253  lev =   89 (45.01)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2655  edge =   12488  lev =   37 (17.54)  mem = 0.14 MB
ABC: netlist  : i/o =    654/    672  and =   18943  lev =  100 (51.11)  mem = 0.33 MB
ABC: Mapping (K=6)  :  lut =   2651  edge =   12404  lev =   36 (17.39)  mem = 0.14 MB
ABC: netlist  : i/o =    654/    672  and =   18315  lev =   94 (45.22)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2633  edge =   12386  lev =   36 (17.22)  mem = 0.14 MB
ABC: netlist  : i/o =    654/    672  and =   18315  lev =   94 (45.22)  mem = 0.24 MB
ABC: Mapping (K=6)  :  lut =   2633  edge =   12386  lev =   36 (17.22)  mem = 0.14 MB
ABC: netlist  : i/o =    654/    672  and =   18315  lev =   94 (45.22)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2630  edge =   12391  lev =   36 (17.22)  mem = 0.14 MB
ABC: netlist  : i/o =    654/    672  and =   18796  lev =  103 (46.82)  mem = 0.25 MB
ABC: Mapping (K=6)  :  lut =   2630  edge =   12391  lev =   36 (17.22)  mem = 0.14 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2639
ABC RESULTS:        internal signals:    14247
ABC RESULTS:           input signals:      654
ABC RESULTS:          output signals:      672
Removing temp directory.

yosys> opt

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 4916 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.34.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.34.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.34.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.34.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.34.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.35. Executing HIERARCHY pass (managing design hierarchy).

3.35.1. Analyzing design hierarchy..
Top module:  \b22

3.35.2. Analyzing design hierarchy..
Top module:  \b22
Removed 0 unused modules.

yosys> stat

3.36. Printing statistics.

=== b22 ===

   Number of wires:               2615
   Number of wire bits:           3780
   Number of public wires:          64
   Number of public wire bits:    1012
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3255
     $_DFFE_PP0N_                    3
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    117
     $lut                         2633


yosys> opt_clean -purge

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 20 unused wires.
<suppressed ~20 debug messages>

yosys> write_verilog -noattr -nohex b22.verilog

3.38. Executing Verilog backend.

yosys> bmuxmap

3.38.1. Executing BMUXMAP pass.

yosys> demuxmap

3.38.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b22'.

End of script. Logfile hash: dcdecdbd9d, CPU: user 56.87s system 0.22s, MEM: 134.50 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 58% 1x abc (80 sec), 13% 51x opt_expr (18 sec), ...
