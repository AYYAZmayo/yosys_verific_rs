
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b22.vhd

yosys> verific -vhdl b22.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b22.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b22.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b22.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:515: analyzing entity 'b14rev'
VERIFIC-INFO [VHDL-1010] b22.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:1025: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b22.vhd:1035: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:1536: analyzing entity 'b22'
VERIFIC-INFO [VHDL-1010] b22.vhd:1544: analyzing architecture 'behav'

yosys> synth_rs -top b22 -tech genesis -goal area -de -no_dsp -no_bram -verilog b22.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b22

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b22.vhd:1536: processing 'b22(BEHAV)'
VERIFIC-INFO [VHDL-1067] b22.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b22.vhd:1025: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:1502: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b22.vhd:515: processing 'b14rev(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:992: 'others' clause is never selected
Importing module std_logic_arith.
Importing module standard.
Importing module b22.
Importing module b14(BEHAV).
Importing module TEXTIO.
Importing module std_logic_1164.
Importing module b14_1(BEHAV).
Importing module b14rev(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b22
Used module:     \b14rev(BEHAV)
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b22
Used module:     \b14rev(BEHAV)
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removing unused module `\std_logic_1164'.
Removing unused module `\TEXTIO'.
Removing unused module `\standard'.
Removing unused module `\std_logic_arith'.
Removed 4 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b22.
Optimizing module b14rev(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module b14(BEHAV).
Deleting now unused module b14rev(BEHAV).
Deleting now unused module b14_1(BEHAV).
<suppressed ~3 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~19 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 26 unused cells and 522 unused wires.
<suppressed ~179 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b22...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b22.vhd:505$570.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b22.vhd:505$561.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b22.vhd:505$572.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b22.vhd:1525$1092.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b22.vhd:1525$1083.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b22.vhd:1525$1094.
    dead port 2/2 on $mux $flatten\P3.$verific$i653$b22.vhd:1015$1612.
    dead port 2/2 on $mux $flatten\P3.$verific$mux_641$b22.vhd:1015$1603.
Removed 8 multiplexer ports.
<suppressed ~71 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b22.vhd:490$523: { $flatten\P1.$verific$n2255$154 $auto$opt_reduce.cc:134:opt_pmux$1656 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b22.vhd:490$464: { $flatten\P1.$verific$n2256$155 $auto$opt_reduce.cc:134:opt_pmux$1658 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b22.vhd:490$541: { $flatten\P1.$verific$n2257$156 $auto$opt_reduce.cc:134:opt_pmux$1660 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b22.vhd:490$542: { $flatten\P1.$verific$n2258$157 $auto$opt_reduce.cc:134:opt_pmux$1662 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b22.vhd:1510$1043: { $flatten\P2.$verific$n2255$673 $auto$opt_reduce.cc:134:opt_pmux$1664 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b22.vhd:1510$984: { $flatten\P2.$verific$n2256$674 $auto$opt_reduce.cc:134:opt_pmux$1666 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b22.vhd:1510$1061: { $flatten\P2.$verific$n2257$675 $auto$opt_reduce.cc:134:opt_pmux$1668 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b22.vhd:1510$1062: { $flatten\P2.$verific$n2258$676 $auto$opt_reduce.cc:134:opt_pmux$1670 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_494$b22.vhd:957$1559: { $flatten\P3.$verific$n2118$1178 $auto$opt_reduce.cc:134:opt_pmux$1672 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_495$b22.vhd:957$1560: { $flatten\P3.$verific$n2120$1180 $auto$opt_reduce.cc:134:opt_pmux$1674 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_496$b22.vhd:957$1561: { $flatten\P3.$verific$n2119$1179 $auto$opt_reduce.cc:134:opt_pmux$1676 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_497$b22.vhd:957$1562: { $flatten\P3.$verific$n2121$1181 $auto$opt_reduce.cc:134:opt_pmux$1678 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_534$b22.vhd:977$1565: { $flatten\P3.$verific$n2121$1181 $auto$opt_reduce.cc:134:opt_pmux$1680 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_535$b22.vhd:977$1566: { $flatten\P3.$verific$n2119$1179 $auto$opt_reduce.cc:134:opt_pmux$1682 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_536$b22.vhd:977$1567: { $flatten\P3.$verific$n2120$1180 $auto$opt_reduce.cc:134:opt_pmux$1684 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_537$b22.vhd:977$1568: { $flatten\P3.$verific$n2118$1178 $auto$opt_reduce.cc:134:opt_pmux$1686 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_617$b22.vhd:1000$1579: { $flatten\P3.$verific$n2121$1181 $auto$opt_reduce.cc:134:opt_pmux$1688 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_618$b22.vhd:1000$1580: { $flatten\P3.$verific$n2120$1180 $auto$opt_reduce.cc:134:opt_pmux$1690 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_619$b22.vhd:1000$1581: { $flatten\P3.$verific$n2119$1179 $auto$opt_reduce.cc:134:opt_pmux$1692 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_620$b22.vhd:1000$1582: { $flatten\P3.$verific$n2118$1178 $auto$opt_reduce.cc:134:opt_pmux$1694 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_717$b22.vhd:877$1550: { $flatten\P3.$verific$n2118$1178 $auto$opt_reduce.cc:134:opt_pmux$1696 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_718$b22.vhd:877$1556: { $flatten\P3.$verific$n2119$1179 $auto$opt_reduce.cc:134:opt_pmux$1698 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_719$b22.vhd:877$1557: { $flatten\P3.$verific$n2120$1180 $auto$opt_reduce.cc:134:opt_pmux$1700 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_720$b22.vhd:877$1558: { $flatten\P3.$verific$n2121$1181 $auto$opt_reduce.cc:134:opt_pmux$1702 }
  Optimizing cells in module \b22.
Performed a total of 24 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P3.$verific$wr_reg$b22.vhd:1019$1649 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$state_reg$b22.vhd:1019$1651 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg3_reg$b22.vhd:1019$1646 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg2_reg$b22.vhd:1019$1645 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg1_reg$b22.vhd:1019$1644 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg0_reg$b22.vhd:1019$1643 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$rd_reg$b22.vhd:1019$1648 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b22.vhd:509$600 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$addr_reg$b22.vhd:1019$1647 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$IR_reg$b22.vhd:1019$1640 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$B_reg$b22.vhd:1019$1642 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b22.vhd:1529$1129 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b22.vhd:1529$1131 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1126 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b22.vhd:1529$1125 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b22.vhd:1529$1124 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b22.vhd:1529$1123 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b22.vhd:1529$1128 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b22.vhd:1529$1130 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b22.vhd:1529$1127 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b22.vhd:1529$1120 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b22.vhd:1529$1122 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b22.vhd:509$607 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b22.vhd:509$609 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b22.vhd:509$604 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b22.vhd:509$603 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b22.vhd:509$602 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b22.vhd:509$601 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b22.vhd:509$606 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b22.vhd:509$598 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b22.vhd:509$608 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b22.vhd:509$605 ($aldff) from module b22.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b22.P1.d.
Found FSM state register b22.P2.d.
Found FSM state register b22.P3.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b22'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b22.vhd:509$599
  root of input selection tree: $flatten\P1.$verific$n11472$404
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$250 [0]
  found ctrl input: $flatten\P1.$verific$n10346$221
  found ctrl input: $flatten\P1.$verific$n1405$148
  found ctrl input: $flatten\P1.$verific$n1440$149
  found ctrl input: $flatten\P1.$verific$n1474$150
  found ctrl input: $flatten\P1.$verific$n1475$151
  found ctrl input: $flatten\P1.$verific$n1476$152
  found ctrl input: $flatten\P1.$verific$n1477$153
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.B \P1.state $flatten\P1.$verific$n1405$148 $flatten\P1.$verific$n1440$149 $flatten\P1.$verific$n1474$150 $flatten\P1.$verific$n1475$151 $flatten\P1.$verific$n1476$152 $flatten\P1.$verific$n1477$153 $flatten\P1.$verific$n10346$221 $flatten\P1.$verific$n341$250 [0] }
  ctrl outputs: $flatten\P1.$verific$n11472$404
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P2.d' from module `\b22'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b22.vhd:1529$1121
  root of input selection tree: $flatten\P2.$verific$n11479$924
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$769 [0]
  found ctrl input: $flatten\P2.$verific$n10346$740
  found ctrl input: $flatten\P2.$verific$n1405$667
  found ctrl input: $flatten\P2.$verific$n1440$668
  found ctrl input: $flatten\P2.$verific$n1474$669
  found ctrl input: $flatten\P2.$verific$n1475$670
  found ctrl input: $flatten\P2.$verific$n1476$671
  found ctrl input: $flatten\P2.$verific$n1477$672
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.B \P2.state $flatten\P2.$verific$n1405$667 $flatten\P2.$verific$n1440$668 $flatten\P2.$verific$n1474$669 $flatten\P2.$verific$n1475$670 $flatten\P2.$verific$n1476$671 $flatten\P2.$verific$n1477$672 $flatten\P2.$verific$n10346$740 $flatten\P2.$verific$n341$769 [0] }
  ctrl outputs: $flatten\P2.$verific$n11479$924
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P3.d' from module `\b22'.
  found $adff cell for state register: $flatten\P3.$verific$d_reg$b22.vhd:1019$1641
  root of input selection tree: $flatten\P3.$verific$n11328$1429
  found reset state: 0 (from async reset)
  found ctrl input: \P3.state
  found ctrl input: $flatten\P3.$verific$n341$1272 [0]
  found ctrl input: $flatten\P3.$verific$n10195$1245
  found ctrl input: $flatten\P3.$verific$n1406$1172
  found ctrl input: $flatten\P3.$verific$n1441$1173
  found ctrl input: $flatten\P3.$verific$n1475$1174
  found ctrl input: $flatten\P3.$verific$n1476$1175
  found ctrl input: $flatten\P3.$verific$n1477$1176
  found ctrl input: $flatten\P3.$verific$n1478$1177
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P3.B
  ctrl inputs: { \P3.B \P3.state $flatten\P3.$verific$n1406$1172 $flatten\P3.$verific$n1441$1173 $flatten\P3.$verific$n1475$1174 $flatten\P3.$verific$n1476$1175 $flatten\P3.$verific$n1477$1176 $flatten\P3.$verific$n1478$1177 $flatten\P3.$verific$n10195$1245 $flatten\P3.$verific$n341$1272 [0] }
  ctrl outputs: $flatten\P3.$verific$n11328$1429
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P3.d$1707' from module `\b22'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P2.d$1705' from module `\b22'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1703' from module `\b22'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1703' from module `\b22'.
Optimizing FSM `$fsm$\P2.d$1705' from module `\b22'.
Optimizing FSM `$fsm$\P3.d$1707' from module `\b22'.

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1703' from module `\b22' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> ---1
  00000000000000000000000000000010 -> --1-
  00000000000000000000000000000001 -> -1--
  00000000000000000000000000000011 -> 1---
Recoding FSM `$fsm$\P2.d$1705' from module `\b22' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> ---1
  00000000000000000000000000000010 -> --1-
  00000000000000000000000000000001 -> -1--
  00000000000000000000000000000011 -> 1---
Recoding FSM `$fsm$\P3.d$1707' from module `\b22' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> ---1
  00000000000000000000000000000010 -> --1-
  00000000000000000000000000000001 -> -1--
  00000000000000000000000000000011 -> 1---

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1703' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P1.d$1703 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       4

  Input signals:
    0: $flatten\P1.$verific$n341$250 [0]
    1: $flatten\P1.$verific$n10346$221
    2: $flatten\P1.$verific$n1477$153
    3: $flatten\P1.$verific$n1476$152
    4: $flatten\P1.$verific$n1475$151
    5: $flatten\P1.$verific$n1474$150
    6: $flatten\P1.$verific$n1440$149
    7: $flatten\P1.$verific$n1405$148
    8: \P1.state
    9: \P1.B

  Output signals:
    0: $flatten\P1.$verific$n11472$404 [0]
    1: $flatten\P1.$verific$n11472$404 [1]
    2: $flatten\P1.$verific$n11472$404 [2]
    3: $flatten\P1.$verific$n11472$404 [3]
    4: $flatten\P1.$verific$n11472$404 [4]
    5: $flatten\P1.$verific$n11472$404 [5]
    6: $flatten\P1.$verific$n11472$404 [6]
    7: $flatten\P1.$verific$n11472$404 [7]
    8: $flatten\P1.$verific$n11472$404 [8]
    9: $flatten\P1.$verific$n11472$404 [9]
   10: $flatten\P1.$verific$n11472$404 [10]
   11: $flatten\P1.$verific$n11472$404 [11]
   12: $flatten\P1.$verific$n11472$404 [12]
   13: $flatten\P1.$verific$n11472$404 [13]
   14: $flatten\P1.$verific$n11472$404 [14]
   15: $flatten\P1.$verific$n11472$404 [15]
   16: $flatten\P1.$verific$n11472$404 [16]
   17: $flatten\P1.$verific$n11472$404 [17]
   18: $flatten\P1.$verific$n11472$404 [18]
   19: $flatten\P1.$verific$n11472$404 [19]
   20: $flatten\P1.$verific$n11472$404 [20]
   21: $flatten\P1.$verific$n11472$404 [21]
   22: $flatten\P1.$verific$n11472$404 [22]
   23: $flatten\P1.$verific$n11472$404 [23]
   24: $flatten\P1.$verific$n11472$404 [24]
   25: $flatten\P1.$verific$n11472$404 [25]
   26: $flatten\P1.$verific$n11472$404 [26]
   27: $flatten\P1.$verific$n11472$404 [27]
   28: $flatten\P1.$verific$n11472$404 [28]
   29: $flatten\P1.$verific$n11472$404 [29]
   30: $flatten\P1.$verific$n11472$404 [30]
   31: $flatten\P1.$verific$n11472$404 [31]

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1705' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P2.d$1705 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       4

  Input signals:
    0: $flatten\P2.$verific$n341$769 [0]
    1: $flatten\P2.$verific$n10346$740
    2: $flatten\P2.$verific$n1477$672
    3: $flatten\P2.$verific$n1476$671
    4: $flatten\P2.$verific$n1475$670
    5: $flatten\P2.$verific$n1474$669
    6: $flatten\P2.$verific$n1440$668
    7: $flatten\P2.$verific$n1405$667
    8: \P2.state
    9: \P2.B

  Output signals:
    0: $flatten\P2.$verific$n11479$924 [0]
    1: $flatten\P2.$verific$n11479$924 [1]
    2: $flatten\P2.$verific$n11479$924 [2]
    3: $flatten\P2.$verific$n11479$924 [3]
    4: $flatten\P2.$verific$n11479$924 [4]
    5: $flatten\P2.$verific$n11479$924 [5]
    6: $flatten\P2.$verific$n11479$924 [6]
    7: $flatten\P2.$verific$n11479$924 [7]
    8: $flatten\P2.$verific$n11479$924 [8]
    9: $flatten\P2.$verific$n11479$924 [9]
   10: $flatten\P2.$verific$n11479$924 [10]
   11: $flatten\P2.$verific$n11479$924 [11]
   12: $flatten\P2.$verific$n11479$924 [12]
   13: $flatten\P2.$verific$n11479$924 [13]
   14: $flatten\P2.$verific$n11479$924 [14]
   15: $flatten\P2.$verific$n11479$924 [15]
   16: $flatten\P2.$verific$n11479$924 [16]
   17: $flatten\P2.$verific$n11479$924 [17]
   18: $flatten\P2.$verific$n11479$924 [18]
   19: $flatten\P2.$verific$n11479$924 [19]
   20: $flatten\P2.$verific$n11479$924 [20]
   21: $flatten\P2.$verific$n11479$924 [21]
   22: $flatten\P2.$verific$n11479$924 [22]
   23: $flatten\P2.$verific$n11479$924 [23]
   24: $flatten\P2.$verific$n11479$924 [24]
   25: $flatten\P2.$verific$n11479$924 [25]
   26: $flatten\P2.$verific$n11479$924 [26]
   27: $flatten\P2.$verific$n11479$924 [27]
   28: $flatten\P2.$verific$n11479$924 [28]
   29: $flatten\P2.$verific$n11479$924 [29]
   30: $flatten\P2.$verific$n11479$924 [30]
   31: $flatten\P2.$verific$n11479$924 [31]

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P3.d$1707' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P3.d$1707 (\P3.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       4

  Input signals:
    0: $flatten\P3.$verific$n341$1272 [0]
    1: $flatten\P3.$verific$n10195$1245
    2: $flatten\P3.$verific$n1478$1177
    3: $flatten\P3.$verific$n1477$1176
    4: $flatten\P3.$verific$n1476$1175
    5: $flatten\P3.$verific$n1475$1174
    6: $flatten\P3.$verific$n1441$1173
    7: $flatten\P3.$verific$n1406$1172
    8: \P3.state
    9: \P3.B

  Output signals:
    0: $flatten\P3.$verific$n11328$1429 [0]
    1: $flatten\P3.$verific$n11328$1429 [1]
    2: $flatten\P3.$verific$n11328$1429 [2]
    3: $flatten\P3.$verific$n11328$1429 [3]
    4: $flatten\P3.$verific$n11328$1429 [4]
    5: $flatten\P3.$verific$n11328$1429 [5]
    6: $flatten\P3.$verific$n11328$1429 [6]
    7: $flatten\P3.$verific$n11328$1429 [7]
    8: $flatten\P3.$verific$n11328$1429 [8]
    9: $flatten\P3.$verific$n11328$1429 [9]
   10: $flatten\P3.$verific$n11328$1429 [10]
   11: $flatten\P3.$verific$n11328$1429 [11]
   12: $flatten\P3.$verific$n11328$1429 [12]
   13: $flatten\P3.$verific$n11328$1429 [13]
   14: $flatten\P3.$verific$n11328$1429 [14]
   15: $flatten\P3.$verific$n11328$1429 [15]
   16: $flatten\P3.$verific$n11328$1429 [16]
   17: $flatten\P3.$verific$n11328$1429 [17]
   18: $flatten\P3.$verific$n11328$1429 [18]
   19: $flatten\P3.$verific$n11328$1429 [19]
   20: $flatten\P3.$verific$n11328$1429 [20]
   21: $flatten\P3.$verific$n11328$1429 [21]
   22: $flatten\P3.$verific$n11328$1429 [22]
   23: $flatten\P3.$verific$n11328$1429 [23]
   24: $flatten\P3.$verific$n11328$1429 [24]
   25: $flatten\P3.$verific$n11328$1429 [25]
   26: $flatten\P3.$verific$n11328$1429 [26]
   27: $flatten\P3.$verific$n11328$1429 [27]
   28: $flatten\P3.$verific$n11328$1429 [28]
   29: $flatten\P3.$verific$n11328$1429 [29]
   30: $flatten\P3.$verific$n11328$1429 [30]
   31: $flatten\P3.$verific$n11328$1429 [31]

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1703' from module `\b22'.
Mapping FSM `$fsm$\P2.d$1705' from module `\b22'.
Mapping FSM `$fsm$\P3.d$1707' from module `\b22'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~18 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~486 debug messages>
Removed a total of 162 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~68 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P3.$verific$reg3_reg$b22.vhd:1019$1646 ($adff) from module b22 (D = $flatten\P3.$verific$n11034$1424, Q = \P3.reg3).
Adding EN signal on $flatten\P3.$verific$reg2_reg$b22.vhd:1019$1645 ($adff) from module b22 (D = $flatten\P3.$verific$n10128$1397, Q = \P3.reg2).
Adding EN signal on $flatten\P3.$verific$reg1_reg$b22.vhd:1019$1644 ($adff) from module b22 (D = $flatten\P3.$verific$n10095$1396, Q = \P3.reg1).
Adding EN signal on $flatten\P3.$verific$reg0_reg$b22.vhd:1019$1643 ($adff) from module b22 (D = $flatten\P3.$verific$n10062$1395, Q = \P3.reg0).
Adding EN signal on $flatten\P3.$verific$B_reg$b22.vhd:1019$1642 ($adff) from module b22 (D = $flatten\P3.$verific$n10835$1251, Q = \P3.B).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1126 ($adff) from module b22 (D = $flatten\P2.$verific$n10312$893 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1126 ($adff) from module b22 (D = $flatten\P2.$verific$n11185$919 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b22.vhd:1529$1125 ($adff) from module b22 (D = $flatten\P2.$verific$n10279$892, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b22.vhd:1529$1124 ($adff) from module b22 (D = $flatten\P2.$verific$n10246$891, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b22.vhd:1529$1123 ($adff) from module b22 (D = $flatten\P2.$verific$n10213$890, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b22.vhd:1529$1130 ($adff) from module b22 (D = { $flatten\P2.$verific$add_570$b22.vhd:1490$1052 $flatten\P2.$verific$n10521$902 [0] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$B_reg$b22.vhd:1529$1122 ($adff) from module b22 (D = $flatten\P2.$verific$n10986$748, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b22.vhd:509$604 ($adff) from module b22 (D = $flatten\P1.$verific$n10312$374 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b22.vhd:509$604 ($adff) from module b22 (D = $flatten\P1.$verific$n11178$399 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b22.vhd:509$603 ($adff) from module b22 (D = $flatten\P1.$verific$n10279$373, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b22.vhd:509$602 ($adff) from module b22 (D = $flatten\P1.$verific$n10246$372, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b22.vhd:509$601 ($adff) from module b22 (D = $flatten\P1.$verific$n10213$371, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b22.vhd:509$608 ($adff) from module b22 (D = { $flatten\P1.$verific$add_570$b22.vhd:470$532 $flatten\P1.$verific$n10514$382 [0] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$B_reg$b22.vhd:509$600 ($adff) from module b22 (D = $flatten\P1.$verific$n10979$229, Q = \P1.B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 39 unused cells and 207 unused wires.
<suppressed ~40 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b22.vhd:509$599 ($adff) from module b22.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1121 ($adff) from module b22.
Setting constant 0-bit at position 2 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1641 ($adff) from module b22.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 22) from port A of cell b22.$verific$sub_4$b22.vhd:1596$75 ($sub).
Removed top 2 bits (of 22) from port B of cell b22.$verific$sub_4$b22.vhd:1596$75 ($sub).
Removed top 2 bits (of 22) from port Y of cell b22.$verific$sub_4$b22.vhd:1596$75 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$verific$sub_4$b22.vhd:1596$75 ($sub).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_16$b22.vhd:1601$88 ($lt).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_21$b22.vhd:1602$93 ($lt).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_22$b22.vhd:1602$94 ($lt).
Removed top 1 bits (of 33) from port Y of cell b22.$verific$sub_34$b22.vhd:1605$101 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$verific$sub_34$b22.vhd:1605$101 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$verific$sub_34$b22.vhd:1605$101 ($sub).
Removed top 1 bits (of 5) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2109 ($eq).
Removed top 1 bits (of 6) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2099 ($eq).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$526 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$526 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$526 ($sub).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$524 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$524 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$524 ($add).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_179$b22.vhd:250$518 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_178$b22.vhd:249$517 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_177$b22.vhd:248$516 ($eq).
Removed top 32 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$513 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$513 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$513 ($sub).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_145$b22.vhd:230$507 ($mux).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_143$b22.vhd:228$505 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_142$b22.vhd:227$504 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_141$b22.vhd:225$503 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_140$b22.vhd:224$502 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_138$b22.vhd:220$500 ($mux).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$482 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$482 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$482 ($sub).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P1.$verific$LessThan_83$b22.vhd:152$481 ($lt).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$469 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$469 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$469 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$467 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$467 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$467 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P1.$verific$add_44$b22.vhd:100$459 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$add_44$b22.vhd:100$459 ($add).
Removed top 25 bits (of 26) from port B of cell b22.$flatten\P1.$verific$add_39$b22.vhd:99$455 ($add).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P1.$verific$add_36$b22.vhd:96$449 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P1.$verific$add_36$b22.vhd:96$449 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P1.$verific$add_31$b22.vhd:94$442 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P1.$verific$add_31$b22.vhd:94$442 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P1.$verific$add_26$b22.vhd:92$435 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P1.$verific$add_26$b22.vhd:92$435 ($add).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P1.$verific$add_21$b22.vhd:90$428 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P1.$verific$add_21$b22.vhd:90$428 ($add).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$unary_minus_15$b22.vhd:88$422 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P1.$verific$unary_minus_15$b22.vhd:88$422 ($neg).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P1.$verific$LessThan_14$b22.vhd:87$421 ($lt).
Removed top 1 bits (of 5) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$1895 ($eq).
Removed top 1 bits (of 6) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$1885 ($eq).
Removed top 1 bits (of 6) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2313 ($eq).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1046 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1046 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1046 ($sub).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1044 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1044 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1044 ($add).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_179$b22.vhd:1270$1038 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_178$b22.vhd:1269$1037 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_177$b22.vhd:1268$1036 ($eq).
Removed top 32 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1033 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1033 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1033 ($sub).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_145$b22.vhd:1250$1027 ($mux).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_143$b22.vhd:1248$1025 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_142$b22.vhd:1247$1024 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_141$b22.vhd:1245$1023 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_140$b22.vhd:1244$1022 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_138$b22.vhd:1240$1020 ($mux).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$1002 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$1002 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$1002 ($sub).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P2.$verific$LessThan_83$b22.vhd:1172$1001 ($lt).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$989 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$989 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$989 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$987 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$987 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$987 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P2.$verific$add_44$b22.vhd:1120$979 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$add_44$b22.vhd:1120$979 ($add).
Removed top 25 bits (of 26) from port B of cell b22.$flatten\P2.$verific$add_39$b22.vhd:1119$975 ($add).
Removed top 1 bits (of 5) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2323 ($eq).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P2.$verific$add_36$b22.vhd:1116$969 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P2.$verific$add_36$b22.vhd:1116$969 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P2.$verific$add_31$b22.vhd:1114$962 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P2.$verific$add_31$b22.vhd:1114$962 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P2.$verific$add_26$b22.vhd:1112$955 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P2.$verific$add_26$b22.vhd:1112$955 ($add).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P2.$verific$add_21$b22.vhd:1110$948 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P2.$verific$add_21$b22.vhd:1110$948 ($add).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$unary_minus_15$b22.vhd:1108$942 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P2.$verific$unary_minus_15$b22.vhd:1108$942 ($neg).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P2.$verific$LessThan_14$b22.vhd:1107$941 ($lt).
Removed top 3 bits (of 29) from FF cell b22.$auto$ff.cc:262:slice$2424 ($adffe).
Removed top 3 bits (of 29) from FF cell b22.$auto$ff.cc:262:slice$2385 ($adffe).
Removed top 3 bits (of 32) from FF cell b22.$auto$ff.cc:262:slice$2351 ($adffe).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_667$b22.vhd:1016$1624 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_648$b22.vhd:1015$1610 ($mux).
Removed top 1 bits (of 21) from port A of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1595 ($sub).
Removed top 1 bits (of 21) from port B of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1595 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$flatten\P3.$verific$sub_632$b22.vhd:1007$1592 ($sub).
Removed top 1 bits (of 21) from port B of cell b22.$flatten\P3.$verific$sub_632$b22.vhd:1007$1592 ($sub).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1553 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1553 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1553 ($add).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1551 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1551 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1551 ($sub).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_171$b22.vhd:760$1543 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_170$b22.vhd:759$1542 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_169$b22.vhd:758$1541 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_143$b22.vhd:740$1532 ($mux).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_141$b22.vhd:738$1530 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_140$b22.vhd:737$1529 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_139$b22.vhd:735$1528 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_138$b22.vhd:734$1527 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_136$b22.vhd:730$1525 ($mux).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1507 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1507 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1507 ($sub).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P3.$verific$LessThan_81$b22.vhd:662$1506 ($lt).
Removed top 13 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1494 ($sub).
Removed top 13 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1494 ($sub).
Removed top 13 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1494 ($sub).
Removed top 13 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1492 ($sub).
Removed top 13 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1492 ($sub).
Removed top 13 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1492 ($sub).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P3.$verific$add_44$b22.vhd:610$1484 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$add_44$b22.vhd:610$1484 ($add).
Removed top 1 bits (of 30) from port A of cell b22.$flatten\P3.$verific$sub_39$b22.vhd:609$1480 ($sub).
Removed top 26 bits (of 30) from port B of cell b22.$flatten\P3.$verific$sub_39$b22.vhd:609$1480 ($sub).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P3.$verific$add_36$b22.vhd:606$1474 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P3.$verific$add_36$b22.vhd:606$1474 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P3.$verific$add_31$b22.vhd:604$1467 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P3.$verific$add_31$b22.vhd:604$1467 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P3.$verific$add_26$b22.vhd:602$1460 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P3.$verific$add_26$b22.vhd:602$1460 ($add).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P3.$verific$add_21$b22.vhd:600$1453 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P3.$verific$add_21$b22.vhd:600$1453 ($add).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$unary_minus_15$b22.vhd:598$1447 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P3.$verific$unary_minus_15$b22.vhd:598$1447 ($neg).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P3.$verific$LessThan_14$b22.vhd:597$1446 ($lt).
Removed top 1 bits (of 21) from port Y of cell b22.$verific$add_3$b22.vhd:1596$74 ($add).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_698$b22.vhd:506$582 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_697$b22.vhd:1526$1104 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_679$b22.vhd:505$568 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_678$b22.vhd:1525$1090 ($mux).
Removed top 20 bits (of 21) from wire b22.$flatten\P1.$verific$n10477$379.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$verific$n10755$390.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$verific$n11178$399.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n11472$404.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1407$272.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1441$273.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1478$274.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n184$241.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n1987$285.
Removed top 3 bits (of 5) from wire b22.$flatten\P1.$verific$n288$244.
Removed top 5 bits (of 8) from wire b22.$flatten\P1.$verific$n301$246.
Removed top 9 bits (of 13) from wire b22.$flatten\P1.$verific$n318$248.
Removed top 8 bits (of 9) from wire b22.$flatten\P1.$verific$n341$250.
Removed top 2 bits (of 32) from wire b22.$flatten\P1.$verific$n4241$318.
Removed top 1 bits (of 3) from wire b22.$flatten\P1.$verific$n436$254.
Removed top 3 bits (of 33) from wire b22.$flatten\P1.$verific$n5666$332.
Removed top 1 bits (of 32) from wire b22.$flatten\P1.$verific$n862$267.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n933$269.
Removed top 1 bits (of 21) from wire b22.$flatten\P2.$verific$n10477$900.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$verific$n10762$910.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$verific$n11185$919.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n11479$924.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1407$791.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1441$792.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1478$793.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n184$760.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n1987$804.
Removed top 10 bits (of 13) from wire b22.$flatten\P2.$verific$n318$767.
Removed top 2 bits (of 32) from wire b22.$flatten\P2.$verific$n4241$837.
Removed top 3 bits (of 33) from wire b22.$flatten\P2.$verific$n5666$851.
Removed top 1 bits (of 32) from wire b22.$flatten\P2.$verific$n862$786.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n933$788.
Removed top 1 bits (of 21) from wire b22.$flatten\P3.$verific$n10326$1405.
Removed top 12 bits (of 20) from wire b22.$flatten\P3.$verific$n10457$1410.
Removed top 3 bits (of 32) from wire b22.$flatten\P3.$verific$n10611$1415.
Removed top 3 bits (of 20) from wire b22.$flatten\P3.$verific$n10813$1418.
Removed top 7 bits (of 32) from wire b22.$flatten\P3.$verific$n11034$1424.
Removed top 3 bits (of 20) from wire b22.$flatten\P3.$verific$n11102$1426.
Removed top 7 bits (of 32) from wire b22.$flatten\P3.$verific$n11157$1427.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1408$1294.
Removed top 31 bits (of 32) from wire b22.$flatten\P3.$verific$n1442$1295.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1479$1296.
Removed top 1 bits (of 33) from wire b22.$flatten\P3.$verific$n184$1263.
Removed top 3 bits (of 5) from wire b22.$flatten\P3.$verific$n288$1266.
Removed top 5 bits (of 8) from wire b22.$flatten\P3.$verific$n301$1268.
Removed top 9 bits (of 13) from wire b22.$flatten\P3.$verific$n318$1270.
Removed top 8 bits (of 9) from wire b22.$flatten\P3.$verific$n341$1272.
Removed top 1 bits (of 3) from wire b22.$flatten\P3.$verific$n439$1276.
Removed top 3 bits (of 33) from wire b22.$flatten\P3.$verific$n4798$1338.
Removed top 2 bits (of 32) from wire b22.$flatten\P3.$verific$n5506$1348.
Removed top 4 bits (of 32) from wire b22.$flatten\P3.$verific$n5776$1350.
Removed top 1 bits (of 33) from wire b22.$flatten\P3.$verific$n934$1291.
Removed top 1 bits (of 33) from wire b22.$verific$n459$45.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 48 unused cells and 203 unused wires.
<suppressed ~49 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b22:
  creating $macc model for $flatten\P1.$verific$add_21$b22.vhd:90$428 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b22.vhd:92$435 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b22.vhd:322$524 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b22.vhd:94$442 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b22.vhd:96$449 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b22.vhd:99$455 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b22.vhd:100$459 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b22.vhd:114$467 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b22.vhd:470$531 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b22.vhd:117$469 ($add).
  creating $macc model for $flatten\P1.$verific$add_662$b22.vhd:497$551 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b22.vhd:498$553 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b22.vhd:501$557 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b22.vhd:247$513 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b22.vhd:362$526 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b22.vhd:153$482 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b22.vhd:88$422 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b22.vhd:1110$948 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b22.vhd:1112$955 ($add).
  creating $macc model for $flatten\P2.$verific$add_283$b22.vhd:1342$1044 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b22.vhd:1114$962 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b22.vhd:1116$969 ($add).
  creating $macc model for $flatten\P2.$verific$add_39$b22.vhd:1119$975 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b22.vhd:1120$979 ($add).
  creating $macc model for $flatten\P2.$verific$add_56$b22.vhd:1134$987 ($add).
  creating $macc model for $flatten\P2.$verific$add_570$b22.vhd:1490$1051 ($add).
  creating $macc model for $flatten\P2.$verific$add_61$b22.vhd:1137$989 ($add).
  creating $macc model for $flatten\P2.$verific$add_662$b22.vhd:1517$1072 ($add).
  creating $macc model for $flatten\P2.$verific$add_664$b22.vhd:1518$1075 ($add).
  creating $macc model for $flatten\P2.$verific$sub_168$b22.vhd:1267$1033 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_365$b22.vhd:1382$1046 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_84$b22.vhd:1173$1002 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$942 ($neg).
  creating $macc model for $flatten\P3.$verific$add_21$b22.vhd:600$1453 ($add).
  creating $macc model for $flatten\P3.$verific$add_26$b22.vhd:602$1460 ($add).
  creating $macc model for $flatten\P3.$verific$add_31$b22.vhd:604$1467 ($add).
  creating $macc model for $flatten\P3.$verific$add_331$b22.vhd:872$1553 ($add).
  creating $macc model for $flatten\P3.$verific$add_36$b22.vhd:606$1474 ($add).
  creating $macc model for $flatten\P3.$verific$add_44$b22.vhd:610$1484 ($add).
  creating $macc model for $flatten\P3.$verific$add_540$b22.vhd:980$1570 ($add).
  creating $macc model for $flatten\P3.$verific$sub_297$b22.vhd:852$1551 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_39$b22.vhd:609$1480 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_55$b22.vhd:624$1492 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_59$b22.vhd:627$1494 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_632$b22.vhd:1007$1592 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_634$b22.vhd:1008$1595 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_82$b22.vhd:663$1507 ($sub).
  creating $macc model for $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1447 ($neg).
  creating $macc model for $verific$add_3$b22.vhd:1596$74 ($add).
  creating $macc model for $verific$add_31$b22.vhd:1603$100 ($add).
  creating $macc model for $verific$add_39$b22.vhd:1608$104 ($add).
  creating $macc model for $verific$sub_34$b22.vhd:1605$101 ($sub).
  creating $macc model for $verific$sub_4$b22.vhd:1596$75 ($sub).
  merging $macc model for $verific$add_3$b22.vhd:1596$74 into $verific$sub_4$b22.vhd:1596$75.
  creating $alu model for $macc $verific$sub_34$b22.vhd:1605$101.
  creating $alu model for $macc $verific$add_39$b22.vhd:1608$104.
  creating $alu model for $macc $verific$add_31$b22.vhd:1603$100.
  creating $alu model for $macc $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1447.
  creating $alu model for $macc $flatten\P3.$verific$sub_82$b22.vhd:663$1507.
  creating $alu model for $macc $flatten\P3.$verific$sub_634$b22.vhd:1008$1595.
  creating $alu model for $macc $flatten\P3.$verific$sub_632$b22.vhd:1007$1592.
  creating $alu model for $macc $flatten\P3.$verific$sub_59$b22.vhd:627$1494.
  creating $alu model for $macc $flatten\P3.$verific$sub_55$b22.vhd:624$1492.
  creating $alu model for $macc $flatten\P3.$verific$sub_39$b22.vhd:609$1480.
  creating $alu model for $macc $flatten\P3.$verific$sub_297$b22.vhd:852$1551.
  creating $alu model for $macc $flatten\P3.$verific$add_540$b22.vhd:980$1570.
  creating $alu model for $macc $flatten\P3.$verific$add_44$b22.vhd:610$1484.
  creating $alu model for $macc $flatten\P3.$verific$add_36$b22.vhd:606$1474.
  creating $alu model for $macc $flatten\P3.$verific$add_331$b22.vhd:872$1553.
  creating $alu model for $macc $flatten\P3.$verific$add_31$b22.vhd:604$1467.
  creating $alu model for $macc $flatten\P3.$verific$add_26$b22.vhd:602$1460.
  creating $alu model for $macc $flatten\P3.$verific$add_21$b22.vhd:600$1453.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$942.
  creating $alu model for $macc $flatten\P2.$verific$sub_84$b22.vhd:1173$1002.
  creating $alu model for $macc $flatten\P2.$verific$sub_365$b22.vhd:1382$1046.
  creating $alu model for $macc $flatten\P2.$verific$sub_168$b22.vhd:1267$1033.
  creating $alu model for $macc $flatten\P2.$verific$add_664$b22.vhd:1518$1075.
  creating $alu model for $macc $flatten\P2.$verific$add_662$b22.vhd:1517$1072.
  creating $alu model for $macc $flatten\P2.$verific$add_61$b22.vhd:1137$989.
  creating $alu model for $macc $flatten\P2.$verific$add_570$b22.vhd:1490$1051.
  creating $alu model for $macc $flatten\P2.$verific$add_56$b22.vhd:1134$987.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b22.vhd:1120$979.
  creating $alu model for $macc $flatten\P2.$verific$add_39$b22.vhd:1119$975.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b22.vhd:1116$969.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b22.vhd:1114$962.
  creating $alu model for $macc $flatten\P2.$verific$add_283$b22.vhd:1342$1044.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b22.vhd:1112$955.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b22.vhd:1110$948.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b22.vhd:88$422.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b22.vhd:153$482.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b22.vhd:362$526.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b22.vhd:247$513.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b22.vhd:498$553.
  creating $alu model for $macc $flatten\P1.$verific$add_662$b22.vhd:497$551.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b22.vhd:117$469.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b22.vhd:470$531.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b22.vhd:114$467.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b22.vhd:100$459.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b22.vhd:99$455.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b22.vhd:96$449.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b22.vhd:94$442.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b22.vhd:322$524.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b22.vhd:92$435.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b22.vhd:90$428.
  creating $macc cell for $verific$sub_4$b22.vhd:1596$75: $auto$alumacc.cc:365:replace_macc$2704
  creating $macc cell for $flatten\P1.$verific$mult_667$b22.vhd:501$557: $auto$alumacc.cc:365:replace_macc$2705
  creating $alu model for $flatten\P1.$verific$LessThan_14$b22.vhd:87$421 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b22.vhd:122$475 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b22.vhd:142$479 ($lt): merged with $flatten\P1.$verific$LessThan_68$b22.vhd:122$475.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b22.vhd:152$481 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b22.vhd:155$486 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b22.vhd:1107$941 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_68$b22.vhd:1142$995 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_78$b22.vhd:1162$999 ($lt): merged with $flatten\P2.$verific$LessThan_68$b22.vhd:1142$995.
  creating $alu model for $flatten\P2.$verific$LessThan_83$b22.vhd:1172$1001 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_87$b22.vhd:1175$1006 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_14$b22.vhd:597$1446 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_66$b22.vhd:632$1500 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_76$b22.vhd:652$1504 ($lt): merged with $flatten\P3.$verific$LessThan_66$b22.vhd:632$1500.
  creating $alu model for $flatten\P3.$verific$LessThan_81$b22.vhd:662$1506 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_85$b22.vhd:665$1511 ($lt): new $alu
  creating $alu model for $verific$LessThan_14$b22.vhd:1601$86 ($lt): new $alu
  creating $alu model for $verific$LessThan_15$b22.vhd:1601$87 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b22.vhd:1601$88 ($lt): new $alu
  creating $alu model for $verific$LessThan_21$b22.vhd:1602$93 ($lt): new $alu
  creating $alu model for $verific$LessThan_22$b22.vhd:1602$94 ($lt): new $alu
  creating $alu model for $verific$LessThan_23$b22.vhd:1602$95 ($lt): new $alu
  creating $alu cell for $verific$LessThan_23$b22.vhd:1602$95: $auto$alumacc.cc:485:replace_alu$2724
  creating $alu cell for $verific$LessThan_22$b22.vhd:1602$94: $auto$alumacc.cc:485:replace_alu$2729
  creating $alu cell for $verific$LessThan_21$b22.vhd:1602$93: $auto$alumacc.cc:485:replace_alu$2734
  creating $alu cell for $verific$LessThan_16$b22.vhd:1601$88: $auto$alumacc.cc:485:replace_alu$2739
  creating $alu cell for $verific$LessThan_15$b22.vhd:1601$87: $auto$alumacc.cc:485:replace_alu$2744
  creating $alu cell for $verific$LessThan_14$b22.vhd:1601$86: $auto$alumacc.cc:485:replace_alu$2749
  creating $alu cell for $flatten\P3.$verific$LessThan_85$b22.vhd:665$1511: $auto$alumacc.cc:485:replace_alu$2754
  creating $alu cell for $flatten\P3.$verific$LessThan_81$b22.vhd:662$1506: $auto$alumacc.cc:485:replace_alu$2765
  creating $alu cell for $flatten\P3.$verific$LessThan_66$b22.vhd:632$1500, $flatten\P3.$verific$LessThan_76$b22.vhd:652$1504: $auto$alumacc.cc:485:replace_alu$2776
  creating $alu cell for $flatten\P3.$verific$LessThan_14$b22.vhd:597$1446: $auto$alumacc.cc:485:replace_alu$2787
  creating $alu cell for $flatten\P2.$verific$LessThan_87$b22.vhd:1175$1006: $auto$alumacc.cc:485:replace_alu$2792
  creating $alu cell for $flatten\P2.$verific$LessThan_83$b22.vhd:1172$1001: $auto$alumacc.cc:485:replace_alu$2797
  creating $alu cell for $flatten\P2.$verific$LessThan_68$b22.vhd:1142$995, $flatten\P2.$verific$LessThan_78$b22.vhd:1162$999: $auto$alumacc.cc:485:replace_alu$2808
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b22.vhd:1107$941: $auto$alumacc.cc:485:replace_alu$2819
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b22.vhd:155$486: $auto$alumacc.cc:485:replace_alu$2824
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b22.vhd:152$481: $auto$alumacc.cc:485:replace_alu$2829
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b22.vhd:122$475, $flatten\P1.$verific$LessThan_78$b22.vhd:142$479: $auto$alumacc.cc:485:replace_alu$2840
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b22.vhd:87$421: $auto$alumacc.cc:485:replace_alu$2851
  creating $alu cell for $flatten\P1.$verific$add_21$b22.vhd:90$428: $auto$alumacc.cc:485:replace_alu$2856
  creating $alu cell for $flatten\P1.$verific$add_26$b22.vhd:92$435: $auto$alumacc.cc:485:replace_alu$2859
  creating $alu cell for $flatten\P1.$verific$add_283$b22.vhd:322$524: $auto$alumacc.cc:485:replace_alu$2862
  creating $alu cell for $flatten\P1.$verific$add_31$b22.vhd:94$442: $auto$alumacc.cc:485:replace_alu$2865
  creating $alu cell for $flatten\P1.$verific$add_36$b22.vhd:96$449: $auto$alumacc.cc:485:replace_alu$2868
  creating $alu cell for $flatten\P1.$verific$add_39$b22.vhd:99$455: $auto$alumacc.cc:485:replace_alu$2871
  creating $alu cell for $flatten\P1.$verific$add_44$b22.vhd:100$459: $auto$alumacc.cc:485:replace_alu$2874
  creating $alu cell for $flatten\P1.$verific$add_570$b22.vhd:470$531: $auto$alumacc.cc:485:replace_alu$2877
  creating $alu cell for $flatten\P1.$verific$add_56$b22.vhd:114$467: $auto$alumacc.cc:485:replace_alu$2880
  creating $alu cell for $flatten\P1.$verific$add_662$b22.vhd:497$551: $auto$alumacc.cc:485:replace_alu$2883
  creating $alu cell for $flatten\P1.$verific$add_61$b22.vhd:117$469: $auto$alumacc.cc:485:replace_alu$2886
  creating $alu cell for $flatten\P1.$verific$add_664$b22.vhd:498$553: $auto$alumacc.cc:485:replace_alu$2889
  creating $alu cell for $flatten\P1.$verific$sub_168$b22.vhd:247$513: $auto$alumacc.cc:485:replace_alu$2892
  creating $alu cell for $flatten\P1.$verific$sub_365$b22.vhd:362$526: $auto$alumacc.cc:485:replace_alu$2895
  creating $alu cell for $flatten\P1.$verific$sub_84$b22.vhd:153$482: $auto$alumacc.cc:485:replace_alu$2898
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b22.vhd:88$422: $auto$alumacc.cc:485:replace_alu$2901
  creating $alu cell for $flatten\P2.$verific$add_21$b22.vhd:1110$948: $auto$alumacc.cc:485:replace_alu$2904
  creating $alu cell for $flatten\P2.$verific$add_26$b22.vhd:1112$955: $auto$alumacc.cc:485:replace_alu$2907
  creating $alu cell for $flatten\P2.$verific$add_283$b22.vhd:1342$1044: $auto$alumacc.cc:485:replace_alu$2910
  creating $alu cell for $flatten\P2.$verific$add_31$b22.vhd:1114$962: $auto$alumacc.cc:485:replace_alu$2913
  creating $alu cell for $flatten\P2.$verific$add_36$b22.vhd:1116$969: $auto$alumacc.cc:485:replace_alu$2916
  creating $alu cell for $flatten\P2.$verific$add_39$b22.vhd:1119$975: $auto$alumacc.cc:485:replace_alu$2919
  creating $alu cell for $flatten\P2.$verific$add_44$b22.vhd:1120$979: $auto$alumacc.cc:485:replace_alu$2922
  creating $alu cell for $flatten\P2.$verific$add_570$b22.vhd:1490$1051: $auto$alumacc.cc:485:replace_alu$2925
  creating $alu cell for $flatten\P2.$verific$add_56$b22.vhd:1134$987: $auto$alumacc.cc:485:replace_alu$2928
  creating $alu cell for $flatten\P2.$verific$add_662$b22.vhd:1517$1072: $auto$alumacc.cc:485:replace_alu$2931
  creating $alu cell for $flatten\P2.$verific$add_61$b22.vhd:1137$989: $auto$alumacc.cc:485:replace_alu$2934
  creating $alu cell for $flatten\P2.$verific$add_664$b22.vhd:1518$1075: $auto$alumacc.cc:485:replace_alu$2937
  creating $alu cell for $flatten\P2.$verific$sub_168$b22.vhd:1267$1033: $auto$alumacc.cc:485:replace_alu$2940
  creating $alu cell for $flatten\P2.$verific$sub_365$b22.vhd:1382$1046: $auto$alumacc.cc:485:replace_alu$2943
  creating $alu cell for $flatten\P2.$verific$sub_84$b22.vhd:1173$1002: $auto$alumacc.cc:485:replace_alu$2946
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$942: $auto$alumacc.cc:485:replace_alu$2949
  creating $alu cell for $flatten\P3.$verific$add_21$b22.vhd:600$1453: $auto$alumacc.cc:485:replace_alu$2952
  creating $alu cell for $flatten\P3.$verific$add_26$b22.vhd:602$1460: $auto$alumacc.cc:485:replace_alu$2955
  creating $alu cell for $flatten\P3.$verific$add_31$b22.vhd:604$1467: $auto$alumacc.cc:485:replace_alu$2958
  creating $alu cell for $flatten\P3.$verific$add_331$b22.vhd:872$1553: $auto$alumacc.cc:485:replace_alu$2961
  creating $alu cell for $flatten\P3.$verific$add_36$b22.vhd:606$1474: $auto$alumacc.cc:485:replace_alu$2964
  creating $alu cell for $flatten\P3.$verific$add_44$b22.vhd:610$1484: $auto$alumacc.cc:485:replace_alu$2967
  creating $alu cell for $flatten\P3.$verific$add_540$b22.vhd:980$1570: $auto$alumacc.cc:485:replace_alu$2970
  creating $alu cell for $flatten\P3.$verific$sub_297$b22.vhd:852$1551: $auto$alumacc.cc:485:replace_alu$2973
  creating $alu cell for $flatten\P3.$verific$sub_39$b22.vhd:609$1480: $auto$alumacc.cc:485:replace_alu$2976
  creating $alu cell for $flatten\P3.$verific$sub_55$b22.vhd:624$1492: $auto$alumacc.cc:485:replace_alu$2979
  creating $alu cell for $flatten\P3.$verific$sub_59$b22.vhd:627$1494: $auto$alumacc.cc:485:replace_alu$2982
  creating $alu cell for $flatten\P3.$verific$sub_632$b22.vhd:1007$1592: $auto$alumacc.cc:485:replace_alu$2985
  creating $alu cell for $flatten\P3.$verific$sub_634$b22.vhd:1008$1595: $auto$alumacc.cc:485:replace_alu$2988
  creating $alu cell for $flatten\P3.$verific$sub_82$b22.vhd:663$1507: $auto$alumacc.cc:485:replace_alu$2991
  creating $alu cell for $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1447: $auto$alumacc.cc:485:replace_alu$2994
  creating $alu cell for $verific$add_31$b22.vhd:1603$100: $auto$alumacc.cc:485:replace_alu$2997
  creating $alu cell for $verific$add_39$b22.vhd:1608$104: $auto$alumacc.cc:485:replace_alu$3000
  creating $alu cell for $verific$sub_34$b22.vhd:1605$101: $auto$alumacc.cc:485:replace_alu$3003
  created 68 $alu and 2 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~15 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 7 unused cells and 37 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> techmap

3.22. Executing TECHMAP pass (map to technology primitives).

3.22.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.22.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:454:run$2459 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
  add \P1.addr (20 bits, unsigned)
  sub \P3.addr (20 bits, unsigned)
  add \P2.addr (20 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$403d07c18de10cda2ac652a859c56aea81aaf9b5\_90_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using template $paramod$a7926d38756e33b5022e02ebfd484599309272c7\_90_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$6dc2bc4e177433cbefea60fe94ff11f8a7c6abf8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010100 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~9680 debug messages>

yosys> opt

3.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~11418 debug messages>

yosys> opt_merge -nomux

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~16623 debug messages>
Removed a total of 5541 cells.

yosys> opt_muxtree

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$18217 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [19], Q = \P3.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$11654 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [19], Q = \P2.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$5431 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [19], Q = \P1.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$5409 ($_DFFE_PP0P_) from module b22 (D = $flatten\P1.$verific$n10979$229, Q = \P1.B).
Adding EN signal on $auto$ff.cc:262:slice$11632 ($_DFFE_PP0P_) from module b22 (D = $flatten\P2.$verific$n10986$748, Q = \P2.B).
Adding EN signal on $auto$ff.cc:262:slice$18314 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$verific$n10835$1251, Q = \P3.B).
Adding EN signal on $auto$ff.cc:262:slice$5412 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [0], Q = \P1.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$5413 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [1], Q = \P1.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$5414 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [2], Q = \P1.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$5415 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [3], Q = \P1.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$5416 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [4], Q = \P1.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$5417 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [5], Q = \P1.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$5418 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [6], Q = \P1.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$5419 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [7], Q = \P1.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$5420 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [8], Q = \P1.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$5421 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [9], Q = \P1.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$5422 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [10], Q = \P1.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$5423 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [11], Q = \P1.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$5424 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [12], Q = \P1.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$5425 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [13], Q = \P1.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$5426 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [14], Q = \P1.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$5427 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [15], Q = \P1.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$5428 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [16], Q = \P1.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$5429 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [17], Q = \P1.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$5430 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$401 [18], Q = \P1.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$5562 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11301$402 [0], Q = \P1.IR [0]).
Adding EN signal on $auto$ff.cc:262:slice$11635 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [0], Q = \P2.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$11636 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [1], Q = \P2.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$11637 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [2], Q = \P2.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$11638 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [3], Q = \P2.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$11639 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [4], Q = \P2.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$11640 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [5], Q = \P2.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$11641 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [6], Q = \P2.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$11642 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [7], Q = \P2.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$11643 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [8], Q = \P2.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$11644 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [9], Q = \P2.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$11645 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [10], Q = \P2.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$11646 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [11], Q = \P2.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$11647 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [12], Q = \P2.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$11648 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [13], Q = \P2.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$11649 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [14], Q = \P2.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$11650 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [15], Q = \P2.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$11651 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [16], Q = \P2.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$11652 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [17], Q = \P2.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$11653 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$921 [18], Q = \P2.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$11788 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11308$922 [0], Q = \P2.IR [0]).
Adding EN signal on $auto$ff.cc:262:slice$18148 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:454:run$2495 [0], Q = \P3.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$18149 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:454:run$2495 [1], Q = \P3.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$18150 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:454:run$2495 [2], Q = \P3.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$18198 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [0], Q = \P3.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$18199 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [1], Q = \P3.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$18200 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [2], Q = \P3.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$18201 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [3], Q = \P3.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$18202 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [4], Q = \P3.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$18203 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [5], Q = \P3.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$18204 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [6], Q = \P3.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$18205 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [7], Q = \P3.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$18206 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [8], Q = \P3.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$18207 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [9], Q = \P3.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$18208 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [10], Q = \P3.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$18209 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [11], Q = \P3.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$18210 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [12], Q = \P3.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$18211 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [13], Q = \P3.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$18212 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [14], Q = \P3.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$18213 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [15], Q = \P3.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$18214 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [16], Q = \P3.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$18215 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [17], Q = \P3.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$18216 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2496 [18], Q = \P3.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$18318 ($_DFF_PP0_) from module b22 (D = $auto$wreduce.cc:454:run$2497 [0], Q = \P3.IR [0]).

yosys> opt_clean

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 1785 unused cells and 5014 unused wires.
<suppressed ~1786 debug messages>

yosys> opt_expr

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~955 debug messages>

3.23.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~1965 debug messages>
Removed a total of 655 cells.

yosys> opt_dff

3.23.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$18254 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [4], Q = \P3.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$18253 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [3], Q = \P3.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$18252 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [2], Q = \P3.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$18250 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [0], Q = \P3.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$18249 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [31], Q = \P3.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$18248 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [30], Q = \P3.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$18247 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [29], Q = \P3.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$18246 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [28], Q = \P3.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$18245 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [27], Q = \P3.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$18244 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [26], Q = \P3.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$18243 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [25], Q = \P3.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$18242 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [24], Q = \P3.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$18241 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [23], Q = \P3.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$18240 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [22], Q = \P3.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$18239 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [21], Q = \P3.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$18238 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [20], Q = \P3.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$18237 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [19], Q = \P3.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$18236 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [18], Q = \P3.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$18235 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [17], Q = \P3.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$18234 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [16], Q = \P3.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$18233 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [15], Q = \P3.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$18232 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [14], Q = \P3.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$18231 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [13], Q = \P3.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$18230 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [12], Q = \P3.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$18229 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [11], Q = \P3.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$18228 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [10], Q = \P3.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$18227 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [9], Q = \P3.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$18226 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [8], Q = \P3.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$18225 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [7], Q = \P3.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$18224 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [6], Q = \P3.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$18223 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [5], Q = \P3.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$18218 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [0], Q = \P3.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11682 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [27], Q = \P2.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$11680 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [25], Q = \P2.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$11679 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [24], Q = \P2.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$11678 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [23], Q = \P2.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$11677 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [22], Q = \P2.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$5476 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [12], Q = \P1.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$5464 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$5463 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [31], Q = \P1.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$5462 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [30], Q = \P1.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$5461 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [29], Q = \P1.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$5460 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [28], Q = \P1.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$5459 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [27], Q = \P1.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$5458 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [26], Q = \P1.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$5457 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [25], Q = \P1.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$18251 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [1], Q = \P3.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$18221 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [3], Q = \P3.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$18220 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [2], Q = \P3.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$18219 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [1], Q = \P3.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11683 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [28], Q = \P2.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$11681 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [26], Q = \P2.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$5469 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [5], Q = \P1.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$5468 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [4], Q = \P1.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$5467 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [3], Q = \P1.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$5466 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [2], Q = \P1.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$5465 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [1], Q = \P1.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$5475 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [11], Q = \P1.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$5474 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [10], Q = \P1.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$5473 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [9], Q = \P1.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$5472 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [8], Q = \P1.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$18222 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20463 [4], Q = \P3.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$5470 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [6], Q = \P1.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$5471 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [7], Q = \P1.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$11655 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [0], Q = \P2.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11656 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [1], Q = \P2.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11665 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [10], Q = \P2.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$11666 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [11], Q = \P2.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$11667 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [12], Q = \P2.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$11660 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [5], Q = \P2.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$11658 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [3], Q = \P2.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$11659 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [4], Q = \P2.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$11657 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [2], Q = \P2.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11661 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [6], Q = \P2.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$11662 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [7], Q = \P2.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$11664 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [9], Q = \P2.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$11663 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [8], Q = \P2.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$11740 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$11737 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$11734 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$11731 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$11728 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$11725 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$11722 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$11719 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11716 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$11713 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$11710 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$11707 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$11704 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$11701 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$11698 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$11695 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$11692 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$11689 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11686 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [31], Q = \P2.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$11670 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [15], Q = \P2.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$11739 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$11736 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$11733 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$11730 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$11727 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$11724 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$11721 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11718 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$11715 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$11712 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$11709 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$11706 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$11703 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$11700 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$11697 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$11694 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$11691 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$11688 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11685 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [30], Q = \P2.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$11669 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [14], Q = \P2.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$11738 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$11735 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$11732 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$11729 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$11726 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$11723 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$11720 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11717 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$11714 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$11711 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$11708 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$11705 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$11702 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$11699 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$11696 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$11693 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$11690 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$11687 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11684 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [29], Q = \P2.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$11668 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [13], Q = \P2.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$11785 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6326 [2], Q = \P1.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11784 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6326 [1], Q = \P1.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11783 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6326 [0], Q = \P1.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11750 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [31], Q = \P2.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$11749 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$11748 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$11747 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$11746 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$11745 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$11744 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$11743 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$11742 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$11741 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$5527 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [31], Q = \P1.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$5524 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [28], Q = \P1.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$5521 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [25], Q = \P1.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$5518 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [22], Q = \P1.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$5515 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [19], Q = \P1.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$5512 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [16], Q = \P1.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$5509 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [13], Q = \P1.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$5506 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [10], Q = \P1.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$5503 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [7], Q = \P1.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$5500 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [4], Q = \P1.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$5497 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [1], Q = \P1.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$5494 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [30], Q = \P1.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$5491 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [27], Q = \P1.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$5488 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [24], Q = \P1.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$5485 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [21], Q = \P1.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$5482 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [18], Q = \P1.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$5479 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [15], Q = \P1.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$11676 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [21], Q = \P2.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$5526 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [30], Q = \P1.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$5523 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [27], Q = \P1.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$5520 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [24], Q = \P1.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$5517 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [21], Q = \P1.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$5514 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [18], Q = \P1.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$5511 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [15], Q = \P1.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$5508 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [12], Q = \P1.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$5505 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [9], Q = \P1.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$5502 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [6], Q = \P1.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$5499 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [3], Q = \P1.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$5496 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$5493 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [29], Q = \P1.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$5490 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [26], Q = \P1.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$5487 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [23], Q = \P1.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$5484 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [20], Q = \P1.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$5481 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [17], Q = \P1.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$5478 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [14], Q = \P1.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$11675 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [20], Q = \P2.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$5525 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [29], Q = \P1.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$5522 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [26], Q = \P1.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$5519 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [23], Q = \P1.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$5516 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [20], Q = \P1.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$5513 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [17], Q = \P1.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$5510 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [14], Q = \P1.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$5507 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [11], Q = \P1.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$5504 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [8], Q = \P1.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$5501 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [5], Q = \P1.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$5498 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [2], Q = \P1.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$5495 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [31], Q = \P1.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$5492 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [28], Q = \P1.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$5489 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [25], Q = \P1.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$5486 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [22], Q = \P1.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$5483 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [19], Q = \P1.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$5480 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [16], Q = \P1.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$5477 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [13], Q = \P1.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$11674 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [19], Q = \P2.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$18311 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [29], Q = \P3.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$18308 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [26], Q = \P3.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$18305 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [23], Q = \P3.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$18302 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [20], Q = \P3.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$18299 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [17], Q = \P3.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$18296 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [14], Q = \P3.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$18293 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [11], Q = \P3.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$18290 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [8], Q = \P3.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$18287 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [5], Q = \P3.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$18284 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [2], Q = \P3.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$18281 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [31], Q = \P3.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$18278 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [28], Q = \P3.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$18275 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [25], Q = \P3.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$18272 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [22], Q = \P3.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$18269 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [19], Q = \P3.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$18266 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [16], Q = \P3.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$18263 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [13], Q = \P3.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$18260 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [10], Q = \P3.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$18257 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [7], Q = \P3.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$11673 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [18], Q = \P2.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$18310 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [28], Q = \P3.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$18307 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [25], Q = \P3.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$18304 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [22], Q = \P3.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$18301 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [19], Q = \P3.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$18298 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [16], Q = \P3.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$18295 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [13], Q = \P3.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$18292 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [10], Q = \P3.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$18289 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [7], Q = \P3.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$18286 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [4], Q = \P3.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$18283 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [1], Q = \P3.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$18280 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [30], Q = \P3.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$18277 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [27], Q = \P3.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$18274 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [24], Q = \P3.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$18271 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [21], Q = \P3.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$18268 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [18], Q = \P3.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$18265 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [15], Q = \P3.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$18262 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [12], Q = \P3.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$18259 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [9], Q = \P3.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$18256 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [6], Q = \P3.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$11672 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [17], Q = \P2.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$18309 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [27], Q = \P3.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$18306 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [24], Q = \P3.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$18303 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [21], Q = \P3.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$18300 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [18], Q = \P3.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$18297 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [15], Q = \P3.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$18294 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [12], Q = \P3.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$18291 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [9], Q = \P3.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$18288 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [6], Q = \P3.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$18285 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [3], Q = \P3.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$18282 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [0], Q = \P3.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$18279 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [29], Q = \P3.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$18276 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [26], Q = \P3.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$18273 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [23], Q = \P3.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$18270 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [20], Q = \P3.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$18267 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [17], Q = \P3.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$18264 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [14], Q = \P3.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$18261 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [11], Q = \P3.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$18258 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [8], Q = \P3.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$18255 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [5], Q = \P3.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$11671 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13746 [16], Q = \P2.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$5456 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [24], Q = \P1.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$5455 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [23], Q = \P1.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$5454 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [22], Q = \P1.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$5453 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [21], Q = \P1.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$5452 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [20], Q = \P1.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$5451 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [19], Q = \P1.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$5450 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [18], Q = \P1.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$5449 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [17], Q = \P1.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$5448 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [16], Q = \P1.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$5447 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [15], Q = \P1.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$5446 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [14], Q = \P1.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$5445 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [13], Q = \P1.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$5444 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [12], Q = \P1.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$5443 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [11], Q = \P1.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$5442 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [10], Q = \P1.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$5441 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [9], Q = \P1.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$5440 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [8], Q = \P1.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$5439 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [7], Q = \P1.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$5438 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [6], Q = \P1.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$5437 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [5], Q = \P1.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$5436 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [4], Q = \P1.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$5435 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [3], Q = \P1.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$5434 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [2], Q = \P1.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$5433 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [1], Q = \P1.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$5432 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$6810 [0], Q = \P1.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$18317 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13262 [2], Q = \P2.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$18316 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13262 [1], Q = \P2.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$18315 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$13262 [0], Q = \P2.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$18313 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [31], Q = \P3.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$18312 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [30], Q = \P3.reg0 [30]).

yosys> opt_clean

3.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 2492 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~6486 debug messages>

3.23.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.23.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~30210 debug messages>
Removed a total of 10070 cells.

yosys> opt_dff

3.23.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 9684 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.23.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.23.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.23.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.23.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.24. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~1863 debug messages>

yosys> opt_merge

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.24.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$67715 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [30], Q = \P3.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$67630 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [31], Q = \P3.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$62683 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [1], Q = \P3.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$62513 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [7], Q = \P3.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$62343 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [13], Q = \P3.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$62173 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [19], Q = \P3.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$62003 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [25], Q = \P3.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$61663 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [10], Q = \P3.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$61493 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [16], Q = \P3.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$61323 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [22], Q = \P3.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$61153 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [28], Q = \P3.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$60983 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [2], Q = \P3.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$60813 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [8], Q = \P3.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$60643 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [14], Q = \P3.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$60473 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [20], Q = \P3.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$60303 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [26], Q = \P3.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$62598 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [4], Q = \P3.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$62428 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [10], Q = \P3.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$62258 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [16], Q = \P3.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$62088 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [22], Q = \P3.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$61918 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [28], Q = \P3.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$61748 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [7], Q = \P3.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$61578 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [13], Q = \P3.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$61408 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [19], Q = \P3.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$61238 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [25], Q = \P3.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$61068 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [31], Q = \P3.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$60898 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [5], Q = \P3.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$60728 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [11], Q = \P3.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$60558 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [17], Q = \P3.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$60388 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [23], Q = \P3.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$60218 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [29], Q = \P3.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$57681 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7778 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$65148 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [5], Q = \P3.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$65063 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [8], Q = \P3.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$64978 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [11], Q = \P3.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$64893 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [14], Q = \P3.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$64808 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [17], Q = \P3.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$64723 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [20], Q = \P3.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$64638 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [23], Q = \P3.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$64553 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [26], Q = \P3.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$64468 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [29], Q = \P3.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$64383 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [0], Q = \P3.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$64298 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [3], Q = \P3.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$64213 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [6], Q = \P3.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$64128 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [9], Q = \P3.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$64043 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [12], Q = \P3.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$63958 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [15], Q = \P3.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$63873 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [18], Q = \P3.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$63788 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [21], Q = \P3.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$63703 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [24], Q = \P3.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$63618 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21431 [27], Q = \P3.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$63448 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [6], Q = \P3.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$63363 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [9], Q = \P3.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$63278 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [12], Q = \P3.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$63193 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [15], Q = \P3.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$63108 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [18], Q = \P3.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$63023 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [21], Q = \P3.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$62938 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [24], Q = \P3.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$62853 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [27], Q = \P3.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$62768 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [30], Q = \P3.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$53438 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14230 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$48531 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14714 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$45125 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [1], Q = \P3.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$44463 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7294 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$41893 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [0], Q = \P3.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$41808 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [2], Q = \P3.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$41723 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [3], Q = \P3.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$41638 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20947 [4], Q = \P3.reg1 [4]).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 169 unused wires.
<suppressed ~1 debug messages>

3.24.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.24.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~279 debug messages>

yosys> opt_merge

3.24.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~762 debug messages>
Removed a total of 254 cells.

yosys> opt_dff

3.24.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 322 unused wires.
<suppressed ~1 debug messages>

3.24.10. Finished fast OPT passes.

yosys> memory_map

3.25. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.26.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10646 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$25865
        $auto$simplemap.cc:86:simplemap_bitop$26076

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16040 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16060
        $auto$simplemap.cc:86:simplemap_bitop$16061

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16041 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16058
        $auto$simplemap.cc:86:simplemap_bitop$16059

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16042 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16056
        $auto$simplemap.cc:86:simplemap_bitop$16057

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16043 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16054
        $auto$simplemap.cc:86:simplemap_bitop$16055

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16215 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$27256
        $auto$simplemap.cc:86:simplemap_bitop$27357

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22561 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22581
        $auto$simplemap.cc:86:simplemap_bitop$22582

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22562 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22579
        $auto$simplemap.cc:86:simplemap_bitop$22580

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22563 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22577
        $auto$simplemap.cc:86:simplemap_bitop$22578

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22564 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22575
        $auto$simplemap.cc:86:simplemap_bitop$22576

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$9206 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$9226
        $auto$simplemap.cc:86:simplemap_bitop$9227

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$9207 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$9224
        $auto$simplemap.cc:86:simplemap_bitop$9225

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$9208 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$9222
        $auto$simplemap.cc:86:simplemap_bitop$9223

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$9209 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$9220
        $auto$simplemap.cc:86:simplemap_bitop$9221


yosys> opt_dff

3.26.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~14 debug messages>

3.26.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce -full

3.26.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.26.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.26.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16047 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16058
        $auto$simplemap.cc:86:simplemap_bitop$16060

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16048 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16054
        $auto$simplemap.cc:86:simplemap_bitop$16056

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22568 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22579
        $auto$simplemap.cc:86:simplemap_bitop$22581

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22569 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22575
        $auto$simplemap.cc:86:simplemap_bitop$22577

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$9213 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$9224
        $auto$simplemap.cc:86:simplemap_bitop$9226

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$9214 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$9220
        $auto$simplemap.cc:86:simplemap_bitop$9222


yosys> opt_dff

3.26.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~6 debug messages>

3.26.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce -full

3.26.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.26.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.26.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16051 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16054
        $auto$simplemap.cc:86:simplemap_bitop$16058

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22572 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22575
        $auto$simplemap.cc:86:simplemap_bitop$22579

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$9217 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$9220
        $auto$simplemap.cc:86:simplemap_bitop$9224


yosys> opt_dff

3.26.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~3 debug messages>

3.26.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce -full

3.26.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.26.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.26.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr -full

3.26.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.26.34. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.27. Executing ABC pass (technology mapping using ABC).

3.27.1. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Extracted 14864 gates and 15525 wires to a netlist network with 659 inputs and 707 outputs.

3.27.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/b22/abc_tmp.scr 
ABC:   #Luts =  4622  Max Lvl =  23  Avg Lvl =  15.75  [   2.71 sec. at Pass 0]
ABC:   #Luts =  3007  Max Lvl =  40  Avg Lvl =  20.59  [ 187.46 sec. at Pass 1]
ABC:   #Luts =  2889  Max Lvl =  39  Avg Lvl =  18.89  [  18.75 sec. at Pass 2]
ABC:   #Luts =  2803  Max Lvl =  38  Avg Lvl =  18.87  [  35.19 sec. at Pass 3]
ABC:   #Luts =  2775  Max Lvl =  39  Avg Lvl =  18.72  [  15.39 sec. at Pass 4]
ABC:   #Luts =  2726  Max Lvl =  38  Avg Lvl =  18.65  [  44.09 sec. at Pass 5]
ABC:   #Luts =  2713  Max Lvl =  36  Avg Lvl =  17.90  [  24.16 sec. at Pass 6]
ABC:   #Luts =  2676  Max Lvl =  35  Avg Lvl =  18.33  [  42.61 sec. at Pass 7]
ABC:   #Luts =  2657  Max Lvl =  37  Avg Lvl =  18.30  [  24.51 sec. at Pass 8]
ABC:   #Luts =  2657  Max Lvl =  37  Avg Lvl =  18.30  [  34.99 sec. at Pass 9]
ABC:   #Luts =  2642  Max Lvl =  39  Avg Lvl =  18.99  [  18.79 sec. at Pass 10]
ABC:   #Luts =  2626  Max Lvl =  38  Avg Lvl =  18.60  [  31.57 sec. at Pass 11]
ABC:   #Luts =  2621  Max Lvl =  38  Avg Lvl =  18.79  [  18.19 sec. at Pass 12]
ABC:   #Luts =  2616  Max Lvl =  38  Avg Lvl =  18.71  [  24.80 sec. at Pass 13]
ABC:   #Luts =  2601  Max Lvl =  39  Avg Lvl =  18.32  [  16.45 sec. at Pass 14]
ABC:   #Luts =  2601  Max Lvl =  39  Avg Lvl =  18.32  [  29.08 sec. at Pass 15]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.27.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2622
ABC RESULTS:        internal signals:    14159
ABC RESULTS:           input signals:      659
ABC RESULTS:          output signals:      707
Removing temp directory.

yosys> opt

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 4736 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.28.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.28.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.29. Printing statistics.

=== b22 ===

   Number of wires:               2620
   Number of wire bits:           4020
   Number of public wires:          64
   Number of public wire bits:    1012
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3261
     $_DFFE_PP0N_                    3
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    117
     $lut                         2616
     $mux                           23


yosys> shregmap -minlen 8 -maxlen 20

3.30. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.31. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.32. Printing statistics.

=== b22 ===

   Number of wires:               2620
   Number of wire bits:           4020
   Number of public wires:          64
   Number of public wire bits:    1012
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3261
     $_DFFE_PP0N_                    3
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    117
     $lut                         2616
     $mux                           23


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.33. Executing TECHMAP pass (map to technology primitives).

3.33.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.33.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~4014 debug messages>

yosys> opt_expr -mux_undef

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~61759 debug messages>

yosys> simplemap

3.35. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~44244 debug messages>
Removed a total of 14748 cells.

yosys> opt_dff -nodffe -nosdff

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 8613 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~2543 debug messages>

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 664 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Extracted 13037 gates and 13694 wires to a netlist network with 655 inputs and 667 outputs.

3.41.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/b22/abc_tmp.scr 
ABC:   #Luts =  2618  Max Lvl =  39  Avg Lvl =  17.63  [   2.11 sec. at Pass 0]
ABC:   #Luts =  2618  Max Lvl =  39  Avg Lvl =  17.63  [  88.52 sec. at Pass 1]
ABC:   #Luts =  2594  Max Lvl =  38  Avg Lvl =  17.82  [  13.04 sec. at Pass 2]
ABC:   #Luts =  2594  Max Lvl =  38  Avg Lvl =  17.82  [  19.31 sec. at Pass 3]
ABC:   #Luts =  2590  Max Lvl =  37  Avg Lvl =  17.80  [   7.70 sec. at Pass 4]
ABC:   #Luts =  2586  Max Lvl =  37  Avg Lvl =  18.05  [  15.02 sec. at Pass 5]
ABC:   #Luts =  2562  Max Lvl =  37  Avg Lvl =  17.61  [   8.14 sec. at Pass 6]
ABC:   #Luts =  2562  Max Lvl =  37  Avg Lvl =  17.61  [  16.83 sec. at Pass 7]
ABC:   #Luts =  2552  Max Lvl =  39  Avg Lvl =  17.53  [  11.09 sec. at Pass 8]
ABC:   #Luts =  2547  Max Lvl =  39  Avg Lvl =  17.21  [  16.13 sec. at Pass 9]
ABC:   #Luts =  2525  Max Lvl =  38  Avg Lvl =  17.61  [   7.40 sec. at Pass 10]
ABC:   #Luts =  2518  Max Lvl =  37  Avg Lvl =  17.49  [  15.96 sec. at Pass 11]
ABC:   #Luts =  2503  Max Lvl =  38  Avg Lvl =  17.37  [  11.19 sec. at Pass 12]
ABC:   #Luts =  2503  Max Lvl =  38  Avg Lvl =  17.37  [  16.77 sec. at Pass 13]
ABC:   #Luts =  2503  Max Lvl =  38  Avg Lvl =  17.37  [   9.46 sec. at Pass 14]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2507
ABC RESULTS:        internal signals:    12372
ABC RESULTS:           input signals:      655
ABC RESULTS:          output signals:      667
Removing temp directory.

yosys> opt

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 9830 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \b22

3.43.2. Analyzing design hierarchy..
Top module:  \b22
Removed 0 unused modules.

yosys> stat

3.44. Printing statistics.

=== b22 ===

   Number of wires:               2491
   Number of wire bits:           3716
   Number of public wires:          64
   Number of public wire bits:    1012
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3129
     $lut                         2507
     dffsre                        622


yosys> opt_clean -purge

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 20 unused wires.
<suppressed ~20 debug messages>

yosys> write_verilog -noattr -nohex b22.verilog

3.46. Executing Verilog backend.

yosys> bmuxmap

3.46.1. Executing BMUXMAP pass.

yosys> demuxmap

3.46.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b22'.

End of script. Logfile hash: d774b4bc5b, CPU: user 107.55s system 0.52s, MEM: 191.34 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 98% 2x abc (5495 sec), 0% 55x opt_expr (36 sec), ...
real 1040.16
user 5262.30
sys 340.91
