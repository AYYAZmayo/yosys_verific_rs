
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k wb_conmax_defines.vh wb_conmax_arb.v wb_conmax_master_if.v wb_conmax_msel.v wb_conmax_pri_dec.v wb_conmax_pri_enc.v wb_conmax_rf.v wb_conmax_slave_if.v wb_conmax_top.v

yosys> verific -vlog2k wb_conmax_defines.vh wb_conmax_arb.v wb_conmax_master_if.v wb_conmax_msel.v wb_conmax_pri_dec.v wb_conmax_pri_enc.v wb_conmax_rf.v wb_conmax_slave_if.v wb_conmax_top.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_arb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_master_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_msel.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_pri_dec.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_pri_enc.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_slave_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_top.v'

yosys> synth_rs -top wb_conmax_top -tech genesis -goal area -de -no_dsp -no_bram -verilog wb_conmax_top.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top wb_conmax_top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] wb_conmax_top.v:60: compiling module 'wb_conmax_top'
VERIFIC-INFO [VERI-1018] wb_conmax_master_if.v:60: compiling module 'wb_conmax_master_if(sw=4)'
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:501: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:502: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:505: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:506: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:509: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:510: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:513: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:514: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:517: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:518: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:521: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:522: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:525: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:526: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:529: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:530: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:533: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:534: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:537: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:538: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:541: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:542: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:545: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:546: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:549: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:550: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:553: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:554: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:557: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:558: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:561: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:562: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_slave_if.v:60: compiling module 'wb_conmax_slave_if(sw=4)'
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:252: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_arb.v:62: compiling module 'wb_conmax_arb'
VERIFIC-WARNING [VERI-2371] wb_conmax_arb.v:100: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_arb.v:101: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_msel.v:60: compiling module 'wb_conmax_msel(pri_sel=2'b10)'
VERIFIC-INFO [VERI-1018] wb_conmax_pri_enc.v:60: compiling module 'wb_conmax_pri_enc(pri_sel=2'b10)'
VERIFIC-INFO [VERI-1018] wb_conmax_pri_dec.v:60: compiling module 'wb_conmax_pri_dec(pri_sel=2'b10)'
VERIFIC-WARNING [VERI-2371] wb_conmax_msel.v:143: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_msel.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:364: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:367: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:370: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:373: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:376: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:379: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:382: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:385: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_rf.v:60: compiling module 'wb_conmax_rf(sw=4)'
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:180: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:183: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:189: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:192: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:194: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:202: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:209: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:212: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:219: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:224: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:237: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:239: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:242: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:244: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:247: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:249: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:259: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:271: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:272: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:273: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:274: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:275: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:276: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:277: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:278: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:279: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:280: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:281: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:282: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:283: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:284: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:286: delay control is not supported for synthesis
Importing module wb_conmax_top.
Importing module wb_conmax_master_if(sw=4).
Importing module wb_conmax_slave_if(sw=4).
Importing module wb_conmax_arb.
Importing module wb_conmax_msel(pri_sel=2'b10).
Importing module wb_conmax_pri_enc(pri_sel=2'b10).
Importing module wb_conmax_pri_dec(pri_sel=2'b10).
Importing module wb_conmax_rf(sw=4).

3.3.1. Analyzing design hierarchy..
Top module:  \wb_conmax_top
Used module:     \wb_conmax_rf(sw=4)
Used module:     \wb_conmax_slave_if(sw=4)
Used module:         \wb_conmax_msel(pri_sel=2'b10)
Used module:             \wb_conmax_arb
Used module:             \wb_conmax_pri_enc(pri_sel=2'b10)
Used module:                 \wb_conmax_pri_dec(pri_sel=2'b10)
Used module:     \wb_conmax_master_if(sw=4)

3.3.2. Analyzing design hierarchy..
Top module:  \wb_conmax_top
Used module:     \wb_conmax_rf(sw=4)
Used module:     \wb_conmax_slave_if(sw=4)
Used module:         \wb_conmax_msel(pri_sel=2'b10)
Used module:             \wb_conmax_arb
Used module:             \wb_conmax_pri_enc(pri_sel=2'b10)
Used module:                 \wb_conmax_pri_dec(pri_sel=2'b10)
Used module:     \wb_conmax_master_if(sw=4)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_rf(sw=4).
<suppressed ~2 debug messages>
Optimizing module wb_conmax_pri_dec(pri_sel=2'b10).
<suppressed ~4 debug messages>
Optimizing module wb_conmax_pri_enc(pri_sel=2'b10).
Optimizing module wb_conmax_msel(pri_sel=2'b10).
<suppressed ~9 debug messages>
Optimizing module wb_conmax_arb.
<suppressed ~1 debug messages>
Optimizing module wb_conmax_slave_if(sw=4).
<suppressed ~1 debug messages>
Optimizing module wb_conmax_master_if(sw=4).
<suppressed ~1 debug messages>
Optimizing module wb_conmax_top.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module wb_conmax_rf(sw=4).
Deleting now unused module wb_conmax_pri_dec(pri_sel=2'b10).
Deleting now unused module wb_conmax_pri_enc(pri_sel=2'b10).
Deleting now unused module wb_conmax_msel(pri_sel=2'b10).
Deleting now unused module wb_conmax_arb.
Deleting now unused module wb_conmax_slave_if(sw=4).
Deleting now unused module wb_conmax_master_if(sw=4).
<suppressed ~40 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~1280 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 2112 unused cells and 39243 unused wires.
<suppressed ~5288 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module wb_conmax_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~1152 debug messages>
Removed a total of 384 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~934 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\s9.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s9.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s9.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s9.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s9.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s8.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s7.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s6.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s5.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s4.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s3.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s2.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s15.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s14.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s13.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s12.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s11.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s10.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s1.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31218 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s0.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\rf.$verific$rf_dout_reg$wb_conmax_rf.v:287$31768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf9_reg$wb_conmax_rf.v:234$31741 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf8_reg$wb_conmax_rf.v:229$31737 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf7_reg$wb_conmax_rf.v:224$31733 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf6_reg$wb_conmax_rf.v:219$31729 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf5_reg$wb_conmax_rf.v:214$31725 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf4_reg$wb_conmax_rf.v:209$31721 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf3_reg$wb_conmax_rf.v:204$31717 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf2_reg$wb_conmax_rf.v:199$31713 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf1_reg$wb_conmax_rf.v:194$31709 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf15_reg$wb_conmax_rf.v:264$31765 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf14_reg$wb_conmax_rf.v:259$31761 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf13_reg$wb_conmax_rf.v:254$31757 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf12_reg$wb_conmax_rf.v:249$31753 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf11_reg$wb_conmax_rf.v:244$31749 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf10_reg$wb_conmax_rf.v:239$31745 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf0_reg$wb_conmax_rf.v:189$31705 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 384 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~934 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~934 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\s9.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s9.\msel.$verific$n29$31338, Q = \s9.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31785 ($sdff) from module wb_conmax_top (D = \s9.msel.pri_enc.pri_out1, Q = \s9.msel.pri_out).
Adding SRST signal on $flatten\s8.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s8.\msel.$verific$n29$31338, Q = \s8.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31787 ($sdff) from module wb_conmax_top (D = \s8.msel.pri_enc.pri_out1, Q = \s8.msel.pri_out).
Adding SRST signal on $flatten\s7.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s7.\msel.$verific$n29$31338, Q = \s7.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31789 ($sdff) from module wb_conmax_top (D = \s7.msel.pri_enc.pri_out1, Q = \s7.msel.pri_out).
Adding SRST signal on $flatten\s6.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s6.\msel.$verific$n29$31338, Q = \s6.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31791 ($sdff) from module wb_conmax_top (D = \s6.msel.pri_enc.pri_out1, Q = \s6.msel.pri_out).
Adding SRST signal on $flatten\s5.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s5.\msel.$verific$n29$31338, Q = \s5.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31793 ($sdff) from module wb_conmax_top (D = \s5.msel.pri_enc.pri_out1, Q = \s5.msel.pri_out).
Adding SRST signal on $flatten\s4.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s4.\msel.$verific$n29$31338, Q = \s4.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31795 ($sdff) from module wb_conmax_top (D = \s4.msel.pri_enc.pri_out1, Q = \s4.msel.pri_out).
Adding SRST signal on $flatten\s3.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s3.\msel.$verific$n29$31338, Q = \s3.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31797 ($sdff) from module wb_conmax_top (D = \s3.msel.pri_enc.pri_out1, Q = \s3.msel.pri_out).
Adding SRST signal on $flatten\s2.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s2.\msel.$verific$n29$31338, Q = \s2.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31799 ($sdff) from module wb_conmax_top (D = \s2.msel.pri_enc.pri_out1, Q = \s2.msel.pri_out).
Adding SRST signal on $flatten\s15.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s15.\msel.$verific$n29$31338, Q = \s15.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31801 ($sdff) from module wb_conmax_top (D = \s15.msel.pri_enc.pri_out1, Q = \s15.msel.pri_out).
Adding SRST signal on $flatten\s14.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s14.\msel.$verific$n29$31338, Q = \s14.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31803 ($sdff) from module wb_conmax_top (D = \s14.msel.pri_enc.pri_out1, Q = \s14.msel.pri_out).
Adding SRST signal on $flatten\s13.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s13.\msel.$verific$n29$31338, Q = \s13.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31805 ($sdff) from module wb_conmax_top (D = \s13.msel.pri_enc.pri_out1, Q = \s13.msel.pri_out).
Adding SRST signal on $flatten\s12.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s12.\msel.$verific$n29$31338, Q = \s12.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31807 ($sdff) from module wb_conmax_top (D = \s12.msel.pri_enc.pri_out1, Q = \s12.msel.pri_out).
Adding SRST signal on $flatten\s11.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s11.\msel.$verific$n29$31338, Q = \s11.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31809 ($sdff) from module wb_conmax_top (D = \s11.msel.pri_enc.pri_out1, Q = \s11.msel.pri_out).
Adding SRST signal on $flatten\s10.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s10.\msel.$verific$n29$31338, Q = \s10.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31811 ($sdff) from module wb_conmax_top (D = \s10.msel.pri_enc.pri_out1, Q = \s10.msel.pri_out).
Adding SRST signal on $flatten\s1.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s1.\msel.$verific$n29$31338, Q = \s1.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31813 ($sdff) from module wb_conmax_top (D = \s1.msel.pri_enc.pri_out1, Q = \s1.msel.pri_out).
Adding SRST signal on $flatten\s0.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31391 ($dff) from module wb_conmax_top (D = $flatten\s0.\msel.$verific$n29$31338, Q = \s0.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31815 ($sdff) from module wb_conmax_top (D = \s0.msel.pri_enc.pri_out1, Q = \s0.msel.pri_out).
Adding SRST signal on $flatten\rf.$verific$rf_dout_reg$wb_conmax_rf.v:287$31768 ($dff) from module wb_conmax_top (D = $flatten\rf.$verific$n1446$31681, Q = \rf.rf_dout, rval = 16'0000000000000000).
Adding EN signal on $flatten\rf.$verific$conf9_reg$wb_conmax_rf.v:234$31741 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf9).
Adding EN signal on $flatten\rf.$verific$conf8_reg$wb_conmax_rf.v:229$31737 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf8).
Adding EN signal on $flatten\rf.$verific$conf7_reg$wb_conmax_rf.v:224$31733 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf7).
Adding EN signal on $flatten\rf.$verific$conf6_reg$wb_conmax_rf.v:219$31729 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf6).
Adding EN signal on $flatten\rf.$verific$conf5_reg$wb_conmax_rf.v:214$31725 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf5).
Adding EN signal on $flatten\rf.$verific$conf4_reg$wb_conmax_rf.v:209$31721 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf4).
Adding EN signal on $flatten\rf.$verific$conf3_reg$wb_conmax_rf.v:204$31717 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf3).
Adding EN signal on $flatten\rf.$verific$conf2_reg$wb_conmax_rf.v:199$31713 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf2).
Adding EN signal on $flatten\rf.$verific$conf1_reg$wb_conmax_rf.v:194$31709 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf1).
Adding EN signal on $flatten\rf.$verific$conf15_reg$wb_conmax_rf.v:264$31765 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf15).
Adding EN signal on $flatten\rf.$verific$conf14_reg$wb_conmax_rf.v:259$31761 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf14).
Adding EN signal on $flatten\rf.$verific$conf13_reg$wb_conmax_rf.v:254$31757 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf13).
Adding EN signal on $flatten\rf.$verific$conf12_reg$wb_conmax_rf.v:249$31753 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf12).
Adding EN signal on $flatten\rf.$verific$conf11_reg$wb_conmax_rf.v:244$31749 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf11).
Adding EN signal on $flatten\rf.$verific$conf10_reg$wb_conmax_rf.v:239$31745 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf10).
Adding EN signal on $flatten\rf.$verific$conf0_reg$wb_conmax_rf.v:189$31705 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf0).
Adding EN signal on $flatten\m7.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1779$30487, Q = \m7.s9_cyc_o).
Adding EN signal on $flatten\m7.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1773$30484, Q = \m7.s8_cyc_o).
Adding EN signal on $flatten\m7.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1767$30481, Q = \m7.s7_cyc_o).
Adding EN signal on $flatten\m7.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1761$30478, Q = \m7.s6_cyc_o).
Adding EN signal on $flatten\m7.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1755$30475, Q = \m7.s5_cyc_o).
Adding EN signal on $flatten\m7.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1749$30472, Q = \m7.s4_cyc_o).
Adding EN signal on $flatten\m7.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1743$30469, Q = \m7.s3_cyc_o).
Adding EN signal on $flatten\m7.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1737$30466, Q = \m7.s2_cyc_o).
Adding EN signal on $flatten\m7.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1731$30463, Q = \m7.s1_cyc_o).
Adding EN signal on $flatten\m7.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1815$30505, Q = \m7.s15_cyc_o).
Adding EN signal on $flatten\m7.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1809$30502, Q = \m7.s14_cyc_o).
Adding EN signal on $flatten\m7.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1803$30499, Q = \m7.s13_cyc_o).
Adding EN signal on $flatten\m7.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1797$30496, Q = \m7.s12_cyc_o).
Adding EN signal on $flatten\m7.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1791$30493, Q = \m7.s11_cyc_o).
Adding EN signal on $flatten\m7.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1785$30490, Q = \m7.s10_cyc_o).
Adding EN signal on $flatten\m7.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1725$30460, Q = \m7.s0_cyc_o).
Adding EN signal on $flatten\m6.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1779$30487, Q = \m6.s9_cyc_o).
Adding EN signal on $flatten\m6.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1773$30484, Q = \m6.s8_cyc_o).
Adding EN signal on $flatten\m6.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1767$30481, Q = \m6.s7_cyc_o).
Adding EN signal on $flatten\m6.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1761$30478, Q = \m6.s6_cyc_o).
Adding EN signal on $flatten\m6.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1755$30475, Q = \m6.s5_cyc_o).
Adding EN signal on $flatten\m6.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1749$30472, Q = \m6.s4_cyc_o).
Adding EN signal on $flatten\m6.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1743$30469, Q = \m6.s3_cyc_o).
Adding EN signal on $flatten\m6.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1737$30466, Q = \m6.s2_cyc_o).
Adding EN signal on $flatten\m6.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1731$30463, Q = \m6.s1_cyc_o).
Adding EN signal on $flatten\m6.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1815$30505, Q = \m6.s15_cyc_o).
Adding EN signal on $flatten\m6.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1809$30502, Q = \m6.s14_cyc_o).
Adding EN signal on $flatten\m6.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1803$30499, Q = \m6.s13_cyc_o).
Adding EN signal on $flatten\m6.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1797$30496, Q = \m6.s12_cyc_o).
Adding EN signal on $flatten\m6.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1791$30493, Q = \m6.s11_cyc_o).
Adding EN signal on $flatten\m6.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1785$30490, Q = \m6.s10_cyc_o).
Adding EN signal on $flatten\m6.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1725$30460, Q = \m6.s0_cyc_o).
Adding EN signal on $flatten\m5.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1779$30487, Q = \m5.s9_cyc_o).
Adding EN signal on $flatten\m5.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1773$30484, Q = \m5.s8_cyc_o).
Adding EN signal on $flatten\m5.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1767$30481, Q = \m5.s7_cyc_o).
Adding EN signal on $flatten\m5.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1761$30478, Q = \m5.s6_cyc_o).
Adding EN signal on $flatten\m5.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1755$30475, Q = \m5.s5_cyc_o).
Adding EN signal on $flatten\m5.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1749$30472, Q = \m5.s4_cyc_o).
Adding EN signal on $flatten\m5.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1743$30469, Q = \m5.s3_cyc_o).
Adding EN signal on $flatten\m5.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1737$30466, Q = \m5.s2_cyc_o).
Adding EN signal on $flatten\m5.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1731$30463, Q = \m5.s1_cyc_o).
Adding EN signal on $flatten\m5.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1815$30505, Q = \m5.s15_cyc_o).
Adding EN signal on $flatten\m5.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1809$30502, Q = \m5.s14_cyc_o).
Adding EN signal on $flatten\m5.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1803$30499, Q = \m5.s13_cyc_o).
Adding EN signal on $flatten\m5.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1797$30496, Q = \m5.s12_cyc_o).
Adding EN signal on $flatten\m5.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1791$30493, Q = \m5.s11_cyc_o).
Adding EN signal on $flatten\m5.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1785$30490, Q = \m5.s10_cyc_o).
Adding EN signal on $flatten\m5.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1725$30460, Q = \m5.s0_cyc_o).
Adding EN signal on $flatten\m4.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1779$30487, Q = \m4.s9_cyc_o).
Adding EN signal on $flatten\m4.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1773$30484, Q = \m4.s8_cyc_o).
Adding EN signal on $flatten\m4.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1767$30481, Q = \m4.s7_cyc_o).
Adding EN signal on $flatten\m4.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1761$30478, Q = \m4.s6_cyc_o).
Adding EN signal on $flatten\m4.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1755$30475, Q = \m4.s5_cyc_o).
Adding EN signal on $flatten\m4.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1749$30472, Q = \m4.s4_cyc_o).
Adding EN signal on $flatten\m4.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1743$30469, Q = \m4.s3_cyc_o).
Adding EN signal on $flatten\m4.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1737$30466, Q = \m4.s2_cyc_o).
Adding EN signal on $flatten\m4.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1731$30463, Q = \m4.s1_cyc_o).
Adding EN signal on $flatten\m4.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1815$30505, Q = \m4.s15_cyc_o).
Adding EN signal on $flatten\m4.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1809$30502, Q = \m4.s14_cyc_o).
Adding EN signal on $flatten\m4.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1803$30499, Q = \m4.s13_cyc_o).
Adding EN signal on $flatten\m4.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1797$30496, Q = \m4.s12_cyc_o).
Adding EN signal on $flatten\m4.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1791$30493, Q = \m4.s11_cyc_o).
Adding EN signal on $flatten\m4.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1785$30490, Q = \m4.s10_cyc_o).
Adding EN signal on $flatten\m4.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1725$30460, Q = \m4.s0_cyc_o).
Adding EN signal on $flatten\m3.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1779$30487, Q = \m3.s9_cyc_o).
Adding EN signal on $flatten\m3.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1773$30484, Q = \m3.s8_cyc_o).
Adding EN signal on $flatten\m3.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1767$30481, Q = \m3.s7_cyc_o).
Adding EN signal on $flatten\m3.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1761$30478, Q = \m3.s6_cyc_o).
Adding EN signal on $flatten\m3.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1755$30475, Q = \m3.s5_cyc_o).
Adding EN signal on $flatten\m3.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1749$30472, Q = \m3.s4_cyc_o).
Adding EN signal on $flatten\m3.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1743$30469, Q = \m3.s3_cyc_o).
Adding EN signal on $flatten\m3.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1737$30466, Q = \m3.s2_cyc_o).
Adding EN signal on $flatten\m3.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1731$30463, Q = \m3.s1_cyc_o).
Adding EN signal on $flatten\m3.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1815$30505, Q = \m3.s15_cyc_o).
Adding EN signal on $flatten\m3.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1809$30502, Q = \m3.s14_cyc_o).
Adding EN signal on $flatten\m3.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1803$30499, Q = \m3.s13_cyc_o).
Adding EN signal on $flatten\m3.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1797$30496, Q = \m3.s12_cyc_o).
Adding EN signal on $flatten\m3.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1791$30493, Q = \m3.s11_cyc_o).
Adding EN signal on $flatten\m3.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1785$30490, Q = \m3.s10_cyc_o).
Adding EN signal on $flatten\m3.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1725$30460, Q = \m3.s0_cyc_o).
Adding EN signal on $flatten\m2.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1779$30487, Q = \m2.s9_cyc_o).
Adding EN signal on $flatten\m2.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1773$30484, Q = \m2.s8_cyc_o).
Adding EN signal on $flatten\m2.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1767$30481, Q = \m2.s7_cyc_o).
Adding EN signal on $flatten\m2.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1761$30478, Q = \m2.s6_cyc_o).
Adding EN signal on $flatten\m2.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1755$30475, Q = \m2.s5_cyc_o).
Adding EN signal on $flatten\m2.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1749$30472, Q = \m2.s4_cyc_o).
Adding EN signal on $flatten\m2.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1743$30469, Q = \m2.s3_cyc_o).
Adding EN signal on $flatten\m2.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1737$30466, Q = \m2.s2_cyc_o).
Adding EN signal on $flatten\m2.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1731$30463, Q = \m2.s1_cyc_o).
Adding EN signal on $flatten\m2.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1815$30505, Q = \m2.s15_cyc_o).
Adding EN signal on $flatten\m2.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1809$30502, Q = \m2.s14_cyc_o).
Adding EN signal on $flatten\m2.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1803$30499, Q = \m2.s13_cyc_o).
Adding EN signal on $flatten\m2.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1797$30496, Q = \m2.s12_cyc_o).
Adding EN signal on $flatten\m2.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1791$30493, Q = \m2.s11_cyc_o).
Adding EN signal on $flatten\m2.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1785$30490, Q = \m2.s10_cyc_o).
Adding EN signal on $flatten\m2.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1725$30460, Q = \m2.s0_cyc_o).
Adding EN signal on $flatten\m1.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1779$30487, Q = \m1.s9_cyc_o).
Adding EN signal on $flatten\m1.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1773$30484, Q = \m1.s8_cyc_o).
Adding EN signal on $flatten\m1.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1767$30481, Q = \m1.s7_cyc_o).
Adding EN signal on $flatten\m1.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1761$30478, Q = \m1.s6_cyc_o).
Adding EN signal on $flatten\m1.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1755$30475, Q = \m1.s5_cyc_o).
Adding EN signal on $flatten\m1.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1749$30472, Q = \m1.s4_cyc_o).
Adding EN signal on $flatten\m1.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1743$30469, Q = \m1.s3_cyc_o).
Adding EN signal on $flatten\m1.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1737$30466, Q = \m1.s2_cyc_o).
Adding EN signal on $flatten\m1.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1731$30463, Q = \m1.s1_cyc_o).
Adding EN signal on $flatten\m1.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1815$30505, Q = \m1.s15_cyc_o).
Adding EN signal on $flatten\m1.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1809$30502, Q = \m1.s14_cyc_o).
Adding EN signal on $flatten\m1.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1803$30499, Q = \m1.s13_cyc_o).
Adding EN signal on $flatten\m1.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1797$30496, Q = \m1.s12_cyc_o).
Adding EN signal on $flatten\m1.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1791$30493, Q = \m1.s11_cyc_o).
Adding EN signal on $flatten\m1.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1785$30490, Q = \m1.s10_cyc_o).
Adding EN signal on $flatten\m1.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1725$30460, Q = \m1.s0_cyc_o).
Adding EN signal on $flatten\m0.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1779$30487, Q = \m0.s9_cyc_o).
Adding EN signal on $flatten\m0.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1773$30484, Q = \m0.s8_cyc_o).
Adding EN signal on $flatten\m0.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1767$30481, Q = \m0.s7_cyc_o).
Adding EN signal on $flatten\m0.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1761$30478, Q = \m0.s6_cyc_o).
Adding EN signal on $flatten\m0.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1755$30475, Q = \m0.s5_cyc_o).
Adding EN signal on $flatten\m0.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1749$30472, Q = \m0.s4_cyc_o).
Adding EN signal on $flatten\m0.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1743$30469, Q = \m0.s3_cyc_o).
Adding EN signal on $flatten\m0.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1737$30466, Q = \m0.s2_cyc_o).
Adding EN signal on $flatten\m0.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1731$30463, Q = \m0.s1_cyc_o).
Adding EN signal on $flatten\m0.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1815$30505, Q = \m0.s15_cyc_o).
Adding EN signal on $flatten\m0.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1809$30502, Q = \m0.s14_cyc_o).
Adding EN signal on $flatten\m0.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1803$30499, Q = \m0.s13_cyc_o).
Adding EN signal on $flatten\m0.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1797$30496, Q = \m0.s12_cyc_o).
Adding EN signal on $flatten\m0.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1791$30493, Q = \m0.s11_cyc_o).
Adding EN signal on $flatten\m0.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1785$30490, Q = \m0.s10_cyc_o).
Adding EN signal on $flatten\m0.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1725$30460, Q = \m0.s0_cyc_o).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 177 unused cells and 177 unused wires.
<suppressed ~306 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~917 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s0.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s0.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s0.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s1.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s1.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s1.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s2.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s2.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s2.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s3.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s3.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s3.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s4.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s4.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s4.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s5.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s5.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s5.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s6.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s6.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s6.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s7.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s7.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s7.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s8.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s8.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s8.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s9.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s9.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s9.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s10.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s10.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s10.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s11.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s11.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s11.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s12.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s12.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s12.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s13.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s13.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s13.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s14.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s14.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s14.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_49$wb_conmax_msel.v:161$31402 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_52$wb_conmax_msel.v:162$31403 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_55$wb_conmax_msel.v:163$31404 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_58$wb_conmax_msel.v:164$31405 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_61$wb_conmax_msel.v:165$31406 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_64$wb_conmax_msel.v:166$31407 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_67$wb_conmax_msel.v:167$31408 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_70$wb_conmax_msel.v:168$31409 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s15.$verific$equal_111$wb_conmax_slave_if.v:420$31080 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s15.$verific$equal_108$wb_conmax_slave_if.v:419$31077 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s15.$verific$equal_105$wb_conmax_slave_if.v:418$31074 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_69$wb_conmax_rf.v:224$31730 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_62$wb_conmax_rf.v:219$31726 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_55$wb_conmax_rf.v:214$31722 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_48$wb_conmax_rf.v:209$31718 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_41$wb_conmax_rf.v:204$31714 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_34$wb_conmax_rf.v:199$31710 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_27$wb_conmax_rf.v:194$31706 ($eq).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module wb_conmax_top:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~917 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> techmap

3.22. Executing TECHMAP pass (map to technology primitives).

3.22.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.22.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $dff.
No more expansions possible.
<suppressed ~7080 debug messages>

yosys> opt

3.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~3200 debug messages>

yosys> opt_merge -nomux

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~3564 debug messages>
Removed a total of 1188 cells.

yosys> opt_muxtree

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 368 unused cells and 2526 unused wires.
<suppressed ~369 debug messages>

yosys> opt_expr

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.23.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$69536 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb3.next_state [2], Q = \s15.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$69535 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb3.next_state [1], Q = \s15.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$69534 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb3.next_state [0], Q = \s15.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$69317 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb2.next_state [2], Q = \s15.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$69316 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb2.next_state [1], Q = \s15.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$69315 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb2.next_state [0], Q = \s15.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$69098 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb1.next_state [2], Q = \s15.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$69097 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb1.next_state [1], Q = \s15.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$69096 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb1.next_state [0], Q = \s15.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$68879 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb0.next_state [2], Q = \s15.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$68878 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb0.next_state [1], Q = \s15.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$68877 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb0.next_state [0], Q = \s15.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$67562 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb3.next_state [2], Q = \s14.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$67561 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb3.next_state [1], Q = \s14.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$67560 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb3.next_state [0], Q = \s14.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$67343 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb2.next_state [2], Q = \s14.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$67342 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb2.next_state [1], Q = \s14.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$67341 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb2.next_state [0], Q = \s14.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$67124 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb1.next_state [2], Q = \s14.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$67123 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb1.next_state [1], Q = \s14.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$67122 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb1.next_state [0], Q = \s14.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$66905 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb0.next_state [2], Q = \s14.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$66904 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb0.next_state [1], Q = \s14.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$66903 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb0.next_state [0], Q = \s14.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$65588 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb3.next_state [2], Q = \s13.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$65587 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb3.next_state [1], Q = \s13.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$65586 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb3.next_state [0], Q = \s13.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$65369 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb2.next_state [2], Q = \s13.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$65368 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb2.next_state [1], Q = \s13.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$65367 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb2.next_state [0], Q = \s13.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$65150 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb1.next_state [2], Q = \s13.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$65149 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb1.next_state [1], Q = \s13.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$65148 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb1.next_state [0], Q = \s13.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$64931 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb0.next_state [2], Q = \s13.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$64930 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb0.next_state [1], Q = \s13.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$64929 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb0.next_state [0], Q = \s13.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$63614 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb3.next_state [2], Q = \s12.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$63613 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb3.next_state [1], Q = \s12.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$63612 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb3.next_state [0], Q = \s12.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$63395 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb2.next_state [2], Q = \s12.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$63394 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb2.next_state [1], Q = \s12.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$63393 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb2.next_state [0], Q = \s12.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$63176 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb1.next_state [2], Q = \s12.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$63175 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb1.next_state [1], Q = \s12.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$63174 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb1.next_state [0], Q = \s12.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$62957 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb0.next_state [2], Q = \s12.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$62956 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb0.next_state [1], Q = \s12.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$62955 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb0.next_state [0], Q = \s12.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$61640 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb3.next_state [2], Q = \s11.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$61639 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb3.next_state [1], Q = \s11.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$61638 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb3.next_state [0], Q = \s11.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$61421 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb2.next_state [2], Q = \s11.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$61420 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb2.next_state [1], Q = \s11.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$61419 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb2.next_state [0], Q = \s11.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$61202 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb1.next_state [2], Q = \s11.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$61201 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb1.next_state [1], Q = \s11.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$61200 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb1.next_state [0], Q = \s11.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$60983 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb0.next_state [2], Q = \s11.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$60982 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb0.next_state [1], Q = \s11.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$60981 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb0.next_state [0], Q = \s11.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59666 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb3.next_state [2], Q = \s10.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59665 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb3.next_state [1], Q = \s10.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59664 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb3.next_state [0], Q = \s10.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59447 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb2.next_state [2], Q = \s10.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59446 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb2.next_state [1], Q = \s10.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59445 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb2.next_state [0], Q = \s10.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59228 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb1.next_state [2], Q = \s10.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59227 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb1.next_state [1], Q = \s10.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59226 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb1.next_state [0], Q = \s10.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59009 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb0.next_state [2], Q = \s10.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59008 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb0.next_state [1], Q = \s10.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59007 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb0.next_state [0], Q = \s10.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57692 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb3.next_state [2], Q = \s9.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57691 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb3.next_state [1], Q = \s9.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57690 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb3.next_state [0], Q = \s9.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57473 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb2.next_state [2], Q = \s9.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57472 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb2.next_state [1], Q = \s9.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57471 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb2.next_state [0], Q = \s9.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57254 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb1.next_state [2], Q = \s9.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57253 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb1.next_state [1], Q = \s9.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57252 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb1.next_state [0], Q = \s9.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57035 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb0.next_state [2], Q = \s9.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57034 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb0.next_state [1], Q = \s9.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57033 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb0.next_state [0], Q = \s9.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55718 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb3.next_state [2], Q = \s8.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55717 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb3.next_state [1], Q = \s8.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55716 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb3.next_state [0], Q = \s8.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55499 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb2.next_state [2], Q = \s8.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55498 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb2.next_state [1], Q = \s8.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55497 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb2.next_state [0], Q = \s8.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55280 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb1.next_state [2], Q = \s8.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55279 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb1.next_state [1], Q = \s8.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55278 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb1.next_state [0], Q = \s8.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55061 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb0.next_state [2], Q = \s8.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55060 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb0.next_state [1], Q = \s8.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55059 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb0.next_state [0], Q = \s8.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53744 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb3.next_state [2], Q = \s7.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53743 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb3.next_state [1], Q = \s7.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53742 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb3.next_state [0], Q = \s7.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53525 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb2.next_state [2], Q = \s7.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53524 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb2.next_state [1], Q = \s7.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53523 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb2.next_state [0], Q = \s7.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53306 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb1.next_state [2], Q = \s7.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53305 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb1.next_state [1], Q = \s7.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53304 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb1.next_state [0], Q = \s7.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53087 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb0.next_state [2], Q = \s7.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53086 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb0.next_state [1], Q = \s7.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53085 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb0.next_state [0], Q = \s7.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51770 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb3.next_state [2], Q = \s6.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51769 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb3.next_state [1], Q = \s6.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51768 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb3.next_state [0], Q = \s6.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51551 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb2.next_state [2], Q = \s6.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51550 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb2.next_state [1], Q = \s6.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51549 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb2.next_state [0], Q = \s6.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51332 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb1.next_state [2], Q = \s6.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51331 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb1.next_state [1], Q = \s6.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51330 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb1.next_state [0], Q = \s6.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51113 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb0.next_state [2], Q = \s6.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51112 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb0.next_state [1], Q = \s6.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51111 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb0.next_state [0], Q = \s6.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49796 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb3.next_state [2], Q = \s5.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49795 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb3.next_state [1], Q = \s5.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49794 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb3.next_state [0], Q = \s5.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49577 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb2.next_state [2], Q = \s5.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49576 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb2.next_state [1], Q = \s5.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49575 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb2.next_state [0], Q = \s5.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49358 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb1.next_state [2], Q = \s5.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49357 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb1.next_state [1], Q = \s5.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49356 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb1.next_state [0], Q = \s5.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49139 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb0.next_state [2], Q = \s5.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49138 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb0.next_state [1], Q = \s5.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49137 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb0.next_state [0], Q = \s5.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47822 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb3.next_state [2], Q = \s4.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47821 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb3.next_state [1], Q = \s4.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47820 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb3.next_state [0], Q = \s4.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47603 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb2.next_state [2], Q = \s4.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47602 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb2.next_state [1], Q = \s4.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47601 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb2.next_state [0], Q = \s4.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47384 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb1.next_state [2], Q = \s4.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47383 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb1.next_state [1], Q = \s4.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47382 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb1.next_state [0], Q = \s4.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47165 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb0.next_state [2], Q = \s4.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47164 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb0.next_state [1], Q = \s4.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47163 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb0.next_state [0], Q = \s4.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45848 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb3.next_state [2], Q = \s3.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45847 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb3.next_state [1], Q = \s3.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45846 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb3.next_state [0], Q = \s3.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45629 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb2.next_state [2], Q = \s3.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45628 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb2.next_state [1], Q = \s3.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45627 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb2.next_state [0], Q = \s3.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45410 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb1.next_state [2], Q = \s3.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45409 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb1.next_state [1], Q = \s3.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45408 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb1.next_state [0], Q = \s3.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45191 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb0.next_state [2], Q = \s3.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45190 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb0.next_state [1], Q = \s3.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45189 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb0.next_state [0], Q = \s3.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43874 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb3.next_state [2], Q = \s2.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43873 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb3.next_state [1], Q = \s2.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43872 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb3.next_state [0], Q = \s2.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43655 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb2.next_state [2], Q = \s2.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43654 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb2.next_state [1], Q = \s2.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43653 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb2.next_state [0], Q = \s2.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43436 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb1.next_state [2], Q = \s2.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43435 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb1.next_state [1], Q = \s2.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43434 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb1.next_state [0], Q = \s2.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43217 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb0.next_state [2], Q = \s2.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43216 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb0.next_state [1], Q = \s2.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43215 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb0.next_state [0], Q = \s2.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41900 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb3.next_state [2], Q = \s1.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41899 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb3.next_state [1], Q = \s1.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41898 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb3.next_state [0], Q = \s1.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41681 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb2.next_state [2], Q = \s1.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41680 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb2.next_state [1], Q = \s1.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41679 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb2.next_state [0], Q = \s1.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41462 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb1.next_state [2], Q = \s1.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41461 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb1.next_state [1], Q = \s1.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41460 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb1.next_state [0], Q = \s1.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41243 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb0.next_state [2], Q = \s1.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41242 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb0.next_state [1], Q = \s1.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41241 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb0.next_state [0], Q = \s1.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39926 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb3.next_state [2], Q = \s0.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39925 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb3.next_state [1], Q = \s0.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39924 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb3.next_state [0], Q = \s0.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39707 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb2.next_state [2], Q = \s0.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39706 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb2.next_state [1], Q = \s0.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39705 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb2.next_state [0], Q = \s0.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39488 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb1.next_state [2], Q = \s0.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39487 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb1.next_state [1], Q = \s0.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39486 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb1.next_state [0], Q = \s0.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39269 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb0.next_state [2], Q = \s0.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39268 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb0.next_state [1], Q = \s0.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39267 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb0.next_state [0], Q = \s0.msel.arb0.state [0]).

yosys> opt_clean

3.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 3264 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~23040 debug messages>

3.23.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.23.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~75648 debug messages>
Removed a total of 25216 cells.

yosys> opt_dff

3.23.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 15361 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.23.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.23.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

3.23.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.23.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.24. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~8511 debug messages>

yosys> opt_merge

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~8640 debug messages>
Removed a total of 2880 cells.

yosys> opt_dff

3.24.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 1536 unused wires.
<suppressed ~1 debug messages>

3.24.5. Finished fast OPT passes.

yosys> memory_map

3.25. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_share

3.26.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr -full

3.26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.26.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.27. Executing ABC pass (technology mapping using ABC).

3.27.1. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Extracted 27927 gates and 29810 wires to a netlist network with 1882 inputs and 1891 outputs.

3.27.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/wb_conmax/abc_tmp.scr 
ABC:   #Luts =  8983  Max Lvl =   8  Avg Lvl =   3.76  [   5.03 sec. at Pass 0]
ABC:   #Luts =  7767  Max Lvl =   9  Avg Lvl =   4.00  [ 156.73 sec. at Pass 1]
ABC:   #Luts =  7711  Max Lvl =  10  Avg Lvl =   3.98  [  51.78 sec. at Pass 2]
ABC:   #Luts =  7708  Max Lvl =  10  Avg Lvl =   3.96  [  61.67 sec. at Pass 3]
ABC:   #Luts =  7688  Max Lvl =   9  Avg Lvl =   3.98  [  35.89 sec. at Pass 4]
ABC:   #Luts =  7660  Max Lvl =   9  Avg Lvl =   3.96  [  70.96 sec. at Pass 5]
ABC:   #Luts =  7640  Max Lvl =   9  Avg Lvl =   3.97  [  52.48 sec. at Pass 6]
ABC:   #Luts =  7634  Max Lvl =  10  Avg Lvl =   3.97  [  70.49 sec. at Pass 7]
ABC:   #Luts =  7620  Max Lvl =   9  Avg Lvl =   3.97  [  44.46 sec. at Pass 8]
ABC:   #Luts =  7620  Max Lvl =   9  Avg Lvl =   3.97  [  52.21 sec. at Pass 9]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.27.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     7635
ABC RESULTS:        internal signals:    26037
ABC RESULTS:           input signals:     1882
ABC RESULTS:          output signals:     1891
Removing temp directory.

yosys> opt

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 14678 unused wires.
<suppressed ~1729 debug messages>

yosys> opt_expr

3.28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.28.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

3.28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.28.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.29. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              10792
   Number of wire bits:          56447
   Number of public wires:        4798
   Number of public wire bits:   50453
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8405
     $_DFFE_PP0N_                  128
     $_DFFE_PP0P_                  448
     $_DFF_P_                      146
     $_SDFFE_PP0P_                  32
     $_SDFF_PN0_                    16
     $lut                         7635


yosys> shregmap -minlen 8 -maxlen 20

3.30. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.31. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.32. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              10872
   Number of wire bits:          56527
   Number of public wires:        4798
   Number of public wire bits:   50453
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8485
     $_DFFE_PP0N_                  128
     $_DFFE_PP0P_                  448
     $_DFF_P_                      194
     $_MUX_                         80
     $lut                         7635


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.33. Executing TECHMAP pass (map to technology primitives).

3.33.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.33.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~9237 debug messages>

yosys> opt_expr -mux_undef

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~222942 debug messages>

yosys> simplemap

3.35. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~211812 debug messages>
Removed a total of 70604 cells.

yosys> opt_dff -nodffe -nosdff

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 27168 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~5108 debug messages>

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 819 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Extracted 26908 gates and 28809 wires to a netlist network with 1899 inputs and 1891 outputs.

3.41.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/wb_conmax/abc_tmp.scr 
ABC:   #Luts =  7696  Max Lvl =  10  Avg Lvl =   3.98  [   3.77 sec. at Pass 0]
ABC:   #Luts =  7696  Max Lvl =  10  Avg Lvl =   3.98  [ 114.29 sec. at Pass 1]
ABC:   #Luts =  7665  Max Lvl =  11  Avg Lvl =   3.99  [  18.91 sec. at Pass 2]
ABC:   #Luts =  7665  Max Lvl =  11  Avg Lvl =   3.99  [  31.32 sec. at Pass 3]
ABC:   #Luts =  7665  Max Lvl =  11  Avg Lvl =   3.99  [  20.86 sec. at Pass 4]
ABC:   #Luts =  7665  Max Lvl =  11  Avg Lvl =   3.99  [  32.92 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     7681
ABC RESULTS:        internal signals:    25019
ABC RESULTS:           input signals:     1899
ABC RESULTS:          output signals:     1891
Removing temp directory.

yosys> opt

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 23394 unused wires.
<suppressed ~50 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \wb_conmax_top

3.43.2. Analyzing design hierarchy..
Top module:  \wb_conmax_top
Removed 0 unused modules.

yosys> stat

3.44. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              10822
   Number of wire bits:          56429
   Number of public wires:        4749
   Number of public wire bits:   50356
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8451
     $lut                         7681
     dff                           194
     dffsre                        576


yosys> opt_clean -purge

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 4072 unused wires.
<suppressed ~4072 debug messages>

yosys> write_verilog -noattr -nohex wb_conmax_top.verilog

3.46. Executing Verilog backend.

yosys> bmuxmap

3.46.1. Executing BMUXMAP pass.

yosys> demuxmap

3.46.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\wb_conmax_top'.

Warnings: 96 unique messages, 96 total
End of script. Logfile hash: 0a25868d31, CPU: user 172.09s system 1.47s, MEM: 623.99 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 95% 2x abc (3474 sec), 1% 29x opt_expr (67 sec), ...
real 1162.32
user 3390.61
sys 255.56
