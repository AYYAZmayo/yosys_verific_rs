
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b21.vhd

yosys> verific -vhdl b21.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b21.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b21.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b21.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:515: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b21.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:1026: analyzing entity 'b21'
VERIFIC-INFO [VHDL-1010] b21.vhd:1034: analyzing architecture 'behav'

yosys> synth_rs -top b21 -tech genesis -goal area -de -no_dsp -no_bram -verilog b21.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b21

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b21.vhd:1026: processing 'b21(BEHAV)'
VERIFIC-INFO [VHDL-1067] b21.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b21.vhd:515: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:992: 'others' clause is never selected
Importing module std_logic_arith.
Importing module standard.
Importing module b21.
Importing module b14(BEHAV).
Importing module TEXTIO.
Importing module std_logic_1164.
Importing module b14_1(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removing unused module `\std_logic_1164'.
Removing unused module `\TEXTIO'.
Removing unused module `\standard'.
Removing unused module `\std_logic_arith'.
Removed 4 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module b14_1(BEHAV).
Deleting now unused module b14(BEHAV).
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~13 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 14 unused cells and 347 unused wires.
<suppressed ~113 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b21...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b21.vhd:505$540.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b21.vhd:505$531.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b21.vhd:505$542.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b21.vhd:1015$1062.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b21.vhd:1015$1053.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b21.vhd:1015$1064.
Removed 6 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b21.vhd:490$493: { $flatten\P1.$verific$n2255$124 $auto$opt_reduce.cc:134:opt_pmux$1106 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b21.vhd:490$434: { $flatten\P1.$verific$n2256$125 $auto$opt_reduce.cc:134:opt_pmux$1108 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b21.vhd:490$511: { $flatten\P1.$verific$n2257$126 $auto$opt_reduce.cc:134:opt_pmux$1110 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b21.vhd:490$512: { $flatten\P1.$verific$n2258$127 $auto$opt_reduce.cc:134:opt_pmux$1112 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b21.vhd:1000$1013: { $flatten\P2.$verific$n2255$643 $auto$opt_reduce.cc:134:opt_pmux$1114 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b21.vhd:1000$954: { $flatten\P2.$verific$n2256$644 $auto$opt_reduce.cc:134:opt_pmux$1116 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b21.vhd:1000$1031: { $flatten\P2.$verific$n2257$645 $auto$opt_reduce.cc:134:opt_pmux$1118 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b21.vhd:1000$1032: { $flatten\P2.$verific$n2258$646 $auto$opt_reduce.cc:134:opt_pmux$1120 }
  Optimizing cells in module \b21.
Performed a total of 8 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b21.vhd:1019$1099 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b21.vhd:1019$1101 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1096 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1095 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1094 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1093 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b21.vhd:1019$1098 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1100 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b21.vhd:1019$1097 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b21.vhd:1019$1090 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b21.vhd:1019$1092 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b21.vhd:509$577 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b21.vhd:509$579 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b21.vhd:509$574 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b21.vhd:509$573 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b21.vhd:509$572 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b21.vhd:509$571 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b21.vhd:509$576 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b21.vhd:509$568 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b21.vhd:509$570 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b21.vhd:509$578 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b21.vhd:509$575 ($aldff) from module b21.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b21.P1.d.
Found FSM state register b21.P2.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b21'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b21.vhd:509$569
  root of input selection tree: $flatten\P1.$verific$n11472$374
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$220 [0]
  found ctrl input: $flatten\P1.$verific$n10346$191
  found ctrl input: $flatten\P1.$verific$n1405$118
  found ctrl input: $flatten\P1.$verific$n1440$119
  found ctrl input: $flatten\P1.$verific$n1474$120
  found ctrl input: $flatten\P1.$verific$n1475$121
  found ctrl input: $flatten\P1.$verific$n1476$122
  found ctrl input: $flatten\P1.$verific$n1477$123
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.B \P1.state $flatten\P1.$verific$n1405$118 $flatten\P1.$verific$n1440$119 $flatten\P1.$verific$n1474$120 $flatten\P1.$verific$n1475$121 $flatten\P1.$verific$n1476$122 $flatten\P1.$verific$n1477$123 $flatten\P1.$verific$n10346$191 $flatten\P1.$verific$n341$220 [0] }
  ctrl outputs: $flatten\P1.$verific$n11472$374
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P2.d' from module `\b21'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b21.vhd:1019$1091
  root of input selection tree: $flatten\P2.$verific$n11479$894
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$739 [0]
  found ctrl input: $flatten\P2.$verific$n10346$710
  found ctrl input: $flatten\P2.$verific$n1405$637
  found ctrl input: $flatten\P2.$verific$n1440$638
  found ctrl input: $flatten\P2.$verific$n1474$639
  found ctrl input: $flatten\P2.$verific$n1475$640
  found ctrl input: $flatten\P2.$verific$n1476$641
  found ctrl input: $flatten\P2.$verific$n1477$642
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.B \P2.state $flatten\P2.$verific$n1405$637 $flatten\P2.$verific$n1440$638 $flatten\P2.$verific$n1474$639 $flatten\P2.$verific$n1475$640 $flatten\P2.$verific$n1476$641 $flatten\P2.$verific$n1477$642 $flatten\P2.$verific$n10346$710 $flatten\P2.$verific$n341$739 [0] }
  ctrl outputs: $flatten\P2.$verific$n11479$894
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P2.d$1123' from module `\b21'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1121' from module `\b21'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1121' from module `\b21'.
Optimizing FSM `$fsm$\P2.d$1123' from module `\b21'.

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1121' from module `\b21' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> ---1
  00000000000000000000000000000010 -> --1-
  00000000000000000000000000000001 -> -1--
  00000000000000000000000000000011 -> 1---
Recoding FSM `$fsm$\P2.d$1123' from module `\b21' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> ---1
  00000000000000000000000000000010 -> --1-
  00000000000000000000000000000001 -> -1--
  00000000000000000000000000000011 -> 1---

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1121' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P1.d$1121 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       4

  Input signals:
    0: $flatten\P1.$verific$n341$220 [0]
    1: $flatten\P1.$verific$n10346$191
    2: $flatten\P1.$verific$n1477$123
    3: $flatten\P1.$verific$n1476$122
    4: $flatten\P1.$verific$n1475$121
    5: $flatten\P1.$verific$n1474$120
    6: $flatten\P1.$verific$n1440$119
    7: $flatten\P1.$verific$n1405$118
    8: \P1.state
    9: \P1.B

  Output signals:
    0: $flatten\P1.$verific$n11472$374 [0]
    1: $flatten\P1.$verific$n11472$374 [1]
    2: $flatten\P1.$verific$n11472$374 [2]
    3: $flatten\P1.$verific$n11472$374 [3]
    4: $flatten\P1.$verific$n11472$374 [4]
    5: $flatten\P1.$verific$n11472$374 [5]
    6: $flatten\P1.$verific$n11472$374 [6]
    7: $flatten\P1.$verific$n11472$374 [7]
    8: $flatten\P1.$verific$n11472$374 [8]
    9: $flatten\P1.$verific$n11472$374 [9]
   10: $flatten\P1.$verific$n11472$374 [10]
   11: $flatten\P1.$verific$n11472$374 [11]
   12: $flatten\P1.$verific$n11472$374 [12]
   13: $flatten\P1.$verific$n11472$374 [13]
   14: $flatten\P1.$verific$n11472$374 [14]
   15: $flatten\P1.$verific$n11472$374 [15]
   16: $flatten\P1.$verific$n11472$374 [16]
   17: $flatten\P1.$verific$n11472$374 [17]
   18: $flatten\P1.$verific$n11472$374 [18]
   19: $flatten\P1.$verific$n11472$374 [19]
   20: $flatten\P1.$verific$n11472$374 [20]
   21: $flatten\P1.$verific$n11472$374 [21]
   22: $flatten\P1.$verific$n11472$374 [22]
   23: $flatten\P1.$verific$n11472$374 [23]
   24: $flatten\P1.$verific$n11472$374 [24]
   25: $flatten\P1.$verific$n11472$374 [25]
   26: $flatten\P1.$verific$n11472$374 [26]
   27: $flatten\P1.$verific$n11472$374 [27]
   28: $flatten\P1.$verific$n11472$374 [28]
   29: $flatten\P1.$verific$n11472$374 [29]
   30: $flatten\P1.$verific$n11472$374 [30]
   31: $flatten\P1.$verific$n11472$374 [31]

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1123' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P2.d$1123 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       4

  Input signals:
    0: $flatten\P2.$verific$n341$739 [0]
    1: $flatten\P2.$verific$n10346$710
    2: $flatten\P2.$verific$n1477$642
    3: $flatten\P2.$verific$n1476$641
    4: $flatten\P2.$verific$n1475$640
    5: $flatten\P2.$verific$n1474$639
    6: $flatten\P2.$verific$n1440$638
    7: $flatten\P2.$verific$n1405$637
    8: \P2.state
    9: \P2.B

  Output signals:
    0: $flatten\P2.$verific$n11479$894 [0]
    1: $flatten\P2.$verific$n11479$894 [1]
    2: $flatten\P2.$verific$n11479$894 [2]
    3: $flatten\P2.$verific$n11479$894 [3]
    4: $flatten\P2.$verific$n11479$894 [4]
    5: $flatten\P2.$verific$n11479$894 [5]
    6: $flatten\P2.$verific$n11479$894 [6]
    7: $flatten\P2.$verific$n11479$894 [7]
    8: $flatten\P2.$verific$n11479$894 [8]
    9: $flatten\P2.$verific$n11479$894 [9]
   10: $flatten\P2.$verific$n11479$894 [10]
   11: $flatten\P2.$verific$n11479$894 [11]
   12: $flatten\P2.$verific$n11479$894 [12]
   13: $flatten\P2.$verific$n11479$894 [13]
   14: $flatten\P2.$verific$n11479$894 [14]
   15: $flatten\P2.$verific$n11479$894 [15]
   16: $flatten\P2.$verific$n11479$894 [16]
   17: $flatten\P2.$verific$n11479$894 [17]
   18: $flatten\P2.$verific$n11479$894 [18]
   19: $flatten\P2.$verific$n11479$894 [19]
   20: $flatten\P2.$verific$n11479$894 [20]
   21: $flatten\P2.$verific$n11479$894 [21]
   22: $flatten\P2.$verific$n11479$894 [22]
   23: $flatten\P2.$verific$n11479$894 [23]
   24: $flatten\P2.$verific$n11479$894 [24]
   25: $flatten\P2.$verific$n11479$894 [25]
   26: $flatten\P2.$verific$n11479$894 [26]
   27: $flatten\P2.$verific$n11479$894 [27]
   28: $flatten\P2.$verific$n11479$894 [28]
   29: $flatten\P2.$verific$n11479$894 [29]
   30: $flatten\P2.$verific$n11479$894 [30]
   31: $flatten\P2.$verific$n11479$894 [31]

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1121' from module `\b21'.
Mapping FSM `$fsm$\P2.d$1123' from module `\b21'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~12 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1096 ($adff) from module b21 (D = $flatten\P2.$verific$n10312$863 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1096 ($adff) from module b21 (D = $flatten\P2.$verific$n11185$889 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1095 ($adff) from module b21 (D = $flatten\P2.$verific$n10279$862, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1094 ($adff) from module b21 (D = $flatten\P2.$verific$n10246$861, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1093 ($adff) from module b21 (D = $flatten\P2.$verific$n10213$860, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1100 ($adff) from module b21 (D = { $flatten\P2.$verific$add_570$b21.vhd:980$1022 $flatten\P2.$verific$n10521$872 [0] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$B_reg$b21.vhd:1019$1092 ($adff) from module b21 (D = $flatten\P2.$verific$n10986$718, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$574 ($adff) from module b21 (D = $flatten\P1.$verific$n10312$344 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$574 ($adff) from module b21 (D = $flatten\P1.$verific$n11178$369 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b21.vhd:509$573 ($adff) from module b21 (D = $flatten\P1.$verific$n10279$343, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b21.vhd:509$572 ($adff) from module b21 (D = $flatten\P1.$verific$n10246$342, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b21.vhd:509$571 ($adff) from module b21 (D = $flatten\P1.$verific$n10213$341, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b21.vhd:509$578 ($adff) from module b21 (D = { $flatten\P1.$verific$add_570$b21.vhd:470$502 $flatten\P1.$verific$n10514$352 [0] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$B_reg$b21.vhd:509$570 ($adff) from module b21 (D = $flatten\P1.$verific$n10979$199, Q = \P1.B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 28 unused cells and 140 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_16$b21.vhd:1080$69 ($lt).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_17$b21.vhd:1080$70 ($lt).
Removed top 1 bits (of 5) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1311 ($eq).
Removed top 1 bits (of 6) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1301 ($eq).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$496 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$496 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$496 ($sub).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$494 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$494 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$494 ($add).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_179$b21.vhd:250$488 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_178$b21.vhd:249$487 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_177$b21.vhd:248$486 ($eq).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$483 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$483 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$483 ($sub).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_145$b21.vhd:230$477 ($mux).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_143$b21.vhd:228$475 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_142$b21.vhd:227$474 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_141$b21.vhd:225$473 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_140$b21.vhd:224$472 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_138$b21.vhd:220$470 ($mux).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$452 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$452 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$452 ($sub).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P1.$verific$LessThan_83$b21.vhd:152$451 ($lt).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$439 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$439 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$439 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$437 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$437 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$437 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$429 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$429 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P1.$verific$add_39$b21.vhd:99$425 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$419 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$419 ($add).
Removed top 1 bits (of 6) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1515 ($eq).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$412 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$412 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$405 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$405 ($add).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$398 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$398 ($add).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$392 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$392 ($neg).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P1.$verific$LessThan_14$b21.vhd:87$391 ($lt).
Removed top 1 bits (of 5) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1525 ($eq).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1599 ($adffe).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1560 ($adffe).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_697$b21.vhd:1016$1074 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_678$b21.vhd:1015$1060 ($mux).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$1016 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$1016 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$1016 ($sub).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$1014 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$1014 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$1014 ($add).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_179$b21.vhd:760$1008 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_178$b21.vhd:759$1007 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_177$b21.vhd:758$1006 ($eq).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$1003 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$1003 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$1003 ($sub).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_145$b21.vhd:740$997 ($mux).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_143$b21.vhd:738$995 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_142$b21.vhd:737$994 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_141$b21.vhd:735$993 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_140$b21.vhd:734$992 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_138$b21.vhd:730$990 ($mux).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$972 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$972 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$972 ($sub).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P2.$verific$LessThan_83$b21.vhd:662$971 ($lt).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$959 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$959 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$959 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$957 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$957 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$957 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$949 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$949 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P2.$verific$add_39$b21.vhd:609$945 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$939 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$939 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$932 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$932 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$925 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$925 ($add).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$918 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$918 ($add).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$912 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$912 ($neg).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P2.$verific$LessThan_14$b21.vhd:597$911 ($lt).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_698$b21.vhd:506$552 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_679$b21.vhd:505$538 ($mux).
Removed top 20 bits (of 21) from wire b21.$flatten\P1.$verific$n10477$349.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n10755$360.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n11178$369.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n11472$374.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1407$242.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1441$243.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1478$244.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n184$211.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n1987$255.
Removed top 3 bits (of 5) from wire b21.$flatten\P1.$verific$n288$214.
Removed top 5 bits (of 8) from wire b21.$flatten\P1.$verific$n301$216.
Removed top 9 bits (of 13) from wire b21.$flatten\P1.$verific$n318$218.
Removed top 8 bits (of 9) from wire b21.$flatten\P1.$verific$n341$220.
Removed top 2 bits (of 32) from wire b21.$flatten\P1.$verific$n4241$288.
Removed top 1 bits (of 3) from wire b21.$flatten\P1.$verific$n436$224.
Removed top 3 bits (of 33) from wire b21.$flatten\P1.$verific$n5666$302.
Removed top 1 bits (of 32) from wire b21.$flatten\P1.$verific$n862$237.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n933$239.
Removed top 1 bits (of 21) from wire b21.$flatten\P2.$verific$n10477$870.
Removed top 3 bits (of 32) from wire b21.$flatten\P2.$verific$n10762$880.
Removed top 1 bits (of 20) from wire b21.$flatten\P2.$verific$n10964$883.
Removed top 4 bits (of 32) from wire b21.$flatten\P2.$verific$n11185$889.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n11479$894.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1407$761.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1441$762.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1478$763.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n1511$764.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n1544$765.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n1577$766.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n1610$767.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n1643$768.
Removed top 1 bits (of 20) from wire b21.$flatten\P2.$verific$n1787$770.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n1987$774.
Removed top 2 bits (of 32) from wire b21.$flatten\P2.$verific$n4241$807.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 16 unused cells and 114 unused wires.
<suppressed ~17 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b21:
  creating $macc model for $flatten\P1.$verific$add_21$b21.vhd:90$398 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b21.vhd:92$405 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b21.vhd:322$494 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b21.vhd:94$412 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b21.vhd:96$419 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b21.vhd:99$425 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b21.vhd:100$429 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b21.vhd:114$437 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b21.vhd:470$501 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b21.vhd:117$439 ($add).
  creating $macc model for $flatten\P1.$verific$add_662$b21.vhd:497$521 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b21.vhd:498$523 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b21.vhd:501$527 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b21.vhd:247$483 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b21.vhd:362$496 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b21.vhd:153$452 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$392 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b21.vhd:600$918 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b21.vhd:602$925 ($add).
  creating $macc model for $flatten\P2.$verific$add_283$b21.vhd:832$1014 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b21.vhd:604$932 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b21.vhd:606$939 ($add).
  creating $macc model for $flatten\P2.$verific$add_39$b21.vhd:609$945 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b21.vhd:610$949 ($add).
  creating $macc model for $flatten\P2.$verific$add_56$b21.vhd:624$957 ($add).
  creating $macc model for $flatten\P2.$verific$add_570$b21.vhd:980$1021 ($add).
  creating $macc model for $flatten\P2.$verific$add_61$b21.vhd:627$959 ($add).
  creating $macc model for $flatten\P2.$verific$add_662$b21.vhd:1007$1042 ($add).
  creating $macc model for $flatten\P2.$verific$add_664$b21.vhd:1008$1045 ($add).
  creating $macc model for $flatten\P2.$verific$sub_168$b21.vhd:757$1003 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_365$b21.vhd:872$1016 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_84$b21.vhd:663$972 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$912 ($neg).
  creating $macc model for $verific$add_24$b21.vhd:1081$74 ($add).
  creating $macc model for $verific$add_3$b21.vhd:1071$56 ($add).
  creating $macc model for $verific$add_30$b21.vhd:1085$76 ($add).
  creating $alu model for $macc $verific$add_30$b21.vhd:1085$76.
  creating $alu model for $macc $verific$add_3$b21.vhd:1071$56.
  creating $alu model for $macc $verific$add_24$b21.vhd:1081$74.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b21.vhd:598$912.
  creating $alu model for $macc $flatten\P2.$verific$sub_84$b21.vhd:663$972.
  creating $alu model for $macc $flatten\P2.$verific$sub_365$b21.vhd:872$1016.
  creating $alu model for $macc $flatten\P2.$verific$sub_168$b21.vhd:757$1003.
  creating $alu model for $macc $flatten\P2.$verific$add_664$b21.vhd:1008$1045.
  creating $alu model for $macc $flatten\P2.$verific$add_662$b21.vhd:1007$1042.
  creating $alu model for $macc $flatten\P2.$verific$add_61$b21.vhd:627$959.
  creating $alu model for $macc $flatten\P2.$verific$add_570$b21.vhd:980$1021.
  creating $alu model for $macc $flatten\P2.$verific$add_56$b21.vhd:624$957.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b21.vhd:610$949.
  creating $alu model for $macc $flatten\P2.$verific$add_39$b21.vhd:609$945.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b21.vhd:606$939.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b21.vhd:604$932.
  creating $alu model for $macc $flatten\P2.$verific$add_283$b21.vhd:832$1014.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b21.vhd:602$925.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b21.vhd:600$918.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b21.vhd:88$392.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b21.vhd:153$452.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b21.vhd:362$496.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b21.vhd:247$483.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b21.vhd:498$523.
  creating $alu model for $macc $flatten\P1.$verific$add_662$b21.vhd:497$521.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b21.vhd:117$439.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b21.vhd:470$501.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b21.vhd:114$437.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b21.vhd:100$429.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b21.vhd:99$425.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b21.vhd:96$419.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b21.vhd:94$412.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b21.vhd:322$494.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b21.vhd:92$405.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b21.vhd:90$398.
  creating $macc cell for $flatten\P1.$verific$mult_667$b21.vhd:501$527: $auto$alumacc.cc:365:replace_macc$1731
  creating $alu model for $flatten\P1.$verific$LessThan_14$b21.vhd:87$391 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b21.vhd:122$445 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b21.vhd:142$449 ($lt): merged with $flatten\P1.$verific$LessThan_68$b21.vhd:122$445.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b21.vhd:152$451 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b21.vhd:155$456 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b21.vhd:597$911 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_68$b21.vhd:632$965 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_78$b21.vhd:652$969 ($lt): merged with $flatten\P2.$verific$LessThan_68$b21.vhd:632$965.
  creating $alu model for $flatten\P2.$verific$LessThan_83$b21.vhd:662$971 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_87$b21.vhd:665$976 ($lt): new $alu
  creating $alu model for $verific$LessThan_11$b21.vhd:1079$64 ($lt): new $alu
  creating $alu model for $verific$LessThan_12$b21.vhd:1079$65 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b21.vhd:1080$69 ($lt): new $alu
  creating $alu model for $verific$LessThan_17$b21.vhd:1080$70 ($lt): new $alu
  creating $alu cell for $verific$LessThan_17$b21.vhd:1080$70: $auto$alumacc.cc:485:replace_alu$1744
  creating $alu cell for $verific$LessThan_16$b21.vhd:1080$69: $auto$alumacc.cc:485:replace_alu$1749
  creating $alu cell for $verific$LessThan_12$b21.vhd:1079$65: $auto$alumacc.cc:485:replace_alu$1754
  creating $alu cell for $verific$LessThan_11$b21.vhd:1079$64: $auto$alumacc.cc:485:replace_alu$1759
  creating $alu cell for $flatten\P2.$verific$LessThan_87$b21.vhd:665$976: $auto$alumacc.cc:485:replace_alu$1764
  creating $alu cell for $flatten\P2.$verific$LessThan_83$b21.vhd:662$971: $auto$alumacc.cc:485:replace_alu$1775
  creating $alu cell for $flatten\P2.$verific$LessThan_68$b21.vhd:632$965, $flatten\P2.$verific$LessThan_78$b21.vhd:652$969: $auto$alumacc.cc:485:replace_alu$1786
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b21.vhd:597$911: $auto$alumacc.cc:485:replace_alu$1797
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b21.vhd:155$456: $auto$alumacc.cc:485:replace_alu$1802
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b21.vhd:152$451: $auto$alumacc.cc:485:replace_alu$1813
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b21.vhd:122$445, $flatten\P1.$verific$LessThan_78$b21.vhd:142$449: $auto$alumacc.cc:485:replace_alu$1824
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b21.vhd:87$391: $auto$alumacc.cc:485:replace_alu$1835
  creating $alu cell for $flatten\P1.$verific$add_21$b21.vhd:90$398: $auto$alumacc.cc:485:replace_alu$1840
  creating $alu cell for $flatten\P1.$verific$add_26$b21.vhd:92$405: $auto$alumacc.cc:485:replace_alu$1843
  creating $alu cell for $flatten\P1.$verific$add_283$b21.vhd:322$494: $auto$alumacc.cc:485:replace_alu$1846
  creating $alu cell for $flatten\P1.$verific$add_31$b21.vhd:94$412: $auto$alumacc.cc:485:replace_alu$1849
  creating $alu cell for $flatten\P1.$verific$add_36$b21.vhd:96$419: $auto$alumacc.cc:485:replace_alu$1852
  creating $alu cell for $flatten\P1.$verific$add_39$b21.vhd:99$425: $auto$alumacc.cc:485:replace_alu$1855
  creating $alu cell for $flatten\P1.$verific$add_44$b21.vhd:100$429: $auto$alumacc.cc:485:replace_alu$1858
  creating $alu cell for $flatten\P1.$verific$add_570$b21.vhd:470$501: $auto$alumacc.cc:485:replace_alu$1861
  creating $alu cell for $flatten\P1.$verific$add_56$b21.vhd:114$437: $auto$alumacc.cc:485:replace_alu$1864
  creating $alu cell for $flatten\P1.$verific$add_662$b21.vhd:497$521: $auto$alumacc.cc:485:replace_alu$1867
  creating $alu cell for $flatten\P1.$verific$add_61$b21.vhd:117$439: $auto$alumacc.cc:485:replace_alu$1870
  creating $alu cell for $flatten\P1.$verific$add_664$b21.vhd:498$523: $auto$alumacc.cc:485:replace_alu$1873
  creating $alu cell for $flatten\P1.$verific$sub_168$b21.vhd:247$483: $auto$alumacc.cc:485:replace_alu$1876
  creating $alu cell for $flatten\P1.$verific$sub_365$b21.vhd:362$496: $auto$alumacc.cc:485:replace_alu$1879
  creating $alu cell for $flatten\P1.$verific$sub_84$b21.vhd:153$452: $auto$alumacc.cc:485:replace_alu$1882
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$392: $auto$alumacc.cc:485:replace_alu$1885
  creating $alu cell for $flatten\P2.$verific$add_21$b21.vhd:600$918: $auto$alumacc.cc:485:replace_alu$1888
  creating $alu cell for $flatten\P2.$verific$add_26$b21.vhd:602$925: $auto$alumacc.cc:485:replace_alu$1891
  creating $alu cell for $flatten\P2.$verific$add_283$b21.vhd:832$1014: $auto$alumacc.cc:485:replace_alu$1894
  creating $alu cell for $flatten\P2.$verific$add_31$b21.vhd:604$932: $auto$alumacc.cc:485:replace_alu$1897
  creating $alu cell for $flatten\P2.$verific$add_36$b21.vhd:606$939: $auto$alumacc.cc:485:replace_alu$1900
  creating $alu cell for $flatten\P2.$verific$add_39$b21.vhd:609$945: $auto$alumacc.cc:485:replace_alu$1903
  creating $alu cell for $flatten\P2.$verific$add_44$b21.vhd:610$949: $auto$alumacc.cc:485:replace_alu$1906
  creating $alu cell for $flatten\P2.$verific$add_570$b21.vhd:980$1021: $auto$alumacc.cc:485:replace_alu$1909
  creating $alu cell for $flatten\P2.$verific$add_56$b21.vhd:624$957: $auto$alumacc.cc:485:replace_alu$1912
  creating $alu cell for $flatten\P2.$verific$add_662$b21.vhd:1007$1042: $auto$alumacc.cc:485:replace_alu$1915
  creating $alu cell for $flatten\P2.$verific$add_61$b21.vhd:627$959: $auto$alumacc.cc:485:replace_alu$1918
  creating $alu cell for $flatten\P2.$verific$add_664$b21.vhd:1008$1045: $auto$alumacc.cc:485:replace_alu$1921
  creating $alu cell for $flatten\P2.$verific$sub_168$b21.vhd:757$1003: $auto$alumacc.cc:485:replace_alu$1924
  creating $alu cell for $flatten\P2.$verific$sub_365$b21.vhd:872$1016: $auto$alumacc.cc:485:replace_alu$1927
  creating $alu cell for $flatten\P2.$verific$sub_84$b21.vhd:663$972: $auto$alumacc.cc:485:replace_alu$1930
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$912: $auto$alumacc.cc:485:replace_alu$1933
  creating $alu cell for $verific$add_24$b21.vhd:1081$74: $auto$alumacc.cc:485:replace_alu$1936
  creating $alu cell for $verific$add_3$b21.vhd:1071$56: $auto$alumacc.cc:485:replace_alu$1939
  creating $alu cell for $verific$add_30$b21.vhd:1085$76: $auto$alumacc.cc:485:replace_alu$1942
  created 47 $alu and 1 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~10 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 4 unused cells and 24 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> techmap

3.22. Executing TECHMAP pass (map to technology primitives).

3.22.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.22.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:454:run$1633 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$403d07c18de10cda2ac652a859c56aea81aaf9b5\_90_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using template $paramod$a7926d38756e33b5022e02ebfd484599309272c7\_90_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~7226 debug messages>

yosys> opt

3.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~7724 debug messages>

yosys> opt_merge -nomux

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~11433 debug messages>
Removed a total of 3811 cells.

yosys> opt_muxtree

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$9842 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [19], Q = \P2.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$3724 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [19], Q = \P1.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$3702 ($_DFFE_PP0P_) from module b21 (D = $flatten\P1.$verific$n10979$199, Q = \P1.B).
Adding EN signal on $auto$ff.cc:262:slice$9820 ($_DFFE_PP0P_) from module b21 (D = $flatten\P2.$verific$n10986$718, Q = \P2.B).
Adding EN signal on $auto$ff.cc:262:slice$3705 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [0], Q = \P1.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$3706 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [1], Q = \P1.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$3707 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [2], Q = \P1.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$3708 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [3], Q = \P1.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$3709 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [4], Q = \P1.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$3710 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [5], Q = \P1.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$3711 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [6], Q = \P1.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$3712 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [7], Q = \P1.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$3713 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [8], Q = \P1.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$3714 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [9], Q = \P1.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$3715 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [10], Q = \P1.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$3716 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [11], Q = \P1.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$3717 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [12], Q = \P1.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$3718 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [13], Q = \P1.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$3719 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [14], Q = \P1.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$3720 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [15], Q = \P1.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$3721 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [16], Q = \P1.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$3722 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [17], Q = \P1.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$3723 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [18], Q = \P1.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$3855 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11301$372 [0], Q = \P1.IR [0]).
Adding EN signal on $auto$ff.cc:262:slice$9823 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [0], Q = \P2.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$9824 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [1], Q = \P2.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$9825 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [2], Q = \P2.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$9826 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [3], Q = \P2.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$9827 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [4], Q = \P2.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$9828 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [5], Q = \P2.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$9829 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [6], Q = \P2.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$9830 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [7], Q = \P2.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$9831 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [8], Q = \P2.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$9832 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [9], Q = \P2.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$9833 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [10], Q = \P2.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$9834 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [11], Q = \P2.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$9835 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [12], Q = \P2.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$9836 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [13], Q = \P2.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$9837 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [14], Q = \P2.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$9838 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [15], Q = \P2.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$9839 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [16], Q = \P2.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$9840 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [17], Q = \P2.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$9841 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [18], Q = \P2.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$9974 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11308$892 [0], Q = \P2.IR [0]).

yosys> opt_clean

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 1250 unused cells and 3536 unused wires.
<suppressed ~1251 debug messages>

yosys> opt_expr

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~664 debug messages>

3.23.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~1065 debug messages>
Removed a total of 355 cells.

yosys> opt_dff

3.23.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$13628 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11818 [2], Q = \P2.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$3760 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [3], Q = \P1.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$3762 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [5], Q = \P1.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$3761 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [4], Q = \P1.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$3763 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [6], Q = \P1.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9878 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9879 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$3767 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [10], Q = \P1.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$3766 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [9], Q = \P1.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$3765 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [8], Q = \P1.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$3764 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [7], Q = \P1.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$3768 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [11], Q = \P1.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$3733 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [8], Q = \P1.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$3730 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [5], Q = \P1.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$3727 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [2], Q = \P1.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$3732 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [7], Q = \P1.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$3729 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [4], Q = \P1.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$3726 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [1], Q = \P1.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$3731 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [6], Q = \P1.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$3728 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [3], Q = \P1.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$3725 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [0], Q = \P1.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$3820 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [31], Q = \P1.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$3819 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [30], Q = \P1.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$3818 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [29], Q = \P1.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$3817 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [28], Q = \P1.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$3816 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [27], Q = \P1.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$3815 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [26], Q = \P1.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$3814 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [25], Q = \P1.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$3813 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [24], Q = \P1.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$3812 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [23], Q = \P1.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$3811 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [22], Q = \P1.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$3810 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [21], Q = \P1.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$3809 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [20], Q = \P1.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$3808 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [19], Q = \P1.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$3807 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [18], Q = \P1.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$3806 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [17], Q = \P1.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$3805 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [16], Q = \P1.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$3804 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [15], Q = \P1.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$3803 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [14], Q = \P1.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$3802 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [13], Q = \P1.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$3801 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [12], Q = \P1.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$3800 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [11], Q = \P1.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$3799 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [10], Q = \P1.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$3798 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [9], Q = \P1.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$3797 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [8], Q = \P1.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$3796 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [7], Q = \P1.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$3795 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [6], Q = \P1.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$3794 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [5], Q = \P1.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$3793 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [4], Q = \P1.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$3792 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [3], Q = \P1.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$3791 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [2], Q = \P1.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$3790 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [1], Q = \P1.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$3789 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$3788 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [31], Q = \P1.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$3787 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [30], Q = \P1.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$3786 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [29], Q = \P1.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$3785 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [28], Q = \P1.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$3784 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [27], Q = \P1.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$3783 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [26], Q = \P1.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$3782 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [25], Q = \P1.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$3781 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [24], Q = \P1.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$3780 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [23], Q = \P1.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$3779 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [22], Q = \P1.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$3778 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [21], Q = \P1.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$3777 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [20], Q = \P1.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$3776 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [19], Q = \P1.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$3775 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [18], Q = \P1.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$3774 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [17], Q = \P1.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$3773 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [16], Q = \P1.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$3772 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [15], Q = \P1.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$3759 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [2], Q = \P1.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$3758 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [1], Q = \P1.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$3757 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$3756 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [31], Q = \P1.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$3755 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [30], Q = \P1.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$3754 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [29], Q = \P1.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$3753 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [28], Q = \P1.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$3752 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [27], Q = \P1.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$3751 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [26], Q = \P1.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$3750 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [25], Q = \P1.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$3749 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [24], Q = \P1.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$3748 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [23], Q = \P1.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$3747 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [22], Q = \P1.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$3746 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [21], Q = \P1.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$3745 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [20], Q = \P1.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$3744 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [19], Q = \P1.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$3743 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [18], Q = \P1.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$3742 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [17], Q = \P1.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$3741 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [16], Q = \P1.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$3740 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [15], Q = \P1.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$3739 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [14], Q = \P1.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$3738 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [13], Q = \P1.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$3737 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [12], Q = \P1.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$3736 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [11], Q = \P1.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$3735 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [10], Q = \P1.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$3734 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5076 [9], Q = \P1.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$3771 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [14], Q = \P1.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$3770 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [13], Q = \P1.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$3769 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [12], Q = \P1.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$9851 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [8], Q = \P2.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9848 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [5], Q = \P2.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9845 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [2], Q = \P2.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$13627 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11818 [1], Q = \P2.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9850 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [7], Q = \P2.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9847 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [4], Q = \P2.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9844 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [1], Q = \P2.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13626 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11818 [0], Q = \P2.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9849 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [6], Q = \P2.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9846 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [3], Q = \P2.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9843 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [0], Q = \P2.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9973 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4592 [2], Q = \P1.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9972 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4592 [1], Q = \P1.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9971 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4592 [0], Q = \P1.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9938 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [31], Q = \P2.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$9937 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$9936 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$9935 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$9934 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$9933 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$9932 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$9931 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$9930 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$9929 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$9928 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$9927 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$9926 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$9925 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$9924 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$9923 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$9922 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$9921 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$9920 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$9919 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$9918 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$9917 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$9916 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$9915 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9914 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9913 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9912 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9911 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9910 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9909 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9908 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9907 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9906 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$9905 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$9904 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$9903 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$9902 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$9901 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$9900 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$9899 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$9898 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$9897 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$9896 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$9895 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$9894 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$9893 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$9892 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$9891 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$9890 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$9889 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$9888 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$9887 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$9886 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$9885 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$9884 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$9883 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9877 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9876 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9875 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9874 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [31], Q = \P2.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$9873 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [30], Q = \P2.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$9872 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [29], Q = \P2.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$9871 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [28], Q = \P2.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$9870 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [27], Q = \P2.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$9869 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [26], Q = \P2.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$9868 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [25], Q = \P2.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$9867 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [24], Q = \P2.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$9866 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [23], Q = \P2.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$9865 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [22], Q = \P2.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$9864 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [21], Q = \P2.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$9863 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [20], Q = \P2.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$9862 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [19], Q = \P2.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$9861 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [18], Q = \P2.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$9860 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [17], Q = \P2.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$9859 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [16], Q = \P2.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$9858 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [15], Q = \P2.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$9857 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [14], Q = \P2.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$9856 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [13], Q = \P2.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$9855 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [12], Q = \P2.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$9854 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [11], Q = \P2.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$9853 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [10], Q = \P2.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$9852 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12302 [9], Q = \P2.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$9882 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9881 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9880 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [5], Q = \P2.reg1 [5]).

yosys> opt_clean

3.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 1660 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4598 debug messages>

3.23.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.23.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~20883 debug messages>
Removed a total of 6961 cells.

yosys> opt_dff

3.23.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6647 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.23.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.23.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.23.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.23.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.24. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1264 debug messages>

yosys> opt_merge

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.24.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$43985 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12786 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$41318 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13270 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$32841 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6044 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$34808 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5560 [0], Q = \P1.reg1 [0]).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

3.24.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.24.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~18 debug messages>

yosys> opt_merge

3.24.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_dff

3.24.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

3.24.10. Finished fast OPT passes.

yosys> memory_map

3.25. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.26.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14550 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14570
        $auto$simplemap.cc:86:simplemap_bitop$14571

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14551 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14568
        $auto$simplemap.cc:86:simplemap_bitop$14569

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14552 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14566
        $auto$simplemap.cc:86:simplemap_bitop$14567

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14553 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14564
        $auto$simplemap.cc:86:simplemap_bitop$14565

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14715 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$20421
        $auto$simplemap.cc:86:simplemap_bitop$20527

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7362 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7382
        $auto$simplemap.cc:86:simplemap_bitop$7383

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7363 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7380
        $auto$simplemap.cc:86:simplemap_bitop$7381

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7364 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7378
        $auto$simplemap.cc:86:simplemap_bitop$7379

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7365 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7376
        $auto$simplemap.cc:86:simplemap_bitop$7377

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8892 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16499
        $auto$simplemap.cc:86:simplemap_bitop$16600


yosys> opt_dff

3.26.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~10 debug messages>

3.26.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce -full

3.26.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.26.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.26.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14557 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14568
        $auto$simplemap.cc:86:simplemap_bitop$14570

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14558 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14564
        $auto$simplemap.cc:86:simplemap_bitop$14566

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7369 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7380
        $auto$simplemap.cc:86:simplemap_bitop$7382

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7370 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7376
        $auto$simplemap.cc:86:simplemap_bitop$7378


yosys> opt_dff

3.26.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4 debug messages>

3.26.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce -full

3.26.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.26.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.26.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14561 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14564
        $auto$simplemap.cc:86:simplemap_bitop$14568

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7373 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7376
        $auto$simplemap.cc:86:simplemap_bitop$7380


yosys> opt_dff

3.26.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~2 debug messages>

3.26.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.26.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.26.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.26.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr -full

3.26.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.26.34. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.27. Executing ABC pass (technology mapping using ABC).

3.27.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 9562 gates and 10036 wires to a netlist network with 472 inputs and 504 outputs.

3.27.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/b21/abc_tmp.scr 
ABC:   #Luts =  2961  Max Lvl =  23  Avg Lvl =  15.18  [   1.73 sec. at Pass 0]
ABC:   #Luts =  1928  Max Lvl =  38  Avg Lvl =  18.35  [  72.11 sec. at Pass 1]
ABC:   #Luts =  1875  Max Lvl =  39  Avg Lvl =  18.13  [  12.85 sec. at Pass 2]
ABC:   #Luts =  1834  Max Lvl =  39  Avg Lvl =  18.10  [  22.90 sec. at Pass 3]
ABC:   #Luts =  1803  Max Lvl =  39  Avg Lvl =  18.08  [  12.19 sec. at Pass 4]
ABC:   #Luts =  1758  Max Lvl =  35  Avg Lvl =  18.08  [  26.69 sec. at Pass 5]
ABC:   #Luts =  1738  Max Lvl =  35  Avg Lvl =  18.20  [  17.35 sec. at Pass 6]
ABC:   #Luts =  1700  Max Lvl =  35  Avg Lvl =  17.64  [  30.14 sec. at Pass 7]
ABC:   #Luts =  1690  Max Lvl =  35  Avg Lvl =  17.50  [  16.56 sec. at Pass 8]
ABC:   #Luts =  1671  Max Lvl =  35  Avg Lvl =  17.95  [  21.60 sec. at Pass 9]
ABC:   #Luts =  1663  Max Lvl =  36  Avg Lvl =  18.14  [  12.77 sec. at Pass 10]
ABC:   #Luts =  1654  Max Lvl =  37  Avg Lvl =  17.96  [  19.58 sec. at Pass 11]
ABC:   #Luts =  1640  Max Lvl =  37  Avg Lvl =  17.76  [  10.99 sec. at Pass 12]
ABC:   #Luts =  1630  Max Lvl =  36  Avg Lvl =  18.02  [  20.33 sec. at Pass 13]
ABC:   #Luts =  1626  Max Lvl =  38  Avg Lvl =  17.92  [  14.44 sec. at Pass 14]
ABC:   #Luts =  1625  Max Lvl =  38  Avg Lvl =  18.00  [  26.94 sec. at Pass 15]
ABC:   #Luts =  1620  Max Lvl =  38  Avg Lvl =  17.88  [  15.31 sec. at Pass 16]
ABC:   #Luts =  1620  Max Lvl =  38  Avg Lvl =  17.88  [  24.64 sec. at Pass 17]
ABC:   #Luts =  1614  Max Lvl =  37  Avg Lvl =  17.69  [  12.15 sec. at Pass 18]
ABC:   #Luts =  1613  Max Lvl =  38  Avg Lvl =  18.09  [  25.72 sec. at Pass 19]
ABC:   #Luts =  1609  Max Lvl =  37  Avg Lvl =  17.62  [  14.60 sec. at Pass 20]
ABC:   #Luts =  1601  Max Lvl =  35  Avg Lvl =  17.75  [  23.67 sec. at Pass 21]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.27.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1617
ABC RESULTS:        internal signals:     9060
ABC RESULTS:           input signals:      472
ABC RESULTS:          output signals:      504
Removing temp directory.

yosys> opt

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 3098 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.28.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.28.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.29. Printing statistics.

=== b21 ===

   Number of wires:               1591
   Number of wire bits:           2603
   Number of public wires:          46
   Number of public wire bits:     736
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2063
     $_DFFE_PP0N_                    2
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     78
     $lut                         1611
     $mux                           16


yosys> shregmap -minlen 8 -maxlen 20

3.30. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.31. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.32. Printing statistics.

=== b21 ===

   Number of wires:               1591
   Number of wire bits:           2603
   Number of public wires:          46
   Number of public wire bits:     736
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2063
     $_DFFE_PP0N_                    2
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     78
     $lut                         1611
     $mux                           16


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.33. Executing TECHMAP pass (map to technology primitives).

3.33.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.33.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.33.3. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2629 debug messages>

yosys> opt_expr -mux_undef

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~36873 debug messages>

yosys> simplemap

3.35. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~28680 debug messages>
Removed a total of 9560 cells.

yosys> opt_dff -nodffe -nosdff

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 5666 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1495 debug messages>

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 506 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 8000 gates and 8471 wires to a netlist network with 469 inputs and 475 outputs.

3.41.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/b21/abc_tmp.scr 
ABC:   #Luts =  1600  Max Lvl =  35  Avg Lvl =  17.23  [   1.81 sec. at Pass 0]
ABC:   #Luts =  1600  Max Lvl =  35  Avg Lvl =  17.23  [  59.23 sec. at Pass 1]
ABC:   #Luts =  1588  Max Lvl =  36  Avg Lvl =  17.64  [  13.27 sec. at Pass 2]
ABC:   #Luts =  1582  Max Lvl =  35  Avg Lvl =  17.28  [  10.86 sec. at Pass 3]
ABC:   #Luts =  1575  Max Lvl =  37  Avg Lvl =  17.91  [  10.79 sec. at Pass 4]
ABC:   #Luts =  1575  Max Lvl =  37  Avg Lvl =  17.91  [  16.01 sec. at Pass 5]
ABC:   #Luts =  1568  Max Lvl =  36  Avg Lvl =  17.49  [  10.37 sec. at Pass 6]
ABC:   #Luts =  1555  Max Lvl =  35  Avg Lvl =  17.54  [  14.65 sec. at Pass 7]
ABC:   #Luts =  1555  Max Lvl =  35  Avg Lvl =  17.54  [  10.99 sec. at Pass 8]
ABC:   #Luts =  1555  Max Lvl =  35  Avg Lvl =  17.54  [  15.58 sec. at Pass 9]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1558
ABC RESULTS:        internal signals:     7527
ABC RESULTS:           input signals:      469
ABC RESULTS:          output signals:      475
Removing temp directory.

yosys> opt

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 5924 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \b21

3.43.2. Analyzing design hierarchy..
Top module:  \b21
Removed 0 unused modules.

yosys> stat

3.44. Printing statistics.

=== b21 ===

   Number of wires:               1524
   Number of wire bits:           2460
   Number of public wires:          46
   Number of public wire bits:     736
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1994
     $lut                         1558
     dffsre                        436


yosys> opt_clean -purge

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 14 unused wires.
<suppressed ~14 debug messages>

yosys> write_verilog -noattr -nohex b21.verilog

3.46. Executing Verilog backend.

yosys> bmuxmap

3.46.1. Executing BMUXMAP pass.

yosys> demuxmap

3.46.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b21'.

End of script. Logfile hash: 872c1506da, CPU: user 62.40s system 0.40s, MEM: 127.15 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 98% 2x abc (3659 sec), 0% 55x opt_expr (22 sec), ...
real 766.58
user 3487.69
sys 234.21
