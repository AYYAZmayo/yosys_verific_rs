
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b21.vhd

yosys> verific -vhdl b21.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b21.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b21.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b21.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:515: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b21.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:1026: analyzing entity 'b21'
VERIFIC-INFO [VHDL-1010] b21.vhd:1034: analyzing architecture 'behav'

yosys> synth_rs -top b21 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.36

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b21

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b21.vhd:1026: processing 'b21(BEHAV)'
VERIFIC-INFO [VHDL-1067] b21.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b21.vhd:515: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:992: 'others' clause is never selected
Importing module b21.
Importing module b14(BEHAV).
Importing module b14_1(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b21.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module b14_1(BEHAV).
Deleting now unused module b14(BEHAV).
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~13 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 14 unused cells and 347 unused wires.
<suppressed ~113 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b21...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b21.vhd:505$524.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b21.vhd:505$515.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b21.vhd:505$526.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b21.vhd:1015$1030.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b21.vhd:1015$1021.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b21.vhd:1015$1032.
Removed 6 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b21.vhd:490$477: { $flatten\P1.$verific$n2255$108 $auto$opt_reduce.cc:134:opt_pmux$1074 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b21.vhd:490$418: { $flatten\P1.$verific$n2256$109 $auto$opt_reduce.cc:134:opt_pmux$1076 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b21.vhd:490$495: { $flatten\P1.$verific$n2257$110 $auto$opt_reduce.cc:134:opt_pmux$1078 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b21.vhd:490$496: { $flatten\P1.$verific$n2258$111 $auto$opt_reduce.cc:134:opt_pmux$1080 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b21.vhd:1000$981: { $flatten\P2.$verific$n2255$611 $auto$opt_reduce.cc:134:opt_pmux$1082 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b21.vhd:1000$922: { $flatten\P2.$verific$n2256$612 $auto$opt_reduce.cc:134:opt_pmux$1084 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b21.vhd:1000$999: { $flatten\P2.$verific$n2257$613 $auto$opt_reduce.cc:134:opt_pmux$1086 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b21.vhd:1000$1000: { $flatten\P2.$verific$n2258$614 $auto$opt_reduce.cc:134:opt_pmux$1088 }
  Optimizing cells in module \b21.
Performed a total of 8 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b21.vhd:1019$1067 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b21.vhd:1019$1069 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1063 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1062 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1061 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b21.vhd:1019$1066 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1068 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b21.vhd:1019$1065 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b21.vhd:1019$1058 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b21.vhd:1019$1060 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b21.vhd:509$561 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b21.vhd:509$563 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b21.vhd:509$557 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b21.vhd:509$556 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b21.vhd:509$555 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b21.vhd:509$560 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b21.vhd:509$552 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b21.vhd:509$554 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b21.vhd:509$562 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b21.vhd:509$559 ($aldff) from module b21.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b21.P1.d.
Found FSM state register b21.P2.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b21'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b21.vhd:509$553
  root of input selection tree: $flatten\P1.$verific$n11472$358
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$204 [0]
  found ctrl input: $flatten\P1.$verific$n10346$175
  found ctrl input: $flatten\P1.$verific$n1405$102
  found ctrl input: $flatten\P1.$verific$n1440$103
  found ctrl input: $flatten\P1.$verific$n1474$104
  found ctrl input: $flatten\P1.$verific$n1475$105
  found ctrl input: $flatten\P1.$verific$n1476$106
  found ctrl input: $flatten\P1.$verific$n1477$107
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.B \P1.state $flatten\P1.$verific$n1405$102 $flatten\P1.$verific$n1440$103 $flatten\P1.$verific$n1474$104 $flatten\P1.$verific$n1475$105 $flatten\P1.$verific$n1476$106 $flatten\P1.$verific$n1477$107 $flatten\P1.$verific$n10346$175 $flatten\P1.$verific$n341$204 [0] }
  ctrl outputs: $flatten\P1.$verific$n11472$358
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P2.d' from module `\b21'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b21.vhd:1019$1059
  root of input selection tree: $flatten\P2.$verific$n11479$862
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$707 [0]
  found ctrl input: $flatten\P2.$verific$n10346$678
  found ctrl input: $flatten\P2.$verific$n1405$605
  found ctrl input: $flatten\P2.$verific$n1440$606
  found ctrl input: $flatten\P2.$verific$n1474$607
  found ctrl input: $flatten\P2.$verific$n1475$608
  found ctrl input: $flatten\P2.$verific$n1476$609
  found ctrl input: $flatten\P2.$verific$n1477$610
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.B \P2.state $flatten\P2.$verific$n1405$605 $flatten\P2.$verific$n1440$606 $flatten\P2.$verific$n1474$607 $flatten\P2.$verific$n1475$608 $flatten\P2.$verific$n1476$609 $flatten\P2.$verific$n1477$610 $flatten\P2.$verific$n10346$678 $flatten\P2.$verific$n341$707 [0] }
  ctrl outputs: $flatten\P2.$verific$n11479$862
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P2.d$1091' from module `\b21'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1089' from module `\b21'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1089' from module `\b21'.
Optimizing FSM `$fsm$\P2.d$1091' from module `\b21'.

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1089' from module `\b21' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P2.d$1091' from module `\b21' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1089' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P1.d$1089 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P1.$verific$n341$204 [0]
    1: $flatten\P1.$verific$n10346$175
    2: $flatten\P1.$verific$n1477$107
    3: $flatten\P1.$verific$n1476$106
    4: $flatten\P1.$verific$n1475$105
    5: $flatten\P1.$verific$n1474$104
    6: $flatten\P1.$verific$n1440$103
    7: $flatten\P1.$verific$n1405$102
    8: \P1.state
    9: \P1.B

  Output signals:
    0: $flatten\P1.$verific$n11472$358 [0]
    1: $flatten\P1.$verific$n11472$358 [1]
    2: $flatten\P1.$verific$n11472$358 [2]
    3: $flatten\P1.$verific$n11472$358 [3]
    4: $flatten\P1.$verific$n11472$358 [4]
    5: $flatten\P1.$verific$n11472$358 [5]
    6: $flatten\P1.$verific$n11472$358 [6]
    7: $flatten\P1.$verific$n11472$358 [7]
    8: $flatten\P1.$verific$n11472$358 [8]
    9: $flatten\P1.$verific$n11472$358 [9]
   10: $flatten\P1.$verific$n11472$358 [10]
   11: $flatten\P1.$verific$n11472$358 [11]
   12: $flatten\P1.$verific$n11472$358 [12]
   13: $flatten\P1.$verific$n11472$358 [13]
   14: $flatten\P1.$verific$n11472$358 [14]
   15: $flatten\P1.$verific$n11472$358 [15]
   16: $flatten\P1.$verific$n11472$358 [16]
   17: $flatten\P1.$verific$n11472$358 [17]
   18: $flatten\P1.$verific$n11472$358 [18]
   19: $flatten\P1.$verific$n11472$358 [19]
   20: $flatten\P1.$verific$n11472$358 [20]
   21: $flatten\P1.$verific$n11472$358 [21]
   22: $flatten\P1.$verific$n11472$358 [22]
   23: $flatten\P1.$verific$n11472$358 [23]
   24: $flatten\P1.$verific$n11472$358 [24]
   25: $flatten\P1.$verific$n11472$358 [25]
   26: $flatten\P1.$verific$n11472$358 [26]
   27: $flatten\P1.$verific$n11472$358 [27]
   28: $flatten\P1.$verific$n11472$358 [28]
   29: $flatten\P1.$verific$n11472$358 [29]
   30: $flatten\P1.$verific$n11472$358 [30]
   31: $flatten\P1.$verific$n11472$358 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1091' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P2.d$1091 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P2.$verific$n341$707 [0]
    1: $flatten\P2.$verific$n10346$678
    2: $flatten\P2.$verific$n1477$610
    3: $flatten\P2.$verific$n1476$609
    4: $flatten\P2.$verific$n1475$608
    5: $flatten\P2.$verific$n1474$607
    6: $flatten\P2.$verific$n1440$606
    7: $flatten\P2.$verific$n1405$605
    8: \P2.state
    9: \P2.B

  Output signals:
    0: $flatten\P2.$verific$n11479$862 [0]
    1: $flatten\P2.$verific$n11479$862 [1]
    2: $flatten\P2.$verific$n11479$862 [2]
    3: $flatten\P2.$verific$n11479$862 [3]
    4: $flatten\P2.$verific$n11479$862 [4]
    5: $flatten\P2.$verific$n11479$862 [5]
    6: $flatten\P2.$verific$n11479$862 [6]
    7: $flatten\P2.$verific$n11479$862 [7]
    8: $flatten\P2.$verific$n11479$862 [8]
    9: $flatten\P2.$verific$n11479$862 [9]
   10: $flatten\P2.$verific$n11479$862 [10]
   11: $flatten\P2.$verific$n11479$862 [11]
   12: $flatten\P2.$verific$n11479$862 [12]
   13: $flatten\P2.$verific$n11479$862 [13]
   14: $flatten\P2.$verific$n11479$862 [14]
   15: $flatten\P2.$verific$n11479$862 [15]
   16: $flatten\P2.$verific$n11479$862 [16]
   17: $flatten\P2.$verific$n11479$862 [17]
   18: $flatten\P2.$verific$n11479$862 [18]
   19: $flatten\P2.$verific$n11479$862 [19]
   20: $flatten\P2.$verific$n11479$862 [20]
   21: $flatten\P2.$verific$n11479$862 [21]
   22: $flatten\P2.$verific$n11479$862 [22]
   23: $flatten\P2.$verific$n11479$862 [23]
   24: $flatten\P2.$verific$n11479$862 [24]
   25: $flatten\P2.$verific$n11479$862 [25]
   26: $flatten\P2.$verific$n11479$862 [26]
   27: $flatten\P2.$verific$n11479$862 [27]
   28: $flatten\P2.$verific$n11479$862 [28]
   29: $flatten\P2.$verific$n11479$862 [29]
   30: $flatten\P2.$verific$n11479$862 [30]
   31: $flatten\P2.$verific$n11479$862 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1089' from module `\b21'.
Mapping FSM `$fsm$\P2.d$1091' from module `\b21'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~14 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($adff) from module b21 (D = $flatten\P2.$verific$n10312$831 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($adff) from module b21 (D = $flatten\P2.$verific$n11185$857 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1063 ($adff) from module b21 (D = $flatten\P2.$verific$n10279$830, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1062 ($adff) from module b21 (D = $flatten\P2.$verific$n10246$829, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1061 ($adff) from module b21 (D = $flatten\P2.$verific$n10213$828, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1068 ($adff) from module b21 (D = { $flatten\P2.$verific$add_570$b21.vhd:980$990 $flatten\P2.$verific$n10521$840 [0] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$B_reg$b21.vhd:1019$1060 ($adff) from module b21 (D = $flatten\P2.$verific$n10986$686, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($adff) from module b21 (D = $flatten\P1.$verific$n10312$328 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($adff) from module b21 (D = $flatten\P1.$verific$n11178$353 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b21.vhd:509$557 ($adff) from module b21 (D = $flatten\P1.$verific$n10279$327, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b21.vhd:509$556 ($adff) from module b21 (D = $flatten\P1.$verific$n10246$326, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b21.vhd:509$555 ($adff) from module b21 (D = $flatten\P1.$verific$n10213$325, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b21.vhd:509$562 ($adff) from module b21 (D = { $flatten\P1.$verific$add_570$b21.vhd:470$486 $flatten\P1.$verific$n10514$336 [0] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$B_reg$b21.vhd:509$554 ($adff) from module b21 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 48 unused cells and 152 unused wires.
<suppressed ~49 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_16$b21.vhd:1080$53 ($lt).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_17$b21.vhd:1080$54 ($lt).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1538 ($adffe).
Removed top 1 bits (of 2) from port B of cell b21.$auto$fsm_map.cc:215:map_fsm$1097 ($eq).
Removed top 1 bits (of 2) from port B of cell b21.$auto$fsm_map.cc:215:map_fsm$1316 ($eq).
Removed top 1 bits (of 5) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1284 ($eq).
Removed top 1 bits (of 6) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1274 ($eq).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_179$b21.vhd:250$472 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_178$b21.vhd:249$471 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_177$b21.vhd:248$470 ($eq).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_145$b21.vhd:230$461 ($mux).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_143$b21.vhd:228$459 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_142$b21.vhd:227$458 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_141$b21.vhd:225$457 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_140$b21.vhd:224$456 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_138$b21.vhd:220$454 ($mux).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P1.$verific$LessThan_83$b21.vhd:152$435 ($lt).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P1.$verific$add_39$b21.vhd:99$409 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P1.$verific$LessThan_14$b21.vhd:87$375 ($lt).
Removed top 1 bits (of 6) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1493 ($eq).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1577 ($adffe).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_697$b21.vhd:1016$1042 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_678$b21.vhd:1015$1028 ($mux).
Removed top 1 bits (of 5) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1503 ($eq).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_179$b21.vhd:760$976 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_178$b21.vhd:759$975 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_177$b21.vhd:758$974 ($eq).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_145$b21.vhd:740$965 ($mux).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_143$b21.vhd:738$963 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_142$b21.vhd:737$962 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_141$b21.vhd:735$961 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_140$b21.vhd:734$960 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_138$b21.vhd:730$958 ($mux).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P2.$verific$LessThan_83$b21.vhd:662$939 ($lt).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P2.$verific$add_39$b21.vhd:609$913 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P2.$verific$LessThan_14$b21.vhd:597$879 ($lt).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_698$b21.vhd:506$536 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_679$b21.vhd:505$522 ($mux).
Removed top 20 bits (of 21) from wire b21.$flatten\P1.$verific$n10477$333.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n10755$344.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n11178$353.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n11472$358.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1407$226.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1441$227.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1478$228.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n184$195.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n1987$239.
Removed top 3 bits (of 5) from wire b21.$flatten\P1.$verific$n288$198.
Removed top 5 bits (of 8) from wire b21.$flatten\P1.$verific$n301$200.
Removed top 9 bits (of 13) from wire b21.$flatten\P1.$verific$n318$202.
Removed top 8 bits (of 9) from wire b21.$flatten\P1.$verific$n341$204.
Removed top 2 bits (of 32) from wire b21.$flatten\P1.$verific$n4241$272.
Removed top 1 bits (of 3) from wire b21.$flatten\P1.$verific$n436$208.
Removed top 3 bits (of 33) from wire b21.$flatten\P1.$verific$n5666$286.
Removed top 1 bits (of 32) from wire b21.$flatten\P1.$verific$n862$221.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n933$223.
Removed top 1 bits (of 21) from wire b21.$flatten\P2.$verific$n10477$838.
Removed top 3 bits (of 32) from wire b21.$flatten\P2.$verific$n10762$848.
Removed top 3 bits (of 32) from wire b21.$flatten\P2.$verific$n11185$857.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n11479$862.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1407$729.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1441$730.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1478$731.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n184$698.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n1987$742.
Removed top 8 bits (of 32) from wire b21.$flatten\P2.$verific$n2260$744.
Removed top 8 bits (of 32) from wire b21.$flatten\P2.$verific$n2293$745.
Removed top 2 bits (of 32) from wire b21.$flatten\P2.$verific$n4241$775.
Removed top 1 bits (of 3) from wire b21.$flatten\P2.$verific$n436$711.
Removed top 13 bits (of 32) from wire b21.$flatten\P2.$verific$n4511$777.
Removed top 3 bits (of 33) from wire b21.$flatten\P2.$verific$n5666$789.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n862$724.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n933$726.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 20 unused cells and 121 unused wires.
<suppressed ~21 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b21:
  creating $macc model for $flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b21.vhd:99$409 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b21.vhd:470$485 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
  creating $macc model for $flatten\P1.$verific$add_662$b21.vhd:497$505 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b21.vhd:501$511 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
  creating $macc model for $flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
  creating $macc model for $flatten\P2.$verific$add_39$b21.vhd:609$913 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
  creating $macc model for $flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
  creating $macc model for $flatten\P2.$verific$add_570$b21.vhd:980$989 ($add).
  creating $macc model for $flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
  creating $macc model for $flatten\P2.$verific$add_662$b21.vhd:1007$1010 ($add).
  creating $macc model for $flatten\P2.$verific$add_664$b21.vhd:1008$1013 ($add).
  creating $macc model for $flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
  creating $macc model for $verific$add_24$b21.vhd:1081$58 ($add).
  creating $macc model for $verific$add_3$b21.vhd:1071$40 ($add).
  creating $macc model for $verific$add_30$b21.vhd:1085$60 ($add).
  creating $alu model for $macc $verific$add_30$b21.vhd:1085$60.
  creating $alu model for $macc $verific$add_3$b21.vhd:1071$40.
  creating $alu model for $macc $verific$add_24$b21.vhd:1081$58.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880.
  creating $alu model for $macc $flatten\P2.$verific$sub_84$b21.vhd:663$940.
  creating $alu model for $macc $flatten\P2.$verific$sub_365$b21.vhd:872$984.
  creating $alu model for $macc $flatten\P2.$verific$sub_168$b21.vhd:757$971.
  creating $alu model for $macc $flatten\P2.$verific$add_664$b21.vhd:1008$1013.
  creating $alu model for $macc $flatten\P2.$verific$add_662$b21.vhd:1007$1010.
  creating $alu model for $macc $flatten\P2.$verific$add_61$b21.vhd:627$927.
  creating $alu model for $macc $flatten\P2.$verific$add_570$b21.vhd:980$989.
  creating $alu model for $macc $flatten\P2.$verific$add_56$b21.vhd:624$925.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b21.vhd:610$917.
  creating $alu model for $macc $flatten\P2.$verific$add_39$b21.vhd:609$913.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b21.vhd:606$907.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b21.vhd:604$900.
  creating $alu model for $macc $flatten\P2.$verific$add_283$b21.vhd:832$982.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b21.vhd:602$893.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b21.vhd:600$886.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b21.vhd:153$436.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b21.vhd:362$480.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b21.vhd:247$467.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b21.vhd:498$507.
  creating $alu model for $macc $flatten\P1.$verific$add_662$b21.vhd:497$505.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b21.vhd:117$423.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b21.vhd:470$485.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b21.vhd:114$421.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b21.vhd:100$413.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b21.vhd:99$409.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b21.vhd:96$403.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b21.vhd:94$396.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b21.vhd:322$478.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b21.vhd:92$389.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b21.vhd:90$382.
  creating $macc cell for $flatten\P1.$verific$mult_667$b21.vhd:501$511: $auto$alumacc.cc:365:replace_macc$1734
  creating $alu model for $flatten\P1.$verific$LessThan_14$b21.vhd:87$375 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b21.vhd:122$429 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b21.vhd:142$433 ($lt): merged with $flatten\P1.$verific$LessThan_68$b21.vhd:122$429.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b21.vhd:152$435 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b21.vhd:155$440 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b21.vhd:597$879 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_68$b21.vhd:632$933 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_78$b21.vhd:652$937 ($lt): merged with $flatten\P2.$verific$LessThan_68$b21.vhd:632$933.
  creating $alu model for $flatten\P2.$verific$LessThan_83$b21.vhd:662$939 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_87$b21.vhd:665$944 ($lt): new $alu
  creating $alu model for $verific$LessThan_11$b21.vhd:1079$48 ($lt): new $alu
  creating $alu model for $verific$LessThan_12$b21.vhd:1079$49 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b21.vhd:1080$53 ($lt): new $alu
  creating $alu model for $verific$LessThan_17$b21.vhd:1080$54 ($lt): new $alu
  creating $alu cell for $verific$LessThan_17$b21.vhd:1080$54: $auto$alumacc.cc:485:replace_alu$1747
  creating $alu cell for $verific$LessThan_16$b21.vhd:1080$53: $auto$alumacc.cc:485:replace_alu$1752
  creating $alu cell for $verific$LessThan_12$b21.vhd:1079$49: $auto$alumacc.cc:485:replace_alu$1757
  creating $alu cell for $verific$LessThan_11$b21.vhd:1079$48: $auto$alumacc.cc:485:replace_alu$1762
  creating $alu cell for $flatten\P2.$verific$LessThan_87$b21.vhd:665$944: $auto$alumacc.cc:485:replace_alu$1767
  creating $alu cell for $flatten\P2.$verific$LessThan_83$b21.vhd:662$939: $auto$alumacc.cc:485:replace_alu$1772
  creating $alu cell for $flatten\P2.$verific$LessThan_68$b21.vhd:632$933, $flatten\P2.$verific$LessThan_78$b21.vhd:652$937: $auto$alumacc.cc:485:replace_alu$1783
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b21.vhd:597$879: $auto$alumacc.cc:485:replace_alu$1794
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b21.vhd:155$440: $auto$alumacc.cc:485:replace_alu$1799
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b21.vhd:152$435: $auto$alumacc.cc:485:replace_alu$1810
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b21.vhd:122$429, $flatten\P1.$verific$LessThan_78$b21.vhd:142$433: $auto$alumacc.cc:485:replace_alu$1821
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b21.vhd:87$375: $auto$alumacc.cc:485:replace_alu$1832
  creating $alu cell for $flatten\P1.$verific$add_21$b21.vhd:90$382: $auto$alumacc.cc:485:replace_alu$1837
  creating $alu cell for $flatten\P1.$verific$add_26$b21.vhd:92$389: $auto$alumacc.cc:485:replace_alu$1840
  creating $alu cell for $flatten\P1.$verific$add_283$b21.vhd:322$478: $auto$alumacc.cc:485:replace_alu$1843
  creating $alu cell for $flatten\P1.$verific$add_31$b21.vhd:94$396: $auto$alumacc.cc:485:replace_alu$1846
  creating $alu cell for $flatten\P1.$verific$add_36$b21.vhd:96$403: $auto$alumacc.cc:485:replace_alu$1849
  creating $alu cell for $flatten\P1.$verific$add_39$b21.vhd:99$409: $auto$alumacc.cc:485:replace_alu$1852
  creating $alu cell for $flatten\P1.$verific$add_44$b21.vhd:100$413: $auto$alumacc.cc:485:replace_alu$1855
  creating $alu cell for $flatten\P1.$verific$add_570$b21.vhd:470$485: $auto$alumacc.cc:485:replace_alu$1858
  creating $alu cell for $flatten\P1.$verific$add_56$b21.vhd:114$421: $auto$alumacc.cc:485:replace_alu$1861
  creating $alu cell for $flatten\P1.$verific$add_662$b21.vhd:497$505: $auto$alumacc.cc:485:replace_alu$1864
  creating $alu cell for $flatten\P1.$verific$add_61$b21.vhd:117$423: $auto$alumacc.cc:485:replace_alu$1867
  creating $alu cell for $flatten\P1.$verific$add_664$b21.vhd:498$507: $auto$alumacc.cc:485:replace_alu$1870
  creating $alu cell for $flatten\P1.$verific$sub_168$b21.vhd:247$467: $auto$alumacc.cc:485:replace_alu$1873
  creating $alu cell for $flatten\P1.$verific$sub_365$b21.vhd:362$480: $auto$alumacc.cc:485:replace_alu$1876
  creating $alu cell for $flatten\P1.$verific$sub_84$b21.vhd:153$436: $auto$alumacc.cc:485:replace_alu$1879
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376: $auto$alumacc.cc:485:replace_alu$1882
  creating $alu cell for $flatten\P2.$verific$add_21$b21.vhd:600$886: $auto$alumacc.cc:485:replace_alu$1885
  creating $alu cell for $flatten\P2.$verific$add_26$b21.vhd:602$893: $auto$alumacc.cc:485:replace_alu$1888
  creating $alu cell for $flatten\P2.$verific$add_283$b21.vhd:832$982: $auto$alumacc.cc:485:replace_alu$1891
  creating $alu cell for $flatten\P2.$verific$add_31$b21.vhd:604$900: $auto$alumacc.cc:485:replace_alu$1894
  creating $alu cell for $flatten\P2.$verific$add_36$b21.vhd:606$907: $auto$alumacc.cc:485:replace_alu$1897
  creating $alu cell for $flatten\P2.$verific$add_39$b21.vhd:609$913: $auto$alumacc.cc:485:replace_alu$1900
  creating $alu cell for $flatten\P2.$verific$add_44$b21.vhd:610$917: $auto$alumacc.cc:485:replace_alu$1903
  creating $alu cell for $flatten\P2.$verific$add_570$b21.vhd:980$989: $auto$alumacc.cc:485:replace_alu$1906
  creating $alu cell for $flatten\P2.$verific$add_56$b21.vhd:624$925: $auto$alumacc.cc:485:replace_alu$1909
  creating $alu cell for $flatten\P2.$verific$add_662$b21.vhd:1007$1010: $auto$alumacc.cc:485:replace_alu$1912
  creating $alu cell for $flatten\P2.$verific$add_61$b21.vhd:627$927: $auto$alumacc.cc:485:replace_alu$1915
  creating $alu cell for $flatten\P2.$verific$add_664$b21.vhd:1008$1013: $auto$alumacc.cc:485:replace_alu$1918
  creating $alu cell for $flatten\P2.$verific$sub_168$b21.vhd:757$971: $auto$alumacc.cc:485:replace_alu$1921
  creating $alu cell for $flatten\P2.$verific$sub_365$b21.vhd:872$984: $auto$alumacc.cc:485:replace_alu$1924
  creating $alu cell for $flatten\P2.$verific$sub_84$b21.vhd:663$940: $auto$alumacc.cc:485:replace_alu$1927
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880: $auto$alumacc.cc:485:replace_alu$1930
  creating $alu cell for $verific$add_24$b21.vhd:1081$58: $auto$alumacc.cc:485:replace_alu$1933
  creating $alu cell for $verific$add_3$b21.vhd:1071$40: $auto$alumacc.cc:485:replace_alu$1936
  creating $alu cell for $verific$add_30$b21.vhd:1085$60: $auto$alumacc.cc:485:replace_alu$1939
  created 47 $alu and 1 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~10 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 4 unused cells and 24 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> stat

3.22. Printing statistics.

=== b21 ===

   Number of wires:                542
   Number of wire bits:           9126
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                403
     $adff                          14
     $adffe                         14
     $alu                           47
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           74
     $ne                             2
     $not                           26
     $or                            24
     $reduce_and                    11
     $reduce_or                     34
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:454:run$1611 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$6bf3afcadde450e76c699a4da1838452ccdf24c7\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod$8027eda61d95ddd4d4dd7b5cb21f3830552ebe4e\_80_rs_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$9287_Y
    new assignment: { } = { }.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
Using template $paramod$172f2253883621b746ed3e405a5e271c8c312010\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
No more expansions possible.
<suppressed ~4323 debug messages>

yosys> stat

3.24. Printing statistics.

=== b21 ===

   Number of wires:               3436
   Number of wire bits:          57140
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              18845
     $_AND_                       1641
     $_DFFE_PP0P_                  316
     $_DFF_PP0_                    118
     $_MUX_                      11534
     $_NOT_                       1116
     $_OR_                        1532
     $_XOR_                       1952
     adder_carry                   636


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~7134 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~9339 debug messages>
Removed a total of 3113 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10430 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [19], Q = \P2.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4783 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [19], Q = \P1.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4761 ($_DFFE_PP0P_) from module b21 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).
Adding EN signal on $auto$ff.cc:262:slice$10408 ($_DFFE_PP0P_) from module b21 (D = $flatten\P2.$verific$n10986$686, Q = \P2.B).
Adding EN signal on $auto$ff.cc:262:slice$4764 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [0], Q = \P1.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$4765 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [1], Q = \P1.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$4766 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [2], Q = \P1.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$4767 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [3], Q = \P1.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$4768 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [4], Q = \P1.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$4769 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [5], Q = \P1.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$4770 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [6], Q = \P1.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$4771 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [7], Q = \P1.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$4772 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [8], Q = \P1.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$4773 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [9], Q = \P1.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$4774 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [10], Q = \P1.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$4775 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [11], Q = \P1.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$4776 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [12], Q = \P1.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$4777 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [13], Q = \P1.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$4778 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [14], Q = \P1.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$4779 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [15], Q = \P1.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$4780 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [16], Q = \P1.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$4781 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [17], Q = \P1.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$4782 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [18], Q = \P1.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$10411 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [0], Q = \P2.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$10412 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [1], Q = \P2.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$10413 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [2], Q = \P2.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$10414 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [3], Q = \P2.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$10415 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [4], Q = \P2.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$10416 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [5], Q = \P2.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$10417 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [6], Q = \P2.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$10418 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [7], Q = \P2.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$10419 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [8], Q = \P2.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$10420 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [9], Q = \P2.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$10421 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [10], Q = \P2.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$10422 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [11], Q = \P2.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$10423 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [12], Q = \P2.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$10424 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [13], Q = \P2.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$10425 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [14], Q = \P2.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$10426 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [15], Q = \P2.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$10427 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [16], Q = \P2.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$10428 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [17], Q = \P2.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$10429 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [18], Q = \P2.addr [18]).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 865 unused cells and 2449 unused wires.
<suppressed ~866 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~660 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~1059 debug messages>
Removed a total of 353 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10452 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [21], Q = \P2.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10451 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [20], Q = \P2.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10450 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [19], Q = \P2.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10449 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [18], Q = \P2.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10448 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [17], Q = \P2.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10447 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [16], Q = \P2.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10446 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [15], Q = \P2.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10445 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [14], Q = \P2.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10444 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [13], Q = \P2.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10443 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [12], Q = \P2.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10442 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [11], Q = \P2.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10441 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [10], Q = \P2.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10440 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [9], Q = \P2.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10439 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [8], Q = \P2.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10438 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [7], Q = \P2.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10437 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [6], Q = \P2.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10436 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [5], Q = \P2.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10435 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [4], Q = \P2.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10434 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [3], Q = \P2.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10433 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [2], Q = \P2.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10432 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [1], Q = \P2.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10431 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [0], Q = \P2.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14986 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12080 [2], Q = \P2.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14985 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12080 [1], Q = \P2.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14984 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12080 [0], Q = \P2.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10561 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5817 [2], Q = \P1.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10560 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5817 [1], Q = \P1.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10559 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5817 [0], Q = \P1.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10526 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [31], Q = \P2.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10525 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10524 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10523 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10522 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10521 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10520 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10519 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10518 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10517 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10516 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10515 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10514 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10513 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10512 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10511 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10510 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10509 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10508 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10507 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10506 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10505 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10504 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10503 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10502 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10501 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10500 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10499 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10498 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10497 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10496 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10495 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10494 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10493 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10492 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10491 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10490 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10489 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10488 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10487 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10486 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10485 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10484 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10483 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10482 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10481 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10480 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10479 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10478 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10477 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10476 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10475 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10474 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10473 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10472 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10471 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10470 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10469 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10468 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10467 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10466 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10465 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10464 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10463 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10462 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [31], Q = \P2.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10461 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [30], Q = \P2.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10460 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [29], Q = \P2.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10459 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [28], Q = \P2.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10458 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [27], Q = \P2.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10457 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [26], Q = \P2.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10456 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [25], Q = \P2.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10455 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [24], Q = \P2.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10454 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [23], Q = \P2.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10453 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12564 [22], Q = \P2.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4879 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [31], Q = \P1.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4878 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [30], Q = \P1.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4877 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [29], Q = \P1.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4876 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [28], Q = \P1.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4875 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [27], Q = \P1.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4874 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [26], Q = \P1.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4873 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [25], Q = \P1.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4872 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [24], Q = \P1.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4871 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [23], Q = \P1.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4870 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [22], Q = \P1.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4869 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [21], Q = \P1.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4868 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [20], Q = \P1.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4867 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [19], Q = \P1.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4866 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [18], Q = \P1.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4865 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [17], Q = \P1.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4864 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [16], Q = \P1.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4863 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [15], Q = \P1.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4862 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [14], Q = \P1.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4861 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [13], Q = \P1.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4860 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [12], Q = \P1.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4859 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [11], Q = \P1.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4858 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [10], Q = \P1.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4857 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [9], Q = \P1.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4856 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [8], Q = \P1.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4855 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [7], Q = \P1.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4854 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [6], Q = \P1.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4853 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [5], Q = \P1.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4852 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [4], Q = \P1.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4851 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [3], Q = \P1.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4850 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [2], Q = \P1.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4849 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [1], Q = \P1.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4848 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4847 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [31], Q = \P1.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4846 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [30], Q = \P1.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4845 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [29], Q = \P1.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4844 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [28], Q = \P1.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4843 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [27], Q = \P1.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4842 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [26], Q = \P1.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4841 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [25], Q = \P1.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4840 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [24], Q = \P1.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4839 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [23], Q = \P1.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4838 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [22], Q = \P1.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4837 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [21], Q = \P1.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4836 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [20], Q = \P1.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4835 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [19], Q = \P1.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4834 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [18], Q = \P1.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4833 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [17], Q = \P1.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4832 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [16], Q = \P1.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4831 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [15], Q = \P1.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4830 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [14], Q = \P1.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4829 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [13], Q = \P1.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4828 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [12], Q = \P1.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4827 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [11], Q = \P1.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4826 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [10], Q = \P1.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4825 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [9], Q = \P1.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4824 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [8], Q = \P1.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4823 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [7], Q = \P1.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4822 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [6], Q = \P1.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4821 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [5], Q = \P1.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4820 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [4], Q = \P1.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4819 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [3], Q = \P1.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4818 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [2], Q = \P1.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4817 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [1], Q = \P1.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4816 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4815 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [31], Q = \P1.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4814 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [30], Q = \P1.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4813 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [29], Q = \P1.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4812 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [28], Q = \P1.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4811 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [27], Q = \P1.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4810 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [26], Q = \P1.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4809 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [25], Q = \P1.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4808 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [24], Q = \P1.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4807 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [23], Q = \P1.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4806 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [22], Q = \P1.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4805 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [21], Q = \P1.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4804 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [20], Q = \P1.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4803 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [19], Q = \P1.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4802 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [18], Q = \P1.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4801 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [17], Q = \P1.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4800 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [16], Q = \P1.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4799 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [15], Q = \P1.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4798 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [14], Q = \P1.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4797 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [13], Q = \P1.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4796 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [12], Q = \P1.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4795 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [11], Q = \P1.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4794 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [10], Q = \P1.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4793 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [9], Q = \P1.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4792 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [8], Q = \P1.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4791 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [7], Q = \P1.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4790 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [6], Q = \P1.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4789 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [5], Q = \P1.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4788 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [4], Q = \P1.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4787 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [3], Q = \P1.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4786 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [2], Q = \P1.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4785 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [1], Q = \P1.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4784 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [0], Q = \P1.reg2 [0]).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 1655 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4598 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~20892 debug messages>
Removed a total of 6964 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6650 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.25.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1266 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$32031 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13048 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$28864 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13532 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$36048 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$39215 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [0], Q = \P1.reg1 [0]).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

3.26.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.26.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~18 debug messages>

yosys> opt_merge

3.26.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_dff

3.26.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

3.26.10. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14674 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14694
        $auto$simplemap.cc:86:simplemap_bitop$14695

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14675 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14692
        $auto$simplemap.cc:86:simplemap_bitop$14693

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14676 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14690
        $auto$simplemap.cc:86:simplemap_bitop$14691

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14677 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14688
        $auto$simplemap.cc:86:simplemap_bitop$14689

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8720 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8740
        $auto$simplemap.cc:86:simplemap_bitop$8741

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8721 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8738
        $auto$simplemap.cc:86:simplemap_bitop$8739

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8722 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8736
        $auto$simplemap.cc:86:simplemap_bitop$8737

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8723 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8734
        $auto$simplemap.cc:86:simplemap_bitop$8735


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~8 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14681 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14692
        $auto$simplemap.cc:86:simplemap_bitop$14694

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14682 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14688
        $auto$simplemap.cc:86:simplemap_bitop$14690

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8727 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8738
        $auto$simplemap.cc:86:simplemap_bitop$8740

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8728 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8734
        $auto$simplemap.cc:86:simplemap_bitop$8736


yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4 debug messages>

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14685 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14688
        $auto$simplemap.cc:86:simplemap_bitop$14692

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8731 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8734
        $auto$simplemap.cc:86:simplemap_bitop$8738


yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~2 debug messages>

3.28.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.28.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.28.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.28.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr -full

3.28.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.28.34. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Summary of detected clock domains:
  899 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  501 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22399, arst=\reset, srst={ }
  42 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46941, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46975, arst=\reset, srst={ }
  37 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46958, arst=\reset, srst={ }
  38 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46992, arst=\reset, srst={ }
  700 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$23561, arst=\reset, srst={ }
  552 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22281, arst=\reset, srst={ }
  720 cells in clk=\clock, en=\P1.state, arst=\reset, srst={ }
  167 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1602, arst=\reset, srst={ }
  195 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$22139, arst=\reset, srst={ }
  164 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$22157, arst=\reset, srst={ }
  722 cells in clk=\clock, en=\P2.state, arst=\reset, srst={ }
  299 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1563, arst=\reset, srst={ }
  43 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$41961, arst=\reset, srst={ }
  39 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25315, arst=\reset, srst={ }
  679 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$39357, arst=\reset, srst={ }
  32 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25757, arst=\reset, srst={ }
  83 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25618, arst=\reset, srst={ }
  699 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$36204, arst=\reset, srst={ }
  457 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$33037, arst=\reset, srst={ }
  599 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25853, arst=\reset, srst={ }
  66 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25397, arst=\reset, srst={ }
  559 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$29020, arst=\reset, srst={ }
  43 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25536, arst=\reset, srst={ }

3.29.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 829 gates and 1015 wires to a netlist network with 184 inputs and 178 outputs.

3.29.2.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       63
ABC RESULTS:            ANDNOT cells:       19
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:       76
ABC RESULTS:               MUX cells:      135
ABC RESULTS:              NAND cells:       51
ABC RESULTS:               NOR cells:       21
ABC RESULTS:               NOT cells:       76
ABC RESULTS:                OR cells:       21
ABC RESULTS:             ORNOT cells:       24
ABC RESULTS:              XNOR cells:        7
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      653
ABC RESULTS:           input signals:      184
ABC RESULTS:          output signals:      178
Removing temp directory.

3.29.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22399, asynchronously reset by \reset
Extracted 425 gates and 572 wires to a netlist network with 146 inputs and 104 outputs.

3.29.3.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       62
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:       27
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:       17
ABC RESULTS:               NOR cells:       17
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       16
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:              XNOR cells:       32
ABC RESULTS:               XOR cells:       28
ABC RESULTS:        internal signals:      322
ABC RESULTS:           input signals:      146
ABC RESULTS:          output signals:      104
Removing temp directory.

3.29.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46941, asynchronously reset by \reset
Extracted 38 gates and 72 wires to a netlist network with 33 inputs and 9 outputs.

3.29.4.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       13
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:       30
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46975, asynchronously reset by \reset
Extracted 29 gates and 57 wires to a netlist network with 26 inputs and 7 outputs.

3.29.5.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:       17
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46958, asynchronously reset by \reset
Extracted 35 gates and 65 wires to a netlist network with 28 inputs and 10 outputs.

3.29.6.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        7
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46992, asynchronously reset by \reset
Extracted 32 gates and 62 wires to a netlist network with 28 inputs and 11 outputs.

3.29.7.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        9
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:       15
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        6
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23561, asynchronously reset by \reset
Extracted 610 gates and 856 wires to a netlist network with 245 inputs and 163 outputs.

3.29.8.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      188
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               BUF cells:       18
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:      115
ABC RESULTS:              NAND cells:      362
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:       35
ABC RESULTS:                OR cells:       69
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:              XNOR cells:       29
ABC RESULTS:               XOR cells:       20
ABC RESULTS:        internal signals:      448
ABC RESULTS:           input signals:      245
ABC RESULTS:          output signals:      163
Removing temp directory.

3.29.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22281, asynchronously reset by \reset
Extracted 479 gates and 597 wires to a netlist network with 117 inputs and 77 outputs.

3.29.9.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       59
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:       14
ABC RESULTS:               NOR cells:       16
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:       20
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:       58
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      403
ABC RESULTS:           input signals:      117
ABC RESULTS:          output signals:       77
Removing temp directory.

3.29.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47046$lo02, asynchronously reset by \reset
Extracted 720 gates and 912 wires to a netlist network with 191 inputs and 45 outputs.

3.29.10.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.10.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      144
ABC RESULTS:            ANDNOT cells:       27
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:       26
ABC RESULTS:               MUX cells:      117
ABC RESULTS:              NAND cells:      376
ABC RESULTS:               NOR cells:       20
ABC RESULTS:               NOT cells:        7
ABC RESULTS:                OR cells:       66
ABC RESULTS:             ORNOT cells:       49
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       25
ABC RESULTS:        internal signals:      676
ABC RESULTS:           input signals:      191
ABC RESULTS:          output signals:       45
Removing temp directory.

3.29.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1602, asynchronously reset by \reset
Extracted 135 gates and 268 wires to a netlist network with 133 inputs and 126 outputs.

3.29.11.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.11.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       30
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       95
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       32
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:      133
ABC RESULTS:          output signals:      126
Removing temp directory.

3.29.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$22139, asynchronously reset by \reset
Extracted 195 gates and 301 wires to a netlist network with 106 inputs and 94 outputs.

3.29.12.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.12.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       48
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               BUF cells:       20
ABC RESULTS:               DFF cells:       20
ABC RESULTS:               MUX cells:       29
ABC RESULTS:              NAND cells:       58
ABC RESULTS:               NOR cells:       10
ABC RESULTS:               NOT cells:       23
ABC RESULTS:                OR cells:       28
ABC RESULTS:             ORNOT cells:       36
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       11
ABC RESULTS:        internal signals:      101
ABC RESULTS:           input signals:      106
ABC RESULTS:          output signals:       94
Removing temp directory.

3.29.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$22157, asynchronously reset by \reset
Extracted 144 gates and 222 wires to a netlist network with 78 inputs and 102 outputs.

3.29.13.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.13.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       16
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:               BUF cells:       36
ABC RESULTS:               DFF cells:       20
ABC RESULTS:               MUX cells:       23
ABC RESULTS:              NAND cells:       13
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:       22
ABC RESULTS:                OR cells:       17
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        9
ABC RESULTS:        internal signals:       42
ABC RESULTS:           input signals:       78
ABC RESULTS:          output signals:      102
Removing temp directory.

3.29.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47046$lo02, asynchronously reset by \reset
Extracted 720 gates and 928 wires to a netlist network with 207 inputs and 49 outputs.

3.29.14.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.14.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      157
ABC RESULTS:            ANDNOT cells:       29
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:       26
ABC RESULTS:               MUX cells:      162
ABC RESULTS:              NAND cells:      328
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:        7
ABC RESULTS:                OR cells:       42
ABC RESULTS:             ORNOT cells:       38
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       29
ABC RESULTS:        internal signals:      672
ABC RESULTS:           input signals:      207
ABC RESULTS:          output signals:       49
Removing temp directory.

3.29.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1563, asynchronously reset by \reset
Extracted 267 gates and 492 wires to a netlist network with 225 inputs and 97 outputs.

3.29.15.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.15.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       44
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       95
ABC RESULTS:              NAND cells:       39
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       21
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       32
ABC RESULTS:        internal signals:      170
ABC RESULTS:           input signals:      225
ABC RESULTS:          output signals:       97
Removing temp directory.

3.29.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$41961, asynchronously reset by \reset
Extracted 37 gates and 61 wires to a netlist network with 23 inputs and 19 outputs.

3.29.16.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.16.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        7
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25315, asynchronously reset by \reset
Extracted 33 gates and 59 wires to a netlist network with 25 inputs and 15 outputs.

3.29.17.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.17.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:       10
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$39357, asynchronously reset by \reset
Extracted 613 gates and 873 wires to a netlist network with 259 inputs and 147 outputs.

3.29.18.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.18.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      115
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:       17
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:      119
ABC RESULTS:              NAND cells:      426
ABC RESULTS:               NOR cells:       10
ABC RESULTS:               NOT cells:       25
ABC RESULTS:                OR cells:       41
ABC RESULTS:             ORNOT cells:       33
ABC RESULTS:              XNOR cells:       16
ABC RESULTS:               XOR cells:       22
ABC RESULTS:        internal signals:      467
ABC RESULTS:           input signals:      259
ABC RESULTS:          output signals:      147
Removing temp directory.

3.29.19. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25757, asynchronously reset by \reset
Extracted 30 gates and 58 wires to a netlist network with 27 inputs and 11 outputs.

3.29.19.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.19.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               NOR cells:        3
ABC RESULTS:                OR cells:        9
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       27
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.20. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25618, asynchronously reset by \reset
Extracted 78 gates and 130 wires to a netlist network with 51 inputs and 36 outputs.

3.29.20.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.20.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       13
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:              NAND cells:       32
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:        9
ABC RESULTS:                OR cells:       17
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:       43
ABC RESULTS:           input signals:       51
ABC RESULTS:          output signals:       36
Removing temp directory.

3.29.21. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$36204, asynchronously reset by \reset
Extracted 647 gates and 865 wires to a netlist network with 217 inputs and 154 outputs.

3.29.21.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.21.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      207
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:       22
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       55
ABC RESULTS:              NAND cells:      330
ABC RESULTS:               NOR cells:       35
ABC RESULTS:               NOT cells:       29
ABC RESULTS:                OR cells:       83
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:              XNOR cells:       26
ABC RESULTS:               XOR cells:       46
ABC RESULTS:        internal signals:      494
ABC RESULTS:           input signals:      217
ABC RESULTS:          output signals:      154
Removing temp directory.

3.29.22. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$33037, asynchronously reset by \reset
Extracted 457 gates and 645 wires to a netlist network with 187 inputs and 38 outputs.

3.29.22.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.22.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      152
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       75
ABC RESULTS:              NAND cells:      258
ABC RESULTS:               NOR cells:       34
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       75
ABC RESULTS:             ORNOT cells:       13
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:        internal signals:      420
ABC RESULTS:           input signals:      187
ABC RESULTS:          output signals:       38
Removing temp directory.

3.29.23. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25853, asynchronously reset by \reset
Extracted 573 gates and 810 wires to a netlist network with 236 inputs and 105 outputs.

3.29.23.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.23.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      144
ABC RESULTS:            ANDNOT cells:       69
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:      125
ABC RESULTS:              NAND cells:      235
ABC RESULTS:               NOR cells:       35
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       38
ABC RESULTS:             ORNOT cells:       32
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:               XOR cells:       32
ABC RESULTS:        internal signals:      469
ABC RESULTS:           input signals:      236
ABC RESULTS:          output signals:      105
Removing temp directory.

3.29.24. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25397, asynchronously reset by \reset
Extracted 64 gates and 106 wires to a netlist network with 41 inputs and 18 outputs.

3.29.24.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.24.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       16
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        9
ABC RESULTS:              NAND cells:       36
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       47
ABC RESULTS:           input signals:       41
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.25. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$29020, asynchronously reset by \reset
Extracted 523 gates and 728 wires to a netlist network with 204 inputs and 89 outputs.

3.29.25.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.25.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      185
ABC RESULTS:            ANDNOT cells:       59
ABC RESULTS:               BUF cells:       27
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       72
ABC RESULTS:              NAND cells:      258
ABC RESULTS:               NOR cells:       30
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       75
ABC RESULTS:             ORNOT cells:       15
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       33
ABC RESULTS:        internal signals:      435
ABC RESULTS:           input signals:      204
ABC RESULTS:          output signals:       89
Removing temp directory.

3.29.26. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25536, asynchronously reset by \reset
Extracted 39 gates and 68 wires to a netlist network with 28 inputs and 19 outputs.

3.29.26.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.26.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       15
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       19
Removing temp directory.

yosys> abc -script abc_tmp.scr

3.30. Executing ABC pass (technology mapping using ABC).

3.30.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 8258 gates and 9157 wires to a netlist network with 899 inputs and 1046 outputs.

3.30.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/b21/abc_tmp.scr 
ABC:   #Luts =  2667  Max Lvl =  33  Avg Lvl =   8.92  [   0.53 sec. at Pass 0]
ABC:   #Luts =  2136  Max Lvl =  39  Avg Lvl =  10.46  [  19.15 sec. at Pass 1]
ABC:   #Luts =  2121  Max Lvl =  38  Avg Lvl =  10.89  [   3.93 sec. at Pass 2]
ABC:   #Luts =  2067  Max Lvl =  39  Avg Lvl =  10.98  [   4.65 sec. at Pass 3]
ABC:   #Luts =  2019  Max Lvl =  37  Avg Lvl =  10.98  [   4.06 sec. at Pass 4]
ABC:   #Luts =  1962  Max Lvl =  38  Avg Lvl =  10.92  [   6.09 sec. at Pass 5]
ABC:   #Luts =  1937  Max Lvl =  37  Avg Lvl =  10.84  [   3.57 sec. at Pass 6]
ABC:   #Luts =  1896  Max Lvl =  36  Avg Lvl =  10.71  [   4.71 sec. at Pass 7]
ABC:   #Luts =  1888  Max Lvl =  38  Avg Lvl =  10.96  [   3.33 sec. at Pass 8]
ABC:   #Luts =  1870  Max Lvl =  38  Avg Lvl =  11.13  [   4.47 sec. at Pass 9]
ABC:   #Luts =  1864  Max Lvl =  37  Avg Lvl =  11.06  [   2.57 sec. at Pass 10]
ABC:   #Luts =  1841  Max Lvl =  38  Avg Lvl =  11.29  [   3.81 sec. at Pass 11]
ABC:   #Luts =  1840  Max Lvl =  38  Avg Lvl =  11.14  [   2.87 sec. at Pass 12]
ABC:   #Luts =  1828  Max Lvl =  37  Avg Lvl =  11.28  [   3.67 sec. at Pass 13]
ABC:   #Luts =  1828  Max Lvl =  37  Avg Lvl =  11.28  [   2.93 sec. at Pass 14]
ABC:   #Luts =  1825  Max Lvl =  37  Avg Lvl =  11.22  [   4.08 sec. at Pass 15]
ABC:   #Luts =  1820  Max Lvl =  37  Avg Lvl =  11.14  [   2.94 sec. at Pass 16]
ABC:   #Luts =  1816  Max Lvl =  36  Avg Lvl =  10.79  [   3.99 sec. at Pass 17]
ABC:   #Luts =  1816  Max Lvl =  36  Avg Lvl =  10.79  [   2.81 sec. at Pass 18]
ABC:   #Luts =  1810  Max Lvl =  37  Avg Lvl =  10.97  [   4.03 sec. at Pass 19]
ABC:   #Luts =  1810  Max Lvl =  37  Avg Lvl =  10.97  [   3.16 sec. at Pass 20]
ABC:   #Luts =  1804  Max Lvl =  37  Avg Lvl =  11.24  [   5.60 sec. at Pass 21]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.30.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1804
ABC RESULTS:        internal signals:     7212
ABC RESULTS:           input signals:      899
ABC RESULTS:          output signals:     1046
Removing temp directory.

yosys> opt

3.31. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 14671 unused wires.
<suppressed ~19 debug messages>

yosys> opt_expr

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.31.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.31.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.32. Printing statistics.

=== b21 ===

   Number of wires:               1544
   Number of wire bits:           3775
   Number of public wires:          28
   Number of public wire bits:     464
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2668
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     72
     $lut                         1628
     $mux                           14
     adder_carry                   598


yosys> shregmap -minlen 8 -maxlen 20

3.33. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.35. Printing statistics.

=== b21 ===

   Number of wires:               1544
   Number of wire bits:           3775
   Number of public wires:          28
   Number of public wire bits:     464
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2668
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     72
     $lut                         1628
     $mux                           14
     adder_carry                   598


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2634 debug messages>

yosys> opt_expr -mux_undef

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~31555 debug messages>

yosys> simplemap

3.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~18219 debug messages>
Removed a total of 6073 cells.

yosys> opt_dff -nodffe -nosdff

3.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 5676 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.43. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1629 debug messages>

yosys> opt_merge -nomux

3.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

yosys> opt_muxtree

3.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 350 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.43.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.43.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.43.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.43.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.43.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.44. Executing ABC pass (technology mapping using ABC).

3.44.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 5841 gates and 6737 wires to a netlist network with 894 inputs and 853 outputs.

3.44.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/b21/abc_tmp.scr 
ABC:   #Luts =  1646  Max Lvl =  37  Avg Lvl =  11.62  [   0.50 sec. at Pass 0]
ABC:   #Luts =  1646  Max Lvl =  32  Avg Lvl =   9.96  [  16.29 sec. at Pass 1]
ABC:   #Luts =  1626  Max Lvl =  32  Avg Lvl =   9.96  [   3.09 sec. at Pass 2]
ABC:   #Luts =  1616  Max Lvl =  34  Avg Lvl =   9.63  [   4.00 sec. at Pass 3]
ABC:   #Luts =  1611  Max Lvl =  33  Avg Lvl =   9.92  [   3.57 sec. at Pass 4]
ABC:   #Luts =  1604  Max Lvl =  34  Avg Lvl =  10.20  [   5.59 sec. at Pass 5]
ABC:   #Luts =  1600  Max Lvl =  32  Avg Lvl =  10.02  [   4.06 sec. at Pass 6]
ABC:   #Luts =  1597  Max Lvl =  33  Avg Lvl =   9.88  [   5.70 sec. at Pass 7]
ABC:   #Luts =  1594  Max Lvl =  32  Avg Lvl =  10.01  [   4.52 sec. at Pass 8]
ABC:   #Luts =  1590  Max Lvl =  34  Avg Lvl =  10.13  [   4.45 sec. at Pass 9]
ABC:   #Luts =  1583  Max Lvl =  30  Avg Lvl =   9.71  [   3.52 sec. at Pass 10]
ABC:   #Luts =  1582  Max Lvl =  31  Avg Lvl =   9.65  [   4.69 sec. at Pass 11]
ABC:   #Luts =  1578  Max Lvl =  31  Avg Lvl =   9.77  [   3.03 sec. at Pass 12]
ABC:   #Luts =  1568  Max Lvl =  31  Avg Lvl =   9.68  [   4.50 sec. at Pass 13]
ABC:   #Luts =  1568  Max Lvl =  31  Avg Lvl =   9.68  [   3.17 sec. at Pass 14]
ABC:   #Luts =  1568  Max Lvl =  31  Avg Lvl =   9.68  [   4.36 sec. at Pass 15]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1568
ABC RESULTS:        internal signals:     4990
ABC RESULTS:           input signals:      894
ABC RESULTS:          output signals:      853
Removing temp directory.

yosys> opt

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 5539 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \b21

3.46.2. Analyzing design hierarchy..
Top module:  \b21
Removed 0 unused modules.

yosys> stat

3.47. Printing statistics.

=== b21 ===

   Number of wires:               1475
   Number of wire bits:           3706
   Number of public wires:          28
   Number of public wire bits:     464
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2594
     $lut                         1568
     adder_carry                   598
     dffsre                        428


yosys> opt_clean -purge

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~8 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.49. Executing Verilog backend.

yosys> bmuxmap

3.49.1. Executing BMUXMAP pass.

yosys> demuxmap

3.49.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b21'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: 4fade98ee8, CPU: user 38.91s system 0.47s, MEM: 107.84 MB peak
Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)
Time spent: 98% 3x abc (2447 sec), 0% 45x opt_expr (13 sec), ...
real 219.54
user 2269.90
sys 214.53
