
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b21.vhd

yosys> verific -vhdl b21.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b21.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b21.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b21.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:515: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b21.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:1026: analyzing entity 'b21'
VERIFIC-INFO [VHDL-1010] b21.vhd:1034: analyzing architecture 'behav'

yosys> synth_rs -top b21 -tech genesis -goal area -no_dsp -no_bram -verilog b21.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b21

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b21.vhd:1026: processing 'b21(BEHAV)'
VERIFIC-INFO [VHDL-1067] b21.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b21.vhd:515: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:992: 'others' clause is never selected
Importing module std_logic_arith.
Importing module standard.
Importing module b21.
Importing module b14(BEHAV).
Importing module TEXTIO.
Importing module std_logic_1164.
Importing module b14_1(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removing unused module `\std_logic_1164'.
Removing unused module `\TEXTIO'.
Removing unused module `\standard'.
Removing unused module `\std_logic_arith'.
Removed 4 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module b14_1(BEHAV).
Deleting now unused module b14(BEHAV).
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~13 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 14 unused cells and 347 unused wires.
<suppressed ~113 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b21...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b21.vhd:505$540.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b21.vhd:505$531.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b21.vhd:505$542.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b21.vhd:1015$1062.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b21.vhd:1015$1053.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b21.vhd:1015$1064.
Removed 6 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b21.vhd:490$493: { $flatten\P1.$verific$n2255$124 $auto$opt_reduce.cc:134:opt_pmux$1106 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b21.vhd:490$434: { $flatten\P1.$verific$n2256$125 $auto$opt_reduce.cc:134:opt_pmux$1108 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b21.vhd:490$511: { $flatten\P1.$verific$n2257$126 $auto$opt_reduce.cc:134:opt_pmux$1110 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b21.vhd:490$512: { $flatten\P1.$verific$n2258$127 $auto$opt_reduce.cc:134:opt_pmux$1112 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b21.vhd:1000$1013: { $flatten\P2.$verific$n2255$643 $auto$opt_reduce.cc:134:opt_pmux$1114 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b21.vhd:1000$954: { $flatten\P2.$verific$n2256$644 $auto$opt_reduce.cc:134:opt_pmux$1116 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b21.vhd:1000$1031: { $flatten\P2.$verific$n2257$645 $auto$opt_reduce.cc:134:opt_pmux$1118 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b21.vhd:1000$1032: { $flatten\P2.$verific$n2258$646 $auto$opt_reduce.cc:134:opt_pmux$1120 }
  Optimizing cells in module \b21.
Performed a total of 8 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b21.vhd:1019$1099 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b21.vhd:1019$1101 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1096 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1095 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1094 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1093 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b21.vhd:1019$1098 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1100 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b21.vhd:1019$1097 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b21.vhd:1019$1090 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b21.vhd:1019$1092 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b21.vhd:509$577 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b21.vhd:509$579 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b21.vhd:509$574 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b21.vhd:509$573 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b21.vhd:509$572 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b21.vhd:509$571 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b21.vhd:509$576 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b21.vhd:509$568 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b21.vhd:509$570 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b21.vhd:509$578 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b21.vhd:509$575 ($aldff) from module b21.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b21.P1.d.
Found FSM state register b21.P2.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b21'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b21.vhd:509$569
  root of input selection tree: $flatten\P1.$verific$n11472$374
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$220 [0]
  found ctrl input: $flatten\P1.$verific$n10346$191
  found ctrl input: $flatten\P1.$verific$n1405$118
  found ctrl input: $flatten\P1.$verific$n1440$119
  found ctrl input: $flatten\P1.$verific$n1474$120
  found ctrl input: $flatten\P1.$verific$n1475$121
  found ctrl input: $flatten\P1.$verific$n1476$122
  found ctrl input: $flatten\P1.$verific$n1477$123
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.B \P1.state $flatten\P1.$verific$n1405$118 $flatten\P1.$verific$n1440$119 $flatten\P1.$verific$n1474$120 $flatten\P1.$verific$n1475$121 $flatten\P1.$verific$n1476$122 $flatten\P1.$verific$n1477$123 $flatten\P1.$verific$n10346$191 $flatten\P1.$verific$n341$220 [0] }
  ctrl outputs: $flatten\P1.$verific$n11472$374
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P2.d' from module `\b21'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b21.vhd:1019$1091
  root of input selection tree: $flatten\P2.$verific$n11479$894
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$739 [0]
  found ctrl input: $flatten\P2.$verific$n10346$710
  found ctrl input: $flatten\P2.$verific$n1405$637
  found ctrl input: $flatten\P2.$verific$n1440$638
  found ctrl input: $flatten\P2.$verific$n1474$639
  found ctrl input: $flatten\P2.$verific$n1475$640
  found ctrl input: $flatten\P2.$verific$n1476$641
  found ctrl input: $flatten\P2.$verific$n1477$642
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.B \P2.state $flatten\P2.$verific$n1405$637 $flatten\P2.$verific$n1440$638 $flatten\P2.$verific$n1474$639 $flatten\P2.$verific$n1475$640 $flatten\P2.$verific$n1476$641 $flatten\P2.$verific$n1477$642 $flatten\P2.$verific$n10346$710 $flatten\P2.$verific$n341$739 [0] }
  ctrl outputs: $flatten\P2.$verific$n11479$894
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P2.d$1123' from module `\b21'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1121' from module `\b21'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1121' from module `\b21'.
Optimizing FSM `$fsm$\P2.d$1123' from module `\b21'.

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1121' from module `\b21' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> ---1
  00000000000000000000000000000010 -> --1-
  00000000000000000000000000000001 -> -1--
  00000000000000000000000000000011 -> 1---
Recoding FSM `$fsm$\P2.d$1123' from module `\b21' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> ---1
  00000000000000000000000000000010 -> --1-
  00000000000000000000000000000001 -> -1--
  00000000000000000000000000000011 -> 1---

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1121' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P1.d$1121 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       4

  Input signals:
    0: $flatten\P1.$verific$n341$220 [0]
    1: $flatten\P1.$verific$n10346$191
    2: $flatten\P1.$verific$n1477$123
    3: $flatten\P1.$verific$n1476$122
    4: $flatten\P1.$verific$n1475$121
    5: $flatten\P1.$verific$n1474$120
    6: $flatten\P1.$verific$n1440$119
    7: $flatten\P1.$verific$n1405$118
    8: \P1.state
    9: \P1.B

  Output signals:
    0: $flatten\P1.$verific$n11472$374 [0]
    1: $flatten\P1.$verific$n11472$374 [1]
    2: $flatten\P1.$verific$n11472$374 [2]
    3: $flatten\P1.$verific$n11472$374 [3]
    4: $flatten\P1.$verific$n11472$374 [4]
    5: $flatten\P1.$verific$n11472$374 [5]
    6: $flatten\P1.$verific$n11472$374 [6]
    7: $flatten\P1.$verific$n11472$374 [7]
    8: $flatten\P1.$verific$n11472$374 [8]
    9: $flatten\P1.$verific$n11472$374 [9]
   10: $flatten\P1.$verific$n11472$374 [10]
   11: $flatten\P1.$verific$n11472$374 [11]
   12: $flatten\P1.$verific$n11472$374 [12]
   13: $flatten\P1.$verific$n11472$374 [13]
   14: $flatten\P1.$verific$n11472$374 [14]
   15: $flatten\P1.$verific$n11472$374 [15]
   16: $flatten\P1.$verific$n11472$374 [16]
   17: $flatten\P1.$verific$n11472$374 [17]
   18: $flatten\P1.$verific$n11472$374 [18]
   19: $flatten\P1.$verific$n11472$374 [19]
   20: $flatten\P1.$verific$n11472$374 [20]
   21: $flatten\P1.$verific$n11472$374 [21]
   22: $flatten\P1.$verific$n11472$374 [22]
   23: $flatten\P1.$verific$n11472$374 [23]
   24: $flatten\P1.$verific$n11472$374 [24]
   25: $flatten\P1.$verific$n11472$374 [25]
   26: $flatten\P1.$verific$n11472$374 [26]
   27: $flatten\P1.$verific$n11472$374 [27]
   28: $flatten\P1.$verific$n11472$374 [28]
   29: $flatten\P1.$verific$n11472$374 [29]
   30: $flatten\P1.$verific$n11472$374 [30]
   31: $flatten\P1.$verific$n11472$374 [31]

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1123' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P2.d$1123 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       4

  Input signals:
    0: $flatten\P2.$verific$n341$739 [0]
    1: $flatten\P2.$verific$n10346$710
    2: $flatten\P2.$verific$n1477$642
    3: $flatten\P2.$verific$n1476$641
    4: $flatten\P2.$verific$n1475$640
    5: $flatten\P2.$verific$n1474$639
    6: $flatten\P2.$verific$n1440$638
    7: $flatten\P2.$verific$n1405$637
    8: \P2.state
    9: \P2.B

  Output signals:
    0: $flatten\P2.$verific$n11479$894 [0]
    1: $flatten\P2.$verific$n11479$894 [1]
    2: $flatten\P2.$verific$n11479$894 [2]
    3: $flatten\P2.$verific$n11479$894 [3]
    4: $flatten\P2.$verific$n11479$894 [4]
    5: $flatten\P2.$verific$n11479$894 [5]
    6: $flatten\P2.$verific$n11479$894 [6]
    7: $flatten\P2.$verific$n11479$894 [7]
    8: $flatten\P2.$verific$n11479$894 [8]
    9: $flatten\P2.$verific$n11479$894 [9]
   10: $flatten\P2.$verific$n11479$894 [10]
   11: $flatten\P2.$verific$n11479$894 [11]
   12: $flatten\P2.$verific$n11479$894 [12]
   13: $flatten\P2.$verific$n11479$894 [13]
   14: $flatten\P2.$verific$n11479$894 [14]
   15: $flatten\P2.$verific$n11479$894 [15]
   16: $flatten\P2.$verific$n11479$894 [16]
   17: $flatten\P2.$verific$n11479$894 [17]
   18: $flatten\P2.$verific$n11479$894 [18]
   19: $flatten\P2.$verific$n11479$894 [19]
   20: $flatten\P2.$verific$n11479$894 [20]
   21: $flatten\P2.$verific$n11479$894 [21]
   22: $flatten\P2.$verific$n11479$894 [22]
   23: $flatten\P2.$verific$n11479$894 [23]
   24: $flatten\P2.$verific$n11479$894 [24]
   25: $flatten\P2.$verific$n11479$894 [25]
   26: $flatten\P2.$verific$n11479$894 [26]
   27: $flatten\P2.$verific$n11479$894 [27]
   28: $flatten\P2.$verific$n11479$894 [28]
   29: $flatten\P2.$verific$n11479$894 [29]
   30: $flatten\P2.$verific$n11479$894 [30]
   31: $flatten\P2.$verific$n11479$894 [31]

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1121' from module `\b21'.
Mapping FSM `$fsm$\P2.d$1123' from module `\b21'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~12 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1096 ($adff) from module b21 (D = $flatten\P2.$verific$n10312$863 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1096 ($adff) from module b21 (D = $flatten\P2.$verific$n11185$889 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1095 ($adff) from module b21 (D = $flatten\P2.$verific$n10279$862, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1094 ($adff) from module b21 (D = $flatten\P2.$verific$n10246$861, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1093 ($adff) from module b21 (D = $flatten\P2.$verific$n10213$860, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1100 ($adff) from module b21 (D = { $flatten\P2.$verific$add_570$b21.vhd:980$1022 $flatten\P2.$verific$n10521$872 [0] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$B_reg$b21.vhd:1019$1092 ($adff) from module b21 (D = $flatten\P2.$verific$n10986$718, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$574 ($adff) from module b21 (D = $flatten\P1.$verific$n10312$344 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$574 ($adff) from module b21 (D = $flatten\P1.$verific$n11178$369 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b21.vhd:509$573 ($adff) from module b21 (D = $flatten\P1.$verific$n10279$343, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b21.vhd:509$572 ($adff) from module b21 (D = $flatten\P1.$verific$n10246$342, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b21.vhd:509$571 ($adff) from module b21 (D = $flatten\P1.$verific$n10213$341, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b21.vhd:509$578 ($adff) from module b21 (D = { $flatten\P1.$verific$add_570$b21.vhd:470$502 $flatten\P1.$verific$n10514$352 [0] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$B_reg$b21.vhd:509$570 ($adff) from module b21 (D = $flatten\P1.$verific$n10979$199, Q = \P1.B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 28 unused cells and 140 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b21.vhd:509$569 ($adff) from module b21.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1091 ($adff) from module b21.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_16$b21.vhd:1080$69 ($lt).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_17$b21.vhd:1080$70 ($lt).
Removed top 1 bits (of 5) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1311 ($eq).
Removed top 1 bits (of 6) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1301 ($eq).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$496 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$496 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$496 ($sub).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$494 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$494 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$494 ($add).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_179$b21.vhd:250$488 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_178$b21.vhd:249$487 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_177$b21.vhd:248$486 ($eq).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$483 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$483 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$483 ($sub).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_145$b21.vhd:230$477 ($mux).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_143$b21.vhd:228$475 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_142$b21.vhd:227$474 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_141$b21.vhd:225$473 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_140$b21.vhd:224$472 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_138$b21.vhd:220$470 ($mux).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$452 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$452 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$452 ($sub).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P1.$verific$LessThan_83$b21.vhd:152$451 ($lt).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$439 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$439 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$439 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$437 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$437 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$437 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$429 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$429 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P1.$verific$add_39$b21.vhd:99$425 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$419 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$419 ($add).
Removed top 1 bits (of 6) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1515 ($eq).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$412 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$412 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$405 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$405 ($add).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$398 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$398 ($add).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$392 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$392 ($neg).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P1.$verific$LessThan_14$b21.vhd:87$391 ($lt).
Removed top 1 bits (of 5) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1525 ($eq).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1599 ($adffe).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1560 ($adffe).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_697$b21.vhd:1016$1074 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_678$b21.vhd:1015$1060 ($mux).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$1016 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$1016 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$1016 ($sub).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$1014 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$1014 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$1014 ($add).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_179$b21.vhd:760$1008 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_178$b21.vhd:759$1007 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_177$b21.vhd:758$1006 ($eq).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$1003 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$1003 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$1003 ($sub).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_145$b21.vhd:740$997 ($mux).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_143$b21.vhd:738$995 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_142$b21.vhd:737$994 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_141$b21.vhd:735$993 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_140$b21.vhd:734$992 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_138$b21.vhd:730$990 ($mux).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$972 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$972 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$972 ($sub).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P2.$verific$LessThan_83$b21.vhd:662$971 ($lt).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$959 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$959 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$959 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$957 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$957 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$957 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$949 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$949 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P2.$verific$add_39$b21.vhd:609$945 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$939 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$939 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$932 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$932 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$925 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$925 ($add).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$918 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$918 ($add).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$912 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$912 ($neg).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P2.$verific$LessThan_14$b21.vhd:597$911 ($lt).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_698$b21.vhd:506$552 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_679$b21.vhd:505$538 ($mux).
Removed top 20 bits (of 21) from wire b21.$flatten\P1.$verific$n10477$349.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n10755$360.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n11178$369.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n11472$374.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1407$242.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1441$243.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1478$244.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n184$211.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n1987$255.
Removed top 3 bits (of 5) from wire b21.$flatten\P1.$verific$n288$214.
Removed top 5 bits (of 8) from wire b21.$flatten\P1.$verific$n301$216.
Removed top 9 bits (of 13) from wire b21.$flatten\P1.$verific$n318$218.
Removed top 8 bits (of 9) from wire b21.$flatten\P1.$verific$n341$220.
Removed top 2 bits (of 32) from wire b21.$flatten\P1.$verific$n4241$288.
Removed top 1 bits (of 3) from wire b21.$flatten\P1.$verific$n436$224.
Removed top 3 bits (of 33) from wire b21.$flatten\P1.$verific$n5666$302.
Removed top 1 bits (of 32) from wire b21.$flatten\P1.$verific$n862$237.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n933$239.
Removed top 1 bits (of 21) from wire b21.$flatten\P2.$verific$n10477$870.
Removed top 3 bits (of 32) from wire b21.$flatten\P2.$verific$n10762$880.
Removed top 1 bits (of 20) from wire b21.$flatten\P2.$verific$n10964$883.
Removed top 4 bits (of 32) from wire b21.$flatten\P2.$verific$n11185$889.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n11479$894.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1407$761.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1441$762.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1478$763.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n1511$764.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n1544$765.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n1577$766.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n1610$767.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n1643$768.
Removed top 1 bits (of 20) from wire b21.$flatten\P2.$verific$n1787$770.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n1987$774.
Removed top 2 bits (of 32) from wire b21.$flatten\P2.$verific$n4241$807.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 16 unused cells and 114 unused wires.
<suppressed ~17 debug messages>

yosys> techmap

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.18.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=20:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=20:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=20:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=19:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=19:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=19:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $or.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adffe.
Running "alumacc" on wrapper $extern:wrap:$mul:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$mul:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$mul:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $bmux.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=21:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=21:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=20:B_SIGNED=0:B_WIDTH=20:Y_WIDTH=21:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=31:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=31:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=31:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=30:B_SIGNED=0:B_WIDTH=30:Y_WIDTH=30:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_not.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=31:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=2:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=26:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=27:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=26:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=27:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=26:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=27:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=31:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:454:run$1633 [0] (3x1 bits, unsigned)
Using template $paramod$a7926d38756e33b5022e02ebfd484599309272c7\_90_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$403d07c18de10cda2ac652a859c56aea81aaf9b5\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~7935 debug messages>

yosys> alumacc

3.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b21:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.20. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~7928 debug messages>

yosys> opt_merge -nomux

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12603 debug messages>
Removed a total of 4201 cells.

yosys> opt_muxtree

3.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$9397 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [19], Q = \P2.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$3389 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [19], Q = \P1.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$3367 ($_DFFE_PP0P_) from module b21 (D = $flatten\P1.$verific$n10979$199, Q = \P1.B).
Adding EN signal on $auto$ff.cc:262:slice$9375 ($_DFFE_PP0P_) from module b21 (D = $flatten\P2.$verific$n10986$718, Q = \P2.B).
Adding EN signal on $auto$ff.cc:262:slice$3370 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [0], Q = \P1.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$3371 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [1], Q = \P1.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$3372 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [2], Q = \P1.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$3373 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [3], Q = \P1.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$3374 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [4], Q = \P1.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$3375 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [5], Q = \P1.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$3376 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [6], Q = \P1.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$3377 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [7], Q = \P1.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$3378 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [8], Q = \P1.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$3379 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [9], Q = \P1.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$3380 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [10], Q = \P1.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$3381 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [11], Q = \P1.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$3382 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [12], Q = \P1.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$3383 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [13], Q = \P1.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$3384 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [14], Q = \P1.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$3385 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [15], Q = \P1.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$3386 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [16], Q = \P1.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$3387 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [17], Q = \P1.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$3388 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$371 [18], Q = \P1.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$3520 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11301$372 [0], Q = \P1.IR [0]).
Adding EN signal on $auto$ff.cc:262:slice$9378 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [0], Q = \P2.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$9379 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [1], Q = \P2.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$9380 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [2], Q = \P2.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$9381 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [3], Q = \P2.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$9382 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [4], Q = \P2.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$9383 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [5], Q = \P2.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$9384 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [6], Q = \P2.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$9385 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [7], Q = \P2.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$9386 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [8], Q = \P2.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$9387 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [9], Q = \P2.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$9388 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [10], Q = \P2.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$9389 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [11], Q = \P2.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$9390 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [12], Q = \P2.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$9391 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [13], Q = \P2.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$9392 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [14], Q = \P2.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$9393 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [15], Q = \P2.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$9394 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [16], Q = \P2.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$9395 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [17], Q = \P2.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$9396 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$891 [18], Q = \P2.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$9529 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11308$892 [0], Q = \P2.IR [0]).

yosys> opt_clean

3.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 1302 unused cells and 3851 unused wires.
<suppressed ~1303 debug messages>

yosys> opt_expr

3.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~664 debug messages>

3.20.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~1083 debug messages>
Removed a total of 361 cells.

yosys> opt_dff

3.20.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$3435 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [13], Q = \P1.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$13181 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11373 [0], Q = \P2.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9427 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [29], Q = \P2.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$3425 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [3], Q = \P1.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9423 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [25], Q = \P2.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$9424 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [26], Q = \P2.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$9425 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [27], Q = \P2.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$9426 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [28], Q = \P2.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$9430 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9429 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [31], Q = \P2.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$3426 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [4], Q = \P1.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9433 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9428 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [30], Q = \P2.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$9432 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9431 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9434 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9435 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9436 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9437 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$3427 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [5], Q = \P1.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$3428 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [6], Q = \P1.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$3431 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [9], Q = \P1.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$3429 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [7], Q = \P1.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$3430 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [8], Q = \P1.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$3398 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [8], Q = \P1.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$3395 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [5], Q = \P1.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$3392 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [2], Q = \P1.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$3397 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [7], Q = \P1.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$3394 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [4], Q = \P1.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$3391 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [1], Q = \P1.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$13183 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11373 [2], Q = \P2.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$3396 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [6], Q = \P1.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$3393 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [3], Q = \P1.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$3390 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [0], Q = \P1.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$13182 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11373 [1], Q = \P2.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$3485 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [31], Q = \P1.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$3484 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [30], Q = \P1.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$3483 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [29], Q = \P1.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$3482 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [28], Q = \P1.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$3481 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [27], Q = \P1.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$3480 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [26], Q = \P1.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$3479 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [25], Q = \P1.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$3478 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [24], Q = \P1.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$3477 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [23], Q = \P1.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$3476 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [22], Q = \P1.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$3475 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [21], Q = \P1.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$3474 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [20], Q = \P1.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$3473 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [19], Q = \P1.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$3472 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [18], Q = \P1.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$3471 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [17], Q = \P1.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$3470 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [16], Q = \P1.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$3469 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [15], Q = \P1.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$3468 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [14], Q = \P1.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$3467 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [13], Q = \P1.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$3466 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [12], Q = \P1.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$3465 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [11], Q = \P1.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$3464 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [10], Q = \P1.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$3463 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [9], Q = \P1.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$3462 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [8], Q = \P1.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$3461 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [7], Q = \P1.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$3460 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [6], Q = \P1.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$3459 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [5], Q = \P1.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$3458 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [4], Q = \P1.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$3457 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [3], Q = \P1.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$3456 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [2], Q = \P1.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$3455 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [1], Q = \P1.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$3454 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5708 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$3453 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [31], Q = \P1.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$3452 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [30], Q = \P1.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$3451 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [29], Q = \P1.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$3450 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [28], Q = \P1.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$3449 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [27], Q = \P1.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$3448 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [26], Q = \P1.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$3447 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [25], Q = \P1.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$3446 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [24], Q = \P1.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$3445 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [23], Q = \P1.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$3444 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [22], Q = \P1.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$3443 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [21], Q = \P1.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$3442 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [20], Q = \P1.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$3441 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [19], Q = \P1.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$3440 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [18], Q = \P1.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$3439 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [17], Q = \P1.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$3438 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [16], Q = \P1.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$3437 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [15], Q = \P1.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$3436 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [14], Q = \P1.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$3424 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [2], Q = \P1.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$3423 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [1], Q = \P1.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$3422 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$3421 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [31], Q = \P1.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$3420 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [30], Q = \P1.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$3419 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [29], Q = \P1.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$3418 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [28], Q = \P1.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$3417 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [27], Q = \P1.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$3416 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [26], Q = \P1.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$3415 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [25], Q = \P1.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$3414 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [24], Q = \P1.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$3413 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [23], Q = \P1.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$3412 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [22], Q = \P1.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$3411 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [21], Q = \P1.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$3410 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [20], Q = \P1.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$3409 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [19], Q = \P1.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$3408 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [18], Q = \P1.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$3407 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [17], Q = \P1.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$3406 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [16], Q = \P1.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$3405 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [15], Q = \P1.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$3404 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [14], Q = \P1.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$3403 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [13], Q = \P1.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$3402 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [12], Q = \P1.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$3401 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [11], Q = \P1.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$3400 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [10], Q = \P1.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$3399 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4740 [9], Q = \P1.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$3434 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [12], Q = \P1.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$3433 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [11], Q = \P1.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$3432 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5224 [10], Q = \P1.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$9528 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4256 [2], Q = \P1.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9527 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4256 [1], Q = \P1.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9526 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$4256 [0], Q = \P1.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9493 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [31], Q = \P2.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$9492 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$9491 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$9490 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$9489 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$9488 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$9487 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$9486 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$9485 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$9484 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$9483 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$9482 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$9481 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$9480 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$9479 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$9478 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$9477 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$9476 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$9475 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$9474 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$9473 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$9472 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$9471 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$9470 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9469 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9468 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9467 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9466 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9465 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9464 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9463 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9462 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12825 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9461 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$9460 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$9459 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$9458 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$9457 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$9456 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$9455 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$9454 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$9453 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$9452 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$9451 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$9450 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$9449 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$9448 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$9447 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$9446 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$9445 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$9443 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$9442 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$9441 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$9422 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [24], Q = \P2.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$9421 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [23], Q = \P2.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$9420 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [22], Q = \P2.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$9419 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [21], Q = \P2.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$9418 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [20], Q = \P2.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$9417 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [19], Q = \P2.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$9416 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [18], Q = \P2.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$9415 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [17], Q = \P2.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$9414 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [16], Q = \P2.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$9413 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [15], Q = \P2.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$9412 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [14], Q = \P2.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$9411 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [13], Q = \P2.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$9410 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [12], Q = \P2.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$9409 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [11], Q = \P2.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$9408 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [10], Q = \P2.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$9407 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [9], Q = \P2.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$9406 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [8], Q = \P2.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9405 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [7], Q = \P2.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9404 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [6], Q = \P2.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9403 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [5], Q = \P2.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9402 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [4], Q = \P2.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9401 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [3], Q = \P2.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9400 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [2], Q = \P2.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9399 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [1], Q = \P2.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9398 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$11857 [0], Q = \P2.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9440 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$9439 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$9438 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12341 [8], Q = \P2.reg1 [8]).

yosys> opt_clean

3.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 1665 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4598 debug messages>

3.20.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~20877 debug messages>
Removed a total of 6959 cells.

yosys> opt_dff

3.20.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6646 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.20.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.20.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.20.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.20.30. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> stat

3.23. Printing statistics.

=== b21 ===

   Number of wires:               2703
   Number of wire bits:          16191
   Number of public wires:          46
   Number of public wire bits:     736
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11172
     $_AND_                       2237
     $_DFFE_PP0N_                    2
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     78
     $_MUX_                       5825
     $_NOT_                        333
     $_OR_                        1338
     $_XOR_                       1003


yosys> shregmap -minlen 8 -maxlen 20

3.24. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.25. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.26. Printing statistics.

=== b21 ===

   Number of wires:               2703
   Number of wire bits:          16191
   Number of public wires:          46
   Number of public wire bits:     736
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11172
     $_AND_                       2237
     $_DFFE_PP0N_                    2
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     78
     $_MUX_                       5825
     $_NOT_                        333
     $_OR_                        1338
     $_XOR_                       1003


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.27. Executing TECHMAP pass (map to technology primitives).

3.27.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.27.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.27.3. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1002 debug messages>

yosys> opt_expr -mux_undef

3.28. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1184 debug messages>

yosys> simplemap

3.29. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge

3.31. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~1311 debug messages>
Removed a total of 437 cells.

yosys> opt_dff -nodffe -nosdff

3.32. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 2557 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.34.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~82 debug messages>

yosys> opt_merge

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.35.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

3.35.5. Finished fast OPT passes.

yosys> memory_map

3.36. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.37. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.37.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.37.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.37.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.37.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14105 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14125
        $auto$simplemap.cc:86:simplemap_bitop$14126

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14106 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14123
        $auto$simplemap.cc:86:simplemap_bitop$14124

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14107 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14121
        $auto$simplemap.cc:86:simplemap_bitop$14122

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14108 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14119
        $auto$simplemap.cc:86:simplemap_bitop$14120

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14273 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$20752
        $auto$simplemap.cc:86:simplemap_bitop$20853

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7023 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7043
        $auto$simplemap.cc:86:simplemap_bitop$7044

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7024 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7041
        $auto$simplemap.cc:86:simplemap_bitop$7042

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7025 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7039
        $auto$simplemap.cc:86:simplemap_bitop$7040

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7026 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7037
        $auto$simplemap.cc:86:simplemap_bitop$7038

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8561 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16165
        $auto$simplemap.cc:86:simplemap_bitop$16376


yosys> opt_dff

3.37.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.37.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~10 debug messages>

3.37.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.37.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce -full

3.37.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.37.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.37.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14112 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14123
        $auto$simplemap.cc:86:simplemap_bitop$14125

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14113 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14119
        $auto$simplemap.cc:86:simplemap_bitop$14121

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7030 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7041
        $auto$simplemap.cc:86:simplemap_bitop$7043

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7031 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7037
        $auto$simplemap.cc:86:simplemap_bitop$7039


yosys> opt_dff

3.37.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.37.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4 debug messages>

3.37.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.37.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce -full

3.37.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.37.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.37.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14116 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14119
        $auto$simplemap.cc:86:simplemap_bitop$14123

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7034 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7037
        $auto$simplemap.cc:86:simplemap_bitop$7041


yosys> opt_dff

3.37.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.37.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~2 debug messages>

3.37.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.37.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.37.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.37.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.37.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.37.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr -full

3.37.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.37.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.38. Executing TECHMAP pass (map to technology primitives).

3.38.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.38.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~87 debug messages>

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.40. Executing ABC pass (technology mapping using ABC).

3.40.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 9523 gates and 9994 wires to a netlist network with 469 inputs and 481 outputs.

3.40.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/yosys_verific_rs/result_18-03-2022T17-26-14/All_lut_synth_rs_area.json/b21/abc_tmp.scr 
ABC: netlist  : i/o =    469/    481  and =   14375  lev =   89 (40.96)  mem = 0.19 MB
ABC: Mapping (K=6)  :  lut =   2310  edge =   10188  lev =   38 (17.22)  mem = 0.11 MB
ABC: netlist  : i/o =    469/    481  and =   13934  lev =   86 (41.32)  mem = 0.19 MB
ABC: Mapping (K=6)  :  lut =   2044  edge =    9076  lev =   40 (19.45)  mem = 0.11 MB
ABC: netlist  : i/o =    469/    481  and =   13641  lev =   87 (41.86)  mem = 0.18 MB
ABC: Mapping (K=6)  :  lut =   1962  edge =    8781  lev =   41 (19.47)  mem = 0.10 MB
ABC: netlist  : i/o =    469/    481  and =   14101  lev =   91 (44.79)  mem = 0.19 MB
ABC: Mapping (K=6)  :  lut =   1885  edge =    8512  lev =   41 (19.46)  mem = 0.10 MB
ABC: netlist  : i/o =    469/    481  and =   12446  lev =   88 (42.36)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1831  edge =    8113  lev =   40 (19.57)  mem = 0.10 MB
ABC: netlist  : i/o =    469/    481  and =   12494  lev =   92 (43.28)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   1728  edge =    8013  lev =   36 (17.65)  mem = 0.10 MB
ABC: netlist  : i/o =    469/    481  and =   12574  lev =   92 (43.64)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   1722  edge =    8036  lev =   37 (18.42)  mem = 0.10 MB
ABC: netlist  : i/o =    469/    481  and =   12644  lev =   92 (43.55)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   1721  edge =    8015  lev =   37 (18.88)  mem = 0.10 MB
ABC: netlist  : i/o =    469/    481  and =   12418  lev =   93 (45.44)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   1685  edge =    7804  lev =   35 (18.16)  mem = 0.09 MB
ABC: netlist  : i/o =    469/    481  and =   12157  lev =   98 (49.72)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   1653  edge =    7674  lev =   35 (18.00)  mem = 0.09 MB
ABC: netlist  : i/o =    469/    481  and =   11662  lev =   92 (43.96)  mem = 0.21 MB
ABC: Mapping (K=6)  :  lut =   1620  edge =    7532  lev =   37 (18.30)  mem = 0.09 MB
ABC: netlist  : i/o =    469/    481  and =   12159  lev =  101 (48.95)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   1601  edge =    7487  lev =   37 (18.51)  mem = 0.09 MB
ABC: netlist  : i/o =    469/    481  and =   11694  lev =   93 (43.77)  mem = 0.21 MB
ABC: Mapping (K=6)  :  lut =   1590  edge =    7438  lev =   38 (18.57)  mem = 0.09 MB
ABC: netlist  : i/o =    469/    481  and =   11694  lev =   93 (43.77)  mem = 0.16 MB
ABC: Mapping (K=6)  :  lut =   1590  edge =    7438  lev =   38 (18.57)  mem = 0.09 MB
ABC: netlist  : i/o =    469/    481  and =   11694  lev =   93 (43.77)  mem = 0.21 MB
ABC: Mapping (K=6)  :  lut =   1590  edge =    7438  lev =   38 (18.57)  mem = 0.09 MB
ABC: netlist  : i/o =    469/    481  and =   11856  lev =   93 (44.03)  mem = 0.16 MB
ABC: Mapping (K=6)  :  lut =   1590  edge =    7438  lev =   38 (18.57)  mem = 0.09 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1595
ABC RESULTS:        internal signals:     9044
ABC RESULTS:           input signals:      469
ABC RESULTS:          output signals:      481
Removing temp directory.

yosys> opt

3.41. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.41.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.41.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 3191 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.41.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.41.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.41.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.41.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.41.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.41.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.42. Executing HIERARCHY pass (managing design hierarchy).

3.42.1. Analyzing design hierarchy..
Top module:  \b21

3.42.2. Analyzing design hierarchy..
Top module:  \b21
Removed 0 unused modules.

yosys> stat

3.43. Printing statistics.

=== b21 ===

   Number of wires:               1557
   Number of wire bits:           2433
   Number of public wires:          46
   Number of public wire bits:     736
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2029
     $lut                         1593
     dffsre                        436


yosys> opt_clean -purge

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 14 unused wires.
<suppressed ~14 debug messages>

yosys> write_verilog -noattr -nohex b21.verilog

3.45. Executing Verilog backend.

yosys> bmuxmap

3.45.1. Executing BMUXMAP pass.

yosys> demuxmap

3.45.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b21'.

End of script. Logfile hash: 07e20ec1c3, CPU: user 34.55s system 0.18s, MEM: 100.63 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 58% 1x abc (49 sec), 13% 50x opt_expr (10 sec), ...
real 83.69
user 80.88
sys 2.80
