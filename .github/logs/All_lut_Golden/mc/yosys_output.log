
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k mc_adr_sel.v mc_cs_rf.v mc_defines.v mc_dp.v mc_incn_r.v mc_mem_if.v mc_obct.v mc_obct_top.v mc_rd_fifo.v mc_refresh.v mc_rf.v mc_timing.v mc_top.v mc_wb_if.v

yosys> verific -vlog2k mc_adr_sel.v mc_cs_rf.v mc_defines.v mc_dp.v mc_incn_r.v mc_mem_if.v mc_obct.v mc_obct_top.v mc_rd_fifo.v mc_refresh.v mc_rf.v mc_timing.v mc_top.v mc_wb_if.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_adr_sel.v'
VERIFIC-INFO [VERI-1328] mc_adr_sel.v:88: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_adr_sel.v:88: back to file 'mc_adr_sel.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_cs_rf.v'
VERIFIC-INFO [VERI-1328] mc_cs_rf.v:111: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_cs_rf.v:111: back to file 'mc_cs_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_defines.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_dp.v'
VERIFIC-INFO [VERI-1328] mc_dp.v:107: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_dp.v:107: back to file 'mc_dp.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_incn_r.v'
VERIFIC-INFO [VERI-1328] mc_incn_r.v:72: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_incn_r.v:72: back to file 'mc_incn_r.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_mem_if.v'
VERIFIC-INFO [VERI-1328] mc_mem_if.v:112: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_mem_if.v:112: back to file 'mc_mem_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_obct.v'
VERIFIC-INFO [VERI-1328] mc_obct.v:102: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_obct.v:102: back to file 'mc_obct.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_obct_top.v'
VERIFIC-INFO [VERI-1328] mc_obct_top.v:80: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_obct_top.v:80: back to file 'mc_obct_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_rd_fifo.v'
VERIFIC-INFO [VERI-1328] mc_rd_fifo.v:82: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_rd_fifo.v:82: back to file 'mc_rd_fifo.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_refresh.v'
VERIFIC-INFO [VERI-1328] mc_refresh.v:97: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_refresh.v:97: back to file 'mc_refresh.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_rf.v'
VERIFIC-INFO [VERI-1328] mc_rf.v:121: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_rf.v:121: back to file 'mc_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_timing.v'
VERIFIC-INFO [VERI-1328] mc_timing.v:126: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_timing.v:126: back to file 'mc_timing.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_top.v'
VERIFIC-INFO [VERI-1328] mc_top.v:115: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_top.v:115: back to file 'mc_top.v'
VERIFIC-INFO [VERI-2561] mc_top.v:315: undeclared symbol 'mc_sts_ir', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] mc_top.v:319: undeclared symbol 'cs_le_d', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_wb_if.v'
VERIFIC-INFO [VERI-1328] mc_wb_if.v:113: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_wb_if.v:113: back to file 'mc_wb_if.v'

yosys> synth_rs -top mc_top -tech genesis -goal area -de -no_dsp -no_bram -verilog mc_top.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top mc_top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] mc_top.v:117: compiling module 'mc_top'
VERIFIC-WARNING [VERI-2371] mc_top.v:290: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_rf.v:123: compiling module 'mc_rf'
VERIFIC-WARNING [VERI-2371] mc_rf.v:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:253: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:256: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:258: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:259: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:260: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:261: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:263: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:265: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:266: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:267: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:269: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:270: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:271: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_rf.v:251: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_rf.v:282: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:286: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:289: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:292: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:295: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:298: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:301: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:308: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:311: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:321: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:322: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:325: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:326: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:329: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:330: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:333: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:341: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:349: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:351: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:354: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:358: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:360: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:363: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:367: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:369: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:371: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:373: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:375: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:377: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:379: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:380: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:384: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:388: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:390: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:392: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:394: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:396: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:398: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:400: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:401: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:405: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:409: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:411: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:413: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:415: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:417: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:419: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:421: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:422: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:426: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:430: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:432: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:434: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:436: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:438: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:440: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:442: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:443: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:464: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:470: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:476: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:478: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:481: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:482: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:496: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:498: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:501: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:503: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:113: compiling module 'mc_cs_rf'
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:161: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:162: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:166: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:176: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:188: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:201: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:225: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:227: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:113: compiling module 'mc_cs_rf(this_cs=3'b01)'
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:161: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:162: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:166: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:176: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:188: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:201: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:225: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:227: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b010)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b011)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b100)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b101)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b110)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b111)'
VERIFIC-INFO [VERI-1018] mc_adr_sel.v:90: compiling module 'mc_adr_sel'
VERIFIC-INFO [VERI-1018] mc_incn_r.v:77: compiling module 'mc_incn_r(incN_width=24)'
VERIFIC-WARNING [VERI-2371] mc_incn_r.v:92: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1209] mc_incn_r.v:99: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:168: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:173: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:174: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:175: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:172: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:178: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:194: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:195: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:200: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:202: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:203: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:193: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:212: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:216: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:218: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:221: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:211: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:226: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:228: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:230: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:231: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:236: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:225: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:246: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:247: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:248: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:250: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:251: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:255: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:256: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:245: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:260: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:261: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:265: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:266: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:269: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:270: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:259: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:275: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] mc_obct_top.v:82: compiling module 'mc_obct_top'
VERIFIC-WARNING [VERI-2371] mc_obct_top.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct_top.v:203: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct_top.v:209: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_obct.v:104: compiling module 'mc_obct'
VERIFIC-WARNING [VERI-2371] mc_obct.v:136: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:138: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:140: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:142: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:147: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:149: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:151: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:154: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:156: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:158: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:160: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:163: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:169: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:193: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:196: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_obct.v:220: compiling module 'mc_obct_dummy'
VERIFIC-INFO [VERI-1018] mc_dp.v:109: compiling module 'mc_dp'
VERIFIC-INFO [VERI-1018] mc_rd_fifo.v:84: compiling module 'mc_rd_fifo'
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:97: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:99: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:101: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:104: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:106: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:108: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:111: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:114: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:117: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:120: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_rd_fifo.v:123: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_dp.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:205: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:208: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:210: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:229: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_refresh.v:99: compiling module 'mc_refresh'
VERIFIC-WARNING [VERI-2371] mc_refresh.v:159: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:160: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:163: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:172: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:173: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:181: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:185: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:189: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:193: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:194: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:195: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:200: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:208: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_timing.v:128: compiling module 'mc_timing'
VERIFIC-WARNING [VERI-2371] mc_timing.v:458: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:463: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:466: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:469: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:472: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:473: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:476: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:477: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:481: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:482: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:485: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:486: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:489: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:492: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:495: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:498: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:500: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:503: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:505: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:518: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:519: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:525: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:526: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:529: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:530: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:536: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:538: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:541: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:543: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:547: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:548: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:552: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:553: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:556: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:557: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:560: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:561: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:565: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:568: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:572: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:575: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:578: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:582: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:585: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:591: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:592: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:595: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:596: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:600: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:602: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:604: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:608: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:610: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:612: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:618: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:619: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:623: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:625: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:627: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:629: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:637: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:641: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:642: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:645: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:646: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:649: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:650: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:653: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:654: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:660: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:662: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:664: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:679: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:681: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:683: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:685: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:687: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:689: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:691: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:693: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:700: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:702: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:709: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:712: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:714: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:716: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:718: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:720: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:722: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:724: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:726: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:728: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:730: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:732: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:737: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:738: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:742: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:744: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:747: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_timing.v:751: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_timing.v:762: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:764: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:766: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:769: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:771: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:775: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:777: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:782: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:785: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:786: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:789: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:798: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:801: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:803: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:805: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:809: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:813: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_timing.v:940: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] mc_timing.v:893: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] mc_wb_if.v:115: compiling module 'mc_wb_if'
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:169: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:171: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:174: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:175: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:180: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:185: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:186: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:191: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:193: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:209: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:211: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:216: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:250: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_mem_if.v:114: compiling module 'mc_mem_if'
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:223: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:226: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:238: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:241: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:244: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:245: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:248: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:251: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:258: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:267: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:270: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:271: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:274: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:277: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:280: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:291: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:294: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:300: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:303: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:309: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:312: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:318: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:321: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:327: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:330: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:336: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:339: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:345: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:348: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:354: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:357: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:360: delay control is not supported for synthesis
Importing module mc_top.
Importing module mc_rf.
Importing module mc_cs_rf.
Importing module mc_adr_sel.
Importing module mc_cs_rf(this_cs=3'b01).
Importing module mc_cs_rf_dummy(this_cs=3'b010).
Importing module mc_cs_rf_dummy(this_cs=3'b011).
Importing module mc_cs_rf_dummy(this_cs=3'b100).
Importing module mc_cs_rf_dummy(this_cs=3'b101).
Importing module mc_cs_rf_dummy(this_cs=3'b110).
Importing module mc_cs_rf_dummy(this_cs=3'b111).
Importing module mc_incn_r(incN_width=24).
Importing module mc_obct_top.
Importing module mc_obct.
Importing module mc_dp.
Importing module mc_obct_dummy.
Importing module mc_timing.
Importing module mc_refresh.
Importing module mc_rd_fifo.
Importing module mc_wb_if.
Importing module mc_mem_if.

3.3.1. Analyzing design hierarchy..
Top module:  \mc_top
Used module:     \mc_mem_if
Used module:     \mc_wb_if
Used module:     \mc_timing
Used module:     \mc_refresh
Used module:     \mc_dp
Used module:         \mc_rd_fifo
Used module:     \mc_obct_top
Used module:         \mc_obct_dummy
Used module:         \mc_obct
Used module:     \mc_adr_sel
Used module:         \mc_incn_r(incN_width=24)
Used module:     \mc_rf
Used module:         \mc_cs_rf_dummy(this_cs=3'b111)
Used module:         \mc_cs_rf_dummy(this_cs=3'b110)
Used module:         \mc_cs_rf_dummy(this_cs=3'b101)
Used module:         \mc_cs_rf_dummy(this_cs=3'b100)
Used module:         \mc_cs_rf_dummy(this_cs=3'b011)
Used module:         \mc_cs_rf_dummy(this_cs=3'b010)
Used module:         \mc_cs_rf(this_cs=3'b01)
Used module:         \mc_cs_rf

3.3.2. Analyzing design hierarchy..
Top module:  \mc_top
Used module:     \mc_mem_if
Used module:     \mc_wb_if
Used module:     \mc_timing
Used module:     \mc_refresh
Used module:     \mc_dp
Used module:         \mc_rd_fifo
Used module:     \mc_obct_top
Used module:         \mc_obct_dummy
Used module:         \mc_obct
Used module:     \mc_adr_sel
Used module:         \mc_incn_r(incN_width=24)
Used module:     \mc_rf
Used module:         \mc_cs_rf_dummy(this_cs=3'b111)
Used module:         \mc_cs_rf_dummy(this_cs=3'b110)
Used module:         \mc_cs_rf_dummy(this_cs=3'b101)
Used module:         \mc_cs_rf_dummy(this_cs=3'b100)
Used module:         \mc_cs_rf_dummy(this_cs=3'b011)
Used module:         \mc_cs_rf_dummy(this_cs=3'b010)
Used module:         \mc_cs_rf(this_cs=3'b01)
Used module:         \mc_cs_rf
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_mem_if.
Optimizing module mc_wb_if.
<suppressed ~1 debug messages>
Optimizing module mc_rd_fifo.
<suppressed ~1 debug messages>
Optimizing module mc_refresh.
<suppressed ~2 debug messages>
Optimizing module mc_timing.
<suppressed ~30 debug messages>
Optimizing module mc_obct_dummy.
Optimizing module mc_dp.
<suppressed ~3 debug messages>
Optimizing module mc_obct.
<suppressed ~1 debug messages>
Optimizing module mc_obct_top.
Optimizing module mc_incn_r(incN_width=24).
<suppressed ~1 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b111).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b110).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b101).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b100).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b011).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b010).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf(this_cs=3'b01).
<suppressed ~2 debug messages>
Optimizing module mc_adr_sel.
<suppressed ~1 debug messages>
Optimizing module mc_cs_rf.
<suppressed ~3 debug messages>
Optimizing module mc_rf.
<suppressed ~14 debug messages>
Optimizing module mc_top.
<suppressed ~1 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module mc_mem_if.
Deleting now unused module mc_wb_if.
Deleting now unused module mc_rd_fifo.
Deleting now unused module mc_refresh.
Deleting now unused module mc_timing.
Deleting now unused module mc_obct_dummy.
Deleting now unused module mc_dp.
Deleting now unused module mc_obct.
Deleting now unused module mc_obct_top.
Deleting now unused module mc_incn_r(incN_width=24).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b111).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b110).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b101).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b100).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b011).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b010).
Deleting now unused module mc_cs_rf(this_cs=3'b01).
Deleting now unused module mc_adr_sel.
Deleting now unused module mc_cs_rf.
Deleting now unused module mc_rf.
<suppressed ~26 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~36 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 66 unused cells and 3837 unused wires.
<suppressed ~527 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module mc_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~42 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~149 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_1002$mc_timing.v:1732$5803: { $flatten\u5.$verific$n7926$4910 $flatten\u5.$verific$n7811$4883 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_443$mc_timing.v:1004$5419: { $flatten\u1.$verific$n15$3478 $auto$opt_reduce.cc:134:opt_pmux$6260 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_444$mc_timing.v:1004$5420: $auto$opt_reduce.cc:134:opt_pmux$6262
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_448$mc_timing.v:1004$5424: $auto$opt_reduce.cc:134:opt_pmux$6264
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_910$mc_timing.v:1732$5712: { $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7754$4826 $flatten\u5.$verific$n7755$4827 $flatten\u5.$verific$n7766$4838 $flatten\u5.$verific$n7767$4839 $flatten\u5.$verific$n7798$4870 $flatten\u5.$verific$n7886$4891 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_915$mc_timing.v:1732$5717: { $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7762$4834 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_918$mc_timing.v:1732$5720: { $flatten\u5.$verific$n7753$4825 $auto$opt_reduce.cc:134:opt_pmux$6266 $flatten\u5.$verific$n7894$4894 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_921$mc_timing.v:1732$5723: { $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7897$4896 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_925$mc_timing.v:1732$5727: { $flatten\u5.$verific$n7753$4825 $auto$opt_reduce.cc:134:opt_pmux$6268 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_928$mc_timing.v:1732$5730: { $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7904$4899 $flatten\u5.$verific$n7769$4841 $flatten\u5.$verific$n7783$4855 $flatten\u5.$verific$n7790$4862 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_931$mc_timing.v:1732$5733: { $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7759$4831 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_934$mc_timing.v:1732$5736: { $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7914$4902 $flatten\u5.$verific$n7764$4836 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_936$mc_timing.v:1732$5738: { $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7756$4828 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_940$mc_timing.v:1732$5742: { $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7919$4905 $flatten\u5.$verific$n7920$4906 $flatten\u5.$verific$n7768$4840 $flatten\u5.$verific$n7789$4861 $flatten\u5.$verific$n7790$4862 $flatten\u5.$verific$n7791$4863 $flatten\u5.$verific$n7792$4864 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_943$mc_timing.v:1732$5745: { $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7923$4908 $flatten\u5.$verific$n7765$4837 $flatten\u5.$verific$n7766$4838 $flatten\u5.$verific$n7769$4841 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_946$mc_timing.v:1732$5748: { $flatten\u5.$verific$n7925$4909 $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7811$4883 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_949$mc_timing.v:1732$5751: { $flatten\u5.$verific$n7928$4911 $flatten\u5.$verific$n7754$4826 $flatten\u5.$verific$n7786$4858 $flatten\u5.$verific$n7789$4861 $flatten\u5.$verific$n7790$4862 $auto$opt_reduce.cc:134:opt_pmux$6270 $flatten\u5.$verific$n7798$4870 $flatten\u5.$verific$n7929$4912 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_951$mc_timing.v:1732$5753: { $flatten\u5.$verific$n7757$4829 $flatten\u5.$verific$n7758$4830 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_955$mc_timing.v:1732$5757: { $flatten\u5.$verific$n7763$4835 $flatten\u5.$verific$n7764$4836 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_957$mc_timing.v:1732$5759: { $flatten\u5.$verific$n7764$4836 $flatten\u5.$verific$n7795$4867 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_962$mc_timing.v:1732$5764: { $flatten\u5.$verific$n7771$4843 $flatten\u5.$verific$n7942$4918 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_964$mc_timing.v:1732$5766: { $flatten\u5.$verific$n7772$4844 $flatten\u5.$verific$n7776$4848 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_969$mc_timing.v:1732$5771: { $flatten\u5.$verific$n7781$4853 $flatten\u5.$verific$n7782$4854 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_974$mc_timing.v:1732$5776: { $flatten\u5.$verific$n7786$4858 $flatten\u5.$verific$n7954$4922 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_976$mc_timing.v:1732$5778: { $flatten\u5.$verific$n7786$4858 $flatten\u5.$verific$n7798$4870 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_979$mc_timing.v:1732$5781: { $flatten\u5.$verific$n7959$4925 $flatten\u5.$verific$n7798$4870 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_981$mc_timing.v:1732$5783: { $flatten\u5.$verific$n7788$4860 $flatten\u5.$verific$n7789$4861 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_987$mc_timing.v:1732$5789: $auto$opt_reduce.cc:134:opt_pmux$6272
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_989$mc_timing.v:1732$5791: { $flatten\u5.$verific$n7969$4929 $flatten\u5.$verific$n7791$4863 $flatten\u5.$verific$n7792$4864 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_992$mc_timing.v:1732$5794: { $flatten\u5.$verific$n7972$4930 $flatten\u5.$verific$n7795$4867 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_445$mc_timing.v:1004$5421: { $auto$opt_reduce.cc:134:opt_pmux$6274 $flatten\u5.$verific$n1880$4656 $flatten\u1.$verific$n57$3480 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_907$mc_timing.v:1732$5709: { $flatten\u5.$verific$n7752$4824 $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7754$4826 $flatten\u5.$verific$n7755$4827 $flatten\u5.$verific$n7756$4828 $flatten\u5.$verific$n7757$4829 $flatten\u5.$verific$n7758$4830 $flatten\u5.$verific$n7759$4831 $flatten\u5.$verific$n7760$4832 $flatten\u5.$verific$n7762$4834 $flatten\u5.$verific$n7763$4835 $flatten\u5.$verific$n7764$4836 $flatten\u5.$verific$n7765$4837 $flatten\u5.$verific$n7766$4838 $flatten\u5.$verific$n7767$4839 $flatten\u5.$verific$n7768$4840 $flatten\u5.$verific$n7769$4841 $flatten\u5.$verific$n7770$4842 $flatten\u5.$verific$n7771$4843 $flatten\u5.$verific$n7772$4844 $flatten\u5.$verific$n7773$4845 $flatten\u5.$verific$n7774$4846 $flatten\u5.$verific$n7775$4847 $flatten\u5.$verific$n7776$4848 $flatten\u5.$verific$n7777$4849 $flatten\u5.$verific$n7778$4850 $flatten\u5.$verific$n7779$4851 $flatten\u5.$verific$n7781$4853 $flatten\u5.$verific$n7782$4854 $flatten\u5.$verific$n7783$4855 $flatten\u5.$verific$n7784$4856 $auto$opt_reduce.cc:134:opt_pmux$6276 $flatten\u5.$verific$n7786$4858 $flatten\u5.$verific$n7787$4859 $flatten\u5.$verific$n7788$4860 $flatten\u5.$verific$n7789$4861 $flatten\u5.$verific$n7790$4862 $flatten\u5.$verific$n7791$4863 $flatten\u5.$verific$n7792$4864 $flatten\u5.$verific$n7793$4865 $flatten\u5.$verific$n7794$4866 $flatten\u5.$verific$n7795$4867 $flatten\u5.$verific$n7796$4868 $flatten\u5.$verific$n7797$4869 $flatten\u5.$verific$n7798$4870 $flatten\u5.$verific$n7799$4871 $flatten\u5.$verific$n7800$4872 $flatten\u5.$verific$n7801$4873 $flatten\u5.$verific$n7802$4874 $flatten\u5.$verific$n7803$4875 $flatten\u5.$verific$n7804$4876 $flatten\u5.$verific$n7805$4877 $flatten\u5.$verific$n7806$4878 $flatten\u5.$verific$n7807$4879 $flatten\u5.$verific$n7808$4880 $flatten\u5.$verific$n7809$4881 $flatten\u5.$verific$n7810$4882 $flatten\u5.$verific$n7811$4883 $flatten\u5.$verific$n7812$4884 $flatten\u5.$verific$n7813$4885 $flatten\u5.$verific$n7814$4886 $flatten\u5.$verific$n7815$4887 $flatten\u5.$verific$n7816$4888 $flatten\u5.$verific$n7817$4889 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_929$mc_timing.v:1732$5731: { $flatten\u5.$verific$n7753$4825 $flatten\u5.$verific$n7760$4832 $auto$opt_reduce.cc:134:opt_pmux$6288 $flatten\u5.$verific$n7783$4855 $flatten\u5.$verific$n7784$4856 $flatten\u5.$verific$n7788$4860 $flatten\u5.$verific$n7791$4863 $flatten\u5.$verific$n7792$4864 $flatten\u5.$verific$n7793$4865 $auto$opt_reduce.cc:134:opt_pmux$6286 $flatten\u5.$verific$n7798$4870 $auto$opt_reduce.cc:134:opt_pmux$6284 $auto$opt_reduce.cc:134:opt_pmux$6282 $auto$opt_reduce.cc:134:opt_pmux$6280 $auto$opt_reduce.cc:134:opt_pmux$6278 }
  Optimizing cells in module \mc_top.
Performed a total of 33 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u7.$verific$mc_oe__reg$mc_mem_if.v:271$6237 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dqm_reg$mc_mem_if.v:267$6233 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dqm_r_reg$mc_mem_if.v:258$6225 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dqm_r2_reg$mc_mem_if.v:262$6227 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dp_o_reg$mc_mem_if.v:251$6219 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u7.$verific$mc_data_oe_reg$mc_mem_if.v:245$6215 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_data_o_reg$mc_mem_if.v:248$6217 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_data_ir_reg$mc_mem_if.v:226$6196 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_addr_reg$mc_mem_if.v:254$6221 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$write_go_r_reg$mc_wb_if.v:198$6090 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$write_go_r1_reg$mc_wb_if.v:193$6083 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wr_hold_reg$mc_wb_if.v:216$6114 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wb_first_r_reg$mc_wb_if.v:211$6110 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wb_err_reg$mc_wb_if.v:235$6131 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u6.$verific$wb_data_o_reg$mc_wb_if.v:250$6138 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wb_ack_o_reg$mc_wb_if.v:229$6123 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$rmw_r_reg$mc_wb_if.v:175$6061 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$rmw_en_reg$mc_wb_if.v:171$6054 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$read_go_r_reg$mc_wb_if.v:186$6075 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$read_go_r1_reg$mc_wb_if.v:182$6072 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$wr_cycle_reg$mc_timing.v:604$5215 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$wb_stb_first_reg$mc_timing.v:805$5386 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$wb_cycle_reg$mc_timing.v:612$5220 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$tmr_done_reg$mc_timing.v:738$5339 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$tmr2_done_reg$mc_timing.v:702$5306 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$timer_reg$mc_timing.v:732$5335 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u5.$verific$timer2_reg$mc_timing.v:693$5288 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$suspended_reg$mc_timing.v:650$5258 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$susp_sel_r_reg$mc_timing.v:664$5264 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$susp_req_r_reg$mc_timing.v:642$5254 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$state_reg$mc_timing.v:813$5389 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$rsts_reg$mc_timing.v:477$5136 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$rsts1_reg$mc_timing.v:473$5134 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$rfr_ack_r_reg$mc_timing.v:654$5260 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$resume_req_r_reg$mc_timing.v:646$5256 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$oe__reg$mc_timing.v:548$5182 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$no_wb_cycle_reg$mc_timing.v:619$5225 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mem_ack_r_reg$mc_timing.v:519$5165 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_le_reg$mc_timing.v:486$5141 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_c_oe_reg$mc_timing.v:482$5138 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_adv_r_reg$mc_timing.v:505$5153 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_adv_r1_reg$mc_timing.v:500$5150 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$lookup_ready2_reg$mc_timing.v:596$5212 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$lookup_ready1_reg$mc_timing.v:592$5208 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u5.$verific$ir_cnt_reg$mc_timing.v:744$5345 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.$verific$csr_r_reg$mc_rf.v:298$1556 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csr_r2_reg$mc_rf.v:292$1553 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csc_reg$mc_rf.v:381$1617 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csc_mask_r_reg$mc_rf.v:311$1567 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$cs_reg$mc_rf.v:351$1585 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$dv_r_reg$mc_timing.v:786$5378 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$data_oe_reg$mc_timing.v:561$5189 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$data_oe_r_reg$mc_timing.v:553$5184 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$data_oe_r2_reg$mc_timing.v:557$5186 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_r_reg$mc_timing.v:526$5169 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_del_reg$mc_timing.v:530$5171 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_asserted_reg$mc_timing.v:538$5176 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_asserted2_reg$mc_timing.v:543$5179 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u5.$verific$burst_cnt_reg$mc_timing.v:766$5360 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$ap_en_reg$mc_timing.v:777$5370 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$ack_cnt_reg$mc_timing.v:629$5238 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_req_reg$mc_refresh.v:208$5911 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_en_reg$mc_refresh.v:160$5863 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_early_reg$mc_refresh.v:173$5875 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_cnt_reg$mc_refresh.v:189$5882 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_ce_reg$mc_refresh.v:182$5877 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$ps_cnt_reg$mc_refresh.v:167$5869 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u3.\u0.$verific$wr_adr_reg$mc_rd_fifo.v:108$5950 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u3.\u0.$verific$rd_adr_reg$mc_rd_fifo.v:101$5946 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r3_reg$mc_rd_fifo.v:120$5963 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r2_reg$mc_rd_fifo.v:117$5960 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r1_reg$mc_rd_fifo.v:114$5957 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r0_reg$mc_rd_fifo.v:111$5954 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$mc_dp_o_reg$mc_dp.v:229$4484 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$mc_data_o_reg$mc_dp.v:197$4461 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$byte2_reg$mc_dp.v:213$4474 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$byte1_reg$mc_dp.v:210$4472 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$byte0_reg$mc_dp.v:205$4464 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csr_r_reg$mc_rf.v:298$1556_1 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank3_open_reg$mc_obct.v:169$4276 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank2_open_reg$mc_obct.v:160$4269 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank1_open_reg$mc_obct.v:151$4262 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank0_open_reg$mc_obct.v:142$4255 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b3_last_row_reg$mc_obct.v:196$4294 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b2_last_row_reg$mc_obct.v:193$4292 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b1_last_row_reg$mc_obct.v:190$4290 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b0_last_row_reg$mc_obct.v:187$4288 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank3_open_reg$mc_obct.v:169$4276 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank2_open_reg$mc_obct.v:160$4269 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank1_open_reg$mc_obct.v:151$4262 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank0_open_reg$mc_obct.v:142$4255 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b3_last_row_reg$mc_obct.v:196$4294 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b2_last_row_reg$mc_obct.v:193$4292 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b1_last_row_reg$mc_obct.v:190$4290 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b0_last_row_reg$mc_obct.v:187$4288 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.\u0.$verific$out_r_reg$mc_incn_r.v:92$3815 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$sram_addr_reg$mc_adr_sel.v:168$3629 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$row_adr_reg$mc_adr_sel.v:238$3651 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$col_adr_reg$mc_adr_sel.v:205$3646 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$bank_adr_reg$mc_adr_sel.v:272$3655 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$acs_addr_reg$mc_adr_sel.v:178$3636 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u1.$verific$tms_reg$mc_cs_rf.v:190$3721 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$lmr_req_we_reg$mc_cs_rf.v:198$3723 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$lmr_req_reg$mc_cs_rf.v:206$3729 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$inited_reg$mc_cs_rf.v:227$3740 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$init_req_we_reg$mc_cs_rf.v:214$3731 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$init_req_reg$mc_cs_rf.v:222$3738 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u1.$verific$csc_reg$mc_cs_rf.v:184$3717 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u0.$verific$tms_reg$mc_cs_rf.v:190$3443 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$lmr_req_we_reg$mc_cs_rf.v:198$3445 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$lmr_req_reg$mc_cs_rf.v:206$3451 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$inited_reg$mc_cs_rf.v:227$3462 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$init_req_we_reg$mc_cs_rf.v:214$3453 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$init_req_reg$mc_cs_rf.v:222$3460 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u0.$verific$csc_reg$mc_cs_rf.v:184$3438 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$wp_err_reg$mc_rf.v:360$1598 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.$verific$wb_addr_r_reg$mc_rf.v:282$1538 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$tms_reg$mc_rf.v:402$1637 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$sreq_cs_le_reg$mc_rf.v:482$1686 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$spec_req_cs_reg$mc_rf.v:478$1679 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$sp_tms_reg$mc_rf.v:444$1656 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$sp_csc_reg$mc_rf.v:423$1646 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rst_r3_reg$mc_rf.v:330$1573 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rst_r2_reg$mc_rf.v:326$1571 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rst_r1_reg$mc_rf.v:322$1569 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rf_we_reg$mc_rf.v:286$1547 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.$verific$poc_reg$mc_rf.v:333$1576 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$lmr_req_reg$mc_rf.v:503$1724 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$init_req_reg$mc_rf.v:498$1715 ($aldff) from module mc_top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 24 unused cells and 98 unused wires.
<suppressed ~25 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~148 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~148 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\u7.$verific$mc_dqm_reg$mc_mem_if.v:267$6233 ($dff) from module mc_top (D = $flatten\u7.$verific$n280$6181, Q = \u7.mc_dqm, rval = 4'1111).
Adding EN signal on $flatten\u7.$verific$mc_dqm_r_reg$mc_mem_if.v:258$6225 ($dff) from module mc_top (D = \wb_sel_i, Q = \u7.mc_dqm_r).
Adding SRST signal on $flatten\u7.$verific$mc_addr_reg$mc_mem_if.v:254$6221 ($dff) from module mc_top (D = $flatten\u1.$verific$n134$3491 [23:15], Q = \u7.mc_addr [23:15], rval = 9'000000000).
Adding SRST signal on $flatten\u7.$verific$mc_addr_reg$mc_mem_if.v:254$6221 ($dff) from module mc_top (D = \u1.mc_addr_d [10], Q = \u7.mc_addr [10], rval = 1'1).
Adding EN signal on $flatten\u6.$verific$wr_hold_reg$mc_wb_if.v:216$6114 ($adff) from module mc_top (D = \wb_we_i, Q = \u6.wr_hold).
Adding EN signal on $flatten\u6.$verific$wb_first_r_reg$mc_wb_if.v:211$6110 ($adff) from module mc_top (D = $flatten\u6.$verific$n93$6022, Q = \u6.wb_first_r).
Adding EN signal on $flatten\u6.$verific$rmw_en_reg$mc_wb_if.v:171$6054 ($adff) from module mc_top (D = $flatten\u6.$verific$n12$5977, Q = \u6.rmw_en).
Adding EN signal on $flatten\u5.$verific$wr_cycle_reg$mc_timing.v:604$5215 ($adff) from module mc_top (D = $flatten\u5.$verific$n192$4565, Q = \u5.wr_cycle).
Adding EN signal on $flatten\u5.$verific$wb_stb_first_reg$mc_timing.v:805$5386 ($adff) from module mc_top (D = $flatten\u5.$verific$n1019$4637, Q = \u5.wb_stb_first).
Adding EN signal on $flatten\u5.$verific$wb_cycle_reg$mc_timing.v:612$5220 ($adff) from module mc_top (D = $flatten\u5.$verific$n201$4569, Q = \u5.wb_cycle).
Adding EN signal on $flatten\u5.$verific$timer_reg$mc_timing.v:732$5335 ($adff) from module mc_top (D = $flatten\u5.$verific$n799$4990, Q = \u5.timer).
Adding EN signal on $flatten\u5.$verific$timer2_reg$mc_timing.v:693$5288 ($dff) from module mc_top (D = $flatten\u5.$verific$n537$4965, Q = \u5.timer2).
Adding EN signal on $flatten\u5.$verific$susp_sel_r_reg$mc_timing.v:664$5264 ($adff) from module mc_top (D = $flatten\u5.$verific$n303$4593, Q = \u5.susp_sel_r).
Adding EN signal on $flatten\u5.$verific$state_reg$mc_timing.v:813$5389 ($adff) from module mc_top (D = \u5.next_state, Q = \u5.state).
Adding SRST signal on $flatten\u5.$verific$pack_le2_reg$mc_timing.v:495$5147 ($dff) from module mc_top (D = \u5.bw8, Q = \u5.pack_le2, rval = 1'0).
Adding EN signal on $flatten\u5.$verific$mc_adv_r_reg$mc_timing.v:505$5153 ($adff) from module mc_top (D = \u5.mc_adv_r1, Q = \u5.mc_adv_r).
Adding EN signal on $flatten\u5.$verific$mc_adv_r1_reg$mc_timing.v:500$5150 ($adff) from module mc_top (D = \u5.mc_adv, Q = \u5.mc_adv_r1).
Adding SRST signal on $flatten\u5.$verific$ir_cnt_reg$mc_timing.v:744$5345 ($dff) from module mc_top (D = $flatten\u5.$verific$n839$4994, Q = \u5.ir_cnt, rval = 4'0010).
Adding EN signal on $auto$ff.cc:262:slice$6441 ($sdff) from module mc_top (D = $flatten\u5.$verific$n829$4992, Q = \u5.ir_cnt).
Adding SRST signal on $flatten\u5.$verific$cnt_reg$mc_timing.v:637$5252 ($dff) from module mc_top (D = $flatten\u5.$verific$n5216$4763, Q = \u5.cnt, rval = 1'0).
Adding EN signal on $flatten\u5.$verific$cmd_asserted_reg$mc_timing.v:538$5176 ($adff) from module mc_top (D = \u5.cmd [3], Q = \u5.cmd_asserted).
Adding EN signal on $flatten\u5.$verific$cmd_asserted2_reg$mc_timing.v:543$5179 ($adff) from module mc_top (D = \u5.cmd_asserted, Q = \u5.cmd_asserted2).
Adding EN signal on $flatten\u5.$verific$cke_r_reg$mc_timing.v:565$5191 ($dff) from module mc_top (D = \u5.cke_d, Q = \u5.cke_r).
Adding SRST signal on $flatten\u5.$verific$burst_cnt_reg$mc_timing.v:766$5360 ($dff) from module mc_top (D = $flatten\u5.$verific$n945$5002, Q = \u5.burst_cnt, rval = 11'00000000100).
Adding EN signal on $auto$ff.cc:262:slice$6453 ($sdff) from module mc_top (D = $flatten\u5.$verific$n945$5002, Q = \u5.burst_cnt).
Adding EN signal on $flatten\u5.$verific$ap_en_reg$mc_timing.v:777$5370 ($adff) from module mc_top (D = $flatten\u5.$verific$n991$4625, Q = \u5.ap_en).
Adding EN signal on $flatten\u5.$verific$ack_cnt_reg$mc_timing.v:629$5238 ($adff) from module mc_top (D = $flatten\u5.$verific$n256$4947, Q = \u5.ack_cnt).
Adding EN signal on $flatten\u4.$verific$rfr_req_reg$mc_refresh.v:208$5911 ($adff) from module mc_top (D = $flatten\u4.$verific$n183$5847, Q = \u4.rfr_req).
Adding EN signal on $flatten\u4.$verific$rfr_cnt_reg$mc_refresh.v:189$5882 ($adff) from module mc_top (D = $flatten\u4.$verific$n134$5856, Q = \u4.rfr_cnt).
Adding EN signal on $flatten\u4.$verific$ps_cnt_reg$mc_refresh.v:167$5869 ($adff) from module mc_top (D = $flatten\u4.$verific$n56$5852, Q = \u4.ps_cnt).
Adding EN signal on $flatten\u3.\u0.$verific$wr_adr_reg$mc_rd_fifo.v:108$5950 ($adff) from module mc_top (D = $flatten\u3.\u0.$verific$n56$5929, Q = \u3.u0.wr_adr).
Adding EN signal on $flatten\u3.\u0.$verific$rd_adr_reg$mc_rd_fifo.v:101$5946 ($adff) from module mc_top (D = $flatten\u3.\u0.$verific$n25$5926, Q = \u3.u0.rd_adr).
Adding EN signal on $flatten\u3.\u0.$verific$r3_reg$mc_rd_fifo.v:120$5963 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r3).
Adding EN signal on $flatten\u3.\u0.$verific$r2_reg$mc_rd_fifo.v:117$5960 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r2).
Adding EN signal on $flatten\u3.\u0.$verific$r1_reg$mc_rd_fifo.v:114$5957 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r1).
Adding EN signal on $flatten\u3.\u0.$verific$r0_reg$mc_rd_fifo.v:111$5954 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r0).
Adding EN signal on $flatten\u3.$verific$mc_dp_o_reg$mc_dp.v:229$4484 ($dff) from module mc_top (D = { $flatten\u3.$verific$n534$4324 $flatten\u3.$verific$n535$4325 $flatten\u3.$verific$n536$4326 $flatten\u3.$verific$n537$4327 }, Q = \u3.mc_dp_o).
Adding EN signal on $flatten\u3.$verific$mc_data_o_reg$mc_dp.v:197$4461 ($dff) from module mc_top (D = \wb_data_i, Q = \u3.mc_data_o).
Adding EN signal on $flatten\u3.$verific$byte2_reg$mc_dp.v:213$4474 ($dff) from module mc_top (D = \u7.mc_data_ir [7:0], Q = \u3.byte2).
Adding EN signal on $flatten\u3.$verific$byte1_reg$mc_dp.v:210$4472 ($dff) from module mc_top (D = $flatten\u3.$verific$n318$4355, Q = \u3.byte1).
Adding EN signal on $flatten\u3.$verific$byte0_reg$mc_dp.v:205$4464 ($dff) from module mc_top (D = \u7.mc_data_ir [7:0], Q = \u3.byte0).
Adding EN signal on $flatten\u2.\u1.$verific$bank3_open_reg$mc_obct.v:169$4276 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n54$4223, Q = \u2.u1.bank3_open).
Adding EN signal on $flatten\u2.\u1.$verific$bank2_open_reg$mc_obct.v:160$4269 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n41$4217, Q = \u2.u1.bank2_open).
Adding EN signal on $flatten\u2.\u1.$verific$bank1_open_reg$mc_obct.v:151$4262 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n28$4211, Q = \u2.u1.bank1_open).
Adding EN signal on $flatten\u2.\u1.$verific$bank0_open_reg$mc_obct.v:142$4255 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n15$4205, Q = \u2.u1.bank0_open).
Adding EN signal on $flatten\u2.\u1.$verific$b3_last_row_reg$mc_obct.v:196$4294 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b3_last_row).
Adding EN signal on $flatten\u2.\u1.$verific$b2_last_row_reg$mc_obct.v:193$4292 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b2_last_row).
Adding EN signal on $flatten\u2.\u1.$verific$b1_last_row_reg$mc_obct.v:190$4290 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b1_last_row).
Adding EN signal on $flatten\u2.\u1.$verific$b0_last_row_reg$mc_obct.v:187$4288 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b0_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$bank3_open_reg$mc_obct.v:169$4276 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n54$4223, Q = \u2.u0.bank3_open).
Adding EN signal on $flatten\u2.\u0.$verific$bank2_open_reg$mc_obct.v:160$4269 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n41$4217, Q = \u2.u0.bank2_open).
Adding EN signal on $flatten\u2.\u0.$verific$bank1_open_reg$mc_obct.v:151$4262 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n28$4211, Q = \u2.u0.bank1_open).
Adding EN signal on $flatten\u2.\u0.$verific$bank0_open_reg$mc_obct.v:142$4255 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n15$4205, Q = \u2.u0.bank0_open).
Adding EN signal on $flatten\u2.\u0.$verific$b3_last_row_reg$mc_obct.v:196$4294 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b3_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$b2_last_row_reg$mc_obct.v:193$4292 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b2_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$b1_last_row_reg$mc_obct.v:190$4290 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b1_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$b0_last_row_reg$mc_obct.v:187$4288 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b0_last_row).
Adding EN signal on $flatten\u1.$verific$sram_addr_reg$mc_adr_sel.v:168$3629 ($dff) from module mc_top (D = \wb_addr_i [25:2], Q = \u1.sram_addr).
Adding EN signal on $flatten\u1.$verific$row_adr_reg$mc_adr_sel.v:238$3651 ($dff) from module mc_top (D = $flatten\u1.$verific$n975$3534, Q = \u1.row_adr).
Adding EN signal on $flatten\u1.$verific$col_adr_reg$mc_adr_sel.v:205$3646 ($dff) from module mc_top (D = $flatten\u1.$verific$n660$3512, Q = \u1.col_adr).
Adding EN signal on $flatten\u1.$verific$bank_adr_reg$mc_adr_sel.v:272$3655 ($dff) from module mc_top (D = $flatten\u1.$verific$n1079$3556, Q = \u1.bank_adr).
Adding EN signal on $flatten\u1.$verific$acs_addr_reg$mc_adr_sel.v:178$3636 ($dff) from module mc_top (D = $flatten\u1.$verific$n462$3500, Q = \u1.acs_addr).
Adding SRST signal on $flatten\u0.\u1.$verific$tms_reg$mc_cs_rf.v:190$3721 ($dff) from module mc_top (D = $flatten\u0.\u1.$verific$n269$3694, Q = \u0.u1.tms, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$6526 ($sdff) from module mc_top (D = \wb_data_i, Q = \u0.u1.tms).
Adding EN signal on $flatten\u0.\u1.$verific$lmr_req_reg$mc_cs_rf.v:206$3729 ($adff) from module mc_top (D = $flatten\u0.\u1.$verific$n381$3674, Q = \u0.u1.lmr_req).
Adding EN signal on $flatten\u0.\u1.$verific$inited_reg$mc_cs_rf.v:227$3740 ($adff) from module mc_top (D = 1'1, Q = \u0.u1.inited).
Adding EN signal on $flatten\u0.\u1.$verific$init_req_reg$mc_cs_rf.v:222$3738 ($adff) from module mc_top (D = $flatten\u0.\u1.$verific$n400$3681, Q = \u0.u1.init_req).
Adding SRST signal on $flatten\u0.\u1.$verific$csc_reg$mc_cs_rf.v:184$3717 ($dff) from module mc_top (D = $flatten\u0.\u1.$verific$n101$3692, Q = \u0.u1.csc, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$6535 ($sdff) from module mc_top (D = \wb_data_i, Q = \u0.u1.csc).
Adding SRST signal on $flatten\u0.\u0.$verific$tms_reg$mc_cs_rf.v:190$3443 ($dff) from module mc_top (D = $flatten\u0.\u0.$verific$n270$3414, Q = \u0.u0.tms, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$6537 ($sdff) from module mc_top (D = \wb_data_i, Q = \u0.u0.tms).
Adding EN signal on $flatten\u0.\u0.$verific$lmr_req_reg$mc_cs_rf.v:206$3451 ($adff) from module mc_top (D = $flatten\u0.\u0.$verific$n382$3393, Q = \u0.u0.lmr_req).
Adding EN signal on $flatten\u0.\u0.$verific$inited_reg$mc_cs_rf.v:227$3462 ($adff) from module mc_top (D = 1'1, Q = \u0.u0.inited).
Adding EN signal on $flatten\u0.\u0.$verific$init_req_reg$mc_cs_rf.v:222$3460 ($adff) from module mc_top (D = $flatten\u0.\u0.$verific$n401$3400, Q = \u0.u0.init_req).
Adding SRST signal on $flatten\u0.\u0.$verific$csc_reg$mc_cs_rf.v:184$3438 ($dff) from module mc_top (D = { $flatten\u0.\u0.$verific$n102$3411 [31:6] $flatten\u0.\u0.$verific$n102$3411 [3] }, Q = { \u0.u0.csc [31:6] \u0.u0.csc [3] }, rval = 27'000000000000000000000000000).
Adding EN signal on $flatten\u0.\u0.$verific$csc_reg$mc_cs_rf.v:184$3438 ($dff) from module mc_top (D = { $flatten\u0.\u0.$verific$n135$3412 [5:4] $flatten\u0.\u0.$verific$n135$3412 [2:0] }, Q = { \u0.u0.csc [5:4] \u0.u0.csc [2:0] }).
Adding EN signal on $auto$ff.cc:262:slice$6546 ($sdff) from module mc_top (D = { \wb_data_i [31:6] \wb_data_i [3] }, Q = { \u0.u0.csc [31:6] \u0.u0.csc [3] }).
Adding EN signal on $flatten\u0.$verific$wp_err_reg$mc_rf.v:360$1598 ($adff) from module mc_top (D = $flatten\u0.$verific$n1078$1365, Q = \u0.wp_err).
Adding EN signal on $flatten\u0.$verific$tms_reg$mc_rf.v:402$1637 ($adff) from module mc_top (D = $flatten\u0.$verific$n2176$1505, Q = \u0.tms).
Adding EN signal on $flatten\u0.$verific$spec_req_cs_reg$mc_rf.v:478$1679 ($adff) from module mc_top (D = { \u0.spec_req_cs_d [7:1] \u0.spec_req_cs_t [0] }, Q = \u0.spec_req_cs).
Adding EN signal on $flatten\u0.$verific$sp_tms_reg$mc_rf.v:444$1656 ($adff) from module mc_top (D = $flatten\u0.$verific$n3371$1523, Q = \u0.sp_tms).
Adding EN signal on $flatten\u0.$verific$sp_csc_reg$mc_rf.v:423$1646 ($adff) from module mc_top (D = $flatten\u0.$verific$n2773$1515, Q = \u0.sp_csc).
Adding EN signal on $flatten\u0.$verific$poc_reg$mc_rf.v:333$1576 ($dff) from module mc_top (D = \u7.mc_data_ir [31:0], Q = \u0.poc).
Adding EN signal on $flatten\u0.$verific$csr_r_reg$mc_rf.v:298$1556_1 ($adff) from module mc_top (D = \wb_data_i [10:1], Q = \u0.csr_r [10:1]).
Adding EN signal on $flatten\u0.$verific$csr_r2_reg$mc_rf.v:292$1553 ($adff) from module mc_top (D = \wb_data_i [31:24], Q = \u0.csr_r2).
Adding EN signal on $flatten\u0.$verific$csc_reg$mc_rf.v:381$1617 ($adff) from module mc_top (D = $flatten\u0.$verific$n1578$1488, Q = \u0.csc).
Adding EN signal on $flatten\u0.$verific$csc_mask_r_reg$mc_rf.v:311$1567 ($adff) from module mc_top (D = \wb_data_i [10:0], Q = \u0.csc_mask_r).
Adding EN signal on $flatten\u0.$verific$cs_reg$mc_rf.v:351$1585 ($adff) from module mc_top (D = { 6'000000 \u0.cs1 \u0.cs0 }, Q = \u0.cs).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 70 unused cells and 63 unused wires.
<suppressed ~73 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~28 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~109 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 2 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.
Setting constant 1-bit at position 3 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.
Setting constant 1-bit at position 4 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.
Setting constant 1-bit at position 5 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.
Setting constant 1-bit at position 6 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.
Setting constant 1-bit at position 7 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~112 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6397 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6395 ($ne).
Removed top 2 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6423 ($ne).
Removed top 21 bits (of 32) from mux cell mc_top.$verific$mux_12$mc_top.v:280$24 ($mux).
Removed top 7 bits (of 8) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6315 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6300 ($ne).
Removed top 2 bits (of 4) from port B of cell mc_top.$flatten\u0.\u1.$verific$equal_14$mc_cs_rf.v:178$3708 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6431 ($ne).
Removed top 2 bits (of 4) from port B of cell mc_top.$flatten\u0.\u0.$verific$equal_14$mc_cs_rf.v:178$3428 ($eq).
Removed top 26 bits (of 32) from mux cell mc_top.$flatten\u0.\u0.$verific$mux_24$mc_cs_rf.v:184$3437 ($mux).
Removed top 6 bits (of 8) from mux cell mc_top.$flatten\u0.$verific$mux_317$mc_rf.v:510$1725 ($mux).
Removed top 6 bits (of 8) from port A of cell mc_top.$flatten\u0.$verific$and_352$mc_rf.v:453$1665 ($and).
Removed top 21 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6558 ($adffe).
Removed top 21 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_190$mc_rf.v:422$1644 ($mux).
Removed top 21 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_189$mc_rf.v:422$1643 ($mux).
Removed top 3 bits (of 5) from port B of cell mc_top.$flatten\u0.$verific$equal_78$mc_rf.v:310$1563 ($eq).
Removed top 20 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6562 ($adffe).
Removed top 1 bits (of 3) from port B of cell mc_top.$flatten\u0.$verific$equal_30$mc_rf.v:286$1540 ($eq).
Removed top 11 bits (of 12) from port B of cell mc_top.$flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$3813 ($add).
Removed top 11 bits (of 12) from mux cell mc_top.$flatten\u1.\u0.$verific$mux_10$mc_incn_r.v:97$3817 ($mux).
Removed top 9 bits (of 24) from mux cell mc_top.$flatten\u1.$verific$mux_31$mc_adr_sel.v:154$3575 ($mux).
Removed top 2 bits (of 3) from port B of cell mc_top.$flatten\u1.$verific$equal_25$mc_adr_sel.v:153$3570 ($eq).
Removed top 1 bits (of 3) from port B of cell mc_top.$flatten\u1.$verific$equal_23$mc_adr_sel.v:151$3568 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6554 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6351 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6349 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6345 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6343 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6341 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6339 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6337 ($ne).
Removed top 1 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6335 ($ne).
Removed top 4 bits (of 7) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6331 ($ne).
Removed top 2 bits (of 8) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6325 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$flatten\u2.\u0.$verific$equal_18$mc_obct.v:147$4256 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6433 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6450 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6435 ($ne).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u3.\u0.$verific$equal_41$mc_rd_fifo.v:124$5964 ($eq).
Removed top 2 bits (of 4) from port B of cell mc_top.$flatten\u3.\u0.$verific$equal_42$mc_rd_fifo.v:125$5965 ($eq).
Removed top 1 bits (of 4) from port B of cell mc_top.$flatten\u3.\u0.$verific$equal_43$mc_rd_fifo.v:126$5966 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$flatten\u3.$verific$equal_32$mc_dp.v:210$4467 ($eq).
Removed top 2 bits (of 3) from port B of cell mc_top.$flatten\u3.$verific$equal_7$mc_dp.v:173$4370 ($eq).
Removed top 7 bits (of 8) from port B of cell mc_top.$flatten\u4.$verific$add_32$mc_refresh.v:189$5878 ($add).
Removed top 7 bits (of 8) from port B of cell mc_top.$flatten\u4.$verific$add_11$mc_refresh.v:167$5865 ($add).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6387 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6385 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6381 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6379 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6375 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6371 ($ne).
Removed top 2 bits (of 4) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6369 ($ne).
Removed top 2 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6367 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6365 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6363 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6361 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6357 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6355 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6359 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6353 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6391 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6421 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6419 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6417 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6415 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6411 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6425 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6409 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6407 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6405 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6403 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6401 ($ne).
Removed top 33 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_906$mc_timing.v:1721$5708 ($eq).
Removed top 34 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_905$mc_timing.v:1714$5707 ($eq).
Removed top 35 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_904$mc_timing.v:1706$5706 ($eq).
Removed top 36 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_903$mc_timing.v:1695$5705 ($eq).
Removed top 37 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_902$mc_timing.v:1690$5704 ($eq).
Removed top 38 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_901$mc_timing.v:1681$5703 ($eq).
Removed top 30 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_900$mc_timing.v:1667$5702 ($eq).
Removed top 31 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_899$mc_timing.v:1660$5701 ($eq).
Removed top 32 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_898$mc_timing.v:1654$5700 ($eq).
Removed top 39 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_897$mc_timing.v:1642$5699 ($eq).
Removed top 40 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_896$mc_timing.v:1632$5698 ($eq).
Removed top 41 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_895$mc_timing.v:1620$5697 ($eq).
Removed top 42 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_894$mc_timing.v:1614$5696 ($eq).
Removed top 43 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_893$mc_timing.v:1603$5695 ($eq).
Removed top 44 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_892$mc_timing.v:1597$5694 ($eq).
Removed top 45 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_891$mc_timing.v:1588$5693 ($eq).
Removed top 46 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_890$mc_timing.v:1582$5692 ($eq).
Removed top 47 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_889$mc_timing.v:1572$5691 ($eq).
Removed top 48 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_888$mc_timing.v:1559$5690 ($eq).
Removed top 49 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_887$mc_timing.v:1539$5689 ($eq).
Removed top 50 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_886$mc_timing.v:1532$5688 ($eq).
Removed top 53 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_885$mc_timing.v:1522$5687 ($eq).
Removed top 54 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_884$mc_timing.v:1506$5686 ($eq).
Removed top 55 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_883$mc_timing.v:1501$5685 ($eq).
Removed top 56 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_882$mc_timing.v:1493$5684 ($eq).
Removed top 51 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_881$mc_timing.v:1458$5683 ($eq).
Removed top 52 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_880$mc_timing.v:1430$5682 ($eq).
Removed top 57 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_879$mc_timing.v:1408$5681 ($eq).
Removed top 58 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_878$mc_timing.v:1388$5680 ($eq).
Removed top 59 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_877$mc_timing.v:1377$5679 ($eq).
Removed top 60 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_876$mc_timing.v:1367$5678 ($eq).
Removed top 61 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_875$mc_timing.v:1349$5677 ($eq).
Removed top 14 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_874$mc_timing.v:1338$5676 ($eq).
Removed top 15 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_873$mc_timing.v:1332$5675 ($eq).
Removed top 16 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_872$mc_timing.v:1321$5674 ($eq).
Removed top 17 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_871$mc_timing.v:1309$5673 ($eq).
Removed top 18 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_870$mc_timing.v:1301$5672 ($eq).
Removed top 25 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_869$mc_timing.v:1294$5671 ($eq).
Removed top 26 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_868$mc_timing.v:1288$5670 ($eq).
Removed top 27 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_867$mc_timing.v:1281$5669 ($eq).
Removed top 19 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_866$mc_timing.v:1271$5668 ($eq).
Removed top 20 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_865$mc_timing.v:1261$5667 ($eq).
Removed top 21 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_864$mc_timing.v:1250$5666 ($eq).
Removed top 22 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_863$mc_timing.v:1241$5665 ($eq).
Removed top 23 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_862$mc_timing.v:1230$5664 ($eq).
Removed top 24 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_861$mc_timing.v:1221$5663 ($eq).
Removed top 28 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_860$mc_timing.v:1207$5662 ($eq).
Removed top 29 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_859$mc_timing.v:1199$5661 ($eq).
Removed top 6 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_858$mc_timing.v:1180$5660 ($eq).
Removed top 7 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_857$mc_timing.v:1158$5659 ($eq).
Removed top 8 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_856$mc_timing.v:1151$5658 ($eq).
Removed top 9 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_855$mc_timing.v:1136$5657 ($eq).
Removed top 10 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_854$mc_timing.v:1125$5656 ($eq).
Removed top 11 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_853$mc_timing.v:1116$5655 ($eq).
Removed top 12 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_852$mc_timing.v:1105$5654 ($eq).
Removed top 13 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_851$mc_timing.v:1095$5653 ($eq).
Removed top 1 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_849$mc_timing.v:1074$5651 ($eq).
Removed top 2 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_848$mc_timing.v:1064$5650 ($eq).
Removed top 3 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_847$mc_timing.v:1058$5649 ($eq).
Removed top 4 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_846$mc_timing.v:1046$5648 ($eq).
Removed top 5 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_845$mc_timing.v:1036$5647 ($eq).
Removed top 62 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_844$mc_timing.v:1024$5646 ($eq).
Removed top 63 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_843$mc_timing.v:1017$5645 ($eq).
Removed top 64 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_842$mc_timing.v:900$5644 ($eq).
Removed top 65 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_841$mc_timing.v:895$5643 ($eq).
Removed top 2 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6427 ($ne).
Removed top 1 bits (of 3) from port B of cell mc_top.$flatten\u5.$verific$equal_381$mc_timing.v:908$5394 ($eq).
Removed top 10 bits (of 11) from port B of cell mc_top.$flatten\u5.$verific$sub_327$mc_timing.v:766$5355 ($sub).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6399 ($ne).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u5.$verific$sub_311$mc_timing.v:744$5341 ($sub).
Removed top 7 bits (of 8) from port B of cell mc_top.$flatten\u5.$verific$sub_289$mc_timing.v:732$5322 ($sub).
Removed top 2 bits (of 4) from port A of cell mc_top.$flatten\u5.$verific$add_272$mc_timing.v:704$5307 ($add).
Removed top 8 bits (of 9) from port B of cell mc_top.$flatten\u5.$verific$sub_241$mc_timing.v:693$5278 ($sub).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u5.$verific$mux_230$mc_timing.v:676$5269 ($mux).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u5.$verific$sub_181$mc_timing.v:629$5233 ($sub).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u5.$verific$add_177$mc_timing.v:627$5229 ($add).
Removed top 1 bits (of 2) from port B of cell mc_top.$flatten\u5.$verific$equal_62$mc_timing.v:509$5156 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6393 ($ne).
Removed top 6 bits (of 8) from port Y of cell mc_top.$flatten\u7.$verific$inv_159$mc_mem_if.v:354$6250 ($not).
Removed top 6 bits (of 8) from port A of cell mc_top.$flatten\u7.$verific$inv_159$mc_mem_if.v:354$6250 ($not).
Removed top 6 bits (of 8) from port Y of cell mc_top.$flatten\u7.$verific$and_160$mc_mem_if.v:354$6249 ($and).
Removed top 6 bits (of 8) from port A of cell mc_top.$flatten\u7.$verific$and_160$mc_mem_if.v:354$6249 ($and).
Removed top 6 bits (of 8) from port B of cell mc_top.$flatten\u7.$verific$and_160$mc_mem_if.v:354$6249 ($and).
Removed top 6 bits (of 8) from mux cell mc_top.$flatten\u7.$verific$mux_168$mc_mem_if.v:353$6247 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$verific$mux_10$mc_top.v:279$22 ($mux).
Removed top 26 bits (of 32) from mux cell mc_top.$flatten\u0.\u0.$verific$mux_23$mc_cs_rf.v:184$3436 ($mux).
Removed top 20 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_147$mc_rf.v:380$1615 ($mux).
Removed top 20 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_146$mc_rf.v:380$1614 ($mux).
Removed top 4 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6557 ($adffe).
Removed top 4 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6555 ($adffe).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_212$mc_rf.v:443$1654 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_169$mc_rf.v:401$1635 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_211$mc_rf.v:443$1653 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_168$mc_rf.v:401$1634 ($mux).
Removed top 20 bits (of 32) from wire mc_top.$flatten\u0.$verific$n1545$1487.
Removed top 20 bits (of 32) from wire mc_top.$flatten\u0.$verific$n1578$1488.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2143$1504.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2176$1505.
Removed top 21 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2740$1514.
Removed top 21 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2773$1515.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n3338$1522.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n3371$1523.
Removed top 26 bits (of 32) from wire mc_top.$flatten\u0.\u0.$verific$n102$3411.
Removed top 26 bits (of 32) from wire mc_top.$flatten\u0.\u0.$verific$n135$3412.
Removed top 7 bits (of 46) from wire mc_top.$flatten\u5.$verific$n3968$5051.
Removed top 3 bits (of 4) from wire mc_top.$flatten\u5.$verific$n6553$5094.
Removed top 2 bits (of 27) from wire mc_top.$flatten\u5.$verific$n7174$5105.
Removed top 3 bits (of 4) from wire mc_top.$flatten\u7.$verific$n275$6180.
Removed top 6 bits (of 8) from wire mc_top.$flatten\u7.$verific$n395$6185.
Removed top 6 bits (of 8) from wire mc_top.$flatten\u7.$verific$n397$6187.
Removed top 6 bits (of 8) from wire mc_top.cs.
Removed top 20 bits (of 32) from wire mc_top.csc.
Removed top 21 bits (of 32) from wire mc_top.csc_s.
Removed top 9 bits (of 24) from wire mc_top.mc_addr_d.
Removed top 4 bits (of 32) from wire mc_top.tms.
Removed top 4 bits (of 32) from wire mc_top.tms_s.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 64 unused cells and 118 unused wires.
<suppressed ~65 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mc_top:
  creating $macc model for $flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$3813 ($add).
  creating $macc model for $flatten\u1.\u0.$verific$add_8$mc_incn_r.v:94$3816 ($add).
  creating $macc model for $flatten\u4.$verific$add_11$mc_refresh.v:167$5865 ($add).
  creating $macc model for $flatten\u4.$verific$add_32$mc_refresh.v:189$5878 ($add).
  creating $macc model for $flatten\u5.$verific$add_177$mc_timing.v:627$5229 ($add).
  creating $macc model for $flatten\u5.$verific$add_272$mc_timing.v:704$5307 ($add).
  creating $macc model for $flatten\u5.$verific$sub_181$mc_timing.v:629$5233 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_241$mc_timing.v:693$5278 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_289$mc_timing.v:732$5322 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_311$mc_timing.v:744$5341 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_327$mc_timing.v:766$5355 ($sub).
  creating $alu model for $macc $flatten\u5.$verific$sub_327$mc_timing.v:766$5355.
  creating $alu model for $macc $flatten\u5.$verific$sub_311$mc_timing.v:744$5341.
  creating $alu model for $macc $flatten\u5.$verific$sub_289$mc_timing.v:732$5322.
  creating $alu model for $macc $flatten\u5.$verific$sub_241$mc_timing.v:693$5278.
  creating $alu model for $macc $flatten\u5.$verific$sub_181$mc_timing.v:629$5233.
  creating $alu model for $macc $flatten\u5.$verific$add_272$mc_timing.v:704$5307.
  creating $alu model for $macc $flatten\u5.$verific$add_177$mc_timing.v:627$5229.
  creating $alu model for $macc $flatten\u4.$verific$add_32$mc_refresh.v:189$5878.
  creating $alu model for $macc $flatten\u4.$verific$add_11$mc_refresh.v:167$5865.
  creating $alu model for $macc $flatten\u1.\u0.$verific$add_8$mc_incn_r.v:94$3816.
  creating $alu model for $macc $flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$3813.
  creating $alu cell for $flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$3813: $auto$alumacc.cc:485:replace_alu$7172
  creating $alu cell for $flatten\u1.\u0.$verific$add_8$mc_incn_r.v:94$3816: $auto$alumacc.cc:485:replace_alu$7175
  creating $alu cell for $flatten\u4.$verific$add_11$mc_refresh.v:167$5865: $auto$alumacc.cc:485:replace_alu$7178
  creating $alu cell for $flatten\u4.$verific$add_32$mc_refresh.v:189$5878: $auto$alumacc.cc:485:replace_alu$7181
  creating $alu cell for $flatten\u5.$verific$add_177$mc_timing.v:627$5229: $auto$alumacc.cc:485:replace_alu$7184
  creating $alu cell for $flatten\u5.$verific$add_272$mc_timing.v:704$5307: $auto$alumacc.cc:485:replace_alu$7187
  creating $alu cell for $flatten\u5.$verific$sub_181$mc_timing.v:629$5233: $auto$alumacc.cc:485:replace_alu$7190
  creating $alu cell for $flatten\u5.$verific$sub_241$mc_timing.v:693$5278: $auto$alumacc.cc:485:replace_alu$7193
  creating $alu cell for $flatten\u5.$verific$sub_289$mc_timing.v:732$5322: $auto$alumacc.cc:485:replace_alu$7196
  creating $alu cell for $flatten\u5.$verific$sub_311$mc_timing.v:744$5341: $auto$alumacc.cc:485:replace_alu$7199
  creating $alu cell for $flatten\u5.$verific$sub_327$mc_timing.v:766$5355: $auto$alumacc.cc:485:replace_alu$7202
  created 11 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~117 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7144: { $flatten\u5.$verific$n7786$4858 $flatten\u5.$verific$n7800$4872 $flatten\u5.$verific$n7802$4874 $flatten\u5.$verific$n7804$4876 $flatten\u5.$verific$n7808$4880 $flatten\u5.$verific$n7812$4884 $auto$rtlil.cc:2393:Or$7133 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7168: { $flatten\u5.$verific$n7786$4858 $flatten\u5.$verific$n7792$4864 $flatten\u5.$verific$n7793$4865 $flatten\u5.$verific$n7800$4872 $flatten\u5.$verific$n7802$4874 $flatten\u5.$verific$n7804$4876 $flatten\u5.$verific$n7808$4880 $flatten\u5.$verific$n7812$4884 $auto$rtlil.cc:2393:Or$7133 $auto$rtlil.cc:2393:Or$7141 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7066: { $flatten\u5.$verific$n7777$4849 $flatten\u5.$verific$n7778$4850 $flatten\u5.$verific$n7782$4854 $flatten\u5.$verific$n7783$4855 $auto$rtlil.cc:2393:Or$7031 $auto$rtlil.cc:2393:Or$7039 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7116: { $flatten\u5.$verific$n7769$4841 $flatten\u5.$verific$n7770$4842 $flatten\u5.$verific$n7773$4845 $flatten\u5.$verific$n7774$4846 $flatten\u5.$verific$n7777$4849 $flatten\u5.$verific$n7778$4850 $flatten\u5.$verific$n7782$4854 $flatten\u5.$verific$n7783$4855 $auto$rtlil.cc:2393:Or$7031 $auto$rtlil.cc:2393:Or$7039 $auto$rtlil.cc:2393:Or$7051 $auto$rtlil.cc:2393:Or$7059 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7112: { $flatten\u5.$verific$n7760$4832 $flatten\u5.$verific$n7762$4834 $flatten\u5.$verific$n7765$4837 $flatten\u5.$verific$n7766$4838 $auto$rtlil.cc:2393:Or$7075 $auto$rtlil.cc:2393:Or$7083 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6974: { $flatten\u5.$verific$n7810$4882 $flatten\u5.$verific$n7811$4883 $flatten\u5.$verific$n7814$4886 $flatten\u5.$verific$n7815$4887 $auto$rtlil.cc:2393:Or$6939 $auto$rtlil.cc:2393:Or$6947 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7022: { $flatten\u5.$verific$n7802$4874 $flatten\u5.$verific$n7803$4875 $flatten\u5.$verific$n7806$4878 $flatten\u5.$verific$n7807$4879 $flatten\u5.$verific$n7810$4882 $flatten\u5.$verific$n7811$4883 $flatten\u5.$verific$n7814$4886 $flatten\u5.$verific$n7815$4887 $auto$rtlil.cc:2393:Or$6939 $auto$rtlil.cc:2393:Or$6947 $auto$rtlil.cc:2393:Or$6959 $auto$rtlil.cc:2393:Or$6967 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7018: { $flatten\u5.$verific$n7794$4866 $flatten\u5.$verific$n7795$4867 $flatten\u5.$verific$n7798$4870 $flatten\u5.$verific$n7799$4871 $auto$rtlil.cc:2393:Or$6983 $auto$rtlil.cc:2393:Or$6991 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6800: { $auto$rtlil.cc:2393:Or$6787 $flatten\u5.$verific$n7790$4862 $flatten\u5.$verific$n7791$4863 $flatten\u5.$verific$n7792$4864 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7120: { $flatten\u5.$verific$n7786$4858 $flatten\u5.$verific$n7787$4859 $flatten\u5.$verific$n7790$4862 $flatten\u5.$verific$n7791$4863 $flatten\u5.$verific$n7794$4866 $flatten\u5.$verific$n7795$4867 $flatten\u5.$verific$n7798$4870 $flatten\u5.$verific$n7799$4871 $flatten\u5.$verific$n7802$4874 $flatten\u5.$verific$n7803$4875 $flatten\u5.$verific$n7806$4878 $flatten\u5.$verific$n7807$4879 $flatten\u5.$verific$n7810$4882 $flatten\u5.$verific$n7811$4883 $flatten\u5.$verific$n7814$4886 $flatten\u5.$verific$n7815$4887 $auto$rtlil.cc:2393:Or$6939 $auto$rtlil.cc:2393:Or$6947 $auto$rtlil.cc:2393:Or$6959 $auto$rtlil.cc:2393:Or$6967 $auto$rtlil.cc:2393:Or$6983 $auto$rtlil.cc:2393:Or$6991 $auto$rtlil.cc:2393:Or$7003 $auto$rtlil.cc:2393:Or$7011 }
  Optimizing cells in module \mc_top.
Performed a total of 10 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\u5.$verific$lmr_ack_reg$mc_timing.v:458$5124 ($dff) from module mc_top (D = $auto$rtlil.cc:2459:Mux$6669, Q = \u5.lmr_ack, rval = 1'1).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 2 unused cells and 7 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~117 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> techmap

3.22. Executing TECHMAP pass (map to technology primitives).

3.22.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.22.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$d707f0beb0b2a210c8cf7f6f49d0e464a0d63ba8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$d4fbf181fbf74ad2c33c84c81168c20bdbe88f93\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
No more expansions possible.
<suppressed ~2872 debug messages>

yosys> opt

3.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~9140 debug messages>

yosys> opt_merge -nomux

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~37899 debug messages>
Removed a total of 12633 cells.

yosys> opt_muxtree

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 83 unused cells and 1079 unused wires.
<suppressed ~85 debug messages>

yosys> opt_expr

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~10 debug messages>

3.23.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.23.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.24. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~994 debug messages>

yosys> opt_merge

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

yosys> opt_dff

3.24.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$9638 ($_DFFE_PP_) from module mc_top (D = $auto$simplemap.cc:309:simplemap_bmux$9736 [9], Q = \u1.col_adr [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9637 ($_DFFE_PP_) from module mc_top (D = $auto$simplemap.cc:309:simplemap_bmux$9777 [8], Q = \u1.col_adr [8], rval = 1'0).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 3 unused cells and 124 unused wires.
<suppressed ~4 debug messages>

3.24.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.24.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~276 debug messages>

yosys> opt_merge

3.24.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.24.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.24.10. Finished fast OPT passes.

yosys> memory_map

3.25. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge -nomux

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_share

3.26.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$32441 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$33791
        $auto$simplemap.cc:86:simplemap_bitop$34188

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10201 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$10122
        $auto$simplemap.cc:312:simplemap_bmux$10096

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16372 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16430
        $auto$simplemap.cc:86:simplemap_bitop$16433

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16373 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16419
        $auto$simplemap.cc:86:simplemap_bitop$16425

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16374 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16402
        $auto$simplemap.cc:86:simplemap_bitop$16411

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16375 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16381
        $auto$simplemap.cc:86:simplemap_bitop$16392


yosys> opt_dff

3.26.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~6 debug messages>

3.26.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce -full

3.26.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.26.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_share

3.26.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$35098 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$34409
        $auto$simplemap.cc:137:simplemap_reduce$16401

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16377 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16419
        $auto$simplemap.cc:86:simplemap_bitop$16430

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16378 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16381
        $auto$simplemap.cc:86:simplemap_bitop$16402


yosys> opt_dff

3.26.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~3 debug messages>

3.26.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce -full

3.26.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.26.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_share

3.26.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$35101 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$16389
        $auto$simplemap.cc:137:simplemap_reduce$16399

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16380 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16381
        $auto$simplemap.cc:86:simplemap_bitop$16419


yosys> opt_dff

3.26.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~2 debug messages>

3.26.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.26.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.26.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_share

3.26.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.26.34. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.26.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.26.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_share

3.26.38. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr -full

3.26.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.26.42. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.27. Executing ABC pass (technology mapping using ABC).

3.27.1. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Extracted 4909 gates and 5867 wires to a netlist network with 956 inputs and 487 outputs.

3.27.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/mc/abc_tmp.scr 
ABC:   #Luts =  1650  Max Lvl =  20  Avg Lvl =   7.44  [   0.82 sec. at Pass 0]
ABC:   #Luts =  1158  Max Lvl =  18  Avg Lvl =   7.36  [  41.03 sec. at Pass 1]
ABC:   #Luts =  1137  Max Lvl =  18  Avg Lvl =   7.12  [   6.72 sec. at Pass 2]
ABC:   #Luts =  1122  Max Lvl =  22  Avg Lvl =   8.34  [   9.60 sec. at Pass 3]
ABC:   #Luts =  1122  Max Lvl =  22  Avg Lvl =   8.34  [   7.01 sec. at Pass 4]
ABC:   #Luts =  1122  Max Lvl =  22  Avg Lvl =   8.34  [  12.69 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.27.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1137
ABC RESULTS:        internal signals:     4424
ABC RESULTS:           input signals:      956
ABC RESULTS:          output signals:      487
Removing temp directory.

yosys> opt

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 2913 unused wires.
<suppressed ~96 debug messages>

yosys> opt_expr

3.28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.28.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.28.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.29. Printing statistics.

=== mc_top ===

   Number of wires:               1718
   Number of wire bits:           6366
   Number of public wires:         710
   Number of public wire bits:    5309
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2193
     $_DFFE_PP0N_                    5
     $_DFFE_PP0P_                  157
     $_DFFE_PP1P_                   76
     $_DFFE_PP_                    430
     $_DFF_PP0_                     37
     $_DFF_PP1_                     15
     $_DFF_P_                      174
     $_SDFFCE_PP0P_                  2
     $_SDFFE_PN0P_                  13
     $_SDFFE_PN1P_                   2
     $_SDFFE_PP0P_                  91
     $_SDFFE_PP1P_                  32
     $_SDFF_PN0_                    10
     $_SDFF_PP0_                     1
     $_SDFF_PP1_                     6
     $lut                         1133
     $mux                            9


yosys> shregmap -minlen 8 -maxlen 20

3.30. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.31. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.32. Printing statistics.

=== mc_top ===

   Number of wires:               2013
   Number of wire bits:           6661
   Number of public wires:         710
   Number of public wire bits:    5309
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2488
     $_DFFE_PP0N_                    5
     $_DFFE_PP0P_                  589
     $_DFFE_PP1P_                   76
     $_DFF_PP0_                     37
     $_DFF_PP1_                     15
     $_DFF_P_                      329
     $_MUX_                        295
     $lut                         1133
     $mux                            9


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.33. Executing TECHMAP pass (map to technology primitives).

3.33.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.33.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.33.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~3048 debug messages>

yosys> opt_expr -mux_undef

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~27650 debug messages>

yosys> simplemap

3.35. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~8061 debug messages>
Removed a total of 2687 cells.

yosys> opt_dff -nodffe -nosdff

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 3 unused cells and 7661 unused wires.
<suppressed ~4 debug messages>

yosys> opt -nodffe -nosdff

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~587 debug messages>

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 145 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Extracted 4560 gates and 5516 wires to a netlist network with 954 inputs and 589 outputs.

3.41.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/mc/abc_tmp.scr 
ABC:   #Luts =  1248  Max Lvl =  21  Avg Lvl =   6.92  [   0.82 sec. at Pass 0]
ABC:   #Luts =  1248  Max Lvl =  21  Avg Lvl =   6.92  [  25.67 sec. at Pass 1]
ABC:   #Luts =  1248  Max Lvl =  21  Avg Lvl =   6.92  [   6.87 sec. at Pass 2]
ABC:   #Luts =  1248  Max Lvl =  21  Avg Lvl =   6.92  [  10.81 sec. at Pass 3]
ABC:   #Luts =  1248  Max Lvl =  21  Avg Lvl =   6.92  [   8.67 sec. at Pass 4]
ABC:   #Luts =  1248  Max Lvl =  21  Avg Lvl =   6.92  [  14.61 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1255
ABC RESULTS:        internal signals:     3973
ABC RESULTS:           input signals:      954
ABC RESULTS:          output signals:      589
Removing temp directory.

yosys> opt

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 4926 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \mc_top

3.43.2. Analyzing design hierarchy..
Top module:  \mc_top
Removed 0 unused modules.

yosys> stat

3.44. Printing statistics.

=== mc_top ===

   Number of wires:               1841
   Number of wire bits:           6476
   Number of public wires:         708
   Number of public wire bits:    5307
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2306
     $lut                         1255
     dff                           329
     dffsre                        722


yosys> opt_clean -purge

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 489 unused wires.
<suppressed ~489 debug messages>

yosys> write_verilog -noattr -nohex mc_top.verilog

3.46. Executing Verilog backend.

yosys> bmuxmap

3.46.1. Executing BMUXMAP pass.

yosys> demuxmap

3.46.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\mc_top'.

Warnings: 414 unique messages, 435 total
End of script. Logfile hash: 367134cc27, CPU: user 38.74s system 0.44s, MEM: 102.02 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 88% 2x abc (285 sec), 4% 46x opt_expr (13 sec), ...
real 209.54
user 307.67
sys 16.50
