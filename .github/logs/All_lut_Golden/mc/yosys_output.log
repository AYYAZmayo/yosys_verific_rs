
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k mc_adr_sel.v mc_cs_rf.v mc_defines.v mc_dp.v mc_incn_r.v mc_mem_if.v mc_obct.v mc_obct_top.v mc_rd_fifo.v mc_refresh.v mc_rf.v mc_timing.v mc_top.v mc_wb_if.v

yosys> verific -vlog2k mc_adr_sel.v mc_cs_rf.v mc_defines.v mc_dp.v mc_incn_r.v mc_mem_if.v mc_obct.v mc_obct_top.v mc_rd_fifo.v mc_refresh.v mc_rf.v mc_timing.v mc_top.v mc_wb_if.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_adr_sel.v'
VERIFIC-INFO [VERI-1328] mc_adr_sel.v:88: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_adr_sel.v:88: back to file 'mc_adr_sel.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_cs_rf.v'
VERIFIC-INFO [VERI-1328] mc_cs_rf.v:111: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_cs_rf.v:111: back to file 'mc_cs_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_defines.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_dp.v'
VERIFIC-INFO [VERI-1328] mc_dp.v:107: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_dp.v:107: back to file 'mc_dp.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_incn_r.v'
VERIFIC-INFO [VERI-1328] mc_incn_r.v:72: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_incn_r.v:72: back to file 'mc_incn_r.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_mem_if.v'
VERIFIC-INFO [VERI-1328] mc_mem_if.v:112: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_mem_if.v:112: back to file 'mc_mem_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_obct.v'
VERIFIC-INFO [VERI-1328] mc_obct.v:102: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_obct.v:102: back to file 'mc_obct.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_obct_top.v'
VERIFIC-INFO [VERI-1328] mc_obct_top.v:80: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_obct_top.v:80: back to file 'mc_obct_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_rd_fifo.v'
VERIFIC-INFO [VERI-1328] mc_rd_fifo.v:82: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_rd_fifo.v:82: back to file 'mc_rd_fifo.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_refresh.v'
VERIFIC-INFO [VERI-1328] mc_refresh.v:97: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_refresh.v:97: back to file 'mc_refresh.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_rf.v'
VERIFIC-INFO [VERI-1328] mc_rf.v:121: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_rf.v:121: back to file 'mc_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_timing.v'
VERIFIC-INFO [VERI-1328] mc_timing.v:126: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_timing.v:126: back to file 'mc_timing.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_top.v'
VERIFIC-INFO [VERI-1328] mc_top.v:115: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_top.v:115: back to file 'mc_top.v'
VERIFIC-INFO [VERI-2561] mc_top.v:315: undeclared symbol 'mc_sts_ir', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] mc_top.v:319: undeclared symbol 'cs_le_d', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_wb_if.v'
VERIFIC-INFO [VERI-1328] mc_wb_if.v:113: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_wb_if.v:113: back to file 'mc_wb_if.v'

yosys> synth_rs -top mc_top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.36

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top mc_top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] mc_top.v:117: compiling module 'mc_top'
VERIFIC-WARNING [VERI-2371] mc_top.v:290: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_rf.v:123: compiling module 'mc_rf'
VERIFIC-WARNING [VERI-2371] mc_rf.v:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:253: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:256: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:258: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:259: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:260: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:261: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:263: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:265: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:266: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:267: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:269: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:270: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:271: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_rf.v:251: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_rf.v:282: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:286: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:289: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:292: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:295: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:298: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:301: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:308: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:311: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:321: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:322: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:325: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:326: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:329: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:330: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:333: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:341: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:349: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:351: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:354: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:358: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:360: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:363: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:367: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:369: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:371: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:373: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:375: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:377: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:379: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:380: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:384: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:388: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:390: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:392: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:394: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:396: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:398: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:400: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:401: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:405: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:409: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:411: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:413: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:415: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:417: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:419: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:421: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:422: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:426: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:430: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:432: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:434: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:436: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:438: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:440: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:442: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:443: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:464: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:470: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:476: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:478: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:481: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:482: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:496: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:498: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:501: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:503: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:113: compiling module 'mc_cs_rf'
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:161: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:162: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:166: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:176: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:188: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:201: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:225: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:227: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:113: compiling module 'mc_cs_rf(this_cs=3'b01)'
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:161: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:162: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:166: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:176: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:188: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:201: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:225: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:227: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b010)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b011)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b100)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b101)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b110)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b111)'
VERIFIC-INFO [VERI-1018] mc_adr_sel.v:90: compiling module 'mc_adr_sel'
VERIFIC-INFO [VERI-1018] mc_incn_r.v:77: compiling module 'mc_incn_r(incN_width=24)'
VERIFIC-WARNING [VERI-2371] mc_incn_r.v:92: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1209] mc_incn_r.v:99: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:168: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:173: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:174: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:175: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:172: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:178: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:194: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:195: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:200: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:202: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:203: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:193: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:212: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:216: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:218: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:221: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:211: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:226: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:228: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:230: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:231: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:236: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:225: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:246: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:247: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:248: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:250: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:251: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:255: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:256: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:245: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:260: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:261: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:265: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:266: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:269: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:270: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:259: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:275: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] mc_obct_top.v:82: compiling module 'mc_obct_top'
VERIFIC-WARNING [VERI-2371] mc_obct_top.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct_top.v:203: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct_top.v:209: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_obct.v:104: compiling module 'mc_obct'
VERIFIC-WARNING [VERI-2371] mc_obct.v:136: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:138: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:140: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:142: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:147: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:149: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:151: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:154: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:156: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:158: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:160: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:163: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:169: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:193: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:196: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_obct.v:220: compiling module 'mc_obct_dummy'
VERIFIC-INFO [VERI-1018] mc_dp.v:109: compiling module 'mc_dp'
VERIFIC-INFO [VERI-1018] mc_rd_fifo.v:84: compiling module 'mc_rd_fifo'
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:97: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:99: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:101: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:104: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:106: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:108: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:111: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:114: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:117: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:120: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_rd_fifo.v:123: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_dp.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:205: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:208: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:210: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:229: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_refresh.v:99: compiling module 'mc_refresh'
VERIFIC-WARNING [VERI-2371] mc_refresh.v:159: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:160: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:163: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:172: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:173: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:181: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:185: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:189: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:193: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:194: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:195: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:200: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:208: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_timing.v:128: compiling module 'mc_timing'
VERIFIC-WARNING [VERI-2371] mc_timing.v:458: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:463: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:466: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:469: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:472: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:473: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:476: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:477: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:481: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:482: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:485: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:486: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:489: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:492: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:495: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:498: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:500: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:503: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:505: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:518: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:519: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:525: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:526: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:529: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:530: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:536: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:538: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:541: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:543: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:547: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:548: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:552: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:553: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:556: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:557: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:560: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:561: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:565: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:568: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:572: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:575: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:578: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:582: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:585: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:591: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:592: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:595: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:596: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:600: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:602: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:604: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:608: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:610: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:612: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:618: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:619: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:623: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:625: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:627: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:629: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:637: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:641: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:642: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:645: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:646: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:649: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:650: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:653: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:654: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:660: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:662: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:664: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:679: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:681: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:683: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:685: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:687: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:689: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:691: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:693: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:700: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:702: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:709: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:712: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:714: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:716: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:718: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:720: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:722: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:724: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:726: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:728: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:730: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:732: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:737: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:738: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:742: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:744: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:747: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_timing.v:751: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_timing.v:762: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:764: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:766: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:769: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:771: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:775: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:777: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:782: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:785: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:786: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:789: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:798: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:801: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:803: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:805: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:809: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:813: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_timing.v:940: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] mc_timing.v:893: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] mc_wb_if.v:115: compiling module 'mc_wb_if'
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:169: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:171: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:174: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:175: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:180: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:185: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:186: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:191: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:193: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:209: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:211: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:216: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:250: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_mem_if.v:114: compiling module 'mc_mem_if'
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:223: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:226: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:238: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:241: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:244: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:245: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:248: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:251: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:258: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:267: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:270: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:271: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:274: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:277: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:280: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:291: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:294: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:300: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:303: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:309: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:312: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:318: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:321: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:327: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:330: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:336: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:339: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:345: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:348: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:354: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:357: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:360: delay control is not supported for synthesis
Importing module mc_top.
Importing module mc_adr_sel.
Importing module mc_dp.
Importing module mc_incn_r(incN_width=24).
Importing module mc_mem_if.
Importing module mc_obct_top.
Importing module mc_obct.
Importing module mc_obct_dummy.
Importing module mc_rd_fifo.
Importing module mc_refresh.
Importing module mc_rf.
Importing module mc_cs_rf.
Importing module mc_cs_rf(this_cs=3'b01).
Importing module mc_cs_rf_dummy(this_cs=3'b010).
Importing module mc_cs_rf_dummy(this_cs=3'b011).
Importing module mc_cs_rf_dummy(this_cs=3'b100).
Importing module mc_cs_rf_dummy(this_cs=3'b101).
Importing module mc_cs_rf_dummy(this_cs=3'b110).
Importing module mc_cs_rf_dummy(this_cs=3'b111).
Importing module mc_timing.
Importing module mc_wb_if.

3.3.1. Analyzing design hierarchy..
Top module:  \mc_top
Used module:     \mc_mem_if
Used module:     \mc_wb_if
Used module:     \mc_timing
Used module:     \mc_refresh
Used module:     \mc_dp
Used module:         \mc_rd_fifo
Used module:     \mc_obct_top
Used module:         \mc_obct_dummy
Used module:         \mc_obct
Used module:     \mc_adr_sel
Used module:         \mc_incn_r(incN_width=24)
Used module:     \mc_rf
Used module:         \mc_cs_rf_dummy(this_cs=3'b111)
Used module:         \mc_cs_rf_dummy(this_cs=3'b110)
Used module:         \mc_cs_rf_dummy(this_cs=3'b101)
Used module:         \mc_cs_rf_dummy(this_cs=3'b100)
Used module:         \mc_cs_rf_dummy(this_cs=3'b011)
Used module:         \mc_cs_rf_dummy(this_cs=3'b010)
Used module:         \mc_cs_rf(this_cs=3'b01)
Used module:         \mc_cs_rf

3.3.2. Analyzing design hierarchy..
Top module:  \mc_top
Used module:     \mc_mem_if
Used module:     \mc_wb_if
Used module:     \mc_timing
Used module:     \mc_refresh
Used module:     \mc_dp
Used module:         \mc_rd_fifo
Used module:     \mc_obct_top
Used module:         \mc_obct_dummy
Used module:         \mc_obct
Used module:     \mc_adr_sel
Used module:         \mc_incn_r(incN_width=24)
Used module:     \mc_rf
Used module:         \mc_cs_rf_dummy(this_cs=3'b111)
Used module:         \mc_cs_rf_dummy(this_cs=3'b110)
Used module:         \mc_cs_rf_dummy(this_cs=3'b101)
Used module:         \mc_cs_rf_dummy(this_cs=3'b100)
Used module:         \mc_cs_rf_dummy(this_cs=3'b011)
Used module:         \mc_cs_rf_dummy(this_cs=3'b010)
Used module:         \mc_cs_rf(this_cs=3'b01)
Used module:         \mc_cs_rf
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_wb_if.
<suppressed ~1 debug messages>
Optimizing module mc_timing.
<suppressed ~30 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b111).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b110).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b101).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b100).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b011).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b010).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf(this_cs=3'b01).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf.
<suppressed ~3 debug messages>
Optimizing module mc_rf.
<suppressed ~14 debug messages>
Optimizing module mc_refresh.
<suppressed ~2 debug messages>
Optimizing module mc_rd_fifo.
<suppressed ~1 debug messages>
Optimizing module mc_obct_dummy.
Optimizing module mc_obct.
<suppressed ~1 debug messages>
Optimizing module mc_obct_top.
Optimizing module mc_mem_if.
Optimizing module mc_incn_r(incN_width=24).
<suppressed ~1 debug messages>
Optimizing module mc_dp.
<suppressed ~3 debug messages>
Optimizing module mc_adr_sel.
<suppressed ~1 debug messages>
Optimizing module mc_top.
<suppressed ~1 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module mc_wb_if.
Deleting now unused module mc_timing.
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b111).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b110).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b101).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b100).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b011).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b010).
Deleting now unused module mc_cs_rf(this_cs=3'b01).
Deleting now unused module mc_cs_rf.
Deleting now unused module mc_rf.
Deleting now unused module mc_refresh.
Deleting now unused module mc_rd_fifo.
Deleting now unused module mc_obct_dummy.
Deleting now unused module mc_obct.
Deleting now unused module mc_obct_top.
Deleting now unused module mc_mem_if.
Deleting now unused module mc_incn_r(incN_width=24).
Deleting now unused module mc_dp.
Deleting now unused module mc_adr_sel.
<suppressed ~26 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~36 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 66 unused cells and 3837 unused wires.
<suppressed ~527 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module mc_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~42 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~149 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_1002$mc_timing.v:1732$6083: { $flatten\u5.$verific$n7926$5190 $flatten\u5.$verific$n7811$5163 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_443$mc_timing.v:1004$5699: { $flatten\u1.$verific$n15$1333 $auto$opt_reduce.cc:134:opt_pmux$6260 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_444$mc_timing.v:1004$5700: $auto$opt_reduce.cc:134:opt_pmux$6262
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_448$mc_timing.v:1004$5704: $auto$opt_reduce.cc:134:opt_pmux$6264
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_910$mc_timing.v:1732$5992: { $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7754$5106 $flatten\u5.$verific$n7755$5107 $flatten\u5.$verific$n7766$5118 $flatten\u5.$verific$n7767$5119 $flatten\u5.$verific$n7798$5150 $flatten\u5.$verific$n7886$5171 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_915$mc_timing.v:1732$5997: { $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7762$5114 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_918$mc_timing.v:1732$6000: { $flatten\u5.$verific$n7753$5105 $auto$opt_reduce.cc:134:opt_pmux$6266 $flatten\u5.$verific$n7894$5174 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_921$mc_timing.v:1732$6003: { $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7897$5176 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_925$mc_timing.v:1732$6007: { $flatten\u5.$verific$n7753$5105 $auto$opt_reduce.cc:134:opt_pmux$6268 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_928$mc_timing.v:1732$6010: { $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7904$5179 $flatten\u5.$verific$n7769$5121 $flatten\u5.$verific$n7783$5135 $flatten\u5.$verific$n7790$5142 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_931$mc_timing.v:1732$6013: { $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7759$5111 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_934$mc_timing.v:1732$6016: { $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7914$5182 $flatten\u5.$verific$n7764$5116 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_936$mc_timing.v:1732$6018: { $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7756$5108 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_940$mc_timing.v:1732$6022: { $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7919$5185 $flatten\u5.$verific$n7920$5186 $flatten\u5.$verific$n7768$5120 $flatten\u5.$verific$n7789$5141 $flatten\u5.$verific$n7790$5142 $flatten\u5.$verific$n7791$5143 $flatten\u5.$verific$n7792$5144 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_943$mc_timing.v:1732$6025: { $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7923$5188 $flatten\u5.$verific$n7765$5117 $flatten\u5.$verific$n7766$5118 $flatten\u5.$verific$n7769$5121 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_946$mc_timing.v:1732$6028: { $flatten\u5.$verific$n7925$5189 $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7811$5163 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_949$mc_timing.v:1732$6031: { $flatten\u5.$verific$n7928$5191 $flatten\u5.$verific$n7754$5106 $flatten\u5.$verific$n7786$5138 $flatten\u5.$verific$n7789$5141 $flatten\u5.$verific$n7790$5142 $auto$opt_reduce.cc:134:opt_pmux$6270 $flatten\u5.$verific$n7798$5150 $flatten\u5.$verific$n7929$5192 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_951$mc_timing.v:1732$6033: { $flatten\u5.$verific$n7757$5109 $flatten\u5.$verific$n7758$5110 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_955$mc_timing.v:1732$6037: { $flatten\u5.$verific$n7763$5115 $flatten\u5.$verific$n7764$5116 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_957$mc_timing.v:1732$6039: { $flatten\u5.$verific$n7764$5116 $flatten\u5.$verific$n7795$5147 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_962$mc_timing.v:1732$6044: { $flatten\u5.$verific$n7771$5123 $flatten\u5.$verific$n7942$5198 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_964$mc_timing.v:1732$6046: { $flatten\u5.$verific$n7772$5124 $flatten\u5.$verific$n7776$5128 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_969$mc_timing.v:1732$6051: { $flatten\u5.$verific$n7781$5133 $flatten\u5.$verific$n7782$5134 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_974$mc_timing.v:1732$6056: { $flatten\u5.$verific$n7786$5138 $flatten\u5.$verific$n7954$5202 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_976$mc_timing.v:1732$6058: { $flatten\u5.$verific$n7786$5138 $flatten\u5.$verific$n7798$5150 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_979$mc_timing.v:1732$6061: { $flatten\u5.$verific$n7959$5205 $flatten\u5.$verific$n7798$5150 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_981$mc_timing.v:1732$6063: { $flatten\u5.$verific$n7788$5140 $flatten\u5.$verific$n7789$5141 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_987$mc_timing.v:1732$6069: $auto$opt_reduce.cc:134:opt_pmux$6272
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_989$mc_timing.v:1732$6071: { $flatten\u5.$verific$n7969$5209 $flatten\u5.$verific$n7791$5143 $flatten\u5.$verific$n7792$5144 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_992$mc_timing.v:1732$6074: { $flatten\u5.$verific$n7972$5210 $flatten\u5.$verific$n7795$5147 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_445$mc_timing.v:1004$5701: { $auto$opt_reduce.cc:134:opt_pmux$6274 $flatten\u5.$verific$n1880$4936 $flatten\u1.$verific$n57$1335 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_907$mc_timing.v:1732$5989: { $flatten\u5.$verific$n7752$5104 $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7754$5106 $flatten\u5.$verific$n7755$5107 $flatten\u5.$verific$n7756$5108 $flatten\u5.$verific$n7757$5109 $flatten\u5.$verific$n7758$5110 $flatten\u5.$verific$n7759$5111 $flatten\u5.$verific$n7760$5112 $flatten\u5.$verific$n7762$5114 $flatten\u5.$verific$n7763$5115 $flatten\u5.$verific$n7764$5116 $flatten\u5.$verific$n7765$5117 $flatten\u5.$verific$n7766$5118 $flatten\u5.$verific$n7767$5119 $flatten\u5.$verific$n7768$5120 $flatten\u5.$verific$n7769$5121 $flatten\u5.$verific$n7770$5122 $flatten\u5.$verific$n7771$5123 $flatten\u5.$verific$n7772$5124 $flatten\u5.$verific$n7773$5125 $flatten\u5.$verific$n7774$5126 $flatten\u5.$verific$n7775$5127 $flatten\u5.$verific$n7776$5128 $flatten\u5.$verific$n7777$5129 $flatten\u5.$verific$n7778$5130 $flatten\u5.$verific$n7779$5131 $flatten\u5.$verific$n7781$5133 $flatten\u5.$verific$n7782$5134 $flatten\u5.$verific$n7783$5135 $flatten\u5.$verific$n7784$5136 $auto$opt_reduce.cc:134:opt_pmux$6276 $flatten\u5.$verific$n7786$5138 $flatten\u5.$verific$n7787$5139 $flatten\u5.$verific$n7788$5140 $flatten\u5.$verific$n7789$5141 $flatten\u5.$verific$n7790$5142 $flatten\u5.$verific$n7791$5143 $flatten\u5.$verific$n7792$5144 $flatten\u5.$verific$n7793$5145 $flatten\u5.$verific$n7794$5146 $flatten\u5.$verific$n7795$5147 $flatten\u5.$verific$n7796$5148 $flatten\u5.$verific$n7797$5149 $flatten\u5.$verific$n7798$5150 $flatten\u5.$verific$n7799$5151 $flatten\u5.$verific$n7800$5152 $flatten\u5.$verific$n7801$5153 $flatten\u5.$verific$n7802$5154 $flatten\u5.$verific$n7803$5155 $flatten\u5.$verific$n7804$5156 $flatten\u5.$verific$n7805$5157 $flatten\u5.$verific$n7806$5158 $flatten\u5.$verific$n7807$5159 $flatten\u5.$verific$n7808$5160 $flatten\u5.$verific$n7809$5161 $flatten\u5.$verific$n7810$5162 $flatten\u5.$verific$n7811$5163 $flatten\u5.$verific$n7812$5164 $flatten\u5.$verific$n7813$5165 $flatten\u5.$verific$n7814$5166 $flatten\u5.$verific$n7815$5167 $flatten\u5.$verific$n7816$5168 $flatten\u5.$verific$n7817$5169 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_929$mc_timing.v:1732$6011: { $flatten\u5.$verific$n7753$5105 $flatten\u5.$verific$n7760$5112 $auto$opt_reduce.cc:134:opt_pmux$6288 $flatten\u5.$verific$n7783$5135 $flatten\u5.$verific$n7784$5136 $flatten\u5.$verific$n7788$5140 $flatten\u5.$verific$n7791$5143 $flatten\u5.$verific$n7792$5144 $flatten\u5.$verific$n7793$5145 $auto$opt_reduce.cc:134:opt_pmux$6286 $flatten\u5.$verific$n7798$5150 $auto$opt_reduce.cc:134:opt_pmux$6284 $auto$opt_reduce.cc:134:opt_pmux$6282 $auto$opt_reduce.cc:134:opt_pmux$6280 $auto$opt_reduce.cc:134:opt_pmux$6278 }
  Optimizing cells in module \mc_top.
Performed a total of 33 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u7.$verific$mc_oe__reg$mc_mem_if.v:271$1828 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dqm_reg$mc_mem_if.v:267$1824 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dqm_r_reg$mc_mem_if.v:258$1816 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dqm_r2_reg$mc_mem_if.v:262$1818 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dp_o_reg$mc_mem_if.v:251$1810 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u7.$verific$mc_data_oe_reg$mc_mem_if.v:245$1806 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_data_o_reg$mc_mem_if.v:248$1808 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_data_ir_reg$mc_mem_if.v:226$1787 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$1839 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_addr_reg$mc_mem_if.v:254$1812 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$write_go_r_reg$mc_wb_if.v:198$6210 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$write_go_r1_reg$mc_wb_if.v:193$6203 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wr_hold_reg$mc_wb_if.v:216$6234 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wb_first_r_reg$mc_wb_if.v:211$6230 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wb_err_reg$mc_wb_if.v:235$6251 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u6.$verific$wb_data_o_reg$mc_wb_if.v:250$6258 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wb_ack_o_reg$mc_wb_if.v:229$6243 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$rmw_r_reg$mc_wb_if.v:175$6181 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$rmw_en_reg$mc_wb_if.v:171$6174 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$read_go_r_reg$mc_wb_if.v:186$6195 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$read_go_r1_reg$mc_wb_if.v:182$6192 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$wr_cycle_reg$mc_timing.v:604$5495 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$wb_stb_first_reg$mc_timing.v:805$5666 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$wb_cycle_reg$mc_timing.v:612$5500 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$tmr_done_reg$mc_timing.v:738$5619 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$tmr2_done_reg$mc_timing.v:702$5586 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$timer_reg$mc_timing.v:732$5615 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u5.$verific$timer2_reg$mc_timing.v:693$5568 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$suspended_reg$mc_timing.v:650$5538 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$susp_sel_r_reg$mc_timing.v:664$5544 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$susp_req_r_reg$mc_timing.v:642$5534 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$state_reg$mc_timing.v:813$5669 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$rsts_reg$mc_timing.v:477$5416 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$rsts1_reg$mc_timing.v:473$5414 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$rfr_ack_r_reg$mc_timing.v:654$5540 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$resume_req_r_reg$mc_timing.v:646$5536 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$oe__reg$mc_timing.v:548$5462 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$no_wb_cycle_reg$mc_timing.v:619$5505 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mem_ack_r_reg$mc_timing.v:519$5445 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_le_reg$mc_timing.v:486$5421 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_c_oe_reg$mc_timing.v:482$5418 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_adv_r_reg$mc_timing.v:505$5433 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_adv_r1_reg$mc_timing.v:500$5430 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$lookup_ready2_reg$mc_timing.v:596$5492 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$lookup_ready1_reg$mc_timing.v:592$5488 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u5.$verific$ir_cnt_reg$mc_timing.v:744$5625 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.$verific$csr_r_reg$mc_rf.v:298$2729 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csr_r2_reg$mc_rf.v:292$2726 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csc_reg$mc_rf.v:381$2790 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csc_mask_r_reg$mc_rf.v:311$2740 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$cs_reg$mc_rf.v:351$2758 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$dv_r_reg$mc_timing.v:786$5658 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$data_oe_reg$mc_timing.v:561$5469 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$data_oe_r_reg$mc_timing.v:553$5464 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$data_oe_r2_reg$mc_timing.v:557$5466 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_r_reg$mc_timing.v:526$5449 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_del_reg$mc_timing.v:530$5451 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_asserted_reg$mc_timing.v:538$5456 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_asserted2_reg$mc_timing.v:543$5459 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u5.$verific$burst_cnt_reg$mc_timing.v:766$5640 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$ap_en_reg$mc_timing.v:777$5650 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$ack_cnt_reg$mc_timing.v:629$5518 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_req_reg$mc_refresh.v:208$2502 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_en_reg$mc_refresh.v:160$2454 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_early_reg$mc_refresh.v:173$2466 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_cnt_reg$mc_refresh.v:189$2473 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_ce_reg$mc_refresh.v:182$2468 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$ps_cnt_reg$mc_refresh.v:167$2460 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u3.\u0.$verific$wr_adr_reg$mc_rd_fifo.v:108$2381 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u3.\u0.$verific$rd_adr_reg$mc_rd_fifo.v:101$2377 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r3_reg$mc_rd_fifo.v:120$2394 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r2_reg$mc_rd_fifo.v:117$2391 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r1_reg$mc_rd_fifo.v:114$2388 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r0_reg$mc_rd_fifo.v:111$2385 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$mc_dp_o_reg$mc_dp.v:229$1689 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$mc_data_o_reg$mc_dp.v:197$1666 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$byte2_reg$mc_dp.v:213$1679 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$byte1_reg$mc_dp.v:210$1677 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$byte0_reg$mc_dp.v:205$1669 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csr_r_reg$mc_rf.v:298$2729_1 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank3_open_reg$mc_obct.v:169$2306 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank2_open_reg$mc_obct.v:160$2299 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank1_open_reg$mc_obct.v:151$2292 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank0_open_reg$mc_obct.v:142$2285 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b3_last_row_reg$mc_obct.v:196$2324 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b2_last_row_reg$mc_obct.v:193$2322 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b1_last_row_reg$mc_obct.v:190$2320 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b0_last_row_reg$mc_obct.v:187$2318 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank3_open_reg$mc_obct.v:169$2306 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank2_open_reg$mc_obct.v:160$2299 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank1_open_reg$mc_obct.v:151$2292 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank0_open_reg$mc_obct.v:142$2285 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b3_last_row_reg$mc_obct.v:196$2324 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b2_last_row_reg$mc_obct.v:193$2322 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b1_last_row_reg$mc_obct.v:190$2320 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b0_last_row_reg$mc_obct.v:187$2318 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.\u0.$verific$out_r_reg$mc_incn_r.v:92$1725 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$sram_addr_reg$mc_adr_sel.v:168$1484 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$row_adr_reg$mc_adr_sel.v:238$1506 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$col_adr_reg$mc_adr_sel.v:205$1501 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$bank_adr_reg$mc_adr_sel.v:272$1510 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$acs_addr_reg$mc_adr_sel.v:178$1491 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u1.$verific$tms_reg$mc_cs_rf.v:190$4711 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$lmr_req_we_reg$mc_cs_rf.v:198$4713 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$lmr_req_reg$mc_cs_rf.v:206$4719 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$inited_reg$mc_cs_rf.v:227$4730 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$init_req_we_reg$mc_cs_rf.v:214$4721 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$init_req_reg$mc_cs_rf.v:222$4728 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u1.$verific$csc_reg$mc_cs_rf.v:184$4707 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u0.$verific$tms_reg$mc_cs_rf.v:190$4616 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$lmr_req_we_reg$mc_cs_rf.v:198$4618 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$lmr_req_reg$mc_cs_rf.v:206$4624 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$inited_reg$mc_cs_rf.v:227$4635 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$init_req_we_reg$mc_cs_rf.v:214$4626 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$init_req_reg$mc_cs_rf.v:222$4633 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u0.$verific$csc_reg$mc_cs_rf.v:184$4611 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$wp_err_reg$mc_rf.v:360$2771 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.$verific$wb_addr_r_reg$mc_rf.v:282$2711 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$tms_reg$mc_rf.v:402$2810 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$sreq_cs_le_reg$mc_rf.v:482$2859 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$spec_req_cs_reg$mc_rf.v:478$2852 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$sp_tms_reg$mc_rf.v:444$2829 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$sp_csc_reg$mc_rf.v:423$2819 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rst_r3_reg$mc_rf.v:330$2746 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rst_r2_reg$mc_rf.v:326$2744 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rst_r1_reg$mc_rf.v:322$2742 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rf_we_reg$mc_rf.v:286$2720 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.$verific$poc_reg$mc_rf.v:333$2749 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$lmr_req_reg$mc_rf.v:503$2897 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$init_req_reg$mc_rf.v:498$2888 ($aldff) from module mc_top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 24 unused cells and 98 unused wires.
<suppressed ~25 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~148 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~148 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\u7.$verific$mc_dqm_reg$mc_mem_if.v:267$1824 ($dff) from module mc_top (D = $flatten\u7.$verific$n280$1772, Q = \u7.mc_dqm, rval = 4'1111).
Adding EN signal on $flatten\u7.$verific$mc_dqm_r_reg$mc_mem_if.v:258$1816 ($dff) from module mc_top (D = \wb_sel_i, Q = \u7.mc_dqm_r).
Adding SRST signal on $flatten\u7.$verific$mc_addr_reg$mc_mem_if.v:254$1812 ($dff) from module mc_top (D = $flatten\u1.$verific$n134$1346 [23:15], Q = \u7.mc_addr [23:15], rval = 9'000000000).
Adding SRST signal on $flatten\u7.$verific$mc_addr_reg$mc_mem_if.v:254$1812 ($dff) from module mc_top (D = \u1.mc_addr_d [10], Q = \u7.mc_addr [10], rval = 1'1).
Adding EN signal on $flatten\u6.$verific$wr_hold_reg$mc_wb_if.v:216$6234 ($adff) from module mc_top (D = \wb_we_i, Q = \u6.wr_hold).
Adding EN signal on $flatten\u6.$verific$wb_first_r_reg$mc_wb_if.v:211$6230 ($adff) from module mc_top (D = $flatten\u6.$verific$n93$6142, Q = \u6.wb_first_r).
Adding EN signal on $flatten\u6.$verific$rmw_en_reg$mc_wb_if.v:171$6174 ($adff) from module mc_top (D = $flatten\u6.$verific$n12$6097, Q = \u6.rmw_en).
Adding EN signal on $flatten\u5.$verific$wr_cycle_reg$mc_timing.v:604$5495 ($adff) from module mc_top (D = $flatten\u5.$verific$n192$4845, Q = \u5.wr_cycle).
Adding EN signal on $flatten\u5.$verific$wb_stb_first_reg$mc_timing.v:805$5666 ($adff) from module mc_top (D = $flatten\u5.$verific$n1019$4917, Q = \u5.wb_stb_first).
Adding EN signal on $flatten\u5.$verific$wb_cycle_reg$mc_timing.v:612$5500 ($adff) from module mc_top (D = $flatten\u5.$verific$n201$4849, Q = \u5.wb_cycle).
Adding EN signal on $flatten\u5.$verific$timer_reg$mc_timing.v:732$5615 ($adff) from module mc_top (D = $flatten\u5.$verific$n799$5270, Q = \u5.timer).
Adding EN signal on $flatten\u5.$verific$timer2_reg$mc_timing.v:693$5568 ($dff) from module mc_top (D = $flatten\u5.$verific$n537$5245, Q = \u5.timer2).
Adding EN signal on $flatten\u5.$verific$susp_sel_r_reg$mc_timing.v:664$5544 ($adff) from module mc_top (D = $flatten\u5.$verific$n303$4873, Q = \u5.susp_sel_r).
Adding EN signal on $flatten\u5.$verific$state_reg$mc_timing.v:813$5669 ($adff) from module mc_top (D = \u5.next_state, Q = \u5.state).
Adding SRST signal on $flatten\u5.$verific$pack_le2_reg$mc_timing.v:495$5427 ($dff) from module mc_top (D = \u5.bw8, Q = \u5.pack_le2, rval = 1'0).
Adding EN signal on $flatten\u5.$verific$mc_adv_r_reg$mc_timing.v:505$5433 ($adff) from module mc_top (D = \u5.mc_adv_r1, Q = \u5.mc_adv_r).
Adding EN signal on $flatten\u5.$verific$mc_adv_r1_reg$mc_timing.v:500$5430 ($adff) from module mc_top (D = \u5.mc_adv, Q = \u5.mc_adv_r1).
Adding SRST signal on $flatten\u5.$verific$ir_cnt_reg$mc_timing.v:744$5625 ($dff) from module mc_top (D = $flatten\u5.$verific$n839$5274, Q = \u5.ir_cnt, rval = 4'0010).
Adding EN signal on $auto$ff.cc:262:slice$6441 ($sdff) from module mc_top (D = $flatten\u5.$verific$n829$5272, Q = \u5.ir_cnt).
Adding SRST signal on $flatten\u5.$verific$cnt_reg$mc_timing.v:637$5532 ($dff) from module mc_top (D = $flatten\u5.$verific$n5216$5043, Q = \u5.cnt, rval = 1'0).
Adding EN signal on $flatten\u5.$verific$cmd_asserted_reg$mc_timing.v:538$5456 ($adff) from module mc_top (D = \u5.cmd [3], Q = \u5.cmd_asserted).
Adding EN signal on $flatten\u5.$verific$cmd_asserted2_reg$mc_timing.v:543$5459 ($adff) from module mc_top (D = \u5.cmd_asserted, Q = \u5.cmd_asserted2).
Adding EN signal on $flatten\u5.$verific$cke_r_reg$mc_timing.v:565$5471 ($dff) from module mc_top (D = \u5.cke_d, Q = \u5.cke_r).
Adding SRST signal on $flatten\u5.$verific$burst_cnt_reg$mc_timing.v:766$5640 ($dff) from module mc_top (D = $flatten\u5.$verific$n945$5282, Q = \u5.burst_cnt, rval = 11'00000000100).
Adding EN signal on $auto$ff.cc:262:slice$6453 ($sdff) from module mc_top (D = $flatten\u5.$verific$n945$5282, Q = \u5.burst_cnt).
Adding EN signal on $flatten\u5.$verific$ap_en_reg$mc_timing.v:777$5650 ($adff) from module mc_top (D = $flatten\u5.$verific$n991$4905, Q = \u5.ap_en).
Adding EN signal on $flatten\u5.$verific$ack_cnt_reg$mc_timing.v:629$5518 ($adff) from module mc_top (D = $flatten\u5.$verific$n256$5227, Q = \u5.ack_cnt).
Adding EN signal on $flatten\u4.$verific$rfr_req_reg$mc_refresh.v:208$2502 ($adff) from module mc_top (D = $flatten\u4.$verific$n183$2438, Q = \u4.rfr_req).
Adding EN signal on $flatten\u4.$verific$rfr_cnt_reg$mc_refresh.v:189$2473 ($adff) from module mc_top (D = $flatten\u4.$verific$n134$2447, Q = \u4.rfr_cnt).
Adding EN signal on $flatten\u4.$verific$ps_cnt_reg$mc_refresh.v:167$2460 ($adff) from module mc_top (D = $flatten\u4.$verific$n56$2443, Q = \u4.ps_cnt).
Adding EN signal on $flatten\u3.\u0.$verific$wr_adr_reg$mc_rd_fifo.v:108$2381 ($adff) from module mc_top (D = $flatten\u3.\u0.$verific$n56$2360, Q = \u3.u0.wr_adr).
Adding EN signal on $flatten\u3.\u0.$verific$rd_adr_reg$mc_rd_fifo.v:101$2377 ($adff) from module mc_top (D = $flatten\u3.\u0.$verific$n25$2357, Q = \u3.u0.rd_adr).
Adding EN signal on $flatten\u3.\u0.$verific$r3_reg$mc_rd_fifo.v:120$2394 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r3).
Adding EN signal on $flatten\u3.\u0.$verific$r2_reg$mc_rd_fifo.v:117$2391 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r2).
Adding EN signal on $flatten\u3.\u0.$verific$r1_reg$mc_rd_fifo.v:114$2388 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r1).
Adding EN signal on $flatten\u3.\u0.$verific$r0_reg$mc_rd_fifo.v:111$2385 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r0).
Adding EN signal on $flatten\u3.$verific$mc_dp_o_reg$mc_dp.v:229$1689 ($dff) from module mc_top (D = { $flatten\u3.$verific$n534$1529 $flatten\u3.$verific$n535$1530 $flatten\u3.$verific$n536$1531 $flatten\u3.$verific$n537$1532 }, Q = \u3.mc_dp_o).
Adding EN signal on $flatten\u3.$verific$mc_data_o_reg$mc_dp.v:197$1666 ($dff) from module mc_top (D = \wb_data_i, Q = \u3.mc_data_o).
Adding EN signal on $flatten\u3.$verific$byte2_reg$mc_dp.v:213$1679 ($dff) from module mc_top (D = \u7.mc_data_ir [7:0], Q = \u3.byte2).
Adding EN signal on $flatten\u3.$verific$byte1_reg$mc_dp.v:210$1677 ($dff) from module mc_top (D = $flatten\u3.$verific$n318$1560, Q = \u3.byte1).
Adding EN signal on $flatten\u3.$verific$byte0_reg$mc_dp.v:205$1669 ($dff) from module mc_top (D = \u7.mc_data_ir [7:0], Q = \u3.byte0).
Adding EN signal on $flatten\u2.\u1.$verific$bank3_open_reg$mc_obct.v:169$2306 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n54$2253, Q = \u2.u1.bank3_open).
Adding EN signal on $flatten\u2.\u1.$verific$bank2_open_reg$mc_obct.v:160$2299 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n41$2247, Q = \u2.u1.bank2_open).
Adding EN signal on $flatten\u2.\u1.$verific$bank1_open_reg$mc_obct.v:151$2292 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n28$2241, Q = \u2.u1.bank1_open).
Adding EN signal on $flatten\u2.\u1.$verific$bank0_open_reg$mc_obct.v:142$2285 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n15$2235, Q = \u2.u1.bank0_open).
Adding EN signal on $flatten\u2.\u1.$verific$b3_last_row_reg$mc_obct.v:196$2324 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b3_last_row).
Adding EN signal on $flatten\u2.\u1.$verific$b2_last_row_reg$mc_obct.v:193$2322 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b2_last_row).
Adding EN signal on $flatten\u2.\u1.$verific$b1_last_row_reg$mc_obct.v:190$2320 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b1_last_row).
Adding EN signal on $flatten\u2.\u1.$verific$b0_last_row_reg$mc_obct.v:187$2318 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b0_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$bank3_open_reg$mc_obct.v:169$2306 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n54$2253, Q = \u2.u0.bank3_open).
Adding EN signal on $flatten\u2.\u0.$verific$bank2_open_reg$mc_obct.v:160$2299 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n41$2247, Q = \u2.u0.bank2_open).
Adding EN signal on $flatten\u2.\u0.$verific$bank1_open_reg$mc_obct.v:151$2292 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n28$2241, Q = \u2.u0.bank1_open).
Adding EN signal on $flatten\u2.\u0.$verific$bank0_open_reg$mc_obct.v:142$2285 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n15$2235, Q = \u2.u0.bank0_open).
Adding EN signal on $flatten\u2.\u0.$verific$b3_last_row_reg$mc_obct.v:196$2324 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b3_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$b2_last_row_reg$mc_obct.v:193$2322 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b2_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$b1_last_row_reg$mc_obct.v:190$2320 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b1_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$b0_last_row_reg$mc_obct.v:187$2318 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b0_last_row).
Adding EN signal on $flatten\u1.$verific$sram_addr_reg$mc_adr_sel.v:168$1484 ($dff) from module mc_top (D = \wb_addr_i [25:2], Q = \u1.sram_addr).
Adding EN signal on $flatten\u1.$verific$row_adr_reg$mc_adr_sel.v:238$1506 ($dff) from module mc_top (D = $flatten\u1.$verific$n975$1389, Q = \u1.row_adr).
Adding EN signal on $flatten\u1.$verific$col_adr_reg$mc_adr_sel.v:205$1501 ($dff) from module mc_top (D = $flatten\u1.$verific$n660$1367, Q = \u1.col_adr).
Adding EN signal on $flatten\u1.$verific$bank_adr_reg$mc_adr_sel.v:272$1510 ($dff) from module mc_top (D = $flatten\u1.$verific$n1079$1411, Q = \u1.bank_adr).
Adding EN signal on $flatten\u1.$verific$acs_addr_reg$mc_adr_sel.v:178$1491 ($dff) from module mc_top (D = $flatten\u1.$verific$n462$1355, Q = \u1.acs_addr).
Adding SRST signal on $flatten\u0.\u1.$verific$tms_reg$mc_cs_rf.v:190$4711 ($dff) from module mc_top (D = $flatten\u0.\u1.$verific$n269$4684, Q = \u0.u1.tms, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$6526 ($sdff) from module mc_top (D = \wb_data_i, Q = \u0.u1.tms).
Adding EN signal on $flatten\u0.\u1.$verific$lmr_req_reg$mc_cs_rf.v:206$4719 ($adff) from module mc_top (D = $flatten\u0.\u1.$verific$n381$4664, Q = \u0.u1.lmr_req).
Adding EN signal on $flatten\u0.\u1.$verific$inited_reg$mc_cs_rf.v:227$4730 ($adff) from module mc_top (D = 1'1, Q = \u0.u1.inited).
Adding EN signal on $flatten\u0.\u1.$verific$init_req_reg$mc_cs_rf.v:222$4728 ($adff) from module mc_top (D = $flatten\u0.\u1.$verific$n400$4671, Q = \u0.u1.init_req).
Adding SRST signal on $flatten\u0.\u1.$verific$csc_reg$mc_cs_rf.v:184$4707 ($dff) from module mc_top (D = $flatten\u0.\u1.$verific$n101$4682, Q = \u0.u1.csc, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$6535 ($sdff) from module mc_top (D = \wb_data_i, Q = \u0.u1.csc).
Adding SRST signal on $flatten\u0.\u0.$verific$tms_reg$mc_cs_rf.v:190$4616 ($dff) from module mc_top (D = $flatten\u0.\u0.$verific$n270$4587, Q = \u0.u0.tms, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$6537 ($sdff) from module mc_top (D = \wb_data_i, Q = \u0.u0.tms).
Adding EN signal on $flatten\u0.\u0.$verific$lmr_req_reg$mc_cs_rf.v:206$4624 ($adff) from module mc_top (D = $flatten\u0.\u0.$verific$n382$4566, Q = \u0.u0.lmr_req).
Adding EN signal on $flatten\u0.\u0.$verific$inited_reg$mc_cs_rf.v:227$4635 ($adff) from module mc_top (D = 1'1, Q = \u0.u0.inited).
Adding EN signal on $flatten\u0.\u0.$verific$init_req_reg$mc_cs_rf.v:222$4633 ($adff) from module mc_top (D = $flatten\u0.\u0.$verific$n401$4573, Q = \u0.u0.init_req).
Adding SRST signal on $flatten\u0.\u0.$verific$csc_reg$mc_cs_rf.v:184$4611 ($dff) from module mc_top (D = { $flatten\u0.\u0.$verific$n102$4584 [31:6] $flatten\u0.\u0.$verific$n102$4584 [3] }, Q = { \u0.u0.csc [31:6] \u0.u0.csc [3] }, rval = 27'000000000000000000000000000).
Adding EN signal on $flatten\u0.\u0.$verific$csc_reg$mc_cs_rf.v:184$4611 ($dff) from module mc_top (D = { $flatten\u0.\u0.$verific$n135$4585 [5:4] $flatten\u0.\u0.$verific$n135$4585 [2:0] }, Q = { \u0.u0.csc [5:4] \u0.u0.csc [2:0] }).
Adding EN signal on $auto$ff.cc:262:slice$6546 ($sdff) from module mc_top (D = { \wb_data_i [31:6] \wb_data_i [3] }, Q = { \u0.u0.csc [31:6] \u0.u0.csc [3] }).
Adding EN signal on $flatten\u0.$verific$wp_err_reg$mc_rf.v:360$2771 ($adff) from module mc_top (D = $flatten\u0.$verific$n1078$2538, Q = \u0.wp_err).
Adding EN signal on $flatten\u0.$verific$tms_reg$mc_rf.v:402$2810 ($adff) from module mc_top (D = $flatten\u0.$verific$n2176$2678, Q = \u0.tms).
Adding EN signal on $flatten\u0.$verific$spec_req_cs_reg$mc_rf.v:478$2852 ($adff) from module mc_top (D = { \u0.spec_req_cs_d [7:1] \u0.spec_req_cs_t [0] }, Q = \u0.spec_req_cs).
Adding EN signal on $flatten\u0.$verific$sp_tms_reg$mc_rf.v:444$2829 ($adff) from module mc_top (D = $flatten\u0.$verific$n3371$2696, Q = \u0.sp_tms).
Adding EN signal on $flatten\u0.$verific$sp_csc_reg$mc_rf.v:423$2819 ($adff) from module mc_top (D = $flatten\u0.$verific$n2773$2688, Q = \u0.sp_csc).
Adding EN signal on $flatten\u0.$verific$poc_reg$mc_rf.v:333$2749 ($dff) from module mc_top (D = \u7.mc_data_ir [31:0], Q = \u0.poc).
Adding EN signal on $flatten\u0.$verific$csr_r_reg$mc_rf.v:298$2729_1 ($adff) from module mc_top (D = \wb_data_i [10:1], Q = \u0.csr_r [10:1]).
Adding EN signal on $flatten\u0.$verific$csr_r2_reg$mc_rf.v:292$2726 ($adff) from module mc_top (D = \wb_data_i [31:24], Q = \u0.csr_r2).
Adding EN signal on $flatten\u0.$verific$csc_reg$mc_rf.v:381$2790 ($adff) from module mc_top (D = $flatten\u0.$verific$n1578$2661, Q = \u0.csc).
Adding EN signal on $flatten\u0.$verific$csc_mask_r_reg$mc_rf.v:311$2740 ($adff) from module mc_top (D = \wb_data_i [10:0], Q = \u0.csc_mask_r).
Adding EN signal on $flatten\u0.$verific$cs_reg$mc_rf.v:351$2758 ($adff) from module mc_top (D = { 6'000000 \u0.cs1 \u0.cs0 }, Q = \u0.cs).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 70 unused cells and 63 unused wires.
<suppressed ~73 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~28 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~109 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 2 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$1839 ($adff) from module mc_top.
Setting constant 1-bit at position 3 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$1839 ($adff) from module mc_top.
Setting constant 1-bit at position 4 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$1839 ($adff) from module mc_top.
Setting constant 1-bit at position 5 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$1839 ($adff) from module mc_top.
Setting constant 1-bit at position 6 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$1839 ($adff) from module mc_top.
Setting constant 1-bit at position 7 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$1839 ($adff) from module mc_top.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~112 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6397 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6395 ($ne).
Removed top 2 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6423 ($ne).
Removed top 21 bits (of 32) from mux cell mc_top.$verific$mux_12$mc_top.v:280$24 ($mux).
Removed top 7 bits (of 8) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6315 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6300 ($ne).
Removed top 2 bits (of 4) from port B of cell mc_top.$flatten\u0.\u1.$verific$equal_14$mc_cs_rf.v:178$4698 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6431 ($ne).
Removed top 2 bits (of 4) from port B of cell mc_top.$flatten\u0.\u0.$verific$equal_14$mc_cs_rf.v:178$4601 ($eq).
Removed top 26 bits (of 32) from mux cell mc_top.$flatten\u0.\u0.$verific$mux_24$mc_cs_rf.v:184$4610 ($mux).
Removed top 6 bits (of 8) from mux cell mc_top.$flatten\u0.$verific$mux_317$mc_rf.v:510$2898 ($mux).
Removed top 6 bits (of 8) from port A of cell mc_top.$flatten\u0.$verific$and_352$mc_rf.v:453$2838 ($and).
Removed top 21 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6558 ($adffe).
Removed top 21 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_190$mc_rf.v:422$2817 ($mux).
Removed top 21 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_189$mc_rf.v:422$2816 ($mux).
Removed top 3 bits (of 5) from port B of cell mc_top.$flatten\u0.$verific$equal_78$mc_rf.v:310$2736 ($eq).
Removed top 20 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6562 ($adffe).
Removed top 1 bits (of 3) from port B of cell mc_top.$flatten\u0.$verific$equal_30$mc_rf.v:286$2713 ($eq).
Removed top 11 bits (of 12) from port B of cell mc_top.$flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$1723 ($add).
Removed top 11 bits (of 12) from mux cell mc_top.$flatten\u1.\u0.$verific$mux_10$mc_incn_r.v:97$1727 ($mux).
Removed top 9 bits (of 24) from mux cell mc_top.$flatten\u1.$verific$mux_31$mc_adr_sel.v:154$1430 ($mux).
Removed top 2 bits (of 3) from port B of cell mc_top.$flatten\u1.$verific$equal_25$mc_adr_sel.v:153$1425 ($eq).
Removed top 1 bits (of 3) from port B of cell mc_top.$flatten\u1.$verific$equal_23$mc_adr_sel.v:151$1423 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6554 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6351 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6349 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6345 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6343 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6341 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6339 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6337 ($ne).
Removed top 1 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6335 ($ne).
Removed top 4 bits (of 7) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6331 ($ne).
Removed top 2 bits (of 8) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6325 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$flatten\u2.\u0.$verific$equal_18$mc_obct.v:147$2286 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6433 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6450 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6435 ($ne).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u3.\u0.$verific$equal_41$mc_rd_fifo.v:124$2395 ($eq).
Removed top 2 bits (of 4) from port B of cell mc_top.$flatten\u3.\u0.$verific$equal_42$mc_rd_fifo.v:125$2396 ($eq).
Removed top 1 bits (of 4) from port B of cell mc_top.$flatten\u3.\u0.$verific$equal_43$mc_rd_fifo.v:126$2397 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$flatten\u3.$verific$equal_32$mc_dp.v:210$1672 ($eq).
Removed top 2 bits (of 3) from port B of cell mc_top.$flatten\u3.$verific$equal_7$mc_dp.v:173$1575 ($eq).
Removed top 7 bits (of 8) from port B of cell mc_top.$flatten\u4.$verific$add_32$mc_refresh.v:189$2469 ($add).
Removed top 7 bits (of 8) from port B of cell mc_top.$flatten\u4.$verific$add_11$mc_refresh.v:167$2456 ($add).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6387 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6385 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6381 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6379 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6375 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6371 ($ne).
Removed top 2 bits (of 4) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6369 ($ne).
Removed top 2 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6367 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6365 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6363 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6361 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6357 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6355 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6359 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6353 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6391 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6421 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6419 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6417 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6415 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6411 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6425 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6409 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6407 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6405 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6403 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6401 ($ne).
Removed top 33 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_906$mc_timing.v:1721$5988 ($eq).
Removed top 34 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_905$mc_timing.v:1714$5987 ($eq).
Removed top 35 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_904$mc_timing.v:1706$5986 ($eq).
Removed top 36 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_903$mc_timing.v:1695$5985 ($eq).
Removed top 37 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_902$mc_timing.v:1690$5984 ($eq).
Removed top 38 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_901$mc_timing.v:1681$5983 ($eq).
Removed top 30 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_900$mc_timing.v:1667$5982 ($eq).
Removed top 31 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_899$mc_timing.v:1660$5981 ($eq).
Removed top 32 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_898$mc_timing.v:1654$5980 ($eq).
Removed top 39 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_897$mc_timing.v:1642$5979 ($eq).
Removed top 40 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_896$mc_timing.v:1632$5978 ($eq).
Removed top 41 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_895$mc_timing.v:1620$5977 ($eq).
Removed top 42 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_894$mc_timing.v:1614$5976 ($eq).
Removed top 43 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_893$mc_timing.v:1603$5975 ($eq).
Removed top 44 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_892$mc_timing.v:1597$5974 ($eq).
Removed top 45 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_891$mc_timing.v:1588$5973 ($eq).
Removed top 46 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_890$mc_timing.v:1582$5972 ($eq).
Removed top 47 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_889$mc_timing.v:1572$5971 ($eq).
Removed top 48 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_888$mc_timing.v:1559$5970 ($eq).
Removed top 49 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_887$mc_timing.v:1539$5969 ($eq).
Removed top 50 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_886$mc_timing.v:1532$5968 ($eq).
Removed top 53 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_885$mc_timing.v:1522$5967 ($eq).
Removed top 54 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_884$mc_timing.v:1506$5966 ($eq).
Removed top 55 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_883$mc_timing.v:1501$5965 ($eq).
Removed top 56 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_882$mc_timing.v:1493$5964 ($eq).
Removed top 51 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_881$mc_timing.v:1458$5963 ($eq).
Removed top 52 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_880$mc_timing.v:1430$5962 ($eq).
Removed top 57 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_879$mc_timing.v:1408$5961 ($eq).
Removed top 58 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_878$mc_timing.v:1388$5960 ($eq).
Removed top 59 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_877$mc_timing.v:1377$5959 ($eq).
Removed top 60 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_876$mc_timing.v:1367$5958 ($eq).
Removed top 61 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_875$mc_timing.v:1349$5957 ($eq).
Removed top 14 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_874$mc_timing.v:1338$5956 ($eq).
Removed top 15 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_873$mc_timing.v:1332$5955 ($eq).
Removed top 16 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_872$mc_timing.v:1321$5954 ($eq).
Removed top 17 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_871$mc_timing.v:1309$5953 ($eq).
Removed top 18 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_870$mc_timing.v:1301$5952 ($eq).
Removed top 25 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_869$mc_timing.v:1294$5951 ($eq).
Removed top 26 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_868$mc_timing.v:1288$5950 ($eq).
Removed top 27 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_867$mc_timing.v:1281$5949 ($eq).
Removed top 19 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_866$mc_timing.v:1271$5948 ($eq).
Removed top 20 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_865$mc_timing.v:1261$5947 ($eq).
Removed top 21 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_864$mc_timing.v:1250$5946 ($eq).
Removed top 22 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_863$mc_timing.v:1241$5945 ($eq).
Removed top 23 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_862$mc_timing.v:1230$5944 ($eq).
Removed top 24 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_861$mc_timing.v:1221$5943 ($eq).
Removed top 28 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_860$mc_timing.v:1207$5942 ($eq).
Removed top 29 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_859$mc_timing.v:1199$5941 ($eq).
Removed top 6 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_858$mc_timing.v:1180$5940 ($eq).
Removed top 7 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_857$mc_timing.v:1158$5939 ($eq).
Removed top 8 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_856$mc_timing.v:1151$5938 ($eq).
Removed top 9 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_855$mc_timing.v:1136$5937 ($eq).
Removed top 10 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_854$mc_timing.v:1125$5936 ($eq).
Removed top 11 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_853$mc_timing.v:1116$5935 ($eq).
Removed top 12 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_852$mc_timing.v:1105$5934 ($eq).
Removed top 13 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_851$mc_timing.v:1095$5933 ($eq).
Removed top 1 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_849$mc_timing.v:1074$5931 ($eq).
Removed top 2 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_848$mc_timing.v:1064$5930 ($eq).
Removed top 3 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_847$mc_timing.v:1058$5929 ($eq).
Removed top 4 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_846$mc_timing.v:1046$5928 ($eq).
Removed top 5 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_845$mc_timing.v:1036$5927 ($eq).
Removed top 62 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_844$mc_timing.v:1024$5926 ($eq).
Removed top 63 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_843$mc_timing.v:1017$5925 ($eq).
Removed top 64 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_842$mc_timing.v:900$5924 ($eq).
Removed top 65 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_841$mc_timing.v:895$5923 ($eq).
Removed top 2 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6427 ($ne).
Removed top 1 bits (of 3) from port B of cell mc_top.$flatten\u5.$verific$equal_381$mc_timing.v:908$5674 ($eq).
Removed top 10 bits (of 11) from port B of cell mc_top.$flatten\u5.$verific$sub_327$mc_timing.v:766$5635 ($sub).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6399 ($ne).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u5.$verific$sub_311$mc_timing.v:744$5621 ($sub).
Removed top 7 bits (of 8) from port B of cell mc_top.$flatten\u5.$verific$sub_289$mc_timing.v:732$5602 ($sub).
Removed top 2 bits (of 4) from port A of cell mc_top.$flatten\u5.$verific$add_272$mc_timing.v:704$5587 ($add).
Removed top 8 bits (of 9) from port B of cell mc_top.$flatten\u5.$verific$sub_241$mc_timing.v:693$5558 ($sub).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u5.$verific$mux_230$mc_timing.v:676$5549 ($mux).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u5.$verific$sub_181$mc_timing.v:629$5513 ($sub).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u5.$verific$add_177$mc_timing.v:627$5509 ($add).
Removed top 1 bits (of 2) from port B of cell mc_top.$flatten\u5.$verific$equal_62$mc_timing.v:509$5436 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6393 ($ne).
Removed top 6 bits (of 8) from port Y of cell mc_top.$flatten\u7.$verific$inv_159$mc_mem_if.v:354$1841 ($not).
Removed top 6 bits (of 8) from port A of cell mc_top.$flatten\u7.$verific$inv_159$mc_mem_if.v:354$1841 ($not).
Removed top 6 bits (of 8) from port Y of cell mc_top.$flatten\u7.$verific$and_160$mc_mem_if.v:354$1840 ($and).
Removed top 6 bits (of 8) from port A of cell mc_top.$flatten\u7.$verific$and_160$mc_mem_if.v:354$1840 ($and).
Removed top 6 bits (of 8) from port B of cell mc_top.$flatten\u7.$verific$and_160$mc_mem_if.v:354$1840 ($and).
Removed top 6 bits (of 8) from mux cell mc_top.$flatten\u7.$verific$mux_168$mc_mem_if.v:353$1838 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$verific$mux_10$mc_top.v:279$22 ($mux).
Removed top 26 bits (of 32) from mux cell mc_top.$flatten\u0.\u0.$verific$mux_23$mc_cs_rf.v:184$4609 ($mux).
Removed top 20 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_147$mc_rf.v:380$2788 ($mux).
Removed top 20 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_146$mc_rf.v:380$2787 ($mux).
Removed top 4 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6557 ($adffe).
Removed top 4 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6555 ($adffe).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_212$mc_rf.v:443$2827 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_169$mc_rf.v:401$2808 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_211$mc_rf.v:443$2826 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_168$mc_rf.v:401$2807 ($mux).
Removed top 20 bits (of 32) from wire mc_top.$flatten\u0.$verific$n1545$2660.
Removed top 20 bits (of 32) from wire mc_top.$flatten\u0.$verific$n1578$2661.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2143$2677.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2176$2678.
Removed top 21 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2740$2687.
Removed top 21 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2773$2688.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n3338$2695.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n3371$2696.
Removed top 26 bits (of 32) from wire mc_top.$flatten\u0.\u0.$verific$n102$4584.
Removed top 26 bits (of 32) from wire mc_top.$flatten\u0.\u0.$verific$n135$4585.
Removed top 7 bits (of 46) from wire mc_top.$flatten\u5.$verific$n3968$5331.
Removed top 3 bits (of 4) from wire mc_top.$flatten\u5.$verific$n6553$5374.
Removed top 2 bits (of 27) from wire mc_top.$flatten\u5.$verific$n7174$5385.
Removed top 3 bits (of 4) from wire mc_top.$flatten\u7.$verific$n275$1771.
Removed top 6 bits (of 8) from wire mc_top.$flatten\u7.$verific$n395$1776.
Removed top 6 bits (of 8) from wire mc_top.$flatten\u7.$verific$n397$1778.
Removed top 6 bits (of 8) from wire mc_top.cs.
Removed top 20 bits (of 32) from wire mc_top.csc.
Removed top 21 bits (of 32) from wire mc_top.csc_s.
Removed top 9 bits (of 24) from wire mc_top.mc_addr_d.
Removed top 4 bits (of 32) from wire mc_top.tms.
Removed top 4 bits (of 32) from wire mc_top.tms_s.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 64 unused cells and 118 unused wires.
<suppressed ~65 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mc_top:
  creating $macc model for $flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$1723 ($add).
  creating $macc model for $flatten\u1.\u0.$verific$add_8$mc_incn_r.v:94$1726 ($add).
  creating $macc model for $flatten\u4.$verific$add_11$mc_refresh.v:167$2456 ($add).
  creating $macc model for $flatten\u4.$verific$add_32$mc_refresh.v:189$2469 ($add).
  creating $macc model for $flatten\u5.$verific$add_177$mc_timing.v:627$5509 ($add).
  creating $macc model for $flatten\u5.$verific$add_272$mc_timing.v:704$5587 ($add).
  creating $macc model for $flatten\u5.$verific$sub_181$mc_timing.v:629$5513 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_241$mc_timing.v:693$5558 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_289$mc_timing.v:732$5602 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_311$mc_timing.v:744$5621 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_327$mc_timing.v:766$5635 ($sub).
  creating $alu model for $macc $flatten\u5.$verific$sub_327$mc_timing.v:766$5635.
  creating $alu model for $macc $flatten\u5.$verific$sub_311$mc_timing.v:744$5621.
  creating $alu model for $macc $flatten\u5.$verific$sub_289$mc_timing.v:732$5602.
  creating $alu model for $macc $flatten\u5.$verific$sub_241$mc_timing.v:693$5558.
  creating $alu model for $macc $flatten\u5.$verific$sub_181$mc_timing.v:629$5513.
  creating $alu model for $macc $flatten\u5.$verific$add_272$mc_timing.v:704$5587.
  creating $alu model for $macc $flatten\u5.$verific$add_177$mc_timing.v:627$5509.
  creating $alu model for $macc $flatten\u4.$verific$add_32$mc_refresh.v:189$2469.
  creating $alu model for $macc $flatten\u4.$verific$add_11$mc_refresh.v:167$2456.
  creating $alu model for $macc $flatten\u1.\u0.$verific$add_8$mc_incn_r.v:94$1726.
  creating $alu model for $macc $flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$1723.
  creating $alu cell for $flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$1723: $auto$alumacc.cc:485:replace_alu$7172
  creating $alu cell for $flatten\u1.\u0.$verific$add_8$mc_incn_r.v:94$1726: $auto$alumacc.cc:485:replace_alu$7175
  creating $alu cell for $flatten\u4.$verific$add_11$mc_refresh.v:167$2456: $auto$alumacc.cc:485:replace_alu$7178
  creating $alu cell for $flatten\u4.$verific$add_32$mc_refresh.v:189$2469: $auto$alumacc.cc:485:replace_alu$7181
  creating $alu cell for $flatten\u5.$verific$add_177$mc_timing.v:627$5509: $auto$alumacc.cc:485:replace_alu$7184
  creating $alu cell for $flatten\u5.$verific$add_272$mc_timing.v:704$5587: $auto$alumacc.cc:485:replace_alu$7187
  creating $alu cell for $flatten\u5.$verific$sub_181$mc_timing.v:629$5513: $auto$alumacc.cc:485:replace_alu$7190
  creating $alu cell for $flatten\u5.$verific$sub_241$mc_timing.v:693$5558: $auto$alumacc.cc:485:replace_alu$7193
  creating $alu cell for $flatten\u5.$verific$sub_289$mc_timing.v:732$5602: $auto$alumacc.cc:485:replace_alu$7196
  creating $alu cell for $flatten\u5.$verific$sub_311$mc_timing.v:744$5621: $auto$alumacc.cc:485:replace_alu$7199
  creating $alu cell for $flatten\u5.$verific$sub_327$mc_timing.v:766$5635: $auto$alumacc.cc:485:replace_alu$7202
  created 11 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~117 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7144: { $flatten\u5.$verific$n7786$5138 $flatten\u5.$verific$n7800$5152 $flatten\u5.$verific$n7802$5154 $flatten\u5.$verific$n7804$5156 $flatten\u5.$verific$n7808$5160 $flatten\u5.$verific$n7812$5164 $auto$rtlil.cc:2398:Or$7133 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7168: { $flatten\u5.$verific$n7786$5138 $flatten\u5.$verific$n7792$5144 $flatten\u5.$verific$n7793$5145 $flatten\u5.$verific$n7800$5152 $flatten\u5.$verific$n7802$5154 $flatten\u5.$verific$n7804$5156 $flatten\u5.$verific$n7808$5160 $flatten\u5.$verific$n7812$5164 $auto$rtlil.cc:2398:Or$7133 $auto$rtlil.cc:2398:Or$7141 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7066: { $flatten\u5.$verific$n7777$5129 $flatten\u5.$verific$n7778$5130 $flatten\u5.$verific$n7782$5134 $flatten\u5.$verific$n7783$5135 $auto$rtlil.cc:2398:Or$7031 $auto$rtlil.cc:2398:Or$7039 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7116: { $flatten\u5.$verific$n7769$5121 $flatten\u5.$verific$n7770$5122 $flatten\u5.$verific$n7773$5125 $flatten\u5.$verific$n7774$5126 $flatten\u5.$verific$n7777$5129 $flatten\u5.$verific$n7778$5130 $flatten\u5.$verific$n7782$5134 $flatten\u5.$verific$n7783$5135 $auto$rtlil.cc:2398:Or$7031 $auto$rtlil.cc:2398:Or$7039 $auto$rtlil.cc:2398:Or$7051 $auto$rtlil.cc:2398:Or$7059 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7112: { $flatten\u5.$verific$n7760$5112 $flatten\u5.$verific$n7762$5114 $flatten\u5.$verific$n7765$5117 $flatten\u5.$verific$n7766$5118 $auto$rtlil.cc:2398:Or$7075 $auto$rtlil.cc:2398:Or$7083 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6974: { $flatten\u5.$verific$n7810$5162 $flatten\u5.$verific$n7811$5163 $flatten\u5.$verific$n7814$5166 $flatten\u5.$verific$n7815$5167 $auto$rtlil.cc:2398:Or$6939 $auto$rtlil.cc:2398:Or$6947 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7022: { $flatten\u5.$verific$n7802$5154 $flatten\u5.$verific$n7803$5155 $flatten\u5.$verific$n7806$5158 $flatten\u5.$verific$n7807$5159 $flatten\u5.$verific$n7810$5162 $flatten\u5.$verific$n7811$5163 $flatten\u5.$verific$n7814$5166 $flatten\u5.$verific$n7815$5167 $auto$rtlil.cc:2398:Or$6939 $auto$rtlil.cc:2398:Or$6947 $auto$rtlil.cc:2398:Or$6959 $auto$rtlil.cc:2398:Or$6967 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7018: { $flatten\u5.$verific$n7794$5146 $flatten\u5.$verific$n7795$5147 $flatten\u5.$verific$n7798$5150 $flatten\u5.$verific$n7799$5151 $auto$rtlil.cc:2398:Or$6983 $auto$rtlil.cc:2398:Or$6991 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6800: { $auto$rtlil.cc:2398:Or$6787 $flatten\u5.$verific$n7790$5142 $flatten\u5.$verific$n7791$5143 $flatten\u5.$verific$n7792$5144 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7120: { $flatten\u5.$verific$n7786$5138 $flatten\u5.$verific$n7787$5139 $flatten\u5.$verific$n7790$5142 $flatten\u5.$verific$n7791$5143 $flatten\u5.$verific$n7794$5146 $flatten\u5.$verific$n7795$5147 $flatten\u5.$verific$n7798$5150 $flatten\u5.$verific$n7799$5151 $flatten\u5.$verific$n7802$5154 $flatten\u5.$verific$n7803$5155 $flatten\u5.$verific$n7806$5158 $flatten\u5.$verific$n7807$5159 $flatten\u5.$verific$n7810$5162 $flatten\u5.$verific$n7811$5163 $flatten\u5.$verific$n7814$5166 $flatten\u5.$verific$n7815$5167 $auto$rtlil.cc:2398:Or$6939 $auto$rtlil.cc:2398:Or$6947 $auto$rtlil.cc:2398:Or$6959 $auto$rtlil.cc:2398:Or$6967 $auto$rtlil.cc:2398:Or$6983 $auto$rtlil.cc:2398:Or$6991 $auto$rtlil.cc:2398:Or$7003 $auto$rtlil.cc:2398:Or$7011 }
  Optimizing cells in module \mc_top.
Performed a total of 10 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\u5.$verific$lmr_ack_reg$mc_timing.v:458$5404 ($dff) from module mc_top (D = $auto$rtlil.cc:2464:Mux$6669, Q = \u5.lmr_ack, rval = 1'1).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 2 unused cells and 7 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~117 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> stat

3.22. Printing statistics.

=== mc_top ===

   Number of wires:               1852
   Number of wire bits:          17580
   Number of public wires:         806
   Number of public wire bits:    5509
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1280
     $adff                          45
     $adffe                         44
     $alu                           11
     $and                          207
     $bmux                          12
     $dff                           42
     $dffe                          27
     $eq                            94
     $logic_not                     16
     $mux                          452
     $ne                            63
     $not                           66
     $or                            80
     $reduce_and                     9
     $reduce_bool                   32
     $reduce_or                     56
     $reduce_xor                     8
     $sdff                           6
     $sdffe                          6
     $xor                            4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$d707f0beb0b2a210c8cf7f6f49d0e464a0d63ba8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$d4fbf181fbf74ad2c33c84c81168c20bdbe88f93\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_90_alu for cells of type $alu.
Using template $paramod$105e0d321f5d551d84ddd742696a07b0281850eb\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
No more expansions possible.
<suppressed ~3143 debug messages>

yosys> stat

3.24. Printing statistics.

=== mc_top ===

   Number of wires:               3512
   Number of wire bits:          42278
   Number of public wires:         806
   Number of public wire bits:    5509
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              25446
     $_AND_                        560
     $_DFFE_PP0N_                    4
     $_DFFE_PP0P_                  162
     $_DFFE_PP1P_                   76
     $_DFFE_PP_                    432
     $_DFF_PP0_                     37
     $_DFF_PP1_                     15
     $_DFF_P_                      176
     $_MUX_                      13237
     $_NOT_                        270
     $_OR_                        5355
     $_SDFFE_PP0P_                 104
     $_SDFFE_PP1P_                  34
     $_SDFF_PN0_                     2
     $_SDFF_PP0_                     9
     $_SDFF_PP1_                     6
     $_XOR_                       4963
     adder_carry                     4


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~9130 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~37899 debug messages>
Removed a total of 12633 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 82 unused cells and 1070 unused wires.
<suppressed ~84 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~10 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.25.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~995 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$9659 ($_DFFE_PP_) from module mc_top (D = $auto$simplemap.cc:309:simplemap_bmux$9757 [9], Q = \u1.col_adr [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$9658 ($_DFFE_PP_) from module mc_top (D = $auto$simplemap.cc:309:simplemap_bmux$9798 [8], Q = \u1.col_adr [8], rval = 1'0).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 3 unused cells and 124 unused wires.
<suppressed ~4 debug messages>

3.26.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.26.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~276 debug messages>

yosys> opt_merge

3.26.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.26.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.26.10. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$32497 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$33964
        $auto$simplemap.cc:86:simplemap_bitop$34253

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10222 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$10143
        $auto$simplemap.cc:312:simplemap_bmux$10117

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16400 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16458
        $auto$simplemap.cc:86:simplemap_bitop$16461

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16401 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16447
        $auto$simplemap.cc:86:simplemap_bitop$16453

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16402 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16430
        $auto$simplemap.cc:86:simplemap_bitop$16439

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16403 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16409
        $auto$simplemap.cc:86:simplemap_bitop$16420


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~6 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$35147 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$34469
        $auto$simplemap.cc:137:simplemap_reduce$16429

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16405 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16447
        $auto$simplemap.cc:86:simplemap_bitop$16458

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16406 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16409
        $auto$simplemap.cc:86:simplemap_bitop$16430


yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~3 debug messages>

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$35150 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$16417
        $auto$simplemap.cc:137:simplemap_reduce$16427

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16408 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16409
        $auto$simplemap.cc:86:simplemap_bitop$16447


yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~2 debug messages>

3.28.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.28.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.28.34. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.28.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.38. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr -full

3.28.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.28.42. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Summary of detected clock domains:
  135 cells in clk=\clk_i, en=!\u5.mc_le, arst=\rst_i, srst={ }
  61 cells in clk=\clk_i, en=!$auto$rtlil.cc:2547:NotGate$34872, arst=\rst_i, srst={ }
  12 cells in clk=\clk_i, en={ }, arst={ }, srst=!$auto$opt_reduce.cc:134:opt_pmux$6272
  618 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  22 cells in clk=\clk_i, en={ }, arst={ }, srst=$auto$rtlil.cc:2464:Mux$7047 [45]
  9 cells in clk=\clk_i, en={ }, arst={ }, srst=$flatten\u5.$verific$n7897$5176
  2 cells in clk=\clk_i, en={ }, arst=\u5.rsts, srst={ }
  719 cells in clk=\clk_i, en={ }, arst=\rst_i, srst={ }
  332 cells in clk=\clk_i, en=\u5.cs_le, arst={ }, srst={ }
  7 cells in clk=\clk_i, en=\u5.cs_le, arst=\rst_i, srst={ }
  5 cells in clk=\clk_i, en=$flatten\u6.$verific$n97$6143, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$flatten\u6.$verific$n97$6143, arst=\rst_i, srst={ }
  22 cells in clk=\clk_i, en=\u5.pack_le0, arst={ }, srst={ }
  16 cells in clk=\clk_i, en=\u5.pack_le2, arst={ }, srst={ }
  35 cells in clk=\clk_i, en=\u5.ir_cnt_dec, arst={ }, srst=!$auto$rtlil.cc:2547:NotGate$34952
  54 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6553, arst=\rst_i, srst={ }
  60 cells in clk=\clk_i, en=\u0.sreq_cs_le, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=\u0.rst_r3, arst={ }, srst={ }
  110 cells in clk=\clk_i, en=$flatten\u0.$verific$n1713$2543, arst=\rst_i, srst={ }
  46 cells in clk=\clk_i, en=$flatten\u0.$verific$n1115$2540, arst=\rst_i, srst={ }
  7 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6296, arst=\rst_i, srst={ }
  7 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6299, arst=\rst_i, srst={ }
  43 cells in clk=\clk_i, en=$flatten\u0.$verific$n768$2515, arst=\rst_i, srst={ }
  46 cells in clk=\clk_i, en=$flatten\u0.$verific$n869$2518, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6314, arst={ }, srst={ }
  191 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6311, arst=\rst_i, srst={ }
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6317, arst=\rst_i, srst={ }
  14 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6305, arst=\rst_i, srst={ }
  26 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6302, arst=\rst_i, srst={ }
  28 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6308, arst=\rst_i, srst={ }
  65 cells in clk=\clk_i, en=$flatten\u3.$verific$n158$1524, arst={ }, srst={ }
  38 cells in clk=\clk_i, en=$flatten\u3.\u0.$verific$n406$2349, arst={ }, srst={ }
  116 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6455, arst={ }, srst=!$auto$rtlil.cc:2464:Mux$7081 [2]
  39 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6468, arst=\rst_i, srst={ }
  28 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6462, arst=\rst_i, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6471, arst=\rst_i, srst={ }
  34 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6459, arst=\rst_i, srst={ }
  28 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6465, arst=\rst_i, srst={ }
  1470 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6436, arst=\rst_i, srst={ }
  34 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6451, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6529, arst=\rst_i, srst={ }
  148 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6524, arst={ }, srst={ }
  38 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6549, arst={ }, srst={ }
  14 cells in clk=\clk_i, en=$flatten\u1.$verific$n560$1341, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$flatten\u1.$verific$n560$1341, arst={ }, srst=\csc_s [5]
  4 cells in clk=\clk_i, en=$flatten\u1.$verific$n560$1341, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$35126
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6488, arst=\rst_i, srst={ }
  21 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6474, arst=\rst_i, srst={ }
  31 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6484, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6504, arst=\rst_i, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6507, arst=\rst_i, srst={ }
  7 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6510, arst=\rst_i, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6497, arst=\rst_i, srst={ }
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6491, arst=\rst_i, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6494, arst=\rst_i, srst={ }
  73 cells in clk=\clk_i, en=$flatten\u3.\u0.$verific$n67$2346, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$flatten\u3.\u0.$verific$n180$2347, arst={ }, srst={ }
  22 cells in clk=\clk_i, en=$flatten\u2.\u1.$verific$n15$2235, arst={ }, srst={ }
  15 cells in clk=\clk_i, en=$flatten\u2.\u1.$verific$n33$2243, arst={ }, srst={ }
  17 cells in clk=\clk_i, en=$flatten\u2.\u1.$verific$n20$2237, arst={ }, srst={ }
  14 cells in clk=\clk_i, en=$flatten\u2.\u1.$verific$n46$2249, arst={ }, srst={ }
  15 cells in clk=\clk_i, en=$flatten\u2.\u0.$verific$n46$2249, arst={ }, srst={ }
  15 cells in clk=\clk_i, en=$flatten\u2.\u0.$verific$n15$2235, arst={ }, srst={ }
  15 cells in clk=\clk_i, en=$flatten\u2.\u0.$verific$n20$2237, arst={ }, srst={ }
  17 cells in clk=\clk_i, en=$flatten\u2.\u0.$verific$n33$2243, arst={ }, srst={ }
  54 cells in clk=\clk_i, en=$flatten\u0.\u0.$verific$n236$4560, arst={ }, srst=\u0.rst_r2
  57 cells in clk=\clk_i, en=$flatten\u0.\u0.$verific$n389$4567, arst={ }, srst=\u0.rst_r2
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6533, arst=\rst_i, srst={ }
  3 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6544, arst=\rst_i, srst={ }
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6540, arst=\rst_i, srst={ }
  2 cells in clk=\clk_i, en=\u0.u1.init_ack, arst=\rst_i, srst={ }
  4 cells in clk=\clk_i, en=\u0.u0.init_ack, arst=\rst_i, srst={ }
  91 cells in clk=\clk_i, en=$flatten\u0.\u1.$verific$n235$4658, arst={ }, srst=\u0.rst_r2
  73 cells in clk=\clk_i, en=$flatten\u0.\u1.$verific$n388$4665, arst={ }, srst=\u0.rst_r2
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6513, arst=\rst_i, srst={ }
  73 cells in clk=\clk_i, en=$flatten\u3.\u0.$verific$n293$2348, arst={ }, srst={ }
  48 cells in clk=\clk_i, en=\wb_stb_i, arst={ }, srst={ }
  11 cells in clk=\mc_clk_i, en={ }, arst={ }, srst=!$auto$rtlil.cc:2547:NotGate$35004
  219 cells in clk=\mc_clk_i, en={ }, arst={ }, srst={ }
  4 cells in clk=\mc_clk_i, en={ }, arst={ }, srst=\u5.susp_sel_r
  3 cells in clk=\mc_clk_i, en={ }, arst={ }, srst=\u5.rfr_ack_r
  10 cells in clk=\mc_clk_i, en={ }, arst=\rst_i, srst={ }

3.29.2. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u5.mc_le, asynchronously reset by \rst_i
Extracted 135 gates and 222 wires to a netlist network with 85 inputs and 43 outputs.

3.29.2.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       18
ABC RESULTS:            ANDNOT cells:       22
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:       25
ABC RESULTS:               NOR cells:       27
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       21
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       94
ABC RESULTS:           input signals:       85
ABC RESULTS:          output signals:       43
Removing temp directory.

3.29.3. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$auto$rtlil.cc:2547:NotGate$34872, asynchronously reset by \rst_i
Extracted 61 gates and 117 wires to a netlist network with 55 inputs and 21 outputs.

3.29.3.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       19
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:       17
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       11
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       41
ABC RESULTS:           input signals:       55
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.4. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by !$auto$opt_reduce.cc:134:opt_pmux$6272
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 10 outputs.

3.29.4.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:        7
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.5. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 618 gates and 1048 wires to a netlist network with 428 inputs and 221 outputs.

3.29.5.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 76 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      168
ABC RESULTS:            ANDNOT cells:       21
ABC RESULTS:               BUF cells:       67
ABC RESULTS:               DFF cells:       76
ABC RESULTS:               MUX cells:       81
ABC RESULTS:              NAND cells:      196
ABC RESULTS:               NOR cells:       36
ABC RESULTS:               NOT cells:       27
ABC RESULTS:                OR cells:      104
ABC RESULTS:             ORNOT cells:       30
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:      399
ABC RESULTS:           input signals:      428
ABC RESULTS:          output signals:      221
Removing temp directory.

3.29.6. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by $auto$rtlil.cc:2464:Mux$7047 [45]
Extracted 22 gates and 44 wires to a netlist network with 22 inputs and 17 outputs.

3.29.6.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.6.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       17
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.7. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by $flatten\u5.$verific$n7897$5176
Extracted 9 gates and 16 wires to a netlist network with 6 inputs and 9 outputs.

3.29.7.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.7.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.8. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by \u5.rsts
Extracted 2 gates and 2 wires to a netlist network with 0 inputs and 2 outputs.

3.29.8.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.8.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.9. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by \rst_i
Extracted 719 gates and 1013 wires to a netlist network with 292 inputs and 223 outputs.

3.29.9.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      121
ABC RESULTS:            ANDNOT cells:       77
ABC RESULTS:               BUF cells:       31
ABC RESULTS:               DFF cells:       46
ABC RESULTS:               MUX cells:       23
ABC RESULTS:              NAND cells:       74
ABC RESULTS:               NOR cells:       89
ABC RESULTS:               NOT cells:       66
ABC RESULTS:               ONE cells:        1
ABC RESULTS:                OR cells:       66
ABC RESULTS:             ORNOT cells:       15
ABC RESULTS:        internal signals:      498
ABC RESULTS:           input signals:      292
ABC RESULTS:          output signals:      223
Removing temp directory.

3.29.10. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35369$lo15
Extracted 331 gates and 476 wires to a netlist network with 145 inputs and 34 outputs.

3.29.10.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 15 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.10.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      147
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:       15
ABC RESULTS:               MUX cells:       64
ABC RESULTS:              NAND cells:       44
ABC RESULTS:               NOR cells:       11
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:       88
ABC RESULTS:              XNOR cells:       50
ABC RESULTS:        internal signals:      297
ABC RESULTS:           input signals:      145
ABC RESULTS:          output signals:       34
Removing temp directory.

3.29.11. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35369$lo15, asynchronously reset by \rst_i
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 4 outputs.

3.29.11.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.11.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.12. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u6.$verific$n97$6143
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 5 outputs.

3.29.12.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 4 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.12.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        4
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.13. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$37303$flatten\u6.$verific$n97$6143, asynchronously reset by \rst_i
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.29.13.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.13.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.14. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35369$lo14
Extracted 22 gates and 34 wires to a netlist network with 12 inputs and 10 outputs.

3.29.14.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 8 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.14.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:              NAND cells:        1
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.15. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36184$lo0
Extracted 16 gates and 33 wires to a netlist network with 17 inputs and 8 outputs.

3.29.15.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 8 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.15.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.16. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35164$u5.ir_cnt_dec, synchronously reset by !$auto$rtlil.cc:2547:NotGate$34952
Extracted 35 gates and 54 wires to a netlist network with 19 inputs and 15 outputs.

3.29.16.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.16.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        4
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       13
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.17. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6553, asynchronously reset by \rst_i
Extracted 54 gates and 108 wires to a netlist network with 54 inputs and 3 outputs.

3.29.17.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.17.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:       11
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:       22
ABC RESULTS:               XOR cells:        9
ABC RESULTS:        internal signals:       51
ABC RESULTS:           input signals:       54
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.18. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36228$lo41, asynchronously reset by \rst_i
Extracted 60 gates and 123 wires to a netlist network with 63 inputs and 41 outputs.

3.29.18.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.18.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       18
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        6
ABC RESULTS:              NAND cells:       48
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       63
ABC RESULTS:          output signals:       41
Removing temp directory.

3.29.19. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36228$u0.rst_r3
Extracted 56 gates and 99 wires to a netlist network with 43 inputs and 56 outputs.

3.29.19.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.19.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       13
ABC RESULTS:               BUF cells:       64
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       10
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       43
ABC RESULTS:          output signals:       56
Removing temp directory.

3.29.20. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u0.$verific$n1713$2543, asynchronously reset by \rst_i
Extracted 110 gates and 194 wires to a netlist network with 84 inputs and 29 outputs.

3.29.20.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.20.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               DFF cells:       56
ABC RESULTS:               MUX cells:       52
ABC RESULTS:               NOT cells:       84
ABC RESULTS:        internal signals:       81
ABC RESULTS:           input signals:       84
ABC RESULTS:          output signals:       29
Removing temp directory.

3.29.21. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u0.$verific$n1115$2540, asynchronously reset by \rst_i
Extracted 46 gates and 77 wires to a netlist network with 31 inputs and 16 outputs.

3.29.21.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.21.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:       15
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       30
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.22. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6296, asynchronously reset by \rst_i
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.29.22.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.22.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.23. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6299, asynchronously reset by \rst_i
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 3 outputs.

3.29.23.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.23.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.24. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u0.$verific$n768$2515, asynchronously reset by \rst_i
Extracted 37 gates and 71 wires to a netlist network with 34 inputs and 28 outputs.

3.29.24.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.24.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       29
ABC RESULTS:               DFF cells:       18
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       28
Removing temp directory.

3.29.25. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u0.$verific$n869$2518, asynchronously reset by \rst_i
Extracted 46 gates and 93 wires to a netlist network with 47 inputs and 36 outputs.

3.29.25.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.25.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       23
ABC RESULTS:               DFF cells:       11
ABC RESULTS:               MUX cells:       11
ABC RESULTS:               NOT cells:       22
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       47
ABC RESULTS:          output signals:       36
Removing temp directory.

3.29.26. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6314
Extracted 173 gates and 229 wires to a netlist network with 54 inputs and 25 outputs.

3.29.26.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 9 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.26.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               DFF cells:        9
ABC RESULTS:               MUX cells:       10
ABC RESULTS:              NAND cells:       47
ABC RESULTS:               NOR cells:       15
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:       25
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      150
ABC RESULTS:           input signals:       54
ABC RESULTS:          output signals:       25
Removing temp directory.

3.29.27. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6311, asynchronously reset by \rst_i
Extracted 187 gates and 260 wires to a netlist network with 71 inputs and 28 outputs.

3.29.27.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.27.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       29
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:       58
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:       25
ABC RESULTS:             ORNOT cells:       14
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:      161
ABC RESULTS:           input signals:       71
ABC RESULTS:          output signals:       28
Removing temp directory.

3.29.28. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6317, asynchronously reset by \rst_i
Extracted 5 gates and 10 wires to a netlist network with 4 inputs and 5 outputs.

3.29.28.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.28.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.29. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6305, asynchronously reset by \rst_i
Extracted 14 gates and 29 wires to a netlist network with 13 inputs and 5 outputs.

3.29.29.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.29.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.30. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6302, asynchronously reset by \rst_i
Extracted 26 gates and 51 wires to a netlist network with 24 inputs and 12 outputs.

3.29.30.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.30.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        7
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.31. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6308, asynchronously reset by \rst_i
Extracted 28 gates and 54 wires to a netlist network with 25 inputs and 15 outputs.

3.29.31.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.31.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.32. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u3.$verific$n158$1524
Extracted 65 gates and 99 wires to a netlist network with 34 inputs and 37 outputs.

3.29.32.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 36 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.32.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       64
ABC RESULTS:               DFF cells:       32
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:       16
ABC RESULTS:               XOR cells:       12
ABC RESULTS:        internal signals:       28
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       37
Removing temp directory.

3.29.33. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u3.\u0.$verific$n406$2349
Extracted 38 gates and 78 wires to a netlist network with 40 inputs and 37 outputs.

3.29.33.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 36 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.33.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       71
ABC RESULTS:               DFF cells:       36
ABC RESULTS:               MUX cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:       37
Removing temp directory.

3.29.34. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6455, synchronously reset by !$auto$rtlil.cc:2464:Mux$7081 [2]
Extracted 116 gates and 138 wires to a netlist network with 21 inputs and 13 outputs.

3.29.34.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.34.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               DFF cells:       11
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       17
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      104
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.35. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6468, asynchronously reset by \rst_i
Extracted 39 gates and 48 wires to a netlist network with 8 inputs and 9 outputs.

3.29.35.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.35.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        8
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:       14
ABC RESULTS:                OR cells:        1
ABC RESULTS:               XOR cells:        7
ABC RESULTS:        internal signals:       31
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.36. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36228$auto$opt_dff.cc:194:make_patterns_logic$6462, asynchronously reset by \rst_i
Extracted 28 gates and 55 wires to a netlist network with 26 inputs and 28 outputs.

3.29.36.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.36.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       21
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        5
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       28
Removing temp directory.

3.29.37. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6471, asynchronously reset by \rst_i
Extracted 11 gates and 14 wires to a netlist network with 2 inputs and 5 outputs.

3.29.37.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.37.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.38. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6459, asynchronously reset by \rst_i
Extracted 33 gates and 38 wires to a netlist network with 4 inputs and 6 outputs.

3.29.38.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.38.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       28
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.39. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6465, asynchronously reset by \rst_i
Extracted 27 gates and 37 wires to a netlist network with 9 inputs and 17 outputs.

3.29.39.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.39.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.40. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6436, asynchronously reset by \rst_i
Extracted 1470 gates and 1749 wires to a netlist network with 277 inputs and 187 outputs.

3.29.40.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.40.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      177
ABC RESULTS:            ANDNOT cells:       45
ABC RESULTS:               BUF cells:       65
ABC RESULTS:               DFF cells:       66
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:      234
ABC RESULTS:               NOR cells:       42
ABC RESULTS:               NOT cells:       22
ABC RESULTS:                OR cells:       87
ABC RESULTS:             ORNOT cells:       74
ABC RESULTS:        internal signals:     1285
ABC RESULTS:           input signals:      277
ABC RESULTS:          output signals:      187
Removing temp directory.

3.29.41. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6451
Extracted 34 gates and 70 wires to a netlist network with 36 inputs and 10 outputs.

3.29.41.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.41.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        9
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:       10
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       11
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.42. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6529, asynchronously reset by \rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.29.42.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.42.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.43. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6524
Extracted 148 gates and 219 wires to a netlist network with 71 inputs and 50 outputs.

3.29.43.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 24 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.43.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       26
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:       24
ABC RESULTS:               MUX cells:       61
ABC RESULTS:              NAND cells:       29
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       17
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:       98
ABC RESULTS:           input signals:       71
ABC RESULTS:          output signals:       50
Removing temp directory.

3.29.44. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6549
Extracted 38 gates and 78 wires to a netlist network with 40 inputs and 16 outputs.

3.29.44.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 5 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.44.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       15
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        5
ABC RESULTS:               MUX cells:       12
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:       10
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.45. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35369$flatten\u1.$verific$n560$1341
Extracted 14 gates and 31 wires to a netlist network with 15 inputs and 10 outputs.

3.29.45.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 8 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.45.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.46. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35369$flatten\u1.$verific$n560$1341, synchronously reset by \csc_s [5]
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 2 outputs.

3.29.46.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.46.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.47. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35369$flatten\u1.$verific$n560$1341, synchronously reset by $auto$opt_dff.cc:253:combine_resets$35126
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.29.47.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.47.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.48. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6488, asynchronously reset by \rst_i
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 4 outputs.

3.29.48.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.48.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.49. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6474, asynchronously reset by \rst_i
Extracted 21 gates and 26 wires to a netlist network with 4 inputs and 9 outputs.

3.29.49.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.49.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        5
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.50. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6484
Extracted 31 gates and 51 wires to a netlist network with 20 inputs and 9 outputs.

3.29.50.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 8 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.50.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:              NAND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       20
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.51. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6504, asynchronously reset by \rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.29.51.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.51.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.52. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6507, asynchronously reset by \rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.29.52.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.52.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.53. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6510, asynchronously reset by \rst_i
Extracted 7 gates and 16 wires to a netlist network with 8 inputs and 4 outputs.

3.29.53.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.53.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.54. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6497, asynchronously reset by \rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.29.54.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.54.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.55. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6491, asynchronously reset by \rst_i
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 3 outputs.

3.29.55.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.55.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.56. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6494, asynchronously reset by \rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.29.56.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.56.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.57. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38908$flatten\u3.\u0.$verific$n67$2346
Extracted 73 gates and 112 wires to a netlist network with 38 inputs and 36 outputs.

3.29.57.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 36 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.57.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       36
ABC RESULTS:               BUF cells:       36
ABC RESULTS:               DFF cells:       36
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:       38
ABC RESULTS:           input signals:       38
ABC RESULTS:          output signals:       36
Removing temp directory.

3.29.58. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38908$flatten\u3.\u0.$verific$n180$2347
Extracted 73 gates and 147 wires to a netlist network with 74 inputs and 36 outputs.

3.29.58.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 36 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.58.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       36
ABC RESULTS:               DFF cells:       36
ABC RESULTS:               MUX cells:       36
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:       37
ABC RESULTS:           input signals:       74
ABC RESULTS:          output signals:       36
Removing temp directory.

3.29.59. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u2.\u1.$verific$n15$2235
Extracted 22 gates and 42 wires to a netlist network with 19 inputs and 18 outputs.

3.29.59.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 13 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.59.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       22
ABC RESULTS:               DFF cells:       13
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.60. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u2.\u1.$verific$n33$2243
Extracted 15 gates and 30 wires to a netlist network with 15 inputs and 14 outputs.

3.29.60.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 13 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.60.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       25
ABC RESULTS:               DFF cells:       13
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.61. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u2.\u1.$verific$n20$2237
Extracted 17 gates and 32 wires to a netlist network with 15 inputs and 15 outputs.

3.29.61.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 13 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.61.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       24
ABC RESULTS:               DFF cells:       13
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.62. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$40145$flatten\u2.\u1.$verific$n46$2249
Extracted 14 gates and 27 wires to a netlist network with 13 inputs and 13 outputs.

3.29.62.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 13 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.62.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       25
ABC RESULTS:               DFF cells:       13
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.63. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u2.\u0.$verific$n46$2249
Extracted 15 gates and 30 wires to a netlist network with 15 inputs and 14 outputs.

3.29.63.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 13 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.63.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       25
ABC RESULTS:               DFF cells:       13
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.64. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u2.\u0.$verific$n15$2235
Extracted 15 gates and 30 wires to a netlist network with 15 inputs and 14 outputs.

3.29.64.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 13 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.64.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       25
ABC RESULTS:               DFF cells:       13
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.65. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u2.\u0.$verific$n20$2237
Extracted 15 gates and 30 wires to a netlist network with 15 inputs and 14 outputs.

3.29.65.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 13 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.65.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       25
ABC RESULTS:               DFF cells:       13
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.66. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u2.\u0.$verific$n33$2243
Extracted 17 gates and 33 wires to a netlist network with 16 inputs and 16 outputs.

3.29.66.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 13 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.66.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       25
ABC RESULTS:               DFF cells:       13
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.67. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u0.\u0.$verific$n236$4560, synchronously reset by $abc$36228$u0.rst_r2
Extracted 54 gates and 112 wires to a netlist network with 58 inputs and 49 outputs.

3.29.67.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.67.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       21
ABC RESULTS:               NOT cells:       64
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       58
ABC RESULTS:          output signals:       49
Removing temp directory.

3.29.68. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u0.\u0.$verific$n389$4567, synchronously reset by $abc$36228$u0.rst_r2
Extracted 57 gates and 118 wires to a netlist network with 61 inputs and 45 outputs.

3.29.68.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.68.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:       42
ABC RESULTS:               DFF cells:       27
ABC RESULTS:               MUX cells:       25
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       45
Removing temp directory.

3.29.69. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6533, asynchronously reset by \rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.29.69.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.69.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.70. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6544, asynchronously reset by \rst_i
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.29.70.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.70.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.71. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6540, asynchronously reset by \rst_i
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

3.29.71.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.71.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.72. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$37464$u0.u1.init_ack, asynchronously reset by \rst_i
Extracted 2 gates and 3 wires to a netlist network with 0 inputs and 2 outputs.

3.29.72.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.72.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.73. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u0.u0.init_ack, asynchronously reset by \rst_i
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 3 outputs.

3.29.73.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.73.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.74. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u0.\u1.$verific$n235$4658, synchronously reset by $abc$36228$u0.rst_r2
Extracted 91 gates and 152 wires to a netlist network with 61 inputs and 88 outputs.

3.29.74.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.74.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       35
ABC RESULTS:               BUF cells:       61
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       24
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       88
Removing temp directory.

3.29.75. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u0.\u1.$verific$n388$4665, synchronously reset by $abc$36228$u0.rst_r2
Extracted 73 gates and 136 wires to a netlist network with 63 inputs and 49 outputs.

3.29.75.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.75.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       29
ABC RESULTS:               BUF cells:       57
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:       14
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       63
ABC RESULTS:          output signals:       49
Removing temp directory.

3.29.76. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6513, asynchronously reset by \rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.29.76.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.76.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.77. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u3.\u0.$verific$n293$2348
Extracted 73 gates and 148 wires to a netlist network with 75 inputs and 38 outputs.

3.29.77.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 36 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.77.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       37
ABC RESULTS:               DFF cells:       36
ABC RESULTS:               MUX cells:       35
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       35
ABC RESULTS:           input signals:       75
ABC RESULTS:          output signals:       38
Removing temp directory.

3.29.78. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \wb_stb_i
Extracted 48 gates and 73 wires to a netlist network with 25 inputs and 24 outputs.

3.29.78.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 24 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.78.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       24
ABC RESULTS:               DFF cells:       24
ABC RESULTS:               MUX cells:       24
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       24
Removing temp directory.

3.29.79. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \mc_clk_i, synchronously reset by !$auto$rtlil.cc:2547:NotGate$35004
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.29.79.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.79.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       18
ABC RESULTS:               DFF cells:        9
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.80. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \mc_clk_i
Extracted 219 gates and 396 wires to a netlist network with 175 inputs and 140 outputs.

3.29.80.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 98 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.80.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               BUF cells:      177
ABC RESULTS:               DFF cells:       98
ABC RESULTS:               MUX cells:       56
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       81
ABC RESULTS:           input signals:      175
ABC RESULTS:          output signals:      140
Removing temp directory.

3.29.81. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \mc_clk_i, synchronously reset by $abc$38420$lo0
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.29.81.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.81.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        8
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.82. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \mc_clk_i, synchronously reset by $abc$36228$lo06
Extracted 3 gates and 8 wires to a netlist network with 5 inputs and 1 outputs.

3.29.82.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.82.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        1
Removing temp directory.

3.29.83. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \mc_clk_i, asynchronously reset by \rst_i
Extracted 10 gates and 17 wires to a netlist network with 6 inputs and 5 outputs.

3.29.83.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.83.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        5
ABC RESULTS:               NOT cells:        5
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        5
Removing temp directory.

yosys> abc -script abc_tmp.scr

3.30. Executing ABC pass (technology mapping using ABC).

3.30.1. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Extracted 4473 gates and 5475 wires to a netlist network with 1002 inputs and 550 outputs.

3.30.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/mc/abc_tmp.scr 
ABC:   #Luts =  1468  Max Lvl =  25  Avg Lvl =   8.25  [   0.21 sec. at Pass 0]
ABC:   #Luts =  1238  Max Lvl =  17  Avg Lvl =   5.99  [  10.13 sec. at Pass 1]
ABC:   #Luts =  1227  Max Lvl =  17  Avg Lvl =   6.43  [   2.08 sec. at Pass 2]
ABC:   #Luts =  1206  Max Lvl =  17  Avg Lvl =   6.23  [   3.40 sec. at Pass 3]
ABC:   #Luts =  1206  Max Lvl =  17  Avg Lvl =   6.23  [   2.44 sec. at Pass 4]
ABC:   #Luts =  1188  Max Lvl =  18  Avg Lvl =   5.89  [   4.28 sec. at Pass 5]
ABC:   #Luts =  1188  Max Lvl =  18  Avg Lvl =   5.89  [   2.45 sec. at Pass 6]
ABC:   #Luts =  1188  Max Lvl =  18  Avg Lvl =   5.89  [   3.52 sec. at Pass 7]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.30.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1187
ABC RESULTS:        internal signals:     3923
ABC RESULTS:           input signals:     1002
ABC RESULTS:          output signals:      550
Removing temp directory.

yosys> opt

3.31. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge -nomux

3.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 12346 unused wires.
<suppressed ~191 debug messages>

yosys> opt_expr

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.31.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.31.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.32. Printing statistics.

=== mc_top ===

   Number of wires:               2239
   Number of wire bits:           6611
   Number of public wires:         615
   Number of public wire bits:    4946
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2229
     $_DFFE_PP0N_                    5
     $_DFFE_PP0P_                  233
     $_DFFE_PP_                    426
     $_DFF_PP0_                     52
     $_DFF_P_                      174
     $_SDFFE_PN0P_                  15
     $_SDFFE_PP0P_                 125
     $_SDFF_PN0_                    10
     $_SDFF_PP0_                     7
     $lut                         1169
     $mux                            9
     adder_carry                     4


yosys> shregmap -minlen 8 -maxlen 20

3.33. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.35. Printing statistics.

=== mc_top ===

   Number of wires:               2536
   Number of wire bits:           6908
   Number of public wires:         615
   Number of public wire bits:    4946
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2526
     $_DFFE_PP0N_                    5
     $_DFFE_PP0P_                  659
     $_DFF_PP0_                     52
     $_DFF_P_                      331
     $_MUX_                        297
     $lut                         1169
     $mux                            9
     adder_carry                     4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~3082 debug messages>

yosys> opt_expr -mux_undef

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~27646 debug messages>

yosys> simplemap

3.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~9696 debug messages>
Removed a total of 3232 cells.

yosys> opt_dff -nodffe -nosdff

3.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 5 unused cells and 7616 unused wires.
<suppressed ~10 debug messages>

yosys> opt -nodffe -nosdff

3.43. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~732 debug messages>

yosys> opt_merge -nomux

3.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 182 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.43.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.43.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.43.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.43.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.43.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.44. Executing ABC pass (technology mapping using ABC).

3.44.1. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Extracted 4483 gates and 5482 wires to a netlist network with 997 inputs and 613 outputs.

3.44.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/mc/abc_tmp.scr 
ABC:   #Luts =  1272  Max Lvl =  18  Avg Lvl =   5.61  [   0.25 sec. at Pass 0]
ABC:   #Luts =  1272  Max Lvl =  18  Avg Lvl =   5.61  [   9.89 sec. at Pass 1]
ABC:   #Luts =  1272  Max Lvl =  18  Avg Lvl =   5.61  [   2.04 sec. at Pass 2]
ABC:   #Luts =  1272  Max Lvl =  18  Avg Lvl =   5.61  [   3.66 sec. at Pass 3]
ABC:   #Luts =  1272  Max Lvl =  18  Avg Lvl =   5.61  [   2.04 sec. at Pass 4]
ABC:   #Luts =  1272  Max Lvl =  18  Avg Lvl =   5.61  [   4.05 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1272
ABC RESULTS:        internal signals:     3872
ABC RESULTS:           input signals:      997
ABC RESULTS:          output signals:      613
Removing temp directory.

yosys> opt

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 5005 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \mc_top

3.46.2. Analyzing design hierarchy..
Top module:  \mc_top
Removed 0 unused modules.

yosys> stat

3.47. Printing statistics.

=== mc_top ===

   Number of wires:               2337
   Number of wire bits:           6699
   Number of public wires:         610
   Number of public wire bits:    4941
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2323
     $lut                         1272
     adder_carry                     4
     dffsre                       1047


yosys> opt_clean -purge

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 490 unused wires.
<suppressed ~490 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.49. Executing Verilog backend.

yosys> bmuxmap

3.49.1. Executing BMUXMAP pass.

yosys> demuxmap

3.49.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\mc_top'.

Warnings: 414 unique messages, 435 total
End of script. Logfile hash: d43288d538, CPU: user 26.24s system 0.66s, MEM: 96.82 MB peak
Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)
Time spent: 93% 3x abc (354 sec), 2% 46x opt_expr (8 sec), ...
real 85.69
user 355.31
sys 23.59
