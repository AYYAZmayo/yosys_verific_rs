
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k demux.v io_reg_max.v io_reg_max_2.v mux.v

yosys> verific -vlog2k demux.v io_reg_max.v io_reg_max_2.v mux.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'demux.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'io_reg_max.v'
VERIFIC-INFO [VERI-2561] io_reg_max.v:14: undeclared symbol 'mux_out', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'io_reg_max_2.v'
VERIFIC-INFO [VERI-2561] io_reg_max_2.v:14: undeclared symbol 'mux_out', assumed default net type 'wire'
VERIFIC-WARNING [VERI-1206] io_reg_max_2.v:18: overwriting previous definition of module 'io_reg_max'
VERIFIC-INFO [VERI-2142] io_reg_max.v:18: previous definition of design element 'io_reg_max' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mux.v'

yosys> synth_rs -top io_reg_max -tech genesis -goal area -de -no_dsp -no_bram -verilog io_reg_max.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top io_reg_max

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] io_reg_max_2.v:1: compiling module 'io_reg_max'
VERIFIC-INFO [VERI-1018] mux.v:2: compiling module 'mux_512x1'
VERIFIC-INFO [VERI-1018] mux.v:16: compiling module 'mux_256x1'
VERIFIC-INFO [VERI-1018] mux.v:30: compiling module 'mux_128x1'
VERIFIC-INFO [VERI-1018] mux.v:44: compiling module 'mux_64x1'
VERIFIC-INFO [VERI-1018] mux.v:58: compiling module 'mux_32x1'
VERIFIC-INFO [VERI-1018] mux.v:72: compiling module 'mux_16x1'
VERIFIC-INFO [VERI-1018] mux.v:86: compiling module 'mux_8x1'
VERIFIC-INFO [VERI-1018] mux.v:100: compiling module 'mux_4x1'
VERIFIC-INFO [VERI-1018] mux.v:114: compiling module 'mux_2x1_reg'
VERIFIC-INFO [VERI-1018] mux.v:132: compiling module 'mux_2x1'
VERIFIC-WARNING [VERI-1330] io_reg_max_2.v:14: actual bit length 502 differs from formal bit length 512 for port 'in'
VERIFIC-WARNING [VERI-1330] io_reg_max_2.v:14: actual bit length 10 differs from formal bit length 9 for port 'sel'
VERIFIC-INFO [VERI-1018] demux.v:2: compiling module 'demux_1x512'
VERIFIC-INFO [VERI-1018] demux.v:116: compiling module 'demux_1x2'
VERIFIC-INFO [VERI-1018] demux.v:16: compiling module 'demux_1x256'
VERIFIC-INFO [VERI-1018] demux.v:30: compiling module 'demux_1x128'
VERIFIC-INFO [VERI-1018] demux.v:44: compiling module 'demux_1x64'
VERIFIC-INFO [VERI-1018] demux.v:58: compiling module 'demux_1x32'
VERIFIC-INFO [VERI-1018] demux.v:73: compiling module 'demux_1x16'
VERIFIC-INFO [VERI-1018] demux.v:87: compiling module 'demux_1x8'
VERIFIC-INFO [VERI-1018] demux.v:101: compiling module 'demux_1x4'
VERIFIC-INFO [VERI-1018] demux.v:125: compiling module 'demux_1x2_reg'
VERIFIC-WARNING [VERI-1330] io_reg_max_2.v:15: actual bit length 10 differs from formal bit length 9 for port 'sel'
VERIFIC-WARNING [VERI-1330] io_reg_max_2.v:15: actual bit length 502 differs from formal bit length 512 for port 'out'
Importing module io_reg_max.
Importing module mux_512x1.
Importing module mux_256x1.
Importing module mux_128x1.
Importing module mux_64x1.
Importing module mux_32x1.
Importing module mux_16x1.
Importing module mux_8x1.
Importing module mux_4x1.
Importing module mux_2x1.
Importing module mux_2x1_reg.
Importing module demux_1x512.
Importing module demux_1x2.
Importing module demux_1x256.
Importing module demux_1x128.
Importing module demux_1x64.
Importing module demux_1x32.
Importing module demux_1x16.
Importing module demux_1x8.
Importing module demux_1x4.
Importing module demux_1x2_reg.

3.3.1. Analyzing design hierarchy..
Top module:  \io_reg_max
Used module:     \demux_1x512
Used module:         \demux_1x256
Used module:             \demux_1x128
Used module:                 \demux_1x64
Used module:                     \demux_1x32
Used module:                         \demux_1x16
Used module:                             \demux_1x8
Used module:                                 \demux_1x4
Used module:                                     \demux_1x2_reg
Used module:                                     \demux_1x2
Used module:     \mux_512x1
Used module:         \mux_2x1
Used module:         \mux_256x1
Used module:             \mux_128x1
Used module:                 \mux_64x1
Used module:                     \mux_32x1
Used module:                         \mux_16x1
Used module:                             \mux_8x1
Used module:                                 \mux_4x1
Used module:                                     \mux_2x1_reg

3.3.2. Analyzing design hierarchy..
Top module:  \io_reg_max
Used module:     \demux_1x512
Used module:         \demux_1x256
Used module:             \demux_1x128
Used module:                 \demux_1x64
Used module:                     \demux_1x32
Used module:                         \demux_1x16
Used module:                             \demux_1x8
Used module:                                 \demux_1x4
Used module:                                     \demux_1x2_reg
Used module:                                     \demux_1x2
Used module:     \mux_512x1
Used module:         \mux_2x1
Used module:         \mux_256x1
Used module:             \mux_128x1
Used module:                 \mux_64x1
Used module:                     \mux_32x1
Used module:                         \mux_16x1
Used module:                             \mux_8x1
Used module:                                 \mux_4x1
Used module:                                     \mux_2x1_reg
Removed 0 unused modules.
Warning: Resizing cell port io_reg_max.demux0.out from 502 bits to 512 bits.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module demux_1x2_reg.
Optimizing module demux_1x4.
Optimizing module demux_1x8.
Optimizing module demux_1x16.
Optimizing module demux_1x32.
Optimizing module demux_1x64.
Optimizing module demux_1x128.
Optimizing module demux_1x256.
Optimizing module demux_1x2.
Optimizing module demux_1x512.
Optimizing module mux_2x1_reg.
Optimizing module mux_2x1.
Optimizing module mux_4x1.
Optimizing module mux_8x1.
Optimizing module mux_16x1.
Optimizing module mux_32x1.
Optimizing module mux_64x1.
Optimizing module mux_128x1.
Optimizing module mux_256x1.
Optimizing module mux_512x1.
Optimizing module io_reg_max.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module demux_1x2_reg.
Deleting now unused module demux_1x4.
Deleting now unused module demux_1x8.
Deleting now unused module demux_1x16.
Deleting now unused module demux_1x32.
Deleting now unused module demux_1x64.
Deleting now unused module demux_1x128.
Deleting now unused module demux_1x256.
Deleting now unused module demux_1x2.
Deleting now unused module demux_1x512.
Deleting now unused module mux_2x1_reg.
Deleting now unused module mux_2x1.
Deleting now unused module mux_4x1.
Deleting now unused module mux_8x1.
Deleting now unused module mux_16x1.
Deleting now unused module mux_32x1.
Deleting now unused module mux_64x1.
Deleting now unused module mux_128x1.
Deleting now unused module mux_256x1.
Deleting now unused module mux_512x1.
<suppressed ~50 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..
Removed 25 unused cells and 18399 unused wires.
<suppressed ~1828 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module io_reg_max...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~548 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
  Optimizing cells in module \io_reg_max.
Performed a total of 8 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Removing never-active async load on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($aldff) from module io_reg_max.
Setting constant 0-bit at position 0 on $flatten\mux0.\m512_1.\m256_1.\m128_1.\m64_1.\m32_1.\m16_0.\m8_1.\m4_1.$verific$a_out_reg$mux.v:124$2213 ($dff) from module io_reg_max.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..
Removed 0 unused cells and 37 unused wires.
<suppressed ~37 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~553 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~553 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_2.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_2.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_2.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_2.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\d512_1.\d256_1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:136$3386 ($dff) from module io_reg_max (D = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.d512_1.d256_1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..
Removed 246 unused cells and 246 unused wires.
<suppressed ~492 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~277 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 7 bits (of 10) from port B of cell io_reg_max.$verific$xor_3$io_reg_max_2.v:12$5 ($xor).
Removed top 1 bits (of 10) from port Y of cell io_reg_max.$verific$xor_3$io_reg_max_2.v:12$5 ($xor).
Removed top 1 bits (of 10) from port A of cell io_reg_max.$verific$xor_3$io_reg_max_2.v:12$5 ($xor).
Removed top 488 bits (of 490) from port B of cell io_reg_max.$verific$xor_5$io_reg_max_2.v:16$1043 ($xor).
Removed top 1 bits (of 2) from mux cell io_reg_max.$flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_0.$verific$mux_10$demux.v:121$2756 ($mux).
Removed top 1 bits (of 2) from mux cell io_reg_max.$flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_0.$verific$mux_10$demux.v:121$2756 ($mux).
Removed top 1 bits (of 2) from mux cell io_reg_max.$flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_0.$verific$mux_10$demux.v:121$2756 ($mux).
Removed top 1 bits (of 2) from mux cell io_reg_max.$flatten\demux0.\d512_2.\d256_2.\d128_2.\d64_2.\d32_2.\d16_0.$verific$mux_10$demux.v:121$2756 ($mux).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module io_reg_max:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~277 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> techmap

3.22. Executing TECHMAP pass (map to technology primitives).

3.22.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.22.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
No more expansions possible.
<suppressed ~1820 debug messages>

yosys> opt

3.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.
<suppressed ~494 debug messages>

yosys> opt_merge -nomux

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.23.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> opt_expr

3.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.23.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.24. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.
<suppressed ~394 debug messages>

yosys> opt_merge

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.24.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

3.24.5. Finished fast OPT passes.

yosys> memory_map

3.25. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

yosys> opt_merge -nomux

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_share

3.26.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> opt_expr -full

3.26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.26.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.27. Executing ABC pass (technology mapping using ABC).

3.27.1. Extracting gate netlist of module `\io_reg_max' to `<abc-temp-dir>/input.blif'..
Extracted 1003 gates and 1530 wires to a netlist network with 526 inputs and 248 outputs.

3.27.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/io_reg_max/abc_tmp.scr 
ABC:   #Luts =   664  Max Lvl =  14  Avg Lvl =  13.88  [   0.42 sec. at Pass 0]
ABC:   #Luts =   436  Max Lvl =   8  Avg Lvl =   7.94  [  11.05 sec. at Pass 1]
ABC:   #Luts =   436  Max Lvl =   8  Avg Lvl =   7.94  [   2.49 sec. at Pass 2]
ABC:   #Luts =   436  Max Lvl =   8  Avg Lvl =   7.94  [   5.88 sec. at Pass 3]
ABC:   #Luts =   436  Max Lvl =   8  Avg Lvl =   7.94  [   2.13 sec. at Pass 4]
ABC:   #Luts =   436  Max Lvl =   8  Avg Lvl =   7.94  [   6.40 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.27.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      436
ABC RESULTS:        internal signals:      756
ABC RESULTS:           input signals:      526
ABC RESULTS:          output signals:      248
Removing temp directory.

yosys> opt

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..
Removed 0 unused cells and 3914 unused wires.
<suppressed ~3141 debug messages>

yosys> opt_expr

3.28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.28.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> opt_expr

3.28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.28.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.29. Printing statistics.

=== io_reg_max ===

   Number of wires:               4426
   Number of wire bits:          14857
   Number of public wires:        4238
   Number of public wire bits:   14669
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1430
     $_DFF_P_                      502
     $_SDFF_PN0_                   246
     $_SDFF_PP0_                   246
     $lut                          436


yosys> shregmap -minlen 8 -maxlen 20

3.30. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.31. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.32. Printing statistics.

=== io_reg_max ===

   Number of wires:               4918
   Number of wire bits:          15349
   Number of public wires:        4238
   Number of public wire bits:   14669
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1922
     $_DFF_P_                      994
     $_MUX_                        492
     $lut                          436


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.33. Executing TECHMAP pass (map to technology primitives).

3.33.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.33.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.33.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~1558 debug messages>

yosys> opt_expr -mux_undef

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.
<suppressed ~22456 debug messages>

yosys> simplemap

3.35. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
<suppressed ~5841 debug messages>
Removed a total of 1947 cells.

yosys> opt_dff -nodffe -nosdff

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..
Removed 0 unused cells and 4688 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.
<suppressed ~409 debug messages>

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\io_reg_max' to `<abc-temp-dir>/input.blif'..
Extracted 1944 gates and 2473 wires to a netlist network with 527 inputs and 494 outputs.

3.41.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/io_reg_max/abc_tmp.scr 
ABC:   #Luts =   712  Max Lvl =  11  Avg Lvl =   9.13  [   0.37 sec. at Pass 0]
ABC:   #Luts =   696  Max Lvl =  13  Avg Lvl =  10.94  [  41.86 sec. at Pass 1]
ABC:   #Luts =   691  Max Lvl =   9  Avg Lvl =   8.02  [   6.93 sec. at Pass 2]
ABC:   #Luts =   686  Max Lvl =   7  Avg Lvl =   6.98  [  12.82 sec. at Pass 3]
ABC:   #Luts =   686  Max Lvl =   7  Avg Lvl =   6.98  [   6.40 sec. at Pass 4]
ABC:   #Luts =   686  Max Lvl =   7  Avg Lvl =   6.98  [  12.13 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      686
ABC RESULTS:        internal signals:     1452
ABC RESULTS:           input signals:      527
ABC RESULTS:          output signals:      494
Removing temp directory.

yosys> opt

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..
Removed 0 unused cells and 2547 unused wires.
<suppressed ~489 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module io_reg_max.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \io_reg_max

3.43.2. Analyzing design hierarchy..
Top module:  \io_reg_max
Removed 0 unused modules.

yosys> stat

3.44. Printing statistics.

=== io_reg_max ===

   Number of wires:               4434
   Number of wire bits:          14621
   Number of public wires:        3750
   Number of public wire bits:   13937
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1680
     $lut                          686
     dff                           994


yosys> opt_clean -purge

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \io_reg_max..
Removed 0 unused cells and 3240 unused wires.
<suppressed ~3240 debug messages>

yosys> write_verilog -noattr -nohex io_reg_max.verilog

3.46. Executing Verilog backend.

yosys> bmuxmap

3.46.1. Executing BMUXMAP pass.

yosys> demuxmap

3.46.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\io_reg_max'.

Warnings: 6 unique messages, 6 total
End of script. Logfile hash: efbe344fc8, CPU: user 16.79s system 0.22s, MEM: 88.02 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 91% 2x abc (188 sec), 2% 23x opt_clean (5 sec), ...
real 138.83
user 198.28
sys 7.20
