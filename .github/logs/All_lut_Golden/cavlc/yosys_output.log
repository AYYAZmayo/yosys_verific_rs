
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k defines.vh cavlc.v cavlc_fsm.v cavlc_len_gen.v cavlc_read_levels.v cavlc_read_run_befores.v cavlc_read_total_coeffs.v cavlc_read_total_zeros.v

yosys> verific -vlog2k defines.vh cavlc.v cavlc_fsm.v cavlc_len_gen.v cavlc_read_levels.v cavlc_read_run_befores.v cavlc_read_total_coeffs.v cavlc_read_total_zeros.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_fsm.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_len_gen.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_levels.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_run_befores.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_total_coeffs.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_total_zeros.v'

yosys> synth_rs -top cavlc -tech generic -goal area -no_dsp -no_bram -verilog cavlc.verilog

3. Executing synth_rs pass.

yosys> hierarchy -check -top cavlc

3.1. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] cavlc.v:41: compiling module 'cavlc'
VERIFIC-INFO [VERI-1018] cavlc_read_total_coeffs.v:43: compiling module 'cavlc_read_total_coeffs'
VERIFIC-INFO [VERI-1018] cavlc_read_levels.v:44: compiling module 'cavlc_read_levels'
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:155: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:212: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:226: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:229: expression size 31 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:259: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:261: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:263: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:266: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:268: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:270: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:273: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:275: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:277: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:280: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:282: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:284: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:287: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:289: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:291: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:294: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:296: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:298: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:301: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:303: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:305: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:308: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:310: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:312: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:315: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:317: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:319: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:322: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:324: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:326: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:329: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:331: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:333: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:336: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:338: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:340: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:343: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:345: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:347: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:350: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:352: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:354: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:357: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:359: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:361: expression size 32 truncated to fit in target size 9
VERIFIC-INFO [VERI-1018] cavlc_read_total_zeros.v:41: compiling module 'cavlc_read_total_zeros'
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:92: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:93: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:96: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:98: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:101: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:102: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:106: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:107: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:108: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:320: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:321: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:688: expression size 32 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:689: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] cavlc_read_run_befores.v:41: compiling module 'cavlc_read_run_befores'
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:196: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:201: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:242: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:255: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:255: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] cavlc_len_gen.v:41: compiling module 'cavlc_len_gen'
VERIFIC-WARNING [VERI-1174] cavlc_len_gen.v:70: synthesis - simulation differences may occur when using parallel_case directive
VERIFIC-WARNING [VERI-1209] cavlc_len_gen.v:79: expression size 32 truncated to fit in target size 5
VERIFIC-INFO [VERI-1018] cavlc_fsm.v:41: compiling module 'cavlc_fsm'
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:106: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:135: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:139: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:144: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:153: expression size 32 truncated to fit in target size 4
Importing module cavlc.
Importing module cavlc_read_total_coeffs.
Importing module cavlc_read_levels.
Importing module cavlc_read_run_befores.
Importing module cavlc_read_total_zeros.
Importing module cavlc_fsm.
Importing module cavlc_len_gen.

3.1.1. Analyzing design hierarchy..
Top module:  \cavlc
Used module:     \cavlc_fsm
Used module:     \cavlc_len_gen
Used module:     \cavlc_read_run_befores
Used module:     \cavlc_read_total_zeros
Used module:     \cavlc_read_levels
Used module:     \cavlc_read_total_coeffs

3.1.2. Analyzing design hierarchy..
Top module:  \cavlc
Used module:     \cavlc_fsm
Used module:     \cavlc_len_gen
Used module:     \cavlc_read_run_befores
Used module:     \cavlc_read_total_zeros
Used module:     \cavlc_read_levels
Used module:     \cavlc_read_total_coeffs
Removed 0 unused modules.

yosys> proc

3.2. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.2.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.2.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.2.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc_len_gen.
Optimizing module cavlc_fsm.
<suppressed ~15 debug messages>
Optimizing module cavlc_read_total_zeros.
<suppressed ~63 debug messages>
Optimizing module cavlc_read_run_befores.
<suppressed ~31 debug messages>
Optimizing module cavlc_read_levels.
<suppressed ~43 debug messages>
Optimizing module cavlc_read_total_coeffs.
<suppressed ~127 debug messages>
Optimizing module cavlc.

yosys> flatten

3.3. Executing FLATTEN pass (flatten design).
Deleting now unused module cavlc_len_gen.
Deleting now unused module cavlc_fsm.
Deleting now unused module cavlc_read_total_zeros.
Deleting now unused module cavlc_read_run_befores.
Deleting now unused module cavlc_read_levels.
Deleting now unused module cavlc_read_total_coeffs.
<suppressed ~6 debug messages>

yosys> tribuf -logic

3.4. Executing TRIBUF pass.

yosys> opt_expr

3.5. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_clean

3.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 4 unused cells and 1296 unused wires.
<suppressed ~87 debug messages>

yosys> check

3.7. Executing CHECK pass (checking for obvious problems).
Checking module cavlc...
Found and reported 0 problems.

yosys> deminout

3.8. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt -nodffe -nosdff

3.9. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\cavlc_read_levels.$verific$mux_134$cavlc_read_levels.v:244$2331: \cavlc_read_levels.level -> { 1'0 \cavlc_read_levels.level [7:0] }
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\cavlc_read_total_zeros.$verific$mux_590$cavlc_read_total_zeros.v:712$3537.
Removed 1 multiplexer ports.
<suppressed ~110 debug messages>

yosys> opt_reduce

3.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
    New ctrl vector for $pmux cell $flatten\cavlc_fsm.$verific$select_78$cavlc_fsm.v:156$3679: { $flatten\cavlc_fsm.$verific$n328$3563 $flatten\cavlc_fsm.$verific$n329$3564 $flatten\cavlc_fsm.$verific$n332$3567 $flatten\cavlc_fsm.$verific$n333$3568 $flatten\cavlc_fsm.$verific$n334$3569 $auto$opt_reduce.cc:134:opt_pmux$3705 }
    New ctrl vector for $pmux cell $flatten\cavlc_len_gen.$verific$select_18$cavlc_len_gen.v:80$3702: { \cavlc_fsm.state [1] $auto$opt_reduce.cc:134:opt_pmux$3707 \cavlc_fsm.state [6] \cavlc_fsm.state [7] $flatten\cavlc_len_gen.$verific$n48$3690 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_121$cavlc_read_run_befores.v:259$2811: { $flatten\cavlc_read_run_befores.$verific$n400$2503 $flatten\cavlc_read_run_befores.$verific$n401$2504 $flatten\cavlc_read_run_befores.$verific$n402$2505 $flatten\cavlc_read_run_befores.$verific$n403$2506 $flatten\cavlc_read_run_befores.$verific$n404$2507 $flatten\cavlc_read_run_befores.$verific$n405$2508 $flatten\cavlc_read_run_befores.$verific$n406$2509 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_122$cavlc_read_run_befores.v:259$2812: { $flatten\cavlc_read_run_befores.$verific$n400$2503 $flatten\cavlc_read_run_befores.$verific$n401$2504 $flatten\cavlc_read_run_befores.$verific$n402$2505 $flatten\cavlc_read_run_befores.$verific$n403$2506 $flatten\cavlc_read_run_befores.$verific$n404$2507 $flatten\cavlc_read_run_befores.$verific$n405$2508 $flatten\cavlc_read_run_befores.$verific$n406$2509 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_236$cavlc_read_run_befores.v:348$2853: { $flatten\cavlc_read_run_befores.$verific$n1178$2517 $auto$opt_reduce.cc:134:opt_pmux$3709 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_237$cavlc_read_run_befores.v:348$2854: { $flatten\cavlc_read_run_befores.$verific$n1179$2518 $auto$opt_reduce.cc:134:opt_pmux$3711 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_238$cavlc_read_run_befores.v:348$2855: { $flatten\cavlc_read_run_befores.$verific$n1180$2519 $auto$opt_reduce.cc:134:opt_pmux$3713 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_239$cavlc_read_run_befores.v:348$2856: { $flatten\cavlc_read_run_befores.$verific$n1181$2520 $auto$opt_reduce.cc:134:opt_pmux$3715 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_240$cavlc_read_run_befores.v:348$2857: { $flatten\cavlc_read_run_befores.$verific$n1182$2521 $auto$opt_reduce.cc:134:opt_pmux$3717 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_241$cavlc_read_run_befores.v:348$2858: { $flatten\cavlc_read_run_befores.$verific$n1183$2522 $auto$opt_reduce.cc:134:opt_pmux$3719 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_242$cavlc_read_run_befores.v:348$2859: { $flatten\cavlc_read_run_befores.$verific$n1184$2523 $auto$opt_reduce.cc:134:opt_pmux$3721 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_243$cavlc_read_run_befores.v:348$2860: { $flatten\cavlc_read_run_befores.$verific$n1185$2524 $auto$opt_reduce.cc:134:opt_pmux$3723 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_244$cavlc_read_run_befores.v:348$2861: { $flatten\cavlc_read_run_befores.$verific$n1186$2525 $auto$opt_reduce.cc:134:opt_pmux$3725 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_245$cavlc_read_run_befores.v:348$2862: { $flatten\cavlc_read_run_befores.$verific$n1187$2526 $auto$opt_reduce.cc:134:opt_pmux$3727 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_246$cavlc_read_run_befores.v:348$2863: { $flatten\cavlc_read_run_befores.$verific$n1188$2527 $auto$opt_reduce.cc:134:opt_pmux$3729 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_247$cavlc_read_run_befores.v:348$2864: { $flatten\cavlc_read_run_befores.$verific$n1189$2528 $auto$opt_reduce.cc:134:opt_pmux$3731 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_248$cavlc_read_run_befores.v:348$2865: { $flatten\cavlc_read_run_befores.$verific$n1190$2529 $auto$opt_reduce.cc:134:opt_pmux$3733 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_249$cavlc_read_run_befores.v:348$2866: { $flatten\cavlc_read_run_befores.$verific$n1191$2530 $auto$opt_reduce.cc:134:opt_pmux$3735 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_250$cavlc_read_run_befores.v:348$2867: { $auto$opt_reduce.cc:134:opt_pmux$3737 $flatten\cavlc_read_run_befores.$verific$n1192$2531 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1051$cavlc_read_total_coeffs.v:1147$1961: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4152$802 $flatten\cavlc_read_total_coeffs.$verific$n4155$805 $flatten\cavlc_read_total_coeffs.$verific$n4161$811 $flatten\cavlc_read_total_coeffs.$verific$n4164$814 $flatten\cavlc_read_total_coeffs.$verific$n4166$816 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1052$cavlc_read_total_coeffs.v:1147$1962: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4152$802 $flatten\cavlc_read_total_coeffs.$verific$n4155$805 $flatten\cavlc_read_total_coeffs.$verific$n4158$808 $flatten\cavlc_read_total_coeffs.$verific$n4161$811 $auto$opt_reduce.cc:134:opt_pmux$3739 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1053$cavlc_read_total_coeffs.v:1147$1963: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4149$799 $flatten\cavlc_read_total_coeffs.$verific$n4152$802 $auto$opt_reduce.cc:134:opt_pmux$3743 $flatten\cavlc_read_total_coeffs.$verific$n4164$814 $auto$opt_reduce.cc:134:opt_pmux$3741 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_384$cavlc_read_total_coeffs.v:444$1630: { $flatten\cavlc_read_total_coeffs.$verific$n1613$651 $flatten\cavlc_read_total_coeffs.$verific$n1616$654 $flatten\cavlc_read_total_coeffs.$verific$n1619$657 $flatten\cavlc_read_total_coeffs.$verific$n1622$660 $flatten\cavlc_read_total_coeffs.$verific$n1625$663 $flatten\cavlc_read_total_coeffs.$verific$n1628$666 $flatten\cavlc_read_total_coeffs.$verific$n1631$669 $flatten\cavlc_read_total_coeffs.$verific$n1634$672 $flatten\cavlc_read_total_coeffs.$verific$n1637$675 $flatten\cavlc_read_total_coeffs.$verific$n1640$678 $flatten\cavlc_read_total_coeffs.$verific$n1643$681 $flatten\cavlc_read_total_coeffs.$verific$n1646$684 $auto$opt_reduce.cc:134:opt_pmux$3745 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_385$cavlc_read_total_coeffs.v:444$1631: { $flatten\cavlc_read_total_coeffs.$verific$n1610$648 $flatten\cavlc_read_total_coeffs.$verific$n1613$651 $flatten\cavlc_read_total_coeffs.$verific$n1616$654 $flatten\cavlc_read_total_coeffs.$verific$n1619$657 $flatten\cavlc_read_total_coeffs.$verific$n1622$660 $flatten\cavlc_read_total_coeffs.$verific$n1625$663 $flatten\cavlc_read_total_coeffs.$verific$n1628$666 $flatten\cavlc_read_total_coeffs.$verific$n1631$669 $flatten\cavlc_read_total_coeffs.$verific$n1634$672 $flatten\cavlc_read_total_coeffs.$verific$n1637$675 $flatten\cavlc_read_total_coeffs.$verific$n1640$678 $flatten\cavlc_read_total_coeffs.$verific$n1643$681 $flatten\cavlc_read_total_coeffs.$verific$n1646$684 $flatten\cavlc_read_total_coeffs.$verific$n1648$686 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_386$cavlc_read_total_coeffs.v:444$1632: { \cavlc_read_total_coeffs.rbsp_1 [0] $flatten\cavlc_read_total_coeffs.$verific$n1610$648 $flatten\cavlc_read_total_coeffs.$verific$n1613$651 $flatten\cavlc_read_total_coeffs.$verific$n1616$654 $flatten\cavlc_read_total_coeffs.$verific$n1619$657 $flatten\cavlc_read_total_coeffs.$verific$n1622$660 $flatten\cavlc_read_total_coeffs.$verific$n1625$663 $flatten\cavlc_read_total_coeffs.$verific$n1628$666 $flatten\cavlc_read_total_coeffs.$verific$n1631$669 $flatten\cavlc_read_total_coeffs.$verific$n1634$672 $flatten\cavlc_read_total_coeffs.$verific$n1637$675 $auto$opt_reduce.cc:134:opt_pmux$3749 $auto$opt_reduce.cc:134:opt_pmux$3747 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_741$cavlc_read_total_coeffs.v:748$1826: { \cavlc_read_total_coeffs.rbsp_2 [0] $flatten\cavlc_read_total_coeffs.$verific$n2947$729 $flatten\cavlc_read_total_coeffs.$verific$n2950$732 $flatten\cavlc_read_total_coeffs.$verific$n2953$735 $flatten\cavlc_read_total_coeffs.$verific$n2956$738 $flatten\cavlc_read_total_coeffs.$verific$n2959$741 $flatten\cavlc_read_total_coeffs.$verific$n2962$744 $flatten\cavlc_read_total_coeffs.$verific$n2965$747 $flatten\cavlc_read_total_coeffs.$verific$n2968$750 $flatten\cavlc_read_total_coeffs.$verific$n2974$756 $flatten\cavlc_read_total_coeffs.$verific$n2977$759 $auto$opt_reduce.cc:134:opt_pmux$3751 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_959$cavlc_read_total_coeffs.v:1052$1911: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$769 $flatten\cavlc_read_total_coeffs.$verific$n3831$772 $flatten\cavlc_read_total_coeffs.$verific$n3834$775 $flatten\cavlc_read_total_coeffs.$verific$n3837$778 $flatten\cavlc_read_total_coeffs.$verific$n3840$781 $flatten\cavlc_read_total_coeffs.$verific$n3843$784 $auto$opt_reduce.cc:134:opt_pmux$3753 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_960$cavlc_read_total_coeffs.v:1052$1912: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$769 $flatten\cavlc_read_total_coeffs.$verific$n3831$772 $flatten\cavlc_read_total_coeffs.$verific$n3834$775 $flatten\cavlc_read_total_coeffs.$verific$n3837$778 $flatten\cavlc_read_total_coeffs.$verific$n3840$781 $flatten\cavlc_read_total_coeffs.$verific$n3843$784 $flatten\cavlc_read_total_coeffs.$verific$n3846$787 $flatten\cavlc_read_total_coeffs.$verific$n3849$790 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_961$cavlc_read_total_coeffs.v:1052$1913: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$769 $flatten\cavlc_read_total_coeffs.$verific$n3831$772 $flatten\cavlc_read_total_coeffs.$verific$n3834$775 $flatten\cavlc_read_total_coeffs.$verific$n3837$778 $flatten\cavlc_read_total_coeffs.$verific$n3840$781 $flatten\cavlc_read_total_coeffs.$verific$n3843$784 $flatten\cavlc_read_total_coeffs.$verific$n3846$787 $auto$opt_reduce.cc:134:opt_pmux$3755 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_138$cavlc_read_total_zeros.v:217$3430: { $flatten\cavlc_read_total_zeros.$verific$n440$2994 $flatten\cavlc_read_total_zeros.$verific$n443$2997 $flatten\cavlc_read_total_zeros.$verific$n446$3000 $flatten\cavlc_read_total_zeros.$verific$n449$3003 $flatten\cavlc_read_total_zeros.$verific$n452$3006 $flatten\cavlc_read_total_zeros.$verific$n455$3009 $flatten\cavlc_read_total_zeros.$verific$n458$3012 $flatten\cavlc_read_total_zeros.$verific$n460$3014 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_139$cavlc_read_total_zeros.v:217$3431: { \cavlc_read_total_zeros.rbsp_LE3 [0] $flatten\cavlc_read_total_zeros.$verific$n440$2994 $flatten\cavlc_read_total_zeros.$verific$n443$2997 $flatten\cavlc_read_total_zeros.$verific$n446$3000 $flatten\cavlc_read_total_zeros.$verific$n449$3003 $flatten\cavlc_read_total_zeros.$verific$n452$3006 $flatten\cavlc_read_total_zeros.$verific$n455$3009 $auto$opt_reduce.cc:134:opt_pmux$3757 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_230$cavlc_read_total_zeros.v:317$3456: { \cavlc_read_total_zeros.rbsp_LE3 [0] $flatten\cavlc_read_total_zeros.$verific$n440$2994 $flatten\cavlc_read_total_zeros.$verific$n443$2997 $auto$opt_reduce.cc:134:opt_pmux$3759 $flatten\cavlc_read_total_zeros.$verific$n451$3005 }
  Optimizing cells in module \cavlc.
Performed a total of 32 changes.

yosys> opt_merge

3.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

3.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_5_reg$cavlc_read_total_coeffs.v:149$1409 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_4_reg$cavlc_read_total_coeffs.v:149$1408 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_3_reg$cavlc_read_total_coeffs.v:149$1407 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_2_reg$cavlc_read_total_coeffs.v:149$1406 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_1_reg$cavlc_read_total_coeffs.v:149$1405 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$TrailingOnes_reg$cavlc_read_total_coeffs.v:1193$1995 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$TotalCoeff_reg$cavlc_read_total_coeffs.v:1193$1996 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_9_reg$cavlc_read_run_befores.v:366$2971 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_8_reg$cavlc_read_run_befores.v:366$2970 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_7_reg$cavlc_read_run_befores.v:366$2969 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_6_reg$cavlc_read_run_befores.v:366$2968 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_5_reg$cavlc_read_run_befores.v:366$2967 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_4_reg$cavlc_read_run_befores.v:366$2966 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_3_reg$cavlc_read_run_befores.v:366$2965 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_2_reg$cavlc_read_run_befores.v:366$2964 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_1_reg$cavlc_read_run_befores.v:366$2963 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_15_reg$cavlc_read_run_befores.v:366$2977 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_14_reg$cavlc_read_run_befores.v:366$2976 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_13_reg$cavlc_read_run_befores.v:366$2975 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_12_reg$cavlc_read_run_befores.v:366$2974 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_11_reg$cavlc_read_run_befores.v:366$2973 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_10_reg$cavlc_read_run_befores.v:366$2972 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_0_reg$cavlc_read_run_befores.v:366$2962 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$ZeroLeft_reg$cavlc_read_run_befores.v:286$2826 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$suffixLength_reg$cavlc_read_levels.v:187$2293 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_prefix_reg$cavlc_read_levels.v:165$2265 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_code_tmp_reg$cavlc_read_levels.v:213$2316 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_abs_reg$cavlc_read_levels.v:245$2334 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_9_reg$cavlc_read_levels.v:382$2449 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_8_reg$cavlc_read_levels.v:382$2448 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_7_reg$cavlc_read_levels.v:382$2447 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_6_reg$cavlc_read_levels.v:382$2446 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_5_reg$cavlc_read_levels.v:382$2445 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_4_reg$cavlc_read_levels.v:382$2444 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_3_reg$cavlc_read_levels.v:382$2443 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_2_reg$cavlc_read_levels.v:382$2442 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_1_reg$cavlc_read_levels.v:382$2441 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_15_reg$cavlc_read_levels.v:382$2455 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_14_reg$cavlc_read_levels.v:382$2454 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_13_reg$cavlc_read_levels.v:382$2453 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_12_reg$cavlc_read_levels.v:382$2452 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_11_reg$cavlc_read_levels.v:382$2451 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_10_reg$cavlc_read_levels.v:382$2450 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_0_reg$cavlc_read_levels.v:382$2440 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$valid_reg$cavlc_fsm.v:156$3685 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$state_reg$cavlc_fsm.v:156$3683 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$i_reg$cavlc_fsm.v:156$3684 ($aldff) from module cavlc.

yosys> opt_clean

3.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.9.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~110 debug messages>

yosys> opt_reduce

3.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.9.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.9.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.10. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.10.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking cavlc.cavlc_fsm.state as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking cavlc.cavlc_read_levels.level_prefix as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.10.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.10.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> fsm_opt

3.10.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~110 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_5_reg$cavlc_read_total_coeffs.v:149$1409 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] }, Q = { \cavlc_read_total_coeffs.rbsp_5 [0] \cavlc_read_total_coeffs.rbsp_5 [1] \cavlc_read_total_coeffs.rbsp_5 [2] \cavlc_read_total_coeffs.rbsp_5 [3] \cavlc_read_total_coeffs.rbsp_5 [4] \cavlc_read_total_coeffs.rbsp_5 [5] \cavlc_read_total_coeffs.rbsp_5 [6] \cavlc_read_total_coeffs.rbsp_5 [7] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_4_reg$cavlc_read_total_coeffs.v:149$1408 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] }, Q = { \cavlc_read_total_coeffs.rbsp_4 [0] \cavlc_read_total_coeffs.rbsp_4 [1] \cavlc_read_total_coeffs.rbsp_4 [2] \cavlc_read_total_coeffs.rbsp_4 [3] \cavlc_read_total_coeffs.rbsp_4 [4] \cavlc_read_total_coeffs.rbsp_4 [5] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_3_reg$cavlc_read_total_coeffs.v:149$1407 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] }, Q = { \cavlc_read_total_coeffs.rbsp_3 [0] \cavlc_read_total_coeffs.rbsp_3 [1] \cavlc_read_total_coeffs.rbsp_3 [2] \cavlc_read_total_coeffs.rbsp_3 [3] \cavlc_read_total_coeffs.rbsp_3 [4] \cavlc_read_total_coeffs.rbsp_3 [5] \cavlc_read_total_coeffs.rbsp_3 [6] \cavlc_read_total_coeffs.rbsp_3 [7] \cavlc_read_total_coeffs.rbsp_3 [8] \cavlc_read_total_coeffs.rbsp_3 [9] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_2_reg$cavlc_read_total_coeffs.v:149$1406 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] \rbsp [10] \rbsp [11] \rbsp [12] \rbsp [13] }, Q = { \cavlc_read_total_coeffs.rbsp_2 [0] \cavlc_read_total_coeffs.rbsp_2 [1] \cavlc_read_total_coeffs.rbsp_2 [2] \cavlc_read_total_coeffs.rbsp_2 [3] \cavlc_read_total_coeffs.rbsp_2 [4] \cavlc_read_total_coeffs.rbsp_2 [5] \cavlc_read_total_coeffs.rbsp_2 [6] \cavlc_read_total_coeffs.rbsp_2 [7] \cavlc_read_total_coeffs.rbsp_2 [8] \cavlc_read_total_coeffs.rbsp_2 [9] \cavlc_read_total_coeffs.rbsp_2 [10] \cavlc_read_total_coeffs.rbsp_2 [11] \cavlc_read_total_coeffs.rbsp_2 [12] \cavlc_read_total_coeffs.rbsp_2 [13] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_1_reg$cavlc_read_total_coeffs.v:149$1405 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] \rbsp [10] \rbsp [11] \rbsp [12] \rbsp [13] \rbsp [14] \rbsp [15] }, Q = { \cavlc_read_total_coeffs.rbsp_1 [0] \cavlc_read_total_coeffs.rbsp_1 [1] \cavlc_read_total_coeffs.rbsp_1 [2] \cavlc_read_total_coeffs.rbsp_1 [3] \cavlc_read_total_coeffs.rbsp_1 [4] \cavlc_read_total_coeffs.rbsp_1 [5] \cavlc_read_total_coeffs.rbsp_1 [6] \cavlc_read_total_coeffs.rbsp_1 [7] \cavlc_read_total_coeffs.rbsp_1 [8] \cavlc_read_total_coeffs.rbsp_1 [9] \cavlc_read_total_coeffs.rbsp_1 [10] \cavlc_read_total_coeffs.rbsp_1 [11] \cavlc_read_total_coeffs.rbsp_1 [12] \cavlc_read_total_coeffs.rbsp_1 [13] \cavlc_read_total_coeffs.rbsp_1 [14] \cavlc_read_total_coeffs.rbsp_1 [15] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$TrailingOnes_reg$cavlc_read_total_coeffs.v:1193$1995 ($adff) from module cavlc (D = \cavlc_fsm.TrailingOnes_comb, Q = \cavlc_read_total_coeffs.TrailingOnes).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$TotalCoeff_reg$cavlc_read_total_coeffs.v:1193$1996 ($adff) from module cavlc (D = \cavlc_fsm.TotalCoeff_comb, Q = \cavlc_read_total_coeffs.TotalCoeff).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_9_reg$cavlc_read_run_befores.v:366$2971 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2079$2733, Q = \cavlc_read_run_befores.coeff_9).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_8_reg$cavlc_read_run_befores.v:366$2970 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2069$2732, Q = \cavlc_read_run_befores.coeff_8).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_7_reg$cavlc_read_run_befores.v:366$2969 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2059$2731, Q = \cavlc_read_run_befores.coeff_7).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_6_reg$cavlc_read_run_befores.v:366$2968 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2049$2730, Q = \cavlc_read_run_befores.coeff_6).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_5_reg$cavlc_read_run_befores.v:366$2967 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2039$2729, Q = \cavlc_read_run_befores.coeff_5).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_4_reg$cavlc_read_run_befores.v:366$2966 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2029$2728, Q = \cavlc_read_run_befores.coeff_4).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_3_reg$cavlc_read_run_befores.v:366$2965 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2019$2727, Q = \cavlc_read_run_befores.coeff_3).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_2_reg$cavlc_read_run_befores.v:366$2964 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2009$2726, Q = \cavlc_read_run_befores.coeff_2).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_1_reg$cavlc_read_run_befores.v:366$2963 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n1999$2725, Q = \cavlc_read_run_befores.coeff_1).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_15_reg$cavlc_read_run_befores.v:366$2977 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2139$2739, Q = \cavlc_read_run_befores.coeff_15).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_14_reg$cavlc_read_run_befores.v:366$2976 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2129$2738, Q = \cavlc_read_run_befores.coeff_14).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_13_reg$cavlc_read_run_befores.v:366$2975 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2119$2737, Q = \cavlc_read_run_befores.coeff_13).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_12_reg$cavlc_read_run_befores.v:366$2974 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2109$2736, Q = \cavlc_read_run_befores.coeff_12).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_11_reg$cavlc_read_run_befores.v:366$2973 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2099$2735, Q = \cavlc_read_run_befores.coeff_11).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_10_reg$cavlc_read_run_befores.v:366$2972 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2089$2734, Q = \cavlc_read_run_befores.coeff_10).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_0_reg$cavlc_read_run_befores.v:366$2962 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n1989$2724, Q = \cavlc_read_run_befores.coeff_0).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$ZeroLeft_reg$cavlc_read_run_befores.v:286$2826 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n494$2625, Q = \cavlc_read_run_befores.ZeroLeft).
Adding EN signal on $flatten\cavlc_read_levels.$verific$suffixLength_reg$cavlc_read_levels.v:187$2293 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n363$2083, Q = \cavlc_read_levels.suffixLength).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_prefix_reg$cavlc_read_levels.v:165$2265 ($adff) from module cavlc (D = \cavlc_read_levels.level_prefix_comb, Q = \cavlc_read_levels.level_prefix).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_code_tmp_reg$cavlc_read_levels.v:213$2316 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n551$2096 [8:0], Q = \cavlc_read_levels.level_code_tmp).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_abs_reg$cavlc_read_levels.v:245$2334 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n800$2107, Q = \cavlc_read_levels.level_abs).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_9_reg$cavlc_read_levels.v:382$2449 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$2200, Q = \cavlc_read_levels.level_9).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_8_reg$cavlc_read_levels.v:382$2448 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$2201, Q = \cavlc_read_levels.level_8).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_7_reg$cavlc_read_levels.v:382$2447 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$2202, Q = \cavlc_read_levels.level_7).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_6_reg$cavlc_read_levels.v:382$2446 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$2203, Q = \cavlc_read_levels.level_6).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_5_reg$cavlc_read_levels.v:382$2445 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$2204, Q = \cavlc_read_levels.level_5).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_4_reg$cavlc_read_levels.v:382$2444 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$2205, Q = \cavlc_read_levels.level_4).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_3_reg$cavlc_read_levels.v:382$2443 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$2206, Q = \cavlc_read_levels.level_3).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_2_reg$cavlc_read_levels.v:382$2442 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$2207, Q = \cavlc_read_levels.level_2).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_1_reg$cavlc_read_levels.v:382$2441 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$2208, Q = \cavlc_read_levels.level_1).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_15_reg$cavlc_read_levels.v:382$2455 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$2194, Q = \cavlc_read_levels.level_15).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_14_reg$cavlc_read_levels.v:382$2454 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$2195, Q = \cavlc_read_levels.level_14).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_13_reg$cavlc_read_levels.v:382$2453 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$2196, Q = \cavlc_read_levels.level_13).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_12_reg$cavlc_read_levels.v:382$2452 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$2197, Q = \cavlc_read_levels.level_12).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_11_reg$cavlc_read_levels.v:382$2451 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$2198, Q = \cavlc_read_levels.level_11).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_10_reg$cavlc_read_levels.v:382$2450 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$2199, Q = \cavlc_read_levels.level_10).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_0_reg$cavlc_read_levels.v:382$2440 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$2209, Q = \cavlc_read_levels.level_0).
Adding EN signal on $flatten\cavlc_fsm.$verific$valid_reg$cavlc_fsm.v:156$3685 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n346$3572, Q = \cavlc_fsm.valid).
Adding EN signal on $flatten\cavlc_fsm.$verific$state_reg$cavlc_fsm.v:156$3683 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n336$3612, Q = \cavlc_fsm.state).
Adding EN signal on $flatten\cavlc_fsm.$verific$i_reg$cavlc_fsm.v:156$3684 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n347$3613, Q = \cavlc_fsm.i).

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 28 unused cells and 28 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~38 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~108 debug messages>
Removed a total of 36 cells.

yosys> opt_dff -sat

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 37 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.11.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.12. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_963$cavlc_read_total_coeffs.v:1060$1915 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_902$cavlc_read_total_coeffs.v:1013$1877 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_886$cavlc_read_total_coeffs.v:1013$1861 ($mux).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_878$cavlc_read_total_coeffs.v:1004$1858 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_874$cavlc_read_total_coeffs.v:999$1857 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_866$cavlc_read_total_coeffs.v:989$1855 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_959$cavlc_read_total_coeffs.v:1052$1911 ($pmux).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$1917 ($add).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_686$cavlc_read_total_coeffs.v:741$1786 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_670$cavlc_read_total_coeffs.v:722$1780 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_666$cavlc_read_total_coeffs.v:722$1776 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_993$cavlc_read_total_coeffs.v:1107$1928 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_648$cavlc_read_total_coeffs.v:708$1766 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_624$cavlc_read_total_coeffs.v:690$1751 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_623$cavlc_read_total_coeffs.v:690$1750 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_995$cavlc_read_total_coeffs.v:1107$1930 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_614$cavlc_read_total_coeffs.v:679$1746 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_611$cavlc_read_total_coeffs.v:675$1745 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_608$cavlc_read_total_coeffs.v:671$1744 ($eq).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_585$cavlc_read_total_coeffs.v:655$1728 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_584$cavlc_read_total_coeffs.v:655$1727 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_579$cavlc_read_total_coeffs.v:648$1726 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_576$cavlc_read_total_coeffs.v:644$1725 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_564$cavlc_read_total_coeffs.v:628$1721 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_548$cavlc_read_total_coeffs.v:620$1708 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_547$cavlc_read_total_coeffs.v:620$1707 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_538$cavlc_read_total_coeffs.v:609$1704 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_535$cavlc_read_total_coeffs.v:605$1703 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_526$cavlc_read_total_coeffs.v:593$1700 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_517$cavlc_read_total_coeffs.v:585$1694 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_516$cavlc_read_total_coeffs.v:585$1693 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_997$cavlc_read_total_coeffs.v:1107$1932 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_511$cavlc_read_total_coeffs.v:578$1691 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_501$cavlc_read_total_coeffs.v:566$1686 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_481$cavlc_read_total_coeffs.v:547$1675 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_480$cavlc_read_total_coeffs.v:547$1674 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_475$cavlc_read_total_coeffs.v:540$1673 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_463$cavlc_read_total_coeffs.v:528$1668 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_446$cavlc_read_total_coeffs.v:509$1663 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_1005$cavlc_read_total_coeffs.v:1118$1935 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_436$cavlc_read_total_coeffs.v:509$1653 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_435$cavlc_read_total_coeffs.v:509$1652 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_428$cavlc_read_total_coeffs.v:500$1649 ($eq).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_411$cavlc_read_total_coeffs.v:477$1643 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_409$cavlc_read_total_coeffs.v:477$1641 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_407$cavlc_read_total_coeffs.v:477$1639 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_394$cavlc_read_total_coeffs.v:460$1636 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_393$cavlc_read_total_coeffs.v:460$1635 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_297$cavlc_read_total_coeffs.v:418$1566 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_287$cavlc_read_total_coeffs.v:407$1560 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_284$cavlc_read_total_coeffs.v:403$1558 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_275$cavlc_read_total_coeffs.v:391$1554 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_259$cavlc_read_total_coeffs.v:383$1541 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_258$cavlc_read_total_coeffs.v:383$1540 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_249$cavlc_read_total_coeffs.v:372$1535 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_243$cavlc_read_total_coeffs.v:364$1533 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_240$cavlc_read_total_coeffs.v:360$1531 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_221$cavlc_read_total_coeffs.v:348$1517 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_220$cavlc_read_total_coeffs.v:348$1516 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_1052$cavlc_read_total_coeffs.v:1147$1962 ($pmux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_1053$cavlc_read_total_coeffs.v:1147$1963 ($pmux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_211$cavlc_read_total_coeffs.v:337$1511 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_205$cavlc_read_total_coeffs.v:329$1509 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_202$cavlc_read_total_coeffs.v:325$1507 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_182$cavlc_read_total_coeffs.v:313$1491 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_181$cavlc_read_total_coeffs.v:313$1490 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_176$cavlc_read_total_coeffs.v:306$1487 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_170$cavlc_read_total_coeffs.v:298$1484 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_161$cavlc_read_total_coeffs.v:286$1479 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_152$cavlc_read_total_coeffs.v:278$1473 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_151$cavlc_read_total_coeffs.v:278$1472 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_146$cavlc_read_total_coeffs.v:271$1470 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_134$cavlc_read_total_coeffs.v:259$1463 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_133$cavlc_read_total_coeffs.v:259$1462 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_128$cavlc_read_total_coeffs.v:252$1460 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_116$cavlc_read_total_coeffs.v:240$1453 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_115$cavlc_read_total_coeffs.v:240$1452 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_110$cavlc_read_total_coeffs.v:233$1450 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_98$cavlc_read_total_coeffs.v:221$1443 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_97$cavlc_read_total_coeffs.v:221$1442 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_92$cavlc_read_total_coeffs.v:214$1440 ($eq).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_84$cavlc_read_total_coeffs.v:202$1434 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_80$cavlc_read_total_coeffs.v:202$1430 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_79$cavlc_read_total_coeffs.v:202$1429 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_67$cavlc_read_total_coeffs.v:185$1424 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_63$cavlc_read_total_coeffs.v:185$1420 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_62$cavlc_read_total_coeffs.v:185$1419 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_920$cavlc_read_total_coeffs.v:1045$1884 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_171$cavlc_read_levels.v:270$2345 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_162$cavlc_read_levels.v:263$2339 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_158$cavlc_read_levels.v:259$2336 ($mux).
Removed top 31 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$2324 ($sub).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$2324 ($sub).
Removed top 22 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$2324 ($sub).
Removed top 30 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$2323 ($sub).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$2323 ($sub).
Removed top 22 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$2323 ($sub).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$2322 ($neg).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$2322 ($neg).
Removed top 8 bits (of 9) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$2321 ($add).
Removed top 7 bits (of 9) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$2319 ($add).
Removed top 28 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$2312 ($add).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$2312 ($add).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$2312 ($add).
Removed top 23 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$2310 ($add).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$2310 ($add).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$2310 ($add).
Removed top 28 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_104$cavlc_read_levels.v:211$2309 ($shl).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_104$cavlc_read_levels.v:211$2309 ($shl).
Removed top 2 bits (of 3) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_85$cavlc_read_levels.v:194$2294 ($lt).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$2285 ($add).
Removed top 7 bits (of 9) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_72$cavlc_read_levels.v:185$2281 ($shl).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$2280 ($sub).
Removed top 7 bits (of 9) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_66$cavlc_read_levels.v:181$2277 ($lt).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_59$cavlc_read_levels.v:177$2271 ($lt).
Removed top 28 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$equal_52$cavlc_read_levels.v:171$2268 ($eq).
Removed top 31 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$2267 ($sub).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$2266 ($sub).
Removed top 4 bits (of 6) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$2266 ($sub).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$2457 ($add).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_403$cavlc_read_levels.v:396$2466 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_404$cavlc_read_levels.v:396$2467 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_405$cavlc_read_levels.v:396$2468 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4004 ($ne).
Removed top 1 bits (of 2) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3936 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3925 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3916 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3907 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3898 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3889 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3880 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3871 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3862 ($ne).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_283$cavlc_read_total_zeros.v:393$3481 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_357$cavlc_read_total_zeros.v:467$3493 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_247$cavlc_read_total_zeros.v:351$3465 ($mux).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_689$cavlc_read_total_zeros.v:505$3506 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_471$cavlc_read_total_zeros.v:576$3507 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_211$cavlc_read_total_zeros.v:315$3455 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_591$cavlc_read_total_zeros.v:712$3538 ($mux).
Removed top 1 bits (of 12) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_690$cavlc_read_total_zeros.v:512$3498 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_195$cavlc_read_total_zeros.v:289$3449 ($mux).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_686$cavlc_read_total_zeros.v:595$3511 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_161$cavlc_read_total_zeros.v:255$3440 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_153$cavlc_read_total_zeros.v:241$3437 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_151$cavlc_read_total_zeros.v:240$3435 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_105$cavlc_read_total_zeros.v:211$3407 ($mux).
Removed top 1 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_682$cavlc_read_total_zeros.v:610$3518 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_101$cavlc_read_total_zeros.v:204$3405 ($mux).
Removed top 2 bits (of 3) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_359$cavlc_read_total_zeros.v:468$3494 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_97$cavlc_read_total_zeros.v:197$3403 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_552$cavlc_read_total_zeros.v:664$3520 ($mux).
Removed top 3 bits (of 16) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_692$cavlc_read_total_zeros.v:565$3497 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_89$cavlc_read_total_zeros.v:183$3399 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_85$cavlc_read_total_zeros.v:176$3397 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_81$cavlc_read_total_zeros.v:169$3395 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_284$cavlc_read_total_zeros.v:394$3482 ($mux).
Removed top 5 bits (of 6) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_664$cavlc_read_total_zeros.v:678$3526 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_60$cavlc_read_total_zeros.v:150$3376 ($mux).
Removed top 1 bits (of 6) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_663$cavlc_read_total_zeros.v:678$3527 ($mux).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_zeros.$verific$equal_45$cavlc_read_total_zeros.v:131$3371 ($eq).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_628$cavlc_read_total_zeros.v:678$3528 ($mux).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_zeros.$verific$equal_30$cavlc_read_total_zeros.v:115$3363 ($eq).
Removed top 3 bits (of 12) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_626$cavlc_read_total_zeros.v:685$3353 ($mux).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3853 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3844 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3835 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3826 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3817 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3808 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3799 ($ne).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_271$cavlc_read_run_befores.v:357$2887 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_268$cavlc_read_run_befores.v:356$2884 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_265$cavlc_read_run_befores.v:355$2881 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_262$cavlc_read_run_befores.v:354$2878 ($le).
Removed top 2 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_259$cavlc_read_run_befores.v:353$2875 ($le).
Removed top 2 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_256$cavlc_read_run_befores.v:352$2872 ($le).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_253$cavlc_read_run_befores.v:351$2869 ($le).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_234$cavlc_read_run_befores.v:345$2849 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_233$cavlc_read_run_befores.v:344$2848 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_232$cavlc_read_run_befores.v:343$2847 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_231$cavlc_read_run_befores.v:342$2846 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_230$cavlc_read_run_befores.v:341$2845 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_229$cavlc_read_run_befores.v:340$2844 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_228$cavlc_read_run_befores.v:339$2843 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_227$cavlc_read_run_befores.v:338$2842 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_226$cavlc_read_run_befores.v:337$2841 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_225$cavlc_read_run_befores.v:336$2840 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_224$cavlc_read_run_befores.v:335$2839 ($eq).
Removed top 3 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_223$cavlc_read_run_befores.v:334$2838 ($eq).
Removed top 3 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_222$cavlc_read_run_befores.v:333$2837 ($eq).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_221$cavlc_read_run_befores.v:332$2836 ($eq).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_203$cavlc_read_run_befores.v:330$2832 ($lt).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_127$cavlc_read_run_befores.v:269$2815 ($lt).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_119$cavlc_read_run_befores.v:223$2807 ($eq).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_118$cavlc_read_run_befores.v:209$2806 ($eq).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_117$cavlc_read_run_befores.v:199$2805 ($eq).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_116$cavlc_read_run_befores.v:195$2804 ($eq).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_115$cavlc_read_run_befores.v:182$2803 ($eq).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_114$cavlc_read_run_befores.v:181$2802 ($eq).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$2770 ($sub).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$2770 ($sub).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_56$cavlc_read_run_befores.v:238$2768 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_30$cavlc_read_run_befores.v:207$2760 ($mux).
Removed top 1 bits (of 3) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$2755 ($sub).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$2755 ($sub).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_364$cavlc_read_run_befores.v:193$2753 ($mux).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_363$cavlc_read_run_befores.v:193$2746 ($mux).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_372$cavlc_read_run_befores.v:193$2745 ($mux).
Removed top 1 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_72$cavlc_fsm.v:142$3671 ($eq).
Removed top 2 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_71$cavlc_fsm.v:130$3670 ($eq).
Removed top 3 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_70$cavlc_fsm.v:127$3669 ($eq).
Removed top 4 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_69$cavlc_fsm.v:124$3668 ($eq).
Removed top 5 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_68$cavlc_fsm.v:116$3667 ($eq).
Removed top 6 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_67$cavlc_fsm.v:105$3666 ($eq).
Removed top 7 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_66$cavlc_fsm.v:96$3665 ($eq).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$3652 ($sub).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$3652 ($sub).
Removed top 1 bits (of 5) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$3652 ($sub).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$3649 ($sub).
Removed top 5 bits (of 6) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$3649 ($sub).
Removed top 2 bits (of 6) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$3649 ($sub).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$3649 ($sub).
Removed top 1 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_33$cavlc_fsm.v:122$3642 ($mux).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$3640 ($sub).
Removed top 3 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$equal_28$cavlc_fsm.v:117$3638 ($eq).
Removed top 4 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_24$cavlc_fsm.v:114$3634 ($mux).
Removed top 4 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$LessThan_17$cavlc_fsm.v:107$3629 ($lt).
Removed top 1 bits (of 2) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$LessThan_16$cavlc_fsm.v:107$3628 ($lt).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$3625 ($sub).
Removed top 5 bits (of 6) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$3625 ($sub).
Removed top 2 bits (of 6) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$3625 ($sub).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$3625 ($sub).
Removed top 6 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_12$cavlc_fsm.v:103$3623 ($mux).
Removed top 1 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n144$3590.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_fsm.$verific$n153$3591.
Removed top 2 bits (of 6) from wire cavlc.$flatten\cavlc_fsm.$verific$n198$3596.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_fsm.$verific$n219$3599.
Removed top 6 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n41$3578.
Removed top 3 bits (of 6) from wire cavlc.$flatten\cavlc_fsm.$verific$n51$3579.
Removed top 4 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n95$3584.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1004$2110.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1090$2112.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1240$2116.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4254$2217.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4260$2218.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4266$2219.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n109$2567.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n124$2570.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n238$2590.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n56$2558.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n66$2560.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n71$2561.
Removed top 1 bits (of 3) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n76$2562.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1001$931.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1004$932.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1152$954.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1158$955.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1300$973.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1306$974.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1454$993.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1689$1023.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1692$1024.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1748$1030.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1760$1032.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1769$1034.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1870$1038.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1873$1039.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1924$1049.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1993$1056.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2062$1062.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2065$1063.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2146$1072.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2206$1076.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2209$1077.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2321$1086.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2327$1087.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2466$1100.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2469$1101.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2617$1116.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2623$1117.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2805$1140.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2826$1144.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2892$1149.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3631$1269.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3712$1285.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3794$1298.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4000$1321.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4009$1323.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4018$1325.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4052$1330.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n521$866.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n524$867.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n545$871.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n598$880.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n601$881.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n622$885.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n673$892.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n676$893.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n745$901.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n748$902.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n817$910.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n820$911.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n889$919.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n892$920.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1008$3174.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1013$3175.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1236$3212.
Removed top 2 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1246$3214.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1356$3234.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1375$3238.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1522$3261.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1568$3265.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1614$3273.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1665$3281.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1693$3287.
Removed top 1 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1708$3288.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1712$3289.
Removed top 1 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1773$3297.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1777$3298.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1818$3305.
Removed top 2 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1832$3308.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1872$3317.
Removed top 1 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1886$3320.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1904$3324.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1978$3336.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n223$3051.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n296$3070.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n316$3074.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n336$3078.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n376$3086.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n396$3090.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n416$3094.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n526$3105.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n531$3106.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n536$3107.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n556$3109.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n576$3111.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n690$3129.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n770$3141.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n875$3155.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n880$3156.
Removed top 1 bits (of 9) from wire cavlc.level_9.

yosys> peepopt

3.13. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.14. Executing PMUXTREE pass.

yosys> opt_clean

3.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 94 unused cells and 271 unused wires.
<suppressed ~95 debug messages>

yosys> techmap

3.16. Executing TECHMAP pass (map to technology primitives).

3.16.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.16.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $and.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $adffe.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$constmap:2a5a90c887f7f17a34d4032fe665c7aac02a3bb8$paramod$27be44c49fb1346b96bf9a9013de8943094e1f11\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:3e07689e7ff5356da68de1ee7387179a05a469ef$paramod$b54d5ebdaecd24844fc43a347f4baf80efcdaf00\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$constmap:1e83989bdaaeae429b09a33fcb9a97ba54f64e9f$paramod$fb16e0492dc88ab7064d5e90ab6662c825c4229e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=3:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=2:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=2:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$8045f2881226ae434b154710c783ad25023f386c\_90_alu for cells of type $alu.
Using template $paramod$1623a19b5a6212f34c8bbb2c47024a6341e117ef\_90_alu for cells of type $alu.
Using template $paramod$f6be9c44ab2ca5376bc6f0f45697cdb0ad470520\_90_alu for cells of type $alu.
Using template $paramod$1eb759649286d7485bd82f4dfc30385bade4b4b3\_90_alu for cells of type $alu.
Using template $paramod$de9286bb3f6c9573089ef1694e580944d318189a\_90_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$4e7ab332c4f4e7e4c8a648a6a417480f7ed6e86d\_90_alu for cells of type $alu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using template $paramod$5a51f938fa54bf7015d956f06feadaa94e2be5b1\_90_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using template $paramod$e23c72610957bd76b0654139c354e282891d4e8f\_90_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_90_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod$0563fff2c395e9892f21c131fa33d5e0ad144e72\_90_alu for cells of type $alu.
Using template $paramod$649fc39eef2451024566705288528c8671211199\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using template $paramod$5ccf584370207a3ccc3032757a8e590623d4de56\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~5939 debug messages>

yosys> alumacc

3.17. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module cavlc:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.18. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~7290 debug messages>

yosys> opt_merge -nomux

3.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~3387 debug messages>
Removed a total of 1129 cells.

yosys> opt_muxtree

3.18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$14543 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$2196 [0], Q = \cavlc_read_levels.level_13 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14734 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$2209 [2], Q = \cavlc_read_levels.level_0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14097 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$2200 [6], Q = \cavlc_read_levels.level_9 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14235 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$2199 [5], Q = \cavlc_read_levels.level_10 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14529 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$2197 [7], Q = \cavlc_read_levels.level_12 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14740 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$2209 [8], Q = \cavlc_read_levels.level_0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14238 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$2199 [8], Q = \cavlc_read_levels.level_10 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14274 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$2198 [8], Q = \cavlc_read_levels.level_11 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14530 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$2197 [8], Q = \cavlc_read_levels.level_12 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14551 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$2196 [8], Q = \cavlc_read_levels.level_13 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14574 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$2195 [8], Q = \cavlc_read_levels.level_14 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9054 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$2194 [8], Q = \cavlc_read_levels.level_15 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9045 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$2208 [8], Q = \cavlc_read_levels.level_1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9036 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$2207 [8], Q = \cavlc_read_levels.level_2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9027 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$2206 [8], Q = \cavlc_read_levels.level_3 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9018 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$2205 [8], Q = \cavlc_read_levels.level_4 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9009 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$2204 [8], Q = \cavlc_read_levels.level_5 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9000 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$2203 [8], Q = \cavlc_read_levels.level_6 [8]).
Adding EN signal on $auto$ff.cc:262:slice$8991 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$2202 [8], Q = \cavlc_read_levels.level_7 [8]).
Adding EN signal on $auto$ff.cc:262:slice$8982 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$2201 [8], Q = \cavlc_read_levels.level_8 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14099 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$2200 [8], Q = \cavlc_read_levels.level_9 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14268 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$2198 [2], Q = \cavlc_read_levels.level_11 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14233 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$2199 [3], Q = \cavlc_read_levels.level_10 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14269 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$2198 [3], Q = \cavlc_read_levels.level_11 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14237 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$2199 [7], Q = \cavlc_read_levels.level_10 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14232 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$2199 [2], Q = \cavlc_read_levels.level_10 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14272 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$2198 [6], Q = \cavlc_read_levels.level_11 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14567 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$2195 [1], Q = \cavlc_read_levels.level_14 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14273 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$2198 [7], Q = \cavlc_read_levels.level_11 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14236 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$2199 [6], Q = \cavlc_read_levels.level_10 [6]).
Adding EN signal on $auto$ff.cc:262:slice$8974 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$2201 [0], Q = \cavlc_read_levels.level_8 [0]).
Adding EN signal on $auto$ff.cc:262:slice$8975 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$2201 [1], Q = \cavlc_read_levels.level_8 [1]).
Adding EN signal on $auto$ff.cc:262:slice$8976 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$2201 [2], Q = \cavlc_read_levels.level_8 [2]).
Adding EN signal on $auto$ff.cc:262:slice$8977 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$2201 [3], Q = \cavlc_read_levels.level_8 [3]).
Adding EN signal on $auto$ff.cc:262:slice$8978 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$2201 [4], Q = \cavlc_read_levels.level_8 [4]).
Adding EN signal on $auto$ff.cc:262:slice$8979 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$2201 [5], Q = \cavlc_read_levels.level_8 [5]).
Adding EN signal on $auto$ff.cc:262:slice$8980 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$2201 [6], Q = \cavlc_read_levels.level_8 [6]).
Adding EN signal on $auto$ff.cc:262:slice$8981 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$2201 [7], Q = \cavlc_read_levels.level_8 [7]).
Adding EN signal on $auto$ff.cc:262:slice$8983 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$2202 [0], Q = \cavlc_read_levels.level_7 [0]).
Adding EN signal on $auto$ff.cc:262:slice$8984 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$2202 [1], Q = \cavlc_read_levels.level_7 [1]).
Adding EN signal on $auto$ff.cc:262:slice$8985 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$2202 [2], Q = \cavlc_read_levels.level_7 [2]).
Adding EN signal on $auto$ff.cc:262:slice$8986 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$2202 [3], Q = \cavlc_read_levels.level_7 [3]).
Adding EN signal on $auto$ff.cc:262:slice$8987 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$2202 [4], Q = \cavlc_read_levels.level_7 [4]).
Adding EN signal on $auto$ff.cc:262:slice$8988 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$2202 [5], Q = \cavlc_read_levels.level_7 [5]).
Adding EN signal on $auto$ff.cc:262:slice$8989 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$2202 [6], Q = \cavlc_read_levels.level_7 [6]).
Adding EN signal on $auto$ff.cc:262:slice$8990 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$2202 [7], Q = \cavlc_read_levels.level_7 [7]).
Adding EN signal on $auto$ff.cc:262:slice$8992 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$2203 [0], Q = \cavlc_read_levels.level_6 [0]).
Adding EN signal on $auto$ff.cc:262:slice$8993 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$2203 [1], Q = \cavlc_read_levels.level_6 [1]).
Adding EN signal on $auto$ff.cc:262:slice$8994 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$2203 [2], Q = \cavlc_read_levels.level_6 [2]).
Adding EN signal on $auto$ff.cc:262:slice$8995 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$2203 [3], Q = \cavlc_read_levels.level_6 [3]).
Adding EN signal on $auto$ff.cc:262:slice$8996 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$2203 [4], Q = \cavlc_read_levels.level_6 [4]).
Adding EN signal on $auto$ff.cc:262:slice$8997 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$2203 [5], Q = \cavlc_read_levels.level_6 [5]).
Adding EN signal on $auto$ff.cc:262:slice$8998 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$2203 [6], Q = \cavlc_read_levels.level_6 [6]).
Adding EN signal on $auto$ff.cc:262:slice$8999 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$2203 [7], Q = \cavlc_read_levels.level_6 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9001 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$2204 [0], Q = \cavlc_read_levels.level_5 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9002 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$2204 [1], Q = \cavlc_read_levels.level_5 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9003 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$2204 [2], Q = \cavlc_read_levels.level_5 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9004 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$2204 [3], Q = \cavlc_read_levels.level_5 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9005 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$2204 [4], Q = \cavlc_read_levels.level_5 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9006 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$2204 [5], Q = \cavlc_read_levels.level_5 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9007 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$2204 [6], Q = \cavlc_read_levels.level_5 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9008 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$2204 [7], Q = \cavlc_read_levels.level_5 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9010 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$2205 [0], Q = \cavlc_read_levels.level_4 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9011 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$2205 [1], Q = \cavlc_read_levels.level_4 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9012 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$2205 [2], Q = \cavlc_read_levels.level_4 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9013 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$2205 [3], Q = \cavlc_read_levels.level_4 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9014 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$2205 [4], Q = \cavlc_read_levels.level_4 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9015 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$2205 [5], Q = \cavlc_read_levels.level_4 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9016 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$2205 [6], Q = \cavlc_read_levels.level_4 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9017 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$2205 [7], Q = \cavlc_read_levels.level_4 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9019 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$2206 [0], Q = \cavlc_read_levels.level_3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9020 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$2206 [1], Q = \cavlc_read_levels.level_3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9021 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$2206 [2], Q = \cavlc_read_levels.level_3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9022 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$2206 [3], Q = \cavlc_read_levels.level_3 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9023 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$2206 [4], Q = \cavlc_read_levels.level_3 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9024 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$2206 [5], Q = \cavlc_read_levels.level_3 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9025 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$2206 [6], Q = \cavlc_read_levels.level_3 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9026 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$2206 [7], Q = \cavlc_read_levels.level_3 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9028 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$2207 [0], Q = \cavlc_read_levels.level_2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9029 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$2207 [1], Q = \cavlc_read_levels.level_2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9030 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$2207 [2], Q = \cavlc_read_levels.level_2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9031 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$2207 [3], Q = \cavlc_read_levels.level_2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9032 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$2207 [4], Q = \cavlc_read_levels.level_2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9033 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$2207 [5], Q = \cavlc_read_levels.level_2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9034 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$2207 [6], Q = \cavlc_read_levels.level_2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9035 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$2207 [7], Q = \cavlc_read_levels.level_2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9037 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$2208 [0], Q = \cavlc_read_levels.level_1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9038 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$2208 [1], Q = \cavlc_read_levels.level_1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9039 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$2208 [2], Q = \cavlc_read_levels.level_1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9040 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$2208 [3], Q = \cavlc_read_levels.level_1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9041 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$2208 [4], Q = \cavlc_read_levels.level_1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9042 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$2208 [5], Q = \cavlc_read_levels.level_1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9043 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$2208 [6], Q = \cavlc_read_levels.level_1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9044 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$2208 [7], Q = \cavlc_read_levels.level_1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9046 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$2194 [0], Q = \cavlc_read_levels.level_15 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9047 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$2194 [1], Q = \cavlc_read_levels.level_15 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9048 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$2194 [2], Q = \cavlc_read_levels.level_15 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9049 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$2194 [3], Q = \cavlc_read_levels.level_15 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9050 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$2194 [4], Q = \cavlc_read_levels.level_15 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9051 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$2194 [5], Q = \cavlc_read_levels.level_15 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9052 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$2194 [6], Q = \cavlc_read_levels.level_15 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9053 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$2194 [7], Q = \cavlc_read_levels.level_15 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14091 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$2200 [0], Q = \cavlc_read_levels.level_9 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14094 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$2200 [3], Q = \cavlc_read_levels.level_9 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14092 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$2200 [1], Q = \cavlc_read_levels.level_9 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14093 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$2200 [2], Q = \cavlc_read_levels.level_9 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14733 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$2209 [1], Q = \cavlc_read_levels.level_0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14732 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$2209 [0], Q = \cavlc_read_levels.level_0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14095 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$2200 [4], Q = \cavlc_read_levels.level_9 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14737 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$2209 [5], Q = \cavlc_read_levels.level_0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14738 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$2209 [6], Q = \cavlc_read_levels.level_0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14736 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$2209 [4], Q = \cavlc_read_levels.level_0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14739 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$2209 [7], Q = \cavlc_read_levels.level_0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14572 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$2195 [6], Q = \cavlc_read_levels.level_14 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14735 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$2209 [3], Q = \cavlc_read_levels.level_0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14528 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$2197 [6], Q = \cavlc_read_levels.level_12 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14522 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$2197 [0], Q = \cavlc_read_levels.level_12 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14271 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$2198 [5], Q = \cavlc_read_levels.level_11 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14523 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$2197 [1], Q = \cavlc_read_levels.level_12 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14524 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$2197 [2], Q = \cavlc_read_levels.level_12 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14549 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$2196 [6], Q = \cavlc_read_levels.level_13 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14548 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$2196 [5], Q = \cavlc_read_levels.level_13 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14526 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$2197 [4], Q = \cavlc_read_levels.level_12 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14527 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$2197 [5], Q = \cavlc_read_levels.level_12 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14544 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$2196 [1], Q = \cavlc_read_levels.level_13 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14566 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$2195 [0], Q = \cavlc_read_levels.level_14 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14525 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$2197 [3], Q = \cavlc_read_levels.level_12 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14547 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$2196 [4], Q = \cavlc_read_levels.level_13 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14568 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$2195 [2], Q = \cavlc_read_levels.level_14 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14550 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$2196 [7], Q = \cavlc_read_levels.level_13 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14545 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$2196 [2], Q = \cavlc_read_levels.level_13 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14569 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$2195 [3], Q = \cavlc_read_levels.level_14 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14570 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$2195 [4], Q = \cavlc_read_levels.level_14 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14234 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$2199 [4], Q = \cavlc_read_levels.level_10 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14571 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$2195 [5], Q = \cavlc_read_levels.level_14 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14098 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$2200 [7], Q = \cavlc_read_levels.level_9 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14096 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$2200 [5], Q = \cavlc_read_levels.level_9 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14267 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$2198 [1], Q = \cavlc_read_levels.level_11 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14266 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$2198 [0], Q = \cavlc_read_levels.level_11 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14231 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$2199 [1], Q = \cavlc_read_levels.level_10 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14573 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$2195 [7], Q = \cavlc_read_levels.level_14 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14230 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$2199 [0], Q = \cavlc_read_levels.level_10 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14270 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$2198 [4], Q = \cavlc_read_levels.level_11 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14546 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$2196 [3], Q = \cavlc_read_levels.level_13 [3]).

yosys> opt_clean

3.18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 230 unused cells and 4634 unused wires.
<suppressed ~231 debug messages>

yosys> opt_expr

3.18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~5982 debug messages>

3.18.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.18.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~31185 debug messages>
Removed a total of 10395 cells.

yosys> opt_dff

3.18.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 8515 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.18.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.18.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.18.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.18.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.18.23. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.19. Executing MEMORY pass.

yosys> opt_mem

3.19.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.19.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.19.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.19.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.19.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> memory_share

3.19.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.19.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> memory_collect

3.19.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr -mux_undef

3.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~963 debug messages>

yosys> simplemap

3.22. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge

3.24. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~240 debug messages>
Removed a total of 80 cells.

yosys> opt_dff -nodffe -nosdff

3.25. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 1 unused cells and 143 unused wires.
<suppressed ~2 debug messages>

yosys> opt -nodffe -nosdff

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.27.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~481 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15322 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$5490
        $auto$simplemap.cc:278:simplemap_mux$5538

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15576 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$5196
        $auto$simplemap.cc:278:simplemap_mux$5230


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~2 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.30.18. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~73 debug messages>

yosys> opt

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Extracted 3890 gates and 4166 wires to a netlist network with 274 inputs and 309 outputs.

3.33.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_09-03-2022T20-36-44/All_lut_synth_rs_area.json/cavlc/abc_tmp.scr 
ABC: netlist  : i/o =    274/    309  and =    4354  lev =   39 (15.82)  mem = 0.07 MB
ABC: Mapping (K=6)  :  lut =    890  edge =    3752  lev =   18 (6.06)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4150  lev =   35 (15.63)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    818  edge =    3508  lev =   15 (5.90)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4253  lev =   40 (15.51)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    794  edge =    3506  lev =   16 (5.64)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4284  lev =   40 (14.99)  mem = 0.07 MB
ABC: Mapping (K=6)  :  lut =    784  edge =    3490  lev =   15 (5.60)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4155  lev =   37 (15.06)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    788  edge =    3462  lev =   16 (5.72)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4255  lev =   38 (14.46)  mem = 0.08 MB
ABC: Mapping (K=6)  :  lut =    767  edge =    3481  lev =   17 (5.43)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4212  lev =   36 (14.43)  mem = 0.08 MB
ABC: Mapping (K=6)  :  lut =    768  edge =    3446  lev =   15 (5.42)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4250  lev =   37 (14.49)  mem = 0.08 MB
ABC: Mapping (K=6)  :  lut =    764  edge =    3461  lev =   14 (5.30)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4206  lev =   35 (14.23)  mem = 0.08 MB
ABC: Mapping (K=6)  :  lut =    763  edge =    3443  lev =   14 (5.31)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4215  lev =   36 (14.48)  mem = 0.08 MB
ABC: Mapping (K=6)  :  lut =    758  edge =    3421  lev =   14 (5.30)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4223  lev =   36 (14.41)  mem = 0.08 MB
ABC: Mapping (K=6)  :  lut =    760  edge =    3422  lev =   15 (5.31)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4182  lev =   36 (14.52)  mem = 0.08 MB
ABC: Mapping (K=6)  :  lut =    757  edge =    3385  lev =   14 (5.27)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4162  lev =   36 (14.31)  mem = 0.08 MB
ABC: Mapping (K=6)  :  lut =    757  edge =    3387  lev =   14 (5.26)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4182  lev =   36 (14.52)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    757  edge =    3385  lev =   14 (5.27)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4182  lev =   36 (14.52)  mem = 0.08 MB
ABC: Mapping (K=6)  :  lut =    757  edge =    3385  lev =   14 (5.27)  mem = 0.04 MB
ABC: netlist  : i/o =    274/    309  and =    4184  lev =   37 (14.15)  mem = 0.06 MB
ABC: Mapping (K=6)  :  lut =    757  edge =    3385  lev =   14 (5.27)  mem = 0.04 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      757
ABC RESULTS:        internal signals:     3583
ABC RESULTS:           input signals:      274
ABC RESULTS:          output signals:      309
Removing temp directory.

yosys> opt

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 2205 unused wires.
<suppressed ~37 debug messages>

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.34.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.34.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.34.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.34.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.34.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.35. Executing HIERARCHY pass (managing design hierarchy).

3.35.1. Analyzing design hierarchy..
Top module:  \cavlc

3.35.2. Analyzing design hierarchy..
Top module:  \cavlc
Removed 0 unused modules.

yosys> stat

3.36. Printing statistics.

=== cavlc ===

   Number of wires:                903
   Number of wire bits:           1854
   Number of public wires:         171
   Number of public wire bits:    1106
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1148
     $_DFFE_PN0P_                  390
     $_DFFE_PN1P_                    1
     $lut                          757


yosys> opt_clean -purge

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 104 unused wires.
<suppressed ~104 debug messages>

yosys> write_verilog -noattr -nohex cavlc.verilog

3.38. Executing Verilog backend.

yosys> bmuxmap

3.38.1. Executing BMUXMAP pass.

yosys> demuxmap

3.38.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\cavlc'.

Warnings: 73 unique messages, 74 total
End of script. Logfile hash: a37cd80cc6, CPU: user 17.43s system 0.11s, MEM: 78.99 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 47% 1x abc (15 sec), 15% 48x opt_expr (5 sec), ...
