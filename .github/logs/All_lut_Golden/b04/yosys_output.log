
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b04.vhd

yosys> verific -vhdl b04.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b04.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b04.vhd:5: analyzing entity 'b04'
VERIFIC-INFO [VHDL-1010] b04.vhd:16: analyzing architecture 'behav'

yosys> synth_rs -top b04 -tech genesis -goal area -de -no_dsp -no_bram -verilog b04.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b04

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b04.vhd:5: processing 'b04(BEHAV)'
Importing module std_logic_arith.
Importing module standard.
Importing module b04.
Importing module TEXTIO.
Importing module std_logic_1164.

3.3.1. Analyzing design hierarchy..
Top module:  \b04

3.3.2. Analyzing design hierarchy..
Top module:  \b04
Removing unused module `\std_logic_1164'.
Removing unused module `\TEXTIO'.
Removing unused module `\standard'.
Removing unused module `\std_logic_arith'.
Removed 4 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~1 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~2 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 27 unused wires.
<suppressed ~23 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b04...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$stato_reg$b04.vhd:99$137 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RMIN_reg$b04.vhd:99$139 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RMAX_reg$b04.vhd:99$138 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RLAST_reg$b04.vhd:99$140 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG4_reg$b04.vhd:99$144 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG3_reg$b04.vhd:99$143 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG2_reg$b04.vhd:99$142 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG1_reg$b04.vhd:99$141 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$DATA_OUT_reg$b04.vhd:99$145 ($aldff) from module b04.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 9) from port B of cell b04.$verific$LessThan_20$b04.vhd:67$93 ($le).
Removed top 1 bits (of 8) from port A of cell b04.$verific$unary_minus_22$b04.vhd:70$94 ($neg).
Removed top 1 bits (of 9) from port B of cell b04.$verific$LessThan_38$b04.vhd:79$107 ($le).
Removed top 1 bits (of 8) from port A of cell b04.$verific$unary_minus_40$b04.vhd:82$108 ($neg).
Removed top 1 bits (of 9) from FF cell b04.$verific$DATA_OUT_reg$b04.vhd:99$145 ($adff).
Removed top 1 bits (of 8) from wire b04.$verific$n112$38.
Removed top 1 bits (of 8) from wire b04.$verific$n218$49.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b04:
  creating $macc model for $verific$add_14$b04.vhd:64$88 ($add).
  creating $macc model for $verific$add_25$b04.vhd:70$96 ($add).
  creating $macc model for $verific$add_32$b04.vhd:76$102 ($add).
  creating $macc model for $verific$add_43$b04.vhd:82$110 ($add).
  creating $macc model for $verific$unary_minus_22$b04.vhd:70$94 ($neg).
  creating $macc model for $verific$unary_minus_26$b04.vhd:70$99 ($neg).
  creating $macc model for $verific$unary_minus_40$b04.vhd:82$108 ($neg).
  creating $macc model for $verific$unary_minus_44$b04.vhd:82$113 ($neg).
  creating $alu model for $macc $verific$unary_minus_44$b04.vhd:82$113.
  creating $alu model for $macc $verific$unary_minus_40$b04.vhd:82$108.
  creating $alu model for $macc $verific$unary_minus_26$b04.vhd:70$99.
  creating $alu model for $macc $verific$unary_minus_22$b04.vhd:70$94.
  creating $alu model for $macc $verific$add_43$b04.vhd:82$110.
  creating $alu model for $macc $verific$add_32$b04.vhd:76$102.
  creating $alu model for $macc $verific$add_25$b04.vhd:70$96.
  creating $alu model for $macc $verific$add_14$b04.vhd:64$88.
  creating $alu model for $verific$LessThan_20$b04.vhd:67$93 ($le): new $alu
  creating $alu model for $verific$LessThan_38$b04.vhd:79$107 ($le): new $alu
  creating $alu model for $verific$LessThan_53$b04.vhd:88$120 ($lt): new $alu
  creating $alu model for $verific$LessThan_55$b04.vhd:90$121 ($lt): new $alu
  creating $alu cell for $verific$LessThan_55$b04.vhd:90$121: $auto$alumacc.cc:485:replace_alu$170
  creating $alu cell for $verific$LessThan_53$b04.vhd:88$120: $auto$alumacc.cc:485:replace_alu$181
  creating $alu cell for $verific$LessThan_38$b04.vhd:79$107: $auto$alumacc.cc:485:replace_alu$186
  creating $alu cell for $verific$LessThan_20$b04.vhd:67$93: $auto$alumacc.cc:485:replace_alu$199
  creating $alu cell for $verific$add_14$b04.vhd:64$88: $auto$alumacc.cc:485:replace_alu$212
  creating $alu cell for $verific$add_25$b04.vhd:70$96: $auto$alumacc.cc:485:replace_alu$215
  creating $alu cell for $verific$add_32$b04.vhd:76$102: $auto$alumacc.cc:485:replace_alu$218
  creating $alu cell for $verific$add_43$b04.vhd:82$110: $auto$alumacc.cc:485:replace_alu$221
  creating $alu cell for $verific$unary_minus_22$b04.vhd:70$94: $auto$alumacc.cc:485:replace_alu$224
  creating $alu cell for $verific$unary_minus_26$b04.vhd:70$99: $auto$alumacc.cc:485:replace_alu$227
  creating $alu cell for $verific$unary_minus_40$b04.vhd:82$108: $auto$alumacc.cc:485:replace_alu$230
  creating $alu cell for $verific$unary_minus_44$b04.vhd:82$113: $auto$alumacc.cc:485:replace_alu$233
  created 12 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 2 unused cells and 6 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> techmap

3.22. Executing TECHMAP pass (map to technology primitives).

3.22.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.22.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod$c9d98d2d0793a6d8797b9c088dbedb26a7be7121\_90_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$fd7bfb1a4f3a7c2ac1a35670d0fa64ccc7b91841\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
No more expansions possible.
<suppressed ~1150 debug messages>

yosys> opt

3.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~415 debug messages>

yosys> opt_merge -nomux

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~168 debug messages>
Removed a total of 56 cells.

yosys> opt_muxtree

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 86 unused cells and 492 unused wires.
<suppressed ~87 debug messages>

yosys> opt_expr

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.23.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$751 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$676 [8], Q = \DATA_OUT [7]).
Adding EN signal on $auto$ff.cc:262:slice$750 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$676 [6], Q = \DATA_OUT [6]).
Adding EN signal on $auto$ff.cc:262:slice$749 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$676 [5], Q = \DATA_OUT [5]).
Adding EN signal on $auto$ff.cc:262:slice$748 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$676 [4], Q = \DATA_OUT [4]).
Adding EN signal on $auto$ff.cc:262:slice$747 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$676 [3], Q = \DATA_OUT [3]).
Adding EN signal on $auto$ff.cc:262:slice$746 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$676 [2], Q = \DATA_OUT [2]).
Adding EN signal on $auto$ff.cc:262:slice$745 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$676 [1], Q = \DATA_OUT [1]).
Adding EN signal on $auto$ff.cc:262:slice$744 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$676 [0], Q = \DATA_OUT [0]).
Adding EN signal on $auto$ff.cc:262:slice$743 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$622 [7], Q = \REG4 [7]).
Adding EN signal on $auto$ff.cc:262:slice$742 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$622 [6], Q = \REG4 [6]).
Adding EN signal on $auto$ff.cc:262:slice$741 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$622 [5], Q = \REG4 [5]).
Adding EN signal on $auto$ff.cc:262:slice$740 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$622 [4], Q = \REG4 [4]).
Adding EN signal on $auto$ff.cc:262:slice$739 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$622 [3], Q = \REG4 [3]).
Adding EN signal on $auto$ff.cc:262:slice$738 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$622 [2], Q = \REG4 [2]).
Adding EN signal on $auto$ff.cc:262:slice$737 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$622 [1], Q = \REG4 [1]).
Adding EN signal on $auto$ff.cc:262:slice$736 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$622 [0], Q = \REG4 [0]).
Adding EN signal on $auto$ff.cc:262:slice$735 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$596 [7], Q = \REG3 [7]).
Adding EN signal on $auto$ff.cc:262:slice$734 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$596 [6], Q = \REG3 [6]).
Adding EN signal on $auto$ff.cc:262:slice$733 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$596 [5], Q = \REG3 [5]).
Adding EN signal on $auto$ff.cc:262:slice$732 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$596 [4], Q = \REG3 [4]).
Adding EN signal on $auto$ff.cc:262:slice$731 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$596 [3], Q = \REG3 [3]).
Adding EN signal on $auto$ff.cc:262:slice$730 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$596 [2], Q = \REG3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$729 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$596 [1], Q = \REG3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$728 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$596 [0], Q = \REG3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$727 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$570 [7], Q = \REG2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$726 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$570 [6], Q = \REG2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$725 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$570 [5], Q = \REG2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$724 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$570 [4], Q = \REG2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$723 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$570 [3], Q = \REG2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$722 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$570 [2], Q = \REG2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$721 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$570 [1], Q = \REG2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$720 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$570 [0], Q = \REG2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$719 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$544 [7], Q = \REG1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$718 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$544 [6], Q = \REG1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$717 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$544 [5], Q = \REG1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$716 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$544 [4], Q = \REG1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$715 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$544 [3], Q = \REG1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$714 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$544 [2], Q = \REG1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$713 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$544 [1], Q = \REG1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$712 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$544 [0], Q = \REG1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$711 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$648 [7], Q = \RLAST [7]).
Adding EN signal on $auto$ff.cc:262:slice$710 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$648 [6], Q = \RLAST [6]).
Adding EN signal on $auto$ff.cc:262:slice$709 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$648 [5], Q = \RLAST [5]).
Adding EN signal on $auto$ff.cc:262:slice$708 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$648 [4], Q = \RLAST [4]).
Adding EN signal on $auto$ff.cc:262:slice$707 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$648 [3], Q = \RLAST [3]).
Adding EN signal on $auto$ff.cc:262:slice$706 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$648 [2], Q = \RLAST [2]).
Adding EN signal on $auto$ff.cc:262:slice$705 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$648 [1], Q = \RLAST [1]).
Adding EN signal on $auto$ff.cc:262:slice$704 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$648 [0], Q = \RLAST [0]).
Adding EN signal on $auto$ff.cc:262:slice$703 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$518 [7], Q = \RMIN [7]).
Adding EN signal on $auto$ff.cc:262:slice$702 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$518 [6], Q = \RMIN [6]).
Adding EN signal on $auto$ff.cc:262:slice$701 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$518 [5], Q = \RMIN [5]).
Adding EN signal on $auto$ff.cc:262:slice$700 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$518 [4], Q = \RMIN [4]).
Adding EN signal on $auto$ff.cc:262:slice$699 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$518 [3], Q = \RMIN [3]).
Adding EN signal on $auto$ff.cc:262:slice$698 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$518 [2], Q = \RMIN [2]).
Adding EN signal on $auto$ff.cc:262:slice$697 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$518 [1], Q = \RMIN [1]).
Adding EN signal on $auto$ff.cc:262:slice$696 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$518 [0], Q = \RMIN [0]).
Adding EN signal on $auto$ff.cc:262:slice$695 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$492 [7], Q = \RMAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$694 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$492 [6], Q = \RMAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$693 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$492 [5], Q = \RMAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$692 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$492 [4], Q = \RMAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$691 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$492 [3], Q = \RMAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$690 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$492 [2], Q = \RMAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$689 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$492 [1], Q = \RMAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$688 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$492 [0], Q = \RMAX [0]).

yosys> opt_clean

3.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 104 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~208 debug messages>

3.23.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.23.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~705 debug messages>
Removed a total of 235 cells.

yosys> opt_dff

3.23.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 261 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.23.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.23.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.23.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.23.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.24. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~115 debug messages>

yosys> opt_merge

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.24.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

3.24.5. Finished fast OPT passes.

yosys> memory_map

3.25. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~49 debug messages>

yosys> opt_merge -nomux

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.26.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr -full

3.26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.26.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.27. Executing ABC pass (technology mapping using ABC).

3.27.1. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Extracted 458 gates and 528 wires to a netlist network with 69 inputs and 52 outputs.

3.27.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/b04/abc_tmp.scr 
ABC:   #Luts =   143  Max Lvl =  12  Avg Lvl =   2.56  [   0.66 sec. at Pass 0]
ABC:   #Luts =    75  Max Lvl =   5  Avg Lvl =   1.46  [   4.61 sec. at Pass 1]
ABC:   #Luts =    75  Max Lvl =   5  Avg Lvl =   1.46  [   0.42 sec. at Pass 2]
ABC:   #Luts =    75  Max Lvl =   5  Avg Lvl =   1.46  [   1.61 sec. at Pass 3]
ABC:   #Luts =    75  Max Lvl =   5  Avg Lvl =   1.46  [   0.60 sec. at Pass 4]
ABC:   #Luts =    75  Max Lvl =   5  Avg Lvl =   1.46  [   1.48 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.27.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       76
ABC RESULTS:        internal signals:      407
ABC RESULTS:           input signals:       69
ABC RESULTS:          output signals:       52
Removing temp directory.

yosys> opt

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 247 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.28.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.28.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.29. Printing statistics.

=== b04 ===

   Number of wires:                 91
   Number of wire bits:            155
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                142
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      2
     $lut                           76


yosys> shregmap -minlen 8 -maxlen 20

3.30. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.31. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.32. Printing statistics.

=== b04 ===

   Number of wires:                 91
   Number of wire bits:            155
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                142
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      2
     $lut                           76


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.33. Executing TECHMAP pass (map to technology primitives).

3.33.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.33.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~336 debug messages>

yosys> opt_expr -mux_undef

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~1085 debug messages>

yosys> simplemap

3.35. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~885 debug messages>
Removed a total of 295 cells.

yosys> opt_dff -nodffe -nosdff

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 544 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~22 debug messages>

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Extracted 298 gates and 370 wires to a netlist network with 70 inputs and 53 outputs.

3.41.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/b04/abc_tmp.scr 
ABC:   #Luts =    75  Max Lvl =   6  Avg Lvl =   1.45  [   0.29 sec. at Pass 0]
ABC:   #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   1.24 sec. at Pass 1]
ABC:   #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   0.71 sec. at Pass 2]
ABC:   #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   0.90 sec. at Pass 3]
ABC:   #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   0.58 sec. at Pass 4]
ABC:   #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   0.89 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       77
ABC RESULTS:        internal signals:      247
ABC RESULTS:           input signals:       70
ABC RESULTS:          output signals:       53
Removing temp directory.

yosys> opt

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 266 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \b04

3.43.2. Analyzing design hierarchy..
Top module:  \b04
Removed 0 unused modules.

yosys> stat

3.44. Printing statistics.

=== b04 ===

   Number of wires:                 92
   Number of wire bits:            156
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                143
     $lut                           77
     dffsre                         66


yosys> opt_clean -purge

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> write_verilog -noattr -nohex b04.verilog

3.46. Executing Verilog backend.

yosys> bmuxmap

3.46.1. Executing BMUXMAP pass.

yosys> demuxmap

3.46.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b04'.

End of script. Logfile hash: 640b059e7f, CPU: user 2.23s system 0.02s, MEM: 23.84 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 89% 2x abc (18 sec), 3% 35x opt_expr (0 sec), ...
real 23.88
user 17.99
sys 3.10
