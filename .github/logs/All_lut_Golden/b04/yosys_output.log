
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b04.vhd

yosys> verific -vhdl b04.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b04.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b04.vhd:5: analyzing entity 'b04'
VERIFIC-INFO [VHDL-1010] b04.vhd:16: analyzing architecture 'behav'

yosys> synth_rs -top b04 -tech genesis -goal area -no_dsp -no_bram -verilog b04.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b04

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b04.vhd:5: processing 'b04(BEHAV)'
Importing module b04.
Importing module standard.
Importing module std_logic_arith.
Importing module TEXTIO.
Importing module std_logic_1164.

3.3.1. Analyzing design hierarchy..
Top module:  \b04

3.3.2. Analyzing design hierarchy..
Top module:  \b04
Removing unused module `\std_logic_1164'.
Removing unused module `\TEXTIO'.
Removing unused module `\std_logic_arith'.
Removing unused module `\standard'.
Removed 4 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~1 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~2 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 27 unused wires.
<suppressed ~23 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b04...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$stato_reg$b04.vhd:99$121 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RMIN_reg$b04.vhd:99$123 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RMAX_reg$b04.vhd:99$122 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RLAST_reg$b04.vhd:99$124 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG4_reg$b04.vhd:99$128 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG3_reg$b04.vhd:99$127 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG2_reg$b04.vhd:99$126 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG1_reg$b04.vhd:99$125 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$DATA_OUT_reg$b04.vhd:99$129 ($aldff) from module b04.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 9) from port B of cell b04.$verific$LessThan_20$b04.vhd:67$77 ($le).
Removed top 1 bits (of 8) from port A of cell b04.$verific$unary_minus_22$b04.vhd:70$78 ($neg).
Removed top 1 bits (of 9) from port B of cell b04.$verific$LessThan_38$b04.vhd:79$91 ($le).
Removed top 1 bits (of 8) from port A of cell b04.$verific$unary_minus_40$b04.vhd:82$92 ($neg).
Removed top 1 bits (of 9) from FF cell b04.$verific$DATA_OUT_reg$b04.vhd:99$129 ($adff).
Removed top 1 bits (of 8) from wire b04.$verific$n112$22.
Removed top 1 bits (of 8) from wire b04.$verific$n218$33.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> techmap

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.18.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $xor.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=7:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=7:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=7:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $and.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=7:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=7:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=7:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=7:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=8:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=8:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=8:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$c9d98d2d0793a6d8797b9c088dbedb26a7be7121\_90_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using template $paramod$fd7bfb1a4f3a7c2ac1a35670d0fa64ccc7b91841\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
No more expansions possible.
<suppressed ~1269 debug messages>

yosys> alumacc

3.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b04:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.20. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~439 debug messages>

yosys> opt_merge -nomux

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~132 debug messages>
Removed a total of 44 cells.

yosys> opt_muxtree

3.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 89 unused cells and 525 unused wires.
<suppressed ~90 debug messages>

yosys> opt_expr

3.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.20.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$637 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [8], Q = \DATA_OUT [7]).
Adding EN signal on $auto$ff.cc:262:slice$636 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [6], Q = \DATA_OUT [6]).
Adding EN signal on $auto$ff.cc:262:slice$635 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [5], Q = \DATA_OUT [5]).
Adding EN signal on $auto$ff.cc:262:slice$634 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [4], Q = \DATA_OUT [4]).
Adding EN signal on $auto$ff.cc:262:slice$633 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [3], Q = \DATA_OUT [3]).
Adding EN signal on $auto$ff.cc:262:slice$632 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [2], Q = \DATA_OUT [2]).
Adding EN signal on $auto$ff.cc:262:slice$631 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [1], Q = \DATA_OUT [1]).
Adding EN signal on $auto$ff.cc:262:slice$630 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$562 [0], Q = \DATA_OUT [0]).
Adding EN signal on $auto$ff.cc:262:slice$629 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$508 [7], Q = \REG4 [7]).
Adding EN signal on $auto$ff.cc:262:slice$628 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$508 [6], Q = \REG4 [6]).
Adding EN signal on $auto$ff.cc:262:slice$627 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$508 [5], Q = \REG4 [5]).
Adding EN signal on $auto$ff.cc:262:slice$626 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$508 [4], Q = \REG4 [4]).
Adding EN signal on $auto$ff.cc:262:slice$625 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$508 [3], Q = \REG4 [3]).
Adding EN signal on $auto$ff.cc:262:slice$624 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$508 [2], Q = \REG4 [2]).
Adding EN signal on $auto$ff.cc:262:slice$623 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$508 [1], Q = \REG4 [1]).
Adding EN signal on $auto$ff.cc:262:slice$622 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$508 [0], Q = \REG4 [0]).
Adding EN signal on $auto$ff.cc:262:slice$621 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$482 [7], Q = \REG3 [7]).
Adding EN signal on $auto$ff.cc:262:slice$620 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$482 [6], Q = \REG3 [6]).
Adding EN signal on $auto$ff.cc:262:slice$619 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$482 [5], Q = \REG3 [5]).
Adding EN signal on $auto$ff.cc:262:slice$618 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$482 [4], Q = \REG3 [4]).
Adding EN signal on $auto$ff.cc:262:slice$617 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$482 [3], Q = \REG3 [3]).
Adding EN signal on $auto$ff.cc:262:slice$616 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$482 [2], Q = \REG3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$615 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$482 [1], Q = \REG3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$614 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$482 [0], Q = \REG3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$613 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$456 [7], Q = \REG2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$612 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$456 [6], Q = \REG2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$611 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$456 [5], Q = \REG2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$610 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$456 [4], Q = \REG2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$609 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$456 [3], Q = \REG2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$608 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$456 [2], Q = \REG2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$607 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$456 [1], Q = \REG2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$606 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$456 [0], Q = \REG2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$605 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$430 [7], Q = \REG1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$604 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$430 [6], Q = \REG1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$603 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$430 [5], Q = \REG1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$602 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$430 [4], Q = \REG1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$601 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$430 [3], Q = \REG1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$600 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$430 [2], Q = \REG1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$599 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$430 [1], Q = \REG1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$598 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$430 [0], Q = \REG1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$597 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$534 [7], Q = \RLAST [7]).
Adding EN signal on $auto$ff.cc:262:slice$596 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$534 [6], Q = \RLAST [6]).
Adding EN signal on $auto$ff.cc:262:slice$595 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$534 [5], Q = \RLAST [5]).
Adding EN signal on $auto$ff.cc:262:slice$594 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$534 [4], Q = \RLAST [4]).
Adding EN signal on $auto$ff.cc:262:slice$593 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$534 [3], Q = \RLAST [3]).
Adding EN signal on $auto$ff.cc:262:slice$592 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$534 [2], Q = \RLAST [2]).
Adding EN signal on $auto$ff.cc:262:slice$591 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$534 [1], Q = \RLAST [1]).
Adding EN signal on $auto$ff.cc:262:slice$590 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$534 [0], Q = \RLAST [0]).
Adding EN signal on $auto$ff.cc:262:slice$589 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$404 [7], Q = \RMIN [7]).
Adding EN signal on $auto$ff.cc:262:slice$588 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$404 [6], Q = \RMIN [6]).
Adding EN signal on $auto$ff.cc:262:slice$587 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$404 [5], Q = \RMIN [5]).
Adding EN signal on $auto$ff.cc:262:slice$586 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$404 [4], Q = \RMIN [4]).
Adding EN signal on $auto$ff.cc:262:slice$585 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$404 [3], Q = \RMIN [3]).
Adding EN signal on $auto$ff.cc:262:slice$584 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$404 [2], Q = \RMIN [2]).
Adding EN signal on $auto$ff.cc:262:slice$583 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$404 [1], Q = \RMIN [1]).
Adding EN signal on $auto$ff.cc:262:slice$582 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$404 [0], Q = \RMIN [0]).
Adding EN signal on $auto$ff.cc:262:slice$581 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$378 [7], Q = \RMAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$580 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$378 [6], Q = \RMAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$579 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$378 [5], Q = \RMAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$578 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$378 [4], Q = \RMAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$577 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$378 [3], Q = \RMAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$576 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$378 [2], Q = \RMAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$575 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$378 [1], Q = \RMAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$574 ($_DFF_PP0_) from module b04 (D = $auto$simplemap.cc:309:simplemap_bmux$378 [0], Q = \RMAX [0]).

yosys> opt_clean

3.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 104 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~208 debug messages>

3.20.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~705 debug messages>
Removed a total of 235 cells.

yosys> opt_dff

3.20.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 260 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.20.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.20.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.20.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.20.30. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> stat

3.23. Printing statistics.

=== b04 ===

   Number of wires:                206
   Number of wire bits:            811
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                642
     $_AND_                        157
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      2
     $_MUX_                        213
     $_NOT_                         58
     $_OR_                          60
     $_XOR_                         88


yosys> shregmap -minlen 8 -maxlen 20

3.24. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.25. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.26. Printing statistics.

=== b04 ===

   Number of wires:                206
   Number of wire bits:            811
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                642
     $_AND_                        157
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      2
     $_MUX_                        213
     $_NOT_                         58
     $_OR_                          60
     $_XOR_                         88


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.27. Executing TECHMAP pass (map to technology primitives).

3.27.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.27.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.27.3. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~260 debug messages>

yosys> opt_expr -mux_undef

3.28. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~115 debug messages>

yosys> simplemap

3.29. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge

3.31. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~195 debug messages>
Removed a total of 65 cells.

yosys> opt_dff -nodffe -nosdff

3.32. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 406 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.34.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~49 debug messages>

yosys> opt_merge

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.35.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

3.35.5. Finished fast OPT passes.

yosys> memory_map

3.36. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.37. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.37.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.37.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.37.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.37.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.37.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr -full

3.37.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.37.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.38. Executing TECHMAP pass (map to technology primitives).

3.38.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.38.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.39.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.40. Executing ABC pass (technology mapping using ABC).

3.40.1. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Extracted 461 gates and 532 wires to a netlist network with 70 inputs and 53 outputs.

3.40.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/yosys_verific_rs/result_18-03-2022T17-26-14/All_lut_synth_rs_area.json/b04/abc_tmp.scr 
ABC: netlist  : i/o =     70/     53  and =     373  lev =   22 (3.79)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     80  edge =     278  lev =    6 (1.57)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     385  lev =   21 (3.81)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     76  edge =     272  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     396  lev =   21 (3.79)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     273  lev =    5 (1.38)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     349  lev =   21 (3.62)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     272  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     395  lev =   21 (3.75)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     76  edge =     275  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     394  lev =   20 (3.70)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     76  edge =     274  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     397  lev =   20 (3.72)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     272  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     397  lev =   20 (3.72)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     272  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     351  lev =   17 (3.34)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     76  edge =     273  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     397  lev =   20 (3.72)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     272  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     397  lev =   20 (3.72)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     272  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     397  lev =   20 (3.72)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     272  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     397  lev =   20 (3.72)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     272  lev =    5 (1.45)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     396  lev =   21 (3.79)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     273  lev =    5 (1.38)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     396  lev =   21 (3.79)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     273  lev =    5 (1.38)  mem = 0.00 MB
ABC: netlist  : i/o =     70/     53  and =     397  lev =   22 (3.81)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     75  edge =     273  lev =    5 (1.38)  mem = 0.00 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       77
ABC RESULTS:        internal signals:      409
ABC RESULTS:           input signals:       70
ABC RESULTS:          output signals:       53
Removing temp directory.

yosys> opt

3.41. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.41.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.41.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 249 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.41.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.41.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.41.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.41.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.41.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

3.41.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.42. Executing HIERARCHY pass (managing design hierarchy).

3.42.1. Analyzing design hierarchy..
Top module:  \b04

3.42.2. Analyzing design hierarchy..
Top module:  \b04
Removed 0 unused modules.

yosys> stat

3.43. Printing statistics.

=== b04 ===

   Number of wires:                 92
   Number of wire bits:            156
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                143
     $lut                           77
     dffsre                         66


yosys> opt_clean -purge

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> write_verilog -noattr -nohex b04.verilog

3.45. Executing Verilog backend.

yosys> bmuxmap

3.45.1. Executing BMUXMAP pass.

yosys> demuxmap

3.45.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b04'.

End of script. Logfile hash: 8d7a66c3d3, CPU: user 1.33s system 0.02s, MEM: 23.56 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 41% 1x abc (0 sec), 19% 30x opt_expr (0 sec), ...
real 2.29
user 2.03
sys 0.25
