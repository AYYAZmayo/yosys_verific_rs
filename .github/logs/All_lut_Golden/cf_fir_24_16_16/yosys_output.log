
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k cf_fir_24_16_16.v

yosys> verific -vlog2k cf_fir_24_16_16.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cf_fir_24_16_16.v'

yosys> synth_rs -top top -tech genesis -goal area -no_dsp -no_bram -verilog top.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:92: compiling module 'top'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:127: compiling module 'cf_fir_24_16_16_1'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:166: compiling module 'cf_fir_24_16_16_2'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1793: compiling module 'cf_fir_24_16_16_24'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1898: compiling module 'cf_fir_24_16_16_25'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1982: compiling module 'cf_fir_24_16_16_26'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1170: compiling module 'cf_fir_24_16_16_18'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1324: compiling module 'cf_fir_24_16_16_19'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1458: compiling module 'cf_fir_24_16_16_20'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1572: compiling module 'cf_fir_24_16_16_21'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1666: compiling module 'cf_fir_24_16_16_22'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1740: compiling module 'cf_fir_24_16_16_23'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:276: compiling module 'cf_fir_24_16_16_3'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:745: compiling module 'cf_fir_24_16_16_12'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:842: compiling module 'cf_fir_24_16_16_13'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:929: compiling module 'cf_fir_24_16_16_14'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1006: compiling module 'cf_fir_24_16_16_15'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1073: compiling module 'cf_fir_24_16_16_16'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1130: compiling module 'cf_fir_24_16_16_17'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:344: compiling module 'cf_fir_24_16_16_4'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:581: compiling module 'cf_fir_24_16_16_9'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:648: compiling module 'cf_fir_24_16_16_10'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:705: compiling module 'cf_fir_24_16_16_11'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:394: compiling module 'cf_fir_24_16_16_5'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:534: compiling module 'cf_fir_24_16_16_8'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:437: compiling module 'cf_fir_24_16_16_6'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:494: compiling module 'cf_fir_24_16_16_7'
Importing module top.
Importing module cf_fir_24_16_16_1.
Importing module cf_fir_24_16_16_2.
Importing module cf_fir_24_16_16_24.
Importing module cf_fir_24_16_16_25.
Importing module cf_fir_24_16_16_26.
Importing module cf_fir_24_16_16_18.
Importing module cf_fir_24_16_16_3.
Importing module cf_fir_24_16_16_19.
Importing module cf_fir_24_16_16_20.
Importing module cf_fir_24_16_16_21.
Importing module cf_fir_24_16_16_22.
Importing module cf_fir_24_16_16_23.
Importing module cf_fir_24_16_16_12.
Importing module cf_fir_24_16_16_4.
Importing module cf_fir_24_16_16_13.
Importing module cf_fir_24_16_16_14.
Importing module cf_fir_24_16_16_15.
Importing module cf_fir_24_16_16_16.
Importing module cf_fir_24_16_16_17.
Importing module cf_fir_24_16_16_9.
Importing module cf_fir_24_16_16_5.
Importing module cf_fir_24_16_16_10.
Importing module cf_fir_24_16_16_11.
Importing module cf_fir_24_16_16_8.
Importing module cf_fir_24_16_16_6.
Importing module cf_fir_24_16_16_7.

3.3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \cf_fir_24_16_16_1
Used module:         \cf_fir_24_16_16_2
Used module:             \cf_fir_24_16_16_3
Used module:                 \cf_fir_24_16_16_4
Used module:                     \cf_fir_24_16_16_5
Used module:                         \cf_fir_24_16_16_6
Used module:                             \cf_fir_24_16_16_7
Used module:                         \cf_fir_24_16_16_8
Used module:                     \cf_fir_24_16_16_9
Used module:                         \cf_fir_24_16_16_10
Used module:                             \cf_fir_24_16_16_11
Used module:                 \cf_fir_24_16_16_12
Used module:                     \cf_fir_24_16_16_13
Used module:                         \cf_fir_24_16_16_14
Used module:                             \cf_fir_24_16_16_15
Used module:                                 \cf_fir_24_16_16_16
Used module:                                     \cf_fir_24_16_16_17
Used module:             \cf_fir_24_16_16_18
Used module:                 \cf_fir_24_16_16_19
Used module:                     \cf_fir_24_16_16_20
Used module:                         \cf_fir_24_16_16_21
Used module:                             \cf_fir_24_16_16_22
Used module:                                 \cf_fir_24_16_16_23
Used module:             \cf_fir_24_16_16_24
Used module:                 \cf_fir_24_16_16_25
Used module:                     \cf_fir_24_16_16_26

3.3.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \cf_fir_24_16_16_1
Used module:         \cf_fir_24_16_16_2
Used module:             \cf_fir_24_16_16_3
Used module:                 \cf_fir_24_16_16_4
Used module:                     \cf_fir_24_16_16_5
Used module:                         \cf_fir_24_16_16_6
Used module:                             \cf_fir_24_16_16_7
Used module:                         \cf_fir_24_16_16_8
Used module:                     \cf_fir_24_16_16_9
Used module:                         \cf_fir_24_16_16_10
Used module:                             \cf_fir_24_16_16_11
Used module:                 \cf_fir_24_16_16_12
Used module:                     \cf_fir_24_16_16_13
Used module:                         \cf_fir_24_16_16_14
Used module:                             \cf_fir_24_16_16_15
Used module:                                 \cf_fir_24_16_16_16
Used module:                                     \cf_fir_24_16_16_17
Used module:             \cf_fir_24_16_16_18
Used module:                 \cf_fir_24_16_16_19
Used module:                     \cf_fir_24_16_16_20
Used module:                         \cf_fir_24_16_16_21
Used module:                             \cf_fir_24_16_16_22
Used module:                                 \cf_fir_24_16_16_23
Used module:             \cf_fir_24_16_16_24
Used module:                 \cf_fir_24_16_16_25
Used module:                     \cf_fir_24_16_16_26
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16_7.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_6.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_8.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_11.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_10.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_5.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_9.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_17.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_16.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_15.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_14.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_13.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_4.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_12.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_23.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_22.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_21.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_20.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_19.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_3.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_18.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_26.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_25.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_24.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_2.
<suppressed ~2 debug messages>
Optimizing module cf_fir_24_16_16_1.
Optimizing module top.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module cf_fir_24_16_16_7.
Deleting now unused module cf_fir_24_16_16_6.
Deleting now unused module cf_fir_24_16_16_8.
Deleting now unused module cf_fir_24_16_16_11.
Deleting now unused module cf_fir_24_16_16_10.
Deleting now unused module cf_fir_24_16_16_5.
Deleting now unused module cf_fir_24_16_16_9.
Deleting now unused module cf_fir_24_16_16_17.
Deleting now unused module cf_fir_24_16_16_16.
Deleting now unused module cf_fir_24_16_16_15.
Deleting now unused module cf_fir_24_16_16_14.
Deleting now unused module cf_fir_24_16_16_13.
Deleting now unused module cf_fir_24_16_16_4.
Deleting now unused module cf_fir_24_16_16_12.
Deleting now unused module cf_fir_24_16_16_23.
Deleting now unused module cf_fir_24_16_16_22.
Deleting now unused module cf_fir_24_16_16_21.
Deleting now unused module cf_fir_24_16_16_20.
Deleting now unused module cf_fir_24_16_16_19.
Deleting now unused module cf_fir_24_16_16_3.
Deleting now unused module cf_fir_24_16_16_18.
Deleting now unused module cf_fir_24_16_16_26.
Deleting now unused module cf_fir_24_16_16_25.
Deleting now unused module cf_fir_24_16_16_24.
Deleting now unused module cf_fir_24_16_16_2.
Deleting now unused module cf_fir_24_16_16_1.
<suppressed ~26 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 14661 unused wires.
<suppressed ~437 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~129 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:527$15599 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n6_reg$cf_fir_24_16_16.v:527$15598 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n4_reg$cf_fir_24_16_16.v:2037$4321 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:481$15386 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$n12_reg$cf_fir_24_16_16.v:481$15387 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n5_reg$cf_fir_24_16_16.v:2037$4322 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:2037$4323 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:571$15350 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:571$15351 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n4_reg$cf_fir_24_16_16.v:1872$3762 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n3_reg$cf_fir_24_16_16.v:1872$3761 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n2_reg$cf_fir_24_16_16.v:1872$3760 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n1_reg$cf_fir_24_16_16.v:1872$3759 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:431$14487 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n6_reg$cf_fir_24_16_16.v:1872$3764 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n5_reg$cf_fir_24_16_16.v:1872$3763 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:738$15319 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:738$15318 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n5_reg$cf_fir_24_16_16.v:268$957 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n3_reg$cf_fir_24_16_16.v:268$956 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$n6_reg$cf_fir_24_16_16.v:692$15111 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$n12_reg$cf_fir_24_16_16.v:692$15112 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n2_reg$cf_fir_24_16_16.v:268$955 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n1_reg$cf_fir_24_16_16.v:268$954 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:633$14081 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:633$14082 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n8_reg$cf_fir_24_16_16.v:2037$4325 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n7_reg$cf_fir_24_16_16.v:2037$4324 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:388$11186 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:1163$14050 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1163$14049 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n1_reg$cf_fir_24_16_16.v:1963$4095 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1117$13847 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1117$13848 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1058$13448 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1058$13449 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n3_reg$cf_fir_24_16_16.v:1963$4097 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n2_reg$cf_fir_24_16_16.v:1963$4096 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n5_reg$cf_fir_24_16_16.v:1963$4099 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n4_reg$cf_fir_24_16_16.v:1963$4098 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:989$12853 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:989$12854 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.$verific$n6_reg$cf_fir_24_16_16.v:910$12062 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.$verific$n12_reg$cf_fir_24_16_16.v:910$12063 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n7_reg$cf_fir_24_16_16.v:1963$4101 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n6_reg$cf_fir_24_16_16.v:1963$4100 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n2_reg$cf_fir_24_16_16.v:2037$4319 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:821$10203 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:821$10204 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n3_reg$cf_fir_24_16_16.v:2037$4320 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n7_reg$cf_fir_24_16_16.v:1872$3765 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.$verific$n6_reg$cf_fir_24_16_16.v:338$5709 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n1_reg$cf_fir_24_16_16.v:2037$4318 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1783$10166 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1783$10165 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1783$10164 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1783$10163 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1549$8447 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1549$8446 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1725$9853 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1725$9852 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1725$9851 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1725$9850 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1549$8445 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1549$8444 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1431$7352 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1431$7351 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1431$7354 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1431$7353 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1647$9280 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1647$9279 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1647$9278 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1647$9277 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n8_reg$cf_fir_24_16_16.v:1293$4373 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n6_reg$cf_fir_24_16_16.v:1293$4372 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n4_reg$cf_fir_24_16_16.v:1293$4371 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n2_reg$cf_fir_24_16_16.v:1293$4370 ($aldff) from module top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 129 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n8_reg$cf_fir_24_16_16.v:2037$4325 ($dff) from module top (D = \s1.s3.s6.s8.s8.n7, Q = \s1.s3.s6.s8.s8.n8, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n7_reg$cf_fir_24_16_16.v:2037$4324 ($dff) from module top (D = \s1.s3.s6.s8.s8.n6, Q = \s1.s3.s6.s8.s8.n7, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:2037$4323 ($dff) from module top (D = \s1.s3.s6.s8.s8.n5, Q = \s1.s3.s6.s8.s8.n6, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n5_reg$cf_fir_24_16_16.v:2037$4322 ($dff) from module top (D = \s1.s3.s6.s8.s8.n4, Q = \s1.s3.s6.s8.s8.n5, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n4_reg$cf_fir_24_16_16.v:2037$4321 ($dff) from module top (D = \s1.s3.s6.s8.s8.n3, Q = \s1.s3.s6.s8.s8.n4, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n3_reg$cf_fir_24_16_16.v:2037$4320 ($dff) from module top (D = \s1.s3.s6.s8.s8.n2, Q = \s1.s3.s6.s8.s8.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n2_reg$cf_fir_24_16_16.v:2037$4319 ($dff) from module top (D = \s1.s3.s6.s8.s8.n1, Q = \s1.s3.s6.s8.s8.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n1_reg$cf_fir_24_16_16.v:2037$4318 ($dff) from module top (D = \s1.s3.s6.s8.n7, Q = \s1.s3.s6.s8.s8.n1, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n7_reg$cf_fir_24_16_16.v:1963$4101 ($dff) from module top (D = \s1.s3.s6.s8.n6, Q = \s1.s3.s6.s8.n7, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n6_reg$cf_fir_24_16_16.v:1963$4100 ($dff) from module top (D = \s1.s3.s6.s8.n5, Q = \s1.s3.s6.s8.n6, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n5_reg$cf_fir_24_16_16.v:1963$4099 ($dff) from module top (D = \s1.s3.s6.s8.n4, Q = \s1.s3.s6.s8.n5, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n4_reg$cf_fir_24_16_16.v:1963$4098 ($dff) from module top (D = \s1.s3.s6.s8.n3, Q = \s1.s3.s6.s8.n4, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n3_reg$cf_fir_24_16_16.v:1963$4097 ($dff) from module top (D = \s1.s3.s6.s8.n2, Q = \s1.s3.s6.s8.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n2_reg$cf_fir_24_16_16.v:1963$4096 ($dff) from module top (D = \s1.s3.s6.s8.n1, Q = \s1.s3.s6.s8.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n1_reg$cf_fir_24_16_16.v:1963$4095 ($dff) from module top (D = \s1.s3.s6.n7, Q = \s1.s3.s6.s8.n1, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n7_reg$cf_fir_24_16_16.v:1872$3765 ($dff) from module top (D = \s1.s3.s6.n6, Q = \s1.s3.s6.n7, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n6_reg$cf_fir_24_16_16.v:1872$3764 ($dff) from module top (D = \s1.s3.s6.n5, Q = \s1.s3.s6.n6, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n5_reg$cf_fir_24_16_16.v:1872$3763 ($dff) from module top (D = \s1.s3.s6.n4, Q = \s1.s3.s6.n5, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n4_reg$cf_fir_24_16_16.v:1872$3762 ($dff) from module top (D = \s1.s3.s6.n3, Q = \s1.s3.s6.n4, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n3_reg$cf_fir_24_16_16.v:1872$3761 ($dff) from module top (D = \s1.s3.s6.n2, Q = \s1.s3.s6.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n2_reg$cf_fir_24_16_16.v:1872$3760 ($dff) from module top (D = \s1.s3.s6.n1, Q = \s1.s3.s6.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n1_reg$cf_fir_24_16_16.v:1872$3759 ($dff) from module top (D = \s1.s3.n3, Q = \s1.s3.s6.n1, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.$verific$n3_reg$cf_fir_24_16_16.v:268$956 ($dff) from module top (D = \s1.s3.n2, Q = \s1.s3.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.$verific$n2_reg$cf_fir_24_16_16.v:268$955 ($dff) from module top (D = \s1.s3.n1, Q = \s1.s3.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.$verific$n1_reg$cf_fir_24_16_16.v:268$954 ($dff) from module top (D = \data_i, Q = \s1.s3.n1, rval = 16'0000000000000000).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 25 unused cells and 25 unused wires.
<suppressed ~26 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 34) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:738$15319 ($dff).
Removed top 2 bits (of 35) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:527$15599 ($dff).
Removed top 1 bits (of 33) from FF cell top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:1163$14050 ($dff).
Removed top 1 bits (of 33) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:738$15319 ($dff).
Removed top 1 bits (of 33) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:527$15599 ($dff).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> techmap

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.18.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dff.
Running "alumacc" on wrapper $extern:wrap:$mul:A_SIGNED=0:A_WIDTH=16:B_SIGNED=0:B_WIDTH=16:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$mul:A_SIGNED=0:A_WIDTH=16:B_SIGNED=0:B_WIDTH=16:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$mul:A_SIGNED=0:A_WIDTH=16:B_SIGNED=0:B_WIDTH=16:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=34:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=34:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=34:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=35:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=35:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=35:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=36:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=36:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=36:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=37:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=37:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=37:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=33:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=33:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=33:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper maccmap for cells of type $macc.
  add \k2_i * \s1.s3.n3 (16x16 bits, unsigned)
  add \k3_i * \s1.s3.s6.n1 (16x16 bits, unsigned)
  add \k4_i * \s1.s3.s6.n2 (16x16 bits, unsigned)
  add \k5_i * \s1.s3.s6.n3 (16x16 bits, unsigned)
  add \k10_i * \s1.s3.s6.s8.n1 (16x16 bits, unsigned)
  add \k11_i * \s1.s3.s6.s8.n2 (16x16 bits, unsigned)
  add \k12_i * \s1.s3.s6.s8.n3 (16x16 bits, unsigned)
  add \k13_i * \s1.s3.s6.s8.n4 (16x16 bits, unsigned)
  add \k18_i * \s1.s3.s6.s8.s8.n2 (16x16 bits, unsigned)
  add \k19_i * \s1.s3.s6.s8.s8.n3 (16x16 bits, unsigned)
  add \k20_i * \s1.s3.s6.s8.s8.n4 (16x16 bits, unsigned)
  add \k21_i * \s1.s3.s6.s8.s8.n5 (16x16 bits, unsigned)
  add \k24_i * \s1.s3.s6.s8.s8.n8 (16x16 bits, unsigned)
  add \k23_i * \s1.s3.s6.s8.s8.n7 (16x16 bits, unsigned)
  add \k22_i * \s1.s3.s6.s8.s8.n6 (16x16 bits, unsigned)
  add \k17_i * \s1.s3.s6.s8.s8.n1 (16x16 bits, unsigned)
  add \k16_i * \s1.s3.s6.s8.n7 (16x16 bits, unsigned)
  add \k15_i * \s1.s3.s6.s8.n6 (16x16 bits, unsigned)
  add \k14_i * \s1.s3.s6.s8.n5 (16x16 bits, unsigned)
  add \k9_i * \s1.s3.s6.n7 (16x16 bits, unsigned)
  add \k8_i * \s1.s3.s6.n6 (16x16 bits, unsigned)
  add \k7_i * \s1.s3.s6.n5 (16x16 bits, unsigned)
  add \k6_i * \s1.s3.s6.n4 (16x16 bits, unsigned)
Using template $paramod$cc6a978c1b57cdb49efcec348c88d8e28bf1a01f\_90_alu for cells of type $alu.
Using template $paramod$7fa6970f0c97644a990ba1d0dcc56c6042128be7\_90_alu for cells of type $alu.
Using template $paramod$9fb24bf0faa43f804d3c379242188667e42c235c\_90_alu for cells of type $alu.
Using template $paramod$46bb7404051772a584cf91a8bfdc4832ffc1d8ba\_90_alu for cells of type $alu.
Using template $paramod$dbef6e48cd28208af1b77a9bd7dfc80580f16131\_90_alu for cells of type $alu.
  add \k1_i * \s1.s3.n2 (16x16 bits, unsigned)
  add \k0_i * \s1.s3.n1 (16x16 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100010 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100001 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~11622 debug messages>

yosys> alumacc

3.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.20. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~36671 debug messages>

yosys> opt_merge -nomux

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~225 debug messages>
Removed a total of 75 cells.

yosys> opt_muxtree

3.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2066 unused cells and 5433 unused wires.
<suppressed ~2067 debug messages>

yosys> opt_expr

3.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.20.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.20.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> stat

3.23. Printing statistics.

=== top ===

   Number of wires:               8312
   Number of wire bits:         104635
   Number of public wires:        1110
   Number of public wire bits:   26088
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              47321
     $_AND_                      23188
     $_DFF_P_                     1710
     $_OR_                        7396
     $_SDFF_PP0_                   400
     $_XOR_                      14627


yosys> shregmap -minlen 8 -maxlen 20

3.24. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.25. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.26. Printing statistics.

=== top ===

   Number of wires:               8712
   Number of wire bits:         105035
   Number of public wires:        1110
   Number of public wire bits:   26088
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              47721
     $_AND_                      23188
     $_DFF_P_                     2110
     $_MUX_                        400
     $_OR_                        7396
     $_XOR_                      14627


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.27. Executing TECHMAP pass (map to technology primitives).

3.27.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.27.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.27.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~2238 debug messages>

yosys> opt_expr -mux_undef

3.28. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> simplemap

3.29. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.31. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.32. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6330 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.34.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.35.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.35.5. Finished fast OPT passes.

yosys> memory_map

3.36. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.37. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.37.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.37.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.37.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.37.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.37.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr -full

3.37.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.37.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.38. Executing TECHMAP pass (map to technology primitives).

3.38.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.38.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.39.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.40. Executing ABC pass (technology mapping using ABC).

3.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 45611 gates and 48006 wires to a netlist network with 2394 inputs and 2014 outputs.

3.40.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/yosys_verific_rs/result_18-03-2022T17-26-14/All_lut_synth_rs_area.json/cf_fir_24_16_16/abc_tmp.scr 
ABC: netlist  : i/o =   2394/   2014  and =  125105  lev =   68 (29.56)  mem = 1.55 MB
ABC: Mapping (K=6)  :  lut =  16191  edge =   62686  lev =   19 (8.79)  mem = 0.86 MB
ABC: netlist  : i/o =   2394/   2014  and =  131286  lev =   78 (31.18)  mem = 1.62 MB
ABC: Mapping (K=6)  :  lut =  14344  edge =   59710  lev =   26 (9.57)  mem = 0.85 MB
ABC: netlist  : i/o =   2394/   2014  and =  134065  lev =   84 (31.57)  mem = 1.65 MB
ABC: Mapping (K=6)  :  lut =  14081  edge =   59348  lev =   28 (9.72)  mem = 0.86 MB
ABC: netlist  : i/o =   2394/   2014  and =  147553  lev =   77 (31.95)  mem = 1.81 MB
ABC: Mapping (K=6)  :  lut =  13992  edge =   59086  lev =   29 (9.83)  mem = 0.91 MB
ABC: netlist  : i/o =   2394/   2014  and =  131475  lev =   81 (31.66)  mem = 1.62 MB
ABC: Mapping (K=6)  :  lut =  14263  edge =   59263  lev =   28 (10.32)  mem = 0.85 MB
ABC: netlist  : i/o =   2394/   2014  and =  133660  lev =   81 (31.44)  mem = 2.17 MB
ABC: Mapping (K=6)  :  lut =  12618  edge =   60268  lev =   25 (8.76)  mem = 0.85 MB
ABC: netlist  : i/o =   2394/   2014  and =  134544  lev =   88 (31.74)  mem = 2.19 MB
ABC: Mapping (K=6)  :  lut =  12502  edge =   59947  lev =   24 (8.69)  mem = 0.85 MB
ABC: netlist  : i/o =   2394/   2014  and =  135172  lev =   83 (31.82)  mem = 2.20 MB
ABC: Mapping (K=6)  :  lut =  12460  edge =   59663  lev =   24 (8.64)  mem = 0.86 MB
ABC: netlist  : i/o =   2394/   2014  and =  144676  lev =   80 (31.65)  mem = 2.34 MB
ABC: Mapping (K=6)  :  lut =  12643  edge =   60071  lev =   24 (8.48)  mem = 0.89 MB
ABC: netlist  : i/o =   2394/   2014  and =  148241  lev =   87 (32.16)  mem = 2.40 MB
ABC: Mapping (K=6)  :  lut =  12392  edge =   59381  lev =   24 (8.57)  mem = 0.90 MB
ABC: netlist  : i/o =   2394/   2014  and =  134854  lev =   91 (33.56)  mem = 2.19 MB
ABC: Mapping (K=6)  :  lut =  12421  edge =   59356  lev =   24 (8.64)  mem = 0.85 MB
ABC: netlist  : i/o =   2394/   2014  and =  154519  lev =   86 (32.20)  mem = 2.49 MB
ABC: Mapping (K=6)  :  lut =  12353  edge =   59299  lev =   23 (8.43)  mem = 0.93 MB
ABC: netlist  : i/o =   2394/   2014  and =  139255  lev =   90 (33.52)  mem = 2.26 MB
ABC: Mapping (K=6)  :  lut =  12381  edge =   59428  lev =   24 (8.42)  mem = 0.87 MB
ABC: netlist  : i/o =   2394/   2014  and =  154519  lev =   86 (32.20)  mem = 1.89 MB
ABC: Mapping (K=6)  :  lut =  12353  edge =   59299  lev =   23 (8.43)  mem = 0.93 MB
ABC: netlist  : i/o =   2394/   2014  and =  154519  lev =   86 (32.20)  mem = 2.49 MB
ABC: Mapping (K=6)  :  lut =  12347  edge =   59295  lev =   23 (8.43)  mem = 0.93 MB
ABC: netlist  : i/o =   2394/   2014  and =  143910  lev =   91 (34.00)  mem = 1.76 MB
ABC: Mapping (K=6)  :  lut =  12347  edge =   59295  lev =   23 (8.43)  mem = 0.89 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:    12347
ABC RESULTS:        internal signals:    43598
ABC RESULTS:           input signals:     2394
ABC RESULTS:          output signals:     2014
Removing temp directory.

yosys> opt

3.41. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.41.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.41.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 11610 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.41.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.41.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.41.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.41.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.41.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.41.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.42. Executing HIERARCHY pass (managing design hierarchy).

3.42.1. Analyzing design hierarchy..
Top module:  \top

3.42.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.43. Printing statistics.

=== top ===

   Number of wires:              11843
   Number of wire bits:          36821
   Number of public wires:        1110
   Number of public wire bits:   26088
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              14457
     $lut                        12347
     dff                          2110


yosys> opt_clean -purge

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 905 unused wires.
<suppressed ~905 debug messages>

yosys> write_verilog -noattr -nohex top.verilog

3.45. Executing Verilog backend.

yosys> bmuxmap

3.45.1. Executing BMUXMAP pass.

yosys> demuxmap

3.45.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\top'.

End of script. Logfile hash: a529db8a81, CPU: user 62.89s system 0.49s, MEM: 299.99 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 88% 1x abc (499 sec), 4% 35x opt_expr (24 sec), ...
real 562.28
user 549.37
sys 12.90
