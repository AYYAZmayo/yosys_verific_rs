
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k cf_fir_24_16_16.v

yosys> verific -vlog2k cf_fir_24_16_16.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cf_fir_24_16_16.v'

yosys> synth_rs -top top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.36

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:92: compiling module 'top'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:127: compiling module 'cf_fir_24_16_16_1'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:166: compiling module 'cf_fir_24_16_16_2'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1793: compiling module 'cf_fir_24_16_16_24'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1898: compiling module 'cf_fir_24_16_16_25'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1982: compiling module 'cf_fir_24_16_16_26'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1170: compiling module 'cf_fir_24_16_16_18'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1324: compiling module 'cf_fir_24_16_16_19'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1458: compiling module 'cf_fir_24_16_16_20'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1572: compiling module 'cf_fir_24_16_16_21'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1666: compiling module 'cf_fir_24_16_16_22'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1740: compiling module 'cf_fir_24_16_16_23'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:276: compiling module 'cf_fir_24_16_16_3'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:745: compiling module 'cf_fir_24_16_16_12'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:842: compiling module 'cf_fir_24_16_16_13'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:929: compiling module 'cf_fir_24_16_16_14'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1006: compiling module 'cf_fir_24_16_16_15'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1073: compiling module 'cf_fir_24_16_16_16'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1130: compiling module 'cf_fir_24_16_16_17'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:344: compiling module 'cf_fir_24_16_16_4'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:581: compiling module 'cf_fir_24_16_16_9'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:648: compiling module 'cf_fir_24_16_16_10'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:705: compiling module 'cf_fir_24_16_16_11'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:394: compiling module 'cf_fir_24_16_16_5'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:534: compiling module 'cf_fir_24_16_16_8'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:437: compiling module 'cf_fir_24_16_16_6'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:494: compiling module 'cf_fir_24_16_16_7'
Importing module top.
Importing module cf_fir_24_16_16_1.
Importing module cf_fir_24_16_16_2.
Importing module cf_fir_24_16_16_18.
Importing module cf_fir_24_16_16_19.
Importing module cf_fir_24_16_16_20.
Importing module cf_fir_24_16_16_21.
Importing module cf_fir_24_16_16_22.
Importing module cf_fir_24_16_16_23.
Importing module cf_fir_24_16_16_24.
Importing module cf_fir_24_16_16_25.
Importing module cf_fir_24_16_16_26.
Importing module cf_fir_24_16_16_3.
Importing module cf_fir_24_16_16_12.
Importing module cf_fir_24_16_16_13.
Importing module cf_fir_24_16_16_14.
Importing module cf_fir_24_16_16_15.
Importing module cf_fir_24_16_16_16.
Importing module cf_fir_24_16_16_17.
Importing module cf_fir_24_16_16_4.
Importing module cf_fir_24_16_16_5.
Importing module cf_fir_24_16_16_6.
Importing module cf_fir_24_16_16_7.
Importing module cf_fir_24_16_16_8.
Importing module cf_fir_24_16_16_9.
Importing module cf_fir_24_16_16_10.
Importing module cf_fir_24_16_16_11.

3.3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \cf_fir_24_16_16_1
Used module:         \cf_fir_24_16_16_2
Used module:             \cf_fir_24_16_16_3
Used module:                 \cf_fir_24_16_16_4
Used module:                     \cf_fir_24_16_16_5
Used module:                         \cf_fir_24_16_16_6
Used module:                             \cf_fir_24_16_16_7
Used module:                         \cf_fir_24_16_16_8
Used module:                     \cf_fir_24_16_16_9
Used module:                         \cf_fir_24_16_16_10
Used module:                             \cf_fir_24_16_16_11
Used module:                 \cf_fir_24_16_16_12
Used module:                     \cf_fir_24_16_16_13
Used module:                         \cf_fir_24_16_16_14
Used module:                             \cf_fir_24_16_16_15
Used module:                                 \cf_fir_24_16_16_16
Used module:                                     \cf_fir_24_16_16_17
Used module:             \cf_fir_24_16_16_18
Used module:                 \cf_fir_24_16_16_19
Used module:                     \cf_fir_24_16_16_20
Used module:                         \cf_fir_24_16_16_21
Used module:                             \cf_fir_24_16_16_22
Used module:                                 \cf_fir_24_16_16_23
Used module:             \cf_fir_24_16_16_24
Used module:                 \cf_fir_24_16_16_25
Used module:                     \cf_fir_24_16_16_26

3.3.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \cf_fir_24_16_16_1
Used module:         \cf_fir_24_16_16_2
Used module:             \cf_fir_24_16_16_3
Used module:                 \cf_fir_24_16_16_4
Used module:                     \cf_fir_24_16_16_5
Used module:                         \cf_fir_24_16_16_6
Used module:                             \cf_fir_24_16_16_7
Used module:                         \cf_fir_24_16_16_8
Used module:                     \cf_fir_24_16_16_9
Used module:                         \cf_fir_24_16_16_10
Used module:                             \cf_fir_24_16_16_11
Used module:                 \cf_fir_24_16_16_12
Used module:                     \cf_fir_24_16_16_13
Used module:                         \cf_fir_24_16_16_14
Used module:                             \cf_fir_24_16_16_15
Used module:                                 \cf_fir_24_16_16_16
Used module:                                     \cf_fir_24_16_16_17
Used module:             \cf_fir_24_16_16_18
Used module:                 \cf_fir_24_16_16_19
Used module:                     \cf_fir_24_16_16_20
Used module:                         \cf_fir_24_16_16_21
Used module:                             \cf_fir_24_16_16_22
Used module:                                 \cf_fir_24_16_16_23
Used module:             \cf_fir_24_16_16_24
Used module:                 \cf_fir_24_16_16_25
Used module:                     \cf_fir_24_16_16_26
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16_11.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_10.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_9.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_8.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_7.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_6.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_5.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_4.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_17.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_16.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_15.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_14.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_13.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_12.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_3.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_26.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_25.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_24.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_23.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_22.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_21.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_20.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_19.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_18.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_2.
<suppressed ~2 debug messages>
Optimizing module cf_fir_24_16_16_1.
Optimizing module top.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module cf_fir_24_16_16_11.
Deleting now unused module cf_fir_24_16_16_10.
Deleting now unused module cf_fir_24_16_16_9.
Deleting now unused module cf_fir_24_16_16_8.
Deleting now unused module cf_fir_24_16_16_7.
Deleting now unused module cf_fir_24_16_16_6.
Deleting now unused module cf_fir_24_16_16_5.
Deleting now unused module cf_fir_24_16_16_4.
Deleting now unused module cf_fir_24_16_16_17.
Deleting now unused module cf_fir_24_16_16_16.
Deleting now unused module cf_fir_24_16_16_15.
Deleting now unused module cf_fir_24_16_16_14.
Deleting now unused module cf_fir_24_16_16_13.
Deleting now unused module cf_fir_24_16_16_12.
Deleting now unused module cf_fir_24_16_16_3.
Deleting now unused module cf_fir_24_16_16_26.
Deleting now unused module cf_fir_24_16_16_25.
Deleting now unused module cf_fir_24_16_16_24.
Deleting now unused module cf_fir_24_16_16_23.
Deleting now unused module cf_fir_24_16_16_22.
Deleting now unused module cf_fir_24_16_16_21.
Deleting now unused module cf_fir_24_16_16_20.
Deleting now unused module cf_fir_24_16_16_19.
Deleting now unused module cf_fir_24_16_16_18.
Deleting now unused module cf_fir_24_16_16_2.
Deleting now unused module cf_fir_24_16_16_1.
<suppressed ~26 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 14661 unused wires.
<suppressed ~437 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~129 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:527$14914 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n6_reg$cf_fir_24_16_16.v:527$14913 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n4_reg$cf_fir_24_16_16.v:2037$8536 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:481$14701 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$n12_reg$cf_fir_24_16_16.v:481$14702 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n5_reg$cf_fir_24_16_16.v:2037$8537 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:2037$8538 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:571$14945 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:571$14946 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n4_reg$cf_fir_24_16_16.v:1872$7977 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n3_reg$cf_fir_24_16_16.v:1872$7976 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n2_reg$cf_fir_24_16_16.v:1872$7975 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n1_reg$cf_fir_24_16_16.v:1872$7974 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:431$14077 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n6_reg$cf_fir_24_16_16.v:1872$7979 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n5_reg$cf_fir_24_16_16.v:1872$7978 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:738$15599 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:738$15598 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n5_reg$cf_fir_24_16_16.v:268$957 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n3_reg$cf_fir_24_16_16.v:268$956 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$n6_reg$cf_fir_24_16_16.v:692$15391 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$n12_reg$cf_fir_24_16_16.v:692$15392 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n2_reg$cf_fir_24_16_16.v:268$955 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n1_reg$cf_fir_24_16_16.v:268$954 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:633$14981 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:633$14982 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n8_reg$cf_fir_24_16_16.v:2037$8540 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n7_reg$cf_fir_24_16_16.v:2037$8539 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:388$13205 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:1163$13178 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1163$13177 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n1_reg$cf_fir_24_16_16.v:1963$8310 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1117$12975 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1117$12976 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1058$12576 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1058$12577 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n3_reg$cf_fir_24_16_16.v:1963$8312 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n2_reg$cf_fir_24_16_16.v:1963$8311 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n5_reg$cf_fir_24_16_16.v:1963$8314 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n4_reg$cf_fir_24_16_16.v:1963$8313 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:989$11981 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:989$11982 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.$verific$n6_reg$cf_fir_24_16_16.v:910$11190 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.$verific$n12_reg$cf_fir_24_16_16.v:910$11191 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n7_reg$cf_fir_24_16_16.v:1963$8316 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n6_reg$cf_fir_24_16_16.v:1963$8315 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n2_reg$cf_fir_24_16_16.v:2037$8534 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:821$10203 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:821$10204 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n3_reg$cf_fir_24_16_16.v:2037$8535 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n7_reg$cf_fir_24_16_16.v:1872$7980 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.$verific$n6_reg$cf_fir_24_16_16.v:338$8571 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n1_reg$cf_fir_24_16_16.v:2037$8533 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1783$7915 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1783$7914 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1783$7913 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1783$7912 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1549$6196 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1549$6195 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1725$7602 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1725$7601 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1725$7600 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1725$7599 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1549$6194 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1549$6193 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1431$5101 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1431$5100 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1431$5103 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1431$5102 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1647$7029 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1647$7028 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1647$7027 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1647$7026 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n8_reg$cf_fir_24_16_16.v:1293$3750 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n6_reg$cf_fir_24_16_16.v:1293$3749 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n4_reg$cf_fir_24_16_16.v:1293$3748 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n2_reg$cf_fir_24_16_16.v:1293$3747 ($aldff) from module top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 129 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n8_reg$cf_fir_24_16_16.v:2037$8540 ($dff) from module top (D = \s1.s3.s6.s8.s8.n7, Q = \s1.s3.s6.s8.s8.n8, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n7_reg$cf_fir_24_16_16.v:2037$8539 ($dff) from module top (D = \s1.s3.s6.s8.s8.n6, Q = \s1.s3.s6.s8.s8.n7, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:2037$8538 ($dff) from module top (D = \s1.s3.s6.s8.s8.n5, Q = \s1.s3.s6.s8.s8.n6, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n5_reg$cf_fir_24_16_16.v:2037$8537 ($dff) from module top (D = \s1.s3.s6.s8.s8.n4, Q = \s1.s3.s6.s8.s8.n5, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n4_reg$cf_fir_24_16_16.v:2037$8536 ($dff) from module top (D = \s1.s3.s6.s8.s8.n3, Q = \s1.s3.s6.s8.s8.n4, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n3_reg$cf_fir_24_16_16.v:2037$8535 ($dff) from module top (D = \s1.s3.s6.s8.s8.n2, Q = \s1.s3.s6.s8.s8.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n2_reg$cf_fir_24_16_16.v:2037$8534 ($dff) from module top (D = \s1.s3.s6.s8.s8.n1, Q = \s1.s3.s6.s8.s8.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n1_reg$cf_fir_24_16_16.v:2037$8533 ($dff) from module top (D = \s1.s3.s6.s8.n7, Q = \s1.s3.s6.s8.s8.n1, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n7_reg$cf_fir_24_16_16.v:1963$8316 ($dff) from module top (D = \s1.s3.s6.s8.n6, Q = \s1.s3.s6.s8.n7, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n6_reg$cf_fir_24_16_16.v:1963$8315 ($dff) from module top (D = \s1.s3.s6.s8.n5, Q = \s1.s3.s6.s8.n6, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n5_reg$cf_fir_24_16_16.v:1963$8314 ($dff) from module top (D = \s1.s3.s6.s8.n4, Q = \s1.s3.s6.s8.n5, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n4_reg$cf_fir_24_16_16.v:1963$8313 ($dff) from module top (D = \s1.s3.s6.s8.n3, Q = \s1.s3.s6.s8.n4, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n3_reg$cf_fir_24_16_16.v:1963$8312 ($dff) from module top (D = \s1.s3.s6.s8.n2, Q = \s1.s3.s6.s8.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n2_reg$cf_fir_24_16_16.v:1963$8311 ($dff) from module top (D = \s1.s3.s6.s8.n1, Q = \s1.s3.s6.s8.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n1_reg$cf_fir_24_16_16.v:1963$8310 ($dff) from module top (D = \s1.s3.s6.n7, Q = \s1.s3.s6.s8.n1, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n7_reg$cf_fir_24_16_16.v:1872$7980 ($dff) from module top (D = \s1.s3.s6.n6, Q = \s1.s3.s6.n7, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n6_reg$cf_fir_24_16_16.v:1872$7979 ($dff) from module top (D = \s1.s3.s6.n5, Q = \s1.s3.s6.n6, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n5_reg$cf_fir_24_16_16.v:1872$7978 ($dff) from module top (D = \s1.s3.s6.n4, Q = \s1.s3.s6.n5, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n4_reg$cf_fir_24_16_16.v:1872$7977 ($dff) from module top (D = \s1.s3.s6.n3, Q = \s1.s3.s6.n4, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n3_reg$cf_fir_24_16_16.v:1872$7976 ($dff) from module top (D = \s1.s3.s6.n2, Q = \s1.s3.s6.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n2_reg$cf_fir_24_16_16.v:1872$7975 ($dff) from module top (D = \s1.s3.s6.n1, Q = \s1.s3.s6.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n1_reg$cf_fir_24_16_16.v:1872$7974 ($dff) from module top (D = \s1.s3.n3, Q = \s1.s3.s6.n1, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.$verific$n3_reg$cf_fir_24_16_16.v:268$956 ($dff) from module top (D = \s1.s3.n2, Q = \s1.s3.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.$verific$n2_reg$cf_fir_24_16_16.v:268$955 ($dff) from module top (D = \s1.s3.n1, Q = \s1.s3.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.$verific$n1_reg$cf_fir_24_16_16.v:268$954 ($dff) from module top (D = \data_i, Q = \s1.s3.n1, rval = 16'0000000000000000).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 25 unused cells and 25 unused wires.
<suppressed ~26 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 34) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:738$15599 ($dff).
Removed top 2 bits (of 35) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:527$14914 ($dff).
Removed top 1 bits (of 33) from FF cell top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:1163$13178 ($dff).
Removed top 1 bits (of 33) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:738$15599 ($dff).
Removed top 1 bits (of 33) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:527$14914 ($dff).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\s1.\s3.$verific$mult_32$cf_fir_24_16_16.v:269$958 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_3$cf_fir_24_16_16.v:1274$3732 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_34$cf_fir_24_16_16.v:1294$3751 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_36$cf_fir_24_16_16.v:1295$3753 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_38$cf_fir_24_16_16.v:1296$3755 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_3$cf_fir_24_16_16.v:1412$5085 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_34$cf_fir_24_16_16.v:1432$5104 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_36$cf_fir_24_16_16.v:1433$5106 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_38$cf_fir_24_16_16.v:1434$5108 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1530$6178 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1550$6197 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1551$6199 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1552$6201 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1628$7011 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1648$7030 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1649$7032 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1650$7034 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1706$7584 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1726$7603 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1727$7605 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1728$7607 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1764$7897 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1784$7916 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1785$7918 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1786$7920 ($mul).
  creating $macc model for $flatten\s1.\s3.\s8.$verific$add_7$cf_fir_24_16_16.v:330$8563 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:826$10209 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:810$10194 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:915$11196 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:899$11181 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:994$11987 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:978$11972 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1063$12582 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1047$12567 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1122$12981 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1106$12966 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1152$13168 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:380$13197 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:638$14987 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:622$14972 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:697$15397 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:681$15382 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:727$15589 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:423$14069 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:576$14951 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:560$14936 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_28$cf_fir_24_16_16.v:486$14707 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:470$14692 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$add_7$cf_fir_24_16_16.v:516$14904 ($add).
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$add_7$cf_fir_24_16_16.v:516$14904.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:470$14692.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_28$cf_fir_24_16_16.v:486$14707.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:560$14936.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:576$14951.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:423$14069.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:727$15589.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:681$15382.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:697$15397.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:622$14972.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:638$14987.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:380$13197.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1152$13168.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1106$12966.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1122$12981.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1047$12567.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1063$12582.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:978$11972.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:994$11987.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:899$11181.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:915$11196.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:810$10194.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:826$10209.
  creating $alu model for $macc $flatten\s1.\s3.\s8.$verific$add_7$cf_fir_24_16_16.v:330$8563.
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1786$7920: $auto$alumacc.cc:365:replace_macc$15629
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1785$7918: $auto$alumacc.cc:365:replace_macc$15630
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1784$7916: $auto$alumacc.cc:365:replace_macc$15631
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1764$7897: $auto$alumacc.cc:365:replace_macc$15632
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1728$7607: $auto$alumacc.cc:365:replace_macc$15633
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1727$7605: $auto$alumacc.cc:365:replace_macc$15634
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1726$7603: $auto$alumacc.cc:365:replace_macc$15635
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1706$7584: $auto$alumacc.cc:365:replace_macc$15636
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1650$7034: $auto$alumacc.cc:365:replace_macc$15637
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1649$7032: $auto$alumacc.cc:365:replace_macc$15638
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1648$7030: $auto$alumacc.cc:365:replace_macc$15639
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1628$7011: $auto$alumacc.cc:365:replace_macc$15640
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1552$6201: $auto$alumacc.cc:365:replace_macc$15641
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1551$6199: $auto$alumacc.cc:365:replace_macc$15642
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1550$6197: $auto$alumacc.cc:365:replace_macc$15643
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1530$6178: $auto$alumacc.cc:365:replace_macc$15644
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_38$cf_fir_24_16_16.v:1434$5108: $auto$alumacc.cc:365:replace_macc$15645
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_36$cf_fir_24_16_16.v:1433$5106: $auto$alumacc.cc:365:replace_macc$15646
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_34$cf_fir_24_16_16.v:1432$5104: $auto$alumacc.cc:365:replace_macc$15647
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_3$cf_fir_24_16_16.v:1412$5085: $auto$alumacc.cc:365:replace_macc$15648
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_38$cf_fir_24_16_16.v:1296$3755: $auto$alumacc.cc:365:replace_macc$15649
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_36$cf_fir_24_16_16.v:1295$3753: $auto$alumacc.cc:365:replace_macc$15650
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_34$cf_fir_24_16_16.v:1294$3751: $auto$alumacc.cc:365:replace_macc$15651
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_3$cf_fir_24_16_16.v:1274$3732: $auto$alumacc.cc:365:replace_macc$15652
  creating $macc cell for $flatten\s1.\s3.$verific$mult_32$cf_fir_24_16_16.v:269$958: $auto$alumacc.cc:365:replace_macc$15653
  creating $alu cell for $flatten\s1.\s3.\s8.$verific$add_7$cf_fir_24_16_16.v:330$8563: $auto$alumacc.cc:485:replace_alu$15654
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:826$10209: $auto$alumacc.cc:485:replace_alu$15657
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:810$10194: $auto$alumacc.cc:485:replace_alu$15660
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:915$11196: $auto$alumacc.cc:485:replace_alu$15663
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:899$11181: $auto$alumacc.cc:485:replace_alu$15666
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:994$11987: $auto$alumacc.cc:485:replace_alu$15669
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:978$11972: $auto$alumacc.cc:485:replace_alu$15672
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1063$12582: $auto$alumacc.cc:485:replace_alu$15675
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1047$12567: $auto$alumacc.cc:485:replace_alu$15678
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1122$12981: $auto$alumacc.cc:485:replace_alu$15681
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1106$12966: $auto$alumacc.cc:485:replace_alu$15684
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1152$13168: $auto$alumacc.cc:485:replace_alu$15687
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:380$13197: $auto$alumacc.cc:485:replace_alu$15690
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:638$14987: $auto$alumacc.cc:485:replace_alu$15693
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:622$14972: $auto$alumacc.cc:485:replace_alu$15696
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:697$15397: $auto$alumacc.cc:485:replace_alu$15699
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:681$15382: $auto$alumacc.cc:485:replace_alu$15702
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:727$15589: $auto$alumacc.cc:485:replace_alu$15705
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:423$14069: $auto$alumacc.cc:485:replace_alu$15708
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:576$14951: $auto$alumacc.cc:485:replace_alu$15711
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:560$14936: $auto$alumacc.cc:485:replace_alu$15714
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_28$cf_fir_24_16_16.v:486$14707: $auto$alumacc.cc:485:replace_alu$15717
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:470$14692: $auto$alumacc.cc:485:replace_alu$15720
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$add_7$cf_fir_24_16_16.v:516$14904: $auto$alumacc.cc:485:replace_alu$15723
  created 24 $alu and 25 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> stat

3.22. Printing statistics.

=== top ===

   Number of wires:               1158
   Number of wire bits:          27716
   Number of public wires:        1110
   Number of public wire bits:   26088
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                126
     $alu                           24
     $dff                           52
     $macc                          25
     $sdff                          25


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdff.
Using extmapper maccmap for cells of type $macc.
  add \k24_i * \s1.s3.s6.s8.s8.n8 (16x16 bits, unsigned)
Using extmapper simplemap for cells of type $dff.
Using template $paramod$5030a10823ed71fc93d30a8f70ad7915e2e2ef92\_80_rs_alu for cells of type $alu.
  add \k0_i * \s1.s3.n1 (16x16 bits, unsigned)
Using template $paramod$a2ca127b29d90cb5185f64ad52e7d585239d0c49\_80_rs_alu for cells of type $alu.
Using template $paramod$7ff9b7d2c704977b3beff47161e1598672161854\_80_rs_alu for cells of type $alu.
Using template $paramod$672b960779eb221571e928cb5b2e3f12c11445d6\_80_rs_alu for cells of type $alu.
Using template $paramod$7d53733be90b4f6decda9d83b89a52b4cd1ea488\_80_rs_alu for cells of type $alu.
  add \k5_i * \s1.s3.s6.n3 (16x16 bits, unsigned)
  add \k6_i * \s1.s3.s6.n4 (16x16 bits, unsigned)
  add \k7_i * \s1.s3.s6.n5 (16x16 bits, unsigned)
  add \k8_i * \s1.s3.s6.n6 (16x16 bits, unsigned)
  add \k13_i * \s1.s3.s6.s8.n4 (16x16 bits, unsigned)
  add \k14_i * \s1.s3.s6.s8.n5 (16x16 bits, unsigned)
  add \k15_i * \s1.s3.s6.s8.n6 (16x16 bits, unsigned)
  add \k16_i * \s1.s3.s6.s8.n7 (16x16 bits, unsigned)
  add \k21_i * \s1.s3.s6.s8.s8.n5 (16x16 bits, unsigned)
  add \k22_i * \s1.s3.s6.s8.s8.n6 (16x16 bits, unsigned)
  add \k23_i * \s1.s3.s6.s8.s8.n7 (16x16 bits, unsigned)
  add \k20_i * \s1.s3.s6.s8.s8.n4 (16x16 bits, unsigned)
  add \k19_i * \s1.s3.s6.s8.s8.n3 (16x16 bits, unsigned)
  add \k18_i * \s1.s3.s6.s8.s8.n2 (16x16 bits, unsigned)
  add \k17_i * \s1.s3.s6.s8.s8.n1 (16x16 bits, unsigned)
  add \k12_i * \s1.s3.s6.s8.n3 (16x16 bits, unsigned)
  add \k11_i * \s1.s3.s6.s8.n2 (16x16 bits, unsigned)
  add \k10_i * \s1.s3.s6.s8.n1 (16x16 bits, unsigned)
  add \k9_i * \s1.s3.s6.n7 (16x16 bits, unsigned)
  add \k4_i * \s1.s3.s6.n2 (16x16 bits, unsigned)
  add \k3_i * \s1.s3.s6.n1 (16x16 bits, unsigned)
  add \k2_i * \s1.s3.n3 (16x16 bits, unsigned)
  add \k1_i * \s1.s3.n2 (16x16 bits, unsigned)
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~7115 debug messages>

yosys> stat

3.24. Printing statistics.

=== top ===

   Number of wires:              10786
   Number of wire bits:         267778
   Number of public wires:        1110
   Number of public wire bits:   26088
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              81837
     $_AND_                      38100
     $_DFF_P_                     1710
     $_MUX_                       1662
     $_NOT_                       1614
     $_OR_                       12650
     $_SDFF_PP0_                   400
     $_XOR_                      24887
     adder_carry                   814


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~36575 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~153 debug messages>
Removed a total of 51 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2012 unused cells and 5136 unused wires.
<suppressed ~2013 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.25.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.28.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Summary of detected clock domains:
  36407 cells in clk=\clock_c, en={ }, arst={ }, srst={ }
  6792 cells in clk=\clock_c, en={ }, arst={ }, srst=\reset_i

3.29.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock_c
Extracted 35593 gates and 42791 wires to a netlist network with 7198 inputs and 1569 outputs.

3.29.2.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1710 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:     3165
ABC RESULTS:            ANDNOT cells:      436
ABC RESULTS:               BUF cells:     1682
ABC RESULTS:               DFF cells:     1710
ABC RESULTS:               MUX cells:       22
ABC RESULTS:              NAND cells:    13208
ABC RESULTS:               NOR cells:      231
ABC RESULTS:               NOT cells:       20
ABC RESULTS:                OR cells:     2035
ABC RESULTS:             ORNOT cells:      179
ABC RESULTS:              XNOR cells:     3738
ABC RESULTS:               XOR cells:     9647
ABC RESULTS:        internal signals:    34024
ABC RESULTS:           input signals:     7198
ABC RESULTS:          output signals:     1569
Removing temp directory.

3.29.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock_c, synchronously reset by \reset_i
Extracted 6792 gates and 7208 wires to a netlist network with 416 inputs and 6400 outputs.

3.29.3.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:     6392
ABC RESULTS:               BUF cells:      408
ABC RESULTS:               DFF cells:      400
ABC RESULTS:        internal signals:      392
ABC RESULTS:           input signals:      416
ABC RESULTS:          output signals:     6400
Removing temp directory.

yosys> abc -script abc_tmp.scr

3.30. Executing ABC pass (technology mapping using ABC).

3.30.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 39073 gates and 41474 wires to a netlist network with 2401 inputs and 1614 outputs.

3.30.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/cf_fir_24_16_16/abc_tmp.scr 
ABC:   #Luts = 14618  Max Lvl =  30  Avg Lvl =   8.17  [   1.44 sec. at Pass 0]
ABC:   #Luts = 13118  Max Lvl =  29  Avg Lvl =   7.54  [ 185.88 sec. at Pass 1]
ABC:   #Luts = 11648  Max Lvl =  24  Avg Lvl =   6.22  [  22.94 sec. at Pass 2]
ABC:   #Luts = 11613  Max Lvl =  22  Avg Lvl =   6.09  [  63.86 sec. at Pass 3]
ABC:   #Luts = 11445  Max Lvl =  23  Avg Lvl =   6.08  [  29.38 sec. at Pass 4]
ABC:   #Luts = 11445  Max Lvl =  23  Avg Lvl =   6.08  [  75.68 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.30.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:    11445
ABC RESULTS:        internal signals:    37459
ABC RESULTS:           input signals:     2401
ABC RESULTS:          output signals:     1614
Removing temp directory.

yosys> opt

3.31. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 57660 unused wires.
<suppressed ~421 debug messages>

yosys> opt_expr

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.31.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.31.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.32. Printing statistics.

=== top ===

   Number of wires:              12723
   Number of wire bits:          28932
   Number of public wires:         690
   Number of public wire bits:   15295
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              14369
     $_DFF_P_                     1710
     $_SDFF_PP0_                   400
     $lut                        11445
     adder_carry                   814


yosys> shregmap -minlen 8 -maxlen 20

3.33. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.35. Printing statistics.

=== top ===

   Number of wires:              13123
   Number of wire bits:          29332
   Number of public wires:         690
   Number of public wire bits:   15295
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              14769
     $_DFF_P_                     2110
     $_MUX_                        400
     $lut                        11445
     adder_carry                   814


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~13691 debug messages>

yosys> opt_expr -mux_undef

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~238254 debug messages>

yosys> simplemap

3.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~349398 debug messages>
Removed a total of 116466 cells.

yosys> opt_dff -nodffe -nosdff

3.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 26254 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.43. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8064 debug messages>

yosys> opt_merge -nomux

3.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~231 debug messages>
Removed a total of 77 cells.

yosys> opt_muxtree

3.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.43.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.43.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.43.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.43.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.43.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.44. Executing ABC pass (technology mapping using ABC).

3.44.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 81346 gates and 83766 wires to a netlist network with 2418 inputs and 2014 outputs.

3.44.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/cf_fir_24_16_16/abc_tmp.scr 
ABC:   #Luts = 11935  Max Lvl =  23  Avg Lvl =   5.10  [   4.92 sec. at Pass 0]
ABC:   #Luts = 11935  Max Lvl =  23  Avg Lvl =   5.10  [ 241.75 sec. at Pass 1]
ABC:   #Luts = 11779  Max Lvl =  23  Avg Lvl =   5.17  [  41.88 sec. at Pass 2]
ABC:   #Luts = 11779  Max Lvl =  23  Avg Lvl =   5.17  [  69.68 sec. at Pass 3]
ABC:   #Luts = 11760  Max Lvl =  22  Avg Lvl =   5.00  [  40.06 sec. at Pass 4]
ABC:   #Luts = 11760  Max Lvl =  22  Avg Lvl =   5.00  [ 102.89 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:    11760
ABC RESULTS:        internal signals:    79334
ABC RESULTS:           input signals:     2418
ABC RESULTS:          output signals:     2014
Removing temp directory.

yosys> opt

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 49237 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \top

3.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.47. Printing statistics.

=== top ===

   Number of wires:              13038
   Number of wire bits:          29247
   Number of public wires:         690
   Number of public wire bits:   15295
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              14684
     $lut                        11760
     adder_carry                   814
     dffsre                       2110


yosys> opt_clean -purge

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 588 unused wires.
<suppressed ~588 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.49. Executing Verilog backend.

yosys> bmuxmap

3.49.1. Executing BMUXMAP pass.

yosys> demuxmap

3.49.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\top'.

End of script. Logfile hash: 22a1eab558, CPU: user 179.63s system 3.77s, MEM: 795.48 MB peak
Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 3x abc (3618 sec), 2% 29x opt_expr (79 sec), ...
real 1089.71
user 3654.86
sys 141.20
