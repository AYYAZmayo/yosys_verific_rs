
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k des_perf.v

yosys> verific -vlog2k des_perf.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'des_perf.v'

yosys> synth_rs -top des_perf -tech generic -goal area -no_dsp -no_bram -verilog des_perf.verilog

3. Executing synth_rs pass.

yosys> hierarchy -check -top des_perf

3.1. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] des_perf.v:35: compiling module 'des_perf'
VERIFIC-INFO [VERI-1018] des_perf.v:272: compiling module 'key_sel'
VERIFIC-INFO [VERI-1018] des_perf.v:1123: compiling module 'crp'
VERIFIC-INFO [VERI-1018] des_perf.v:1192: compiling module 'sbox1'
VERIFIC-INFO [VERI-1018] des_perf.v:1305: compiling module 'sbox2'
VERIFIC-INFO [VERI-1018] des_perf.v:1418: compiling module 'sbox3'
VERIFIC-INFO [VERI-1018] des_perf.v:1531: compiling module 'sbox4'
VERIFIC-INFO [VERI-1018] des_perf.v:1644: compiling module 'sbox5'
VERIFIC-INFO [VERI-1018] des_perf.v:1757: compiling module 'sbox6'
VERIFIC-INFO [VERI-1018] des_perf.v:1870: compiling module 'sbox7'
VERIFIC-INFO [VERI-1018] des_perf.v:1983: compiling module 'sbox8'
Importing module des_perf.
Importing module key_sel.
Importing module crp.
Importing module sbox2.
Importing module sbox3.
Importing module sbox4.
Importing module sbox1.
Importing module sbox6.
Importing module sbox5.
Importing module sbox7.
Importing module sbox8.

3.1.1. Analyzing design hierarchy..
Top module:  \des_perf
Used module:     \crp
Used module:         \sbox8
Used module:         \sbox7
Used module:         \sbox6
Used module:         \sbox5
Used module:         \sbox4
Used module:         \sbox3
Used module:         \sbox2
Used module:         \sbox1
Used module:     \key_sel

3.1.2. Analyzing design hierarchy..
Top module:  \des_perf
Used module:     \crp
Used module:         \sbox8
Used module:         \sbox7
Used module:         \sbox6
Used module:         \sbox5
Used module:         \sbox4
Used module:         \sbox3
Used module:         \sbox2
Used module:         \sbox1
Used module:     \key_sel
Removed 0 unused modules.

yosys> proc

3.2. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.2.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.2.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.2.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module sbox8.
Optimizing module sbox7.
Optimizing module sbox5.
Optimizing module sbox6.
Optimizing module sbox1.
Optimizing module sbox4.
Optimizing module sbox3.
Optimizing module sbox2.
Optimizing module crp.
Optimizing module key_sel.
Optimizing module des_perf.

yosys> flatten

3.3. Executing FLATTEN pass (flatten design).
Deleting now unused module sbox8.
Deleting now unused module sbox7.
Deleting now unused module sbox5.
Deleting now unused module sbox6.
Deleting now unused module sbox1.
Deleting now unused module sbox4.
Deleting now unused module sbox3.
Deleting now unused module sbox2.
Deleting now unused module crp.
Deleting now unused module key_sel.
<suppressed ~25 debug messages>

yosys> tribuf -logic

3.4. Executing TRIBUF pass.

yosys> opt_expr

3.5. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

yosys> opt_clean

3.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..
Removed 2 unused cells and 723 unused wires.
<suppressed ~121 debug messages>

yosys> check

3.7. Executing CHECK pass (checking for obvious problems).
Checking module des_perf...
Found and reported 0 problems.

yosys> deminout

3.8. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt -nodffe -nosdff

3.9. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

yosys> opt_merge -nomux

3.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_perf..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_perf.
Performed a total of 0 changes.

yosys> opt_merge

3.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$key_r_reg$des_perf.v:54$57 ($aldff) from module des_perf.
Removing never-active async load on $verific$desOut_reg$des_perf.v:233$265 ($aldff) from module des_perf.
Removing never-active async load on $verific$desIn_r_reg$des_perf.v:58$59 ($aldff) from module des_perf.
Removing never-active async load on $verific$R9_reg$des_perf.v:171$233 ($aldff) from module des_perf.
Removing never-active async load on $verific$R8_reg$des_perf.v:165$228 ($aldff) from module des_perf.
Removing never-active async load on $verific$R7_reg$des_perf.v:159$223 ($aldff) from module des_perf.
Removing never-active async load on $verific$R6_reg$des_perf.v:153$218 ($aldff) from module des_perf.
Removing never-active async load on $verific$R5_reg$des_perf.v:147$213 ($aldff) from module des_perf.
Removing never-active async load on $verific$R4_reg$des_perf.v:141$208 ($aldff) from module des_perf.
Removing never-active async load on $verific$R3_reg$des_perf.v:135$203 ($aldff) from module des_perf.
Removing never-active async load on $verific$R2_reg$des_perf.v:129$198 ($aldff) from module des_perf.
Removing never-active async load on $verific$R1_reg$des_perf.v:121$193 ($aldff) from module des_perf.
Removing never-active async load on $verific$R14_reg$des_perf.v:201$258 ($aldff) from module des_perf.
Removing never-active async load on $verific$R13_reg$des_perf.v:195$253 ($aldff) from module des_perf.
Removing never-active async load on $verific$R12_reg$des_perf.v:189$248 ($aldff) from module des_perf.
Removing never-active async load on $verific$R11_reg$des_perf.v:183$243 ($aldff) from module des_perf.
Removing never-active async load on $verific$R10_reg$des_perf.v:177$238 ($aldff) from module des_perf.
Removing never-active async load on $verific$R0_reg$des_perf.v:113$188 ($aldff) from module des_perf.
Removing never-active async load on $verific$L9_reg$des_perf.v:168$230 ($aldff) from module des_perf.
Removing never-active async load on $verific$L8_reg$des_perf.v:162$225 ($aldff) from module des_perf.
Removing never-active async load on $verific$L7_reg$des_perf.v:156$220 ($aldff) from module des_perf.
Removing never-active async load on $verific$L6_reg$des_perf.v:150$215 ($aldff) from module des_perf.
Removing never-active async load on $verific$L5_reg$des_perf.v:144$210 ($aldff) from module des_perf.
Removing never-active async load on $verific$L4_reg$des_perf.v:138$205 ($aldff) from module des_perf.
Removing never-active async load on $verific$L3_reg$des_perf.v:132$200 ($aldff) from module des_perf.
Removing never-active async load on $verific$L2_reg$des_perf.v:125$195 ($aldff) from module des_perf.
Removing never-active async load on $verific$L1_reg$des_perf.v:117$190 ($aldff) from module des_perf.
Removing never-active async load on $verific$L14_reg$des_perf.v:198$255 ($aldff) from module des_perf.
Removing never-active async load on $verific$L13_reg$des_perf.v:192$250 ($aldff) from module des_perf.
Removing never-active async load on $verific$L12_reg$des_perf.v:186$245 ($aldff) from module des_perf.
Removing never-active async load on $verific$L11_reg$des_perf.v:180$240 ($aldff) from module des_perf.
Removing never-active async load on $verific$L10_reg$des_perf.v:174$235 ($aldff) from module des_perf.
Removing never-active async load on $verific$L0_reg$des_perf.v:109$185 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r9_reg$des_perf.v:302$325 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r8_reg$des_perf.v:302$324 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r7_reg$des_perf.v:302$323 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r6_reg$des_perf.v:302$322 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r5_reg$des_perf.v:302$321 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r4_reg$des_perf.v:302$320 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r3_reg$des_perf.v:302$319 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r2_reg$des_perf.v:302$318 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r1_reg$des_perf.v:302$317 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r14_reg$des_perf.v:302$330 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r13_reg$des_perf.v:302$329 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r12_reg$des_perf.v:302$328 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r11_reg$des_perf.v:302$327 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r10_reg$des_perf.v:302$326 ($aldff) from module des_perf.
Removing never-active async load on $flatten\uk.$verific$K_r0_reg$des_perf.v:302$316 ($aldff) from module des_perf.

yosys> opt_clean

3.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> opt_expr

3.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

3.9.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_perf..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_perf.
Performed a total of 0 changes.

yosys> opt_merge

3.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.9.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> opt_expr

3.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

3.9.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.10. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.10.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.10.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.10.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> fsm_opt

3.10.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_perf..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_perf.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

3.11.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.12. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.13. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.14. Executing PMUXTREE pass.

yosys> opt_clean

3.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> techmap

3.16. Executing TECHMAP pass (map to technology primitives).

3.16.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.16.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $bmux.
No more expansions possible.
<suppressed ~295 debug messages>

yosys> alumacc

3.17. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module des_perf:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.18. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.
<suppressed ~12304 debug messages>

yosys> opt_merge -nomux

3.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
<suppressed ~34176 debug messages>
Removed a total of 11392 cells.

yosys> opt_muxtree

3.18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_perf..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_perf.
Performed a total of 0 changes.

yosys> opt_merge

3.18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..
Removed 0 unused cells and 128 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.
<suppressed ~256 debug messages>

3.18.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.18.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_perf..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_perf.
Performed a total of 0 changes.

yosys> opt_merge

3.18.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff

3.18.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.18.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> opt_expr

3.18.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

3.18.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.19. Executing MEMORY pass.

yosys> opt_mem

3.19.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.19.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.19.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.19.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.19.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> memory_share

3.19.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.19.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> memory_collect

3.19.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> opt_expr -mux_undef

3.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

yosys> simplemap

3.22. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

yosys> opt_merge

3.24. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.25. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> opt -nodffe -nosdff

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_perf..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_perf.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

3.27.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.
<suppressed ~528 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_perf..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_perf.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_perf..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_perf.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Extracting gate netlist of module `\des_perf' to `<abc-temp-dir>/input.blif'..
Extracted 10352 gates and 12259 wires to a netlist network with 1905 inputs and 512 outputs.

3.33.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/result_09-03-2022T20-36-44/All_lut_synth_rs_area.json/des_perf/abc_tmp.scr 
ABC: netlist  : i/o =   1905/    512  and =   33841  lev =   18 (15.92)  mem = 0.46 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   34493  lev =   17 (15.91)  mem = 0.46 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   33679  lev =   17 (15.89)  mem = 0.45 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   30337  lev =   16 (15.28)  mem = 0.42 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.17 MB
ABC: netlist  : i/o =   1905/    512  and =   33935  lev =   18 (15.92)  mem = 0.46 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   34120  lev =   17 (15.93)  mem = 0.60 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   34039  lev =   18 (15.91)  mem = 0.60 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   33913  lev =   18 (15.97)  mem = 0.60 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   29439  lev =   16 (14.22)  mem = 0.53 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.16 MB
ABC: netlist  : i/o =   1905/    512  and =   33995  lev =   17 (15.84)  mem = 0.60 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   33858  lev =   18 (15.96)  mem = 0.59 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   33999  lev =   17 (15.94)  mem = 0.60 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   34187  lev =   17 (15.98)  mem = 0.60 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   33841  lev =   18 (15.92)  mem = 0.46 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   33841  lev =   18 (15.92)  mem = 0.59 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: netlist  : i/o =   1905/    512  and =   33937  lev =   18 (16.00)  mem = 0.46 MB
ABC: Mapping (K=6)  :  lut =   1792  edge =    7168  lev =    3 (3.00)  mem = 0.18 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1792
ABC RESULTS:        internal signals:     9842
ABC RESULTS:           input signals:     1905
ABC RESULTS:          output signals:      512
Removing temp directory.

yosys> opt

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_perf..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_perf.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..
Removed 0 unused cells and 2736 unused wires.
<suppressed ~145 debug messages>

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

3.34.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.34.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_perf..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_perf.
Performed a total of 0 changes.

yosys> opt_merge

3.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_perf'.
Removed a total of 0 cells.

yosys> opt_dff

3.34.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..

yosys> opt_expr

3.34.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_perf.

3.34.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.35. Executing HIERARCHY pass (managing design hierarchy).

3.35.1. Analyzing design hierarchy..
Top module:  \des_perf

3.35.2. Analyzing design hierarchy..
Top module:  \des_perf
Removed 0 unused modules.

yosys> stat

3.36. Printing statistics.

=== des_perf ===

   Number of wires:               2073
   Number of wire bits:           9684
   Number of public wires:         313
   Number of public wire bits:    7924
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3776
     $_DFF_P_                     1984
     $lut                         1792


yosys> opt_clean -purge

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_perf..
Removed 0 unused cells and 259 unused wires.
<suppressed ~259 debug messages>

yosys> write_verilog -noattr -nohex des_perf.verilog

3.38. Executing Verilog backend.

yosys> bmuxmap

3.38.1. Executing BMUXMAP pass.

yosys> demuxmap

3.38.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\des_perf'.

End of script. Logfile hash: 0772b68867, CPU: user 18.94s system 0.16s, MEM: 87.16 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 80% 1x abc (79 sec), 8% 22x opt_expr (8 sec), ...
