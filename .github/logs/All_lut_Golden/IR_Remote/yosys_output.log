
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k IR_Emitter_Carrier_Generator.v IR_Emitter_Interface.v IR_Emitter_Modulator.v IR_Emitter_Registers.v IR_Remote.v i2cSlave.v i2cSlaveSerialInterface.v i2cSlaveTop.v r1024x9_1024x9.v

yosys> verific -vlog2k IR_Emitter_Carrier_Generator.v IR_Emitter_Interface.v IR_Emitter_Modulator.v IR_Emitter_Registers.v IR_Remote.v i2cSlave.v i2cSlaveSerialInterface.v i2cSlaveTop.v r1024x9_1024x9.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Carrier_Generator.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Interface.v'
VERIFIC-INFO [VERI-2561] IR_Emitter_Interface.v:263: undeclared symbol 'IR_Emitter_MemRd_Stb', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Modulator.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Registers.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Remote.v'
VERIFIC-WARNING [VERI-1407] IR_Remote.v:125: attribute target identifier 'hierarchy' not found in this scope
VERIFIC-WARNING [VERI-1407] IR_Remote.v:124: attribute target identifier 'ql_pack' not found in this scope
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlave.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlaveSerialInterface.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlaveTop.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'r1024x9_1024x9.v'

yosys> synth_rs -top top -tech genesis -goal area -no_dsp -no_bram -verilog top.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] IR_Remote.v:29: compiling module 'top'
VERIFIC-INFO [VERI-1018] i2cSlaveTop.v:47: compiling module 'i2cSlaveTop(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] i2cSlave.v:48: compiling module 'i2cSlave(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] i2cSlaveSerialInterface.v:58: compiling module 'i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] IR_Emitter_Interface.v:29: compiling module 'IR_Emitter_Interface'
VERIFIC-INFO [VERI-1018] IR_Emitter_Carrier_Generator.v:32: compiling module 'IR_Emitter_Carrier_Generator'
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:236: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:264: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:438: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:466: expression size 32 truncated to fit in target size 8
VERIFIC-INFO [VERI-1018] IR_Emitter_Modulator.v:32: compiling module 'IR_Emitter_Modulator'
VERIFIC-WARNING [VERI-1209] IR_Emitter_Modulator.v:478: expression size 14 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] IR_Emitter_Modulator.v:508: expression size 32 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] IR_Emitter_Registers.v:31: compiling module 'IR_Emitter_Registers'
VERIFIC-INFO [VERI-1018] r1024x9_1024x9.v:17: compiling module 'r1024x9_1024x9'
VERIFIC-WARNING [VERI-1209] r1024x9_1024x9.v:40: expression size 22 truncated to fit in target size 9
Importing module top.
Importing module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
Importing module i2cSlave(I2C_ADDRESS=7'b0101010).
Importing module IR_Emitter_Interface.
Importing module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
Importing module IR_Emitter_Carrier_Generator.
Importing module IR_Emitter_Modulator.
Importing module IR_Emitter_Registers.
Importing module r1024x9_1024x9.

3.3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \IR_Emitter_Interface
Used module:         \r1024x9_1024x9
Used module:         \IR_Emitter_Registers
Used module:         \IR_Emitter_Modulator
Used module:         \IR_Emitter_Carrier_Generator
Used module:     \i2cSlaveTop(I2C_ADDRESS=7'b0101010)
Used module:         \i2cSlave(I2C_ADDRESS=7'b0101010)
Used module:             \i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)

3.3.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \IR_Emitter_Interface
Used module:         \r1024x9_1024x9
Used module:         \IR_Emitter_Registers
Used module:         \IR_Emitter_Modulator
Used module:         \IR_Emitter_Carrier_Generator
Used module:     \i2cSlaveTop(I2C_ADDRESS=7'b0101010)
Used module:         \i2cSlave(I2C_ADDRESS=7'b0101010)
Used module:             \i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module r1024x9_1024x9.
Optimizing module IR_Emitter_Registers.
<suppressed ~7 debug messages>
Optimizing module IR_Emitter_Modulator.
<suppressed ~8 debug messages>
Optimizing module IR_Emitter_Carrier_Generator.
<suppressed ~11 debug messages>
Optimizing module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
<suppressed ~20 debug messages>
Optimizing module IR_Emitter_Interface.
<suppressed ~3 debug messages>
Optimizing module i2cSlave(I2C_ADDRESS=7'b0101010).
<suppressed ~3 debug messages>
Optimizing module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
Optimizing module top.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module r1024x9_1024x9.
Deleting now unused module IR_Emitter_Registers.
Deleting now unused module IR_Emitter_Modulator.
Deleting now unused module IR_Emitter_Carrier_Generator.
Deleting now unused module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
Deleting now unused module IR_Emitter_Interface.
Deleting now unused module i2cSlave(I2C_ADDRESS=7'b0101010).
Deleting now unused module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
<suppressed ~15 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).
Demoting inout port top.IR_Emitter_Gpio_Port_io to output.
Demoting inout port top.CpuScl to input.
Demoting inout port top.CpuSda to output.

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1061 unused wires.
<suppressed ~181 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~57 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~126 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$Select_125$IR_Emitter_Carrier_Generator.v:383$1430: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n318$1282 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n326$1287 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$select_122$IR_Emitter_Carrier_Generator.v:383$1427: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n319$1283 $auto$opt_reduce.cc:134:opt_pmux$1885 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$select_140$IR_Emitter_Carrier_Generator.v:409$1437: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n203$1262 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n347$1291 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Select_153$IR_Emitter_Modulator.v:442$1615: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n296$1497 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n298$1499 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$select_143$IR_Emitter_Modulator.v:442$1611: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n296$1497 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n298$1499 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$select_80$IR_Emitter_Registers.v:312$1798: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n207$1685 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n208$1686 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n209$1687 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n6$1659 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n9$1661 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n12$1663 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n15$1665 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n18$1667 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n21$1669 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n24$1671 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n27$1673 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n30$1675 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n33$1677 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n36$1679 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n39$1681 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n42$1683 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$Select_235$i2cSlaveSerialInterface.v:474$1238: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n956$971 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n957$972 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_79$i2cSlaveSerialInterface.v:309$1143: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$950 $auto$opt_reduce.cc:134:opt_pmux$1887 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_81$i2cSlaveSerialInterface.v:309$1144: $auto$opt_reduce.cc:134:opt_pmux$1889
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_94$i2cSlaveSerialInterface.v:322$1145: $auto$opt_reduce.cc:134:opt_pmux$1891
  Optimizing cells in module \top.
Performed a total of 12 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$txData_reg$i2cSlaveSerialInterface.v:449$1225 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$streamSt_reg$i2cSlaveSerialInterface.v:449$1224 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$rxData_reg$i2cSlaveSerialInterface.v:449$1226 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$regAddr_reg$i2cSlaveSerialInterface.v:449$1228 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$dataOut_reg$i2cSlaveSerialInterface.v:449$1222 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$bitCnt_reg$i2cSlaveSerialInterface.v:449$1227 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$CurrState_SISt_reg$i2cSlaveSerialInterface.v:424$1201 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$startStopDetState_reg$i2cSlave.v:245$200 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaPipe_reg$i2cSlave.v:191$174 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaDelayed_reg$i2cSlave.v:214$183 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclPipe_reg$i2cSlave.v:191$176 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclDelayed_reg$i2cSlave.v:214$182 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$rstPipe_reg$i2cSlave.v:158$156 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.$verific$RegAddr_i_1ff_reg$IR_Emitter_Interface.v:324$351 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.$verific$RegRd_En_i_1ff_reg$IR_Emitter_Interface.v:324$350 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$RegData_o_reg$IR_Emitter_Registers.v:408$1840 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$RegAddr_i_1ff_reg$IR_Emitter_Registers.v:408$1839 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_o_reg$IR_Emitter_Registers.v:408$1849 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_Polarity_o_reg$IR_Emitter_Registers.v:408$1848 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Run_Modulator_o_reg$IR_Emitter_Registers.v:408$1841 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Mode_Modulator_o_reg$IR_Emitter_Registers.v:408$1842 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1846 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1845 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemAddr_Reg_o_reg$IR_Emitter_Registers.v:408$1847 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_reg$IR_Emitter_Registers.v:408$1853 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_Enable_reg$IR_Emitter_Registers.v:408$1854 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Port_o_reg$IR_Emitter_Registers.v:408$1850 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Dir_o_reg$IR_Emitter_Registers.v:408$1851 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1844 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1843 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Busy_Modulator_i_1ff_reg$IR_Emitter_Registers.v:408$1852 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_LED_En_o_reg$IR_Emitter_Modulator.v:260$1588 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_tc_reg$IR_Emitter_Modulator.v:260$1584 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_reg$IR_Emitter_Modulator.v:260$1581 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_ld_upr_reg$IR_Emitter_Modulator.v:260$1583 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_ld_lwr_reg$IR_Emitter_Modulator.v:260$1582 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_Signal_reg$IR_Emitter_Modulator.v:260$1587 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Modulator_State_reg$IR_Emitter_Modulator.v:260$1589 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemData_lwr_reg$IR_Emitter_Modulator.v:260$1585 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_upr_reg$IR_Emitter_Modulator.v:260$1580 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_lwr_reg$IR_Emitter_Modulator.v:260$1579 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_reg$IR_Emitter_Modulator.v:260$1576 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_ld_reg$IR_Emitter_Modulator.v:260$1578 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_ce_reg$IR_Emitter_Modulator.v:260$1577 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Carrier_Enable_o_reg$IR_Emitter_Modulator.v:260$1574 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Busy_Modulator_o_reg$IR_Emitter_Modulator.v:260$1575 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Signal_o_reg$IR_Emitter_Carrier_Generator.v:216$1385 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_ld_tc_reg$IR_Emitter_Carrier_Generator.v:216$1383 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1382 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_cntr_ld_reg$IR_Emitter_Carrier_Generator.v:216$1381 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_State_reg$IR_Emitter_Carrier_Generator.v:216$1384 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1380 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1379 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_0_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1378 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_0_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1377 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_Enable_o_reg$IR_Emitter_Carrier_Generator.v:216$1376 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1375 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1374 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_0_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1373 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_0_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1372 ($aldff) from module top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 17 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.u_i2cSlaveTop.u_i2cSlave.startStopDetState.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u_i2cSlaveTop.u_i2cSlave.startStopDetState' from module `\top'.
  found $dff cell for state register: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$startStopDetState_reg$i2cSlave.v:245$200
  root of input selection tree: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$149
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.rstPipe [1]
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.sclDeb
  found ctrl input: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$123
  found ctrl input: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$124
  found state code: 2'01
  found state code: 2'10
  found state code: 2'00
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$951
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$950
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$945
  ctrl inputs: { \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet \u_i2cSlaveTop.u_i2cSlave.rstPipe [1] $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$124 $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$123 \u_i2cSlaveTop.u_i2cSlave.sclDeb }
  ctrl outputs: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$945 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$950 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$951 $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$149 }
  transition:       2'00 5'00--0 ->       2'00 5'01000
  transition:       2'00 5'00001 ->       2'00 5'01000
  transition:       2'00 5'00101 ->       2'01 5'01001
  transition:       2'00 5'00-11 ->       2'10 5'01010
  transition:       2'00 5'10--- ->       2'00 5'01000
  transition:       2'00 5'-1--- ->       2'00 5'01000
  transition:       2'10 5'00--0 ->       2'10 5'10010
  transition:       2'10 5'00001 ->       2'10 5'10010
  transition:       2'10 5'00101 ->       2'01 5'10001
  transition:       2'10 5'00-11 ->       2'10 5'10010
  transition:       2'10 5'10--- ->       2'00 5'10000
  transition:       2'10 5'-1--- ->       2'00 5'10000
  transition:       2'01 5'00--0 ->       2'01 5'00101
  transition:       2'01 5'00001 ->       2'01 5'00101
  transition:       2'01 5'00101 ->       2'01 5'00101
  transition:       2'01 5'00-11 ->       2'10 5'00110
  transition:       2'01 5'10--- ->       2'00 5'00100
  transition:       2'01 5'-1--- ->       2'00 5'00100

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top'.
  Merging pattern 5'00001 and 5'00101 from group (2 2 5'00101).
  Merging pattern 5'00101 and 5'00001 from group (2 2 5'00101).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top'.
  Removing unused output signal $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$149 [0].
  Removing unused output signal $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$149 [1].

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892 (\u_i2cSlaveTop.u_i2cSlave.startStopDetState):

  Number of input signals:    5
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \u_i2cSlaveTop.u_i2cSlave.sclDeb
    1: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$123
    2: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$124
    3: \u_i2cSlaveTop.u_i2cSlave.rstPipe [1]
    4: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet

  Output signals:
    0: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$951
    1: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$950
    2: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$945

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'00--0   ->     0 3'010
      1:     0 5'00001   ->     0 3'010
      2:     0 5'10---   ->     0 3'010
      3:     0 5'-1---   ->     0 3'010
      4:     0 5'00-11   ->     1 3'010
      5:     0 5'00101   ->     2 3'010
      6:     1 5'10---   ->     0 3'100
      7:     1 5'-1---   ->     0 3'100
      8:     1 5'00--0   ->     1 3'100
      9:     1 5'00001   ->     1 3'100
     10:     1 5'00-11   ->     1 3'100
     11:     1 5'00101   ->     2 3'100
     12:     2 5'10---   ->     0 3'001
     13:     2 5'-1---   ->     0 3'001
     14:     2 5'00-11   ->     1 3'001
     15:     2 5'00--0   ->     2 3'001
     16:     2 5'00-01   ->     2 3'001

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~127 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$writeEn_reg$i2cSlaveSerialInterface.v:449$1221 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_writeEn, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.writeEn, rval = 1'0).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$txData_reg$i2cSlaveSerialInterface.v:449$1225 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_txData, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData, rval = 8'00000000).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$streamSt_reg$i2cSlaveSerialInterface.v:449$1224 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_streamSt, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt, rval = 2'00).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$sdaOut_reg$i2cSlaveSerialInterface.v:449$1220 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_sdaOut, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.sdaOut, rval = 1'1).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$rxData_reg$i2cSlaveSerialInterface.v:449$1226 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData, rval = 8'00000000).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$regAddr_reg$i2cSlaveSerialInterface.v:449$1228 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$dataOut_reg$i2cSlaveSerialInterface.v:449$1222 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, rval = 8'00000000).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$clearStartStopDet_reg$i2cSlaveSerialInterface.v:449$1223 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_clearStartStopDet, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet, rval = 1'0).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$bitCnt_reg$i2cSlaveSerialInterface.v:449$1227 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt, rval = 3'000).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$I2CReadDataLatchedOut_reg$i2cSlaveSerialInterface.v:476$1240 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n959$974, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.I2CReadDataLatchedOut, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$1945 ($sdff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n959$974, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.I2CReadDataLatchedOut).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$CurrState_SISt_reg$i2cSlaveSerialInterface.v:424$1201 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.NextState_SISt, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.CurrState_SISt, rval = 4'0000).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$startEdgeDet_reg$i2cSlave.v:245$201 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n146$121, Q = \u_i2cSlaveTop.u_i2cSlave.startEdgeDet, rval = 1'0).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaPipe_reg$i2cSlave.v:191$174 ($dff) from module top (D = { \u_i2cSlaveTop.u_i2cSlave.sdaPipe [3:0] \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.sdaOut }, Q = \u_i2cSlaveTop.u_i2cSlave.sdaPipe, rval = 5'11111).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaDelayed_reg$i2cSlave.v:214$183 ($dff) from module top (D = { \u_i2cSlaveTop.u_i2cSlave.sdaDelayed [0] \u_i2cSlaveTop.u_i2cSlave.sdaDeb }, Q = \u_i2cSlaveTop.u_i2cSlave.sdaDelayed, rval = 2'11).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaDeb_reg$i2cSlave.v:191$175 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n65$114, Q = \u_i2cSlaveTop.u_i2cSlave.sdaDeb, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$1957 ($sdff) from module top (D = 1'0, Q = \u_i2cSlaveTop.u_i2cSlave.sdaDeb).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclPipe_reg$i2cSlave.v:191$176 ($dff) from module top (D = { \u_i2cSlaveTop.u_i2cSlave.sclPipe [3:0] \CpuScl }, Q = \u_i2cSlaveTop.u_i2cSlave.sclPipe, rval = 5'11111).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclDelayed_reg$i2cSlave.v:214$182 ($dff) from module top (D = { \u_i2cSlaveTop.u_i2cSlave.sclDelayed [3:0] \u_i2cSlaveTop.u_i2cSlave.sclDeb }, Q = \u_i2cSlaveTop.u_i2cSlave.sclDelayed, rval = 5'11111).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclDeb_reg$i2cSlave.v:191$177 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n57$110, Q = \u_i2cSlaveTop.u_i2cSlave.sclDeb, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$1963 ($sdff) from module top (D = 1'0, Q = \u_i2cSlaveTop.u_i2cSlave.sclDeb).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$rstPipe_reg$i2cSlave.v:158$156 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.rstPipe [0], Q = \u_i2cSlaveTop.u_i2cSlave.rstPipe [1], rval = 1'1).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_o_reg$IR_Emitter_Registers.v:408$1849 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [2], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_LED_Gpio_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_Polarity_o_reg$IR_Emitter_Registers.v:408$1848 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [3], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_LED_Gpio_Polarity_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Mode_Modulator_o_reg$IR_Emitter_Registers.v:408$1842 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [1:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Mode_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1846 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1846 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [4:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_o [12:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1845 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1845 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [4:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_o [12:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemAddr_Reg_o_reg$IR_Emitter_Registers.v:408$1847 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [5:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_reg$IR_Emitter_Registers.v:408$1853 ($adff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n386$1704, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Interrupt).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_Enable_reg$IR_Emitter_Registers.v:408$1854 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [5], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Interrupt_Enable).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Port_o_reg$IR_Emitter_Registers.v:408$1850 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Dir_o_reg$IR_Emitter_Registers.v:408$1851 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1844 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1844 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_o [15:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1843 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1843 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_o [15:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_tc_reg$IR_Emitter_Modulator.v:260$1584 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_reg$IR_Emitter_Modulator.v:260$1581 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemData_lwr_reg$IR_Emitter_Modulator.v:260$1585 ($adff) from module top (D = \u_IR_Emitter_Interface.IR_Emitter_MemData_o, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemData_lwr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_upr_reg$IR_Emitter_Modulator.v:260$1580 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_lwr, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_upr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_lwr_reg$IR_Emitter_Modulator.v:260$1579 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_lwr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_reg$IR_Emitter_Modulator.v:260$1576 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1380 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1379 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1375 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1374 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 52 unused cells and 62 unused wires.
<suppressed ~53 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from mux cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$mux_11$i2cSlave.v:156$155 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_138$i2cSlaveSerialInterface.v:366$1172 ($mux).
Removed top 1 bits (of 7) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_115$i2cSlaveSerialInterface.v:342$1158 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_232$i2cSlaveSerialInterface.v:462$1233 ($eq).
Removed top 1 bits (of 4) from mux cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_50$i2cSlaveSerialInterface.v:282$1125 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1123 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1107 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_22$i2cSlaveSerialInterface.v:241$1105 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1923 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1919 ($eq).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1950 ($ne).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_5$IR_Emitter_Registers.v:239$1752 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_8$IR_Emitter_Registers.v:240$1755 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_11$IR_Emitter_Registers.v:242$1758 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_14$IR_Emitter_Registers.v:243$1761 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_17$IR_Emitter_Registers.v:245$1764 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_20$IR_Emitter_Registers.v:246$1767 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_23$IR_Emitter_Registers.v:248$1770 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_26$IR_Emitter_Registers.v:249$1773 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_29$IR_Emitter_Registers.v:251$1776 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_32$IR_Emitter_Registers.v:252$1779 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_35$IR_Emitter_Registers.v:254$1782 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_38$IR_Emitter_Registers.v:256$1785 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_41$IR_Emitter_Registers.v:257$1788 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_63$IR_Emitter_Registers.v:283$1792 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_64$IR_Emitter_Registers.v:285$1793 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1932 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1930 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$mux_79$IR_Emitter_Modulator.v:339$1599 ($mux).
Removed top 14 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_196$IR_Emitter_Modulator.v:529$1651 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1627 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_176$IR_Emitter_Modulator.v:477$1628 ($eq).
Removed top 1 bits (of 17) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1639 ($sub).
Removed top 16 bits (of 17) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1639 ($sub).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1639 ($sub).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_188$IR_Emitter_Modulator.v:507$1641 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_193$IR_Emitter_Modulator.v:528$1648 ($eq).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$1386 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$1386 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$1386 ($sub).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_62$IR_Emitter_Carrier_Generator.v:243$1392 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_65$IR_Emitter_Carrier_Generator.v:245$1395 ($eq).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$1399 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$1399 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$1399 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_77$IR_Emitter_Carrier_Generator.v:272$1403 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_89$IR_Emitter_Carrier_Generator.v:302$1412 ($eq).
Removed top 1 bits (of 2) from mux cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$mux_99$IR_Emitter_Carrier_Generator.v:338$1416 ($mux).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$1443 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$1443 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$1443 ($sub).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_155$IR_Emitter_Carrier_Generator.v:445$1449 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_158$IR_Emitter_Carrier_Generator.v:447$1452 ($eq).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$1456 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$1456 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$1456 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_170$IR_Emitter_Carrier_Generator.v:474$1462 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_75$IR_Emitter_Interface.v:296$331 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_72$IR_Emitter_Interface.v:295$330 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_69$IR_Emitter_Interface.v:294$329 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_51$IR_Emitter_Interface.v:282$322 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_48$IR_Emitter_Interface.v:281$321 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_45$IR_Emitter_Interface.v:280$320 ($eq).
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n175$1318.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n223$1321.
Removed top 1 bits (of 2) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n288$1326.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n364$1337.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n412$1340.
Removed top 2 bits (of 3) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n214$1531.
Removed top 1 bits (of 17) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n432$1545.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$n37$1865.
Removed top 1 bits (of 2) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n16$129.
Removed top 1 bits (of 4) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n247$1010.
Removed top 1 bits (of 4) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n559$1051.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 30 unused cells and 68 unused wires.
<suppressed ~31 debug messages>

yosys> techmap

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.18.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $adff.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=13:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=13:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=13:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=13:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=13:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=13:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=16:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=16:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=16:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=16:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=16:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=16:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_90_alu for cells of type $alu.
Using template $paramod$215440792383f7884e57d9c95f84e9552d0bf4ac\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~1670 debug messages>

yosys> alumacc

3.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.20. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1316 debug messages>

yosys> opt_merge -nomux

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1008 debug messages>
Removed a total of 336 cells.

yosys> opt_muxtree

3.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 62 unused cells and 684 unused wires.
<suppressed ~63 debug messages>

yosys> opt_expr

3.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.20.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$4642 ($_DFF_PN0_) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_Signal_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_Signal).
Adding EN signal on $auto$ff.cc:262:slice$2513 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [7], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [7]).
Adding EN signal on $auto$ff.cc:262:slice$2512 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [6], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [6]).
Adding EN signal on $auto$ff.cc:262:slice$2511 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [5], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [5]).
Adding EN signal on $auto$ff.cc:262:slice$2510 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [4], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [4]).
Adding EN signal on $auto$ff.cc:262:slice$2509 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [3], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [3]).
Adding EN signal on $auto$ff.cc:262:slice$2508 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [2]).
Adding EN signal on $auto$ff.cc:262:slice$2507 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [1]).
Adding EN signal on $auto$ff.cc:262:slice$2506 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [0]).
Adding EN signal on $auto$ff.cc:262:slice$2505 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$2611 [7], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [7]).
Adding EN signal on $auto$ff.cc:262:slice$2504 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$2611 [6], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [6]).
Adding EN signal on $auto$ff.cc:262:slice$2503 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$2611 [5], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [5]).
Adding EN signal on $auto$ff.cc:262:slice$2502 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$2611 [4], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [4]).
Adding EN signal on $auto$ff.cc:262:slice$2501 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$2611 [3], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [3]).
Adding EN signal on $auto$ff.cc:262:slice$2500 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$2611 [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [2]).
Adding EN signal on $auto$ff.cc:262:slice$2499 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$2611 [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [1]).
Adding EN signal on $auto$ff.cc:262:slice$2498 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$2611 [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [0]).
Adding EN signal on $auto$ff.cc:262:slice$2497 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_clearStartStopDet, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet).
Adding EN signal on $auto$ff.cc:262:slice$2496 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt [2]).
Adding EN signal on $auto$ff.cc:262:slice$2495 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt [1]).
Adding EN signal on $auto$ff.cc:262:slice$2494 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt [0]).
Adding EN signal on $auto$ff.cc:262:slice$2493 ($_SDFF_PP1_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_sdaOut, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.sdaOut).
Adding EN signal on $auto$ff.cc:262:slice$2492 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_streamSt [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt [1]).
Adding EN signal on $auto$ff.cc:262:slice$2491 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_streamSt [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt [0]).
Adding EN signal on $auto$ff.cc:262:slice$2490 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [7], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [7]).
Adding EN signal on $auto$ff.cc:262:slice$2489 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [6], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [6]).
Adding EN signal on $auto$ff.cc:262:slice$2488 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [5], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [5]).
Adding EN signal on $auto$ff.cc:262:slice$2487 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [4], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [4]).
Adding EN signal on $auto$ff.cc:262:slice$2486 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [3], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [3]).
Adding EN signal on $auto$ff.cc:262:slice$2485 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [2]).
Adding EN signal on $auto$ff.cc:262:slice$2484 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [1]).
Adding EN signal on $auto$ff.cc:262:slice$2483 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [0]).
Adding EN signal on $auto$ff.cc:262:slice$2481 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.NextState_SISt [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.CurrState_SISt [2]).
Adding EN signal on $auto$ff.cc:262:slice$2479 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.NextState_SISt [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.CurrState_SISt [0]).
Adding EN signal on $auto$ff.cc:262:slice$2478 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [7], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [7]).
Adding EN signal on $auto$ff.cc:262:slice$2477 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [6], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [6]).
Adding EN signal on $auto$ff.cc:262:slice$2476 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [5], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [5]).
Adding EN signal on $auto$ff.cc:262:slice$2475 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [4], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [4]).
Adding EN signal on $auto$ff.cc:262:slice$2474 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [3], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [3]).
Adding EN signal on $auto$ff.cc:262:slice$2473 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [2]).
Adding EN signal on $auto$ff.cc:262:slice$2472 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [1]).
Adding EN signal on $auto$ff.cc:262:slice$2471 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [0]).
Adding EN signal on $auto$ff.cc:262:slice$2316 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_writeEn, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.writeEn).

yosys> opt_clean

3.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 16 unused cells and 386 unused wires.
<suppressed ~18 debug messages>

yosys> opt_expr

3.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1388 debug messages>

3.20.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5934 debug messages>
Removed a total of 1978 cells.

yosys> opt_dff

3.20.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1829 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.20.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.20.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.20.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.20.30. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> stat

3.23. Printing statistics.

=== top ===

   Number of wires:               1080
   Number of wire bits:           3768
   Number of public wires:         342
   Number of public wire bits:    1377
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2254
     $_AND_                        233
     $_DFFE_PN0P_                  136
     $_DFFE_PN1P_                    9
     $_DFFE_PP_                     80
     $_DFF_PN0_                     54
     $_DFF_P_                        4
     $_MUX_                        968
     $_NOT_                        196
     $_OR_                         425
     $_SDFFE_PP0P_                  34
     $_SDFFE_PP1N_                   2
     $_SDFFE_PP1P_                   1
     $_SDFF_PN1_                     1
     $_SDFF_PP0_                     3
     $_SDFF_PP1_                    17
     $_XOR_                         91


yosys> shregmap -minlen 8 -maxlen 20

3.24. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.25. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.26. Printing statistics.

=== top ===

   Number of wires:               1175
   Number of wire bits:           3863
   Number of public wires:         342
   Number of public wire bits:    1377
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2349
     $_AND_                        233
     $_DFFE_PN0P_                  136
     $_DFFE_PN1P_                    9
     $_DFFE_PP0P_                   80
     $_DFF_PN0_                     54
     $_DFF_P_                       62
     $_MUX_                       1063
     $_NOT_                        196
     $_OR_                         425
     $_XOR_                         91


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.27. Executing TECHMAP pass (map to technology primitives).

3.27.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.27.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.27.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFE_PN1P_ for cells of type $_DFFE_PN1P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~549 debug messages>

yosys> opt_expr -mux_undef

3.28. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~429 debug messages>

yosys> simplemap

3.29. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.31. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.32. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1662 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.34.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~184 debug messages>

yosys> opt_merge

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_dff

3.35.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.35.5. Finished fast OPT passes.

yosys> memory_map

3.36. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.37. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.37.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.37.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.37.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.37.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.37.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr -full

3.37.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.37.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.38. Executing TECHMAP pass (map to technology primitives).

3.38.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.38.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.39.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.40. Executing ABC pass (technology mapping using ABC).

3.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1656 gates and 1998 wires to a netlist network with 340 inputs and 225 outputs.

3.40.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/yosys_verific_rs/result_18-03-2022T17-26-14/All_lut_synth_rs_area.json/IR_Remote/abc_tmp.scr 
ABC: netlist  : i/o =    340/    225  and =    2005  lev =   18 (7.14)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    424  edge =    1808  lev =    9 (2.99)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2006  lev =   18 (7.19)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    415  edge =    1781  lev =    7 (2.68)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2033  lev =   20 (7.13)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    412  edge =    1772  lev =    7 (2.70)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2033  lev =   17 (6.57)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    405  edge =    1762  lev =    7 (2.72)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2038  lev =   17 (7.08)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    400  edge =    1775  lev =    6 (2.67)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2036  lev =   18 (7.09)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    405  edge =    1777  lev =    8 (2.71)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2027  lev =   20 (7.15)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    409  edge =    1770  lev =    7 (2.71)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2041  lev =   22 (7.18)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    408  edge =    1772  lev =    7 (2.72)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2039  lev =   17 (6.52)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    406  edge =    1780  lev =    7 (2.69)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2039  lev =   21 (7.10)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    406  edge =    1774  lev =    7 (2.65)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2040  lev =   17 (7.04)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    406  edge =    1779  lev =    7 (2.64)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2052  lev =   17 (7.07)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    407  edge =    1784  lev =    6 (2.67)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2054  lev =   20 (7.08)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    406  edge =    1783  lev =    6 (2.67)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2038  lev =   17 (7.08)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    400  edge =    1775  lev =    6 (2.67)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2038  lev =   17 (7.08)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    399  edge =    1774  lev =    7 (2.68)  mem = 0.02 MB
ABC: netlist  : i/o =    340/    225  and =    2043  lev =   17 (7.10)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    399  edge =    1774  lev =    7 (2.68)  mem = 0.02 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      404
ABC RESULTS:        internal signals:     1433
ABC RESULTS:           input signals:      340
ABC RESULTS:          output signals:      225
Removing temp directory.

yosys> opt

3.41. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.41.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.41.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 1294 unused wires.
<suppressed ~50 debug messages>

yosys> opt_expr

3.41.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.41.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.41.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.41.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.41.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.41.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.42. Executing HIERARCHY pass (managing design hierarchy).

3.42.1. Analyzing design hierarchy..
Top module:  \top

3.42.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.43. Printing statistics.

=== top ===

   Number of wires:                568
   Number of wire bits:           1448
   Number of public wires:         302
   Number of public wire bits:    1182
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                735
     $lut                          402
     dff                            62
     dffsre                        271


yosys> opt_clean -purge

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 171 unused wires.
<suppressed ~171 debug messages>

yosys> write_verilog -noattr -nohex top.verilog

3.45. Executing Verilog backend.

yosys> bmuxmap

3.45.1. Executing BMUXMAP pass.

yosys> demuxmap

3.45.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\top'.

Warnings: 9 unique messages, 9 total
End of script. Logfile hash: e81617f82f, CPU: user 5.02s system 0.06s, MEM: 30.97 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 48% 1x abc (4 sec), 16% 34x opt_expr (1 sec), ...
real 9.73
user 9.17
sys 0.56
