
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k usbf_crc16.v usbf_crc5.v usbf_defines.v usbf_ep_rf.v usbf_ep_rf_dummy.v usbf_idma.v usbf_mem_arb.v usbf_pa.v usbf_pd.v usbf_pe.v usbf_pl.v usbf_rf.v usbf_top.v usbf_utmi_if.v usbf_utmi_ls.v usbf_wb.v

yosys> verific -vlog2k usbf_crc16.v usbf_crc5.v usbf_defines.v usbf_ep_rf.v usbf_ep_rf_dummy.v usbf_idma.v usbf_mem_arb.v usbf_pa.v usbf_pd.v usbf_pe.v usbf_pl.v usbf_rf.v usbf_top.v usbf_utmi_if.v usbf_utmi_ls.v usbf_wb.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_crc16.v'
VERIFIC-INFO [VERI-1328] usbf_crc16.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_crc16.v:76: back to file 'usbf_crc16.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_crc5.v'
VERIFIC-INFO [VERI-1328] usbf_crc5.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_crc5.v:76: back to file 'usbf_crc5.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_defines.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_ep_rf.v'
VERIFIC-INFO [VERI-1328] usbf_ep_rf.v:93: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_ep_rf.v:93: back to file 'usbf_ep_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_ep_rf_dummy.v'
VERIFIC-INFO [VERI-1328] usbf_ep_rf_dummy.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_ep_rf_dummy.v:76: back to file 'usbf_ep_rf_dummy.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_idma.v'
VERIFIC-INFO [VERI-1328] usbf_idma.v:110: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_idma.v:110: back to file 'usbf_idma.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_mem_arb.v'
VERIFIC-INFO [VERI-1328] usbf_mem_arb.v:90: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_mem_arb.v:90: back to file 'usbf_mem_arb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pa.v'
VERIFIC-INFO [VERI-1328] usbf_pa.v:94: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pa.v:94: back to file 'usbf_pa.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pd.v'
VERIFIC-INFO [VERI-1328] usbf_pd.v:101: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pd.v:101: back to file 'usbf_pd.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pe.v'
VERIFIC-INFO [VERI-1328] usbf_pe.v:116: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pe.v:116: back to file 'usbf_pe.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pl.v'
VERIFIC-INFO [VERI-1328] usbf_pl.v:100: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pl.v:100: back to file 'usbf_pl.v'
VERIFIC-INFO [VERI-2561] usbf_pl.v:384: undeclared symbol 'send_zero_length', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_rf.v'
VERIFIC-INFO [VERI-1328] usbf_rf.v:108: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_rf.v:108: back to file 'usbf_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_top.v'
VERIFIC-INFO [VERI-1328] usbf_top.v:110: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_top.v:110: back to file 'usbf_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_utmi_if.v'
VERIFIC-INFO [VERI-1328] usbf_utmi_if.v:101: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_utmi_if.v:101: back to file 'usbf_utmi_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_utmi_ls.v'
VERIFIC-INFO [VERI-1328] usbf_utmi_ls.v:99: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_utmi_ls.v:99: back to file 'usbf_utmi_ls.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_wb.v'
VERIFIC-INFO [VERI-1328] usbf_wb.v:95: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_wb.v:95: back to file 'usbf_wb.v'

yosys> synth_rs -top usbf_top -tech genesis -goal area -de -no_dsp -no_bram -verilog usbf_top.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top usbf_top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] usbf_top.v:112: compiling module 'usbf_top'
VERIFIC-INFO [VERI-1018] usbf_utmi_if.v:103: compiling module 'usbf_utmi_if'
VERIFIC-INFO [VERI-1018] usbf_utmi_ls.v:101: compiling module 'usbf_utmi_ls'
VERIFIC-WARNING [VERI-1173] usbf_utmi_ls.v:448: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pl.v:102: compiling module 'usbf_pl'
VERIFIC-INFO [VERI-1018] usbf_pd.v:103: compiling module 'usbf_pd'
VERIFIC-INFO [VERI-1018] usbf_crc5.v:84: compiling module 'usbf_crc5'
VERIFIC-INFO [VERI-1018] usbf_crc16.v:84: compiling module 'usbf_crc16'
VERIFIC-WARNING [VERI-1173] usbf_pd.v:373: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pa.v:96: compiling module 'usbf_pa'
VERIFIC-WARNING [VERI-1173] usbf_pa.v:314: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_idma.v:112: compiling module 'usbf_idma'
VERIFIC-WARNING [VERI-1209] usbf_idma.v:289: expression size 17 truncated to fit in target size 15
VERIFIC-WARNING [VERI-1173] usbf_idma.v:462: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pe.v:118: compiling module 'usbf_pe'
VERIFIC-WARNING [VERI-1173] usbf_pe.v:438: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:446: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:453: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:460: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:479: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:424: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:493: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:532: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:501: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:845: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_mem_arb.v:92: compiling module 'usbf_mem_arb'
VERIFIC-INFO [VERI-1018] usbf_rf.v:111: compiling module 'usbf_rf'
VERIFIC-WARNING [VERI-1173] usbf_rf.v:307: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_rf.v:391: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_ep_rf.v:96: compiling module 'usbf_ep_rf'
VERIFIC-INFO [VERI-1018] usbf_ep_rf_dummy.v:79: compiling module 'usbf_ep_rf_dummy'
VERIFIC-INFO [VERI-1018] usbf_wb.v:97: compiling module 'usbf_wb'
VERIFIC-WARNING [VERI-1173] usbf_wb.v:209: synthesis - simulation differences may occur when using full_case directive
Importing module usbf_top.
Importing module usbf_utmi_if.
Importing module usbf_pl.
Importing module usbf_utmi_ls.
Importing module usbf_mem_arb.
Importing module usbf_pd.
Importing module usbf_crc5.
Importing module usbf_crc16.
Importing module usbf_pa.
Importing module usbf_idma.
Importing module usbf_pe.
Importing module usbf_rf.
Importing module usbf_ep_rf.
Importing module usbf_wb.
Importing module usbf_ep_rf_dummy.

3.3.1. Analyzing design hierarchy..
Top module:  \usbf_top
Used module:     \usbf_wb
Used module:     \usbf_rf
Used module:         \usbf_ep_rf_dummy
Used module:         \usbf_ep_rf
Used module:     \usbf_mem_arb
Used module:     \usbf_pl
Used module:         \usbf_pe
Used module:         \usbf_idma
Used module:         \usbf_pa
Used module:             \usbf_crc16
Used module:         \usbf_pd
Used module:             \usbf_crc5
Used module:     \usbf_utmi_if
Used module:         \usbf_utmi_ls

3.3.2. Analyzing design hierarchy..
Top module:  \usbf_top
Used module:     \usbf_wb
Used module:     \usbf_rf
Used module:         \usbf_ep_rf_dummy
Used module:         \usbf_ep_rf
Used module:     \usbf_mem_arb
Used module:     \usbf_pl
Used module:         \usbf_pe
Used module:         \usbf_idma
Used module:         \usbf_pa
Used module:             \usbf_crc16
Used module:         \usbf_pd
Used module:             \usbf_crc5
Used module:     \usbf_utmi_if
Used module:         \usbf_utmi_ls
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_ep_rf_dummy.
<suppressed ~4 debug messages>
Optimizing module usbf_wb.
<suppressed ~1 debug messages>
Optimizing module usbf_ep_rf.
<suppressed ~15 debug messages>
Optimizing module usbf_rf.
<suppressed ~5 debug messages>
Optimizing module usbf_pe.
<suppressed ~10 debug messages>
Optimizing module usbf_idma.
<suppressed ~7 debug messages>
Optimizing module usbf_pa.
<suppressed ~1 debug messages>
Optimizing module usbf_crc16.
Optimizing module usbf_crc5.
Optimizing module usbf_pd.
<suppressed ~3 debug messages>
Optimizing module usbf_mem_arb.
Optimizing module usbf_utmi_ls.
<suppressed ~6 debug messages>
Optimizing module usbf_pl.
<suppressed ~4 debug messages>
Optimizing module usbf_utmi_if.
<suppressed ~1 debug messages>
Optimizing module usbf_top.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module usbf_ep_rf_dummy.
Deleting now unused module usbf_wb.
Deleting now unused module usbf_ep_rf.
Deleting now unused module usbf_rf.
Deleting now unused module usbf_pe.
Deleting now unused module usbf_idma.
Deleting now unused module usbf_pa.
Deleting now unused module usbf_crc16.
Deleting now unused module usbf_crc5.
Deleting now unused module usbf_pd.
Deleting now unused module usbf_mem_arb.
Deleting now unused module usbf_utmi_ls.
Deleting now unused module usbf_pl.
Deleting now unused module usbf_utmi_if.
<suppressed ~29 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~36 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 62 unused cells and 6319 unused wires.
<suppressed ~812 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module usbf_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~97 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~99 debug messages>
Removed a total of 33 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~216 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
    New ctrl vector for $pmux cell $flatten\u1.\u0.$verific$Select_213$usbf_pd.v:433$2753: { $flatten\u1.\u0.$verific$n584$2499 $flatten\u1.\u0.$verific$n586$2501 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_148$usbf_pa.v:382$3090: { $flatten\u1.\u1.$verific$n401$2934 $flatten\u1.\u1.$verific$n406$2939 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_154$usbf_pa.v:382$3096: { $flatten\u1.\u1.$verific$n402$2935 $flatten\u1.\u1.$verific$n403$2936 $flatten\u1.\u1.$verific$n404$2937 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_156$usbf_pa.v:382$3098: { $flatten\u1.\u1.$verific$n404$2937 $flatten\u1.\u1.$verific$n405$2938 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_158$usbf_pa.v:382$3099: { $flatten\u1.\u1.$verific$n404$2937 $flatten\u1.\u1.$verific$n405$2938 }
    New ctrl vector for $pmux cell $flatten\u1.\u2.$verific$Select_273$usbf_idma.v:631$3429: { $flatten\u1.\u2.$verific$n1445$3170 $flatten\u1.\u2.$verific$n1463$3178 }
    New ctrl vector for $pmux cell $flatten\u1.\u2.$verific$Select_277$usbf_idma.v:631$3433: { $flatten\u1.\u2.$verific$n1446$3171 $flatten\u1.\u2.$verific$n1447$3172 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$Select_688$usbf_pe.v:1091$4274: { $flatten\u1.\u3.$verific$n1654$3686 $flatten\u1.\u3.$verific$n1660$3692 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_115$usbf_pe.v:485$3893: { $flatten\u1.\u3.$verific$n253$3471 $auto$opt_reduce.cc:134:opt_pmux$9185 $flatten\u1.\u3.$verific$n258$3475 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_166$usbf_pe.v:487$3947: { $flatten\u1.\u3.$verific$n275$3483 $flatten\u1.\u3.$verific$n283$3487 $flatten\u1.\u3.$verific$n285$3489 $auto$opt_reduce.cc:134:opt_pmux$9189 $auto$opt_reduce.cc:134:opt_pmux$9187 $flatten\u1.\u3.$verific$n311$3500 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_172$usbf_pe.v:498$3953: { $flatten\u1.\u3.$verific$n319$3502 $flatten\u1.\u3.$verific$n320$3503 $flatten\u1.\u3.$verific$n321$3504 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_207$usbf_pe.v:538$3956: $auto$opt_reduce.cc:134:opt_pmux$9191
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_267$usbf_pe.v:539$3970: { $flatten\u1.\u3.$verific$n423$3505 $auto$opt_reduce.cc:134:opt_pmux$9197 $auto$opt_reduce.cc:134:opt_pmux$9195 $auto$opt_reduce.cc:134:opt_pmux$9193 $flatten\u1.\u3.$verific$n311$3500 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_686$usbf_pe.v:1091$4272: { $flatten\u1.\u3.$verific$n1654$3686 $flatten\u1.\u3.$verific$n1660$3692 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_689$usbf_pe.v:1091$4275: { $flatten\u1.\u3.$verific$n1654$3686 $flatten\u1.\u3.$verific$n1656$3688 $flatten\u1.\u3.$verific$n1657$3689 $flatten\u1.\u3.$verific$n1658$3690 $flatten\u1.\u3.$verific$n1659$3691 $flatten\u1.\u3.$verific$n1660$3692 $flatten\u1.\u3.$verific$n1661$3693 $flatten\u1.\u3.$verific$n1662$3694 $auto$opt_reduce.cc:134:opt_pmux$9199 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_725$usbf_pe.v:449$4266: $flatten\u1.\u3.$verific$n194$3466
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_79$usbf_pe.v:441$3871: $flatten\u1.\u3.$verific$n183$3464
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_358$usbf_utmi_ls.v:650$2359: { $flatten\u0.\u0.$verific$n1015$2016 $flatten\u0.\u0.$verific$n1024$2025 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_360$usbf_utmi_ls.v:650$2361: { $flatten\u0.\u0.$verific$n1017$2018 $flatten\u0.\u0.$verific$n1020$2021 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_367$usbf_utmi_ls.v:650$2368: { $flatten\u0.\u0.$verific$n1022$2023 $flatten\u0.\u0.$verific$n1023$2024 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_333$usbf_utmi_ls.v:650$2335: { $flatten\u0.\u0.$verific$n1011$2012 $flatten\u0.\u0.$verific$n1012$2013 $flatten\u0.\u0.$verific$n1013$2014 $flatten\u0.\u0.$verific$n1014$2015 $flatten\u0.\u0.$verific$n1015$2016 $flatten\u0.\u0.$verific$n1017$2018 $flatten\u0.\u0.$verific$n1020$2021 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_336$usbf_utmi_ls.v:650$2338: { $flatten\u0.\u0.$verific$n1028$2028 $flatten\u0.\u0.$verific$n1012$2013 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_339$usbf_utmi_ls.v:650$2341: { $flatten\u0.\u0.$verific$n1031$2030 $flatten\u0.\u0.$verific$n1012$2013 $flatten\u0.\u0.$verific$n1017$2018 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_345$usbf_utmi_ls.v:650$2346: { $flatten\u0.\u0.$verific$n1015$2016 $flatten\u0.\u0.$verific$n1038$2033 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_348$usbf_utmi_ls.v:650$2349: { $flatten\u0.\u0.$verific$n1040$2034 $flatten\u0.\u0.$verific$n1014$2015 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_351$usbf_utmi_ls.v:650$2352: { $flatten\u0.\u0.$verific$n1012$2013 $flatten\u0.\u0.$verific$n1013$2014 $flatten\u0.\u0.$verific$n1019$2020 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_353$usbf_utmi_ls.v:650$2354: { $flatten\u0.\u0.$verific$n1012$2013 $flatten\u0.\u0.$verific$n1013$2014 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_356$usbf_utmi_ls.v:650$2357: { $flatten\u0.\u0.$verific$n1015$2016 $flatten\u0.\u0.$verific$n1064$2039 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_77$usbf_wb.v:278$9161: { $flatten\u5.$verific$n347$9090 $auto$opt_reduce.cc:134:opt_pmux$9201 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_79$usbf_wb.v:278$9163: { $flatten\u5.$verific$n347$9090 $flatten\u5.$verific$n348$9091 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_84$usbf_wb.v:278$9168: { $auto$opt_reduce.cc:134:opt_pmux$9203 $flatten\u5.$verific$n350$9093 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_80$usbf_wb.v:278$9164: { $flatten\u5.$verific$n347$9090 $auto$opt_reduce.cc:134:opt_pmux$9205 $flatten\u5.$verific$n350$9093 $flatten\u5.$verific$n351$9094 $flatten\u5.$verific$n352$9095 }
  Optimizing cells in module \usbf_top.
Performed a total of 32 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$VStatus_r_reg$usbf_top.v:269$24 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u5.$verific$wb_data_o_reg$usbf_wb.v:166$9118 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u5.$verific$state_reg$usbf_wb.v:198$9137 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_stat_r_reg$usbf_rf.v:322$4712 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_ctrl_reg$usbf_rf.v:345$4727 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_ctrl_r_reg$usbf_rf.v:342$4725 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$chirp_cnt_reg$usbf_utmi_ls.v:399$2272 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$intb_msk_reg$usbf_rf.v:388$4755 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$inta_msk_reg$usbf_rf.v:388$4754 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4756 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.$verific$rx_data_reg$usbf_utmi_if.v:204$1241 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$OpMode_reg$usbf_utmi_ls.v:256$2139 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$funct_adr_reg$usbf_rf.v:370$4743 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$dout_reg$usbf_rf.v:412$4758 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4889 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$buf1_reg$usbf_rf.v:558$4955 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$buf0_reg$usbf_rf.v:525$4922 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$tx_data_to_cnt_reg$usbf_pe.v:768$4142 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$token_pid_sel_reg$usbf_pe.v:414$3865 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$this_dpid_reg$usbf_pe.v:539$3971 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$state_reg$usbf_pe.v:823$4196 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$size_next_r_reg$usbf_pe.v:665$4070 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$rx_ack_to_cnt_reg$usbf_pe.v:751$4132 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$next_dpid_reg$usbf_pe.v:487$3948 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$new_sizeb_reg$usbf_pe.v:654$4063 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$new_size_reg$usbf_pe.v:657$4066 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$idin_reg$usbf_pe.v:704$4104 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$adr_reg$usbf_pe.v:605$4016 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$adr_r_reg$usbf_pe.v:662$4068 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$state_reg$usbf_idma.v:449$3396 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$sizu_c_reg$usbf_idma.v:346$3332 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$sizd_c_reg$usbf_idma.v:326$3316 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rx_data_st_r_reg$usbf_idma.v:265$3269 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rd_buf1_reg$usbf_idma.v:403$3375 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rd_buf0_reg$usbf_idma.v:400$3373 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$last_buf_adr_reg$usbf_idma.v:289$3287 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.$verific$DataOut_reg$usbf_utmi_if.v:214$1247 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$3351 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$dout_r_reg$usbf_idma.v:382$3362 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$adr_cw_reg$usbf_idma.v:286$3283 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$adr_cb_reg$usbf_idma.v:307$3299 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u1.$verific$state_reg$usbf_pa.v:303$3071 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u1.$verific$crc16_reg$usbf_pa.v:264$3027 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$token1_reg$usbf_pd.v:251$2592 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$token0_reg$usbf_pd.v:248$2590 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$state_reg$usbf_pd.v:360$2708 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$pid_reg$usbf_pd.v:221$2543 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d2_reg$usbf_pd.v:321$2650 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d1_reg$usbf_pd.v:321$2649 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d0_reg$usbf_pd.v:321$2648 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$crc16_sum_reg$usbf_pd.v:338$2663 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$sof_time_reg$usbf_pl.v:308$1382 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$mfm_cnt_reg$usbf_pl.v:299$1375 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$hms_cnt_reg$usbf_pl.v:321$1389 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$frame_no_r_reg$usbf_pl.v:283$1362 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$state_reg$usbf_utmi_ls.v:417$2280 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$ps_cnt_reg$usbf_utmi_ls.v:320$2184 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_ps_reg$usbf_utmi_ls.v:358$2227 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_ps2_reg$usbf_utmi_ls.v:367$2236 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_cnt_reg$usbf_utmi_ls.v:376$2248 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$line_state_r_reg$usbf_utmi_ls.v:265$2143 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$idle_cnt1_reg$usbf_utmi_ls.v:329$2196 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$idle_cnt1_next_reg$usbf_utmi_ls.v:332$2199 ($aldff) from module usbf_top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 33 unused cells and 158 unused wires.
<suppressed ~34 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~216 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking usbf_top.u0.u0.OpMode as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Found FSM state register usbf_top.u1.u0.state.
Not marking usbf_top.u1.u3.next_dpid as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking usbf_top.u1.u3.this_dpid as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register usbf_top.u5.state.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u1.u0.state' from module `\usbf_top'.
  found $dff cell for state register: $flatten\u1.\u0.$verific$state_reg$usbf_pd.v:360$2708
  root of input selection tree: $flatten\u1.\u0.$verific$n458$2523
  found reset state: 4'0001 (guessed from mux tree)
  found ctrl input: \rst_i
  found state code: 4'0001
  found ctrl input: $flatten\u1.\u0.$verific$n586$2501
  found ctrl input: $flatten\u1.\u0.$verific$n585$2500
  found ctrl input: $flatten\u1.\u0.$verific$n584$2499
  found ctrl input: $flatten\u1.\u0.$verific$n583$2498
  found state code: 4'0000
  found ctrl input: $flatten\u1.\u0.$verific$n496$2482
  found ctrl input: \u0.rx_active
  found ctrl input: $flatten\u1.\u0.$verific$n541$2495
  found ctrl input: $flatten\u1.\u0.$verific$n480$2474
  found ctrl input: $flatten\u1.\u0.$verific$n490$2477
  found ctrl input: $flatten\u1.\u0.$verific$n494$2480
  found ctrl input: $flatten\u1.\u0.$verific$n500$2486
  found state code: 4'1000
  found state code: 4'0100
  found ctrl input: $flatten\u1.\u0.$verific$n473$2472
  found state code: 4'0010
  found ctrl output: $flatten\u1.\u0.$verific$n583$2498
  found ctrl output: $flatten\u1.\u0.$verific$n584$2499
  found ctrl output: $flatten\u1.\u0.$verific$n585$2500
  found ctrl output: $flatten\u1.\u0.$verific$n586$2501
  ctrl inputs: { $flatten\u1.\u0.$verific$n541$2495 $flatten\u1.\u0.$verific$n500$2486 $flatten\u1.\u0.$verific$n496$2482 $flatten\u1.\u0.$verific$n494$2480 $flatten\u1.\u0.$verific$n490$2477 $flatten\u1.\u0.$verific$n480$2474 $flatten\u1.\u0.$verific$n473$2472 \u0.rx_active \rst_i }
  ctrl outputs: { $flatten\u1.\u0.$verific$n458$2523 $flatten\u1.\u0.$verific$n586$2501 $flatten\u1.\u0.$verific$n585$2500 $flatten\u1.\u0.$verific$n584$2499 $flatten\u1.\u0.$verific$n583$2498 }
  transition:     4'0000 9'--------0 ->     4'0001 8'00010000
  transition:     4'0000 9'--------1 ->     4'0000 8'00000000
  transition:     4'1000 9'--------0 ->     4'0001 8'00011000
  transition:     4'1000 9'--0-----1 ->     4'1000 8'10001000
  transition:     4'1000 9'--1----01 ->     4'0001 8'00011000
  transition:     4'1000 9'--1----11 ->     4'1000 8'10001000
  transition:     4'0100 9'--------0 ->     4'0001 8'00010100
  transition:     4'0100 9'0-0-----1 ->     4'0100 8'01000100
  transition:     4'0100 9'0-1----01 ->     4'0001 8'00010100
  transition:     4'0100 9'0-1----11 ->     4'0100 8'01000100
  transition:     4'0100 9'1-------1 ->     4'0001 8'00010100
  transition:     4'0010 9'--------0 ->     4'0001 8'00010010
  transition:     4'0010 9'-0-000--1 ->     4'0010 8'00100010
  transition:     4'0010 9'-1-000-01 ->     4'0001 8'00010010
  transition:     4'0010 9'-1-000-11 ->     4'0010 8'00100010
  transition:     4'0010 9'---100--1 ->     4'1000 8'10000010
  transition:     4'0010 9'----10--1 ->     4'0100 8'01000010
  transition:     4'0010 9'-----1-01 ->     4'0001 8'00010010
  transition:     4'0010 9'-----1-11 ->     4'0010 8'00100010
  transition:     4'0001 9'--------0 ->     4'0001 8'00010001
  transition:     4'0001 9'------0-1 ->     4'0001 8'00010001
  transition:     4'0001 9'------1-1 ->     4'0010 8'00100001
Extracting FSM `\u5.state' from module `\usbf_top'.
  found $dff cell for state register: $flatten\u5.$verific$state_reg$usbf_wb.v:198$9137
  root of input selection tree: $flatten\u5.$verific$n260$9104
  found reset state: 6'000001 (guessed from mux tree)
  found ctrl input: \rst_i
  found state code: 6'000001
  found ctrl input: $flatten\u5.$verific$n352$9095
  found ctrl input: $flatten\u5.$verific$n351$9094
  found ctrl input: $flatten\u5.$verific$n350$9093
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$9201
  found ctrl input: $flatten\u5.$verific$n347$9090
  found state code: 6'000000
  found state code: 6'100000
  found state code: 6'010000
  found ctrl input: \u2.wack
  found ctrl input: $flatten\u5.$verific$n317$9088
  found ctrl input: $flatten\u5.$verific$n305$9087
  found ctrl input: $flatten\u5.$verific$n294$9083
  found ctrl input: $flatten\u5.$verific$n282$9081
  found state code: 6'000010
  found state code: 6'000100
  found state code: 6'001000
  found ctrl output: $flatten\u5.$verific$n352$9095
  found ctrl output: $flatten\u5.$verific$n351$9094
  found ctrl output: $flatten\u5.$verific$n350$9093
  found ctrl output: $flatten\u5.$verific$n349$9092
  found ctrl output: $flatten\u5.$verific$n348$9091
  found ctrl output: $flatten\u5.$verific$n347$9090
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$9201 $flatten\u5.$verific$n317$9088 $flatten\u5.$verific$n305$9087 $flatten\u5.$verific$n294$9083 $flatten\u5.$verific$n282$9081 \u2.wack \rst_i }
  ctrl outputs: { $flatten\u5.$verific$n260$9104 $flatten\u5.$verific$n352$9095 $flatten\u5.$verific$n351$9094 $flatten\u5.$verific$n350$9093 $flatten\u5.$verific$n349$9092 $flatten\u5.$verific$n348$9091 $flatten\u5.$verific$n347$9090 }
  transition:   6'000000 7'------0 ->   6'000001 12'000001000000
  transition:   6'000000 7'------1 ->   6'000000 12'000000000000
  transition:   6'100000 7'------0 ->   6'000001 12'000001100000
  transition:   6'100000 7'------1 ->   6'000001 12'000001100000
  transition:   6'010000 7'------0 ->   6'000001 12'000001010000
  transition:   6'010000 7'------1 ->   6'100000 12'100000010000
  transition:   6'001000 7'------0 ->   6'000001 12'000001001000
  transition:   6'001000 7'------1 ->   6'010000 12'010000001000
  transition:   6'000100 7'------0 ->   6'000001 12'000001000100
  transition:   6'000100 7'-----01 ->   6'000100 12'000100000100
  transition:   6'000100 7'-----11 ->   6'010000 12'010000000100
  transition:   6'000010 7'------0 ->   6'000001 12'000001000010
  transition:   6'000010 7'-----01 ->   6'000010 12'000010000010
  transition:   6'000010 7'-----11 ->   6'010000 12'010000000010
  transition:   6'000001 7'------0 ->   6'000001 12'000001000001
  transition:   6'000001 7'-0000-1 ->   6'000001 12'000001000001
  transition:   6'000001 7'-0001-1 ->   6'000010 12'000010000001
  transition:   6'000001 7'-001--1 ->   6'000100 12'000100000001
  transition:   6'000001 7'-01---1 ->   6'001000 12'001000000001
  transition:   6'000001 7'-1----1 ->   6'001000 12'001000000001

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u5.state$9212' from module `\usbf_top'.
  Merging pattern 7'------0 and 7'------1 from group (1 6 12'000001100000).
  Merging pattern 7'------1 and 7'------0 from group (1 6 12'000001100000).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$9201.
Optimizing FSM `$fsm$\u1.u0.state$9206' from module `\usbf_top'.

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 29 unused cells and 29 unused wires.
<suppressed ~32 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u1.u0.state$9206' from module `\usbf_top'.
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2523 [0].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2523 [1].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2523 [2].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2523 [3].
Optimizing FSM `$fsm$\u5.state$9212' from module `\usbf_top'.
  Removing unused output signal $flatten\u5.$verific$n351$9094.
  Removing unused output signal $flatten\u5.$verific$n352$9095.
  Removing unused output signal $flatten\u5.$verific$n260$9104 [0].
  Removing unused output signal $flatten\u5.$verific$n260$9104 [1].
  Removing unused output signal $flatten\u5.$verific$n260$9104 [2].
  Removing unused output signal $flatten\u5.$verific$n260$9104 [3].
  Removing unused output signal $flatten\u5.$verific$n260$9104 [4].
  Removing unused output signal $flatten\u5.$verific$n260$9104 [5].

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u1.u0.state$9206' from module `\usbf_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ---1-
  1000 -> --1--
  0100 -> -1---
  0010 -> 1----
  0001 -> ----1
Recoding FSM `$fsm$\u5.state$9212' from module `\usbf_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000000 -> -----1-
  100000 -> ----1--
  010000 -> ---1---
  001000 -> --1----
  000100 -> -1-----
  000010 -> 1------
  000001 -> ------1

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u1.u0.state$9206' from module `usbf_top':
-------------------------------------

  Information on FSM $fsm$\u1.u0.state$9206 (\u1.u0.state):

  Number of input signals:    9
  Number of output signals:   4
  Number of state bits:       5

  Input signals:
    0: \rst_i
    1: \u0.rx_active
    2: $flatten\u1.\u0.$verific$n473$2472
    3: $flatten\u1.\u0.$verific$n480$2474
    4: $flatten\u1.\u0.$verific$n490$2477
    5: $flatten\u1.\u0.$verific$n494$2480
    6: $flatten\u1.\u0.$verific$n496$2482
    7: $flatten\u1.\u0.$verific$n500$2486
    8: $flatten\u1.\u0.$verific$n541$2495

  Output signals:
    0: $flatten\u1.\u0.$verific$n583$2498
    1: $flatten\u1.\u0.$verific$n584$2499
    2: $flatten\u1.\u0.$verific$n585$2500
    3: $flatten\u1.\u0.$verific$n586$2501

  State encoding:
    0:    5'---1-
    1:    5'--1--
    2:    5'-1---
    3:    5'1----
    4:    5'----1  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 9'--------1   ->     0 4'0000
      1:     0 9'--------0   ->     4 4'0000
      2:     1 9'--1----11   ->     1 4'1000
      3:     1 9'--0-----1   ->     1 4'1000
      4:     1 9'--------0   ->     4 4'1000
      5:     1 9'--1----01   ->     4 4'1000
      6:     2 9'0-1----11   ->     2 4'0100
      7:     2 9'0-0-----1   ->     2 4'0100
      8:     2 9'--------0   ->     4 4'0100
      9:     2 9'0-1----01   ->     4 4'0100
     10:     2 9'1-------1   ->     4 4'0100
     11:     3 9'---100--1   ->     1 4'0010
     12:     3 9'----10--1   ->     2 4'0010
     13:     3 9'-1-000-11   ->     3 4'0010
     14:     3 9'-----1-11   ->     3 4'0010
     15:     3 9'-0-000--1   ->     3 4'0010
     16:     3 9'--------0   ->     4 4'0010
     17:     3 9'-1-000-01   ->     4 4'0010
     18:     3 9'-----1-01   ->     4 4'0010
     19:     4 9'------1-1   ->     3 4'0001
     20:     4 9'--------0   ->     4 4'0001
     21:     4 9'------0-1   ->     4 4'0001

-------------------------------------

FSM `$fsm$\u5.state$9212' from module `usbf_top':
-------------------------------------

  Information on FSM $fsm$\u5.state$9212 (\u5.state):

  Number of input signals:    6
  Number of output signals:   4
  Number of state bits:       7

  Input signals:
    0: \rst_i
    1: \u2.wack
    2: $flatten\u5.$verific$n282$9081
    3: $flatten\u5.$verific$n294$9083
    4: $flatten\u5.$verific$n305$9087
    5: $flatten\u5.$verific$n317$9088

  Output signals:
    0: $flatten\u5.$verific$n347$9090
    1: $flatten\u5.$verific$n348$9091
    2: $flatten\u5.$verific$n349$9092
    3: $flatten\u5.$verific$n350$9093

  State encoding:
    0:  7'-----1-
    1:  7'----1--
    2:  7'---1---
    3:  7'--1----
    4:  7'-1-----
    5:  7'1------
    6:  7'------1  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----1   ->     0 4'0000
      1:     0 6'-----0   ->     6 4'0000
      2:     1 6'------   ->     6 4'0000
      3:     2 6'-----1   ->     1 4'0000
      4:     2 6'-----0   ->     6 4'0000
      5:     3 6'-----1   ->     2 4'1000
      6:     3 6'-----0   ->     6 4'1000
      7:     4 6'----11   ->     2 4'0100
      8:     4 6'----01   ->     4 4'0100
      9:     4 6'-----0   ->     6 4'0100
     10:     5 6'----11   ->     2 4'0010
     11:     5 6'----01   ->     5 4'0010
     12:     5 6'-----0   ->     6 4'0010
     13:     6 6'01---1   ->     3 4'0001
     14:     6 6'1----1   ->     3 4'0001
     15:     6 6'001--1   ->     4 4'0001
     16:     6 6'0001-1   ->     5 4'0001
     17:     6 6'-----0   ->     6 4'0001
     18:     6 6'0000-1   ->     6 4'0001

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u1.u0.state$9206' from module `\usbf_top'.
Mapping FSM `$fsm$\u5.state$9212' from module `\usbf_top'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~6 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~212 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$resume_req_r_reg$usbf_top.v:292$32 ($dff) from module usbf_top (D = $verific$n44$8, Q = \resume_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9355 ($sdff) from module usbf_top (D = 1'1, Q = \resume_req_r).
Adding SRST signal on $flatten\u4.\u3.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1275$8816, Q = \u4.u3.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9361 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u3.uc_dpd).
Adding SRST signal on $flatten\u4.\u3.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1293$8819, Q = \u4.u3.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9363 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u3.uc_bsel).
Adding SRST signal on $flatten\u4.\u3.$verific$r2_reg$usbf_ep_rf.v:487$9055 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1732$8771, Q = \u4.u3.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9365 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1732$8771, Q = \u4.u3.r2).
Adding SRST signal on $flatten\u4.\u3.$verific$ots_stop_reg$usbf_ep_rf.v:250$8882 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n344$8680, Q = \u4.u3.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9369 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u3.ots_stop).
Adding SRST signal on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1234$8811, Q = \u4.u3.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [5]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [0]).
Adding SRST signal on $flatten\u4.\u3.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n447$8793, Q = \u4.u3.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9397 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u3.ienb).
Adding SRST signal on $flatten\u4.\u3.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n454$8794, Q = \u4.u3.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9399 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u3.iena).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_req_r_reg$usbf_ep_rf.v:473$9044 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1714$8762, Q = \u4.u3.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9401 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1714$8762, Q = \u4.u3.dma_req_r).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1418$8827, Q = \u4.u3.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9405 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1418$8827, Q = \u4.u3.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1553$8834, Q = \u4.u3.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9409 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1553$8834, Q = \u4.u3.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$9059 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1741$8774, Q = \u4.u3.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9413 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1741$8774, Q = \u4.u3.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u3.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n345$8787, Q = \u4.u3.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9417 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u3.csr1 [12:9] \u4.u3.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9417 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n345$8787 [8:7], Q = \u4.u3.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u3.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n330$8786, Q = \u4.u3.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9422 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u3.csr0).
Adding SRST signal on $flatten\u4.\u3.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n926$8806, Q = \u4.u3.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9424 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n926$8806, Q = \u4.u3.buf1).
Adding SRST signal on $flatten\u4.\u3.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n691$8803, Q = \u4.u3.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9428 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n691$8803, Q = \u4.u3.buf0).
Adding SRST signal on $flatten\u4.\u3.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1093$8808, Q = \u4.u3.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9432 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u3.buf0_orig).
Adding SRST signal on $flatten\u4.\u2.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1275$8816, Q = \u4.u2.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9434 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u2.uc_dpd).
Adding SRST signal on $flatten\u4.\u2.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1293$8819, Q = \u4.u2.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9436 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u2.uc_bsel).
Adding SRST signal on $flatten\u4.\u2.$verific$r2_reg$usbf_ep_rf.v:487$9055 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1732$8771, Q = \u4.u2.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9438 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1732$8771, Q = \u4.u2.r2).
Adding SRST signal on $flatten\u4.\u2.$verific$ots_stop_reg$usbf_ep_rf.v:250$8882 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n344$8680, Q = \u4.u2.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9442 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u2.ots_stop).
Adding SRST signal on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1234$8811, Q = \u4.u2.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [5]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [0]).
Adding SRST signal on $flatten\u4.\u2.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n447$8793, Q = \u4.u2.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9470 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u2.ienb).
Adding SRST signal on $flatten\u4.\u2.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n454$8794, Q = \u4.u2.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9472 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u2.iena).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_req_r_reg$usbf_ep_rf.v:473$9044 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1714$8762, Q = \u4.u2.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9474 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1714$8762, Q = \u4.u2.dma_req_r).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1418$8827, Q = \u4.u2.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9478 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1418$8827, Q = \u4.u2.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1553$8834, Q = \u4.u2.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9482 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1553$8834, Q = \u4.u2.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$9059 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1741$8774, Q = \u4.u2.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9486 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1741$8774, Q = \u4.u2.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u2.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n345$8787, Q = \u4.u2.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9490 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u2.csr1 [12:9] \u4.u2.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9490 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n345$8787 [8:7], Q = \u4.u2.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u2.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n330$8786, Q = \u4.u2.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9495 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u2.csr0).
Adding SRST signal on $flatten\u4.\u2.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n926$8806, Q = \u4.u2.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9497 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n926$8806, Q = \u4.u2.buf1).
Adding SRST signal on $flatten\u4.\u2.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n691$8803, Q = \u4.u2.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9501 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n691$8803, Q = \u4.u2.buf0).
Adding SRST signal on $flatten\u4.\u2.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1093$8808, Q = \u4.u2.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9505 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u2.buf0_orig).
Adding SRST signal on $flatten\u4.\u1.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1275$8816, Q = \u4.u1.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9507 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u1.uc_dpd).
Adding SRST signal on $flatten\u4.\u1.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1293$8819, Q = \u4.u1.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9509 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u1.uc_bsel).
Adding SRST signal on $flatten\u4.\u1.$verific$r2_reg$usbf_ep_rf.v:487$9055 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1732$8771, Q = \u4.u1.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9511 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1732$8771, Q = \u4.u1.r2).
Adding SRST signal on $flatten\u4.\u1.$verific$ots_stop_reg$usbf_ep_rf.v:250$8882 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n344$8680, Q = \u4.u1.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9515 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u1.ots_stop).
Adding SRST signal on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1234$8811, Q = \u4.u1.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [5]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [0]).
Adding SRST signal on $flatten\u4.\u1.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n447$8793, Q = \u4.u1.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9543 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u1.ienb).
Adding SRST signal on $flatten\u4.\u1.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n454$8794, Q = \u4.u1.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9545 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u1.iena).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_req_r_reg$usbf_ep_rf.v:473$9044 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1714$8762, Q = \u4.u1.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9547 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1714$8762, Q = \u4.u1.dma_req_r).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1418$8827, Q = \u4.u1.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9551 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1418$8827, Q = \u4.u1.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1553$8834, Q = \u4.u1.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9555 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1553$8834, Q = \u4.u1.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$9059 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1741$8774, Q = \u4.u1.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9559 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1741$8774, Q = \u4.u1.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u1.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n345$8787, Q = \u4.u1.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9563 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u1.csr1 [12:9] \u4.u1.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9563 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n345$8787 [8:7], Q = \u4.u1.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u1.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n330$8786, Q = \u4.u1.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9568 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u1.csr0).
Adding SRST signal on $flatten\u4.\u1.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n926$8806, Q = \u4.u1.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9570 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n926$8806, Q = \u4.u1.buf1).
Adding SRST signal on $flatten\u4.\u1.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n691$8803, Q = \u4.u1.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9574 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n691$8803, Q = \u4.u1.buf0).
Adding SRST signal on $flatten\u4.\u1.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1093$8808, Q = \u4.u1.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9578 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u1.buf0_orig).
Adding SRST signal on $flatten\u4.\u0.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1275$8816, Q = \u4.u0.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9580 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u0.uc_dpd).
Adding SRST signal on $flatten\u4.\u0.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1293$8819, Q = \u4.u0.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9582 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u0.uc_bsel).
Adding SRST signal on $flatten\u4.\u0.$verific$r2_reg$usbf_ep_rf.v:487$9055 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1732$8771, Q = \u4.u0.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9584 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1732$8771, Q = \u4.u0.r2).
Adding SRST signal on $flatten\u4.\u0.$verific$ots_stop_reg$usbf_ep_rf.v:250$8882 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n344$8680, Q = \u4.u0.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9588 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u0.ots_stop).
Adding SRST signal on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1234$8811, Q = \u4.u0.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [5]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [0]).
Adding SRST signal on $flatten\u4.\u0.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n447$8793, Q = \u4.u0.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9616 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u0.ienb).
Adding SRST signal on $flatten\u4.\u0.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n454$8794, Q = \u4.u0.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9618 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u0.iena).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_req_r_reg$usbf_ep_rf.v:473$9044 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1714$8762, Q = \u4.u0.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9620 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1714$8762, Q = \u4.u0.dma_req_r).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1418$8827, Q = \u4.u0.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9624 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1418$8827, Q = \u4.u0.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1553$8834, Q = \u4.u0.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9628 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1553$8834, Q = \u4.u0.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$9059 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1741$8774, Q = \u4.u0.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9632 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1741$8774, Q = \u4.u0.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u0.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n345$8787, Q = \u4.u0.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9636 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u0.csr1 [12:9] \u4.u0.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9636 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n345$8787 [8:7], Q = \u4.u0.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u0.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n330$8786, Q = \u4.u0.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9641 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u0.csr0).
Adding SRST signal on $flatten\u4.\u0.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n926$8806, Q = \u4.u0.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9643 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n926$8806, Q = \u4.u0.buf1).
Adding SRST signal on $flatten\u4.\u0.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n691$8803, Q = \u4.u0.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9647 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n691$8803, Q = \u4.u0.buf0).
Adding SRST signal on $flatten\u4.\u0.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1093$8808, Q = \u4.u0.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9651 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u0.buf0_orig).
Adding SRST signal on $flatten\u4.$verific$utmi_vend_wr_r_reg$usbf_rf.v:334$4720 ($dff) from module usbf_top (D = $flatten\u4.$verific$n226$4356, Q = \u4.utmi_vend_wr_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9653 ($sdff) from module usbf_top (D = $flatten\u4.$verific$n226$4356, Q = \u4.utmi_vend_wr_r).
Adding EN signal on $flatten\u4.$verific$utmi_vend_ctrl_r_reg$usbf_rf.v:342$4725 ($dff) from module usbf_top (D = \wb_data_i [3:0], Q = \u4.utmi_vend_ctrl_r).
Adding SRST signal on $flatten\u4.$verific$intb_msk_reg$usbf_rf.v:388$4755 ($dff) from module usbf_top (D = $flatten\u4.$verific$n363$4574, Q = \u4.intb_msk, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:262:slice$9658 ($sdff) from module usbf_top (D = \wb_data_i [24:16], Q = \u4.intb_msk).
Adding SRST signal on $flatten\u4.$verific$inta_msk_reg$usbf_rf.v:388$4754 ($dff) from module usbf_top (D = $flatten\u4.$verific$n373$4575, Q = \u4.inta_msk, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:262:slice$9660 ($sdff) from module usbf_top (D = \wb_data_i [8:0], Q = \u4.inta_msk).
Adding SRST signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4756 ($dff) from module usbf_top (D = { $flatten\u4.$verific$n4647$4516 $flatten\u4.$verific$n4656$4517 $flatten\u4.$verific$n4665$4518 $flatten\u4.$verific$n4674$4519 $flatten\u4.$verific$n4683$4520 $flatten\u4.$verific$n4692$4521 $flatten\u4.$verific$n4701$4522 $flatten\u4.$verific$n4710$4523 $flatten\u4.$verific$n4719$4524 }, Q = \u4.int_srcb, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [0]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [1]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [2]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [7]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [8]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [4]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [3]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [6]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [5]).
Adding SRST signal on $flatten\u4.$verific$funct_adr_reg$usbf_rf.v:370$4743 ($dff) from module usbf_top (D = $flatten\u4.$verific$n295$4569, Q = \u4.funct_adr, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9676 ($sdff) from module usbf_top (D = \wb_data_i [6:0], Q = \u4.funct_adr).
Adding EN signal on $flatten\u4.$verific$dma_out_buf_avail_reg$usbf_rf.v:624$5021 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4601$4498, Q = \u4.dma_out_buf_avail).
Adding EN signal on $flatten\u4.$verific$dma_in_buf_sz1_reg$usbf_rf.v:591$4988 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4567$4466, Q = \u4.dma_in_buf_sz1).
Adding SRST signal on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4889 ($dff) from module usbf_top (D = $flatten\u4.$verific$n2190$4627 [14], Q = \u4.csr [14], rval = 1'0).
Adding EN signal on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4889 ($dff) from module usbf_top (D = { $flatten\u4.$verific$n2289$4630 [31:15] $flatten\u4.$verific$n2289$4630 [13:0] }, Q = { \u4.csr [31:15] \u4.csr [13:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9684 ($sdff) from module usbf_top (D = 1'0, Q = \u4.csr [14]).
Adding EN signal on $flatten\u4.$verific$buf1_reg$usbf_rf.v:558$4955 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4469$4694, Q = \u4.buf1).
Adding EN signal on $flatten\u4.$verific$buf0_reg$usbf_rf.v:525$4922 ($dff) from module usbf_top (D = $flatten\u4.$verific$n3379$4662, Q = \u4.buf0).
Adding SRST signal on $flatten\u2.$verific$wack_r_reg$usbf_mem_arb.v:193$2420 ($dff) from module usbf_top (D = $flatten\u2.$verific$n238$2385, Q = \u2.wack_r, rval = 1'0).
Adding SRST signal on $flatten\u1.\u3.$verific$tx_data_to_cnt_reg$usbf_pe.v:768$4142 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1216$3778, Q = \u1.u3.tx_data_to_cnt, rval = 8'00000000).
Adding SRST signal on $flatten\u1.\u3.$verific$state_reg$usbf_pe.v:823$4196 ($dff) from module usbf_top (D = \u1.u3.next_state, Q = \u1.u3.state, rval = 10'0000000001).
Adding EN signal on $auto$ff.cc:262:slice$9700 ($sdff) from module usbf_top (D = \u1.u3.next_state, Q = \u1.u3.state).
Adding SRST signal on $flatten\u1.\u3.$verific$setup_token_reg$usbf_pe.v:592$4001 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n516$3533, Q = \u1.u3.setup_token, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9718 ($sdff) from module usbf_top (D = $flatten\u1.\u3.$verific$n516$3533, Q = \u1.u3.setup_token).
Adding SRST signal on $flatten\u1.\u3.$verific$rx_ack_to_cnt_reg$usbf_pe.v:751$4132 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1148$3774, Q = \u1.u3.rx_ack_to_cnt, rval = 8'00000000).
Adding SRST signal on $flatten\u1.\u3.$verific$out_token_reg$usbf_pe.v:581$3997 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n506$3530, Q = \u1.u3.out_token, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9723 ($sdff) from module usbf_top (D = $flatten\u1.\u3.$verific$n506$3530, Q = \u1.u3.out_token).
Adding SRST signal on $flatten\u1.\u3.$verific$new_sizeb_reg$usbf_pe.v:654$4063 ($dff) from module usbf_top (D = \u1.u3.size_next [13:11], Q = \u1.u3.new_sizeb [13:11], rval = 3'000).
Adding SRST signal on $flatten\u1.\u3.$verific$int_seqerr_set_reg$usbf_pe.v:808$4191 ($dff) from module usbf_top (D = \u1.u3.pid_seq_err, Q = \u1.u3.int_seqerr_set, rval = 1'0).
Adding SRST signal on $flatten\u1.\u3.$verific$in_token_reg$usbf_pe.v:570$3993 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n496$3527, Q = \u1.u3.in_token, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9742 ($sdff) from module usbf_top (D = $flatten\u1.\u3.$verific$n496$3527, Q = \u1.u3.in_token).
Adding SRST signal on $flatten\u1.\u3.$verific$idin_reg$usbf_pe.v:704$4104 ($dff) from module usbf_top (D = { \u1.u3.buffer_done \u1.u3.new_size [13:11] }, Q = \u1.u3.idin [31:28], rval = 4'0000).
Adding SRST signal on $flatten\u1.\u3.$verific$buf0_rl_reg$usbf_pe.v:729$4118 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1651$3684, Q = \u1.u3.buf0_rl, rval = 1'0).
Adding SRST signal on $flatten\u1.\u2.$verific$state_reg$usbf_idma.v:449$3396 ($dff) from module usbf_top (D = \u1.u2.next_state, Q = \u1.u2.state, rval = 8'00000001).
Adding EN signal on $auto$ff.cc:262:slice$9749 ($sdff) from module usbf_top (D = \u1.u2.next_state, Q = \u1.u2.state).
Adding SRST signal on $flatten\u1.\u2.$verific$sizu_c_reg$usbf_idma.v:346$3332 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n551$3209, Q = \u1.u2.sizu_c, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$9769 ($sdff) from module usbf_top (D = $flatten\u1.\u2.$verific$n527$3207, Q = \u1.u2.sizu_c).
Adding SRST signal on $flatten\u1.\u2.$verific$sizd_c_reg$usbf_idma.v:326$3316 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n445$3204, Q = \u1.u2.sizd_c, rval = 14'11111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9775 ($sdff) from module usbf_top (D = $flatten\u1.\u2.$verific$n445$3204, Q = \u1.u2.sizd_c).
Adding SRST signal on $flatten\u1.\u2.$verific$send_data_r_reg$usbf_idma.v:431$3391 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1233$3157, Q = \u1.u2.send_data_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9779 ($sdff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1233$3157, Q = \u1.u2.send_data_r).
Adding SRST signal on $flatten\u1.\u2.$verific$rx_dma_en_r_reg$usbf_idma.v:278$3277 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1422$3656, Q = \u1.u2.rx_dma_en_r, rval = 1'0).
Adding EN signal on $flatten\u1.\u2.$verific$rd_buf1_reg$usbf_idma.v:403$3375 ($dff) from module usbf_top (D = \sram_data_i, Q = \u1.u2.rd_buf1).
Adding EN signal on $flatten\u1.\u2.$verific$rd_buf0_reg$usbf_idma.v:400$3373 ($dff) from module usbf_top (D = \sram_data_i, Q = \u1.u2.rd_buf0).
Adding SRST signal on $flatten\u1.\u2.$verific$dtmp_sel_r_reg$usbf_idma.v:360$3338 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1329$3165, Q = \u1.u2.dtmp_sel_r, rval = 1'0).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$3351 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$3215 [31:24], Q = \u1.u2.dtmp_r [31:24]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$3351 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$3215 [7:0], Q = \u1.u2.dtmp_r [7:0]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$3351 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$3215 [15:8], Q = \u1.u2.dtmp_r [15:8]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$3351 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$3215 [23:16], Q = \u1.u2.dtmp_r [23:16]).
Adding EN signal on $flatten\u1.\u2.$verific$dout_r_reg$usbf_idma.v:382$3362 ($dff) from module usbf_top (D = \u1.u2.dtmp_r, Q = \u1.u2.dout_r).
Adding SRST signal on $flatten\u1.\u2.$verific$adr_cb_reg$usbf_idma.v:307$3299 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n333$3194, Q = \u1.u2.adr_cb, rval = 3'000).
Adding SRST signal on $flatten\u1.\u1.$verific$zero_length_r_reg$usbf_pa.v:187$2975 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n12$2899, Q = \u1.u1.zero_length_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9823 ($sdff) from module usbf_top (D = \u1.u1.send_zero_length_r, Q = \u1.u1.zero_length_r).
Adding SRST signal on $flatten\u1.\u1.$verific$state_reg$usbf_pa.v:303$3071 ($dff) from module usbf_top (D = \u1.u1.next_state, Q = \u1.u1.state, rval = 5'00001).
Adding EN signal on $auto$ff.cc:262:slice$9829 ($sdff) from module usbf_top (D = \u1.u1.next_state, Q = \u1.u1.state).
Adding SRST signal on $flatten\u1.\u1.$verific$send_zero_length_r_reg$usbf_pa.v:176$2969 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1419$3654, Q = \u1.u1.send_zero_length_r, rval = 1'0).
Adding SRST signal on $flatten\u1.\u1.$verific$send_token_r_reg$usbf_pa.v:204$2984 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n28$2906, Q = \u1.u1.send_token_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9850 ($sdff) from module usbf_top (D = $flatten\u1.\u1.$verific$n28$2906, Q = \u1.u1.send_token_r).
Adding SRST signal on $flatten\u1.\u1.$verific$crc16_reg$usbf_pa.v:264$3027 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n224$2953, Q = \u1.u1.crc16, rval = 16'1111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9854 ($sdff) from module usbf_top (D = { \u1.u1.crc16_next [15] \u1.u1.crc16 [6:2] \u1.u1.crc16_next [9:0] }, Q = \u1.u1.crc16).
Adding EN signal on $flatten\u1.\u0.$verific$token1_reg$usbf_pd.v:251$2592 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.token1).
Adding EN signal on $flatten\u1.\u0.$verific$token0_reg$usbf_pd.v:248$2590 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.token0).
Adding SRST signal on $flatten\u1.\u0.$verific$rxv2_reg$usbf_pd.v:311$2639 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n235$2463, Q = \u1.u0.rxv2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9858 ($sdff) from module usbf_top (D = $flatten\u1.\u0.$verific$n235$2463, Q = \u1.u0.rxv2).
Adding SRST signal on $flatten\u1.\u0.$verific$rxv1_reg$usbf_pd.v:300$2634 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n225$2459, Q = \u1.u0.rxv1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9862 ($sdff) from module usbf_top (D = $flatten\u1.\u0.$verific$n225$2459, Q = \u1.u0.rxv1).
Adding SRST signal on $flatten\u1.\u0.$verific$pid_reg$usbf_pd.v:221$2543 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n27$2506, Q = \u1.u0.pid, rval = 8'11110000).
Adding EN signal on $auto$ff.cc:262:slice$9866 ($sdff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.pid).
Adding EN signal on $flatten\u1.\u0.$verific$d2_reg$usbf_pd.v:321$2650 ($dff) from module usbf_top (D = \u1.u0.d1, Q = \u1.u0.d2).
Adding EN signal on $flatten\u1.\u0.$verific$d1_reg$usbf_pd.v:321$2649 ($dff) from module usbf_top (D = \u1.u0.d0, Q = \u1.u0.d1).
Adding EN signal on $flatten\u1.\u0.$verific$d0_reg$usbf_pd.v:321$2648 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.d0).
Adding SRST signal on $flatten\u1.\u0.$verific$crc16_sum_reg$usbf_pd.v:338$2663 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n376$2519, Q = \u1.u0.crc16_sum, rval = 16'1111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9871 ($sdff) from module usbf_top (D = { \u1.u0.crc16_out [15] \u1.u0.crc16_sum [6:2] \u1.u0.crc16_out [9:0] }, Q = \u1.u0.crc16_sum).
Adding SRST signal on $flatten\u1.$verific$sof_time_reg$usbf_pl.v:308$1382 ($dff) from module usbf_top (D = $flatten\u1.$verific$n186$1323, Q = \u1.sof_time, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9873 ($sdff) from module usbf_top (D = $flatten\u1.$verific$n160$1321, Q = \u1.sof_time).
Adding SRST signal on $flatten\u1.$verific$mfm_cnt_reg$usbf_pl.v:299$1375 ($dff) from module usbf_top (D = $flatten\u1.$verific$n122$1317, Q = \u1.mfm_cnt, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$9875 ($sdff) from module usbf_top (D = $flatten\u1.$verific$n112$1315, Q = \u1.mfm_cnt).
Adding SRST signal on $flatten\u1.$verific$hms_cnt_reg$usbf_pl.v:321$1389 ($dff) from module usbf_top (D = $flatten\u1.$verific$n274$1327, Q = \u1.hms_cnt, rval = 5'00000).
Adding SRST signal on $flatten\u1.$verific$frame_no_r_reg$usbf_pl.v:283$1362 ($dff) from module usbf_top (D = $flatten\u1.$verific$n56$1312, Q = \u1.frame_no_r, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$9886 ($sdff) from module usbf_top (D = { \u1.u0.token1 [2:0] \u1.u0.token0 }, Q = \u1.frame_no_r).
Adding SRST signal on $flatten\u0.\u0.$verific$usb_suspend_reg$usbf_utmi_ls.v:236$2125 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n27$1914, Q = \u0.u0.usb_suspend, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9888 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.usb_suspend).
Adding SRST signal on $flatten\u0.\u0.$verific$usb_attached_reg$usbf_utmi_ls.v:241$2128 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n33$1916, Q = \u0.u0.usb_attached, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9890 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.usb_attached).
Adding SRST signal on $flatten\u0.\u0.$verific$state_reg$usbf_utmi_ls.v:417$2280 ($dff) from module usbf_top (D = \u0.u0.next_state, Q = \u0.u0.state, rval = 15'000000000000001).
Adding EN signal on $auto$ff.cc:262:slice$9892 ($sdff) from module usbf_top (D = \u0.u0.next_state, Q = \u0.u0.state).
Adding SRST signal on $flatten\u0.\u0.$verific$ps_cnt_reg$usbf_utmi_ls.v:320$2184 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n127$2050, Q = \u0.u0.ps_cnt, rval = 4'0000).
Adding SRST signal on $flatten\u0.\u0.$verific$mode_hs_reg$usbf_utmi_ls.v:231$2122 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n21$1912, Q = \u0.u0.mode_hs, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9927 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.mode_hs).
Adding SRST signal on $flatten\u0.\u0.$verific$me_ps_reg$usbf_utmi_ls.v:358$2227 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n277$2060, Q = \u0.u0.me_ps, rval = 8'00000000).
Adding SRST signal on $flatten\u0.\u0.$verific$me_ps2_reg$usbf_utmi_ls.v:367$2236 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n347$2065, Q = \u0.u0.me_ps2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$9930 ($sdff) from module usbf_top (D = $flatten\u0.\u0.$verific$n329$2063, Q = \u0.u0.me_ps2).
Adding SRST signal on $flatten\u0.\u0.$verific$me_cnt_reg$usbf_utmi_ls.v:376$2248 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n411$2069, Q = \u0.u0.me_cnt, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$9932 ($sdff) from module usbf_top (D = $flatten\u0.\u0.$verific$n393$2067, Q = \u0.u0.me_cnt).
Adding SRST signal on $flatten\u0.\u0.$verific$idle_long_reg$usbf_utmi_ls.v:292$2165 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n98$1933, Q = \u0.u0.idle_long, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9934 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.idle_long).
Adding SRST signal on $flatten\u0.\u0.$verific$idle_cnt1_reg$usbf_utmi_ls.v:329$2196 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n175$2055, Q = \u0.u0.idle_cnt1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$9940 ($sdff) from module usbf_top (D = \u0.u0.idle_cnt1_next, Q = \u0.u0.idle_cnt1).
Adding SRST signal on $flatten\u0.\u0.$verific$chirp_cnt_reg$usbf_utmi_ls.v:399$2272 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n482$2074, Q = \u0.u0.chirp_cnt, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$9942 ($sdff) from module usbf_top (D = $flatten\u0.\u0.$verific$n474$2072, Q = \u0.u0.chirp_cnt).
Adding SRST signal on $flatten\u0.\u0.$verific$XcvSelect_reg$usbf_utmi_ls.v:251$2134 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n45$1920, Q = \u0.u0.XcvSelect, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$9944 ($sdff) from module usbf_top (D = 1'0, Q = \u0.u0.XcvSelect).
Adding SRST signal on $flatten\u0.\u0.$verific$TermSel_reg$usbf_utmi_ls.v:246$2131 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n39$1918, Q = \u0.u0.TermSel, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9946 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.TermSel).
Adding SRST signal on $flatten\u0.\u0.$verific$OpMode_reg$usbf_utmi_ls.v:256$2139 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n55$2046, Q = \u0.u0.OpMode, rval = 2'10).
Adding EN signal on $auto$ff.cc:262:slice$9948 ($sdff) from module usbf_top (D = 2'00, Q = \u0.u0.OpMode).
Adding SRST signal on $flatten\u0.$verific$rx_valid_reg$usbf_utmi_if.v:185$1233 ($dff) from module usbf_top (D = \RxValid_pad_i, Q = \u0.rx_valid, rval = 1'0).
Adding SRST signal on $flatten\u0.$verific$rx_err_reg$usbf_utmi_if.v:201$1239 ($dff) from module usbf_top (D = \RxError_pad_i, Q = \u0.rx_err, rval = 1'0).
Adding SRST signal on $flatten\u0.$verific$rx_active_reg$usbf_utmi_if.v:193$1236 ($dff) from module usbf_top (D = \RxActive_pad_i, Q = \u0.rx_active, rval = 1'0).
Adding SRST signal on $flatten\u0.$verific$TxValid_reg$usbf_utmi_if.v:230$1260 ($dff) from module usbf_top (D = $flatten\u0.$verific$n102$1220, Q = \u0.TxValid, rval = 1'0).
Adding EN signal on $flatten\u0.$verific$DataOut_reg$usbf_utmi_if.v:214$1247 ($dff) from module usbf_top (D = $flatten\u0.$verific$n70$1227, Q = \u0.DataOut).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9691 ($sdffe) from module usbf_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9949 ($sdffe) from module usbf_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9727 ($sdff) from module usbf_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9727 ($sdff) from module usbf_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$9727 ($sdff) from module usbf_top.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 247 unused cells and 275 unused wires.
<suppressed ~258 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~51 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~87 debug messages>
Removed a total of 29 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 29 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~133 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_61$usbf_utmi_ls.v:268$2146 ($eq).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$2181 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$2197 ($add).
Removed top 4 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$2204 ($lt).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$2208 ($lt).
Removed top 2 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$2212 ($lt).
Removed top 1 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$2220 ($lt).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$2225 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$2232 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$2244 ($add).
Removed top 2 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$2250 ($lt).
Removed top 4 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$2254 ($lt).
Removed top 6 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$2258 ($lt).
Removed top 2 bits (of 3) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$2268 ($add).
Removed top 14 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_317$usbf_utmi_ls.v:449$2319 ($eq).
Removed top 13 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_318$usbf_utmi_ls.v:461$2320 ($eq).
Removed top 12 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_319$usbf_utmi_ls.v:486$2321 ($eq).
Removed top 11 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_320$usbf_utmi_ls.v:502$2322 ($eq).
Removed top 10 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_321$usbf_utmi_ls.v:518$2323 ($eq).
Removed top 8 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_322$usbf_utmi_ls.v:534$2324 ($eq).
Removed top 9 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_323$usbf_utmi_ls.v:539$2325 ($eq).
Removed top 7 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_324$usbf_utmi_ls.v:552$2326 ($eq).
Removed top 6 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_325$usbf_utmi_ls.v:560$2327 ($eq).
Removed top 5 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_326$usbf_utmi_ls.v:579$2328 ($eq).
Removed top 4 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_327$usbf_utmi_ls.v:594$2329 ($eq).
Removed top 3 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_328$usbf_utmi_ls.v:602$2330 ($eq).
Removed top 2 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_329$usbf_utmi_ls.v:617$2331 ($eq).
Removed top 1 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_330$usbf_utmi_ls.v:632$2332 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9237 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9282 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9290 ($eq).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_16$usbf_pd.v:225$2547 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_20$usbf_pd.v:227$2551 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_24$usbf_pd.v:229$2555 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_28$usbf_pd.v:231$2559 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_32$usbf_pd.v:233$2563 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_38$usbf_pd.v:236$2569 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_46$usbf_pd.v:240$2576 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9267 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_142$usbf_pa.v:315$3084 ($eq).
Removed top 3 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_143$usbf_pa.v:331$3085 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_145$usbf_pa.v:351$3087 ($eq).
Removed top 1 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_146$usbf_pa.v:368$3088 ($eq).
Removed top 3 bits (of 17) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$3284 ($add).
Removed top 2 bits (of 17) from port Y of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$3284 ($add).
Removed top 2 bits (of 17) from port A of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$3284 ($add).
Removed top 14 bits (of 15) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$3292 ($add).
Removed top 2 bits (of 3) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$3300 ($add).
Removed top 13 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$3311 ($sub).
Removed top 10 bits (of 11) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$3327 ($add).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_124$usbf_idma.v:369$3343 ($eq).
Removed top 13 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_213$usbf_idma.v:431$3385 ($eq).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_261$usbf_idma.v:463$3417 ($eq).
Removed top 6 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_262$usbf_idma.v:490$3418 ($eq).
Removed top 5 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_263$usbf_idma.v:513$3419 ($eq).
Removed top 4 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_264$usbf_idma.v:536$3420 ($eq).
Removed top 3 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_265$usbf_idma.v:559$3421 ($eq).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_266$usbf_idma.v:575$3422 ($eq).
Removed top 1 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_267$usbf_idma.v:594$3423 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_9$usbf_pe.v:367$3820 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_13$usbf_pe.v:370$3824 ($eq).
Removed top 1 bits (of 2) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_79$usbf_pe.v:441$3871 ($mux).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_169$usbf_pe.v:495$3950 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_170$usbf_pe.v:496$3951 ($eq).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_171$usbf_pe.v:497$3952 ($eq).
Removed top 1 bits (of 2) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_207$usbf_pe.v:538$3956 ($mux).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_273$usbf_pe.v:547$3975 ($eq).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$4019 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$4024 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$4040 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$4043 ($lt).
Removed top 3 bits (of 14) from mux cell usbf_top.$flatten\u1.\u3.$verific$mux_383$usbf_pe.v:654$4061 ($mux).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$4064 ($sub).
Removed top 3 bits (of 17) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$4073 ($add).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$4075 ($lt).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$4097 ($add).
Removed top 4 bits (of 28) from mux cell usbf_top.$flatten\u1.\u3.$verific$mux_713$usbf_pe.v:704$4102 ($mux).
Removed top 9 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$not_equal_501$usbf_pe.v:733$4119 ($ne).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$4129 ($add).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_519$usbf_pe.v:754$4133 ($eq).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$4139 ($add).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_532$usbf_pe.v:771$4143 ($eq).
Removed top 6 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_578$usbf_pe.v:803$4182 ($eq).
Removed top 5 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_580$usbf_pe.v:803$4184 ($eq).
Removed top 9 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_676$usbf_pe.v:846$4263 ($eq).
Removed top 8 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_677$usbf_pe.v:915$4264 ($eq).
Removed top 7 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_678$usbf_pe.v:925$4265 ($eq).
Removed top 1 bits (of 4) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_725$usbf_pe.v:449$4266 ($mux).
Removed top 4 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_681$usbf_pe.v:995$4267 ($eq).
Removed top 3 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_682$usbf_pe.v:1009$4268 ($eq).
Removed top 2 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_683$usbf_pe.v:1047$4269 ($eq).
Removed top 1 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_684$usbf_pe.v:1056$4270 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$flatten\u1.$verific$add_69$usbf_pl.v:321$1386 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u1.$verific$add_58$usbf_pl.v:308$1378 ($add).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.$verific$add_47$usbf_pl.v:299$1370 ($add).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_3$usbf_pe.v:363$3814 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9758 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9756 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9752 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9760 ($ne).
Removed top 3 bits (of 5) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9344 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9340 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9335 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9322 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9351 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9818 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9811 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9804 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9242 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u3.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u3.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u2.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u2.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u1.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u1.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u0.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u0.$verific$equal_19$usbf_ep_rf.v:225$8857 ($eq).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u0.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
Removed top 12 bits (of 16) from port A of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$5064 ($or).
Removed top 12 bits (of 16) from port B of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$5064 ($or).
Removed top 12 bits (of 16) from port Y of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$5064 ($or).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_165$usbf_rf.v:417$4768 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_162$usbf_rf.v:416$4765 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_159$usbf_rf.v:415$4762 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_156$usbf_rf.v:414$4759 ($eq).
Removed top 5 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_123$usbf_rf.v:384$4746 ($eq).
Removed top 6 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_113$usbf_rf.v:370$4738 ($eq).
Removed top 4 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_76$usbf_rf.v:332$4714 ($eq).
Removed top 5 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_66$usbf_rf.v:318$4707 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9762 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9250 ($eq).
Removed top 3 bits (of 14) from mux cell usbf_top.$flatten\u1.\u3.$verific$mux_382$usbf_pe.v:654$4060 ($mux).
Removed top 2 bits (of 17) from wire usbf_top.$flatten\u1.\u2.$verific$n169$3185.
Removed top 4 bits (of 15) from wire usbf_top.$flatten\u1.\u3.$verific$n1006$3767.
Removed top 1 bits (of 2) from wire usbf_top.$flatten\u1.\u3.$verific$n185$3709.
Removed top 1 bits (of 2) from wire usbf_top.$flatten\u1.\u3.$verific$n403$3747.
Removed top 3 bits (of 14) from wire usbf_top.$flatten\u1.\u3.$verific$n707$3753.
Removed top 3 bits (of 14) from wire usbf_top.$flatten\u1.\u3.$verific$n722$3754.
Removed top 12 bits (of 16) from wire usbf_top.$flatten\u4.$verific$n6984$4699.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u0.$verific$n345$8787.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u1.$verific$n345$8787.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u2.$verific$n345$8787.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u3.$verific$n345$8787.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 64 unused cells and 108 unused wires.
<suppressed ~65 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module usbf_top:
  creating $macc model for $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$2181 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$2197 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$2225 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$2232 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$2244 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$2268 ($add).
  creating $macc model for $flatten\u1.$verific$add_47$usbf_pl.v:299$1370 ($add).
  creating $macc model for $flatten\u1.$verific$add_58$usbf_pl.v:308$1378 ($add).
  creating $macc model for $flatten\u1.$verific$add_69$usbf_pl.v:321$1386 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$3284 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$3292 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$3300 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$3327 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$3311 ($sub).
  creating $macc model for $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$4073 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$4097 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$4129 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$4139 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$4064 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
  creating $macc model for $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
  creating $macc model for $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$9008 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
  creating $macc model for $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
  creating $macc model for $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$9008 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
  creating $macc model for $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
  creating $macc model for $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$9008 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
  creating $macc model for $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
  creating $macc model for $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$9008 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$9023.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$9008.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8997.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8974.
  creating $alu model for $macc $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8995.
  creating $alu model for $macc $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8979.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$9023.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$9008.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8997.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8974.
  creating $alu model for $macc $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8995.
  creating $alu model for $macc $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8979.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$9023.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$9008.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8997.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8974.
  creating $alu model for $macc $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8995.
  creating $alu model for $macc $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8979.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$9023.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$9008.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8997.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8974.
  creating $alu model for $macc $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8995.
  creating $alu model for $macc $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8979.
  creating $alu model for $macc $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$4064.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$4139.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$4129.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$4097.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$4073.
  creating $alu model for $macc $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$3311.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$3327.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$3300.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$3292.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$3284.
  creating $alu model for $macc $flatten\u1.$verific$add_69$usbf_pl.v:321$1386.
  creating $alu model for $macc $flatten\u1.$verific$add_58$usbf_pl.v:308$1378.
  creating $alu model for $macc $flatten\u1.$verific$add_47$usbf_pl.v:299$1370.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$2268.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$2244.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$2232.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$2225.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$2197.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$2181.
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$2204 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$2208 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$2212 ($lt): merged with $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$2208.
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$2220 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$2250 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$2254 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$2258 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$4019 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$4024 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$4040 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$4043 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$4075 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$4088 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_424$usbf_pe.v:694$4093 ($lt): merged with $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$4088.
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_232$usbf_ep_rf.v:445$9020 ($lt): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_240$usbf_ep_rf.v:454$9026 ($lt): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_232$usbf_ep_rf.v:445$9020 ($lt): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_240$usbf_ep_rf.v:454$9026 ($lt): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_232$usbf_ep_rf.v:445$9020 ($lt): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_240$usbf_ep_rf.v:454$9026 ($lt): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_232$usbf_ep_rf.v:445$9020 ($lt): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_240$usbf_ep_rf.v:454$9026 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$not_equal_409$usbf_pe.v:679$4081 ($ne): merged with $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$4088.
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_240$usbf_ep_rf.v:454$9026: $auto$alumacc.cc:485:replace_alu$10399
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_232$usbf_ep_rf.v:445$9020: $auto$alumacc.cc:485:replace_alu$10404
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$9011: $auto$alumacc.cc:485:replace_alu$10409
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$9003: $auto$alumacc.cc:485:replace_alu$10418
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_240$usbf_ep_rf.v:454$9026: $auto$alumacc.cc:485:replace_alu$10427
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_232$usbf_ep_rf.v:445$9020: $auto$alumacc.cc:485:replace_alu$10438
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$9011: $auto$alumacc.cc:485:replace_alu$10449
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$9003: $auto$alumacc.cc:485:replace_alu$10458
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_240$usbf_ep_rf.v:454$9026: $auto$alumacc.cc:485:replace_alu$10467
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_232$usbf_ep_rf.v:445$9020: $auto$alumacc.cc:485:replace_alu$10478
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$9011: $auto$alumacc.cc:485:replace_alu$10489
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$9003: $auto$alumacc.cc:485:replace_alu$10498
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_240$usbf_ep_rf.v:454$9026: $auto$alumacc.cc:485:replace_alu$10507
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_232$usbf_ep_rf.v:445$9020: $auto$alumacc.cc:485:replace_alu$10518
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$9011: $auto$alumacc.cc:485:replace_alu$10523
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$9003: $auto$alumacc.cc:485:replace_alu$10532
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$4088, $flatten\u1.\u3.$verific$LessThan_424$usbf_pe.v:694$4093, $flatten\u1.\u3.$verific$not_equal_409$usbf_pe.v:679$4081: $auto$alumacc.cc:485:replace_alu$10541
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$4075: $auto$alumacc.cc:485:replace_alu$10554
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$4043: $auto$alumacc.cc:485:replace_alu$10565
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$4040: $auto$alumacc.cc:485:replace_alu$10576
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$4024: $auto$alumacc.cc:485:replace_alu$10587
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$4019: $auto$alumacc.cc:485:replace_alu$10598
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$2258: $auto$alumacc.cc:485:replace_alu$10609
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$2254: $auto$alumacc.cc:485:replace_alu$10614
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$2250: $auto$alumacc.cc:485:replace_alu$10619
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$2220: $auto$alumacc.cc:485:replace_alu$10624
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$2208, $flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$2212: $auto$alumacc.cc:485:replace_alu$10629
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$2204: $auto$alumacc.cc:485:replace_alu$10640
  creating $alu cell for $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$2181: $auto$alumacc.cc:485:replace_alu$10645
  creating $alu cell for $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$2197: $auto$alumacc.cc:485:replace_alu$10648
  creating $alu cell for $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$2225: $auto$alumacc.cc:485:replace_alu$10651
  creating $alu cell for $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$2232: $auto$alumacc.cc:485:replace_alu$10654
  creating $alu cell for $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$2244: $auto$alumacc.cc:485:replace_alu$10657
  creating $alu cell for $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$2268: $auto$alumacc.cc:485:replace_alu$10660
  creating $alu cell for $flatten\u1.$verific$add_47$usbf_pl.v:299$1370: $auto$alumacc.cc:485:replace_alu$10663
  creating $alu cell for $flatten\u1.$verific$add_58$usbf_pl.v:308$1378: $auto$alumacc.cc:485:replace_alu$10666
  creating $alu cell for $flatten\u1.$verific$add_69$usbf_pl.v:321$1386: $auto$alumacc.cc:485:replace_alu$10669
  creating $alu cell for $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$3284: $auto$alumacc.cc:485:replace_alu$10672
  creating $alu cell for $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$3292: $auto$alumacc.cc:485:replace_alu$10675
  creating $alu cell for $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$3300: $auto$alumacc.cc:485:replace_alu$10678
  creating $alu cell for $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$3327: $auto$alumacc.cc:485:replace_alu$10681
  creating $alu cell for $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$3311: $auto$alumacc.cc:485:replace_alu$10684
  creating $alu cell for $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$4073: $auto$alumacc.cc:485:replace_alu$10687
  creating $alu cell for $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$4097: $auto$alumacc.cc:485:replace_alu$10690
  creating $alu cell for $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$4129: $auto$alumacc.cc:485:replace_alu$10693
  creating $alu cell for $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$4139: $auto$alumacc.cc:485:replace_alu$10696
  creating $alu cell for $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$4064: $auto$alumacc.cc:485:replace_alu$10699
  creating $alu cell for $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8979: $auto$alumacc.cc:485:replace_alu$10702
  creating $alu cell for $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8995: $auto$alumacc.cc:485:replace_alu$10705
  creating $alu cell for $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8974: $auto$alumacc.cc:485:replace_alu$10708
  creating $alu cell for $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8997: $auto$alumacc.cc:485:replace_alu$10711
  creating $alu cell for $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$9008: $auto$alumacc.cc:485:replace_alu$10714
  creating $alu cell for $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$9023: $auto$alumacc.cc:485:replace_alu$10717
  creating $alu cell for $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8979: $auto$alumacc.cc:485:replace_alu$10720
  creating $alu cell for $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8995: $auto$alumacc.cc:485:replace_alu$10723
  creating $alu cell for $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8974: $auto$alumacc.cc:485:replace_alu$10726
  creating $alu cell for $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8997: $auto$alumacc.cc:485:replace_alu$10729
  creating $alu cell for $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$9008: $auto$alumacc.cc:485:replace_alu$10732
  creating $alu cell for $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$9023: $auto$alumacc.cc:485:replace_alu$10735
  creating $alu cell for $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8979: $auto$alumacc.cc:485:replace_alu$10738
  creating $alu cell for $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8995: $auto$alumacc.cc:485:replace_alu$10741
  creating $alu cell for $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8974: $auto$alumacc.cc:485:replace_alu$10744
  creating $alu cell for $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8997: $auto$alumacc.cc:485:replace_alu$10747
  creating $alu cell for $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$9008: $auto$alumacc.cc:485:replace_alu$10750
  creating $alu cell for $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$9023: $auto$alumacc.cc:485:replace_alu$10753
  creating $alu cell for $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8979: $auto$alumacc.cc:485:replace_alu$10756
  creating $alu cell for $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8995: $auto$alumacc.cc:485:replace_alu$10759
  creating $alu cell for $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8974: $auto$alumacc.cc:485:replace_alu$10762
  creating $alu cell for $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8997: $auto$alumacc.cc:485:replace_alu$10765
  creating $alu cell for $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$9008: $auto$alumacc.cc:485:replace_alu$10768
  creating $alu cell for $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$9023: $auto$alumacc.cc:485:replace_alu$10771
  created 71 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~6 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~137 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10307: { $flatten\u1.\u3.$verific$n436$3509 $flatten\u1.\u3.$verific$n311$3500 $flatten\u1.\u3.$verific$n310$3499 $flatten\u1.\u3.$verific$n306$3498 $flatten\u1.\u3.$verific$n296$3494 $flatten\u1.\u3.$verific$n293$3493 $flatten\u1.\u3.$verific$n286$3490 $flatten\u1.\u3.$verific$n275$3483 $flatten\u1.\u3.$verific$n274$3482 $flatten\u1.\u3.$verific$n268$3480 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10125: { $auto$rtlil.cc:2393:Or$10090 $auto$rtlil.cc:2393:Or$10098 $flatten\u0.\u0.$verific$n1023$2024 $flatten\u0.\u0.$verific$n1022$2023 $flatten\u0.\u0.$verific$n1019$2020 $flatten\u0.\u0.$verific$n1018$2019 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10279: { $flatten\u1.\u3.$verific$n311$3500 $flatten\u1.\u3.$verific$n302$3497 $flatten\u1.\u3.$verific$n299$3496 $flatten\u1.\u3.$verific$n290$3492 $flatten\u1.\u3.$verific$n288$3491 $flatten\u1.\u3.$verific$n286$3490 $flatten\u1.\u3.$verific$n284$3488 $flatten\u1.\u3.$verific$n274$3482 $flatten\u1.\u3.$verific$n268$3480 }
  Optimizing cells in module \usbf_top.
Performed a total of 3 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\u5.$verific$wb_ack_s1_reg$usbf_wb.v:174$9123 ($dff) from module usbf_top (D = $auto$rtlil.cc:2459:Mux$10368, Q = \u5.wb_ack_s1, rval = 1'1).
Setting constant 0-bit at position 4 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 5 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 6 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 7 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 8 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 9 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 10 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 11 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 12 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 13 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 14 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 15 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 5 unused cells and 45 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~138 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> techmap

3.22. Executing TECHMAP pass (map to technology primitives).

3.22.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.22.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_90_alu for cells of type $alu.
Using template $paramod$150d098cb9cca1819459bc5073194c8c53d2862d\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$3b7577489eb4433b1d5620cab7f3794743dee5ea\_90_alu for cells of type $alu.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$bd964c14a1a0bc7ccb7c2d6ad481cc2be21f5ec0\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$1ed7ec530b1ba361931392f2f8504f82ccdfecaa\_90_alu for cells of type $alu.
Using template $paramod$a950948e19702336540a1f557d0a91306bdb9188\_90_alu for cells of type $alu.
Using template $paramod$dffbee7ee942d66441f7a53b64a65f15e3631443\_90_alu for cells of type $alu.
Using template $paramod$7ec5e66ab88c9f51d035070dfe0a06ec346d1216\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$75d4465b5362f47f8faf1498769b32af049430ad\_90_alu for cells of type $alu.
Using template $paramod$fc69e1e055122f161e82f14586c9accf99d83cb8\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$8f780356cb6cdb52f6a744190131b65634639c4e\_90_alu for cells of type $alu.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod$b2cd65b42e0277574bcf6ce63cb040566ad68684\_90_alu for cells of type $alu.
Using template $paramod$6831557730818fb92b11a295f9eb33ff8fa62af1\_90_alu for cells of type $alu.
Using template $paramod$ef65f5ca875905bb4cb2e7b079483d1c2cdf9c89\_90_alu for cells of type $alu.
Using template $paramod$ec32b97001540459632a2df9accd677d3703ea0f\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~7511 debug messages>

yosys> opt

3.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~5023 debug messages>

yosys> opt_merge -nomux

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~5301 debug messages>
Removed a total of 1767 cells.

yosys> opt_muxtree

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 988 unused cells and 3750 unused wires.
<suppressed ~994 debug messages>

yosys> opt_expr

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~2 debug messages>

3.23.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.23.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.23.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.23.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.23.23. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.24. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~823 debug messages>

yosys> opt_merge

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

yosys> opt_dff

3.24.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$12246 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [7], Q = \u0.DataOut [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12241 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [2], Q = \u0.DataOut [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12243 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [4], Q = \u0.DataOut [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12245 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [6], Q = \u0.DataOut [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12242 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [3], Q = \u0.DataOut [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12239 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_data [0], Q = \u0.DataOut [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12244 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_data [5], Q = \u0.DataOut [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12240 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [1], Q = \u0.DataOut [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20953 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [31], Q = \u4.dout [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20952 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [30], Q = \u4.dout [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20951 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [29], Q = \u4.dout [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20950 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [28], Q = \u4.dout [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20949 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [27], Q = \u4.dout [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20948 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [26], Q = \u4.dout [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20947 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [25], Q = \u4.dout [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20946 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [24], Q = \u4.dout [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20945 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [23], Q = \u4.dout [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20944 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [22], Q = \u4.dout [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20943 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [21], Q = \u4.dout [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20942 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [20], Q = \u4.dout [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20941 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [19], Q = \u4.dout [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20940 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [18], Q = \u4.dout [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20939 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [17], Q = \u4.dout [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20938 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [16], Q = \u4.dout [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20937 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21467 [47], Q = \u4.dout [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20936 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21467 [46], Q = \u4.dout [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20935 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21467 [45], Q = \u4.dout [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20934 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21467 [44], Q = \u4.dout [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20933 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [11], Q = \u4.dout [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20932 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [10], Q = \u4.dout [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20931 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [9], Q = \u4.dout [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20930 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [8], Q = \u4.dout [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20929 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [7], Q = \u4.dout [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20928 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [6], Q = \u4.dout [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20927 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [5], Q = \u4.dout [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20926 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [4], Q = \u4.dout [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20925 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [3], Q = \u4.dout [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20924 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [2], Q = \u4.dout [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20923 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [1], Q = \u4.dout [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$20922 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$21724 [0], Q = \u4.dout [0], rval = 1'0).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 78 unused cells and 154 unused wires.
<suppressed ~79 debug messages>

3.24.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.24.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~54 debug messages>

yosys> opt_merge

3.24.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~120 debug messages>
Removed a total of 40 cells.

yosys> opt_dff

3.24.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 40 unused wires.
<suppressed ~1 debug messages>

3.24.10. Finished fast OPT passes.

yosys> memory_map

3.25. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge -nomux

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.26.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$21033 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$18674
        $auto$simplemap.cc:312:simplemap_bmux$19420

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$21065 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$17253
        $auto$simplemap.cc:312:simplemap_bmux$17956


yosys> opt_dff

3.26.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr -full

3.26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~6 debug messages>

3.26.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.26.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.26.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.26.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$21514 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$17253
        $auto$simplemap.cc:312:simplemap_bmux$18674


yosys> opt_dff

3.26.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.26.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~1 debug messages>

3.26.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.26.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.26.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.26.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.26.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr -full

3.26.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.26.26. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.27. Executing ABC pass (technology mapping using ABC).

3.27.1. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Extracted 7574 gates and 9257 wires to a netlist network with 1681 inputs and 1285 outputs.

3.27.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/usbf/abc_tmp.scr 
ABC:   #Luts =  2424  Max Lvl =  10  Avg Lvl =   3.74  [   1.30 sec. at Pass 0]
ABC:   #Luts =  2180  Max Lvl =  16  Avg Lvl =   4.05  [  43.58 sec. at Pass 1]
ABC:   #Luts =  2148  Max Lvl =  15  Avg Lvl =   3.92  [   8.01 sec. at Pass 2]
ABC:   #Luts =  2136  Max Lvl =  14  Avg Lvl =   3.74  [  10.47 sec. at Pass 3]
ABC:   #Luts =  2124  Max Lvl =  16  Avg Lvl =   3.72  [  10.82 sec. at Pass 4]
ABC:   #Luts =  2117  Max Lvl =  16  Avg Lvl =   3.68  [  10.87 sec. at Pass 5]
ABC:   #Luts =  2117  Max Lvl =  16  Avg Lvl =   3.68  [   8.45 sec. at Pass 6]
ABC:   #Luts =  2107  Max Lvl =  15  Avg Lvl =   3.96  [   8.67 sec. at Pass 7]
ABC:   #Luts =  2105  Max Lvl =  15  Avg Lvl =   3.93  [   8.23 sec. at Pass 8]
ABC:   #Luts =  2093  Max Lvl =  15  Avg Lvl =   3.94  [  11.23 sec. at Pass 9]
ABC:   #Luts =  2093  Max Lvl =  15  Avg Lvl =   3.94  [  12.90 sec. at Pass 10]
ABC:   #Luts =  2090  Max Lvl =  15  Avg Lvl =   3.94  [  15.60 sec. at Pass 11]
ABC:   #Luts =  2090  Max Lvl =  14  Avg Lvl =   3.76  [  11.05 sec. at Pass 12]
ABC:   #Luts =  2083  Max Lvl =  14  Avg Lvl =   3.96  [  13.92 sec. at Pass 13]
ABC:   #Luts =  2083  Max Lvl =  14  Avg Lvl =   3.96  [   9.14 sec. at Pass 14]
ABC:   #Luts =  2079  Max Lvl =  15  Avg Lvl =   3.98  [  10.14 sec. at Pass 15]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.27.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2101
ABC RESULTS:        internal signals:     6291
ABC RESULTS:           input signals:     1681
ABC RESULTS:          output signals:     1285
Removing temp directory.

yosys> opt

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$15276 ($_DFF_P_) from module usbf_top.

yosys> opt_clean

3.28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 5313 unused wires.
<suppressed ~151 debug messages>

yosys> opt_expr

3.28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.28.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.28.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.29. Printing statistics.

=== usbf_top ===

   Number of wires:               3109
   Number of wire bits:          11908
   Number of public wires:        1377
   Number of public wire bits:    9875
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3832
     $_DFFE_PP_                    264
     $_DFF_P_                      476
     $_SDFFCE_PN0P_                  6
     $_SDFFCE_PP0P_                  2
     $_SDFFE_PN0P_                 343
     $_SDFFE_PN1P_                 404
     $_SDFFE_PP0N_                   1
     $_SDFFE_PP0P_                 116
     $_SDFFE_PP1P_                  36
     $_SDFF_PN0_                     8
     $_SDFF_PP0_                    74
     $_SDFF_PP1_                     1
     $lut                         2098
     $mux                            3


yosys> shregmap -minlen 8 -maxlen 20

3.30. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.31. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.32. Printing statistics.

=== usbf_top ===

   Number of wires:               5004
   Number of wire bits:          13803
   Number of public wires:        1377
   Number of public wire bits:    9875
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5723
     $_DFFE_PP0P_                  272
     $_DFF_P_                     1459
     $_MUX_                       1891
     $lut                         2098
     $mux                            3


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.33. Executing TECHMAP pass (map to technology primitives).

3.33.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.33.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~4232 debug messages>

yosys> opt_expr -mux_undef

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~45726 debug messages>

yosys> simplemap

3.35. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~16428 debug messages>
Removed a total of 5476 cells.

yosys> opt_dff -nodffe -nosdff

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 8 unused cells and 11007 unused wires.
<suppressed ~9 debug messages>

yosys> opt -nodffe -nosdff

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~765 debug messages>

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 73 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Extracted 9818 gates and 11528 wires to a netlist network with 1708 inputs and 1562 outputs.

3.41.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/usbf/abc_tmp.scr 
ABC:   #Luts =  2687  Max Lvl =  14  Avg Lvl =   4.58  [   1.73 sec. at Pass 0]
ABC:   #Luts =  2687  Max Lvl =  14  Avg Lvl =   4.58  [  40.88 sec. at Pass 1]
ABC:   #Luts =  2684  Max Lvl =  14  Avg Lvl =   4.64  [  11.97 sec. at Pass 2]
ABC:   #Luts =  2670  Max Lvl =  12  Avg Lvl =   4.52  [  14.37 sec. at Pass 3]
ABC:   #Luts =  2670  Max Lvl =  12  Avg Lvl =   4.52  [  12.70 sec. at Pass 4]
ABC:   #Luts =  2665  Max Lvl =  12  Avg Lvl =   4.62  [  17.35 sec. at Pass 5]
ABC:   #Luts =  2665  Max Lvl =  12  Avg Lvl =   4.62  [  18.02 sec. at Pass 6]
ABC:   #Luts =  2655  Max Lvl =  12  Avg Lvl =   4.82  [  22.24 sec. at Pass 7]
ABC:   #Luts =  2654  Max Lvl =  12  Avg Lvl =   4.75  [  17.65 sec. at Pass 8]
ABC:   #Luts =  2654  Max Lvl =  12  Avg Lvl =   4.75  [  19.29 sec. at Pass 9]
ABC:   #Luts =  2654  Max Lvl =  12  Avg Lvl =   4.75  [  13.10 sec. at Pass 10]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2659
ABC RESULTS:        internal signals:     8258
ABC RESULTS:           input signals:     1708
ABC RESULTS:          output signals:     1562
Removing temp directory.

yosys> opt

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 9455 unused wires.
<suppressed ~38 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \usbf_top

3.43.2. Analyzing design hierarchy..
Top module:  \usbf_top
Removed 0 unused modules.

yosys> stat

3.44. Printing statistics.

=== usbf_top ===

   Number of wires:               3786
   Number of wire bits:          12422
   Number of public wires:        1340
   Number of public wire bits:    9811
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4390
     $lut                         2659
     dff                          1459
     dffsre                        272


yosys> opt_clean -purge

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 964 unused wires.
<suppressed ~964 debug messages>

yosys> write_verilog -noattr -nohex usbf_top.verilog

3.46. Executing Verilog backend.

yosys> bmuxmap

3.46.1. Executing BMUXMAP pass.

yosys> demuxmap

3.46.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\usbf_top'.

Warnings: 18 unique messages, 18 total
End of script. Logfile hash: 8ace145824, CPU: user 52.96s system 0.40s, MEM: 154.95 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 97% 2x abc (1963 sec), 0% 53x opt_expr (19 sec), ...
real 471.19
user 1849.85
sys 166.08
