
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k DMA_DEFINE.vh DMA_FIX_DEFINE.vh dma_ahbdec.v dma_ahbmst.v dma_ahbmux.v dma_ahbslv.v dma_chrf.v dma_chsel.v dma_ctlrf.v dma_engine.v dma_fifo.v dma_rrarb.v dma_top.v

yosys> verific -vlog2k DMA_DEFINE.vh DMA_FIX_DEFINE.vh dma_ahbdec.v dma_ahbmst.v dma_ahbmux.v dma_ahbslv.v dma_chrf.v dma_chsel.v dma_ctlrf.v dma_engine.v dma_fifo.v dma_rrarb.v dma_top.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'DMA_FIX_DEFINE.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_ahbdec.v'
VERIFIC-INFO [VERI-1328] dma_ahbdec.v:38: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_ahbdec.v:38: back to file 'dma_ahbdec.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_ahbmst.v'
VERIFIC-INFO [VERI-1328] dma_ahbmst.v:39: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_ahbmst.v:39: back to file 'dma_ahbmst.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_ahbmux.v'
VERIFIC-INFO [VERI-1328] dma_ahbmux.v:39: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_ahbmux.v:39: back to file 'dma_ahbmux.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_ahbslv.v'
VERIFIC-INFO [VERI-1328] dma_ahbslv.v:40: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_ahbslv.v:40: back to file 'dma_ahbslv.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_chrf.v'
VERIFIC-INFO [VERI-1328] dma_chrf.v:39: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_chrf.v:39: back to file 'dma_chrf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_chsel.v'
VERIFIC-INFO [VERI-1328] dma_chsel.v:41: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_chsel.v:41: back to file 'dma_chsel.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_ctlrf.v'
VERIFIC-INFO [VERI-1328] dma_ctlrf.v:41: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_ctlrf.v:41: back to file 'dma_ctlrf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_engine.v'
VERIFIC-INFO [VERI-1328] dma_engine.v:39: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_engine.v:39: back to file 'dma_engine.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_fifo.v'
VERIFIC-INFO [VERI-1328] dma_fifo.v:44: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_fifo.v:44: back to file 'dma_fifo.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_rrarb.v'
VERIFIC-INFO [VERI-1328] dma_rrarb.v:40: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_rrarb.v:40: back to file 'dma_rrarb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_top.v'
VERIFIC-INFO [VERI-1328] dma_top.v:38: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_top.v:38: back to file 'dma_top.v'
VERIFIC-INFO [VERI-2561] dma_top.v:689: undeclared symbol 'de_err_notify', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:691: undeclared symbol 'st_llp0t3', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:693: undeclared symbol 'dst_m', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:694: undeclared symbol 'src_m', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:695: undeclared symbol 'dst_a', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:696: undeclared symbol 'src_a', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:697: undeclared symbol 'dst_e', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:698: undeclared symbol 'src_e', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:699: undeclared symbol 'dst_wid_wd', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:700: undeclared symbol 'src_wid_wd', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:701: undeclared symbol 'dst_wid_hw', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:702: undeclared symbol 'src_wid_hw', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:703: undeclared symbol 'dst_wid_bt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:704: undeclared symbol 'src_wid_bt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:706: undeclared symbol 'bst_eq0', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:707: undeclared symbol 'bst_eq1', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:708: undeclared symbol 'bst_eq2', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:709: undeclared symbol 'tsz_eq0', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:710: undeclared symbol 'tsz_eq1', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:711: undeclared symbol 'tsz_eq2', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:712: undeclared symbol 'cv8t32', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:713: undeclared symbol 'cv8t16', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:714: undeclared symbol 'cv16t32', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:715: undeclared symbol 'cvtp2', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:716: undeclared symbol 'pack_en', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:717: undeclared symbol 'pack_end', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:718: undeclared symbol 'unpack_en', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:719: undeclared symbol 'upk_cnteq0', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:720: undeclared symbol 'upk_cnteq1', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:732: undeclared symbol 'm0_cp', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:733: undeclared symbol 'm0_tr_sq', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:734: undeclared symbol 'm0_rp_err', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:736: undeclared symbol 'm0_rp_rty', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:740: undeclared symbol 'm0_dma_err_ok', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:743: undeclared symbol 'm0_is_dst', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:744: undeclared symbol 'm0_is_src', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:746: undeclared symbol 'm0_is_llp', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:748: undeclared symbol 'm0_arb_src', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:749: undeclared symbol 'm0_arb_dst', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:762: undeclared symbol 'm1_cp', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:763: undeclared symbol 'm1_tr_sq', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:764: undeclared symbol 'm1_rp_err', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:765: undeclared symbol 'm1_rp_rty', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:768: undeclared symbol 'm1_dtp', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:769: undeclared symbol 'm1_dma_had_a_rty', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:771: undeclared symbol 'm1_dma_err_ok', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:774: undeclared symbol 'm1_is_dst', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:775: undeclared symbol 'm1_is_src', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:777: undeclared symbol 'm1_is_llp', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:779: undeclared symbol 'm1_arb_src', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:780: undeclared symbol 'm1_arb_dst', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:783: undeclared symbol 'm1_src2br', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:785: undeclared symbol 'm0_m1_same', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:794: undeclared symbol 'm1_arb_br', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:798: undeclared symbol 'slv_br_req', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:801: undeclared symbol 'slv_brst_cmd', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:802: undeclared symbol 'slv_brst_mscd', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:805: undeclared symbol 'br_req_qf', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:811: undeclared symbol 'ff_eq1', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:812: undeclared symbol 'ff_eq2', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:813: undeclared symbol 'ff_2ltfl', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:814: undeclared symbol 'ff_1ltfl', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:815: undeclared symbol 'ff_part_wd', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:819: undeclared symbol 'ff_wr', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:822: undeclared symbol 'de_ff_push', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:823: undeclared symbol 'de_ff_pop', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:824: undeclared symbol 'de_ff_ahead', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:825: undeclared symbol 'de_ff_flush', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:826: undeclared symbol 'de_ff_clear', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:827: undeclared symbol 'de_ff_ini', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:833: undeclared symbol 'arb_req', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:840: undeclared symbol 'arb_chllpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:844: undeclared symbol 'de_ack', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:845: undeclared symbol 'de_tc_st', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:849: undeclared symbol 'rf_cherr', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:850: undeclared symbol 'arb_chabt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:852: undeclared symbol 'arb_abt_any', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:863: undeclared symbol 'de_llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:865: undeclared symbol 'de_busy', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:866: undeclared symbol 'de_sad_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:867: undeclared symbol 'de_dad_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:868: undeclared symbol 'de_tsz_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:870: undeclared symbol 'de_llp_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:871: undeclared symbol 'de_csr_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:872: undeclared symbol 'de_llpen_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:874: undeclared symbol 'de_en_clr', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:876: undeclared symbol 'de_abt_on_idle', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:877: undeclared symbol 'de_err_st', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:903: undeclared symbol 'slv_wr_d1', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:936: undeclared symbol 'ff_geth', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:938: undeclared symbol 'ff_q_full', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:939: undeclared symbol 'ff_empty', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1152: undeclared symbol 'h1req', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1223: undeclared symbol 'slv_rf_req', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1288: undeclared symbol 'c0llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1290: undeclared symbol 'c0abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1310: undeclared symbol 'c1llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1312: undeclared symbol 'c1abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1333: undeclared symbol 'c2llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1336: undeclared symbol 'c2abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1358: undeclared symbol 'c3llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1361: undeclared symbol 'c3abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1383: undeclared symbol 'c4llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1386: undeclared symbol 'c4abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1408: undeclared symbol 'c5llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1411: undeclared symbol 'c5abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1433: undeclared symbol 'c6llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1436: undeclared symbol 'c6abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1458: undeclared symbol 'c7llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1461: undeclared symbol 'c7abt', assumed default net type 'wire'

yosys> synth_rs -top dma_top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.36

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top dma_top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] dma_top.v:40: compiling module 'dma_top'
VERIFIC-INFO [VERI-1018] dma_engine.v:41: compiling module 'dma_engine'
VERIFIC-WARNING [VERI-1209] dma_engine.v:1379: expression size 32 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] dma_engine.v:1522: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] dma_engine.v:1630: expression size 32 truncated to fit in target size 2
VERIFIC-INFO [VERI-1018] dma_ahbmst.v:41: compiling module 'dma_ahbmst(THIS_IS_M1=0)'
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:414: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:464: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:519: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:635: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:660: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:799: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:1096: expression size 17 truncated to fit in target size 16
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:1097: expression size 32 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] dma_ahbmst.v:41: compiling module 'dma_ahbmst'
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:414: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:464: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:519: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:635: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:660: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:799: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:1096: expression size 17 truncated to fit in target size 16
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:1097: expression size 32 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] dma_fifo.v:48: compiling module 'dma_fifo'
VERIFIC-WARNING [VERI-1209] dma_fifo.v:419: expression size 4 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] dma_fifo.v:427: expression size 4 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] dma_fifo.v:438: expression size 5 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] dma_fifo.v:440: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_fifo.v:458: compiling module 'ff_ram'
VERIFIC-INFO [VERI-2571] dma_fifo.v:479: extracting RAM for identifier 'ram_dt'
VERIFIC-INFO [VERI-1018] dma_ctlrf.v:43: compiling module 'dma_ctlrf'
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=1)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=2)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=3)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=4)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=5)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=6)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=7)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chsel.v:43: compiling module 'dma_chsel'
VERIFIC-WARNING [VERI-2580] dma_chsel.v:858: latch inferred for net 'arb_ch_sel[2]'
VERIFIC-INFO [VERI-1018] dma_rrarb.v:42: compiling module 'dma_rrarb'
VERIFIC-INFO [VERI-1018] dma_ahbslv.v:42: compiling module 'dma_ahbslv'
VERIFIC-INFO [VERI-1018] dma_ahbdec.v:43: compiling module 'dma_ahbdec'
VERIFIC-INFO [VERI-1018] dma_ahbmux.v:44: compiling module 'dma_ahbmux'
Importing module dma_top.
Importing module dma_ahbdec.
Importing module dma_ahbmst.
Importing module dma_ahbmst(THIS_IS_M1=0).
Importing module dma_ahbmux.
Importing module dma_ahbslv.
Importing module dma_chsel.
Importing module dma_ctlrf.
Importing module dma_chrf.
Importing module dma_chrf(CH_NO=1).
Importing module dma_chrf(CH_NO=2).
Importing module dma_chrf(CH_NO=3).
Importing module dma_chrf(CH_NO=4).
Importing module dma_chrf(CH_NO=5).
Importing module dma_chrf(CH_NO=6).
Importing module dma_chrf(CH_NO=7).
Importing module dma_engine.
Importing module dma_fifo.
Importing module dma_rrarb.
Importing module ff_ram.

3.3.1. Analyzing design hierarchy..
Top module:  \dma_top
Used module:     \dma_ahbmux
Used module:     \dma_ahbdec
Used module:     \dma_ahbslv
Used module:     \dma_chsel
Used module:         \dma_rrarb
Used module:     \dma_ctlrf
Used module:         \dma_chrf(CH_NO=7)
Used module:         \dma_chrf(CH_NO=6)
Used module:         \dma_chrf(CH_NO=5)
Used module:         \dma_chrf(CH_NO=4)
Used module:         \dma_chrf(CH_NO=3)
Used module:         \dma_chrf(CH_NO=2)
Used module:         \dma_chrf(CH_NO=1)
Used module:         \dma_chrf
Used module:     \dma_fifo
Used module:         \ff_ram
Used module:     \dma_ahbmst
Used module:     \dma_ahbmst(THIS_IS_M1=0)
Used module:     \dma_engine

3.3.2. Analyzing design hierarchy..
Top module:  \dma_top
Used module:     \dma_ahbmux
Used module:     \dma_ahbdec
Used module:     \dma_ahbslv
Used module:     \dma_chsel
Used module:         \dma_rrarb
Used module:     \dma_ctlrf
Used module:         \dma_chrf(CH_NO=7)
Used module:         \dma_chrf(CH_NO=6)
Used module:         \dma_chrf(CH_NO=5)
Used module:         \dma_chrf(CH_NO=4)
Used module:         \dma_chrf(CH_NO=3)
Used module:         \dma_chrf(CH_NO=2)
Used module:         \dma_chrf(CH_NO=1)
Used module:         \dma_chrf
Used module:     \dma_fifo
Used module:         \ff_ram
Used module:     \dma_ahbmst
Used module:     \dma_ahbmst(THIS_IS_M1=0)
Used module:     \dma_engine
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module ff_ram.
Optimizing module dma_rrarb.
<suppressed ~2 debug messages>
Optimizing module dma_fifo.
<suppressed ~16 debug messages>
Optimizing module dma_engine.
<suppressed ~27 debug messages>
Optimizing module dma_chrf(CH_NO=7).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=6).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=5).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=4).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=3).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=2).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=1).
<suppressed ~34 debug messages>
Optimizing module dma_chrf.
<suppressed ~35 debug messages>
Optimizing module dma_ctlrf.
<suppressed ~32 debug messages>
Optimizing module dma_chsel.
<suppressed ~30 debug messages>
Optimizing module dma_ahbslv.
<suppressed ~20 debug messages>
Optimizing module dma_ahbmux.
<suppressed ~7 debug messages>
Optimizing module dma_ahbmst(THIS_IS_M1=0).
<suppressed ~23 debug messages>
Optimizing module dma_ahbmst.
<suppressed ~23 debug messages>
Optimizing module dma_ahbdec.
<suppressed ~16 debug messages>
Optimizing module dma_top.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module ff_ram.
Deleting now unused module dma_rrarb.
Deleting now unused module dma_fifo.
Deleting now unused module dma_engine.
Deleting now unused module dma_chrf(CH_NO=7).
Deleting now unused module dma_chrf(CH_NO=6).
Deleting now unused module dma_chrf(CH_NO=5).
Deleting now unused module dma_chrf(CH_NO=4).
Deleting now unused module dma_chrf(CH_NO=3).
Deleting now unused module dma_chrf(CH_NO=2).
Deleting now unused module dma_chrf(CH_NO=1).
Deleting now unused module dma_chrf.
Deleting now unused module dma_ctlrf.
Deleting now unused module dma_chsel.
Deleting now unused module dma_ahbslv.
Deleting now unused module dma_ahbmux.
Deleting now unused module dma_ahbmst(THIS_IS_M1=0).
Deleting now unused module dma_ahbmst.
Deleting now unused module dma_ahbdec.
<suppressed ~22 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~4 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 67 unused cells and 11627 unused wires.
<suppressed ~1666 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module dma_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~17 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~282 debug messages>
Removed a total of 94 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\de.$verific$i150$dma_engine.v:858$17864: \de.st_ed1s -> 1'1
      Replacing known input bits on port B of cell $flatten\m1_mux.$verific$i65$dma_ahbmux.v:359$8466: \m1_mux.hrdy_df -> 1'1
  Analyzing evaluation results.
    dead port 5/7 on $pmux $flatten\ahb_mst0.$verific$select_342$dma_ahbmst.v:978$8184.
Removed 1 multiplexer ports.
<suppressed ~522 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
    New input vector for $reduce_or cell $flatten\ahb_mst0.$verific$reduce_nor_341$dma_ahbmst.v:978$8182: { $flatten\ahb_mst0.$verific$n2949$7745 $flatten\ahb_mst0.$verific$n2951$7747 $flatten\ahb_mst0.$verific$n2952$7748 \ahb_mst0.mx_cmd_st [1] }
    New input vector for $reduce_or cell $flatten\ahb_mst0.$verific$reduce_nor_339$dma_ahbmst.v:975$8178: { \ahb_mst0.ad_sel_llp $flatten\ahb_mst0.$verific$n2950$7746 \ahb_mst0.mx_cmd_st [1] }
    New input vector for $reduce_or cell $flatten\ahb_mst0.$verific$reduce_nor_337$dma_ahbmst.v:972$8174: { $flatten\ahb_mst0.$verific$n2948$7744 \ahb_mst0.mx_cmd_st [1] }
    New ctrl vector for $pmux cell $flatten\ahb_mst0.$verific$select_400$dma_ahbmst.v:1033$8232: { $flatten\ahb_mst0.$verific$n3165$7778 $flatten\ahb_mst0.$verific$n3166$7779 $flatten\ahb_mst0.$verific$n3167$7780 $flatten\ahb_mst0.$verific$n3168$7781 $flatten\ahb_mst0.$verific$n3169$7782 $flatten\ahb_mst0.$verific$n3170$7783 }
    New ctrl vector for $pmux cell $flatten\ahb_mst1.$verific$select_418$dma_ahbmst.v:1033$7532: { $flatten\ahb_mst1.$verific$n3603$7039 $flatten\ahb_mst1.$verific$n3604$7040 $flatten\ahb_mst1.$verific$n3605$7041 $flatten\ahb_mst1.$verific$n3606$7042 $flatten\ahb_mst1.$verific$n3607$7043 $flatten\ahb_mst1.$verific$n3608$7044 }
    New ctrl vector for $pmux cell $flatten\ch_sel.$verific$Select_268$dma_chsel.v:858$9237: $auto$opt_reduce.cc:134:opt_pmux$18825
    New ctrl vector for $pmux cell $flatten\de.$verific$select_221$dma_engine.v:1010$17925: { $flatten\de.$verific$n621$17466 $flatten\de.$verific$n622$17467 $flatten\de.$verific$n623$17468 $flatten\de.$verific$n624$17469 $flatten\de.$verific$n625$17470 $flatten\de.$verific$n627$17472 $flatten\de.$verific$n628$17473 $flatten\de.$verific$n629$17474 $flatten\de.$verific$n630$17475 $flatten\de.$verific$n631$17476 $auto$opt_reduce.cc:134:opt_pmux$18827 }
    New ctrl vector for $pmux cell $flatten\de.$verific$select_634$dma_engine.v:1602$18229: { $flatten\de.$verific$n1730$17639 $flatten\de.$verific$n1731$17640 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_14$dma_ahbdec.v:215$6669: { $flatten\m1_decoder.$verific$n15$6512 $flatten\m1_decoder.$verific$n16$6513 $flatten\m1_decoder.$verific$n17$6514 $flatten\m1_decoder.$verific$n18$6515 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_20$dma_ahbdec.v:226$6677: { $flatten\m1_decoder.$verific$n25$6517 $flatten\m1_decoder.$verific$n26$6518 $flatten\m1_decoder.$verific$n27$6519 $flatten\m1_decoder.$verific$n28$6520 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_26$dma_ahbdec.v:237$6685: { $flatten\m1_decoder.$verific$n35$6522 $flatten\m1_decoder.$verific$n36$6523 $flatten\m1_decoder.$verific$n37$6524 $flatten\m1_decoder.$verific$n38$6525 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_32$dma_ahbdec.v:248$6693: { $flatten\m1_decoder.$verific$n45$6527 $flatten\m1_decoder.$verific$n46$6528 $flatten\m1_decoder.$verific$n47$6529 $flatten\m1_decoder.$verific$n48$6530 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_38$dma_ahbdec.v:259$6701: { $flatten\m1_decoder.$verific$n55$6532 $flatten\m1_decoder.$verific$n56$6533 $flatten\m1_decoder.$verific$n57$6534 $flatten\m1_decoder.$verific$n58$6535 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_44$dma_ahbdec.v:270$6709: { $flatten\m1_decoder.$verific$n65$6537 $flatten\m1_decoder.$verific$n66$6538 $flatten\m1_decoder.$verific$n67$6539 $flatten\m1_decoder.$verific$n68$6540 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_50$dma_ahbdec.v:281$6717: { $flatten\m1_decoder.$verific$n75$6542 $flatten\m1_decoder.$verific$n76$6543 $flatten\m1_decoder.$verific$n77$6544 $flatten\m1_decoder.$verific$n78$6545 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_56$dma_ahbdec.v:292$6725: { $flatten\m1_decoder.$verific$n85$6547 $flatten\m1_decoder.$verific$n86$6548 $flatten\m1_decoder.$verific$n87$6549 $flatten\m1_decoder.$verific$n88$6550 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_62$dma_ahbdec.v:302$6733: { $flatten\m1_decoder.$verific$n95$6552 $flatten\m1_decoder.$verific$n96$6553 $flatten\m1_decoder.$verific$n97$6554 $flatten\m1_decoder.$verific$n98$6555 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_68$dma_ahbdec.v:313$6741: { $flatten\m1_decoder.$verific$n105$6557 $flatten\m1_decoder.$verific$n106$6558 $flatten\m1_decoder.$verific$n107$6559 $flatten\m1_decoder.$verific$n108$6560 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_74$dma_ahbdec.v:324$6749: { $flatten\m1_decoder.$verific$n115$6562 $flatten\m1_decoder.$verific$n116$6563 $flatten\m1_decoder.$verific$n117$6564 $flatten\m1_decoder.$verific$n118$6565 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_8$dma_ahbdec.v:205$6661: { $flatten\m1_decoder.$verific$n5$6507 $flatten\m1_decoder.$verific$n6$6508 $flatten\m1_decoder.$verific$n7$6509 $flatten\m1_decoder.$verific$n8$6510 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_80$dma_ahbdec.v:335$6757: { $flatten\m1_decoder.$verific$n125$6567 $flatten\m1_decoder.$verific$n126$6568 $flatten\m1_decoder.$verific$n127$6569 $flatten\m1_decoder.$verific$n128$6570 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_86$dma_ahbdec.v:346$6765: { $flatten\m1_decoder.$verific$n135$6572 $flatten\m1_decoder.$verific$n136$6573 $flatten\m1_decoder.$verific$n137$6574 $flatten\m1_decoder.$verific$n138$6575 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_92$dma_ahbdec.v:357$6773: { $flatten\m1_decoder.$verific$n145$6577 $flatten\m1_decoder.$verific$n146$6578 $flatten\m1_decoder.$verific$n147$6579 $flatten\m1_decoder.$verific$n148$6580 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_98$dma_ahbdec.v:368$6781: { $flatten\m1_decoder.$verific$n155$6582 $flatten\m1_decoder.$verific$n156$6583 $flatten\m1_decoder.$verific$n157$6584 $flatten\m1_decoder.$verific$n158$6585 }
    New ctrl vector for $pmux cell $flatten\m1_mux.$verific$select_14$dma_ahbmux.v:282$8428: { $flatten\m1_mux.$verific$n7$8324 $flatten\m1_mux.$verific$n8$8325 $flatten\m1_mux.$verific$n9$8326 $flatten\m1_mux.$verific$n10$8327 $flatten\m1_mux.$verific$n11$8328 $flatten\m1_mux.$verific$n12$8329 $flatten\m1_mux.$verific$n13$8330 }
    New ctrl vector for $pmux cell $flatten\m1_mux.$verific$select_24$dma_ahbmux.v:309$8440: { $flatten\m1_mux.$verific$n20$8333 $flatten\m1_mux.$verific$n21$8334 $flatten\m1_mux.$verific$n22$8335 $flatten\m1_mux.$verific$n23$8336 $flatten\m1_mux.$verific$n24$8337 $flatten\m1_mux.$verific$n25$8338 $flatten\m1_mux.$verific$n26$8339 }
  Optimizing cells in module \dma_top.
Performed a total of 28 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\m1_mux.$verific$mux_no_reg$dma_ahbmux.v:325$8452 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\m1_mux.$verific$hrp_df_reg$dma_ahbmux.v:369$8472 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\m1_mux.$verific$hrmxnof_reg$dma_ahbmux.v:341$8460 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\m1_mux.$verific$hrdy_df_reg$dma_ahbmux.v:359$8468 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ram_wrq_reg$dma_fifo.v:356$18538 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ram_wr_reg$dma_fifo.v:322$18526 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$part_wd_reg$dma_fifo.v:387$18557 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ff_fram_wado_reg$dma_fifo.v:419$18567 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ff_fram_radx_reg$dma_fifo.v:427$18572 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ff_cnv_q_vld_reg$dma_fifo.v:313$18521 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ff_cnt_reg$dma_fifo.v:440$18586 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$cnv_bt3_reg$dma_fifo.v:302$18511 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$cnv_bt2_reg$dma_fifo.v:296$18508 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$cnv_bt1_reg$dma_fifo.v:290$18505 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$cnv_bt0_reg$dma_fifo.v:284$18502 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$cbe_reg$dma_fifo.v:271$18489 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$upk_cnt1_reg$dma_engine.v:1638$18244 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$upk_cnt0_reg$dma_engine.v:1630$18239 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$tsz_cnt_reg$dma_engine.v:1537$18188 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$st_rd_msk_reg$dma_engine.v:1500$18171 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$st_ed1s_reg$dma_engine.v:858$17866 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$m1_is_llp_reg$dma_engine.v:1096$18002 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$m1_arb_st_reg$dma_engine.v:1269$18065 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$m0_is_llp_reg$dma_engine.v:1081$17998 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$m0_arb_st_reg$dma_engine.v:1122$18019 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$de_st_reg$dma_engine.v:911$17898 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$de_mllp_reg$dma_engine.v:653$17765 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$de_ff_flush_d1_reg$dma_engine.v:1364$18097 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$de_err_notify_reg$dma_engine.v:1473$18157 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$bst_cnt_reg$dma_engine.v:1522$18181 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$swidth_reg$dma_chrf.v:411$17212 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$src_sz_reg$dma_chrf.v:352$17189 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$src_sel_reg$dma_chrf.v:463$17249 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$17245 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$17246 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$prot3_reg$dma_chrf.v:343$17183 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$prot2_reg$dma_chrf.v:343$17184 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$prot1_reg$dma_chrf.v:343$17185 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$mode_reg$dma_chrf.v:431$17220 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$17168 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$17267 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$int_err_msk_reg$dma_chrf.v:500$17266 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$17265 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$dwidth_reg$dma_chrf.v:422$17217 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$dst_sel_reg$dma_chrf.v:463$17250 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$dreqmode_reg$dma_chrf.v:326$17176 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$17247 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$17248 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chtsz_reg$dma_chrf.v:644$17349 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chsad_reg$dma_chrf.v:540$17281 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chpri_reg$dma_chrf.v:316$17173 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chllpen_reg$dma_chrf.v:239$17125 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chllp_reg$dma_chrf.v:621$17330 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chllp_on_reg$dma_chrf.v:267$17137 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$17152 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chdad_reg$dma_chrf.v:580$17307 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chabt_reg$dma_chrf.v:390$17202 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$ch_en_reg$dma_chrf.v:480$17259 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$autold_reg$dma_chrf.v:400$17206 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$swidth_reg$dma_chrf.v:411$16761 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$src_sz_reg$dma_chrf.v:352$16738 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$src_sel_reg$dma_chrf.v:463$16798 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$16794 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$16795 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$prot3_reg$dma_chrf.v:343$16732 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$prot2_reg$dma_chrf.v:343$16733 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$prot1_reg$dma_chrf.v:343$16734 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$mode_reg$dma_chrf.v:431$16769 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$16717 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$16816 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$int_err_msk_reg$dma_chrf.v:500$16815 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$16814 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$dwidth_reg$dma_chrf.v:422$16766 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$dst_sel_reg$dma_chrf.v:463$16799 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$dreqmode_reg$dma_chrf.v:326$16725 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$16796 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$16797 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chtsz_reg$dma_chrf.v:644$16898 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chsad_reg$dma_chrf.v:540$16830 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chpri_reg$dma_chrf.v:316$16722 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chllpen_reg$dma_chrf.v:239$16674 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chllp_reg$dma_chrf.v:621$16879 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chllp_on_reg$dma_chrf.v:267$16686 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$16701 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chdad_reg$dma_chrf.v:580$16856 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chabt_reg$dma_chrf.v:390$16751 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$ch_en_reg$dma_chrf.v:480$16808 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$autold_reg$dma_chrf.v:400$16755 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$swidth_reg$dma_chrf.v:411$16310 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$src_sz_reg$dma_chrf.v:352$16287 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$src_sel_reg$dma_chrf.v:463$16347 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$16343 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$16344 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$prot3_reg$dma_chrf.v:343$16281 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$prot2_reg$dma_chrf.v:343$16282 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$prot1_reg$dma_chrf.v:343$16283 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$mode_reg$dma_chrf.v:431$16318 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$16266 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$16365 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$int_err_msk_reg$dma_chrf.v:500$16364 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$16363 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$dwidth_reg$dma_chrf.v:422$16315 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$dst_sel_reg$dma_chrf.v:463$16348 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$dreqmode_reg$dma_chrf.v:326$16274 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$16345 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$16346 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chtsz_reg$dma_chrf.v:644$16447 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chsad_reg$dma_chrf.v:540$16379 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chpri_reg$dma_chrf.v:316$16271 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chllpen_reg$dma_chrf.v:239$16223 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chllp_reg$dma_chrf.v:621$16428 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chllp_on_reg$dma_chrf.v:267$16235 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$16250 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chdad_reg$dma_chrf.v:580$16405 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chabt_reg$dma_chrf.v:390$16300 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$ch_en_reg$dma_chrf.v:480$16357 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$autold_reg$dma_chrf.v:400$16304 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$swidth_reg$dma_chrf.v:411$15859 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$src_sz_reg$dma_chrf.v:352$15836 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$src_sel_reg$dma_chrf.v:463$15896 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$15892 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$15893 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$prot3_reg$dma_chrf.v:343$15830 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$prot2_reg$dma_chrf.v:343$15831 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$prot1_reg$dma_chrf.v:343$15832 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$mode_reg$dma_chrf.v:431$15867 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$15815 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15914 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15913 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15912 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$dwidth_reg$dma_chrf.v:422$15864 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$dst_sel_reg$dma_chrf.v:463$15897 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$dreqmode_reg$dma_chrf.v:326$15823 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$15894 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$15895 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chtsz_reg$dma_chrf.v:644$15996 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chsad_reg$dma_chrf.v:540$15928 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chpri_reg$dma_chrf.v:316$15820 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chllpen_reg$dma_chrf.v:239$15772 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chllp_reg$dma_chrf.v:621$15977 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chllp_on_reg$dma_chrf.v:267$15784 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$15799 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chdad_reg$dma_chrf.v:580$15954 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chabt_reg$dma_chrf.v:390$15849 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$ch_en_reg$dma_chrf.v:480$15906 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$autold_reg$dma_chrf.v:400$15853 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$swidth_reg$dma_chrf.v:411$15408 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$src_sz_reg$dma_chrf.v:352$15385 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$src_sel_reg$dma_chrf.v:463$15445 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$15441 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$15442 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$prot3_reg$dma_chrf.v:343$15379 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$prot2_reg$dma_chrf.v:343$15380 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$prot1_reg$dma_chrf.v:343$15381 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$mode_reg$dma_chrf.v:431$15416 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$15364 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15463 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15462 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15461 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$dwidth_reg$dma_chrf.v:422$15413 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$dst_sel_reg$dma_chrf.v:463$15446 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$dreqmode_reg$dma_chrf.v:326$15372 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$15443 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$15444 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chtsz_reg$dma_chrf.v:644$15545 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chsad_reg$dma_chrf.v:540$15477 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chpri_reg$dma_chrf.v:316$15369 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chllpen_reg$dma_chrf.v:239$15321 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chllp_reg$dma_chrf.v:621$15526 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chllp_on_reg$dma_chrf.v:267$15333 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$15348 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chdad_reg$dma_chrf.v:580$15503 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chabt_reg$dma_chrf.v:390$15398 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$ch_en_reg$dma_chrf.v:480$15455 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$autold_reg$dma_chrf.v:400$15402 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$swidth_reg$dma_chrf.v:411$14957 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$src_sz_reg$dma_chrf.v:352$14934 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$src_sel_reg$dma_chrf.v:463$14994 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$14990 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$14991 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$prot3_reg$dma_chrf.v:343$14928 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$prot2_reg$dma_chrf.v:343$14929 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$prot1_reg$dma_chrf.v:343$14930 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$mode_reg$dma_chrf.v:431$14965 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$14913 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15012 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15011 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15010 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$dwidth_reg$dma_chrf.v:422$14962 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$dst_sel_reg$dma_chrf.v:463$14995 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$dreqmode_reg$dma_chrf.v:326$14921 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$14992 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$14993 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chtsz_reg$dma_chrf.v:644$15094 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chsad_reg$dma_chrf.v:540$15026 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chpri_reg$dma_chrf.v:316$14918 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chllpen_reg$dma_chrf.v:239$14870 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chllp_reg$dma_chrf.v:621$15075 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chllp_on_reg$dma_chrf.v:267$14882 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$14897 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chdad_reg$dma_chrf.v:580$15052 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chabt_reg$dma_chrf.v:390$14947 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$ch_en_reg$dma_chrf.v:480$15004 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$autold_reg$dma_chrf.v:400$14951 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$swidth_reg$dma_chrf.v:411$14506 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$src_sz_reg$dma_chrf.v:352$14483 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$src_sel_reg$dma_chrf.v:463$14543 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$14539 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$14540 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$prot3_reg$dma_chrf.v:343$14477 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$prot2_reg$dma_chrf.v:343$14478 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$prot1_reg$dma_chrf.v:343$14479 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$mode_reg$dma_chrf.v:431$14514 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$14462 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$14561 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$int_err_msk_reg$dma_chrf.v:500$14560 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$14559 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$dwidth_reg$dma_chrf.v:422$14511 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$dst_sel_reg$dma_chrf.v:463$14544 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$dreqmode_reg$dma_chrf.v:326$14470 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$14541 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$14542 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chtsz_reg$dma_chrf.v:644$14643 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chsad_reg$dma_chrf.v:540$14575 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chpri_reg$dma_chrf.v:316$14467 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chllpen_reg$dma_chrf.v:239$14419 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chllp_reg$dma_chrf.v:621$14624 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chllp_on_reg$dma_chrf.v:267$14431 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$14446 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chdad_reg$dma_chrf.v:580$14601 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chabt_reg$dma_chrf.v:390$14496 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$ch_en_reg$dma_chrf.v:480$14553 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$autold_reg$dma_chrf.v:400$14500 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$swidth_reg$dma_chrf.v:411$14055 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$src_sz_reg$dma_chrf.v:352$14032 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$src_sel_reg$dma_chrf.v:463$14092 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$14088 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$14089 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$prot3_reg$dma_chrf.v:343$14026 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$prot2_reg$dma_chrf.v:343$14027 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$prot1_reg$dma_chrf.v:343$14028 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$mode_reg$dma_chrf.v:431$14063 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$14011 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$14110 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$int_err_msk_reg$dma_chrf.v:500$14109 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$14108 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$dwidth_reg$dma_chrf.v:422$14060 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$dst_sel_reg$dma_chrf.v:463$14093 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$dreqmode_reg$dma_chrf.v:326$14019 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$14090 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$14091 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chtsz_reg$dma_chrf.v:644$14192 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chsad_reg$dma_chrf.v:540$14124 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chpri_reg$dma_chrf.v:316$14016 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chllpen_reg$dma_chrf.v:239$13968 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chllp_reg$dma_chrf.v:621$14173 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chllp_on_reg$dma_chrf.v:267$13980 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$13995 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chdad_reg$dma_chrf.v:580$14150 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chabt_reg$dma_chrf.v:390$14045 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$ch_en_reg$dma_chrf.v:480$14102 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$autold_reg$dma_chrf.v:400$14049 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10616 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$sync_reg$dma_ctlrf.v:2281$10636 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$rf_sel_d1_reg$dma_ctlrf.v:1475$10163 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$m1end_reg$dma_ctlrf.v:2257$10623 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$m0end_reg$dma_ctlrf.v:2263$10626 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$10156 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hwriteo_reg$dma_ahbmst.v:671$8079 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hwdatao_reg$dma_ahbmst.v:893$8137 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hsizeo_reg$dma_ahbmst.v:726$8098 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hreqo_reg$dma_ahbmst.v:1174$8299 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hproto_reg$dma_ahbmst.v:783$8103 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hbursto_reg$dma_ahbmst.v:811$8115 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$haddro_reg$dma_ahbmst.v:987$8188 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$dmaint_tc_reg$dma_ctlrf.v:1721$10514 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$dmaint_reg$dma_ctlrf.v:1715$10512 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$dmaint_err_reg$dma_ctlrf.v:1727$10516 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$dmacen_reg$dma_ctlrf.v:2269$10629 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c7dmabs_reg$dma_ctlrf.v:2420$10692 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c7brbs_reg$dma_ctlrf.v:2557$10748 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c6dmabs_reg$dma_ctlrf.v:2403$10685 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c6brbs_reg$dma_ctlrf.v:2540$10741 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c5dmabs_reg$dma_ctlrf.v:2386$10678 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c5brbs_reg$dma_ctlrf.v:2523$10734 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c4dmabs_reg$dma_ctlrf.v:2369$10671 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c4brbs_reg$dma_ctlrf.v:2506$10727 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c3dmabs_reg$dma_ctlrf.v:2352$10664 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c3brbs_reg$dma_ctlrf.v:2489$10720 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c2dmabs_reg$dma_ctlrf.v:2335$10657 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c2brbs_reg$dma_ctlrf.v:2472$10713 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c1dmabs_reg$dma_ctlrf.v:2318$10650 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c1brbs_reg$dma_ctlrf.v:2455$10706 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c0dmabs_reg$dma_ctlrf.v:2302$10642 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c0brbs_reg$dma_ctlrf.v:2439$10699 ($aldff) from module dma_top.
Removing never-active async load on $flatten\ctl_rf.$verific$be_d1_reg$dma_ctlrf.v:1469$10159 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10613 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.\dma_rrarb3.$verific$state_reg$dma_rrarb.v:74$18748 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.\dma_rrarb2.$verific$state_reg$dma_rrarb.v:74$18748 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.\dma_rrarb1.$verific$state_reg$dma_rrarb.v:74$18748 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.\dma_rrarb0.$verific$state_reg$dma_rrarb.v:74$18748 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$vld_req_any_d1_reg$dma_chsel.v:868$9242 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$fix_pri_sel_reg$dma_chsel.v:848$9221 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$dma_tc_reg$dma_chsel.v:1243$9354 ($aldff) from module dma_top.
Removing never-active async load on $flatten\ch_sel.$verific$dma_reqd2_reg$dma_chsel.v:485$9095 ($aldff) from module dma_top.
Removing never-active async load on $flatten\ch_sel.$verific$dma_reqd1_reg$dma_chsel.v:459$9092 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$dma_ack_reg$dma_chsel.v:1085$9307 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$de_stup_d1_reg$dma_chsel.v:905$9257 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$arb_req_reg$dma_chsel.v:890$9255 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$arb_chcsr_reg_reg$dma_chsel.v:1310$9360 ($aldff) from module dma_top.
Removing never-active CLR on $flatten\ch_sel.$verific$arb_ch_sel_reg$dma_chsel.v:858$9222 ($dlatchsr) from module dma_top.
Removing never-active ARST on $flatten\ch_sel.$verific$arb_ch_sel_reg$dma_chsel.v:858$9222 ($dlatchsr) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$slv_wr_d1o_reg$dma_ahbslv.v:274$8647 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$slv_sz_d1o_reg$dma_ahbslv.v:268$8642 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$slv_pt_d1o_reg$dma_ahbslv.v:268$8643 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$slv_br_req_reg$dma_ahbslv.v:366$8712 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$slv_ad_d1o_reg$dma_ahbslv.v:268$8641 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$hresp_br_reg$dma_ahbslv.v:448$8762 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$hreadyout_reg_reg$dma_ahbslv.v:315$8676 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$hreadyout_br_reg$dma_ahbslv.v:435$8755 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$hrdata_reg_reg$dma_ahbslv.v:346$8702 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$hrdata_br_reg$dma_ahbslv.v:492$8797 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$br_st_reg$dma_ahbslv.v:407$8733 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$mx_dtp_reg$dma_ahbmst.v:596$7340 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$mx_dt_st_reg$dma_ahbmst.v:607$7349 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$mx_dma_had_a_rty_reg$dma_ahbmst.v:1209$7614 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$mx_cmd_st_reg$dma_ahbmst.v:586$7335 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$mx_ad1t0x_reg$dma_ahbmst.v:1111$7559 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$m0_m1_diff_tx_reg$dma_ahbmst.v:926$7451 ($aldff) from module dma_top.
Removing never-active async load on $flatten\ahb_mst1.$verific$inc_selx_reg$dma_ahbmst.v:1045$7536 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$hwriteo_reg$dma_ahbmst.v:671$7378 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$hwdatao_reg$dma_ahbmst.v:893$7437 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$hsizeo_reg$dma_ahbmst.v:726$7397 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$hproto_reg$dma_ahbmst.v:783$7403 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$hbursto_reg$dma_ahbmst.v:811$7415 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$haddro_reg$dma_ahbmst.v:987$7488 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$adin_is_neg_reg$dma_ahbmst.v:1094$7547 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$add_cfx_reg$dma_ahbmst.v:1088$7544 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$mx_dtp_reg$dma_ahbmst.v:596$8055 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$mx_dt_st_reg$dma_ahbmst.v:607$8064 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$mx_dma_had_a_rty_reg$dma_ahbmst.v:1209$8311 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$mx_cmd_st_reg$dma_ahbmst.v:586$8050 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$mx_ad1t0x_reg$dma_ahbmst.v:1111$8259 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$m0_m1_diff_tx_reg$dma_ahbmst.v:926$8151 ($aldff) from module dma_top.
Removing never-active async load on $flatten\ahb_mst0.$verific$inc_selx_reg$dma_ahbmst.v:1045$8236 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$add_cfx_reg$dma_ahbmst.v:1088$8244 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$adin_is_neg_reg$dma_ahbmst.v:1094$8247 ($aldff) from module dma_top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 14 unused cells and 106 unused wires.
<suppressed ~15 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~522 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking dma_top.ahb_mst0.inc_selx as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking dma_top.ahb_mst1.inc_selx as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking dma_top.m1_mux.mux_no as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~522 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\m1_mux.$verific$mux_no_reg$dma_ahbmux.v:325$8452 ($adff) from module dma_top (D = \m1_mux.mux_noi, Q = \m1_mux.mux_no).
Adding EN signal on $flatten\m1_mux.$verific$hrp_df_reg$dma_ahbmux.v:369$8472 ($adff) from module dma_top (D = { 1'0 \m1_mux.df_cmd }, Q = \m1_mux.hrp_df).
Adding EN signal on $flatten\m1_mux.$verific$hrmxnof_reg$dma_ahbmux.v:341$8460 ($adff) from module dma_top (D = \m1_mux.hsel_df, Q = \m1_mux.hrmxnof).
Adding EN signal on $flatten\dma_fifo.$verific$part_wd_reg$dma_fifo.v:387$18557 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n539$18368, Q = \dma_fifo.part_wd).
Adding EN signal on $flatten\dma_fifo.$verific$ff_fram_wado_reg$dma_fifo.v:419$18567 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n601$18394, Q = \dma_fifo.ff_fram_wado).
Adding EN signal on $flatten\dma_fifo.$verific$ff_fram_radx_reg$dma_fifo.v:427$18572 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n633$18398, Q = \dma_fifo.ff_fram_radx).
Adding EN signal on $flatten\dma_fifo.$verific$ff_cnv_q_vld_reg$dma_fifo.v:313$18521 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n483$18343, Q = \dma_fifo.ff_cnv_q_vld).
Adding EN signal on $flatten\dma_fifo.$verific$ff_cnt_reg$dma_fifo.v:440$18586 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n699$18406, Q = \dma_fifo.ff_cnt).
Adding EN signal on $flatten\dma_fifo.$verific$cnv_bt3_reg$dma_fifo.v:302$18511 ($adff) from module dma_top (D = \dma_fifo.cb3i, Q = \dma_fifo.cnv_bt3).
Adding EN signal on $flatten\dma_fifo.$verific$cnv_bt2_reg$dma_fifo.v:296$18508 ($adff) from module dma_top (D = \dma_fifo.cb2i, Q = \dma_fifo.cnv_bt2).
Adding EN signal on $flatten\dma_fifo.$verific$cnv_bt1_reg$dma_fifo.v:290$18505 ($adff) from module dma_top (D = \dma_fifo.cb1i, Q = \dma_fifo.cnv_bt1).
Adding EN signal on $flatten\dma_fifo.$verific$cnv_bt0_reg$dma_fifo.v:284$18502 ($adff) from module dma_top (D = \dma_fifo.cb0i, Q = \dma_fifo.cnv_bt0).
Adding EN signal on $flatten\dma_fifo.$verific$cbe_reg$dma_fifo.v:271$18489 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n291$18380, Q = \dma_fifo.cbe).
Adding EN signal on $flatten\de.$verific$upk_cnt1_reg$dma_engine.v:1638$18244 ($adff) from module dma_top (D = $flatten\de.$verific$n1788$17723, Q = \de.upk_cnt1).
Adding EN signal on $flatten\de.$verific$upk_cnt0_reg$dma_engine.v:1630$18239 ($adff) from module dma_top (D = $flatten\de.$verific$n1767$17720, Q = \de.upk_cnt0).
Adding EN signal on $flatten\de.$verific$tsz_cnt_reg$dma_engine.v:1537$18188 ($adff) from module dma_top (D = $flatten\de.$verific$n1632$17713, Q = \de.tsz_cnt).
Adding EN signal on $flatten\de.$verific$st_rd_msk_reg$dma_engine.v:1500$18171 ($adff) from module dma_top (D = $flatten\de.$verific$n1488$17620, Q = \de.st_rd_msk).
Adding EN signal on $flatten\de.$verific$m1_is_llp_reg$dma_engine.v:1096$18002 ($adff) from module dma_top (D = $flatten\de.$verific$n760$17529, Q = \de.m1_is_llp).
Adding EN signal on $flatten\de.$verific$m0_is_llp_reg$dma_engine.v:1081$17998 ($adff) from module dma_top (D = $flatten\de.$verific$n750$17526, Q = \de.m0_is_llp).
Adding EN signal on $flatten\de.$verific$m0_arb_st_reg$dma_engine.v:1122$18019 ($adff) from module dma_top (D = $flatten\de.$verific$n783$17541, Q = \de.m0_arb_st).
Adding EN signal on $flatten\de.$verific$de_mllp_reg$dma_engine.v:653$17765 ($adff) from module dma_top (D = $flatten\de.$verific$n217$17667, Q = \de.de_mllp).
Adding EN signal on $flatten\de.$verific$de_err_notify_reg$dma_engine.v:1473$18157 ($adff) from module dma_top (D = $flatten\de.$verific$n1468$17609, Q = \de.de_err_notify).
Adding EN signal on $flatten\de.$verific$bst_cnt_reg$dma_engine.v:1522$18181 ($adff) from module dma_top (D = $flatten\de.$verific$n1556$17708, Q = \de.bst_cnt).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$swidth_reg$dma_chrf.v:411$17212 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n231$17049, Q = \ctl_rf.c7_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$src_sz_reg$dma_chrf.v:352$17189 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c7_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$src_sel_reg$dma_chrf.v:463$17249 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n308$17003, Q = \ctl_rf.c7_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$17245 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n304$16999, Q = \ctl_rf.c7_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$17246 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n305$17000, Q = \ctl_rf.c7_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$prot3_reg$dma_chrf.v:343$17183 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c7_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$prot2_reg$dma_chrf.v:343$17184 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c7_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$prot1_reg$dma_chrf.v:343$17185 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c7_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$mode_reg$dma_chrf.v:431$17220 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c7_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$17168 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n114$16955, Q = \ctl_rf.c7_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$17267 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c7_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$int_err_msk_reg$dma_chrf.v:500$17266 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c7_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$17265 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c7_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$dwidth_reg$dma_chrf.v:422$17217 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n261$17053, Q = \ctl_rf.c7_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$dst_sel_reg$dma_chrf.v:463$17250 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n309$17004, Q = \ctl_rf.c7_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$dreqmode_reg$dma_chrf.v:326$17176 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c7_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$17247 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n306$17001, Q = \ctl_rf.c7_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$17248 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n307$17002, Q = \ctl_rf.c7_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chtsz_reg$dma_chrf.v:644$17349 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1218$17100, Q = \ctl_rf.c7_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chtsz_reg$dma_chrf.v:644$17349 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1216$17098, Q = \ctl_rf.c7_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chsad_reg$dma_chrf.v:540$17281 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1195$17080, Q = \ctl_rf.c7_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chsad_reg$dma_chrf.v:540$17281 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1193$17078, Q = \ctl_rf.c7_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chsad_reg$dma_chrf.v:540$17281 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1191$17076, Q = \ctl_rf.c7_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chsad_reg$dma_chrf.v:540$17281 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1189$17074, Q = \ctl_rf.c7_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chpri_reg$dma_chrf.v:316$17173 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c7_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllpen_reg$dma_chrf.v:239$17125 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n28$16928, Q = \ctl_rf.c7_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_reg$dma_chrf.v:621$17330 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1213$17096, Q = \ctl_rf.c7_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_reg$dma_chrf.v:621$17330 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1211$17094, Q = \ctl_rf.c7_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_reg$dma_chrf.v:621$17330 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1209$17092, Q = \ctl_rf.c7_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_reg$dma_chrf.v:621$17330 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1207$17090, Q = \ctl_rf.c7_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_on_reg$dma_chrf.v:267$17137 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n45$16937, Q = \ctl_rf.c7_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$17152 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n86$17038, Q = \ctl_rf.c7_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chdad_reg$dma_chrf.v:580$17307 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1204$17088, Q = \ctl_rf.c7_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chdad_reg$dma_chrf.v:580$17307 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1202$17086, Q = \ctl_rf.c7_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chdad_reg$dma_chrf.v:580$17307 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1200$17084, Q = \ctl_rf.c7_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chdad_reg$dma_chrf.v:580$17307 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1198$17082, Q = \ctl_rf.c7_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chabt_reg$dma_chrf.v:390$17202 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n198$16974, Q = \ctl_rf.c7_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$ch_en_reg$dma_chrf.v:480$17259 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n334$17010, Q = \ctl_rf.c7_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$autold_reg$dma_chrf.v:400$17206 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c7_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$swidth_reg$dma_chrf.v:411$16761 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n231$16598, Q = \ctl_rf.c6_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$src_sz_reg$dma_chrf.v:352$16738 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c6_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$src_sel_reg$dma_chrf.v:463$16798 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n308$16552, Q = \ctl_rf.c6_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$16794 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n304$16548, Q = \ctl_rf.c6_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$16795 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n305$16549, Q = \ctl_rf.c6_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$prot3_reg$dma_chrf.v:343$16732 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c6_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$prot2_reg$dma_chrf.v:343$16733 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c6_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$prot1_reg$dma_chrf.v:343$16734 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c6_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$mode_reg$dma_chrf.v:431$16769 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c6_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$16717 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n114$16504, Q = \ctl_rf.c6_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$16816 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c6_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$int_err_msk_reg$dma_chrf.v:500$16815 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c6_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$16814 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c6_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$dwidth_reg$dma_chrf.v:422$16766 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n261$16602, Q = \ctl_rf.c6_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$dst_sel_reg$dma_chrf.v:463$16799 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n309$16553, Q = \ctl_rf.c6_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$dreqmode_reg$dma_chrf.v:326$16725 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c6_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$16796 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n306$16550, Q = \ctl_rf.c6_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$16797 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n307$16551, Q = \ctl_rf.c6_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chtsz_reg$dma_chrf.v:644$16898 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1218$16649, Q = \ctl_rf.c6_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chtsz_reg$dma_chrf.v:644$16898 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1216$16647, Q = \ctl_rf.c6_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chsad_reg$dma_chrf.v:540$16830 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1195$16629, Q = \ctl_rf.c6_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chsad_reg$dma_chrf.v:540$16830 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1193$16627, Q = \ctl_rf.c6_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chsad_reg$dma_chrf.v:540$16830 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1191$16625, Q = \ctl_rf.c6_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chsad_reg$dma_chrf.v:540$16830 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1189$16623, Q = \ctl_rf.c6_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chpri_reg$dma_chrf.v:316$16722 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c6_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllpen_reg$dma_chrf.v:239$16674 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n28$16477, Q = \ctl_rf.c6_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_reg$dma_chrf.v:621$16879 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1213$16645, Q = \ctl_rf.c6_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_reg$dma_chrf.v:621$16879 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1211$16643, Q = \ctl_rf.c6_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_reg$dma_chrf.v:621$16879 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1209$16641, Q = \ctl_rf.c6_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_reg$dma_chrf.v:621$16879 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1207$16639, Q = \ctl_rf.c6_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_on_reg$dma_chrf.v:267$16686 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n45$16486, Q = \ctl_rf.c6_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$16701 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n86$16587, Q = \ctl_rf.c6_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chdad_reg$dma_chrf.v:580$16856 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1204$16637, Q = \ctl_rf.c6_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chdad_reg$dma_chrf.v:580$16856 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1202$16635, Q = \ctl_rf.c6_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chdad_reg$dma_chrf.v:580$16856 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1200$16633, Q = \ctl_rf.c6_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chdad_reg$dma_chrf.v:580$16856 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1198$16631, Q = \ctl_rf.c6_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chabt_reg$dma_chrf.v:390$16751 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n198$16523, Q = \ctl_rf.c6_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$ch_en_reg$dma_chrf.v:480$16808 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n334$16559, Q = \ctl_rf.c6_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$autold_reg$dma_chrf.v:400$16755 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c6_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$swidth_reg$dma_chrf.v:411$16310 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n231$16147, Q = \ctl_rf.c5_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$src_sz_reg$dma_chrf.v:352$16287 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c5_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$src_sel_reg$dma_chrf.v:463$16347 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n308$16101, Q = \ctl_rf.c5_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$16343 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n304$16097, Q = \ctl_rf.c5_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$16344 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n305$16098, Q = \ctl_rf.c5_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$prot3_reg$dma_chrf.v:343$16281 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c5_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$prot2_reg$dma_chrf.v:343$16282 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c5_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$prot1_reg$dma_chrf.v:343$16283 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c5_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$mode_reg$dma_chrf.v:431$16318 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c5_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$16266 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n114$16053, Q = \ctl_rf.c5_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$16365 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c5_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$int_err_msk_reg$dma_chrf.v:500$16364 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c5_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$16363 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c5_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$dwidth_reg$dma_chrf.v:422$16315 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n261$16151, Q = \ctl_rf.c5_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$dst_sel_reg$dma_chrf.v:463$16348 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n309$16102, Q = \ctl_rf.c5_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$dreqmode_reg$dma_chrf.v:326$16274 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c5_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$16345 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n306$16099, Q = \ctl_rf.c5_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$16346 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n307$16100, Q = \ctl_rf.c5_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chtsz_reg$dma_chrf.v:644$16447 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1218$16198, Q = \ctl_rf.c5_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chtsz_reg$dma_chrf.v:644$16447 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1216$16196, Q = \ctl_rf.c5_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chsad_reg$dma_chrf.v:540$16379 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1195$16178, Q = \ctl_rf.c5_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chsad_reg$dma_chrf.v:540$16379 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1193$16176, Q = \ctl_rf.c5_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chsad_reg$dma_chrf.v:540$16379 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1191$16174, Q = \ctl_rf.c5_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chsad_reg$dma_chrf.v:540$16379 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1189$16172, Q = \ctl_rf.c5_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chpri_reg$dma_chrf.v:316$16271 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c5_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllpen_reg$dma_chrf.v:239$16223 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n28$16026, Q = \ctl_rf.c5_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_reg$dma_chrf.v:621$16428 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1213$16194, Q = \ctl_rf.c5_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_reg$dma_chrf.v:621$16428 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1211$16192, Q = \ctl_rf.c5_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_reg$dma_chrf.v:621$16428 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1209$16190, Q = \ctl_rf.c5_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_reg$dma_chrf.v:621$16428 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1207$16188, Q = \ctl_rf.c5_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_on_reg$dma_chrf.v:267$16235 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n45$16035, Q = \ctl_rf.c5_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$16250 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n86$16136, Q = \ctl_rf.c5_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chdad_reg$dma_chrf.v:580$16405 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1204$16186, Q = \ctl_rf.c5_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chdad_reg$dma_chrf.v:580$16405 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1202$16184, Q = \ctl_rf.c5_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chdad_reg$dma_chrf.v:580$16405 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1200$16182, Q = \ctl_rf.c5_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chdad_reg$dma_chrf.v:580$16405 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1198$16180, Q = \ctl_rf.c5_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chabt_reg$dma_chrf.v:390$16300 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n198$16072, Q = \ctl_rf.c5_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$ch_en_reg$dma_chrf.v:480$16357 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n334$16108, Q = \ctl_rf.c5_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$autold_reg$dma_chrf.v:400$16304 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c5_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$swidth_reg$dma_chrf.v:411$15859 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n231$15696, Q = \ctl_rf.c4_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$src_sz_reg$dma_chrf.v:352$15836 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c4_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$src_sel_reg$dma_chrf.v:463$15896 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n308$15650, Q = \ctl_rf.c4_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$15892 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n304$15646, Q = \ctl_rf.c4_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$15893 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n305$15647, Q = \ctl_rf.c4_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$prot3_reg$dma_chrf.v:343$15830 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c4_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$prot2_reg$dma_chrf.v:343$15831 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c4_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$prot1_reg$dma_chrf.v:343$15832 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c4_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$mode_reg$dma_chrf.v:431$15867 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c4_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$15815 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n114$15602, Q = \ctl_rf.c4_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15914 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c4_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15913 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c4_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15912 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c4_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$dwidth_reg$dma_chrf.v:422$15864 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n261$15700, Q = \ctl_rf.c4_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$dst_sel_reg$dma_chrf.v:463$15897 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n309$15651, Q = \ctl_rf.c4_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$dreqmode_reg$dma_chrf.v:326$15823 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c4_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$15894 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n306$15648, Q = \ctl_rf.c4_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$15895 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n307$15649, Q = \ctl_rf.c4_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chtsz_reg$dma_chrf.v:644$15996 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1218$15747, Q = \ctl_rf.c4_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chtsz_reg$dma_chrf.v:644$15996 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1216$15745, Q = \ctl_rf.c4_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chsad_reg$dma_chrf.v:540$15928 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1195$15727, Q = \ctl_rf.c4_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chsad_reg$dma_chrf.v:540$15928 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1193$15725, Q = \ctl_rf.c4_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chsad_reg$dma_chrf.v:540$15928 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1191$15723, Q = \ctl_rf.c4_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chsad_reg$dma_chrf.v:540$15928 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1189$15721, Q = \ctl_rf.c4_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chpri_reg$dma_chrf.v:316$15820 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c4_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllpen_reg$dma_chrf.v:239$15772 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n28$15575, Q = \ctl_rf.c4_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_reg$dma_chrf.v:621$15977 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1213$15743, Q = \ctl_rf.c4_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_reg$dma_chrf.v:621$15977 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1211$15741, Q = \ctl_rf.c4_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_reg$dma_chrf.v:621$15977 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1209$15739, Q = \ctl_rf.c4_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_reg$dma_chrf.v:621$15977 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1207$15737, Q = \ctl_rf.c4_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_on_reg$dma_chrf.v:267$15784 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n45$15584, Q = \ctl_rf.c4_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$15799 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n86$15685, Q = \ctl_rf.c4_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chdad_reg$dma_chrf.v:580$15954 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1204$15735, Q = \ctl_rf.c4_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chdad_reg$dma_chrf.v:580$15954 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1202$15733, Q = \ctl_rf.c4_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chdad_reg$dma_chrf.v:580$15954 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1200$15731, Q = \ctl_rf.c4_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chdad_reg$dma_chrf.v:580$15954 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1198$15729, Q = \ctl_rf.c4_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chabt_reg$dma_chrf.v:390$15849 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n198$15621, Q = \ctl_rf.c4_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$ch_en_reg$dma_chrf.v:480$15906 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n334$15657, Q = \ctl_rf.c4_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$autold_reg$dma_chrf.v:400$15853 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c4_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$swidth_reg$dma_chrf.v:411$15408 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n231$15245, Q = \ctl_rf.c3_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$src_sz_reg$dma_chrf.v:352$15385 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c3_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$src_sel_reg$dma_chrf.v:463$15445 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n308$15199, Q = \ctl_rf.c3_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$15441 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n304$15195, Q = \ctl_rf.c3_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$15442 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n305$15196, Q = \ctl_rf.c3_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$prot3_reg$dma_chrf.v:343$15379 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c3_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$prot2_reg$dma_chrf.v:343$15380 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c3_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$prot1_reg$dma_chrf.v:343$15381 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c3_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$mode_reg$dma_chrf.v:431$15416 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c3_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$15364 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n114$15151, Q = \ctl_rf.c3_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15463 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c3_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15462 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c3_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15461 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c3_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$dwidth_reg$dma_chrf.v:422$15413 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n261$15249, Q = \ctl_rf.c3_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$dst_sel_reg$dma_chrf.v:463$15446 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n309$15200, Q = \ctl_rf.c3_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$dreqmode_reg$dma_chrf.v:326$15372 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c3_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$15443 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n306$15197, Q = \ctl_rf.c3_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$15444 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n307$15198, Q = \ctl_rf.c3_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chtsz_reg$dma_chrf.v:644$15545 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1218$15296, Q = \ctl_rf.c3_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chtsz_reg$dma_chrf.v:644$15545 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1216$15294, Q = \ctl_rf.c3_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chsad_reg$dma_chrf.v:540$15477 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1195$15276, Q = \ctl_rf.c3_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chsad_reg$dma_chrf.v:540$15477 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1193$15274, Q = \ctl_rf.c3_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chsad_reg$dma_chrf.v:540$15477 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1191$15272, Q = \ctl_rf.c3_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chsad_reg$dma_chrf.v:540$15477 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1189$15270, Q = \ctl_rf.c3_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chpri_reg$dma_chrf.v:316$15369 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c3_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllpen_reg$dma_chrf.v:239$15321 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n28$15124, Q = \ctl_rf.c3_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_reg$dma_chrf.v:621$15526 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1213$15292, Q = \ctl_rf.c3_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_reg$dma_chrf.v:621$15526 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1211$15290, Q = \ctl_rf.c3_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_reg$dma_chrf.v:621$15526 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1209$15288, Q = \ctl_rf.c3_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_reg$dma_chrf.v:621$15526 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1207$15286, Q = \ctl_rf.c3_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_on_reg$dma_chrf.v:267$15333 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n45$15133, Q = \ctl_rf.c3_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$15348 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n86$15234, Q = \ctl_rf.c3_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chdad_reg$dma_chrf.v:580$15503 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1204$15284, Q = \ctl_rf.c3_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chdad_reg$dma_chrf.v:580$15503 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1202$15282, Q = \ctl_rf.c3_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chdad_reg$dma_chrf.v:580$15503 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1200$15280, Q = \ctl_rf.c3_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chdad_reg$dma_chrf.v:580$15503 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1198$15278, Q = \ctl_rf.c3_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chabt_reg$dma_chrf.v:390$15398 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n198$15170, Q = \ctl_rf.c3_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$ch_en_reg$dma_chrf.v:480$15455 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n334$15206, Q = \ctl_rf.c3_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$autold_reg$dma_chrf.v:400$15402 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c3_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$swidth_reg$dma_chrf.v:411$14957 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n231$14794, Q = \ctl_rf.c2_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$src_sz_reg$dma_chrf.v:352$14934 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c2_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$src_sel_reg$dma_chrf.v:463$14994 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n308$14748, Q = \ctl_rf.c2_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$14990 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n304$14744, Q = \ctl_rf.c2_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$14991 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n305$14745, Q = \ctl_rf.c2_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$prot3_reg$dma_chrf.v:343$14928 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c2_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$prot2_reg$dma_chrf.v:343$14929 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c2_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$prot1_reg$dma_chrf.v:343$14930 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c2_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$mode_reg$dma_chrf.v:431$14965 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c2_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$14913 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n114$14700, Q = \ctl_rf.c2_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15012 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c2_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15011 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c2_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15010 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c2_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$dwidth_reg$dma_chrf.v:422$14962 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n261$14798, Q = \ctl_rf.c2_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$dst_sel_reg$dma_chrf.v:463$14995 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n309$14749, Q = \ctl_rf.c2_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$dreqmode_reg$dma_chrf.v:326$14921 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c2_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$14992 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n306$14746, Q = \ctl_rf.c2_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$14993 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n307$14747, Q = \ctl_rf.c2_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chtsz_reg$dma_chrf.v:644$15094 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1218$14845, Q = \ctl_rf.c2_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chtsz_reg$dma_chrf.v:644$15094 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1216$14843, Q = \ctl_rf.c2_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chsad_reg$dma_chrf.v:540$15026 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1195$14825, Q = \ctl_rf.c2_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chsad_reg$dma_chrf.v:540$15026 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1193$14823, Q = \ctl_rf.c2_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chsad_reg$dma_chrf.v:540$15026 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1191$14821, Q = \ctl_rf.c2_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chsad_reg$dma_chrf.v:540$15026 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1189$14819, Q = \ctl_rf.c2_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chpri_reg$dma_chrf.v:316$14918 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c2_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllpen_reg$dma_chrf.v:239$14870 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n28$14673, Q = \ctl_rf.c2_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_reg$dma_chrf.v:621$15075 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1213$14841, Q = \ctl_rf.c2_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_reg$dma_chrf.v:621$15075 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1211$14839, Q = \ctl_rf.c2_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_reg$dma_chrf.v:621$15075 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1209$14837, Q = \ctl_rf.c2_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_reg$dma_chrf.v:621$15075 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1207$14835, Q = \ctl_rf.c2_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_on_reg$dma_chrf.v:267$14882 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n45$14682, Q = \ctl_rf.c2_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$14897 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n86$14783, Q = \ctl_rf.c2_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chdad_reg$dma_chrf.v:580$15052 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1204$14833, Q = \ctl_rf.c2_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chdad_reg$dma_chrf.v:580$15052 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1202$14831, Q = \ctl_rf.c2_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chdad_reg$dma_chrf.v:580$15052 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1200$14829, Q = \ctl_rf.c2_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chdad_reg$dma_chrf.v:580$15052 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1198$14827, Q = \ctl_rf.c2_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chabt_reg$dma_chrf.v:390$14947 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n198$14719, Q = \ctl_rf.c2_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$ch_en_reg$dma_chrf.v:480$15004 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n334$14755, Q = \ctl_rf.c2_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$autold_reg$dma_chrf.v:400$14951 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c2_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$swidth_reg$dma_chrf.v:411$14506 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n231$14343, Q = \ctl_rf.c1_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$src_sz_reg$dma_chrf.v:352$14483 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c1_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$src_sel_reg$dma_chrf.v:463$14543 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n308$14297, Q = \ctl_rf.c1_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$14539 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n304$14293, Q = \ctl_rf.c1_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$14540 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n305$14294, Q = \ctl_rf.c1_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$prot3_reg$dma_chrf.v:343$14477 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c1_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$prot2_reg$dma_chrf.v:343$14478 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c1_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$prot1_reg$dma_chrf.v:343$14479 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c1_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$mode_reg$dma_chrf.v:431$14514 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c1_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$14462 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n114$14249, Q = \ctl_rf.c1_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$14561 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c1_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$int_err_msk_reg$dma_chrf.v:500$14560 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c1_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$14559 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c1_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$dwidth_reg$dma_chrf.v:422$14511 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n261$14347, Q = \ctl_rf.c1_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$dst_sel_reg$dma_chrf.v:463$14544 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n309$14298, Q = \ctl_rf.c1_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$dreqmode_reg$dma_chrf.v:326$14470 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c1_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$14541 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n306$14295, Q = \ctl_rf.c1_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$14542 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n307$14296, Q = \ctl_rf.c1_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chtsz_reg$dma_chrf.v:644$14643 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1218$14394, Q = \ctl_rf.c1_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chtsz_reg$dma_chrf.v:644$14643 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1216$14392, Q = \ctl_rf.c1_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chsad_reg$dma_chrf.v:540$14575 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1195$14374, Q = \ctl_rf.c1_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chsad_reg$dma_chrf.v:540$14575 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1193$14372, Q = \ctl_rf.c1_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chsad_reg$dma_chrf.v:540$14575 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1191$14370, Q = \ctl_rf.c1_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chsad_reg$dma_chrf.v:540$14575 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1189$14368, Q = \ctl_rf.c1_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chpri_reg$dma_chrf.v:316$14467 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c1_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllpen_reg$dma_chrf.v:239$14419 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n28$14222, Q = \ctl_rf.c1_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_reg$dma_chrf.v:621$14624 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1213$14390, Q = \ctl_rf.c1_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_reg$dma_chrf.v:621$14624 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1211$14388, Q = \ctl_rf.c1_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_reg$dma_chrf.v:621$14624 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1209$14386, Q = \ctl_rf.c1_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_reg$dma_chrf.v:621$14624 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1207$14384, Q = \ctl_rf.c1_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_on_reg$dma_chrf.v:267$14431 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n45$14231, Q = \ctl_rf.c1_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$14446 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n86$14332, Q = \ctl_rf.c1_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chdad_reg$dma_chrf.v:580$14601 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1204$14382, Q = \ctl_rf.c1_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chdad_reg$dma_chrf.v:580$14601 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1202$14380, Q = \ctl_rf.c1_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chdad_reg$dma_chrf.v:580$14601 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1200$14378, Q = \ctl_rf.c1_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chdad_reg$dma_chrf.v:580$14601 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1198$14376, Q = \ctl_rf.c1_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chabt_reg$dma_chrf.v:390$14496 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n198$14268, Q = \ctl_rf.c1_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$ch_en_reg$dma_chrf.v:480$14553 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n334$14304, Q = \ctl_rf.c1_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$autold_reg$dma_chrf.v:400$14500 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c1_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$swidth_reg$dma_chrf.v:411$14055 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n231$13892, Q = \ctl_rf.c0_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$src_sz_reg$dma_chrf.v:352$14032 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c0_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$src_sel_reg$dma_chrf.v:463$14092 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n308$13846, Q = \ctl_rf.c0_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$14088 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n304$13842, Q = \ctl_rf.c0_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$14089 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n305$13843, Q = \ctl_rf.c0_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$prot3_reg$dma_chrf.v:343$14026 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c0_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$prot2_reg$dma_chrf.v:343$14027 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c0_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$prot1_reg$dma_chrf.v:343$14028 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c0_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$mode_reg$dma_chrf.v:431$14063 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c0_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$14011 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n114$13798, Q = \ctl_rf.c0_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$14110 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c0_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$int_err_msk_reg$dma_chrf.v:500$14109 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c0_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$14108 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c0_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$dwidth_reg$dma_chrf.v:422$14060 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n261$13896, Q = \ctl_rf.c0_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$dst_sel_reg$dma_chrf.v:463$14093 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n309$13847, Q = \ctl_rf.c0_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$dreqmode_reg$dma_chrf.v:326$14019 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c0_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$14090 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n306$13844, Q = \ctl_rf.c0_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$14091 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n307$13845, Q = \ctl_rf.c0_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chtsz_reg$dma_chrf.v:644$14192 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1218$13943, Q = \ctl_rf.c0_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chtsz_reg$dma_chrf.v:644$14192 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1216$13941, Q = \ctl_rf.c0_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chsad_reg$dma_chrf.v:540$14124 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1195$13923, Q = \ctl_rf.c0_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chsad_reg$dma_chrf.v:540$14124 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1193$13921, Q = \ctl_rf.c0_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chsad_reg$dma_chrf.v:540$14124 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1191$13919, Q = \ctl_rf.c0_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chsad_reg$dma_chrf.v:540$14124 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1189$13917, Q = \ctl_rf.c0_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chpri_reg$dma_chrf.v:316$14016 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c0_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllpen_reg$dma_chrf.v:239$13968 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n28$13771, Q = \ctl_rf.c0_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_reg$dma_chrf.v:621$14173 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1213$13939, Q = \ctl_rf.c0_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_reg$dma_chrf.v:621$14173 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1211$13937, Q = \ctl_rf.c0_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_reg$dma_chrf.v:621$14173 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1209$13935, Q = \ctl_rf.c0_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_reg$dma_chrf.v:621$14173 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1207$13933, Q = \ctl_rf.c0_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_on_reg$dma_chrf.v:267$13980 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n45$13780, Q = \ctl_rf.c0_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$13995 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n86$13881, Q = \ctl_rf.c0_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chdad_reg$dma_chrf.v:580$14150 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1204$13931, Q = \ctl_rf.c0_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chdad_reg$dma_chrf.v:580$14150 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1202$13929, Q = \ctl_rf.c0_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chdad_reg$dma_chrf.v:580$14150 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1200$13927, Q = \ctl_rf.c0_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chdad_reg$dma_chrf.v:580$14150 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1198$13925, Q = \ctl_rf.c0_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chabt_reg$dma_chrf.v:390$14045 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n198$13817, Q = \ctl_rf.c0_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$ch_en_reg$dma_chrf.v:480$14102 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n334$13853, Q = \ctl_rf.c0_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$autold_reg$dma_chrf.v:400$14049 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c0_rf.autold).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10616 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3755$9852, Q = \ctl_rf.tc [0]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10616 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3764$9854, Q = \ctl_rf.tc [1]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10616 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3773$9856, Q = \ctl_rf.tc [2]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10616 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3782$9858, Q = \ctl_rf.tc [3]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10616 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3791$9860, Q = \ctl_rf.tc [4]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10616 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3800$9862, Q = \ctl_rf.tc [5]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10616 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3809$9864, Q = \ctl_rf.tc [6]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10616 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3818$9866, Q = \ctl_rf.tc [7]).
Adding EN signal on $flatten\ctl_rf.$verific$sync_reg$dma_ctlrf.v:2281$10636 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0, Q = \ctl_rf.sync).
Adding EN signal on $flatten\ctl_rf.$verific$m1end_reg$dma_ctlrf.v:2257$10623 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.m1end).
Adding EN signal on $flatten\ctl_rf.$verific$m0end_reg$dma_ctlrf.v:2263$10626 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.m0end).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$10156 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3923$9876, Q = \ctl_rf.err [0]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$10156 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3941$9880, Q = \ctl_rf.err [1]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$10156 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3959$9884, Q = \ctl_rf.err [2]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$10156 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3977$9888, Q = \ctl_rf.err [3]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$10156 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3995$9892, Q = \ctl_rf.err [4]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$10156 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4013$9896, Q = \ctl_rf.err [5]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$10156 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4031$9900, Q = \ctl_rf.err [6]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$10156 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4049$9904, Q = \ctl_rf.err [7]).
Adding EN signal on $flatten\ctl_rf.$verific$dmacen_reg$dma_ctlrf.v:2269$10629 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.dmacen).
Adding EN signal on $flatten\ctl_rf.$verific$c7dmabs_reg$dma_ctlrf.v:2420$10692 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c7dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c7dmabs_reg$dma_ctlrf.v:2420$10692 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c7dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c7brbs_reg$dma_ctlrf.v:2557$10748 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c7brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c7brbs_reg$dma_ctlrf.v:2557$10748 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c7brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c6dmabs_reg$dma_ctlrf.v:2403$10685 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c6dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c6dmabs_reg$dma_ctlrf.v:2403$10685 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c6dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c6brbs_reg$dma_ctlrf.v:2540$10741 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c6brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c6brbs_reg$dma_ctlrf.v:2540$10741 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c6brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c5dmabs_reg$dma_ctlrf.v:2386$10678 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c5dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c5dmabs_reg$dma_ctlrf.v:2386$10678 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c5dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c5brbs_reg$dma_ctlrf.v:2523$10734 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c5brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c5brbs_reg$dma_ctlrf.v:2523$10734 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c5brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c4dmabs_reg$dma_ctlrf.v:2369$10671 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c4dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c4dmabs_reg$dma_ctlrf.v:2369$10671 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c4dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c4brbs_reg$dma_ctlrf.v:2506$10727 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c4brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c4brbs_reg$dma_ctlrf.v:2506$10727 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c4brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c3dmabs_reg$dma_ctlrf.v:2352$10664 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c3dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c3dmabs_reg$dma_ctlrf.v:2352$10664 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c3dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c3brbs_reg$dma_ctlrf.v:2489$10720 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c3brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c3brbs_reg$dma_ctlrf.v:2489$10720 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c3brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c2dmabs_reg$dma_ctlrf.v:2335$10657 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c2dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c2dmabs_reg$dma_ctlrf.v:2335$10657 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c2dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c2brbs_reg$dma_ctlrf.v:2472$10713 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c2brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c2brbs_reg$dma_ctlrf.v:2472$10713 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c2brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c1dmabs_reg$dma_ctlrf.v:2318$10650 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c1dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c1dmabs_reg$dma_ctlrf.v:2318$10650 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c1dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c1brbs_reg$dma_ctlrf.v:2455$10706 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c1brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c1brbs_reg$dma_ctlrf.v:2455$10706 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c1brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c0dmabs_reg$dma_ctlrf.v:2302$10642 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c0dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c0dmabs_reg$dma_ctlrf.v:2302$10642 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c0dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c0brbs_reg$dma_ctlrf.v:2439$10699 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c0brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c0brbs_reg$dma_ctlrf.v:2439$10699 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c0brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10613 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3932$9878, Q = \ctl_rf.abt [0]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10613 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3950$9882, Q = \ctl_rf.abt [1]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10613 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3968$9886, Q = \ctl_rf.abt [2]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10613 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3986$9890, Q = \ctl_rf.abt [3]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10613 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4004$9894, Q = \ctl_rf.abt [4]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10613 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4022$9898, Q = \ctl_rf.abt [5]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10613 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4040$9902, Q = \ctl_rf.abt [6]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10613 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4058$9906, Q = \ctl_rf.abt [7]).
Adding EN signal on $flatten\ch_sel.$verific$fix_pri_sel_reg$dma_chsel.v:848$9221 ($adff) from module dma_top (D = { 1'0 \ch_sel.fix_pri_sx }, Q = \ch_sel.fix_pri_sel).
Adding EN signal on $flatten\ch_sel.$verific$arb_req_reg$dma_chsel.v:890$9255 ($adff) from module dma_top (D = $flatten\ch_sel.$verific$n500$8878, Q = \ch_sel.arb_req).
Adding EN signal on $flatten\ahb_slv.$verific$slv_wr_d1o_reg$dma_ahbslv.v:274$8647 ($adff) from module dma_top (D = \hwrite, Q = \ahb_slv.slv_wr_d1o).
Adding EN signal on $flatten\ahb_slv.$verific$slv_sz_d1o_reg$dma_ahbslv.v:268$8642 ($adff) from module dma_top (D = \hsize, Q = \ahb_slv.slv_sz_d1o).
Adding EN signal on $flatten\ahb_slv.$verific$slv_pt_d1o_reg$dma_ahbslv.v:268$8643 ($adff) from module dma_top (D = \hprot, Q = \ahb_slv.slv_pt_d1o).
Adding EN signal on $flatten\ahb_slv.$verific$slv_br_req_reg$dma_ahbslv.v:366$8712 ($adff) from module dma_top (D = $flatten\ahb_slv.$verific$n661$8531, Q = \ahb_slv.slv_br_req).
Adding EN signal on $flatten\ahb_slv.$verific$slv_ad_d1o_reg$dma_ahbslv.v:268$8641 ($adff) from module dma_top (D = \haddr, Q = \ahb_slv.slv_ad_d1o).
Adding EN signal on $flatten\ahb_slv.$verific$hresp_br_reg$dma_ahbslv.v:448$8762 ($adff) from module dma_top (D = $flatten\ahb_slv.$verific$n758$8598, Q = \ahb_slv.hresp_br).
Adding EN signal on $flatten\ahb_slv.$verific$hreadyout_br_reg$dma_ahbslv.v:435$8755 ($adff) from module dma_top (D = $flatten\ahb_slv.$verific$n735$8557, Q = \ahb_slv.hreadyout_br).
Adding EN signal on $flatten\ahb_slv.$verific$hrdata_reg_reg$dma_ahbslv.v:346$8702 ($adff) from module dma_top (D = { \ahb_slv.hrdtgb3 \ahb_slv.hrdtgb2 \ahb_slv.hrdtgb1 \ahb_slv.hrdtgb0 }, Q = \ahb_slv.hrdata_reg).
Adding EN signal on $flatten\ahb_slv.$verific$hrdata_br_reg$dma_ahbslv.v:492$8797 ($adff) from module dma_top (D = { \ahb_slv.h1rdtib3 \ahb_slv.h1rdtib2 \ahb_slv.h1rdtib1 \ahb_slv.h1rdtib0 }, Q = \ahb_slv.hrdata_br).
Adding EN signal on $flatten\ahb_mst1.$verific$mx_dtp_reg$dma_ahbmst.v:596$7340 ($adff) from module dma_top (D = \ahb_mst1.mx_cmd_st [1], Q = \ahb_mst1.mx_dtp).
Adding EN signal on $flatten\ahb_mst1.$verific$mx_dma_had_a_rty_reg$dma_ahbmst.v:1209$7614 ($adff) from module dma_top (D = $flatten\ahb_mst1.$verific$n4101$7080, Q = \ahb_mst1.mx_dma_had_a_rty).
Adding EN signal on $flatten\ahb_mst1.$verific$mx_ad1t0x_reg$dma_ahbmst.v:1111$7559 ($adff) from module dma_top (D = \ahb_mst1.haddro [1:0], Q = \ahb_mst1.mx_ad1t0x).
Adding EN signal on $flatten\ahb_mst1.$verific$m0_m1_diff_tx_reg$dma_ahbmst.v:926$7451 ($adff) from module dma_top (D = $flatten\ahb_mst1.$verific$n3100$6960, Q = \ahb_mst1.m0_m1_diff_tx).
Adding SRST signal on $flatten\ahb_mst1.$verific$inc_selx_reg$dma_ahbmst.v:1045$7536 ($dff) from module dma_top (D = \ahb_mst1.inc_sel, Q = \ahb_mst1.inc_selx, rval = 3'011).
Adding EN signal on $flatten\ahb_mst1.$verific$hwriteo_reg$dma_ahbmst.v:671$7378 ($adff) from module dma_top (D = $flatten\ahb_mst1.$verific$n2380$6937, Q = \ahb_mst1.hwriteo).
Adding EN signal on $flatten\ahb_mst1.$verific$hwdatao_reg$dma_ahbmst.v:893$7437 ($adff) from module dma_top (D = \ahb_mst1.mux_wdt, Q = \ahb_mst1.hwdatao).
Adding EN signal on $flatten\ahb_mst1.$verific$hsizeo_reg$dma_ahbmst.v:726$7397 ($adff) from module dma_top (D = \ahb_mst1.hsizeq [1:0], Q = \ahb_mst1.hsizeo [1:0]).
Adding EN signal on $flatten\ahb_mst1.$verific$hsizeo_reg$dma_ahbmst.v:726$7397 ($adff) from module dma_top (D = \ahb_mst1.hsizeq [2], Q = \ahb_mst1.hsizeo [2]).
Adding EN signal on $flatten\ahb_mst1.$verific$hproto_reg$dma_ahbmst.v:783$7403 ($adff) from module dma_top (D = \ahb_mst1.mux_prot, Q = \ahb_mst1.hproto).
Adding EN signal on $flatten\ahb_mst1.$verific$hbursto_reg$dma_ahbmst.v:811$7415 ($adff) from module dma_top (D = { 2'00 \ahb_mst1.mux_bst [0] }, Q = \ahb_mst1.hbursto).
Adding EN signal on $flatten\ahb_mst1.$verific$haddro_reg$dma_ahbmst.v:987$7488 ($adff) from module dma_top (D = \ahb_mst1.mux_ad [15:0], Q = \ahb_mst1.haddro [15:0]).
Adding EN signal on $flatten\ahb_mst1.$verific$haddro_reg$dma_ahbmst.v:987$7488 ($adff) from module dma_top (D = \ahb_mst1.mux_ad [31:16], Q = \ahb_mst1.haddro [31:16]).
Adding EN signal on $flatten\ahb_mst1.$verific$adin_is_neg_reg$dma_ahbmst.v:1094$7547 ($adff) from module dma_top (D = \ahb_mst1.ad_addin2 [16], Q = \ahb_mst1.adin_is_neg).
Adding EN signal on $flatten\ahb_mst0.$verific$mx_dtp_reg$dma_ahbmst.v:596$8055 ($adff) from module dma_top (D = \ahb_mst0.mx_cmd_st [1], Q = \ahb_mst0.mx_dtp).
Adding EN signal on $flatten\ahb_mst0.$verific$mx_dma_had_a_rty_reg$dma_ahbmst.v:1209$8311 ($adff) from module dma_top (D = $flatten\ahb_mst0.$verific$n3659$7817, Q = \ahb_mst0.mx_dma_had_a_rty).
Adding EN signal on $flatten\ahb_mst0.$verific$mx_ad1t0x_reg$dma_ahbmst.v:1111$8259 ($adff) from module dma_top (D = \ahb_mst0.haddro [1:0], Q = \ahb_mst0.mx_ad1t0x).
Adding EN signal on $flatten\ahb_mst0.$verific$m0_m1_diff_tx_reg$dma_ahbmst.v:926$8151 ($adff) from module dma_top (D = $flatten\ahb_mst0.$verific$n2662$7699, Q = \ahb_mst0.m0_m1_diff_tx).
Adding SRST signal on $flatten\ahb_mst0.$verific$inc_selx_reg$dma_ahbmst.v:1045$8236 ($dff) from module dma_top (D = \ahb_mst0.inc_sel, Q = \ahb_mst0.inc_selx, rval = 3'011).
Adding EN signal on $flatten\ahb_mst0.$verific$hwriteo_reg$dma_ahbmst.v:671$8079 ($adff) from module dma_top (D = $flatten\ahb_mst0.$verific$n1980$7676, Q = \ahb_mst0.hwriteo).
Adding EN signal on $flatten\ahb_mst0.$verific$hwdatao_reg$dma_ahbmst.v:893$8137 ($adff) from module dma_top (D = \ahb_mst0.mux_wdt, Q = \ahb_mst0.hwdatao).
Adding EN signal on $flatten\ahb_mst0.$verific$hsizeo_reg$dma_ahbmst.v:726$8098 ($adff) from module dma_top (D = \ahb_mst0.hsizep [1:0], Q = \ahb_mst0.hsizeo [1:0]).
Adding EN signal on $flatten\ahb_mst0.$verific$hsizeo_reg$dma_ahbmst.v:726$8098 ($adff) from module dma_top (D = \ahb_mst0.hsizep [2], Q = \ahb_mst0.hsizeo [2]).
Adding EN signal on $flatten\ahb_mst0.$verific$hreqo_reg$dma_ahbmst.v:1174$8299 ($adff) from module dma_top (D = $flatten\ahb_mst0.$verific$n3638$7809, Q = \ahb_mst0.hreqo).
Adding EN signal on $flatten\ahb_mst0.$verific$hproto_reg$dma_ahbmst.v:783$8103 ($adff) from module dma_top (D = { \ch_sel.arb_chcsr_reg [20:18] 1'0 }, Q = \ahb_mst0.hproto).
Adding EN signal on $flatten\ahb_mst0.$verific$hbursto_reg$dma_ahbmst.v:811$8115 ($adff) from module dma_top (D = { 2'00 \ahb_mst0.mux_bst [0] }, Q = \ahb_mst0.hbursto).
Adding EN signal on $flatten\ahb_mst0.$verific$haddro_reg$dma_ahbmst.v:987$8188 ($adff) from module dma_top (D = \ahb_mst0.mux_ad [31:16], Q = \ahb_mst0.haddro [31:16]).
Adding EN signal on $flatten\ahb_mst0.$verific$haddro_reg$dma_ahbmst.v:987$8188 ($adff) from module dma_top (D = \ahb_mst0.mux_ad [15:0], Q = \ahb_mst0.haddro [15:0]).
Adding EN signal on $flatten\ahb_mst0.$verific$adin_is_neg_reg$dma_ahbmst.v:1094$8247 ($adff) from module dma_top (D = \ahb_mst0.ad_addin2 [16], Q = \ahb_mst0.adin_is_neg).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19827 ($adffe) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19827 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19826 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $flatten\ahb_mst0.$verific$mx_dt_st_reg$dma_ahbmst.v:607$8064 ($adff) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19790 ($adffe) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19790 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $flatten\ahb_mst1.$verific$mx_dt_st_reg$dma_ahbmst.v:607$7349 ($adff) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19751 ($adffe) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18829 ($adffe) from module dma_top.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 166 unused cells and 166 unused wires.
<suppressed ~173 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~829 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\ahb_mst0.$verific$mux_429$dma_ahbmst.v:1099$8253.
    dead port 2/2 on $mux $flatten\ahb_mst0.$verific$mux_429$dma_ahbmst.v:1099$8253.
    dead port 1/2 on $mux $flatten\ahb_mst0.$verific$mux_430$dma_ahbmst.v:1100$8254.
    dead port 2/2 on $mux $flatten\ahb_mst0.$verific$mux_430$dma_ahbmst.v:1100$8254.
    dead port 1/2 on $mux $flatten\ahb_mst1.$verific$mux_447$dma_ahbmst.v:1099$7553.
    dead port 2/2 on $mux $flatten\ahb_mst1.$verific$mux_447$dma_ahbmst.v:1099$7553.
    dead port 1/2 on $mux $flatten\ahb_mst1.$verific$mux_448$dma_ahbmst.v:1100$7554.
    dead port 2/2 on $mux $flatten\ahb_mst1.$verific$mux_448$dma_ahbmst.v:1100$7554.
    dead port 1/2 on $mux $flatten\de.$verific$mux_27$dma_engine.v:645$17757.
    dead port 2/2 on $mux $flatten\de.$verific$mux_27$dma_engine.v:645$17757.
    dead port 1/2 on $mux $flatten\de.$verific$mux_461$dma_engine.v:1375$18104.
    dead port 2/2 on $mux $flatten\de.$verific$mux_461$dma_engine.v:1375$18104.
    dead port 1/2 on $mux $flatten\de.$verific$mux_463$dma_engine.v:1376$18106.
    dead port 2/2 on $mux $flatten\de.$verific$mux_463$dma_engine.v:1376$18106.
    dead port 1/2 on $mux $flatten\de.$verific$mux_467$dma_engine.v:1382$18111.
    dead port 2/2 on $mux $flatten\de.$verific$mux_467$dma_engine.v:1382$18111.
    dead port 1/2 on $mux $flatten\de.$verific$mux_470$dma_engine.v:1393$18114.
    dead port 2/2 on $mux $flatten\de.$verific$mux_470$dma_engine.v:1393$18114.
    dead port 1/2 on $mux $flatten\de.$verific$mux_472$dma_engine.v:1398$18116.
    dead port 2/2 on $mux $flatten\de.$verific$mux_472$dma_engine.v:1398$18116.
    dead port 1/2 on $mux $flatten\de.$verific$mux_475$dma_engine.v:1408$18119.
    dead port 2/2 on $mux $flatten\de.$verific$mux_475$dma_engine.v:1408$18119.
Removed 22 multiplexer ports.
<suppressed ~378 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:262:slice$18847 ($adffe) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$18846 ($adffe) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$18849 ($adffe) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$18848 ($adffe) from module dma_top (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19771 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19805 ($adffe) from module dma_top.
Setting constant 0-bit at position 3 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$17898 ($adff) from module dma_top.
Setting constant 0-bit at position 4 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$17898 ($adff) from module dma_top.
Setting constant 0-bit at position 7 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$17898 ($adff) from module dma_top.
Setting constant 0-bit at position 8 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$17898 ($adff) from module dma_top.
Setting constant 0-bit at position 9 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$17898 ($adff) from module dma_top.
Setting constant 0-bit at position 10 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$17898 ($adff) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18840 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18880 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18831 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18837 ($adffe) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18837 ($adffe) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18837 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18877 ($adffe) from module dma_top.
Setting constant 1-bit at position 0 on $flatten\de.$verific$st_ed1s_reg$dma_engine.v:858$17866 ($adff) from module dma_top.
Setting constant 0-bit at position 0 on $flatten\dma_fifo.$verific$ram_wr_reg$dma_fifo.v:322$18526 ($adff) from module dma_top.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 112 unused cells and 690 unused wires.
<suppressed ~240 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~67 debug messages>

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\de.$verific$mux_200$dma_engine.v:972$17909.
    dead port 2/2 on $mux $flatten\de.$verific$mux_200$dma_engine.v:972$17909.
    dead port 2/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$17925.
    dead port 3/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$17925.
    dead port 4/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$17925.
    dead port 5/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$17925.
    dead port 7/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$17925.
    dead port 8/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$17925.
Removed 8 multiplexer ports.
<suppressed ~359 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
    New input vector for $reduce_or cell $flatten\de.$verific$reduce_nor_220$dma_engine.v:1010$17923: { $flatten\de.$verific$n621$17466 $flatten\de.$verific$n622$17467 $flatten\de.$verific$n623$17468 $flatten\de.$verific$n626$17471 $flatten\de.$verific$n627$17472 }
  Optimizing cells in module \dma_top.
Performed a total of 1 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19670 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19673 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19676 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19679 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19682 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19685 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19688 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19691 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $flatten\dma_fifo.$verific$ram_wrq_reg$dma_fifo.v:356$18538 ($adff) from module dma_top.

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 37 unused cells and 98 unused wires.
<suppressed ~47 debug messages>

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~9 debug messages>

3.13.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~350 debug messages>

yosys> opt_reduce

3.13.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_dff -sat

3.13.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 4 unused cells and 18 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.13.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.13.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~350 debug messages>

yosys> opt_reduce

3.13.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18834 ($adffe) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18834 ($adffe) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18834 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18843 ($adffe) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18843 ($adffe) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18843 ($adffe) from module dma_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$18843 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $flatten\ctl_rf.$verific$dmaint_err_reg$dma_ctlrf.v:1727$10516 ($adff) from module dma_top.

yosys> opt_clean

3.13.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.13.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~10 debug messages>

3.13.37. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~347 debug messages>

yosys> opt_reduce

3.13.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 8 unused cells and 17 unused wires.
<suppressed ~22 debug messages>

yosys> opt_expr

3.13.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.13.44. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~347 debug messages>

yosys> opt_reduce

3.13.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.48. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> opt_expr

3.13.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.13.51. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 10 bits (of 12) from port B of cell dma_top.$flatten\de.$verific$equal_692$dma_engine.v:1668$18276 ($eq).
Removed top 11 bits (of 12) from port B of cell dma_top.$flatten\de.$verific$equal_690$dma_engine.v:1667$18274 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\de.$verific$equal_666$dma_engine.v:1647$18253 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\de.$verific$equal_664$dma_engine.v:1646$18251 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\de.$verific$equal_660$dma_engine.v:1644$18247 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\de.$verific$equal_658$dma_engine.v:1643$18245 ($eq).
Removed top 1 bits (of 3) from port A of cell dma_top.$flatten\de.$verific$sub_643$dma_engine.v:1630$18233 ($sub).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\de.$verific$sub_643$dma_engine.v:1630$18233 ($sub).
Removed top 1 bits (of 3) from port Y of cell dma_top.$flatten\de.$verific$sub_643$dma_engine.v:1630$18233 ($sub).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\de.$verific$equal_631$dma_engine.v:1599$18224 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\de.$verific$equal_580$dma_engine.v:1568$18200 ($eq).
Removed top 7 bits (of 8) from port B of cell dma_top.$flatten\de.$verific$equal_696$dma_engine.v:1670$18280 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\de.$verific$equal_400$dma_engine.v:1224$18056 ($eq).
Removed top 4 bits (of 11) from mux cell dma_top.$flatten\de.$verific$select_221$dma_engine.v:1010$17925 ($pmux).
Removed top 1 bits (of 5) from port B of cell dma_top.$flatten\de.$verific$equal_214$dma_engine.v:973$17916 ($eq).
Removed top 2 bits (of 5) from port B of cell dma_top.$flatten\de.$verific$equal_211$dma_engine.v:952$17913 ($eq).
Removed top 3 bits (of 5) from port B of cell dma_top.$flatten\de.$verific$equal_210$dma_engine.v:941$17912 ($eq).
Removed top 4 bits (of 5) from port B of cell dma_top.$flatten\de.$verific$equal_209$dma_engine.v:924$17911 ($eq).
Removed top 1 bits (of 17) from port A of cell dma_top.$flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8238 ($add).
Removed top 1 bits (of 17) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8238 ($add).
Removed top 1 bits (of 17) from port B of cell dma_top.$flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8238 ($add).
Removed top 6 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_398$dma_ahbmst.v:1031$8228 ($eq).
Removed top 5 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_397$dma_ahbmst.v:1030$8227 ($eq).
Removed top 4 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_396$dma_ahbmst.v:1029$8226 ($eq).
Removed top 3 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_395$dma_ahbmst.v:1028$8225 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_394$dma_ahbmst.v:1027$8224 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_393$dma_ahbmst.v:1026$8223 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_340$dma_ahbmst.v:976$8180 ($eq).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_580$dma_ahbmst.v:794$8106 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_580$dma_ahbmst.v:794$8106 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_580$dma_ahbmst.v:794$8106 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_579$dma_ahbmst.v:793$8104 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_579$dma_ahbmst.v:793$8104 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_579$dma_ahbmst.v:793$8104 ($and).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_180$dma_ahbmst.v:711$8087 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_179$dma_ahbmst.v:710$8086 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_572$dma_ahbmst.v:626$8065 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_572$dma_ahbmst.v:626$8065 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_572$dma_ahbmst.v:626$8065 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$inv_571$dma_ahbmst.v:626$8044 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$inv_571$dma_ahbmst.v:626$8044 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_565$dma_ahbmst.v:539$8032 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_565$dma_ahbmst.v:539$8032 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_565$dma_ahbmst.v:539$8032 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_563$dma_ahbmst.v:526$8030 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_563$dma_ahbmst.v:526$8030 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_563$dma_ahbmst.v:526$8030 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_562$dma_ahbmst.v:526$8029 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_562$dma_ahbmst.v:526$8029 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_562$dma_ahbmst.v:526$8029 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_561$dma_ahbmst.v:526$8028 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_561$dma_ahbmst.v:526$8028 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_561$dma_ahbmst.v:526$8028 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_560$dma_ahbmst.v:526$8027 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_560$dma_ahbmst.v:526$8027 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_560$dma_ahbmst.v:526$8027 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_559$dma_ahbmst.v:526$8026 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_559$dma_ahbmst.v:526$8026 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_559$dma_ahbmst.v:526$8026 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_558$dma_ahbmst.v:523$8025 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$inv_556$dma_ahbmst.v:523$8023 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_553$dma_ahbmst.v:520$8022 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_553$dma_ahbmst.v:520$8022 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_553$dma_ahbmst.v:520$8022 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_551$dma_ahbmst.v:520$8020 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_551$dma_ahbmst.v:520$8020 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_551$dma_ahbmst.v:520$8020 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$inv_549$dma_ahbmst.v:520$8018 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_544$dma_ahbmst.v:476$8005 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_544$dma_ahbmst.v:476$8005 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_544$dma_ahbmst.v:476$8005 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_543$dma_ahbmst.v:476$8004 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_543$dma_ahbmst.v:476$8004 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_543$dma_ahbmst.v:476$8004 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_542$dma_ahbmst.v:467$8003 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_542$dma_ahbmst.v:467$8003 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_542$dma_ahbmst.v:467$8003 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_541$dma_ahbmst.v:467$8002 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_541$dma_ahbmst.v:467$8002 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_541$dma_ahbmst.v:467$8002 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_540$dma_ahbmst.v:467$8001 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_540$dma_ahbmst.v:467$8001 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_540$dma_ahbmst.v:467$8001 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_537$dma_ahbmst.v:466$7998 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_537$dma_ahbmst.v:466$7998 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_537$dma_ahbmst.v:466$7998 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_536$dma_ahbmst.v:465$7997 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_536$dma_ahbmst.v:465$7997 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_536$dma_ahbmst.v:465$7997 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_535$dma_ahbmst.v:465$7996 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_533$dma_ahbmst.v:464$7982 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_533$dma_ahbmst.v:464$7982 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_533$dma_ahbmst.v:464$7982 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_530$dma_ahbmst.v:420$7978 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_530$dma_ahbmst.v:420$7978 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_530$dma_ahbmst.v:420$7978 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_529$dma_ahbmst.v:416$7976 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_529$dma_ahbmst.v:416$7976 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_529$dma_ahbmst.v:416$7976 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_528$dma_ahbmst.v:416$7975 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_528$dma_ahbmst.v:416$7975 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_528$dma_ahbmst.v:416$7975 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_526$dma_ahbmst.v:416$7973 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_526$dma_ahbmst.v:416$7973 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_526$dma_ahbmst.v:416$7973 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$inv_525$dma_ahbmst.v:416$7972 ($not).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_524$dma_ahbmst.v:416$7971 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_524$dma_ahbmst.v:416$7971 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_524$dma_ahbmst.v:416$7971 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$inv_523$dma_ahbmst.v:416$7970 ($not).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_522$dma_ahbmst.v:415$7969 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_522$dma_ahbmst.v:415$7969 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_522$dma_ahbmst.v:415$7969 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_21$dma_ahbmst.v:378$7949 ($eq).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_543$dma_ahbmst.v:414$7604 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_543$dma_ahbmst.v:414$7604 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_543$dma_ahbmst.v:414$7604 ($and).
Removed top 1 bits (of 17) from port A of cell dma_top.$flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$7538 ($add).
Removed top 1 bits (of 17) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$7538 ($add).
Removed top 1 bits (of 17) from port B of cell dma_top.$flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$7538 ($add).
Removed top 6 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_416$dma_ahbmst.v:1031$7528 ($eq).
Removed top 5 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_415$dma_ahbmst.v:1030$7527 ($eq).
Removed top 4 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_414$dma_ahbmst.v:1029$7526 ($eq).
Removed top 3 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_413$dma_ahbmst.v:1028$7525 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_412$dma_ahbmst.v:1027$7524 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_411$dma_ahbmst.v:1026$7523 ($eq).
Removed top 4 bits (of 5) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_358$dma_ahbmst.v:976$7480 ($eq).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_616$dma_ahbmst.v:794$7406 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_616$dma_ahbmst.v:794$7406 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_616$dma_ahbmst.v:794$7406 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_615$dma_ahbmst.v:794$7405 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_615$dma_ahbmst.v:794$7405 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_615$dma_ahbmst.v:794$7405 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_614$dma_ahbmst.v:793$7404 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_614$dma_ahbmst.v:793$7404 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_614$dma_ahbmst.v:793$7404 ($and).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_196$dma_ahbmst.v:711$7386 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_195$dma_ahbmst.v:710$7385 ($eq).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$inv_613$dma_ahbmst.v:793$7370 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$inv_613$dma_ahbmst.v:793$7370 ($not).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$inv_610$dma_ahbmst.v:660$7366 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$inv_610$dma_ahbmst.v:660$7366 ($not).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_608$dma_ahbmst.v:652$7363 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_608$dma_ahbmst.v:652$7363 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_608$dma_ahbmst.v:652$7363 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_607$dma_ahbmst.v:651$7362 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_607$dma_ahbmst.v:651$7362 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_607$dma_ahbmst.v:651$7362 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_606$dma_ahbmst.v:645$7360 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_606$dma_ahbmst.v:645$7360 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_606$dma_ahbmst.v:645$7360 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_605$dma_ahbmst.v:644$7358 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_605$dma_ahbmst.v:644$7358 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_605$dma_ahbmst.v:644$7358 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_600$dma_ahbmst.v:626$7352 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_600$dma_ahbmst.v:626$7352 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_600$dma_ahbmst.v:626$7352 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$inv_599$dma_ahbmst.v:626$7351 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$inv_599$dma_ahbmst.v:626$7351 ($not).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_598$dma_ahbmst.v:625$7328 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_598$dma_ahbmst.v:625$7328 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_598$dma_ahbmst.v:625$7328 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_592$dma_ahbmst.v:539$7316 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_592$dma_ahbmst.v:539$7316 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_592$dma_ahbmst.v:539$7316 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_590$dma_ahbmst.v:534$7314 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_590$dma_ahbmst.v:534$7314 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_590$dma_ahbmst.v:534$7314 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_589$dma_ahbmst.v:526$7313 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_589$dma_ahbmst.v:526$7313 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_589$dma_ahbmst.v:526$7313 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_588$dma_ahbmst.v:526$7312 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_588$dma_ahbmst.v:526$7312 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_588$dma_ahbmst.v:526$7312 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_587$dma_ahbmst.v:526$7311 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_587$dma_ahbmst.v:526$7311 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_587$dma_ahbmst.v:526$7311 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_586$dma_ahbmst.v:526$7310 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_586$dma_ahbmst.v:526$7310 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_586$dma_ahbmst.v:526$7310 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_585$dma_ahbmst.v:526$7309 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_585$dma_ahbmst.v:526$7309 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_585$dma_ahbmst.v:526$7309 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_583$dma_ahbmst.v:523$7307 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_579$dma_ahbmst.v:520$7305 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_579$dma_ahbmst.v:520$7305 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_579$dma_ahbmst.v:520$7305 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_576$dma_ahbmst.v:520$7302 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_570$dma_ahbmst.v:476$7288 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_570$dma_ahbmst.v:476$7288 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_570$dma_ahbmst.v:476$7288 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_569$dma_ahbmst.v:476$7287 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_569$dma_ahbmst.v:476$7287 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_569$dma_ahbmst.v:476$7287 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_568$dma_ahbmst.v:471$7286 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_568$dma_ahbmst.v:471$7286 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_568$dma_ahbmst.v:471$7286 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_567$dma_ahbmst.v:467$7285 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_567$dma_ahbmst.v:467$7285 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_567$dma_ahbmst.v:467$7285 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_566$dma_ahbmst.v:467$7284 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_566$dma_ahbmst.v:467$7284 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_566$dma_ahbmst.v:467$7284 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_562$dma_ahbmst.v:466$7280 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_562$dma_ahbmst.v:466$7280 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_562$dma_ahbmst.v:466$7280 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_561$dma_ahbmst.v:465$7279 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_561$dma_ahbmst.v:465$7279 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_561$dma_ahbmst.v:465$7279 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_559$dma_ahbmst.v:465$7277 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_559$dma_ahbmst.v:465$7277 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_559$dma_ahbmst.v:465$7277 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_558$dma_ahbmst.v:464$7264 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_558$dma_ahbmst.v:464$7264 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_558$dma_ahbmst.v:464$7264 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_554$dma_ahbmst.v:422$7259 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_554$dma_ahbmst.v:422$7259 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_554$dma_ahbmst.v:422$7259 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_553$dma_ahbmst.v:420$7258 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_553$dma_ahbmst.v:420$7258 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_553$dma_ahbmst.v:420$7258 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_552$dma_ahbmst.v:416$7257 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_552$dma_ahbmst.v:416$7257 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_552$dma_ahbmst.v:416$7257 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_551$dma_ahbmst.v:416$7256 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_551$dma_ahbmst.v:416$7256 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_551$dma_ahbmst.v:416$7256 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_549$dma_ahbmst.v:416$7254 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_549$dma_ahbmst.v:416$7254 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_549$dma_ahbmst.v:416$7254 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_547$dma_ahbmst.v:416$7252 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_547$dma_ahbmst.v:416$7252 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_547$dma_ahbmst.v:416$7252 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_545$dma_ahbmst.v:415$7250 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_545$dma_ahbmst.v:415$7250 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_545$dma_ahbmst.v:415$7250 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_21$dma_ahbmst.v:378$7228 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\dma_fifo.$verific$equal_71$dma_fifo.v:252$18452 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\dma_fifo.$verific$equal_70$dma_fifo.v:251$18451 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c7_rf.$verific$add_61$dma_chrf.v:279$17148 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c6_rf.$verific$add_61$dma_chrf.v:279$16697 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c5_rf.$verific$add_61$dma_chrf.v:279$16246 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c4_rf.$verific$add_61$dma_chrf.v:279$15795 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c3_rf.$verific$add_61$dma_chrf.v:279$15344 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c2_rf.$verific$add_61$dma_chrf.v:279$14893 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c1_rf.$verific$add_61$dma_chrf.v:279$14442 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c0_rf.$verific$add_61$dma_chrf.v:279$13991 ($add).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ctl_rf.$verific$not_equal_998$dma_ctlrf.v:2009$10571 ($ne).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ctl_rf.$verific$not_equal_986$dma_ctlrf.v:1992$10570 ($ne).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ctl_rf.$verific$not_equal_974$dma_ctlrf.v:1975$10569 ($ne).
Removed top 7 bits (of 8) from port B of cell dma_top.$flatten\ctl_rf.$verific$and_1982$dma_ctlrf.v:1786$10534 ($and).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_476$dma_ctlrf.v:1534$10249 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_473$dma_ctlrf.v:1533$10246 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_466$dma_ctlrf.v:1527$10239 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_463$dma_ctlrf.v:1526$10236 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_456$dma_ctlrf.v:1520$10229 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_453$dma_ctlrf.v:1519$10226 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_446$dma_ctlrf.v:1513$10219 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_443$dma_ctlrf.v:1512$10216 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_436$dma_ctlrf.v:1506$10209 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_433$dma_ctlrf.v:1505$10206 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_426$dma_ctlrf.v:1499$10199 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_423$dma_ctlrf.v:1498$10196 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_416$dma_ctlrf.v:1492$10189 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_413$dma_ctlrf.v:1491$10186 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_406$dma_ctlrf.v:1486$10179 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_403$dma_ctlrf.v:1485$10176 ($eq).
Removed top 3 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_400$dma_ctlrf.v:1480$10173 ($eq).
Removed top 3 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_397$dma_ctlrf.v:1479$10170 ($eq).
Removed top 4 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_394$dma_ctlrf.v:1478$10167 ($eq).
Removed top 5 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_391$dma_ctlrf.v:1477$10164 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_225$dma_ctlrf.v:1292$10125 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_12$dma_ctlrf.v:984$10091 ($eq).
Removed top 4 bits (of 25) from FF cell dma_top.$flatten\ch_sel.$verific$arb_chcsr_reg_reg$dma_chsel.v:1310$9360 ($adff).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_262$dma_chsel.v:855$9230 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_232$dma_chsel.v:796$9198 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_224$dma_chsel.v:776$9188 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_216$dma_chsel.v:756$9178 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_208$dma_chsel.v:736$9168 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_200$dma_chsel.v:716$9158 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_192$dma_chsel.v:696$9148 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_184$dma_chsel.v:675$9138 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_176$dma_chsel.v:657$9128 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_78$dma_chsel.v:525$9108 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_71$dma_chsel.v:522$9107 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_64$dma_chsel.v:519$9106 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_slv.$verific$equal_148$dma_ahbslv.v:417$8740 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ahb_slv.$verific$equal_132$dma_ahbslv.v:396$8725 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ahb_slv.$verific$equal_131$dma_ahbslv.v:394$8724 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ahb_slv.$verific$equal_74$dma_ahbslv.v:324$8680 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ahb_slv.$verific$equal_37$dma_ahbslv.v:279$8648 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_96$dma_ahbdec.v:366$6777 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_95$dma_ahbdec.v:365$6776 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_94$dma_ahbdec.v:364$6775 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_90$dma_ahbdec.v:355$6769 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_89$dma_ahbdec.v:354$6768 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_88$dma_ahbdec.v:353$6767 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_84$dma_ahbdec.v:344$6761 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_83$dma_ahbdec.v:343$6760 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_82$dma_ahbdec.v:342$6759 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_78$dma_ahbdec.v:333$6753 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_77$dma_ahbdec.v:332$6752 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_76$dma_ahbdec.v:331$6751 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_72$dma_ahbdec.v:322$6745 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_71$dma_ahbdec.v:321$6744 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_70$dma_ahbdec.v:320$6743 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_66$dma_ahbdec.v:311$6737 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_65$dma_ahbdec.v:310$6736 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_64$dma_ahbdec.v:309$6735 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_60$dma_ahbdec.v:300$6729 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_59$dma_ahbdec.v:299$6728 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_58$dma_ahbdec.v:298$6727 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_54$dma_ahbdec.v:290$6721 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_53$dma_ahbdec.v:289$6720 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_52$dma_ahbdec.v:288$6719 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_48$dma_ahbdec.v:279$6713 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_47$dma_ahbdec.v:278$6712 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_46$dma_ahbdec.v:277$6711 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_42$dma_ahbdec.v:268$6705 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_41$dma_ahbdec.v:267$6704 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_40$dma_ahbdec.v:266$6703 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_36$dma_ahbdec.v:257$6697 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_35$dma_ahbdec.v:256$6696 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_34$dma_ahbdec.v:255$6695 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_30$dma_ahbdec.v:246$6689 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_29$dma_ahbdec.v:245$6688 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_28$dma_ahbdec.v:244$6687 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_24$dma_ahbdec.v:235$6681 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_23$dma_ahbdec.v:234$6680 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_22$dma_ahbdec.v:233$6679 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_18$dma_ahbdec.v:224$6673 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_17$dma_ahbdec.v:223$6672 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_16$dma_ahbdec.v:222$6671 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_12$dma_ahbdec.v:213$6665 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_11$dma_ahbdec.v:212$6664 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_10$dma_ahbdec.v:211$6663 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_6$dma_ahbdec.v:203$6657 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_5$dma_ahbdec.v:202$6656 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_4$dma_ahbdec.v:201$6655 ($eq).
Removed top 1 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_21$dma_ahbmux.v:303$8435 ($eq).
Removed top 2 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_20$dma_ahbmux.v:300$8434 ($eq).
Removed top 3 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_19$dma_ahbmux.v:297$8433 ($eq).
Removed top 4 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_18$dma_ahbmux.v:294$8432 ($eq).
Removed top 5 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_17$dma_ahbmux.v:291$8431 ($eq).
Removed top 6 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_16$dma_ahbmux.v:288$8430 ($eq).
Removed top 1 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_11$dma_ahbmux.v:276$8423 ($eq).
Removed top 2 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_10$dma_ahbmux.v:273$8422 ($eq).
Removed top 3 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_9$dma_ahbmux.v:270$8421 ($eq).
Removed top 4 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_8$dma_ahbmux.v:267$8420 ($eq).
Removed top 5 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_7$dma_ahbmux.v:264$8419 ($eq).
Removed top 6 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_6$dma_ahbmux.v:261$8418 ($eq).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_558$dma_ahbmst.v:523$8025 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_558$dma_ahbmst.v:523$8025 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_552$dma_ahbmst.v:520$8021 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_552$dma_ahbmst.v:520$8021 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_552$dma_ahbmst.v:520$8021 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_535$dma_ahbmst.v:465$7996 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_535$dma_ahbmst.v:465$7996 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$inv_525$dma_ahbmst.v:416$7972 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$inv_523$dma_ahbmst.v:416$7970 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_583$dma_ahbmst.v:523$7307 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_583$dma_ahbmst.v:523$7307 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_576$dma_ahbmst.v:520$7302 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_576$dma_ahbmst.v:520$7302 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$inv_556$dma_ahbmst.v:523$8023 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$inv_549$dma_ahbmst.v:520$8018 ($not).
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n1020$7851.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n1086$7853.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n109$7825.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n142$7826.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n208$7828.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n451$7835.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n484$7836.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n517$7837.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n682$7842.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n715$7843.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n748$7844.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n76$7824.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n814$7846.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n847$7847.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n987$7850.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n110$7088.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1252$7121.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1450$7125.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1483$7126.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1516$7127.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1549$7128.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1582$7129.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1648$7131.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1872$7140.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1905$7141.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1938$7142.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2004$7144.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2037$7145.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2138$7148.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2205$7150.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2238$7151.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2271$7152.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2304$7153.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2467$7166.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2500$7167.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2566$7169.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n44$7086.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n440$7098.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n473$7099.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n551$7101.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n650$7104.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n683$7105.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n815$7109.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n848$7110.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n881$7111.
Removed top 1 bits (of 2) from wire dma_top.$flatten\ahb_slv.$verific$n674$8588.
Removed top 1 bits (of 3) from wire dma_top.$flatten\ahb_slv.$verific$n677$8589.
Removed top 1 bits (of 3) from wire dma_top.$flatten\de.$verific$n1754$17716.
Removed top 6 bits (of 7) from wire dma_top.$flatten\de.$verific$n464$17670.
Removed top 1 bits (of 3) from wire dma_top.$flatten\de.$verific$n488$17673.
Removed top 10 bits (of 32) from wire dma_top.arb_chcsr.
Removed top 12 bits (of 32) from wire dma_top.c0cfg.
Removed top 12 bits (of 32) from wire dma_top.c1cfg.
Removed top 12 bits (of 32) from wire dma_top.c2cfg.
Removed top 12 bits (of 32) from wire dma_top.c3cfg.
Removed top 12 bits (of 32) from wire dma_top.c4cfg.
Removed top 12 bits (of 32) from wire dma_top.c5cfg.
Removed top 12 bits (of 32) from wire dma_top.c6cfg.
Removed top 12 bits (of 32) from wire dma_top.c7cfg.
Removed top 5 bits (of 8) from wire dma_top.csr.
Removed top 4 bits (of 11) from wire dma_top.de_st.
Removed top 16 bits (of 32) from wire dma_top.m0_updad.
Removed top 16 bits (of 32) from wire dma_top.m1_updad.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 90 unused cells and 218 unused wires.
<suppressed ~93 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module dma_top:
  creating $macc model for $flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8238 ($add).
  creating $macc model for $flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$7538 ($add).
  creating $macc model for $flatten\ctl_rf.\c0_rf.$verific$add_61$dma_chrf.v:279$13991 ($add).
  creating $macc model for $flatten\ctl_rf.\c1_rf.$verific$add_61$dma_chrf.v:279$14442 ($add).
  creating $macc model for $flatten\ctl_rf.\c2_rf.$verific$add_61$dma_chrf.v:279$14893 ($add).
  creating $macc model for $flatten\ctl_rf.\c3_rf.$verific$add_61$dma_chrf.v:279$15344 ($add).
  creating $macc model for $flatten\ctl_rf.\c4_rf.$verific$add_61$dma_chrf.v:279$15795 ($add).
  creating $macc model for $flatten\ctl_rf.\c5_rf.$verific$add_61$dma_chrf.v:279$16246 ($add).
  creating $macc model for $flatten\ctl_rf.\c6_rf.$verific$add_61$dma_chrf.v:279$16697 ($add).
  creating $macc model for $flatten\ctl_rf.\c7_rf.$verific$add_61$dma_chrf.v:279$17148 ($add).
  creating $macc model for $flatten\de.$verific$sub_643$dma_engine.v:1630$18233 ($sub).
  creating $alu model for $macc $flatten\de.$verific$sub_643$dma_engine.v:1630$18233.
  creating $alu model for $macc $flatten\ctl_rf.\c7_rf.$verific$add_61$dma_chrf.v:279$17148.
  creating $alu model for $macc $flatten\ctl_rf.\c6_rf.$verific$add_61$dma_chrf.v:279$16697.
  creating $alu model for $macc $flatten\ctl_rf.\c5_rf.$verific$add_61$dma_chrf.v:279$16246.
  creating $alu model for $macc $flatten\ctl_rf.\c4_rf.$verific$add_61$dma_chrf.v:279$15795.
  creating $alu model for $macc $flatten\ctl_rf.\c3_rf.$verific$add_61$dma_chrf.v:279$15344.
  creating $alu model for $macc $flatten\ctl_rf.\c2_rf.$verific$add_61$dma_chrf.v:279$14893.
  creating $alu model for $macc $flatten\ctl_rf.\c1_rf.$verific$add_61$dma_chrf.v:279$14442.
  creating $alu model for $macc $flatten\ctl_rf.\c0_rf.$verific$add_61$dma_chrf.v:279$13991.
  creating $alu model for $macc $flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$7538.
  creating $alu model for $macc $flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8238.
  creating $alu cell for $flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8238: $auto$alumacc.cc:485:replace_alu$20563
  creating $alu cell for $flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$7538: $auto$alumacc.cc:485:replace_alu$20566
  creating $alu cell for $flatten\ctl_rf.\c0_rf.$verific$add_61$dma_chrf.v:279$13991: $auto$alumacc.cc:485:replace_alu$20569
  creating $alu cell for $flatten\ctl_rf.\c1_rf.$verific$add_61$dma_chrf.v:279$14442: $auto$alumacc.cc:485:replace_alu$20572
  creating $alu cell for $flatten\ctl_rf.\c2_rf.$verific$add_61$dma_chrf.v:279$14893: $auto$alumacc.cc:485:replace_alu$20575
  creating $alu cell for $flatten\ctl_rf.\c3_rf.$verific$add_61$dma_chrf.v:279$15344: $auto$alumacc.cc:485:replace_alu$20578
  creating $alu cell for $flatten\ctl_rf.\c4_rf.$verific$add_61$dma_chrf.v:279$15795: $auto$alumacc.cc:485:replace_alu$20581
  creating $alu cell for $flatten\ctl_rf.\c5_rf.$verific$add_61$dma_chrf.v:279$16246: $auto$alumacc.cc:485:replace_alu$20584
  creating $alu cell for $flatten\ctl_rf.\c6_rf.$verific$add_61$dma_chrf.v:279$16697: $auto$alumacc.cc:485:replace_alu$20587
  creating $alu cell for $flatten\ctl_rf.\c7_rf.$verific$add_61$dma_chrf.v:279$17148: $auto$alumacc.cc:485:replace_alu$20590
  creating $alu cell for $flatten\de.$verific$sub_643$dma_engine.v:1630$18233: $auto$alumacc.cc:485:replace_alu$20593
  created 11 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~70 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~347 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$20265: { $flatten\de.$verific$n623$17468 $flatten\de.$verific$n626$17471 $flatten\de.$verific$n627$17472 $flatten\de.$verific$n632$17477 }
  Optimizing cells in module \dma_top.
Performed a total of 1 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 39 unused cells and 99 unused wires.
<suppressed ~68 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~345 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> stat

3.22. Printing statistics.

=== dma_top ===

   Number of wires:               4060
   Number of wire bits:          20283
   Number of public wires:        2263
   Number of public wire bits:   13903
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2920
     $adff                          19
     $adffe                        406
     $alu                           11
     $and                          803
     $bmux                          37
     $dff                            3
     $dlatch                         1
     $eq                           246
     $logic_not                     37
     $mux                          804
     $ne                             8
     $not                          169
     $or                           234
     $reduce_and                     8
     $reduce_bool                   69
     $reduce_or                     61
     $sdff                           2
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$74cb0f2a7154d4568d6639654473aff08a0b108d\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~3611 debug messages>

yosys> stat

3.24. Printing statistics.

=== dma_top ===

   Number of wires:               5894
   Number of wire bits:          38528
   Number of public wires:        2263
   Number of public wire bits:   13903
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              15292
     $_AND_                       1097
     $_DFFE_PN0P_                 1702
     $_DFFE_PN1P_                   47
     $_DFF_PN0_                     66
     $_DFF_PN1_                      4
     $_DFF_P_                       20
     $_DLATCH_P_                     3
     $_MUX_                       8239
     $_NOT_                        578
     $_OR_                        2085
     $_SDFF_PP0_                     2
     $_SDFF_PP1_                     4
     $_XOR_                       1413
     adder_carry                    32


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~2815 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~4245 debug messages>
Removed a total of 1415 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 215 unused cells and 1650 unused wires.
<suppressed ~245 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$32382 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb3.next_state [2], Q = \ch_sel.dma_rrarb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$32381 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb3.next_state [1], Q = \ch_sel.dma_rrarb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$32380 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb3.next_state [0], Q = \ch_sel.dma_rrarb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$32163 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb2.next_state [2], Q = \ch_sel.dma_rrarb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$32162 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb2.next_state [1], Q = \ch_sel.dma_rrarb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$32161 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb2.next_state [0], Q = \ch_sel.dma_rrarb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$31944 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb1.next_state [2], Q = \ch_sel.dma_rrarb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$31943 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb1.next_state [1], Q = \ch_sel.dma_rrarb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$31942 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb1.next_state [0], Q = \ch_sel.dma_rrarb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$31725 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb0.next_state [2], Q = \ch_sel.dma_rrarb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$31724 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb0.next_state [1], Q = \ch_sel.dma_rrarb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$31723 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb0.next_state [0], Q = \ch_sel.dma_rrarb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$23360 ($_DFF_PN0_) from module dma_top (D = \ahb_mst1.mx_cmd_ns [1], Q = \ahb_mst1.mx_cmd_st [1]).
Adding EN signal on $auto$ff.cc:262:slice$23359 ($_DFF_PN0_) from module dma_top (D = \ahb_mst1.mx_cmd_ns [0], Q = \ahb_mst1.mx_cmd_st [0]).
Adding EN signal on $auto$ff.cc:262:slice$22536 ($_DFF_PN0_) from module dma_top (D = \ahb_mst0.mx_cmd_ns [1], Q = \ahb_mst0.mx_cmd_st [1]).
Adding EN signal on $auto$ff.cc:262:slice$22535 ($_DFF_PN0_) from module dma_top (D = \ahb_mst0.mx_cmd_ns [0], Q = \ahb_mst0.mx_cmd_st [0]).
Adding EN signal on $auto$ff.cc:262:slice$21428 ($_DFF_PN0_) from module dma_top (D = $auto$simplemap.cc:309:simplemap_bmux$21406 [0], Q = \de.m1_arb_st [0]).

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 1 unused cells and 208 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~1448 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~4725 debug messages>
Removed a total of 1575 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 0 unused cells and 1007 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.25.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~2146 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~483 debug messages>
Removed a total of 161 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 0 unused cells and 362 unused wires.
<suppressed ~1 debug messages>

3.26.5. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~70 debug messages>

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$23555 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22241
        $auto$simplemap.cc:86:simplemap_bitop$22243

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$23556 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22242
        $auto$simplemap.cc:86:simplemap_bitop$22246

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$24184 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$23132
        $auto$simplemap.cc:86:simplemap_bitop$23134

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$24185 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$23133
        $auto$simplemap.cc:86:simplemap_bitop$23137

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$30918 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$30821
        $auto$simplemap.cc:312:simplemap_bmux$30789

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$30919 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$30822
        $auto$simplemap.cc:312:simplemap_bmux$30790

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$30920 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$30823
        $auto$simplemap.cc:312:simplemap_bmux$30791

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$30921 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$30824
        $auto$simplemap.cc:312:simplemap_bmux$30792

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$30922 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$30825
        $auto$simplemap.cc:312:simplemap_bmux$30793

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$30923 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$30826
        $auto$simplemap.cc:312:simplemap_bmux$30794

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$30924 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$30827
        $auto$simplemap.cc:312:simplemap_bmux$30795

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$30925 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$30828
        $auto$simplemap.cc:312:simplemap_bmux$30796


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~16 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.28.18. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Summary of detected clock domains:
  5 cells in clk=\HCLK, en=!\de.m1_arb_st [1], arst=!\HRSTn, srst={ }
  829 cells in clk=\HCLK, en={ }, arst=!\HRSTn, srst={ }
  139 cells in clk=\HCLK, en={ }, arst={ }, srst={ }
  151 cells in clk=\HCLK, en={ }, arst={ }, srst=\de.de_st [6]
  20 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19432, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19429, arst=!\HRSTn, srst={ }
  13 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19447, arst=!\HRSTn, srst={ }
  12 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19450, arst=!\HRSTn, srst={ }
  98 cells in clk=\HCLK, en=\ahb_slv.br_st [2], arst=!\HRSTn, srst={ }
  5 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19414, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19359, arst=!\HRSTn, srst={ }
  6 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19471, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19454, arst=!\HRSTn, srst={ }
  9 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19566, arst=!\HRSTn, srst={ }
  10 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19542, arst=!\HRSTn, srst={ }
  17 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19549, arst=!\HRSTn, srst={ }
  10 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19545, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19524, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19527, arst=!\HRSTn, srst={ }
  6 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19509, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19665, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19662, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19622, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19619, arst=!\HRSTn, srst={ }
  5 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19604, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19656, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19653, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19659, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19647, arst=!\HRSTn, srst={ }
  8 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19650, arst=!\HRSTn, srst={ }
  14 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19637, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19644, arst=!\HRSTn, srst={ }
  10 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19640, arst=!\HRSTn, srst={ }
  6 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19376, arst=!\HRSTn, srst={ }
  6 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19091, arst=!\HRSTn, srst={ }
  18 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19074, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18996, arst=!\HRSTn, srst={ }
  27 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19169, arst=!\HRSTn, srst={ }
  763 cells in clk=\HCLK, en=\m1_mux.mux_no_we, arst=!\HRSTn, srst={ }
  36 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19319, arst=!\HRSTn, srst={ }
  156 cells in clk=\HCLK, en=\ahb_slv.ad_d1_we, arst=!\HRSTn, srst={ }
  10 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19355, arst=!\HRSTn, srst={ }
  12 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19352, arst=!\HRSTn, srst={ }
  1233 cells in clk=\HCLK, en=\ahb_slv.hrdt_we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19334, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19337, arst=!\HRSTn, srst={ }
  5 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19224, arst=!\HRSTn, srst={ }
  6 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19186, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19264, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19242, arst=!\HRSTn, srst={ }
  12 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19257, arst=!\HRSTn, srst={ }
  10 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19260, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18979, arst=!\HRSTn, srst={ }
  6 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19281, arst=!\HRSTn, srst={ }
  78 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$43604, arst=!\HRSTn, srst={ }
  8 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19780, arst=!\HRSTn, srst={ }
  2 cells in clk=\HCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$19787, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19766, arst=!\HRSTn, srst={ }
  9 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19763, arst=!\HRSTn, srst={ }
  4 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19776, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19749, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19759, arst=!\HRSTn, srst={ }
  9 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19753, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19746, arst=!\HRSTn, srst={ }
  9 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19824, arst=!\HRSTn, srst={ }
  73 cells in clk=\HCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$19833, arst=!\HRSTn, srst={ }
  3 cells in clk=\HCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$19821, arst=!\HRSTn, srst={ }
  310 cells in clk=\HCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$19801, arst=!\HRSTn, srst={ }
  6 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19814, arst=!\HRSTn, srst={ }
  134 cells in clk=\HCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$19794, arst=!\HRSTn, srst={ }
  39 cells in clk=\HCLK, en=\ctl_rf.c3dbs_b2we, arst=!\HRSTn, srst={ }
  18 cells in clk=\HCLK, en=\ctl_rf.c3dbs_b3we, arst=!\HRSTn, srst={ }
  31 cells in clk=\HCLK, en=\ctl_rf.c2dbs_b2we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=\ctl_rf.c2dbs_b3we, arst=!\HRSTn, srst={ }
  39 cells in clk=\HCLK, en=\ctl_rf.c5dbs_b2we, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=\ctl_rf.c5dbs_b3we, arst=!\HRSTn, srst={ }
  40 cells in clk=\HCLK, en=\ctl_rf.c4dbs_b2we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=\ctl_rf.c4dbs_b3we, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=\ctl_rf.csr_b0we, arst=!\HRSTn, srst={ }
  31 cells in clk=\HCLK, en=\ctl_rf.sync_b0we, arst=!\HRSTn, srst={ }
  36 cells in clk=\HCLK, en=\ctl_rf.c1dbs_b2we, arst=!\HRSTn, srst={ }
  24 cells in clk=\HCLK, en=\ctl_rf.c1dbs_b3we, arst=!\HRSTn, srst={ }
  30 cells in clk=\HCLK, en=\ctl_rf.c0dbs_b2we, arst=!\HRSTn, srst={ }
  14 cells in clk=\HCLK, en=\ctl_rf.c0dbs_b3we, arst=!\HRSTn, srst={ }
  33 cells in clk=\HCLK, en=\ctl_rf.c7bbs_b2we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=\ctl_rf.c7bbs_b3we, arst=!\HRSTn, srst={ }
  44 cells in clk=\HCLK, en=\ctl_rf.c6bbs_b2we, arst=!\HRSTn, srst={ }
  17 cells in clk=\HCLK, en=\ctl_rf.c6bbs_b3we, arst=!\HRSTn, srst={ }
  37 cells in clk=\HCLK, en=\ctl_rf.c3bbs_b2we, arst=!\HRSTn, srst={ }
  14 cells in clk=\HCLK, en=\ctl_rf.c3bbs_b3we, arst=!\HRSTn, srst={ }
  38 cells in clk=\HCLK, en=\ctl_rf.c2bbs_b2we, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=\ctl_rf.c2bbs_b3we, arst=!\HRSTn, srst={ }
  38 cells in clk=\HCLK, en=\ctl_rf.c5bbs_b2we, arst=!\HRSTn, srst={ }
  17 cells in clk=\HCLK, en=\ctl_rf.c5bbs_b3we, arst=!\HRSTn, srst={ }
  36 cells in clk=\HCLK, en=\ctl_rf.c4bbs_b2we, arst=!\HRSTn, srst={ }
  17 cells in clk=\HCLK, en=\ctl_rf.c4bbs_b3we, arst=!\HRSTn, srst={ }
  35 cells in clk=\HCLK, en=\ctl_rf.c7dbs_b2we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=\ctl_rf.c7dbs_b3we, arst=!\HRSTn, srst={ }
  44 cells in clk=\HCLK, en=\ctl_rf.c6dbs_b2we, arst=!\HRSTn, srst={ }
  27 cells in clk=\HCLK, en=\ctl_rf.c6dbs_b3we, arst=!\HRSTn, srst={ }
  43 cells in clk=\HCLK, en=\ctl_rf.c1bbs_b2we, arst=!\HRSTn, srst={ }
  13 cells in clk=\HCLK, en=\ctl_rf.c1bbs_b3we, arst=!\HRSTn, srst={ }
  32 cells in clk=\HCLK, en=\ctl_rf.c0bbs_b2we, arst=!\HRSTn, srst={ }
  24 cells in clk=\HCLK, en=\ctl_rf.c0bbs_b3we, arst=!\HRSTn, srst={ }
  188 cells in clk=\HCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$19838, arst=!\HRSTn, srst={ }
  216 cells in clk=\HCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$40570, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19070, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19067, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19731, arst=!\HRSTn, srst={ }
  112 cells in clk=\HCLK, en=\ch_sel.dma_rrarb0.next_ch, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19740, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19734, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19737, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19743, arst=!\HRSTn, srst={ }
  8 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19728, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19239, arst=!\HRSTn, srst={ }
  194 cells in clk=\HCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$42814, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19165, arst=!\HRSTn, srst={ }
  5 cells in clk=\HCLK, en=\h0readyin, arst=!\HRSTn, srst={ }
  202 cells in clk=\HCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$39448, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chcfg_b0we, arst=!\HRSTn, srst={ }
  13 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chdad_b0we, arst=!\HRSTn, srst={ }
  15 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chdad_b2we, arst=!\HRSTn, srst={ }
  13 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chdad_b1we, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chsad_b1we, arst=!\HRSTn, srst={ }
  18 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chsad_b0we, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chsad_b3we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chsad_b2we, arst=!\HRSTn, srst={ }
  27 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chcsr_b0we_qf, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=$flatten\ctl_rf.\c3_rf.$verific$n149$15154, arst=!\HRSTn, srst={ }
  25 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chcsr_b0we_qf, arst=!\HRSTn, srst={ }
  28 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chllp_b3we, arst=!\HRSTn, srst={ }
  31 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chllp_b2we, arst=!\HRSTn, srst={ }
  18 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chtsz_b0we, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chdad_b3we, arst=!\HRSTn, srst={ }
  29 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chllp_b1we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chllp_b0we, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chtsz_b1we, arst=!\HRSTn, srst={ }
  8 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chcfg_b0we, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chdad_b0we, arst=!\HRSTn, srst={ }
  12 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chdad_b2we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chdad_b1we, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chsad_b1we, arst=!\HRSTn, srst={ }
  26 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chsad_b0we, arst=!\HRSTn, srst={ }
  16 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chsad_b3we, arst=!\HRSTn, srst={ }
  16 cells in clk=\HCLK, en=\ctl_rf.c3_rf.chsad_b2we, arst=!\HRSTn, srst={ }
  26 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chllp_b3we, arst=!\HRSTn, srst={ }
  28 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chllp_b2we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chtsz_b0we, arst=!\HRSTn, srst={ }
  17 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chdad_b3we, arst=!\HRSTn, srst={ }
  26 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chllp_b1we, arst=!\HRSTn, srst={ }
  24 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chllp_b0we, arst=!\HRSTn, srst={ }
  8 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chtsz_b1we, arst=!\HRSTn, srst={ }
  8 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chcfg_b0we, arst=!\HRSTn, srst={ }
  25 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chdad_b0we, arst=!\HRSTn, srst={ }
  17 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chdad_b2we, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chdad_b1we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chsad_b1we, arst=!\HRSTn, srst={ }
  12 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chsad_b0we, arst=!\HRSTn, srst={ }
  18 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chsad_b3we, arst=!\HRSTn, srst={ }
  15 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chsad_b2we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=$flatten\ctl_rf.\c1_rf.$verific$n149$14252, arst=!\HRSTn, srst={ }
  29 cells in clk=\HCLK, en=\ctl_rf.c1_rf.chcsr_b0we_qf, arst=!\HRSTn, srst={ }
  28 cells in clk=\HCLK, en=$flatten\ctl_rf.\c2_rf.$verific$n149$14703, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chllp_b3we, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chllp_b2we, arst=!\HRSTn, srst={ }
  24 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chtsz_b0we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chdad_b3we, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chllp_b1we, arst=!\HRSTn, srst={ }
  26 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chllp_b0we, arst=!\HRSTn, srst={ }
  10 cells in clk=\HCLK, en=\ctl_rf.c2_rf.chtsz_b1we, arst=!\HRSTn, srst={ }
  28 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$43584, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=$flatten\ctl_rf.\c6_rf.$verific$n149$16507, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chllp_b3we, arst=!\HRSTn, srst={ }
  26 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chllp_b2we, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chtsz_b0we, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chdad_b3we, arst=!\HRSTn, srst={ }
  26 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chllp_b1we, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chllp_b0we, arst=!\HRSTn, srst={ }
  12 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chtsz_b1we, arst=!\HRSTn, srst={ }
  8 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chcfg_b0we, arst=!\HRSTn, srst={ }
  18 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chdad_b0we, arst=!\HRSTn, srst={ }
  16 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chdad_b2we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chdad_b1we, arst=!\HRSTn, srst={ }
  14 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chsad_b1we, arst=!\HRSTn, srst={ }
  17 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chsad_b0we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chsad_b3we, arst=!\HRSTn, srst={ }
  14 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chsad_b2we, arst=!\HRSTn, srst={ }
  26 cells in clk=\HCLK, en=\ctl_rf.c6_rf.chcsr_b0we_qf, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=$flatten\ctl_rf.\c7_rf.$verific$n149$16958, arst=!\HRSTn, srst={ }
  6 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19034, arst=!\HRSTn, srst={ }
  28 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chcsr_b0we_qf, arst=!\HRSTn, srst={ }
  29 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chllp_b3we, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chllp_b2we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chtsz_b0we, arst=!\HRSTn, srst={ }
  15 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chdad_b3we, arst=!\HRSTn, srst={ }
  24 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chllp_b1we, arst=!\HRSTn, srst={ }
  24 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chllp_b0we, arst=!\HRSTn, srst={ }
  10 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chtsz_b1we, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chcfg_b0we, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chdad_b0we, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chdad_b2we, arst=!\HRSTn, srst={ }
  17 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chdad_b1we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chsad_b1we, arst=!\HRSTn, srst={ }
  13 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chsad_b0we, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chsad_b3we, arst=!\HRSTn, srst={ }
  14 cells in clk=\HCLK, en=\ctl_rf.c7_rf.chsad_b2we, arst=!\HRSTn, srst={ }
  10 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chcfg_b0we, arst=!\HRSTn, srst={ }
  18 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chdad_b0we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chdad_b2we, arst=!\HRSTn, srst={ }
  18 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chdad_b1we, arst=!\HRSTn, srst={ }
  13 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chsad_b1we, arst=!\HRSTn, srst={ }
  16 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chsad_b0we, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chsad_b3we, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chsad_b2we, arst=!\HRSTn, srst={ }
  28 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chcsr_b0we_qf, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=$flatten\ctl_rf.\c4_rf.$verific$n149$15605, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chllp_b3we, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chllp_b2we, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chtsz_b0we, arst=!\HRSTn, srst={ }
  16 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chdad_b3we, arst=!\HRSTn, srst={ }
  24 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chllp_b1we, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chllp_b0we, arst=!\HRSTn, srst={ }
  16 cells in clk=\HCLK, en=\ctl_rf.c4_rf.chtsz_b1we, arst=!\HRSTn, srst={ }
  31 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chllp_b3we, arst=!\HRSTn, srst={ }
  26 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chllp_b2we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chtsz_b0we, arst=!\HRSTn, srst={ }
  25 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chdad_b3we, arst=!\HRSTn, srst={ }
  31 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chllp_b1we, arst=!\HRSTn, srst={ }
  35 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chllp_b0we, arst=!\HRSTn, srst={ }
  5 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18939, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chtsz_b1we, arst=!\HRSTn, srst={ }
  7 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chcfg_b0we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chdad_b0we, arst=!\HRSTn, srst={ }
  12 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chdad_b2we, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chdad_b1we, arst=!\HRSTn, srst={ }
  17 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chsad_b1we, arst=!\HRSTn, srst={ }
  15 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chsad_b0we, arst=!\HRSTn, srst={ }
  15 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chsad_b3we, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chsad_b2we, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=$flatten\ctl_rf.\c5_rf.$verific$n149$16056, arst=!\HRSTn, srst={ }
  25 cells in clk=\HCLK, en=\ctl_rf.c5_rf.chcsr_b0we_qf, arst=!\HRSTn, srst={ }
  8 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chcfg_b0we, arst=!\HRSTn, srst={ }
  10 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chdad_b0we, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chdad_b2we, arst=!\HRSTn, srst={ }
  17 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chdad_b1we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chsad_b1we, arst=!\HRSTn, srst={ }
  21 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chsad_b0we, arst=!\HRSTn, srst={ }
  8 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chsad_b3we, arst=!\HRSTn, srst={ }
  12 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chsad_b2we, arst=!\HRSTn, srst={ }
  24 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chcsr_b0we_qf, arst=!\HRSTn, srst={ }
  24 cells in clk=\HCLK, en=$flatten\ctl_rf.\c0_rf.$verific$n149$13801, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chllp_b3we, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chllp_b2we, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chtsz_b0we, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chdad_b3we, arst=!\HRSTn, srst={ }
  24 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chllp_b1we, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chllp_b0we, arst=!\HRSTn, srst={ }
  13 cells in clk=\HCLK, en=\ctl_rf.c0_rf.chtsz_b1we, arst=!\HRSTn, srst={ }
  14 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19162, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18957, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18954, arst=!\HRSTn, srst={ }
  83 cells in clk=\HCLK, en=\de.ld_upk_cnt0, arst=!\HRSTn, srst={ }
  174 cells in clk=\HCLK, en=\de.de_mllp_we, arst=!\HRSTn, srst={ }
  22 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19052, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19049, arst=!\HRSTn, srst={ }
  158 cells in clk=\HCLK, en=\ahb_mst1.hreadyini, arst=!\HRSTn, srst={ }
  199 cells in clk=\HCLK, en=$auto$opt_dff.cc:219:make_patterns_logic$41692, arst=!\HRSTn, srst={ }
  93 cells in clk=\HCLK, en=\ahb_mst1.mx_cmd, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=\ahb_mst1.mx_idle2ns, arst=!\HRSTn, srst={ }
  11 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18975, arst=!\HRSTn, srst={ }
  13 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18972, arst=!\HRSTn, srst={ }
  23 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19147, arst=!\HRSTn, srst={ }
  20 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19144, arst=!\HRSTn, srst={ }
  6 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$19129, arst=!\HRSTn, srst={ }
  45 cells in clk=\HCLK, en=\ahb_mst0.mx_cmd, arst=!\HRSTn, srst={ }
  28 cells in clk=\HCLK, en=\ahb_mst0.mx_idle2ns, arst=!\HRSTn, srst={ }
  66 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18872, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18866, arst=!\HRSTn, srst={ }
  4 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18863, arst=!\HRSTn, srst={ }
  6 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18901, arst=!\HRSTn, srst={ }
  19 cells in clk=\HCLK, en=$auto$opt_dff.cc:194:make_patterns_logic$18884, arst=!\HRSTn, srst={ }

3.29.2. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !\de.m1_arb_st [1], asynchronously reset by !\HRSTn
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 2 outputs.

3.29.2.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.2.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.3. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, asynchronously reset by !\HRSTn
Extracted 828 gates and 1100 wires to a netlist network with 270 inputs and 278 outputs.

3.29.3.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      179
ABC RESULTS:            ANDNOT cells:       40
ABC RESULTS:               BUF cells:       34
ABC RESULTS:               DFF cells:       50
ABC RESULTS:               MUX cells:       66
ABC RESULTS:              NAND cells:      101
ABC RESULTS:               NOR cells:       50
ABC RESULTS:               NOT cells:       31
ABC RESULTS:                OR cells:       38
ABC RESULTS:             ORNOT cells:       15
ABC RESULTS:        internal signals:      552
ABC RESULTS:           input signals:      270
ABC RESULTS:          output signals:      278
Removing temp directory.

3.29.4. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK
Extracted 139 gates and 213 wires to a netlist network with 74 inputs and 105 outputs.

3.29.4.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 20 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       95
ABC RESULTS:               BUF cells:       24
ABC RESULTS:               DFF cells:       20
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       34
ABC RESULTS:           input signals:       74
ABC RESULTS:          output signals:      105
Removing temp directory.

3.29.5. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, synchronously reset by $abc$44443$lo05
Extracted 151 gates and 175 wires to a netlist network with 22 inputs and 8 outputs.

3.29.5.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       38
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        6
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:        5
ABC RESULTS:                OR cells:        7
ABC RESULTS:             ORNOT cells:       14
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:      145
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.6. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19432, asynchronously reset by !\HRSTn
Extracted 20 gates and 29 wires to a netlist network with 8 inputs and 5 outputs.

3.29.6.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.7. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19429, asynchronously reset by !\HRSTn
Extracted 20 gates and 38 wires to a netlist network with 18 inputs and 3 outputs.

3.29.7.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.8. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19447, asynchronously reset by !\HRSTn
Extracted 13 gates and 26 wires to a netlist network with 12 inputs and 11 outputs.

3.29.8.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.9. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19450, asynchronously reset by !\HRSTn
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 8 outputs.

3.29.9.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.10. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$44443$lo47, asynchronously reset by !\HRSTn
Extracted 98 gates and 133 wires to a netlist network with 35 inputs and 34 outputs.

3.29.10.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.10.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       32
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       64
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       64
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       34
Removing temp directory.

3.29.11. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19414, asynchronously reset by !\HRSTn
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.29.11.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.11.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.12. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19359, asynchronously reset by !\HRSTn
Extracted 20 gates and 37 wires to a netlist network with 16 inputs and 16 outputs.

3.29.12.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.12.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        5
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.13. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19471, asynchronously reset by !\HRSTn
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 4 outputs.

3.29.13.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.13.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.14. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19454, asynchronously reset by !\HRSTn
Extracted 21 gates and 40 wires to a netlist network with 18 inputs and 15 outputs.

3.29.14.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.14.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        6
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        4
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.15. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19566, asynchronously reset by !\HRSTn
Extracted 9 gates and 19 wires to a netlist network with 9 inputs and 6 outputs.

3.29.15.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.15.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.16. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19542, asynchronously reset by !\HRSTn
Extracted 10 gates and 19 wires to a netlist network with 8 inputs and 9 outputs.

3.29.16.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.16.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.17. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19549, asynchronously reset by !\HRSTn
Extracted 17 gates and 32 wires to a netlist network with 14 inputs and 15 outputs.

3.29.17.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.17.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        4
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.18. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19545, asynchronously reset by !\HRSTn
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 7 outputs.

3.29.18.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.18.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.19. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19524, asynchronously reset by !\HRSTn
Extracted 20 gates and 38 wires to a netlist network with 18 inputs and 3 outputs.

3.29.19.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.19.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.20. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19527, asynchronously reset by !\HRSTn
Extracted 23 gates and 35 wires to a netlist network with 11 inputs and 5 outputs.

3.29.20.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.20.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.21. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19509, asynchronously reset by !\HRSTn
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 2 outputs.

3.29.21.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.21.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.22. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19665, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.29.22.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.22.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.23. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19662, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.29.23.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.23.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.24. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19622, asynchronously reset by !\HRSTn
Extracted 20 gates and 29 wires to a netlist network with 8 inputs and 5 outputs.

3.29.24.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.24.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.25. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19619, asynchronously reset by !\HRSTn
Extracted 20 gates and 38 wires to a netlist network with 18 inputs and 3 outputs.

3.29.25.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.25.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.26. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19604, asynchronously reset by !\HRSTn
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.29.26.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.26.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.27. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19656, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.29.27.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.27.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.28. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19653, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.29.28.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.28.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.29. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19659, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.29.29.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.29.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.30. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19647, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.29.30.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.30.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.31. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19650, asynchronously reset by !\HRSTn
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 4 outputs.

3.29.31.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.31.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.32. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19637, asynchronously reset by !\HRSTn
Extracted 14 gates and 26 wires to a netlist network with 11 inputs and 12 outputs.

3.29.32.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.32.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.33. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19644, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.29.33.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.33.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.34. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19640, asynchronously reset by !\HRSTn
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 7 outputs.

3.29.34.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.34.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.35. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19376, asynchronously reset by !\HRSTn
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 4 outputs.

3.29.35.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.35.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.36. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19091, asynchronously reset by !\HRSTn
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 4 outputs.

3.29.36.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.36.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.37. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19074, asynchronously reset by !\HRSTn
Extracted 18 gates and 33 wires to a netlist network with 14 inputs and 16 outputs.

3.29.37.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.37.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        5
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.38. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18996, asynchronously reset by !\HRSTn
Extracted 7 gates and 13 wires to a netlist network with 5 inputs and 5 outputs.

3.29.38.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.38.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.39. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19169, asynchronously reset by !\HRSTn
Extracted 27 gates and 54 wires to a netlist network with 26 inputs and 18 outputs.

3.29.39.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.39.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:       15
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        4
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.40. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \m1_mux.mux_no_we, asynchronously reset by !\HRSTn
Extracted 763 gates and 1467 wires to a netlist network with 704 inputs and 45 outputs.

3.29.40.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.40.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      198
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:      407
ABC RESULTS:              NAND cells:      148
ABC RESULTS:               NOR cells:       58
ABC RESULTS:               NOT cells:        7
ABC RESULTS:                OR cells:       28
ABC RESULTS:             ORNOT cells:       88
ABC RESULTS:              XNOR cells:       27
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      718
ABC RESULTS:           input signals:      704
ABC RESULTS:          output signals:       45
Removing temp directory.

3.29.41. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19319, asynchronously reset by !\HRSTn
Extracted 36 gates and 73 wires to a netlist network with 37 inputs and 3 outputs.

3.29.41.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.41.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       16
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:       15
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.42. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ahb_slv.ad_d1_we, asynchronously reset by !\HRSTn
Extracted 156 gates and 280 wires to a netlist network with 124 inputs and 135 outputs.

3.29.42.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.42.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       69
ABC RESULTS:               BUF cells:       64
ABC RESULTS:               DFF cells:       40
ABC RESULTS:               MUX cells:       14
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:       10
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:               XOR cells:        7
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:      124
ABC RESULTS:          output signals:      135
Removing temp directory.

3.29.43. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19355, asynchronously reset by !\HRSTn
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 7 outputs.

3.29.43.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.43.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.44. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19352, asynchronously reset by !\HRSTn
Extracted 12 gates and 22 wires to a netlist network with 9 inputs and 11 outputs.

3.29.44.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.44.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.45. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ahb_slv.hrdt_we, asynchronously reset by !\HRSTn
Extracted 1225 gates and 2126 wires to a netlist network with 900 inputs and 33 outputs.

3.29.45.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.45.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      280
ABC RESULTS:            ANDNOT cells:       56
ABC RESULTS:               BUF cells:       32
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:      522
ABC RESULTS:              NAND cells:      397
ABC RESULTS:               NOR cells:       43
ABC RESULTS:               NOT cells:       13
ABC RESULTS:                OR cells:      190
ABC RESULTS:             ORNOT cells:      112
ABC RESULTS:        internal signals:     1193
ABC RESULTS:           input signals:      900
ABC RESULTS:          output signals:       33
Removing temp directory.

3.29.46. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19334, asynchronously reset by !\HRSTn
Extracted 19 gates and 36 wires to a netlist network with 17 inputs and 3 outputs.

3.29.46.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.46.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.47. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19337, asynchronously reset by !\HRSTn
Extracted 22 gates and 33 wires to a netlist network with 10 inputs and 5 outputs.

3.29.47.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.47.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.48. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19224, asynchronously reset by !\HRSTn
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.29.48.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.48.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.49. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19186, asynchronously reset by !\HRSTn
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 4 outputs.

3.29.49.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.49.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.50. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19264, asynchronously reset by !\HRSTn
Extracted 19 gates and 36 wires to a netlist network with 16 inputs and 15 outputs.

3.29.50.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.50.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        4
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.51. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19242, asynchronously reset by !\HRSTn
Extracted 21 gates and 31 wires to a netlist network with 9 inputs and 5 outputs.

3.29.51.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.51.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.52. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19257, asynchronously reset by !\HRSTn
Extracted 12 gates and 22 wires to a netlist network with 9 inputs and 11 outputs.

3.29.52.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.52.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.53. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19260, asynchronously reset by !\HRSTn
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 7 outputs.

3.29.53.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.53.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.54. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18979, asynchronously reset by !\HRSTn
Extracted 20 gates and 38 wires to a netlist network with 17 inputs and 15 outputs.

3.29.54.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.54.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        4
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.55. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19281, asynchronously reset by !\HRSTn
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 4 outputs.

3.29.55.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.55.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.56. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$43604, asynchronously reset by !\HRSTn
Extracted 62 gates and 100 wires to a netlist network with 37 inputs and 26 outputs.

3.29.56.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.56.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       29
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               ONE cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:       37
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       26
Removing temp directory.

3.29.57. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19780, asynchronously reset by !\HRSTn
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 2 outputs.

3.29.57.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.57.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.58. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19787, asynchronously reset by !\HRSTn
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

3.29.58.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.58.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.59. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19766, asynchronously reset by !\HRSTn
Extracted 11 gates and 18 wires to a netlist network with 6 inputs and 5 outputs.

3.29.59.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.59.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.60. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19763, asynchronously reset by !\HRSTn
Extracted 9 gates and 15 wires to a netlist network with 5 inputs and 5 outputs.

3.29.60.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.60.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.61. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$44443$auto$opt_dff.cc:194:make_patterns_logic$19776, asynchronously reset by !\HRSTn
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.29.61.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.61.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.62. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19749, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.29.62.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.62.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.63. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19759, asynchronously reset by !\HRSTn
Extracted 21 gates and 37 wires to a netlist network with 16 inputs and 9 outputs.

3.29.63.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.63.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        4
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.64. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19753, asynchronously reset by !\HRSTn
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 3 outputs.

3.29.64.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.64.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.65. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19746, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.29.65.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.65.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.66. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19824, asynchronously reset by !\HRSTn
Extracted 9 gates and 15 wires to a netlist network with 6 inputs and 3 outputs.

3.29.66.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.66.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.67. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19833, asynchronously reset by !\HRSTn
Extracted 73 gates and 151 wires to a netlist network with 78 inputs and 25 outputs.

3.29.67.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.67.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       56
ABC RESULTS:        internal signals:       48
ABC RESULTS:           input signals:       78
ABC RESULTS:          output signals:       25
Removing temp directory.

3.29.68. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19821, asynchronously reset by !\HRSTn
Extracted 3 gates and 8 wires to a netlist network with 5 inputs and 2 outputs.

3.29.68.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.68.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.69. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19801, asynchronously reset by !\HRSTn
Extracted 310 gates and 559 wires to a netlist network with 248 inputs and 185 outputs.

3.29.69.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.69.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       19
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:      104
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:       11
ABC RESULTS:                OR cells:       84
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:               XOR cells:       39
ABC RESULTS:        internal signals:      126
ABC RESULTS:           input signals:      248
ABC RESULTS:          output signals:      185
Removing temp directory.

3.29.70. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19814, asynchronously reset by !\HRSTn
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.29.70.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.70.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.71. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19794, asynchronously reset by !\HRSTn
Extracted 116 gates and 194 wires to a netlist network with 78 inputs and 39 outputs.

3.29.71.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.71.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       31
ABC RESULTS:              NAND cells:       50
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       14
ABC RESULTS:        internal signals:       77
ABC RESULTS:           input signals:       78
ABC RESULTS:          output signals:       39
Removing temp directory.

3.29.72. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c3dbs_b2we, asynchronously reset by !\HRSTn
Extracted 39 gates and 58 wires to a netlist network with 18 inputs and 17 outputs.

3.29.72.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.72.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.73. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3dbs_b3we, asynchronously reset by !\HRSTn
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 15 outputs.

3.29.73.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.73.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       20
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.74. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c2dbs_b2we, asynchronously reset by !\HRSTn
Extracted 31 gates and 46 wires to a netlist network with 15 inputs and 17 outputs.

3.29.74.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.74.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.75. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2dbs_b3we, asynchronously reset by !\HRSTn
Extracted 21 gates and 44 wires to a netlist network with 23 inputs and 16 outputs.

3.29.75.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.75.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               XOR cells:        7
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.76. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c5dbs_b2we, asynchronously reset by !\HRSTn
Extracted 39 gates and 58 wires to a netlist network with 18 inputs and 17 outputs.

3.29.76.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.76.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.77. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5dbs_b3we, asynchronously reset by !\HRSTn
Extracted 20 gates and 44 wires to a netlist network with 24 inputs and 15 outputs.

3.29.77.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.77.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.78. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c4dbs_b2we, asynchronously reset by !\HRSTn
Extracted 40 gates and 62 wires to a netlist network with 21 inputs and 18 outputs.

3.29.78.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.78.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.79. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4dbs_b3we, asynchronously reset by !\HRSTn
Extracted 21 gates and 44 wires to a netlist network with 23 inputs and 16 outputs.

3.29.79.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.79.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               XOR cells:        7
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.80. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.csr_b0we, asynchronously reset by !\HRSTn
Extracted 22 gates and 37 wires to a netlist network with 15 inputs and 14 outputs.

3.29.80.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.80.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.81. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.sync_b0we, asynchronously reset by !\HRSTn
Extracted 31 gates and 61 wires to a netlist network with 29 inputs and 21 outputs.

3.29.81.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.81.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:       15
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.82. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c1dbs_b2we, asynchronously reset by !\HRSTn
Extracted 36 gates and 50 wires to a netlist network with 13 inputs and 16 outputs.

3.29.82.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.82.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.83. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1dbs_b3we, asynchronously reset by !\HRSTn
Extracted 24 gates and 50 wires to a netlist network with 26 inputs and 17 outputs.

3.29.83.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.83.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.84. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c0dbs_b2we, asynchronously reset by !\HRSTn
Extracted 30 gates and 49 wires to a netlist network with 18 inputs and 20 outputs.

3.29.84.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.84.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        5
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.85. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0dbs_b3we, asynchronously reset by !\HRSTn
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 13 outputs.

3.29.85.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.85.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.86. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c7bbs_b2we, asynchronously reset by !\HRSTn
Extracted 33 gates and 47 wires to a netlist network with 14 inputs and 18 outputs.

3.29.86.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.86.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.87. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7bbs_b3we, asynchronously reset by !\HRSTn
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 14 outputs.

3.29.87.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.87.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.88. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c6bbs_b2we, asynchronously reset by !\HRSTn
Extracted 44 gates and 64 wires to a netlist network with 19 inputs and 17 outputs.

3.29.88.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.88.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:                OR cells:        8
ABC RESULTS:        internal signals:       28
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.89. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6bbs_b3we, asynchronously reset by !\HRSTn
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 14 outputs.

3.29.89.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.89.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.90. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c3bbs_b2we, asynchronously reset by !\HRSTn
Extracted 37 gates and 54 wires to a netlist network with 16 inputs and 17 outputs.

3.29.90.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.90.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.91. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3bbs_b3we, asynchronously reset by !\HRSTn
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 12 outputs.

3.29.91.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.91.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.92. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c2bbs_b2we, asynchronously reset by !\HRSTn
Extracted 38 gates and 54 wires to a netlist network with 15 inputs and 16 outputs.

3.29.92.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.92.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.93. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2bbs_b3we, asynchronously reset by !\HRSTn
Extracted 22 gates and 46 wires to a netlist network with 24 inputs and 17 outputs.

3.29.93.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.93.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:               XOR cells:        7
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.94. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c5bbs_b2we, asynchronously reset by !\HRSTn
Extracted 38 gates and 56 wires to a netlist network with 17 inputs and 17 outputs.

3.29.94.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.94.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.95. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5bbs_b3we, asynchronously reset by !\HRSTn
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 14 outputs.

3.29.95.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.95.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.96. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c4bbs_b2we, asynchronously reset by !\HRSTn
Extracted 36 gates and 52 wires to a netlist network with 15 inputs and 17 outputs.

3.29.96.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.96.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.97. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4bbs_b3we, asynchronously reset by !\HRSTn
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 14 outputs.

3.29.97.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.97.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.98. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c7dbs_b2we, asynchronously reset by !\HRSTn
Extracted 35 gates and 48 wires to a netlist network with 12 inputs and 16 outputs.

3.29.98.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.98.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.99. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7dbs_b3we, asynchronously reset by !\HRSTn
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 17 outputs.

3.29.99.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.99.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.100. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6dbs_b2we, asynchronously reset by !\HRSTn
Extracted 44 gates and 69 wires to a netlist network with 24 inputs and 18 outputs.

3.29.100.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.100.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.101. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6dbs_b3we, asynchronously reset by !\HRSTn
Extracted 27 gates and 58 wires to a netlist network with 31 inputs and 18 outputs.

3.29.101.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.101.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.102. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c1bbs_b2we, asynchronously reset by !\HRSTn
Extracted 43 gates and 62 wires to a netlist network with 18 inputs and 16 outputs.

3.29.102.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.102.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:        8
ABC RESULTS:        internal signals:       28
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.103. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1bbs_b3we, asynchronously reset by !\HRSTn
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 12 outputs.

3.29.103.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.103.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.104. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c0bbs_b2we, asynchronously reset by !\HRSTn
Extracted 32 gates and 43 wires to a netlist network with 10 inputs and 19 outputs.

3.29.104.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.104.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.105. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0bbs_b3we, asynchronously reset by !\HRSTn
Extracted 24 gates and 50 wires to a netlist network with 26 inputs and 17 outputs.

3.29.105.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.105.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.106. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19838, asynchronously reset by !\HRSTn
Extracted 186 gates and 353 wires to a netlist network with 167 inputs and 73 outputs.

3.29.106.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.106.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:      124
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               XOR cells:       16
ABC RESULTS:        internal signals:      113
ABC RESULTS:           input signals:      167
ABC RESULTS:          output signals:       73
Removing temp directory.

3.29.107. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$40570, asynchronously reset by !\HRSTn
Extracted 216 gates and 258 wires to a netlist network with 41 inputs and 19 outputs.

3.29.107.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.107.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       54
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:       52
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:       12
ABC RESULTS:             ORNOT cells:       18
ABC RESULTS:        internal signals:      198
ABC RESULTS:           input signals:       41
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.108. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19070, asynchronously reset by !\HRSTn
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 8 outputs.

3.29.108.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.108.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.109. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19067, asynchronously reset by !\HRSTn
Extracted 19 gates and 37 wires to a netlist network with 17 inputs and 15 outputs.

3.29.109.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.109.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        7
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.110. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19731, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.29.110.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.110.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.111. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ch_sel.dma_rrarb0.next_ch, asynchronously reset by !\HRSTn
Extracted 112 gates and 147 wires to a netlist network with 34 inputs and 6 outputs.

3.29.111.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.111.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       20
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               DFF cells:        2
ABC RESULTS:              NAND cells:       28
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:      107
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.112. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19740, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.29.112.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.112.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.113. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19734, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.29.113.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.113.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.114. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19737, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.29.114.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.114.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.115. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19743, asynchronously reset by !\HRSTn
Extracted 7 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.29.115.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.115.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.116. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19728, asynchronously reset by !\HRSTn
Extracted 8 gates and 17 wires to a netlist network with 8 inputs and 4 outputs.

3.29.116.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.116.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.117. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19239, asynchronously reset by !\HRSTn
Extracted 19 gates and 36 wires to a netlist network with 17 inputs and 3 outputs.

3.29.117.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.117.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.118. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$42814, asynchronously reset by !\HRSTn
Extracted 194 gates and 213 wires to a netlist network with 18 inputs and 13 outputs.

3.29.118.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.118.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       51
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               DFF cells:        3
ABC RESULTS:              NAND cells:       43
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        9
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:       22
ABC RESULTS:        internal signals:      182
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.119. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19165, asynchronously reset by !\HRSTn
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 7 outputs.

3.29.119.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.119.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.120. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \h0readyin, asynchronously reset by !\HRSTn
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 4 outputs.

3.29.120.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.120.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.121. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$39448, asynchronously reset by !\HRSTn
Extracted 202 gates and 229 wires to a netlist network with 26 inputs and 4 outputs.

3.29.121.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.121.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       41
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:              NAND cells:       43
ABC RESULTS:               NOR cells:        4
ABC RESULTS:                OR cells:       15
ABC RESULTS:             ORNOT cells:       27
ABC RESULTS:        internal signals:      199
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.122. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2_rf.chcfg_b0we, asynchronously reset by !\HRSTn
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 6 outputs.

3.29.122.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.122.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        6
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.123. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2_rf.chdad_b0we, asynchronously reset by !\HRSTn
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 13 outputs.

3.29.123.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.123.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.124. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c2_rf.chdad_b2we, asynchronously reset by !\HRSTn
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 15 outputs.

3.29.124.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.124.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.125. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c2_rf.chdad_b1we, asynchronously reset by !\HRSTn
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 11 outputs.

3.29.125.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.125.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.126. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c2_rf.chsad_b1we, asynchronously reset by !\HRSTn
Extracted 22 gates and 46 wires to a netlist network with 24 inputs and 16 outputs.

3.29.126.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.126.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.127. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2_rf.chsad_b0we, asynchronously reset by !\HRSTn
Extracted 18 gates and 39 wires to a netlist network with 21 inputs and 14 outputs.

3.29.127.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.127.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.128. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2_rf.chsad_b3we, asynchronously reset by !\HRSTn
Extracted 20 gates and 43 wires to a netlist network with 23 inputs and 16 outputs.

3.29.128.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.128.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.129. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c2_rf.chsad_b2we, asynchronously reset by !\HRSTn
Extracted 21 gates and 44 wires to a netlist network with 23 inputs and 15 outputs.

3.29.129.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.129.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       13
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.130. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2_rf.chcsr_b0we_qf, asynchronously reset by !\HRSTn
Extracted 27 gates and 49 wires to a netlist network with 21 inputs and 17 outputs.

3.29.130.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.130.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.131. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $flatten\ctl_rf.\c3_rf.$verific$n149$15154, asynchronously reset by !\HRSTn
Extracted 23 gates and 42 wires to a netlist network with 18 inputs and 19 outputs.

3.29.131.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.131.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.132. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chcsr_b0we_qf, asynchronously reset by !\HRSTn
Extracted 25 gates and 45 wires to a netlist network with 19 inputs and 18 outputs.

3.29.132.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.132.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.133. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chllp_b3we, asynchronously reset by !\HRSTn
Extracted 28 gates and 48 wires to a netlist network with 19 inputs and 21 outputs.

3.29.133.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.133.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.134. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chllp_b2we, asynchronously reset by !\HRSTn
Extracted 31 gates and 56 wires to a netlist network with 24 inputs and 22 outputs.

3.29.134.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.134.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       22
Removing temp directory.

3.29.135. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chtsz_b0we, asynchronously reset by !\HRSTn
Extracted 18 gates and 39 wires to a netlist network with 21 inputs and 17 outputs.

3.29.135.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.135.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.136. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chdad_b3we, asynchronously reset by !\HRSTn
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 11 outputs.

3.29.136.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.136.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.137. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chllp_b1we, asynchronously reset by !\HRSTn
Extracted 29 gates and 52 wires to a netlist network with 22 inputs and 22 outputs.

3.29.137.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.137.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       22
Removing temp directory.

3.29.138. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chllp_b0we, asynchronously reset by !\HRSTn
Extracted 21 gates and 35 wires to a netlist network with 13 inputs and 19 outputs.

3.29.138.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.138.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.139. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chtsz_b1we, asynchronously reset by !\HRSTn
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 9 outputs.

3.29.139.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.139.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        6
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.140. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chcfg_b0we, asynchronously reset by !\HRSTn
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 6 outputs.

3.29.140.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.140.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        6
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.141. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chdad_b0we, asynchronously reset by !\HRSTn
Extracted 23 gates and 49 wires to a netlist network with 26 inputs and 16 outputs.

3.29.141.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.141.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.142. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c3_rf.chdad_b2we, asynchronously reset by !\HRSTn
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 10 outputs.

3.29.142.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.142.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.143. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chdad_b1we, asynchronously reset by !\HRSTn
Extracted 19 gates and 41 wires to a netlist network with 22 inputs and 14 outputs.

3.29.143.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.143.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.144. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c3_rf.chsad_b1we, asynchronously reset by !\HRSTn
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 11 outputs.

3.29.144.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.144.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.145. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chsad_b0we, asynchronously reset by !\HRSTn
Extracted 25 gates and 48 wires to a netlist network with 23 inputs and 17 outputs.

3.29.145.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.145.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:              NAND cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.146. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c3_rf.chsad_b3we, asynchronously reset by !\HRSTn
Extracted 16 gates and 35 wires to a netlist network with 19 inputs and 16 outputs.

3.29.146.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.146.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.147. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c3_rf.chsad_b2we, asynchronously reset by !\HRSTn
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 15 outputs.

3.29.147.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.147.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.148. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1_rf.chllp_b3we, asynchronously reset by !\HRSTn
Extracted 26 gates and 44 wires to a netlist network with 17 inputs and 21 outputs.

3.29.148.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.148.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.149. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c1_rf.chllp_b2we, asynchronously reset by !\HRSTn
Extracted 28 gates and 47 wires to a netlist network with 18 inputs and 20 outputs.

3.29.149.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.149.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.150. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1_rf.chtsz_b0we, asynchronously reset by !\HRSTn
Extracted 21 gates and 45 wires to a netlist network with 24 inputs and 17 outputs.

3.29.150.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.150.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.151. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c1_rf.chdad_b3we, asynchronously reset by !\HRSTn
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 15 outputs.

3.29.151.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.151.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.152. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1_rf.chllp_b1we, asynchronously reset by !\HRSTn
Extracted 26 gates and 44 wires to a netlist network with 17 inputs and 21 outputs.

3.29.152.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.152.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.153. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1_rf.chllp_b0we, asynchronously reset by !\HRSTn
Extracted 24 gates and 41 wires to a netlist network with 16 inputs and 19 outputs.

3.29.153.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.153.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.154. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c1_rf.chtsz_b1we, asynchronously reset by !\HRSTn
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 8 outputs.

3.29.154.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.154.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        4
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.155. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1_rf.chcfg_b0we, asynchronously reset by !\HRSTn
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 6 outputs.

3.29.155.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.155.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        6
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.156. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1_rf.chdad_b0we, asynchronously reset by !\HRSTn
Extracted 25 gates and 53 wires to a netlist network with 28 inputs and 17 outputs.

3.29.156.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.156.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.157. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c1_rf.chdad_b2we, asynchronously reset by !\HRSTn
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 15 outputs.

3.29.157.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.157.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.158. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c1_rf.chdad_b1we, asynchronously reset by !\HRSTn
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 10 outputs.

3.29.158.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.158.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.159. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1_rf.chsad_b1we, asynchronously reset by !\HRSTn
Extracted 19 gates and 41 wires to a netlist network with 22 inputs and 16 outputs.

3.29.159.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.159.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.160. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1_rf.chsad_b0we, asynchronously reset by !\HRSTn
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 12 outputs.

3.29.160.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.160.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.161. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1_rf.chsad_b3we, asynchronously reset by !\HRSTn
Extracted 18 gates and 39 wires to a netlist network with 21 inputs and 17 outputs.

3.29.161.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.161.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.162. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c1_rf.chsad_b2we, asynchronously reset by !\HRSTn
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 14 outputs.

3.29.162.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.162.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.163. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $flatten\ctl_rf.\c1_rf.$verific$n149$14252, asynchronously reset by !\HRSTn
Extracted 21 gates and 37 wires to a netlist network with 15 inputs and 17 outputs.

3.29.163.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.163.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.164. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c1_rf.chcsr_b0we_qf, asynchronously reset by !\HRSTn
Extracted 29 gates and 52 wires to a netlist network with 22 inputs and 19 outputs.

3.29.164.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.164.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        6
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.165. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $flatten\ctl_rf.\c2_rf.$verific$n149$14703, asynchronously reset by !\HRSTn
Extracted 28 gates and 53 wires to a netlist network with 24 inputs and 21 outputs.

3.29.165.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.165.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.166. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2_rf.chllp_b3we, asynchronously reset by !\HRSTn
Extracted 22 gates and 36 wires to a netlist network with 13 inputs and 21 outputs.

3.29.166.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.166.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.167. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c2_rf.chllp_b2we, asynchronously reset by !\HRSTn
Extracted 20 gates and 30 wires to a netlist network with 9 inputs and 20 outputs.

3.29.167.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.167.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.168. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2_rf.chtsz_b0we, asynchronously reset by !\HRSTn
Extracted 24 gates and 51 wires to a netlist network with 27 inputs and 17 outputs.

3.29.168.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.168.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       27
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.169. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2_rf.chdad_b3we, asynchronously reset by !\HRSTn
Extracted 21 gates and 45 wires to a netlist network with 24 inputs and 17 outputs.

3.29.169.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.169.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.170. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2_rf.chllp_b1we, asynchronously reset by !\HRSTn
Extracted 23 gates and 38 wires to a netlist network with 14 inputs and 21 outputs.

3.29.170.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.170.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.171. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c2_rf.chllp_b0we, asynchronously reset by !\HRSTn
Extracted 26 gates and 45 wires to a netlist network with 18 inputs and 19 outputs.

3.29.171.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.171.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.172. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c2_rf.chtsz_b1we, asynchronously reset by !\HRSTn
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 8 outputs.

3.29.172.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.172.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        6
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.173. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$43584, asynchronously reset by !\HRSTn
Extracted 28 gates and 42 wires to a netlist network with 13 inputs and 8 outputs.

3.29.173.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.173.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.174. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $flatten\ctl_rf.\c6_rf.$verific$n149$16507, asynchronously reset by !\HRSTn
Extracted 23 gates and 41 wires to a netlist network with 17 inputs and 19 outputs.

3.29.174.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.174.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.175. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chllp_b3we, asynchronously reset by !\HRSTn
Extracted 23 gates and 38 wires to a netlist network with 14 inputs and 21 outputs.

3.29.175.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.175.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.176. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c6_rf.chllp_b2we, asynchronously reset by !\HRSTn
Extracted 26 gates and 43 wires to a netlist network with 16 inputs and 20 outputs.

3.29.176.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.176.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.177. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chtsz_b0we, asynchronously reset by !\HRSTn
Extracted 23 gates and 49 wires to a netlist network with 26 inputs and 17 outputs.

3.29.177.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.177.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.178. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chdad_b3we, asynchronously reset by !\HRSTn
Extracted 20 gates and 43 wires to a netlist network with 23 inputs and 17 outputs.

3.29.178.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.178.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.179. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chllp_b1we, asynchronously reset by !\HRSTn
Extracted 26 gates and 44 wires to a netlist network with 17 inputs and 21 outputs.

3.29.179.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.179.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.180. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chllp_b0we, asynchronously reset by !\HRSTn
Extracted 22 gates and 37 wires to a netlist network with 14 inputs and 19 outputs.

3.29.180.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.180.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.181. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chtsz_b1we, asynchronously reset by !\HRSTn
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 9 outputs.

3.29.181.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.181.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        7
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.182. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chcfg_b0we, asynchronously reset by !\HRSTn
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 6 outputs.

3.29.182.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.182.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        6
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.183. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chdad_b0we, asynchronously reset by !\HRSTn
Extracted 18 gates and 39 wires to a netlist network with 21 inputs and 16 outputs.

3.29.183.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.183.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.184. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c6_rf.chdad_b2we, asynchronously reset by !\HRSTn
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 14 outputs.

3.29.184.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.184.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.185. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chdad_b1we, asynchronously reset by !\HRSTn
Extracted 19 gates and 41 wires to a netlist network with 22 inputs and 15 outputs.

3.29.185.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.185.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.186. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c6_rf.chsad_b1we, asynchronously reset by !\HRSTn
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 13 outputs.

3.29.186.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.186.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.187. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chsad_b0we, asynchronously reset by !\HRSTn
Extracted 17 gates and 37 wires to a netlist network with 20 inputs and 13 outputs.

3.29.187.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.187.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       20
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.188. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chsad_b3we, asynchronously reset by !\HRSTn
Extracted 21 gates and 45 wires to a netlist network with 24 inputs and 17 outputs.

3.29.188.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.188.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.189. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c6_rf.chsad_b2we, asynchronously reset by !\HRSTn
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 11 outputs.

3.29.189.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.189.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.190. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c6_rf.chcsr_b0we_qf, asynchronously reset by !\HRSTn
Extracted 26 gates and 47 wires to a netlist network with 20 inputs and 17 outputs.

3.29.190.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.190.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       20
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.191. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $flatten\ctl_rf.\c7_rf.$verific$n149$16958, asynchronously reset by !\HRSTn
Extracted 21 gates and 37 wires to a netlist network with 15 inputs and 17 outputs.

3.29.191.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.191.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.192. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19034, asynchronously reset by !\HRSTn
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 2 outputs.

3.29.192.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.192.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.193. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chcsr_b0we_qf, asynchronously reset by !\HRSTn
Extracted 28 gates and 53 wires to a netlist network with 24 inputs and 18 outputs.

3.29.193.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.193.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        7
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.194. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chllp_b3we, asynchronously reset by !\HRSTn
Extracted 29 gates and 52 wires to a netlist network with 22 inputs and 22 outputs.

3.29.194.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.194.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       22
Removing temp directory.

3.29.195. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c7_rf.chllp_b2we, asynchronously reset by !\HRSTn
Extracted 22 gates and 35 wires to a netlist network with 12 inputs and 20 outputs.

3.29.195.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.195.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.196. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chtsz_b0we, asynchronously reset by !\HRSTn
Extracted 21 gates and 47 wires to a netlist network with 26 inputs and 18 outputs.

3.29.196.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.196.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       13
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.197. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chdad_b3we, asynchronously reset by !\HRSTn
Extracted 15 gates and 33 wires to a netlist network with 18 inputs and 14 outputs.

3.29.197.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.197.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.198. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chllp_b1we, asynchronously reset by !\HRSTn
Extracted 24 gates and 40 wires to a netlist network with 15 inputs and 21 outputs.

3.29.198.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.198.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.199. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c7_rf.chllp_b0we, asynchronously reset by !\HRSTn
Extracted 24 gates and 40 wires to a netlist network with 15 inputs and 18 outputs.

3.29.199.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.199.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.200. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chtsz_b1we, asynchronously reset by !\HRSTn
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 9 outputs.

3.29.200.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.200.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        5
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.201. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chcfg_b0we, asynchronously reset by !\HRSTn
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 6 outputs.

3.29.201.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.201.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        6
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.202. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chdad_b0we, asynchronously reset by !\HRSTn
Extracted 20 gates and 43 wires to a netlist network with 23 inputs and 17 outputs.

3.29.202.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.202.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.203. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c7_rf.chdad_b2we, asynchronously reset by !\HRSTn
Extracted 20 gates and 42 wires to a netlist network with 22 inputs and 15 outputs.

3.29.203.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.203.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.204. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chdad_b1we, asynchronously reset by !\HRSTn
Extracted 17 gates and 37 wires to a netlist network with 20 inputs and 14 outputs.

3.29.204.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.204.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       20
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.205. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chsad_b1we, asynchronously reset by !\HRSTn
Extracted 19 gates and 43 wires to a netlist network with 24 inputs and 14 outputs.

3.29.205.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.205.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.206. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c7_rf.chsad_b0we, asynchronously reset by !\HRSTn
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 13 outputs.

3.29.206.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.206.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.207. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c7_rf.chsad_b3we, asynchronously reset by !\HRSTn
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 11 outputs.

3.29.207.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.207.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.208. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c7_rf.chsad_b2we, asynchronously reset by !\HRSTn
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 13 outputs.

3.29.208.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.208.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.209. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chcfg_b0we, asynchronously reset by !\HRSTn
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 7 outputs.

3.29.209.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.209.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        4
ABC RESULTS:               NOT cells:        6
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.210. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chdad_b0we, asynchronously reset by !\HRSTn
Extracted 18 gates and 39 wires to a netlist network with 21 inputs and 15 outputs.

3.29.210.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.210.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.211. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c4_rf.chdad_b2we, asynchronously reset by !\HRSTn
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 16 outputs.

3.29.211.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.211.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.212. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chdad_b1we, asynchronously reset by !\HRSTn
Extracted 18 gates and 39 wires to a netlist network with 21 inputs and 15 outputs.

3.29.212.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.212.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.213. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chsad_b1we, asynchronously reset by !\HRSTn
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 13 outputs.

3.29.213.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.213.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.214. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chsad_b0we, asynchronously reset by !\HRSTn
Extracted 16 gates and 35 wires to a netlist network with 19 inputs and 14 outputs.

3.29.214.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.214.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.215. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chsad_b3we, asynchronously reset by !\HRSTn
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 10 outputs.

3.29.215.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.215.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.216. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c4_rf.chsad_b2we, asynchronously reset by !\HRSTn
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 10 outputs.

3.29.216.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.216.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.217. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chcsr_b0we_qf, asynchronously reset by !\HRSTn
Extracted 28 gates and 50 wires to a netlist network with 21 inputs and 19 outputs.

3.29.217.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.217.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.218. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $flatten\ctl_rf.\c4_rf.$verific$n149$15605, asynchronously reset by !\HRSTn
Extracted 23 gates and 43 wires to a netlist network with 19 inputs and 19 outputs.

3.29.218.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.218.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.219. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c4_rf.chllp_b3we, asynchronously reset by !\HRSTn
Extracted 20 gates and 30 wires to a netlist network with 9 inputs and 20 outputs.

3.29.219.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.219.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.220. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c4_rf.chllp_b2we, asynchronously reset by !\HRSTn
Extracted 22 gates and 35 wires to a netlist network with 12 inputs and 20 outputs.

3.29.220.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.220.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.221. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chtsz_b0we, asynchronously reset by !\HRSTn
Extracted 23 gates and 49 wires to a netlist network with 26 inputs and 17 outputs.

3.29.221.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.221.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.222. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chdad_b3we, asynchronously reset by !\HRSTn
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 16 outputs.

3.29.222.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.222.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.223. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chllp_b1we, asynchronously reset by !\HRSTn
Extracted 24 gates and 40 wires to a netlist network with 15 inputs and 22 outputs.

3.29.223.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.223.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        9
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       22
Removing temp directory.

3.29.224. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c4_rf.chllp_b0we, asynchronously reset by !\HRSTn
Extracted 20 gates and 32 wires to a netlist network with 11 inputs and 19 outputs.

3.29.224.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.224.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.225. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c4_rf.chtsz_b1we, asynchronously reset by !\HRSTn
Extracted 16 gates and 29 wires to a netlist network with 13 inputs and 9 outputs.

3.29.225.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.225.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        5
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.226. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5_rf.chllp_b3we, asynchronously reset by !\HRSTn
Extracted 31 gates and 56 wires to a netlist network with 24 inputs and 22 outputs.

3.29.226.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.226.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       22
Removing temp directory.

3.29.227. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c5_rf.chllp_b2we, asynchronously reset by !\HRSTn
Extracted 26 gates and 43 wires to a netlist network with 16 inputs and 20 outputs.

3.29.227.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.227.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.228. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5_rf.chtsz_b0we, asynchronously reset by !\HRSTn
Extracted 19 gates and 41 wires to a netlist network with 22 inputs and 17 outputs.

3.29.228.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.228.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.229. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5_rf.chdad_b3we, asynchronously reset by !\HRSTn
Extracted 25 gates and 53 wires to a netlist network with 28 inputs and 17 outputs.

3.29.229.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.229.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.230. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5_rf.chllp_b1we, asynchronously reset by !\HRSTn
Extracted 31 gates and 56 wires to a netlist network with 24 inputs and 23 outputs.

3.29.230.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.230.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       23
Removing temp directory.

3.29.231. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5_rf.chllp_b0we, asynchronously reset by !\HRSTn
Extracted 35 gates and 65 wires to a netlist network with 29 inputs and 23 outputs.

3.29.231.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.231.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       19
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       23
Removing temp directory.

3.29.232. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18939, asynchronously reset by !\HRSTn
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.29.232.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.232.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.233. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c5_rf.chtsz_b1we, asynchronously reset by !\HRSTn
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 8 outputs.

3.29.233.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.233.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        7
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.234. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5_rf.chcfg_b0we, asynchronously reset by !\HRSTn
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 6 outputs.

3.29.234.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.234.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        6
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.235. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5_rf.chdad_b0we, asynchronously reset by !\HRSTn
Extracted 19 gates and 41 wires to a netlist network with 22 inputs and 16 outputs.

3.29.235.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.235.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.236. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c5_rf.chdad_b2we, asynchronously reset by !\HRSTn
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 11 outputs.

3.29.236.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.236.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.237. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5_rf.chdad_b1we, asynchronously reset by !\HRSTn
Extracted 19 gates and 41 wires to a netlist network with 22 inputs and 16 outputs.

3.29.237.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.237.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.238. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c5_rf.chsad_b1we, asynchronously reset by !\HRSTn
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 14 outputs.

3.29.238.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.238.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.239. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5_rf.chsad_b0we, asynchronously reset by !\HRSTn
Extracted 15 gates and 33 wires to a netlist network with 18 inputs and 12 outputs.

3.29.239.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.239.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.240. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c5_rf.chsad_b3we, asynchronously reset by !\HRSTn
Extracted 15 gates and 31 wires to a netlist network with 16 inputs and 15 outputs.

3.29.240.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.240.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.241. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c5_rf.chsad_b2we, asynchronously reset by !\HRSTn
Extracted 22 gates and 46 wires to a netlist network with 24 inputs and 16 outputs.

3.29.241.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.241.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.242. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $flatten\ctl_rf.\c5_rf.$verific$n149$16056, asynchronously reset by !\HRSTn
Extracted 23 gates and 41 wires to a netlist network with 17 inputs and 19 outputs.

3.29.242.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.242.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.243. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c5_rf.chcsr_b0we_qf, asynchronously reset by !\HRSTn
Extracted 25 gates and 45 wires to a netlist network with 19 inputs and 17 outputs.

3.29.243.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.243.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.244. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0_rf.chcfg_b0we, asynchronously reset by !\HRSTn
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 6 outputs.

3.29.244.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.244.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        6
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.245. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0_rf.chdad_b0we, asynchronously reset by !\HRSTn
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 10 outputs.

3.29.245.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.245.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.246. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c0_rf.chdad_b2we, asynchronously reset by !\HRSTn
Extracted 20 gates and 42 wires to a netlist network with 22 inputs and 14 outputs.

3.29.246.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.246.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.247. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c0_rf.chdad_b1we, asynchronously reset by !\HRSTn
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 14 outputs.

3.29.247.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.247.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.248. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0_rf.chsad_b1we, asynchronously reset by !\HRSTn
Extracted 21 gates and 47 wires to a netlist network with 26 inputs and 15 outputs.

3.29.248.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.248.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       13
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.249. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0_rf.chsad_b0we, asynchronously reset by !\HRSTn
Extracted 21 gates and 45 wires to a netlist network with 24 inputs and 16 outputs.

3.29.249.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.249.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.250. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c0_rf.chsad_b3we, asynchronously reset by !\HRSTn
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 8 outputs.

3.29.250.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.250.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.251. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c0_rf.chsad_b2we, asynchronously reset by !\HRSTn
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 10 outputs.

3.29.251.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.251.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.252. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0_rf.chcsr_b0we_qf, asynchronously reset by !\HRSTn
Extracted 24 gates and 43 wires to a netlist network with 18 inputs and 17 outputs.

3.29.252.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.252.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.253. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $flatten\ctl_rf.\c0_rf.$verific$n149$13801, asynchronously reset by !\HRSTn
Extracted 24 gates and 43 wires to a netlist network with 18 inputs and 19 outputs.

3.29.253.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.253.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        6
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.254. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c0_rf.chllp_b3we, asynchronously reset by !\HRSTn
Extracted 23 gates and 37 wires to a netlist network with 13 inputs and 20 outputs.

3.29.254.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.254.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.255. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $abc$45048$ctl_rf.c0_rf.chllp_b2we, asynchronously reset by !\HRSTn
Extracted 20 gates and 30 wires to a netlist network with 9 inputs and 20 outputs.

3.29.255.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.255.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:        8
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.256. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0_rf.chtsz_b0we, asynchronously reset by !\HRSTn
Extracted 23 gates and 51 wires to a netlist network with 28 inputs and 18 outputs.

3.29.256.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.256.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.257. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0_rf.chdad_b3we, asynchronously reset by !\HRSTn
Extracted 23 gates and 49 wires to a netlist network with 26 inputs and 17 outputs.

3.29.257.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.257.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.258. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0_rf.chllp_b1we, asynchronously reset by !\HRSTn
Extracted 24 gates and 40 wires to a netlist network with 15 inputs and 21 outputs.

3.29.258.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.258.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.259. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0_rf.chllp_b0we, asynchronously reset by !\HRSTn
Extracted 23 gates and 39 wires to a netlist network with 15 inputs and 19 outputs.

3.29.259.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.259.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        3
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.260. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ctl_rf.c0_rf.chtsz_b1we, asynchronously reset by !\HRSTn
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 9 outputs.

3.29.260.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.260.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        8
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.261. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19162, asynchronously reset by !\HRSTn
Extracted 14 gates and 27 wires to a netlist network with 12 inputs and 12 outputs.

3.29.261.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.261.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.262. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18957, asynchronously reset by !\HRSTn
Extracted 22 gates and 33 wires to a netlist network with 10 inputs and 5 outputs.

3.29.262.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.262.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.263. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18954, asynchronously reset by !\HRSTn
Extracted 20 gates and 38 wires to a netlist network with 18 inputs and 3 outputs.

3.29.263.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.263.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.264. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \de.ld_upk_cnt0, asynchronously reset by !\HRSTn
Extracted 83 gates and 145 wires to a netlist network with 61 inputs and 26 outputs.

3.29.264.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.264.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:       12
ABC RESULTS:               MUX cells:       38
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        9
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:       58
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       26
Removing temp directory.

3.29.265. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \de.de_mllp_we, asynchronously reset by !\HRSTn
Extracted 173 gates and 338 wires to a netlist network with 164 inputs and 95 outputs.

3.29.265.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.265.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:      154
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       79
ABC RESULTS:           input signals:      164
ABC RESULTS:          output signals:       95
Removing temp directory.

3.29.266. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19052, asynchronously reset by !\HRSTn
Extracted 22 gates and 33 wires to a netlist network with 10 inputs and 5 outputs.

3.29.266.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.266.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.267. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19049, asynchronously reset by !\HRSTn
Extracted 20 gates and 38 wires to a netlist network with 18 inputs and 3 outputs.

3.29.267.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.267.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.268. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ahb_mst1.hreadyini, asynchronously reset by !\HRSTn
Extracted 158 gates and 297 wires to a netlist network with 138 inputs and 24 outputs.

3.29.268.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.268.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       58
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               NOR cells:       32
ABC RESULTS:               NOT cells:       15
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:       30
ABC RESULTS:        internal signals:      135
ABC RESULTS:           input signals:      138
ABC RESULTS:          output signals:       24
Removing temp directory.

3.29.269. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$41692, asynchronously reset by !\HRSTn
Extracted 199 gates and 228 wires to a netlist network with 28 inputs and 14 outputs.

3.29.269.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.269.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       52
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:       54
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:       19
ABC RESULTS:        internal signals:      186
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.270. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ahb_mst1.mx_cmd, asynchronously reset by !\HRSTn
Extracted 93 gates and 146 wires to a netlist network with 53 inputs and 47 outputs.

3.29.270.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.270.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       33
ABC RESULTS:               BUF cells:       32
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       28
ABC RESULTS:        internal signals:       46
ABC RESULTS:           input signals:       53
ABC RESULTS:          output signals:       47
Removing temp directory.

3.29.271. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ahb_mst1.mx_idle2ns, asynchronously reset by !\HRSTn
Extracted 23 gates and 42 wires to a netlist network with 19 inputs and 11 outputs.

3.29.271.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.271.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.272. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18975, asynchronously reset by !\HRSTn
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 7 outputs.

3.29.272.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.272.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.273. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18972, asynchronously reset by !\HRSTn
Extracted 13 gates and 24 wires to a netlist network with 10 inputs and 12 outputs.

3.29.273.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.273.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.274. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19147, asynchronously reset by !\HRSTn
Extracted 23 gates and 35 wires to a netlist network with 11 inputs and 5 outputs.

3.29.274.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.274.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.275. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19144, asynchronously reset by !\HRSTn
Extracted 20 gates and 38 wires to a netlist network with 18 inputs and 3 outputs.

3.29.275.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.275.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.276. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19129, asynchronously reset by !\HRSTn
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 2 outputs.

3.29.276.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.276.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.277. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ahb_mst0.mx_cmd, asynchronously reset by !\HRSTn
Extracted 45 gates and 89 wires to a netlist network with 43 inputs and 36 outputs.

3.29.277.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.277.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:       58
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:        6
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       43
ABC RESULTS:          output signals:       36
Removing temp directory.

3.29.278. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \ahb_mst0.mx_idle2ns, asynchronously reset by !\HRSTn
Extracted 28 gates and 47 wires to a netlist network with 19 inputs and 12 outputs.

3.29.278.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.278.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.279. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18872, asynchronously reset by !\HRSTn
Extracted 66 gates and 119 wires to a netlist network with 52 inputs and 50 outputs.

3.29.279.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.279.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:       30
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       52
ABC RESULTS:          output signals:       50
Removing temp directory.

3.29.280. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18866, asynchronously reset by !\HRSTn
Extracted 19 gates and 32 wires to a netlist network with 13 inputs and 13 outputs.

3.29.280.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.280.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.281. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18863, asynchronously reset by !\HRSTn
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.29.281.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.281.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.282. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18901, asynchronously reset by !\HRSTn
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 4 outputs.

3.29.282.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.282.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.283. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$18884, asynchronously reset by !\HRSTn
Extracted 19 gates and 35 wires to a netlist network with 15 inputs and 16 outputs.

3.29.283.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.283.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        7
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        5
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       16
Removing temp directory.

yosys> abc -script abc_tmp.scr

3.30. Executing ABC pass (technology mapping using ABC).

3.30.1. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Extracted 8501 gates and 10831 wires to a netlist network with 2330 inputs and 886 outputs.

3.30.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/dma/abc_tmp.scr 
ABC:   #Luts =  2750  Max Lvl =  11  Avg Lvl =   3.17  [   0.34 sec. at Pass 0]
ABC:   #Luts =  2491  Max Lvl =  11  Avg Lvl =   3.43  [  15.77 sec. at Pass 1]
ABC:   #Luts =  2450  Max Lvl =  11  Avg Lvl =   3.20  [   3.89 sec. at Pass 2]
ABC:   #Luts =  2446  Max Lvl =  10  Avg Lvl =   3.06  [   4.82 sec. at Pass 3]
ABC:   #Luts =  2430  Max Lvl =  11  Avg Lvl =   3.10  [   3.15 sec. at Pass 4]
ABC:   #Luts =  2424  Max Lvl =  11  Avg Lvl =   3.14  [   5.69 sec. at Pass 5]
ABC:   #Luts =  2420  Max Lvl =   9  Avg Lvl =   3.07  [   3.56 sec. at Pass 6]
ABC:   #Luts =  2412  Max Lvl =   9  Avg Lvl =   3.00  [   5.31 sec. at Pass 7]
ABC:   #Luts =  2403  Max Lvl =   8  Avg Lvl =   2.99  [   3.24 sec. at Pass 8]
ABC:   #Luts =  2401  Max Lvl =  10  Avg Lvl =   3.04  [   4.88 sec. at Pass 9]
ABC:   #Luts =  2401  Max Lvl =   8  Avg Lvl =   3.01  [   3.90 sec. at Pass 10]
ABC:   #Luts =  2401  Max Lvl =   8  Avg Lvl =   3.01  [   5.32 sec. at Pass 11]
ABC:   #Luts =  2398  Max Lvl =   9  Avg Lvl =   3.03  [   3.51 sec. at Pass 12]
ABC:   #Luts =  2395  Max Lvl =   9  Avg Lvl =   3.04  [   5.08 sec. at Pass 13]
ABC:   #Luts =  2395  Max Lvl =   9  Avg Lvl =   3.04  [   3.60 sec. at Pass 14]
ABC:   #Luts =  2395  Max Lvl =   9  Avg Lvl =   3.04  [   5.65 sec. at Pass 15]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.30.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2390
ABC RESULTS:        internal signals:     7615
ABC RESULTS:           input signals:     2330
ABC RESULTS:          output signals:      886
Removing temp directory.

yosys> opt

3.31. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

yosys> opt_merge -nomux

3.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49672 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49671 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49668 ($_DFFE_PN0P_) from module dma_top (removing D path).
Removing always-active EN on $abc$53525$auto$blifparse.cc:362:parse_blif$53526 ($_DFFE_PN0P_) from module dma_top.
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49673 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49670 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49669 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49666 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51051 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51050 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51049 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51052 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49658 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51054 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49252 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51055 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51056 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49352 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49349 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49346 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49343 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49350 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49347 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49344 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49243 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49339 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49244 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling always-active async load on $auto$ff.cc:262:slice$33937 ($_DLATCH_P_) from module dma_top (changing to combinatorial circuit).
Handling always-active async load on $auto$ff.cc:262:slice$33936 ($_DLATCH_P_) from module dma_top (changing to combinatorial circuit).
Handling always-active async load on $auto$ff.cc:262:slice$33935 ($_DLATCH_P_) from module dma_top (changing to combinatorial circuit).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51058 ($_DFFE_PN0P_) from module dma_top (removing D path).
Removing always-active EN on $abc$53525$auto$blifparse.cc:362:parse_blif$53527 ($_DFFE_PN0P_) from module dma_top.
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49249 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49248 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49246 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49257 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51059 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49251 ($_DFFE_PN0P_) from module dma_top (removing D path).
Removing always-active EN on $abc$49086$auto$blifparse.cc:362:parse_blif$49088 ($_DFFE_PN0P_) from module dma_top.
Removing always-active EN on $abc$49086$auto$blifparse.cc:362:parse_blif$49087 ($_DFFE_PN0P_) from module dma_top.
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49341 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49342 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49338 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49340 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49337 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49665 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49664 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49663 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49662 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49661 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49660 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49659 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49256 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49255 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49254 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49245 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49345 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49348 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49336$auto$blifparse.cc:362:parse_blif$49351 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49253 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49242 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49247 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51053 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51064 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51063 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51062 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51061 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51060 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$51048$auto$blifparse.cc:362:parse_blif$51057 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49241$auto$blifparse.cc:362:parse_blif$49250 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $abc$49657$auto$blifparse.cc:362:parse_blif$49667 ($_DFFE_PN0P_) from module dma_top (removing D path).
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49667 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49250 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51057 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51060 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51061 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51062 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51063 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51064 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51053 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49247 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49242 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49253 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49351 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49348 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49345 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49245 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49254 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49255 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49256 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49659 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49660 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49661 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49662 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49663 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49664 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49665 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49337 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49340 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49338 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49342 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49341 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49251 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51059 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49257 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49246 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49248 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49249 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51058 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49244 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49339 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49243 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49344 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49347 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49350 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49343 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49346 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49349 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49336$auto$blifparse.cc:362:parse_blif$49352 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51056 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51055 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49241$auto$blifparse.cc:362:parse_blif$49252 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51054 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49658 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51052 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51049 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51050 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$51048$auto$blifparse.cc:362:parse_blif$51051 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49666 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49669 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49670 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49673 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49668 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49671 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $abc$49657$auto$blifparse.cc:362:parse_blif$49672 ($_DLATCH_N_) from module dma_top.

yosys> opt_clean

3.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 459 unused cells and 25459 unused wires.
<suppressed ~1190 debug messages>

yosys> opt_expr

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.31.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce

3.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.31.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.31.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce

3.31.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.31.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> opt_expr

3.31.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.31.23. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.32. Printing statistics.

=== dma_top ===

   Number of wires:               3940
   Number of wire bits:          13824
   Number of public wires:        1504
   Number of public wire bits:   11388
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3675
     $_DFFE_PN0N_                    1
     $_DFFE_PN0P_                 1632
     $_DFF_PN0_                     54
     $_DFF_P_                       20
     $lut                         1960
     $mux                            8


yosys> shregmap -minlen 8 -maxlen 20

3.33. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.35. Printing statistics.

=== dma_top ===

   Number of wires:               3940
   Number of wire bits:          13824
   Number of public wires:        1504
   Number of public wire bits:   11388
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3675
     $_DFFE_PN0N_                    1
     $_DFFE_PN0P_                 1632
     $_DFF_PN0_                     54
     $_DFF_P_                       20
     $lut                         1960
     $mux                            8


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFE_PN0N_ for cells of type $_DFFE_PN0N_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~3812 debug messages>

yosys> opt_expr -mux_undef

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~63440 debug messages>

yosys> simplemap

3.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~36378 debug messages>
Removed a total of 12126 cells.

yosys> opt_dff -nodffe -nosdff

3.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 21 unused cells and 12831 unused wires.
<suppressed ~22 debug messages>

yosys> opt -nodffe -nosdff

3.43. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~4008 debug messages>

yosys> opt_merge -nomux

3.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 0 unused cells and 562 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.43.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.43.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.43.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> opt_expr

3.43.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.43.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.44. Executing ABC pass (technology mapping using ABC).

3.44.1. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Extracted 8151 gates and 10333 wires to a netlist network with 2180 inputs and 658 outputs.

3.44.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/dma/abc_tmp.scr 
ABC:   #Luts =  1903  Max Lvl =  10  Avg Lvl =   3.51  [   0.28 sec. at Pass 0]
ABC:   #Luts =  1834  Max Lvl =  10  Avg Lvl =   3.55  [  11.54 sec. at Pass 1]
ABC:   #Luts =  1805  Max Lvl =   9  Avg Lvl =   3.44  [   2.47 sec. at Pass 2]
ABC:   #Luts =  1798  Max Lvl =   9  Avg Lvl =   3.26  [   4.67 sec. at Pass 3]
ABC:   #Luts =  1794  Max Lvl =   9  Avg Lvl =   3.45  [   3.17 sec. at Pass 4]
ABC:   #Luts =  1794  Max Lvl =   9  Avg Lvl =   3.45  [   4.81 sec. at Pass 5]
ABC:   #Luts =  1784  Max Lvl =   9  Avg Lvl =   3.38  [   3.22 sec. at Pass 6]
ABC:   #Luts =  1784  Max Lvl =   9  Avg Lvl =   3.38  [   4.81 sec. at Pass 7]
ABC:   #Luts =  1784  Max Lvl =   9  Avg Lvl =   3.38  [   3.33 sec. at Pass 8]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1784
ABC RESULTS:        internal signals:     7495
ABC RESULTS:           input signals:     2180
ABC RESULTS:          output signals:      658
Removing temp directory.

yosys> opt

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 0 unused cells and 9222 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \dma_top

3.46.2. Analyzing design hierarchy..
Top module:  \dma_top
Removed 0 unused modules.

yosys> stat

3.47. Printing statistics.

=== dma_top ===

   Number of wires:               3766
   Number of wire bits:          13643
   Number of public wires:        1502
   Number of public wire bits:   11379
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3491
     $lut                         1784
     dffsre                       1707


yosys> opt_clean -purge

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 0 unused cells and 1084 unused wires.
<suppressed ~1084 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.49. Executing Verilog backend.

yosys> bmuxmap

3.49.1. Executing BMUXMAP pass.

yosys> demuxmap

3.49.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\dma_top'.

Warnings: 17 unique messages, 32 total
End of script. Logfile hash: 27c988d5d6, CPU: user 73.03s system 2.01s, MEM: 202.31 MB peak
Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)
Time spent: 96% 3x abc (1459 sec), 1% 28x opt_dff (22 sec), ...
real 220.63
user 1387.98
sys 132.09
