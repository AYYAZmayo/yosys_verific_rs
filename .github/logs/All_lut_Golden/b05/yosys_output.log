
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b05.vhd

yosys> verific -vhdl b05.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b05.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b05.vhd:1: analyzing entity 'b05'
VERIFIC-INFO [VHDL-1010] b05.vhd:12: analyzing architecture 'behav'

yosys> synth_rs -top b05 -tech genesis -goal area -no_dsp -no_bram -verilog b05.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b05

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b05.vhd:1: processing 'b05(BEHAV)'
VERIFIC-WARNING [VHDL-1840] b05.vhd:242: latch inferred for net 'TN[8]'
Importing module standard.
Importing module b05.

3.3.1. Analyzing design hierarchy..
Top module:  \b05

3.3.2. Analyzing design hierarchy..
Top module:  \b05
Removing unused module `\standard'.
Removed 1 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~26 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 5 unused cells and 54 unused wires.
<suppressed ~28 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b05...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $verific$i361$b05.vhd:284$348: \FLAG -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
  Optimizing cells in module \b05.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$EN_DISP_reg$b05.vhd:308$374 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$TEMP_reg$b05.vhd:308$377 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$STATO_reg$b05.vhd:308$372 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$RES_DISP_reg$b05.vhd:308$373 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$NUM_reg$b05.vhd:308$375 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$MAX_reg$b05.vhd:308$378 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$MAR_reg$b05.vhd:308$376 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$FLAG_reg$b05.vhd:308$379 ($aldff) from module b05.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 10) from port Y of cell b05.$verific$sub_4$b05.vhd:60$183 ($sub).
Removed top 1 bits (of 10) from port A of cell b05.$verific$sub_4$b05.vhd:60$183 ($sub).
Removed top 1 bits (of 10) from port B of cell b05.$verific$sub_4$b05.vhd:60$183 ($sub).
Removed top 1 bits (of 9) from port A of cell b05.$verific$LessThan_6$b05.vhd:61$186 ($lt).
Removed top 1 bits (of 10) from port Y of cell b05.$verific$sub_19$b05.vhd:73$194 ($sub).
Removed top 1 bits (of 10) from port A of cell b05.$verific$sub_19$b05.vhd:73$194 ($sub).
Removed top 1 bits (of 10) from port B of cell b05.$verific$sub_19$b05.vhd:73$194 ($sub).
Removed top 1 bits (of 9) from port A of cell b05.$verific$LessThan_21$b05.vhd:74$197 ($lt).
Removed top 1 bits (of 9) from port A of cell b05.$verific$LessThan_39$b05.vhd:101$209 ($lt).
Removed top 1 bits (of 6) from port A of cell b05.$verific$unary_minus_41$b05.vhd:103$210 ($neg).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_47$b05.vhd:108$220 ($lt).
Removed top 1 bits (of 8) from port B of cell b05.$verific$sub_49$b05.vhd:110$221 ($sub).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_52$b05.vhd:113$224 ($mux).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_54$b05.vhd:114$226 ($lt).
Removed top 2 bits (of 9) from port B of cell b05.$verific$sub_56$b05.vhd:116$228 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_58$b05.vhd:118$230 ($lt).
Removed top 2 bits (of 9) from port B of cell b05.$verific$sub_60$b05.vhd:120$232 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_62$b05.vhd:122$234 ($lt).
Removed top 2 bits (of 9) from port B of cell b05.$verific$sub_64$b05.vhd:124$236 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_66$b05.vhd:126$238 ($lt).
Removed top 3 bits (of 9) from port B of cell b05.$verific$sub_68$b05.vhd:128$240 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_70$b05.vhd:130$242 ($lt).
Removed top 3 bits (of 9) from port B of cell b05.$verific$sub_72$b05.vhd:132$244 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_74$b05.vhd:134$246 ($lt).
Removed top 3 bits (of 9) from port B of cell b05.$verific$sub_76$b05.vhd:136$248 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_78$b05.vhd:138$250 ($lt).
Removed top 4 bits (of 9) from port B of cell b05.$verific$sub_80$b05.vhd:140$252 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_82$b05.vhd:142$254 ($lt).
Removed top 4 bits (of 9) from port B of cell b05.$verific$sub_84$b05.vhd:144$256 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_86$b05.vhd:146$258 ($lt).
Removed top 5 bits (of 9) from port B of cell b05.$verific$sub_88$b05.vhd:148$259 ($sub).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_91$b05.vhd:151$261 ($mux).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_109$b05.vhd:160$279 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_111$b05.vhd:163$280 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_113$b05.vhd:166$281 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_115$b05.vhd:169$282 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_117$b05.vhd:172$283 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_119$b05.vhd:175$284 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_121$b05.vhd:178$285 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_123$b05.vhd:181$286 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_125$b05.vhd:184$287 ($lt).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_128$b05.vhd:188$288 ($mux).
Removed top 1 bits (of 5) from port A of cell b05.$verific$LessThan_137$b05.vhd:197$297 ($lt).
Removed top 1 bits (of 6) from port A of cell b05.$verific$sub_139$b05.vhd:199$298 ($sub).
Removed top 2 bits (of 6) from port B of cell b05.$verific$sub_139$b05.vhd:199$298 ($sub).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_142$b05.vhd:202$299 ($mux).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_144$b05.vhd:203$301 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_146$b05.vhd:206$302 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_148$b05.vhd:209$303 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_150$b05.vhd:212$304 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_152$b05.vhd:215$305 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_154$b05.vhd:218$306 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_156$b05.vhd:221$307 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_158$b05.vhd:224$308 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_160$b05.vhd:227$309 ($lt).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_163$b05.vhd:231$311 ($mux).
Removed top 4 bits (of 5) from port B of cell b05.$verific$add_358$b05.vhd:283$345 ($add).
Removed top 1 bits (of 6) from port Y of cell b05.$verific$add_358$b05.vhd:283$345 ($add).
Removed top 4 bits (of 5) from port B of cell b05.$verific$add_376$b05.vhd:304$358 ($add).
Removed top 1 bits (of 6) from port Y of cell b05.$verific$add_376$b05.vhd:304$358 ($add).
Removed top 1 bits (of 2) from wire b05.$verific$n1549$157.
Removed top 1 bits (of 7) from wire b05.$verific$n239$78.
Removed top 1 bits (of 7) from wire b05.$verific$n525$108.
Removed top 1 bits (of 7) from wire b05.$verific$n776$126.
Removed top 1 bits (of 7) from wire b05.$verific$n879$137.
Removed top 1 bits (of 7) from wire b05.$verific$n983$139.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> techmap

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.18.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $bmux.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $mux.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=5:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=5:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=5:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=6:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=6:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=6:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=6:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=6:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=6:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=6:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $not.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using template $paramod$9f3f81d189a6b1d5c738a580270bbb92e45c5c71\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$befd47b1c77b68561d11d0cb61a0fae29b79f34c\_90_alu for cells of type $alu.
Using template $paramod$22b95c1bfeece9a7c6bf4fcd9399e4ee87091e97\_90_alu for cells of type $alu.
Using template $paramod$5d7bf89bead63599a0c4fbe7617ae2af1a7c16a5\_90_alu for cells of type $alu.
Using template $paramod$3fe4bdf8d597404bdd222c1fea42f692fdc77de4\_90_alu for cells of type $alu.
Using template $paramod$8f00ca5ffae7aacb4fd127c662dabcdb3ad72531\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using template $paramod$ebede46804337da78e06a77b9ffdc3717e8d42eb\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~3135 debug messages>

yosys> alumacc

3.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b05:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.20. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~3011 debug messages>

yosys> opt_merge -nomux

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~3120 debug messages>
Removed a total of 1040 cells.

yosys> opt_muxtree

3.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 422 unused cells and 2575 unused wires.
<suppressed ~425 debug messages>

yosys> opt_expr

3.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~18 debug messages>

3.20.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$2119 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1930 [3], Q = \NUM [3]).
Adding EN signal on $auto$ff.cc:262:slice$2117 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1930 [1], Q = \NUM [1]).
Adding EN signal on $auto$ff.cc:262:slice$2118 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1930 [2], Q = \NUM [2]).
Adding EN signal on $auto$ff.cc:262:slice$2116 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1930 [0], Q = \NUM [0]).
Adding EN signal on $auto$ff.cc:262:slice$2128 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2101 [2], Q = \TEMP [2]).
Adding EN signal on $auto$ff.cc:262:slice$2127 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2101 [1], Q = \TEMP [1]).
Adding EN signal on $auto$ff.cc:262:slice$2126 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2101 [0], Q = \TEMP [0]).
Adding EN signal on $auto$ff.cc:262:slice$2125 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [4], Q = \MAR [4]).
Adding EN signal on $auto$ff.cc:262:slice$2124 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [3], Q = \MAR [3]).
Adding EN signal on $auto$ff.cc:262:slice$2123 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [2], Q = \MAR [2]).
Adding EN signal on $auto$ff.cc:262:slice$2122 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [1], Q = \MAR [1]).
Adding EN signal on $auto$ff.cc:262:slice$2121 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [0], Q = \MAR [0]).
Adding EN signal on $auto$ff.cc:262:slice$2120 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1930 [4], Q = \NUM [4]).
Adding EN signal on $auto$ff.cc:262:slice$2114 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1862, Q = \RES_DISP).
Adding EN signal on $auto$ff.cc:262:slice$2115 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1872, Q = \EN_DISP).
Adding EN signal on $auto$ff.cc:262:slice$2144 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1977, Q = \FLAG).
Adding EN signal on $auto$ff.cc:262:slice$2143 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2035 [8], Q = \MAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$2142 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2035 [7], Q = \MAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$2141 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2035 [6], Q = \MAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$2140 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2035 [5], Q = \MAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$2139 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2035 [4], Q = \MAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$2138 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2035 [3], Q = \MAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$2137 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2035 [2], Q = \MAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$2136 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2035 [1], Q = \MAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$2135 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2035 [0], Q = \MAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$2134 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2101 [8], Q = \TEMP [8]).
Adding EN signal on $auto$ff.cc:262:slice$2133 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2101 [7], Q = \TEMP [7]).
Adding EN signal on $auto$ff.cc:262:slice$2132 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2101 [6], Q = \TEMP [6]).
Adding EN signal on $auto$ff.cc:262:slice$2131 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2101 [5], Q = \TEMP [5]).
Adding EN signal on $auto$ff.cc:262:slice$2130 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2101 [4], Q = \TEMP [4]).
Adding EN signal on $auto$ff.cc:262:slice$2129 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2101 [3], Q = \TEMP [3]).

yosys> opt_clean

3.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 158 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~478 debug messages>

3.20.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~1632 debug messages>
Removed a total of 544 cells.

yosys> opt_dff

3.20.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 561 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.20.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.20.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.20.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.20.30. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> stat

3.23. Printing statistics.

=== b05 ===

   Number of wires:                511
   Number of wire bits:           1937
   Number of public wires:          21
   Number of public wire bits:      98
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1130
     $_AND_                        283
     $_DFFE_PP0P_                   31
     $_DFF_PP0_                      3
     $_MUX_                        440
     $_NOT_                        100
     $_OR_                         188
     $_XOR_                         85


yosys> shregmap -minlen 8 -maxlen 20

3.24. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.25. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.26. Printing statistics.

=== b05 ===

   Number of wires:                511
   Number of wire bits:           1937
   Number of public wires:          21
   Number of public wire bits:      98
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1130
     $_AND_                        283
     $_DFFE_PP0P_                   31
     $_DFF_PP0_                      3
     $_MUX_                        440
     $_NOT_                        100
     $_OR_                         188
     $_XOR_                         85


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.27. Executing TECHMAP pass (map to technology primitives).

3.27.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.27.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.27.3. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~196 debug messages>

yosys> opt_expr -mux_undef

3.28. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~126 debug messages>

yosys> simplemap

3.29. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge

3.31. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~99 debug messages>
Removed a total of 33 cells.

yosys> opt_dff -nodffe -nosdff

3.32. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 227 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.34.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~76 debug messages>

yosys> opt_merge

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.35.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

3.35.5. Finished fast OPT passes.

yosys> memory_map

3.36. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.37. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.37.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.37.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.37.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_share

3.37.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.37.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr -full

3.37.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.37.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.38. Executing TECHMAP pass (map to technology primitives).

3.38.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.38.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.39.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.40. Executing ABC pass (technology mapping using ABC).

3.40.1. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Extracted 970 gates and 1008 wires to a netlist network with 36 inputs and 57 outputs.

3.40.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/yosys_verific_rs/result_18-03-2022T17-26-14/All_lut_synth_rs_area.json/b05/abc_tmp.scr 
ABC: netlist  : i/o =     36/     57  and =     594  lev =   30 (7.54)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     79  edge =     357  lev =    7 (1.88)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     618  lev =   30 (7.28)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     348  lev =    7 (1.79)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     616  lev =   30 (7.30)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     74  edge =     349  lev =    7 (1.79)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     585  lev =   30 (6.96)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     348  lev =    6 (1.77)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     617  lev =   30 (7.28)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     349  lev =    6 (1.79)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     618  lev =   30 (7.30)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     348  lev =    6 (1.77)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     618  lev =   30 (7.30)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     348  lev =    6 (1.77)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     618  lev =   30 (7.30)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     348  lev =    6 (1.77)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     603  lev =   26 (6.37)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     347  lev =    6 (1.79)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     614  lev =   30 (7.28)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     347  lev =    6 (1.79)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     612  lev =   30 (7.30)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     347  lev =    6 (1.79)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     610  lev =   30 (7.25)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     347  lev =    6 (1.79)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     612  lev =   30 (7.25)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     347  lev =    6 (1.79)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     585  lev =   30 (6.96)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     348  lev =    6 (1.77)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     585  lev =   30 (6.96)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     348  lev =    6 (1.77)  mem = 0.00 MB
ABC: netlist  : i/o =     36/     57  and =     618  lev =   30 (7.30)  mem = 0.01 MB
ABC: Mapping (K=6)  :  lut =     73  edge =     348  lev =    6 (1.77)  mem = 0.00 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       75
ABC RESULTS:        internal signals:      915
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       57
Removing temp directory.

yosys> opt

3.41. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.41.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.41.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 535 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.41.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.41.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.41.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.41.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.41.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.41.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.42. Executing HIERARCHY pass (managing design hierarchy).

3.42.1. Analyzing design hierarchy..
Top module:  \b05

3.42.2. Analyzing design hierarchy..
Top module:  \b05
Removed 0 unused modules.

yosys> stat

3.43. Printing statistics.

=== b05 ===

   Number of wires:                 61
   Number of wire bits:            138
   Number of public wires:          19
   Number of public wire bits:      88
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                108
     $lut                           74
     dffsre                         34


yosys> opt_clean -purge

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> write_verilog -noattr -nohex b05.verilog

3.45. Executing Verilog backend.

yosys> bmuxmap

3.45.1. Executing BMUXMAP pass.

yosys> demuxmap

3.45.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b05'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 6ffb1f91ac, CPU: user 2.77s system 0.05s, MEM: 43.30 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 34% 1x abc (1 sec), 25% 32x opt_expr (1 sec), ...
real 4.29
user 3.95
sys 0.34
