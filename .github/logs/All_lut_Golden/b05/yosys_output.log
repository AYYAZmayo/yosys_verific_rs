
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b05.vhd

yosys> verific -vhdl b05.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b05.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b05.vhd:1: analyzing entity 'b05'
VERIFIC-INFO [VHDL-1010] b05.vhd:12: analyzing architecture 'behav'

yosys> synth_rs -top b05 -tech genesis -goal area -de -no_dsp -no_bram -verilog b05.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b05

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b05.vhd:1: processing 'b05(BEHAV)'
VERIFIC-WARNING [VHDL-1840] b05.vhd:242: latch inferred for net 'TN[8]'
Importing module b05.
Importing module standard.

3.3.1. Analyzing design hierarchy..
Top module:  \b05

3.3.2. Analyzing design hierarchy..
Top module:  \b05
Removing unused module `\standard'.
Removed 1 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~26 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 5 unused cells and 54 unused wires.
<suppressed ~28 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b05...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $verific$i361$b05.vhd:284$340: \FLAG -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
  Optimizing cells in module \b05.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$EN_DISP_reg$b05.vhd:308$366 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$TEMP_reg$b05.vhd:308$369 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$STATO_reg$b05.vhd:308$364 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$RES_DISP_reg$b05.vhd:308$365 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$NUM_reg$b05.vhd:308$367 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$MAX_reg$b05.vhd:308$370 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$MAR_reg$b05.vhd:308$368 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$FLAG_reg$b05.vhd:308$371 ($aldff) from module b05.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 10) from port Y of cell b05.$verific$sub_4$b05.vhd:60$175 ($sub).
Removed top 1 bits (of 10) from port A of cell b05.$verific$sub_4$b05.vhd:60$175 ($sub).
Removed top 1 bits (of 10) from port B of cell b05.$verific$sub_4$b05.vhd:60$175 ($sub).
Removed top 1 bits (of 9) from port A of cell b05.$verific$LessThan_6$b05.vhd:61$178 ($lt).
Removed top 1 bits (of 10) from port Y of cell b05.$verific$sub_19$b05.vhd:73$186 ($sub).
Removed top 1 bits (of 10) from port A of cell b05.$verific$sub_19$b05.vhd:73$186 ($sub).
Removed top 1 bits (of 10) from port B of cell b05.$verific$sub_19$b05.vhd:73$186 ($sub).
Removed top 1 bits (of 9) from port A of cell b05.$verific$LessThan_21$b05.vhd:74$189 ($lt).
Removed top 1 bits (of 9) from port A of cell b05.$verific$LessThan_39$b05.vhd:101$201 ($lt).
Removed top 1 bits (of 6) from port A of cell b05.$verific$unary_minus_41$b05.vhd:103$202 ($neg).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_47$b05.vhd:108$212 ($lt).
Removed top 1 bits (of 8) from port B of cell b05.$verific$sub_49$b05.vhd:110$213 ($sub).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_52$b05.vhd:113$216 ($mux).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_54$b05.vhd:114$218 ($lt).
Removed top 2 bits (of 9) from port B of cell b05.$verific$sub_56$b05.vhd:116$220 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_58$b05.vhd:118$222 ($lt).
Removed top 2 bits (of 9) from port B of cell b05.$verific$sub_60$b05.vhd:120$224 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_62$b05.vhd:122$226 ($lt).
Removed top 2 bits (of 9) from port B of cell b05.$verific$sub_64$b05.vhd:124$228 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_66$b05.vhd:126$230 ($lt).
Removed top 3 bits (of 9) from port B of cell b05.$verific$sub_68$b05.vhd:128$232 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_70$b05.vhd:130$234 ($lt).
Removed top 3 bits (of 9) from port B of cell b05.$verific$sub_72$b05.vhd:132$236 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_74$b05.vhd:134$238 ($lt).
Removed top 3 bits (of 9) from port B of cell b05.$verific$sub_76$b05.vhd:136$240 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_78$b05.vhd:138$242 ($lt).
Removed top 4 bits (of 9) from port B of cell b05.$verific$sub_80$b05.vhd:140$244 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_82$b05.vhd:142$246 ($lt).
Removed top 4 bits (of 9) from port B of cell b05.$verific$sub_84$b05.vhd:144$248 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_86$b05.vhd:146$250 ($lt).
Removed top 5 bits (of 9) from port B of cell b05.$verific$sub_88$b05.vhd:148$251 ($sub).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_91$b05.vhd:151$253 ($mux).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_109$b05.vhd:160$271 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_111$b05.vhd:163$272 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_113$b05.vhd:166$273 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_115$b05.vhd:169$274 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_117$b05.vhd:172$275 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_119$b05.vhd:175$276 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_121$b05.vhd:178$277 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_123$b05.vhd:181$278 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_125$b05.vhd:184$279 ($lt).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_128$b05.vhd:188$280 ($mux).
Removed top 1 bits (of 5) from port A of cell b05.$verific$LessThan_137$b05.vhd:197$289 ($lt).
Removed top 1 bits (of 6) from port A of cell b05.$verific$sub_139$b05.vhd:199$290 ($sub).
Removed top 2 bits (of 6) from port B of cell b05.$verific$sub_139$b05.vhd:199$290 ($sub).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_142$b05.vhd:202$291 ($mux).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_144$b05.vhd:203$293 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_146$b05.vhd:206$294 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_148$b05.vhd:209$295 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_150$b05.vhd:212$296 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_152$b05.vhd:215$297 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_154$b05.vhd:218$298 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_156$b05.vhd:221$299 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_158$b05.vhd:224$300 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_160$b05.vhd:227$301 ($lt).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_163$b05.vhd:231$303 ($mux).
Removed top 4 bits (of 5) from port B of cell b05.$verific$add_358$b05.vhd:283$337 ($add).
Removed top 1 bits (of 6) from port Y of cell b05.$verific$add_358$b05.vhd:283$337 ($add).
Removed top 4 bits (of 5) from port B of cell b05.$verific$add_376$b05.vhd:304$350 ($add).
Removed top 1 bits (of 6) from port Y of cell b05.$verific$add_376$b05.vhd:304$350 ($add).
Removed top 1 bits (of 2) from wire b05.$verific$n1549$149.
Removed top 1 bits (of 7) from wire b05.$verific$n239$70.
Removed top 1 bits (of 7) from wire b05.$verific$n525$100.
Removed top 1 bits (of 7) from wire b05.$verific$n776$118.
Removed top 1 bits (of 7) from wire b05.$verific$n879$129.
Removed top 1 bits (of 7) from wire b05.$verific$n983$131.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b05:
  creating $macc model for $verific$add_358$b05.vhd:283$337 ($add).
  creating $macc model for $verific$add_376$b05.vhd:304$350 ($add).
  creating $macc model for $verific$sub_139$b05.vhd:199$290 ($sub).
  creating $macc model for $verific$sub_19$b05.vhd:73$186 ($sub).
  creating $macc model for $verific$sub_4$b05.vhd:60$175 ($sub).
  creating $macc model for $verific$sub_49$b05.vhd:110$213 ($sub).
  creating $macc model for $verific$sub_56$b05.vhd:116$220 ($sub).
  creating $macc model for $verific$sub_60$b05.vhd:120$224 ($sub).
  creating $macc model for $verific$sub_64$b05.vhd:124$228 ($sub).
  creating $macc model for $verific$sub_68$b05.vhd:128$232 ($sub).
  creating $macc model for $verific$sub_72$b05.vhd:132$236 ($sub).
  creating $macc model for $verific$sub_76$b05.vhd:136$240 ($sub).
  creating $macc model for $verific$sub_80$b05.vhd:140$244 ($sub).
  creating $macc model for $verific$sub_84$b05.vhd:144$248 ($sub).
  creating $macc model for $verific$sub_88$b05.vhd:148$251 ($sub).
  creating $macc model for $verific$unary_minus_41$b05.vhd:103$202 ($neg).
  creating $alu model for $macc $verific$unary_minus_41$b05.vhd:103$202.
  creating $alu model for $macc $verific$sub_88$b05.vhd:148$251.
  creating $alu model for $macc $verific$sub_84$b05.vhd:144$248.
  creating $alu model for $macc $verific$sub_80$b05.vhd:140$244.
  creating $alu model for $macc $verific$sub_76$b05.vhd:136$240.
  creating $alu model for $macc $verific$sub_72$b05.vhd:132$236.
  creating $alu model for $macc $verific$sub_68$b05.vhd:128$232.
  creating $alu model for $macc $verific$sub_64$b05.vhd:124$228.
  creating $alu model for $macc $verific$sub_60$b05.vhd:120$224.
  creating $alu model for $macc $verific$sub_56$b05.vhd:116$220.
  creating $alu model for $macc $verific$sub_49$b05.vhd:110$213.
  creating $alu model for $macc $verific$sub_4$b05.vhd:60$175.
  creating $alu model for $macc $verific$sub_19$b05.vhd:73$186.
  creating $alu model for $macc $verific$sub_139$b05.vhd:199$290.
  creating $alu model for $macc $verific$add_376$b05.vhd:304$350.
  creating $alu model for $macc $verific$add_358$b05.vhd:283$337.
  creating $alu model for $verific$LessThan_109$b05.vhd:160$271 ($lt): new $alu
  creating $alu model for $verific$LessThan_111$b05.vhd:163$272 ($lt): new $alu
  creating $alu model for $verific$LessThan_113$b05.vhd:166$273 ($lt): new $alu
  creating $alu model for $verific$LessThan_115$b05.vhd:169$274 ($lt): new $alu
  creating $alu model for $verific$LessThan_117$b05.vhd:172$275 ($lt): new $alu
  creating $alu model for $verific$LessThan_119$b05.vhd:175$276 ($lt): new $alu
  creating $alu model for $verific$LessThan_121$b05.vhd:178$277 ($lt): new $alu
  creating $alu model for $verific$LessThan_123$b05.vhd:181$278 ($lt): new $alu
  creating $alu model for $verific$LessThan_125$b05.vhd:184$279 ($lt): new $alu
  creating $alu model for $verific$LessThan_137$b05.vhd:197$289 ($lt): new $alu
  creating $alu model for $verific$LessThan_144$b05.vhd:203$293 ($lt): new $alu
  creating $alu model for $verific$LessThan_146$b05.vhd:206$294 ($lt): new $alu
  creating $alu model for $verific$LessThan_148$b05.vhd:209$295 ($lt): new $alu
  creating $alu model for $verific$LessThan_150$b05.vhd:212$296 ($lt): new $alu
  creating $alu model for $verific$LessThan_152$b05.vhd:215$297 ($lt): new $alu
  creating $alu model for $verific$LessThan_154$b05.vhd:218$298 ($lt): new $alu
  creating $alu model for $verific$LessThan_156$b05.vhd:221$299 ($lt): new $alu
  creating $alu model for $verific$LessThan_158$b05.vhd:224$300 ($lt): new $alu
  creating $alu model for $verific$LessThan_160$b05.vhd:227$301 ($lt): new $alu
  creating $alu model for $verific$LessThan_21$b05.vhd:74$189 ($lt): new $alu
  creating $alu model for $verific$LessThan_39$b05.vhd:101$201 ($lt): new $alu
  creating $alu model for $verific$LessThan_47$b05.vhd:108$212 ($lt): new $alu
  creating $alu model for $verific$LessThan_54$b05.vhd:114$218 ($lt): new $alu
  creating $alu model for $verific$LessThan_58$b05.vhd:118$222 ($lt): new $alu
  creating $alu model for $verific$LessThan_6$b05.vhd:61$178 ($lt): new $alu
  creating $alu model for $verific$LessThan_62$b05.vhd:122$226 ($lt): new $alu
  creating $alu model for $verific$LessThan_66$b05.vhd:126$230 ($lt): new $alu
  creating $alu model for $verific$LessThan_70$b05.vhd:130$234 ($lt): new $alu
  creating $alu model for $verific$LessThan_74$b05.vhd:134$238 ($lt): new $alu
  creating $alu model for $verific$LessThan_78$b05.vhd:138$242 ($lt): new $alu
  creating $alu model for $verific$LessThan_82$b05.vhd:142$246 ($lt): new $alu
  creating $alu model for $verific$LessThan_86$b05.vhd:146$250 ($lt): new $alu
  creating $alu cell for $verific$LessThan_86$b05.vhd:146$250: $auto$alumacc.cc:485:replace_alu$418
  creating $alu cell for $verific$LessThan_82$b05.vhd:142$246: $auto$alumacc.cc:485:replace_alu$429
  creating $alu cell for $verific$LessThan_78$b05.vhd:138$242: $auto$alumacc.cc:485:replace_alu$440
  creating $alu cell for $verific$LessThan_74$b05.vhd:134$238: $auto$alumacc.cc:485:replace_alu$451
  creating $alu cell for $verific$LessThan_70$b05.vhd:130$234: $auto$alumacc.cc:485:replace_alu$462
  creating $alu cell for $verific$LessThan_66$b05.vhd:126$230: $auto$alumacc.cc:485:replace_alu$473
  creating $alu cell for $verific$LessThan_62$b05.vhd:122$226: $auto$alumacc.cc:485:replace_alu$484
  creating $alu cell for $verific$LessThan_6$b05.vhd:61$178: $auto$alumacc.cc:485:replace_alu$495
  creating $alu cell for $verific$LessThan_58$b05.vhd:118$222: $auto$alumacc.cc:485:replace_alu$500
  creating $alu cell for $verific$LessThan_54$b05.vhd:114$218: $auto$alumacc.cc:485:replace_alu$511
  creating $alu cell for $verific$LessThan_47$b05.vhd:108$212: $auto$alumacc.cc:485:replace_alu$522
  creating $alu cell for $verific$LessThan_39$b05.vhd:101$201: $auto$alumacc.cc:485:replace_alu$533
  creating $alu cell for $verific$LessThan_21$b05.vhd:74$189: $auto$alumacc.cc:485:replace_alu$538
  creating $alu cell for $verific$LessThan_160$b05.vhd:227$301: $auto$alumacc.cc:485:replace_alu$543
  creating $alu cell for $verific$LessThan_158$b05.vhd:224$300: $auto$alumacc.cc:485:replace_alu$554
  creating $alu cell for $verific$LessThan_156$b05.vhd:221$299: $auto$alumacc.cc:485:replace_alu$565
  creating $alu cell for $verific$LessThan_154$b05.vhd:218$298: $auto$alumacc.cc:485:replace_alu$576
  creating $alu cell for $verific$LessThan_152$b05.vhd:215$297: $auto$alumacc.cc:485:replace_alu$587
  creating $alu cell for $verific$LessThan_150$b05.vhd:212$296: $auto$alumacc.cc:485:replace_alu$598
  creating $alu cell for $verific$LessThan_148$b05.vhd:209$295: $auto$alumacc.cc:485:replace_alu$609
  creating $alu cell for $verific$LessThan_146$b05.vhd:206$294: $auto$alumacc.cc:485:replace_alu$620
  creating $alu cell for $verific$LessThan_144$b05.vhd:203$293: $auto$alumacc.cc:485:replace_alu$631
  creating $alu cell for $verific$LessThan_137$b05.vhd:197$289: $auto$alumacc.cc:485:replace_alu$642
  creating $alu cell for $verific$LessThan_125$b05.vhd:184$279: $auto$alumacc.cc:485:replace_alu$647
  creating $alu cell for $verific$LessThan_123$b05.vhd:181$278: $auto$alumacc.cc:485:replace_alu$658
  creating $alu cell for $verific$LessThan_121$b05.vhd:178$277: $auto$alumacc.cc:485:replace_alu$669
  creating $alu cell for $verific$LessThan_119$b05.vhd:175$276: $auto$alumacc.cc:485:replace_alu$680
  creating $alu cell for $verific$LessThan_117$b05.vhd:172$275: $auto$alumacc.cc:485:replace_alu$691
  creating $alu cell for $verific$LessThan_115$b05.vhd:169$274: $auto$alumacc.cc:485:replace_alu$702
  creating $alu cell for $verific$LessThan_113$b05.vhd:166$273: $auto$alumacc.cc:485:replace_alu$713
  creating $alu cell for $verific$LessThan_111$b05.vhd:163$272: $auto$alumacc.cc:485:replace_alu$724
  creating $alu cell for $verific$LessThan_109$b05.vhd:160$271: $auto$alumacc.cc:485:replace_alu$735
  creating $alu cell for $verific$add_358$b05.vhd:283$337: $auto$alumacc.cc:485:replace_alu$746
  creating $alu cell for $verific$add_376$b05.vhd:304$350: $auto$alumacc.cc:485:replace_alu$749
  creating $alu cell for $verific$sub_139$b05.vhd:199$290: $auto$alumacc.cc:485:replace_alu$752
  creating $alu cell for $verific$sub_19$b05.vhd:73$186: $auto$alumacc.cc:485:replace_alu$755
  creating $alu cell for $verific$sub_4$b05.vhd:60$175: $auto$alumacc.cc:485:replace_alu$758
  creating $alu cell for $verific$sub_49$b05.vhd:110$213: $auto$alumacc.cc:485:replace_alu$761
  creating $alu cell for $verific$sub_56$b05.vhd:116$220: $auto$alumacc.cc:485:replace_alu$764
  creating $alu cell for $verific$sub_60$b05.vhd:120$224: $auto$alumacc.cc:485:replace_alu$767
  creating $alu cell for $verific$sub_64$b05.vhd:124$228: $auto$alumacc.cc:485:replace_alu$770
  creating $alu cell for $verific$sub_68$b05.vhd:128$232: $auto$alumacc.cc:485:replace_alu$773
  creating $alu cell for $verific$sub_72$b05.vhd:132$236: $auto$alumacc.cc:485:replace_alu$776
  creating $alu cell for $verific$sub_76$b05.vhd:136$240: $auto$alumacc.cc:485:replace_alu$779
  creating $alu cell for $verific$sub_80$b05.vhd:140$244: $auto$alumacc.cc:485:replace_alu$782
  creating $alu cell for $verific$sub_84$b05.vhd:144$248: $auto$alumacc.cc:485:replace_alu$785
  creating $alu cell for $verific$sub_88$b05.vhd:148$251: $auto$alumacc.cc:485:replace_alu$788
  creating $alu cell for $verific$unary_minus_41$b05.vhd:103$202: $auto$alumacc.cc:485:replace_alu$791
  created 48 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~49 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $verific$i17$b05.vhd:72$184.
    dead port 2/2 on $mux $verific$i17$b05.vhd:72$184.
    dead port 1/2 on $mux $verific$i25$b05.vhd:78$190.
    dead port 2/2 on $mux $verific$i25$b05.vhd:78$190.
Removed 4 multiplexer ports.
<suppressed ~22 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 32 unused cells and 66 unused wires.
<suppressed ~35 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> techmap

3.22. Executing TECHMAP pass (map to technology primitives).

3.22.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.22.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$befd47b1c77b68561d11d0cb61a0fae29b79f34c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using template $paramod$22b95c1bfeece9a7c6bf4fcd9399e4ee87091e97\_90_alu for cells of type $alu.
Using template $paramod$5d7bf89bead63599a0c4fbe7617ae2af1a7c16a5\_90_alu for cells of type $alu.
Using template $paramod$3fe4bdf8d597404bdd222c1fea42f692fdc77de4\_90_alu for cells of type $alu.
Using template $paramod$8f00ca5ffae7aacb4fd127c662dabcdb3ad72531\_90_alu for cells of type $alu.
Using template $paramod$9f3f81d189a6b1d5c738a580270bbb92e45c5c71\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$ebede46804337da78e06a77b9ffdc3717e8d42eb\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~2801 debug messages>

yosys> opt

3.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~2694 debug messages>

yosys> opt_merge -nomux

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~3102 debug messages>
Removed a total of 1034 cells.

yosys> opt_muxtree

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 398 unused cells and 2372 unused wires.
<suppressed ~399 debug messages>

yosys> opt_expr

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~18 debug messages>

3.23.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$2594 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2342, Q = \RES_DISP).
Adding EN signal on $auto$ff.cc:262:slice$2599 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2410 [3], Q = \NUM [3]).
Adding EN signal on $auto$ff.cc:262:slice$2608 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2581 [2], Q = \TEMP [2]).
Adding EN signal on $auto$ff.cc:262:slice$2607 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2581 [1], Q = \TEMP [1]).
Adding EN signal on $auto$ff.cc:262:slice$2606 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2581 [0], Q = \TEMP [0]).
Adding EN signal on $auto$ff.cc:262:slice$2605 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2448 [4], Q = \MAR [4]).
Adding EN signal on $auto$ff.cc:262:slice$2604 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2448 [3], Q = \MAR [3]).
Adding EN signal on $auto$ff.cc:262:slice$2603 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2448 [2], Q = \MAR [2]).
Adding EN signal on $auto$ff.cc:262:slice$2602 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2448 [1], Q = \MAR [1]).
Adding EN signal on $auto$ff.cc:262:slice$2601 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2448 [0], Q = \MAR [0]).
Adding EN signal on $auto$ff.cc:262:slice$2600 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2410 [4], Q = \NUM [4]).
Adding EN signal on $auto$ff.cc:262:slice$2597 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2410 [1], Q = \NUM [1]).
Adding EN signal on $auto$ff.cc:262:slice$2598 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2410 [2], Q = \NUM [2]).
Adding EN signal on $auto$ff.cc:262:slice$2596 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2410 [0], Q = \NUM [0]).
Adding EN signal on $auto$ff.cc:262:slice$2595 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2352, Q = \EN_DISP).
Adding EN signal on $auto$ff.cc:262:slice$2624 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2457, Q = \FLAG).
Adding EN signal on $auto$ff.cc:262:slice$2623 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2515 [8], Q = \MAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$2622 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2515 [7], Q = \MAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$2621 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2515 [6], Q = \MAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$2620 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2515 [5], Q = \MAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$2619 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2515 [4], Q = \MAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$2618 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2515 [3], Q = \MAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$2617 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2515 [2], Q = \MAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$2616 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2515 [1], Q = \MAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$2615 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2515 [0], Q = \MAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$2614 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2581 [8], Q = \TEMP [8]).
Adding EN signal on $auto$ff.cc:262:slice$2613 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2581 [7], Q = \TEMP [7]).
Adding EN signal on $auto$ff.cc:262:slice$2612 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2581 [6], Q = \TEMP [6]).
Adding EN signal on $auto$ff.cc:262:slice$2611 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2581 [5], Q = \TEMP [5]).
Adding EN signal on $auto$ff.cc:262:slice$2610 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2581 [4], Q = \TEMP [4]).
Adding EN signal on $auto$ff.cc:262:slice$2609 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2581 [3], Q = \TEMP [3]).

yosys> opt_clean

3.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 158 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~478 debug messages>

3.23.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.23.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~1632 debug messages>
Removed a total of 544 cells.

yosys> opt_dff

3.23.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 561 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.23.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.23.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.23.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.23.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.23.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.24. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~191 debug messages>

yosys> opt_merge

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.24.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

3.24.5. Finished fast OPT passes.

yosys> memory_map

3.25. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~11 debug messages>

yosys> opt_merge -nomux

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_share

3.26.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr -full

3.26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.26.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.27. Executing ABC pass (technology mapping using ABC).

3.27.1. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Extracted 969 gates and 1006 wires to a netlist network with 35 inputs and 56 outputs.

3.27.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/b05/abc_tmp.scr 
ABC:   #Luts =   113  Max Lvl =   9  Avg Lvl =   2.54  [   5.28 sec. at Pass 0]
ABC:   #Luts =    73  Max Lvl =   7  Avg Lvl =   1.82  [   3.76 sec. at Pass 1]
ABC:   #Luts =    73  Max Lvl =   7  Avg Lvl =   1.82  [   0.77 sec. at Pass 2]
ABC:   #Luts =    72  Max Lvl =   6  Avg Lvl =   1.82  [   1.11 sec. at Pass 3]
ABC:   #Luts =    72  Max Lvl =   6  Avg Lvl =   1.82  [   0.47 sec. at Pass 4]
ABC:   #Luts =    72  Max Lvl =   6  Avg Lvl =   1.82  [   1.18 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.27.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       73
ABC RESULTS:        internal signals:      915
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       56
Removing temp directory.

yosys> opt

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 527 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.28.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.28.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.29. Printing statistics.

=== b05 ===

   Number of wires:                 59
   Number of wire bits:            136
   Number of public wires:          19
   Number of public wire bits:      88
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     $_DFFE_PP0P_                   31
     $_DFF_PP0_                      3
     $lut                           72


yosys> shregmap -minlen 8 -maxlen 20

3.30. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.31. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.32. Printing statistics.

=== b05 ===

   Number of wires:                 59
   Number of wire bits:            136
   Number of public wires:          19
   Number of public wire bits:      88
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     $_DFFE_PP0P_                   31
     $_DFF_PP0_                      3
     $lut                           72


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.33. Executing TECHMAP pass (map to technology primitives).

3.33.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.33.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.33.3. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~268 debug messages>

yosys> opt_expr -mux_undef

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~1836 debug messages>

yosys> simplemap

3.35. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~798 debug messages>
Removed a total of 266 cells.

yosys> opt_dff -nodffe -nosdff

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 331 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~21 debug messages>

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Extracted 459 gates and 497 wires to a netlist network with 36 inputs and 56 outputs.

3.41.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/b05/abc_tmp.scr 
ABC:   #Luts =    72  Max Lvl =   6  Avg Lvl =   1.80  [   0.33 sec. at Pass 0]
ABC:   #Luts =    72  Max Lvl =   6  Avg Lvl =   1.80  [   2.66 sec. at Pass 1]
ABC:   #Luts =    72  Max Lvl =   6  Avg Lvl =   1.80  [   1.03 sec. at Pass 2]
ABC:   #Luts =    72  Max Lvl =   6  Avg Lvl =   1.80  [   1.14 sec. at Pass 3]
ABC:   #Luts =    72  Max Lvl =   6  Avg Lvl =   1.80  [   0.84 sec. at Pass 4]
ABC:   #Luts =    72  Max Lvl =   6  Avg Lvl =   1.80  [   1.35 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       73
ABC RESULTS:        internal signals:      405
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       56
Removing temp directory.

yosys> opt

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 321 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \b05

3.43.2. Analyzing design hierarchy..
Top module:  \b05
Removed 0 unused modules.

yosys> stat

3.44. Printing statistics.

=== b05 ===

   Number of wires:                 60
   Number of wire bits:            137
   Number of public wires:          19
   Number of public wire bits:      88
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                107
     $lut                           73
     dffsre                         34


yosys> opt_clean -purge

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> write_verilog -noattr -nohex b05.verilog

3.46. Executing Verilog backend.

yosys> bmuxmap

3.46.1. Executing BMUXMAP pass.

yosys> demuxmap

3.46.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b05'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: bc692fa915, CPU: user 4.64s system 0.05s, MEM: 43.91 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 85% 2x abc (26 sec), 5% 37x opt_expr (1 sec), ...
real 38.73
user 27.60
sys 3.62
