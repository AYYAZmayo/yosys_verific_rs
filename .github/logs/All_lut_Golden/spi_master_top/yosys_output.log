
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k baud_generator.v ql_clkgate_x4.v ql_mux2_x2.v registers.v serializer_deserializer.v spi_master_top.v

yosys> verific -vlog2k baud_generator.v ql_clkgate_x4.v ql_mux2_x2.v registers.v serializer_deserializer.v spi_master_top.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'baud_generator.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ql_clkgate_x4.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ql_mux2_x2.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'registers.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serializer_deserializer.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_master_top.v'

yosys> synth_rs -top spi_master_top -tech genesis -goal area -no_dsp -no_bram -verilog spi_master_top.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top spi_master_top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] spi_master_top.v:26: compiling module 'spi_master_top'
VERIFIC-WARNING [VERI-2371] spi_master_top.v:109: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] registers.v:15: compiling module 'registers'
VERIFIC-WARNING [VERI-1209] registers.v:104: expression size 8 truncated to fit in target size 3
VERIFIC-WARNING [VERI-2371] registers.v:205: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:208: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:209: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:210: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:211: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:221: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:224: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:241: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:244: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:249: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:261: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:269: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:274: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:282: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:290: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:295: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] serializer_deserializer.v:16: compiling module 'serializer_deserializer'
VERIFIC-INFO [VERI-1018] ql_mux2_x2.v:1: compiling module 'ql_mux2_x2'
VERIFIC-INFO [VERI-1018] ql_clkgate_x4.v:1: compiling module 'ql_clkgate_x4'
VERIFIC-INFO [VERI-1018] baud_generator.v:14: compiling module 'baud_generator'
VERIFIC-WARNING [VERI-1209] baud_generator.v:45: expression size 18 truncated to fit in target size 17
VERIFIC-WARNING [VERI-1209] serializer_deserializer.v:130: expression size 4 truncated to fit in target size 3
Importing module spi_master_top.
Importing module registers.
Importing module serializer_deserializer.
Importing module ql_mux2_x2.
Importing module ql_clkgate_x4.
Importing module baud_generator.

3.3.1. Analyzing design hierarchy..
Top module:  \spi_master_top
Used module:     \serializer_deserializer
Used module:         \baud_generator
Used module:         \ql_clkgate_x4
Used module:         \ql_mux2_x2
Used module:     \registers

3.3.2. Analyzing design hierarchy..
Top module:  \spi_master_top
Used module:     \serializer_deserializer
Used module:         \baud_generator
Used module:         \ql_clkgate_x4
Used module:         \ql_mux2_x2
Used module:     \registers
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module baud_generator.
<suppressed ~2 debug messages>
Optimizing module ql_clkgate_x4.
Optimizing module ql_mux2_x2.
Optimizing module serializer_deserializer.
<suppressed ~10 debug messages>
Optimizing module registers.
<suppressed ~4 debug messages>
Optimizing module spi_master_top.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module baud_generator.
Deleting now unused module ql_clkgate_x4.
Deleting now unused module ql_mux2_x2.
Deleting now unused module serializer_deserializer.
Deleting now unused module registers.
<suppressed ~5 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~1 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 290 unused wires.
<suppressed ~86 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module spi_master_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wb_ack_i_reg$spi_master_top.v:109$19 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$tx_reg_reg$registers.v:214$362 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$ss_reg_reg$registers.v:214$363 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$spi_ctrl_reg_reg$registers.v:214$364 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$spi_clk_cnt_reg_reg$registers.v:214$365 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$irq_wr2_reg$registers.v:132$309 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$irq_wr1_reg$registers.v:132$308 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$irq_rd2_reg$registers.v:132$307 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$irq_rd1_reg$registers.v:132$306 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$cmd_reg7_reg$registers.v:296$396 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$cmd_reg32_reg$registers.v:275$387 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$cmd_reg1_reg$registers.v:255$380 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$cmd_reg0_reg$registers.v:235$374 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$TIP_reg$registers.v:174$328 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$SPICR1_reg$registers.v:214$361 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$SPIBR_reg$registers.v:214$360 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$INTR_write_reg$registers.v:163$324 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$INTR_read_reg$registers.v:149$320 ($aldff) from module spi_master_top.
Removing never-active async load on $flatten\spi_register.$verific$Data_out_r_reg$registers.v:316$399 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.\BG.$verific$count16_reg$baud_generator.v:46$699 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.\BG.$verific$Baud_Rate_r_reg$baud_generator.v:62$706 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$trnsfer_done_reg$serializer_deserializer.v:196$606 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$bit_count_reg$serializer_deserializer.v:132$562 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$Shift_Reg_reg$serializer_deserializer.v:302$643 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$SS_bar_reg$serializer_deserializer.v:153$572 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$SPI_Read_Data_reg$serializer_deserializer.v:338$662 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$IRQ_read_reg$serializer_deserializer.v:179$602 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$FSM_spi_state_reg$serializer_deserializer.v:283$636 ($aldff) from module spi_master_top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\spi_register.$verific$tx_reg_reg$registers.v:214$362 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n439$256, Q = \spi_register.tx_reg).
Adding EN signal on $flatten\spi_register.$verific$ss_reg_reg$registers.v:214$363 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n448$257, Q = \spi_register.ss_reg).
Adding EN signal on $flatten\spi_register.$verific$spi_ctrl_reg_reg$registers.v:214$364 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n457$258, Q = \spi_register.spi_ctrl_reg).
Adding EN signal on $flatten\spi_register.$verific$spi_clk_cnt_reg_reg$registers.v:214$365 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n461$259, Q = \spi_register.spi_clk_cnt_reg).
Adding EN signal on $flatten\spi_register.$verific$cmd_reg7_reg$registers.v:296$396 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n596$232, Q = \spi_register.cmd_reg7).
Adding EN signal on $flatten\spi_register.$verific$cmd_reg32_reg$registers.v:275$387 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n577$265, Q = \spi_register.cmd_reg32).
Adding EN signal on $flatten\spi_register.$verific$cmd_reg1_reg$registers.v:255$380 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n550$224, Q = \spi_register.cmd_reg1).
Adding EN signal on $flatten\spi_register.$verific$cmd_reg0_reg$registers.v:235$374 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n538$219, Q = \spi_register.cmd_reg0).
Adding EN signal on $flatten\spi_register.$verific$SPICR1_reg$registers.v:214$361 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n430$255, Q = \spi_register.SPICR1).
Adding EN signal on $flatten\spi_register.$verific$SPIBR_reg$registers.v:214$360 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254, Q = \spi_register.SPIBR).
Adding EN signal on $flatten\spi_register.$verific$INTR_write_reg$registers.v:163$324 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n112$205, Q = \spi_register.INTR_write).
Adding EN signal on $flatten\spi_register.$verific$INTR_read_reg$registers.v:149$320 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n103$202, Q = \spi_register.INTR_read).
Adding EN signal on $flatten\ser_des.\BG.$verific$Baud_Rate_r_reg$baud_generator.v:62$706 ($adff) from module spi_master_top (D = $flatten\ser_des.\BG.$verific$n162$682, Q = \ser_des.BG.Baud_Rate_r).
Adding EN signal on $flatten\ser_des.$verific$bit_count_reg$serializer_deserializer.v:132$562 ($adff) from module spi_master_top (D = $flatten\ser_des.$verific$n59$469, Q = \ser_des.bit_count).
Adding EN signal on $flatten\ser_des.$verific$SS_bar_reg$serializer_deserializer.v:153$572 ($adff) from module spi_master_top (D = $flatten\ser_des.$verific$n90$419, Q = \ser_des.SS_bar).
Adding EN signal on $flatten\ser_des.$verific$SPI_Read_Data_reg$serializer_deserializer.v:338$662 ($adff) from module spi_master_top (D = $flatten\ser_des.$verific$n473$512, Q = \ser_des.SPI_Read_Data).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$748 ($adffe) from module spi_master_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$717 ($adffe) from module spi_master_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$717 ($adffe) from module spi_master_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$717 ($adffe) from module spi_master_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$717 ($adffe) from module spi_master_top.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~16 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~36 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 16 bits (of 17) from port B of cell spi_master_top.$flatten\ser_des.\BG.$verific$add_12$baud_generator.v:45$697 ($add).
Removed top 1 bits (of 17) from port B of cell spi_master_top.$flatten\ser_des.\BG.$verific$equal_20$baud_generator.v:58$701 ($eq).
Removed top 1 bits (of 6) from mux cell spi_master_top.$flatten\ser_des.$verific$mux_220$serializer_deserializer.v:261$632 ($mux).
Removed top 1 bits (of 3) from mux cell spi_master_top.$flatten\ser_des.$verific$mux_113$serializer_deserializer.v:219$621 ($mux).
Removed top 2 bits (of 3) from port B of cell spi_master_top.$flatten\ser_des.$verific$equal_90$serializer_deserializer.v:201$609 ($eq).
Removed top 2 bits (of 3) from port B of cell spi_master_top.$flatten\ser_des.$verific$add_19$serializer_deserializer.v:130$556 ($add).
Removed top 1 bits (of 3) from port B of cell spi_master_top.$flatten\ser_des.$verific$equal_14$serializer_deserializer.v:129$551 ($eq).
Removed top 1 bits (of 3) from port B of cell spi_master_top.$flatten\ser_des.$verific$equal_5$serializer_deserializer.v:95$517 ($eq).
Removed top 1 bits (of 3) from wire spi_master_top.$flatten\ser_des.$verific$n176$473.
Removed top 1 bits (of 3) from wire spi_master_top.$flatten\ser_des.$verific$n251$491.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> techmap

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.18.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=17:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=17:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=17:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=17:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=17:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=17:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_not.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=3:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=3:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$18205a5da979f93ffab44671dcc4a48cf14e25e2\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~753 debug messages>

yosys> alumacc

3.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module spi_master_top:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.20. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~416 debug messages>

yosys> opt_merge -nomux

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
<suppressed ~96 debug messages>
Removed a total of 32 cells.

yosys> opt_muxtree

3.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$885 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n461$259 [7], Q = \spi_register.spi_clk_cnt_reg [7]).
Adding EN signal on $auto$ff.cc:262:slice$1824 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n430$255 [7], Q = \spi_register.SPICR1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$932 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [15], Q = \spi_register.SPIBR [15]).
Adding EN signal on $auto$ff.cc:262:slice$908 ($_DFFE_PP1P_) from module spi_master_top (D = $flatten\spi_register.$verific$n457$258 [2], Q = \spi_register.spi_ctrl_reg [2]).
Adding EN signal on $auto$ff.cc:262:slice$916 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n448$257 [7], Q = \spi_register.ss_reg [7]).
Adding EN signal on $auto$ff.cc:262:slice$1560 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n439$256 [7], Q = \spi_register.tx_reg [7]).
Adding EN signal on $auto$ff.cc:262:slice$882 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n461$259 [0], Q = \spi_register.spi_clk_cnt_reg [0]).
Adding EN signal on $auto$ff.cc:262:slice$883 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n461$259 [1], Q = \spi_register.spi_clk_cnt_reg [1]).
Adding EN signal on $auto$ff.cc:262:slice$884 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n461$259 [2], Q = \spi_register.spi_clk_cnt_reg [2]).
Adding EN signal on $auto$ff.cc:262:slice$906 ($_DFFE_PP1P_) from module spi_master_top (D = $flatten\spi_register.$verific$n457$258 [0], Q = \spi_register.spi_ctrl_reg [0]).
Adding EN signal on $auto$ff.cc:262:slice$907 ($_DFFE_PP1P_) from module spi_master_top (D = $flatten\spi_register.$verific$n457$258 [1], Q = \spi_register.spi_ctrl_reg [1]).
Adding EN signal on $auto$ff.cc:262:slice$909 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n448$257 [0], Q = \spi_register.ss_reg [0]).
Adding EN signal on $auto$ff.cc:262:slice$910 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n448$257 [1], Q = \spi_register.ss_reg [1]).
Adding EN signal on $auto$ff.cc:262:slice$911 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n448$257 [2], Q = \spi_register.ss_reg [2]).
Adding EN signal on $auto$ff.cc:262:slice$912 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n448$257 [3], Q = \spi_register.ss_reg [3]).
Adding EN signal on $auto$ff.cc:262:slice$913 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n448$257 [4], Q = \spi_register.ss_reg [4]).
Adding EN signal on $auto$ff.cc:262:slice$914 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n448$257 [5], Q = \spi_register.ss_reg [5]).
Adding EN signal on $auto$ff.cc:262:slice$915 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n448$257 [6], Q = \spi_register.ss_reg [6]).
Adding EN signal on $auto$ff.cc:262:slice$917 ($_DFFE_PP1P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [0], Q = \spi_register.SPIBR [0]).
Adding EN signal on $auto$ff.cc:262:slice$918 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [1], Q = \spi_register.SPIBR [1]).
Adding EN signal on $auto$ff.cc:262:slice$919 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [2], Q = \spi_register.SPIBR [2]).
Adding EN signal on $auto$ff.cc:262:slice$920 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [3], Q = \spi_register.SPIBR [3]).
Adding EN signal on $auto$ff.cc:262:slice$921 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [4], Q = \spi_register.SPIBR [4]).
Adding EN signal on $auto$ff.cc:262:slice$922 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [5], Q = \spi_register.SPIBR [5]).
Adding EN signal on $auto$ff.cc:262:slice$923 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [6], Q = \spi_register.SPIBR [6]).
Adding EN signal on $auto$ff.cc:262:slice$924 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [7], Q = \spi_register.SPIBR [7]).
Adding EN signal on $auto$ff.cc:262:slice$925 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [8], Q = \spi_register.SPIBR [8]).
Adding EN signal on $auto$ff.cc:262:slice$926 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [9], Q = \spi_register.SPIBR [9]).
Adding EN signal on $auto$ff.cc:262:slice$927 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [10], Q = \spi_register.SPIBR [10]).
Adding EN signal on $auto$ff.cc:262:slice$928 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [11], Q = \spi_register.SPIBR [11]).
Adding EN signal on $auto$ff.cc:262:slice$929 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [12], Q = \spi_register.SPIBR [12]).
Adding EN signal on $auto$ff.cc:262:slice$930 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [13], Q = \spi_register.SPIBR [13]).
Adding EN signal on $auto$ff.cc:262:slice$931 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254 [14], Q = \spi_register.SPIBR [14]).
Adding EN signal on $auto$ff.cc:262:slice$1821 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n430$255 [4], Q = \spi_register.SPICR1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$1819 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n430$255 [2], Q = \spi_register.SPICR1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$1822 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n430$255 [5], Q = \spi_register.SPICR1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$1820 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n430$255 [3], Q = \spi_register.SPICR1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$1818 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n430$255 [0], Q = \spi_register.SPICR1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$1823 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n430$255 [6], Q = \spi_register.SPICR1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$1553 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n439$256 [0], Q = \spi_register.tx_reg [0]).
Adding EN signal on $auto$ff.cc:262:slice$1554 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n439$256 [1], Q = \spi_register.tx_reg [1]).
Adding EN signal on $auto$ff.cc:262:slice$1555 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n439$256 [2], Q = \spi_register.tx_reg [2]).
Adding EN signal on $auto$ff.cc:262:slice$1556 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n439$256 [3], Q = \spi_register.tx_reg [3]).
Adding EN signal on $auto$ff.cc:262:slice$1557 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n439$256 [4], Q = \spi_register.tx_reg [4]).
Adding EN signal on $auto$ff.cc:262:slice$1558 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n439$256 [5], Q = \spi_register.tx_reg [5]).
Adding EN signal on $auto$ff.cc:262:slice$1559 ($_DFFE_PP0P_) from module spi_master_top (D = $flatten\spi_register.$verific$n439$256 [6], Q = \spi_register.tx_reg [6]).

yosys> opt_clean

3.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 24 unused cells and 352 unused wires.
<suppressed ~25 debug messages>

yosys> opt_expr

3.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~552 debug messages>

3.20.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
<suppressed ~2427 debug messages>
Removed a total of 809 cells.

yosys> opt_dff

3.20.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 777 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.20.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.20.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.20.23. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> stat

3.23. Printing statistics.

=== spi_master_top ===

   Number of wires:                419
   Number of wire bits:           1261
   Number of public wires:         170
   Number of public wire bits:     463
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                780
     $_AND_                         71
     $_DFFE_PP0P_                   62
     $_DFFE_PP1P_                    4
     $_DFF_PP0_                     36
     $_DFF_P_                        8
     $_MUX_                        378
     $_NOT_                         36
     $_OR_                         128
     $_XOR_                         57


yosys> shregmap -minlen 8 -maxlen 20

3.24. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.25. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.26. Printing statistics.

=== spi_master_top ===

   Number of wires:                419
   Number of wire bits:           1261
   Number of public wires:         170
   Number of public wire bits:     463
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                780
     $_AND_                         71
     $_DFFE_PP0P_                   62
     $_DFFE_PP1P_                    4
     $_DFF_PP0_                     36
     $_DFF_P_                        8
     $_MUX_                        378
     $_NOT_                         36
     $_OR_                         128
     $_XOR_                         57


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.27. Executing TECHMAP pass (map to technology primitives).

3.27.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.27.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.27.3. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~340 debug messages>

yosys> opt_expr -mux_undef

3.28. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~164 debug messages>

yosys> simplemap

3.29. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge

3.31. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
<suppressed ~408 debug messages>
Removed a total of 136 cells.

yosys> opt_dff -nodffe -nosdff

3.32. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 636 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.34. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.34.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.34.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.34.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~41 debug messages>

yosys> opt_merge

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.35.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.35.5. Finished fast OPT passes.

yosys> memory_map

3.36. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.37. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.37.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.37.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.37.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.37.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$1460 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$1443
        $auto$simplemap.cc:312:simplemap_bmux$1435

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$1756 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$1749
        $auto$simplemap.cc:312:simplemap_bmux$1746


yosys> opt_dff

3.37.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr -full

3.37.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~2 debug messages>

3.37.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.37.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.37.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.37.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.37.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.37.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr -full

3.37.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.37.18. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

3.38. Executing TECHMAP pass (map to technology primitives).

3.38.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.38.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~73 debug messages>

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.39.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.40. Executing ABC pass (technology mapping using ABC).

3.40.1. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Extracted 469 gates and 593 wires to a netlist network with 122 inputs and 105 outputs.

3.40.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/yosys_verific_rs/result_18-03-2022T17-26-14/All_lut_synth_rs_area.json/spi_master_top/abc_tmp.scr 
ABC: netlist  : i/o =    122/    105  and =     763  lev =   16 (5.11)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    156  edge =     663  lev =    5 (2.10)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     742  lev =   16 (5.07)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    154  edge =     642  lev =    5 (2.24)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     736  lev =   16 (5.04)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    154  edge =     640  lev =    5 (2.25)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     706  lev =   12 (4.53)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    154  edge =     640  lev =    5 (2.25)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     728  lev =   17 (5.13)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    150  edge =     634  lev =    5 (2.11)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     724  lev =   17 (5.14)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    149  edge =     632  lev =    5 (2.12)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     732  lev =   17 (5.12)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    149  edge =     636  lev =    5 (2.09)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     732  lev =   17 (5.12)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    149  edge =     636  lev =    5 (2.09)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     710  lev =   17 (5.02)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    148  edge =     635  lev =    5 (2.24)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     721  lev =   17 (5.18)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    149  edge =     632  lev =    5 (2.24)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     736  lev =   17 (5.27)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    150  edge =     639  lev =    4 (2.07)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     736  lev =   17 (5.27)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    149  edge =     637  lev =    5 (2.24)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     736  lev =   17 (5.27)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    149  edge =     637  lev =    5 (2.24)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     710  lev =   17 (5.02)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    148  edge =     635  lev =    5 (2.24)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     710  lev =   17 (5.02)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    148  edge =     635  lev =    5 (2.24)  mem = 0.01 MB
ABC: netlist  : i/o =    122/    105  and =     733  lev =   17 (5.25)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    148  edge =     635  lev =    5 (2.24)  mem = 0.01 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

3.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      150
ABC RESULTS:        internal signals:      366
ABC RESULTS:           input signals:      122
ABC RESULTS:          output signals:      105
Removing temp directory.

yosys> opt

3.41. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.41.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.41.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 365 unused wires.
<suppressed ~15 debug messages>

yosys> opt_expr

3.41.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.41.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.41.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.41.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.41.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.41.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.41.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.41.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

3.41.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.42. Executing HIERARCHY pass (managing design hierarchy).

3.42.1. Analyzing design hierarchy..
Top module:  \spi_master_top

3.42.2. Analyzing design hierarchy..
Top module:  \spi_master_top
Removed 0 unused modules.

yosys> stat

3.43. Printing statistics.

=== spi_master_top ===

   Number of wires:                293
   Number of wire bits:            586
   Number of public wires:         156
   Number of public wire bits:     449
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                260
     $lut                          150
     dff                             8
     dffsre                        102


yosys> opt_clean -purge

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 96 unused wires.
<suppressed ~96 debug messages>

yosys> write_verilog -noattr -nohex spi_master_top.verilog

3.45. Executing Verilog backend.

yosys> bmuxmap

3.45.1. Executing BMUXMAP pass.

yosys> demuxmap

3.45.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\spi_master_top'.

Warnings: 27 unique messages, 27 total
End of script. Logfile hash: bd0b6e1e04, CPU: user 1.61s system 0.02s, MEM: 22.32 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 45% 1x abc (1 sec), 16% 30x opt_expr (0 sec), ...
real 2.93
user 2.64
sys 0.28
