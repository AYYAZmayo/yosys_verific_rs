
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k arbiter.v

yosys> verific -vlog2k arbiter.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'arbiter.v'

yosys> synth_rs -top top -tech genesis -goal area -de -no_dsp -no_bram -verilog top.verilog

3. Executing synth_rs pass.

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] arbiter.v:1: compiling module 'top'
Importing module top.

3.3.1. Analyzing design hierarchy..
Top module:  \top

3.3.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 11839 unused wires.
<suppressed ~11840 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.9. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> techmap

3.22. Executing TECHMAP pass (map to technology primitives).

3.22.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.22.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~23304 debug messages>

yosys> opt

3.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.23.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.24. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.24.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.24.5. Finished fast OPT passes.

yosys> memory_map

3.25. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.26.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.26.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr -full

3.26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.26.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.27. Executing ABC pass (technology mapping using ABC).

3.27.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 23233 gates and 23489 wires to a netlist network with 256 inputs and 129 outputs.

3.27.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/arbiter/abc_tmp.scr 
ABC:   #Luts =  2599  Max Lvl =  19  Avg Lvl =  18.89  [   0.90 sec. at Pass 0]
ABC:   #Luts =  2064  Max Lvl =   9  Avg Lvl =   7.23  [ 166.69 sec. at Pass 1]
ABC:   #Luts =  1795  Max Lvl =  11  Avg Lvl =   8.81  [  16.82 sec. at Pass 2]
ABC:   #Luts =  1333  Max Lvl =  12  Avg Lvl =   8.47  [  35.60 sec. at Pass 3]
ABC:   #Luts =  1304  Max Lvl =  11  Avg Lvl =   8.54  [   7.57 sec. at Pass 4]
ABC:   #Luts =  1151  Max Lvl =  13  Avg Lvl =   9.51  [  31.88 sec. at Pass 5]
ABC:   #Luts =  1129  Max Lvl =  11  Avg Lvl =   9.33  [   6.24 sec. at Pass 6]
ABC:   #Luts =  1049  Max Lvl =  14  Avg Lvl =  10.37  [  31.87 sec. at Pass 7]
ABC:   #Luts =  1034  Max Lvl =  15  Avg Lvl =   9.95  [  10.40 sec. at Pass 8]
ABC:   #Luts =   973  Max Lvl =  15  Avg Lvl =  10.33  [  23.36 sec. at Pass 9]
ABC:   #Luts =   967  Max Lvl =  13  Avg Lvl =   9.85  [  11.18 sec. at Pass 10]
ABC:   #Luts =   923  Max Lvl =  14  Avg Lvl =  10.03  [  20.92 sec. at Pass 11]
ABC:   #Luts =   916  Max Lvl =  14  Avg Lvl =  10.02  [   8.04 sec. at Pass 12]
ABC:   #Luts =   891  Max Lvl =  13  Avg Lvl =  10.29  [  22.41 sec. at Pass 13]
ABC:   #Luts =   887  Max Lvl =  13  Avg Lvl =  10.34  [   7.86 sec. at Pass 14]
ABC:   #Luts =   873  Max Lvl =  13  Avg Lvl =  10.37  [  21.36 sec. at Pass 15]
ABC:   #Luts =   871  Max Lvl =  13  Avg Lvl =  10.40  [   6.08 sec. at Pass 16]
ABC:   #Luts =   839  Max Lvl =  15  Avg Lvl =  10.50  [  16.51 sec. at Pass 17]
ABC:   #Luts =   839  Max Lvl =  15  Avg Lvl =  10.50  [   6.01 sec. at Pass 18]
ABC:   #Luts =   824  Max Lvl =  15  Avg Lvl =  11.16  [  17.64 sec. at Pass 19]
ABC:   #Luts =   824  Max Lvl =  15  Avg Lvl =  11.16  [   3.56 sec. at Pass 20]
ABC:   #Luts =   819  Max Lvl =  13  Avg Lvl =  10.71  [  13.68 sec. at Pass 21]
ABC:   #Luts =   816  Max Lvl =  16  Avg Lvl =  11.33  [   5.12 sec. at Pass 22]
ABC:   #Luts =   808  Max Lvl =  14  Avg Lvl =  10.79  [  14.64 sec. at Pass 23]
ABC:   #Luts =   808  Max Lvl =  14  Avg Lvl =  10.79  [   4.42 sec. at Pass 24]
ABC:   #Luts =   791  Max Lvl =  16  Avg Lvl =  11.39  [   9.94 sec. at Pass 25]
ABC:   #Luts =   791  Max Lvl =  16  Avg Lvl =  11.39  [   4.93 sec. at Pass 26]
ABC:   #Luts =   780  Max Lvl =  16  Avg Lvl =  11.21  [  13.14 sec. at Pass 27]
ABC:   #Luts =   780  Max Lvl =  16  Avg Lvl =  11.21  [   4.93 sec. at Pass 28]
ABC:   #Luts =   762  Max Lvl =  18  Avg Lvl =  12.28  [  13.54 sec. at Pass 29]
ABC:   #Luts =   762  Max Lvl =  18  Avg Lvl =  12.28  [   4.30 sec. at Pass 30]
ABC:   #Luts =   756  Max Lvl =  19  Avg Lvl =  12.05  [  12.51 sec. at Pass 31]
ABC:   #Luts =   755  Max Lvl =  19  Avg Lvl =  12.82  [   4.16 sec. at Pass 32]
ABC:   #Luts =   745  Max Lvl =  18  Avg Lvl =  13.20  [  10.29 sec. at Pass 33]
ABC:   #Luts =   745  Max Lvl =  18  Avg Lvl =  13.20  [   4.60 sec. at Pass 34]
ABC:   #Luts =   737  Max Lvl =  19  Avg Lvl =  12.88  [  11.01 sec. at Pass 35]
ABC:   #Luts =   732  Max Lvl =  19  Avg Lvl =  12.14  [   3.43 sec. at Pass 36]
ABC:   #Luts =   726  Max Lvl =  19  Avg Lvl =  12.19  [  11.55 sec. at Pass 37]
ABC:   #Luts =   722  Max Lvl =  20  Avg Lvl =  13.23  [   3.62 sec. at Pass 38]
ABC:   #Luts =   714  Max Lvl =  20  Avg Lvl =  13.05  [   9.42 sec. at Pass 39]
ABC:   #Luts =   714  Max Lvl =  20  Avg Lvl =  13.05  [   4.03 sec. at Pass 40]
ABC:   #Luts =   709  Max Lvl =  19  Avg Lvl =  12.48  [   8.68 sec. at Pass 41]
ABC:   #Luts =   708  Max Lvl =  19  Avg Lvl =  12.48  [   4.34 sec. at Pass 42]
ABC:   #Luts =   701  Max Lvl =  19  Avg Lvl =  12.91  [   9.25 sec. at Pass 43]
ABC:   #Luts =   699  Max Lvl =  19  Avg Lvl =  12.44  [   3.88 sec. at Pass 44]
ABC:   #Luts =   698  Max Lvl =  20  Avg Lvl =  12.98  [   8.26 sec. at Pass 45]
ABC:   #Luts =   696  Max Lvl =  19  Avg Lvl =  12.78  [   2.75 sec. at Pass 46]
ABC:   #Luts =   691  Max Lvl =  19  Avg Lvl =  12.98  [   7.56 sec. at Pass 47]
ABC:   #Luts =   691  Max Lvl =  19  Avg Lvl =  12.98  [   4.01 sec. at Pass 48]
ABC:   #Luts =   679  Max Lvl =  19  Avg Lvl =  12.80  [   9.43 sec. at Pass 49]
ABC:   #Luts =   679  Max Lvl =  19  Avg Lvl =  12.80  [   2.65 sec. at Pass 50]
ABC:   #Luts =   673  Max Lvl =  19  Avg Lvl =  12.64  [  10.80 sec. at Pass 51]
ABC:   #Luts =   673  Max Lvl =  19  Avg Lvl =  12.64  [   3.14 sec. at Pass 52]
ABC:   #Luts =   665  Max Lvl =  20  Avg Lvl =  13.27  [   6.37 sec. at Pass 53]
ABC:   #Luts =   665  Max Lvl =  19  Avg Lvl =  12.76  [   2.75 sec. at Pass 54]
ABC:   #Luts =   651  Max Lvl =  19  Avg Lvl =  13.00  [   8.43 sec. at Pass 55]
ABC:   #Luts =   651  Max Lvl =  19  Avg Lvl =  13.00  [   3.10 sec. at Pass 56]
ABC:   #Luts =   650  Max Lvl =  20  Avg Lvl =  13.53  [   8.14 sec. at Pass 57]
ABC:   #Luts =   650  Max Lvl =  18  Avg Lvl =  12.95  [   3.32 sec. at Pass 58]
ABC:   #Luts =   642  Max Lvl =  21  Avg Lvl =  13.74  [   5.56 sec. at Pass 59]
ABC:   #Luts =   640  Max Lvl =  18  Avg Lvl =  13.06  [   1.96 sec. at Pass 60]
ABC:   #Luts =   636  Max Lvl =  19  Avg Lvl =  12.98  [   4.55 sec. at Pass 61]
ABC:   #Luts =   635  Max Lvl =  18  Avg Lvl =  12.43  [   2.02 sec. at Pass 62]
ABC:   #Luts =   629  Max Lvl =  20  Avg Lvl =  12.91  [   5.58 sec. at Pass 63]
ABC:   #Luts =   629  Max Lvl =  20  Avg Lvl =  12.91  [   2.02 sec. at Pass 64]
ABC:   #Luts =   625  Max Lvl =  20  Avg Lvl =  13.57  [   5.38 sec. at Pass 65]
ABC:   #Luts =   622  Max Lvl =  20  Avg Lvl =  13.36  [   1.45 sec. at Pass 66]
ABC:   #Luts =   619  Max Lvl =  20  Avg Lvl =  13.00  [   4.76 sec. at Pass 67]
ABC:   #Luts =   616  Max Lvl =  20  Avg Lvl =  12.95  [   1.96 sec. at Pass 68]
ABC:   #Luts =   612  Max Lvl =  19  Avg Lvl =  12.96  [   4.15 sec. at Pass 69]
ABC:   #Luts =   609  Max Lvl =  19  Avg Lvl =  12.86  [   2.45 sec. at Pass 70]
ABC:   #Luts =   606  Max Lvl =  18  Avg Lvl =  12.91  [   5.89 sec. at Pass 71]
ABC:   #Luts =   606  Max Lvl =  18  Avg Lvl =  12.91  [   2.20 sec. at Pass 72]
ABC:   #Luts =   599  Max Lvl =  19  Avg Lvl =  13.15  [   5.51 sec. at Pass 73]
ABC:   #Luts =   593  Max Lvl =  18  Avg Lvl =  12.37  [   2.24 sec. at Pass 74]
ABC:   #Luts =   590  Max Lvl =  19  Avg Lvl =  13.26  [   4.86 sec. at Pass 75]
ABC:   #Luts =   588  Max Lvl =  18  Avg Lvl =  12.47  [   2.00 sec. at Pass 76]
ABC:   #Luts =   588  Max Lvl =  18  Avg Lvl =  12.47  [   4.80 sec. at Pass 77]
ABC:   #Luts =   586  Max Lvl =  18  Avg Lvl =  12.79  [   2.06 sec. at Pass 78]
ABC:   #Luts =   584  Max Lvl =  17  Avg Lvl =  12.48  [   5.07 sec. at Pass 79]
ABC:   #Luts =   584  Max Lvl =  17  Avg Lvl =  12.48  [   1.66 sec. at Pass 80]
ABC:   #Luts =   584  Max Lvl =  17  Avg Lvl =  12.48  [   4.12 sec. at Pass 81]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.27.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      584
ABC RESULTS:        internal signals:    23104
ABC RESULTS:           input signals:      256
ABC RESULTS:          output signals:      129
Removing temp directory.

yosys> opt

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 23489 unused wires.
<suppressed ~11711 debug messages>

yosys> opt_expr

3.28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.28.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.28.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.29. Printing statistics.

=== top ===

   Number of wires:                840
   Number of wire bits:            840
   Number of public wires:         385
   Number of public wire bits:     385
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                584
     $lut                          584


yosys> shregmap -minlen 8 -maxlen 20

3.30. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.31. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.32. Printing statistics.

=== top ===

   Number of wires:                840
   Number of wire bits:            840
   Number of public wires:         385
   Number of public wire bits:     385
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                584
     $lut                          584


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.33. Executing TECHMAP pass (map to technology primitives).

3.33.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.33.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Successfully finished Verilog frontend.

3.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~712 debug messages>

yosys> opt_expr -mux_undef

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~18614 debug messages>

yosys> simplemap

3.35. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1704 debug messages>
Removed a total of 568 cells.

yosys> opt_dff -nodffe -nosdff

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1000 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~81 debug messages>

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 2497 gates and 2755 wires to a netlist network with 256 inputs and 129 outputs.

3.41.1.1. Executing ABC.
Running ABC command: /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/logic_synthesis-rs/abc-rs/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/meri/Documents/workspace/clean/for_push/yosys_verific_rs/result_23-03-2022T14-57-36/All_lut_synth_rs_ade.json/arbiter/abc_tmp.scr 
ABC:   #Luts =   618  Max Lvl =  19  Avg Lvl =  14.03  [   0.12 sec. at Pass 0]
ABC:   #Luts =   612  Max Lvl =  20  Avg Lvl =  14.11  [   6.15 sec. at Pass 1]
ABC:   #Luts =   595  Max Lvl =  19  Avg Lvl =  13.33  [   1.40 sec. at Pass 2]
ABC:   #Luts =   592  Max Lvl =  18  Avg Lvl =  12.98  [   4.66 sec. at Pass 3]
ABC:   #Luts =   587  Max Lvl =  18  Avg Lvl =  13.24  [   1.60 sec. at Pass 4]
ABC:   #Luts =   585  Max Lvl =  19  Avg Lvl =  13.63  [   4.70 sec. at Pass 5]
ABC:   #Luts =   581  Max Lvl =  19  Avg Lvl =  13.81  [   2.75 sec. at Pass 6]
ABC:   #Luts =   580  Max Lvl =  19  Avg Lvl =  12.72  [   5.15 sec. at Pass 7]
ABC:   #Luts =   579  Max Lvl =  17  Avg Lvl =  12.67  [   1.89 sec. at Pass 8]
ABC:   #Luts =   576  Max Lvl =  17  Avg Lvl =  13.17  [   5.31 sec. at Pass 9]
ABC:   #Luts =   573  Max Lvl =  17  Avg Lvl =  13.13  [   2.14 sec. at Pass 10]
ABC:   #Luts =   572  Max Lvl =  19  Avg Lvl =  14.35  [   4.61 sec. at Pass 11]
ABC:   #Luts =   572  Max Lvl =  19  Avg Lvl =  14.35  [   1.33 sec. at Pass 12]
ABC:   #Luts =   569  Max Lvl =  17  Avg Lvl =  13.00  [   3.92 sec. at Pass 13]
ABC:   #Luts =   569  Max Lvl =  17  Avg Lvl =  13.00  [   2.03 sec. at Pass 14]
ABC:   #Luts =   567  Max Lvl =  18  Avg Lvl =  13.33  [   4.82 sec. at Pass 15]
ABC:   #Luts =   565  Max Lvl =  18  Avg Lvl =  12.99  [   1.16 sec. at Pass 16]
ABC:   #Luts =   563  Max Lvl =  19  Avg Lvl =  13.03  [   3.26 sec. at Pass 17]
ABC:   #Luts =   563  Max Lvl =  19  Avg Lvl =  13.03  [   1.32 sec. at Pass 18]
ABC:   #Luts =   560  Max Lvl =  19  Avg Lvl =  13.29  [   3.19 sec. at Pass 19]
ABC:   #Luts =   554  Max Lvl =  19  Avg Lvl =  13.26  [   1.33 sec. at Pass 20]
ABC:   #Luts =   554  Max Lvl =  19  Avg Lvl =  13.26  [   3.28 sec. at Pass 21]
ABC:   #Luts =   554  Max Lvl =  19  Avg Lvl =  13.26  [   1.28 sec. at Pass 22]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      554
ABC RESULTS:        internal signals:     2370
ABC RESULTS:           input signals:      256
ABC RESULTS:          output signals:      129
Removing temp directory.

yosys> opt

3.42. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2662 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.42.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.42.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.42.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.42.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.42.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.42.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.42.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.42.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \top

3.43.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.44. Printing statistics.

=== top ===

   Number of wires:                810
   Number of wire bits:            810
   Number of public wires:         385
   Number of public wire bits:     385
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                554
     $lut                          554


yosys> opt_clean -purge

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> write_verilog -noattr -nohex top.verilog

3.46. Executing Verilog backend.

yosys> bmuxmap

3.46.1. Executing BMUXMAP pass.

yosys> demuxmap

3.46.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\top'.

End of script. Logfile hash: 92307a4a3c, CPU: user 58.65s system 0.51s, MEM: 135.54 MB peak
Yosys 0.14+36 (git sha1 4cd3e3b51, gcc 7.1.0 -fPIC -Os)
Time spent: 99% 2x abc (7239 sec), 0% 24x opt_expr (22 sec), ...
real 1046.19
user 7022.28
sys 275.55
