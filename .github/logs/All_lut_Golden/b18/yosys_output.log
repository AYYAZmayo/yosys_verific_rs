
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b18.vhd

yosys> verific -vhdl b18.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b18.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b18.vhd:1: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b18.vhd:11: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b18.vhd:511: analyzing entity 'b15'
VERIFIC-INFO [VHDL-1010] b18.vhd:527: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b18.vhd:1183: analyzing entity 'b17'
VERIFIC-INFO [VHDL-1010] b18.vhd:1195: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b18.vhd:1320: analyzing entity 'b18'
VERIFIC-INFO [VHDL-1010] b18.vhd:1329: analyzing architecture 'behav'

yosys> synth_rs -top b18 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.2.36

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b18

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b18.vhd:1320: processing 'b18(BEHAV)'
VERIFIC-INFO [VHDL-1067] b18.vhd:1183: processing 'b17(BEHAV)'
VERIFIC-INFO [VHDL-1067] b18.vhd:511: processing 'b15(BEHAV)'
VERIFIC-INFO [VHDL-1067] b18.vhd:1: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b18.vhd:478: 'others' clause is never selected
Importing module b18.
Importing module b14(BEHAV).
Importing module b17(BEHAV).
Importing module b15(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b18
Used module:     \b14(BEHAV)
Used module:     \b17(BEHAV)
Used module:         \b15(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b18
Used module:     \b14(BEHAV)
Used module:     \b17(BEHAV)
Used module:         \b15(BEHAV)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15(BEHAV).
<suppressed ~17 debug messages>
Optimizing module b17(BEHAV).
<suppressed ~4 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b18.
<suppressed ~2 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module b15(BEHAV).
Deleting now unused module b17(BEHAV).
Deleting now unused module b14(BEHAV).
<suppressed ~7 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~44 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 57 unused cells and 1349 unused wires.
<suppressed ~544 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b18...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~12 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P3.$verific$i684$b18.vhd:501$587.
    dead port 2/2 on $mux $flatten\P3.$verific$mux_672$b18.vhd:501$578.
    dead port 2/2 on $mux $flatten\P3.$verific$mux_685$b18.vhd:501$589.
    dead port 2/2 on $mux $flatten\P4.$verific$i684$b18.vhd:501$587.
    dead port 2/2 on $mux $flatten\P4.$verific$mux_672$b18.vhd:501$578.
    dead port 2/2 on $mux $flatten\P4.$verific$mux_685$b18.vhd:501$589.
Removed 6 multiplexer ports.
<suppressed ~600 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$Select_723$b18.vhd:1072$1718: { $flatten\P1.\P1.$verific$n7981$899 $flatten\P1.\P1.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$1889 $auto$opt_reduce.cc:134:opt_pmux$1887 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$Select_725$b18.vhd:1072$1720: { $flatten\P1.\P1.$verific$n7981$899 $auto$opt_reduce.cc:134:opt_pmux$1895 $auto$opt_reduce.cc:134:opt_pmux$1893 $auto$opt_reduce.cc:134:opt_pmux$1891 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$Select_731$b18.vhd:1072$1726: { $flatten\P1.\P1.$verific$n8173$920 $flatten\P1.\P1.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$1897 $flatten\P1.\P1.$verific$n7990$908 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$Select_733$b18.vhd:1072$1727: { $flatten\P1.\P1.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$1901 $auto$opt_reduce.cc:134:opt_pmux$1899 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$Select_735$b18.vhd:1072$1728: { $flatten\P1.\P1.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$1905 $auto$opt_reduce.cc:134:opt_pmux$1903 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$Select_737$b18.vhd:1072$1729: { $flatten\P1.\P1.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$1907 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$select_720$b18.vhd:1072$1715: { $flatten\P1.\P1.$verific$n7981$899 $flatten\P1.\P1.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$1917 $auto$opt_reduce.cc:134:opt_pmux$1915 $auto$opt_reduce.cc:134:opt_pmux$1913 $auto$opt_reduce.cc:134:opt_pmux$1911 $auto$opt_reduce.cc:134:opt_pmux$1909 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$select_721$b18.vhd:1072$1716: { $auto$opt_reduce.cc:134:opt_pmux$1927 $auto$opt_reduce.cc:134:opt_pmux$1925 $flatten\P1.\P1.$verific$n7987$905 $flatten\P1.\P1.$verific$n7989$907 $auto$opt_reduce.cc:134:opt_pmux$1923 $auto$opt_reduce.cc:134:opt_pmux$1921 $auto$opt_reduce.cc:134:opt_pmux$1919 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$select_726$b18.vhd:1072$1721: { $flatten\P1.\P1.$verific$n7981$899 $flatten\P1.\P1.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$1929 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$select_727$b18.vhd:1072$1722: { $flatten\P1.\P1.$verific$n7985$903 $flatten\P1.\P1.$verific$n7987$905 $flatten\P1.\P1.$verific$n7989$907 $flatten\P1.\P1.$verific$n7995$913 $auto$opt_reduce.cc:134:opt_pmux$1931 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$select_728$b18.vhd:1072$1723: { $flatten\P1.\P1.$verific$n7986$904 $flatten\P1.\P1.$verific$n7996$914 $auto$opt_reduce.cc:134:opt_pmux$1933 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$select_729$b18.vhd:1072$1724: { $flatten\P1.\P1.$verific$n7987$905 $flatten\P1.\P1.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$1937 $auto$opt_reduce.cc:134:opt_pmux$1935 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$select_738$b18.vhd:1072$1730: { $flatten\P1.\P1.$verific$n7987$905 $flatten\P1.\P1.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$1939 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$select_739$b18.vhd:1072$1731: { $flatten\P1.\P1.$verific$n7987$905 $flatten\P1.\P1.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$1941 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$select_740$b18.vhd:1072$1732: { $flatten\P1.\P1.$verific$n7988$906 $flatten\P1.\P1.$verific$n7990$908 $auto$opt_reduce.cc:134:opt_pmux$1943 }
    New ctrl vector for $pmux cell $flatten\P1.\P1.$verific$select_741$b18.vhd:1072$1733: { $flatten\P1.\P1.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$1945 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$Select_723$b18.vhd:1072$1718: { $flatten\P1.\P2.$verific$n7981$899 $flatten\P1.\P2.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$1949 $auto$opt_reduce.cc:134:opt_pmux$1947 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$Select_725$b18.vhd:1072$1720: { $flatten\P1.\P2.$verific$n7981$899 $auto$opt_reduce.cc:134:opt_pmux$1955 $auto$opt_reduce.cc:134:opt_pmux$1953 $auto$opt_reduce.cc:134:opt_pmux$1951 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$Select_731$b18.vhd:1072$1726: { $flatten\P1.\P2.$verific$n8173$920 $flatten\P1.\P2.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$1957 $flatten\P1.\P2.$verific$n7990$908 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$Select_733$b18.vhd:1072$1727: { $flatten\P1.\P2.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$1961 $auto$opt_reduce.cc:134:opt_pmux$1959 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$Select_735$b18.vhd:1072$1728: { $flatten\P1.\P2.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$1965 $auto$opt_reduce.cc:134:opt_pmux$1963 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$Select_737$b18.vhd:1072$1729: { $flatten\P1.\P2.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$1967 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$select_720$b18.vhd:1072$1715: { $flatten\P1.\P2.$verific$n7981$899 $flatten\P1.\P2.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$1977 $auto$opt_reduce.cc:134:opt_pmux$1975 $auto$opt_reduce.cc:134:opt_pmux$1973 $auto$opt_reduce.cc:134:opt_pmux$1971 $auto$opt_reduce.cc:134:opt_pmux$1969 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$select_721$b18.vhd:1072$1716: { $auto$opt_reduce.cc:134:opt_pmux$1987 $auto$opt_reduce.cc:134:opt_pmux$1985 $flatten\P1.\P2.$verific$n7987$905 $flatten\P1.\P2.$verific$n7989$907 $auto$opt_reduce.cc:134:opt_pmux$1983 $auto$opt_reduce.cc:134:opt_pmux$1981 $auto$opt_reduce.cc:134:opt_pmux$1979 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$select_726$b18.vhd:1072$1721: { $flatten\P1.\P2.$verific$n7981$899 $flatten\P1.\P2.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$1989 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$select_727$b18.vhd:1072$1722: { $flatten\P1.\P2.$verific$n7985$903 $flatten\P1.\P2.$verific$n7987$905 $flatten\P1.\P2.$verific$n7989$907 $flatten\P1.\P2.$verific$n7995$913 $auto$opt_reduce.cc:134:opt_pmux$1991 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$select_728$b18.vhd:1072$1723: { $flatten\P1.\P2.$verific$n7986$904 $flatten\P1.\P2.$verific$n7996$914 $auto$opt_reduce.cc:134:opt_pmux$1993 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$select_729$b18.vhd:1072$1724: { $flatten\P1.\P2.$verific$n7987$905 $flatten\P1.\P2.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$1997 $auto$opt_reduce.cc:134:opt_pmux$1995 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$select_738$b18.vhd:1072$1730: { $flatten\P1.\P2.$verific$n7987$905 $flatten\P1.\P2.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$1999 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$select_739$b18.vhd:1072$1731: { $flatten\P1.\P2.$verific$n7987$905 $flatten\P1.\P2.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2001 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$select_740$b18.vhd:1072$1732: { $flatten\P1.\P2.$verific$n7988$906 $flatten\P1.\P2.$verific$n7990$908 $auto$opt_reduce.cc:134:opt_pmux$2003 }
    New ctrl vector for $pmux cell $flatten\P1.\P2.$verific$select_741$b18.vhd:1072$1733: { $flatten\P1.\P2.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2005 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$Select_723$b18.vhd:1072$1718: { $flatten\P1.\P3.$verific$n7981$899 $flatten\P1.\P3.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2009 $auto$opt_reduce.cc:134:opt_pmux$2007 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$Select_725$b18.vhd:1072$1720: { $flatten\P1.\P3.$verific$n7981$899 $auto$opt_reduce.cc:134:opt_pmux$2015 $auto$opt_reduce.cc:134:opt_pmux$2013 $auto$opt_reduce.cc:134:opt_pmux$2011 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$Select_731$b18.vhd:1072$1726: { $flatten\P1.\P3.$verific$n8173$920 $flatten\P1.\P3.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2017 $flatten\P1.\P3.$verific$n7990$908 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$Select_733$b18.vhd:1072$1727: { $flatten\P1.\P3.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2021 $auto$opt_reduce.cc:134:opt_pmux$2019 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$Select_735$b18.vhd:1072$1728: { $flatten\P1.\P3.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2025 $auto$opt_reduce.cc:134:opt_pmux$2023 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$Select_737$b18.vhd:1072$1729: { $flatten\P1.\P3.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2027 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$select_720$b18.vhd:1072$1715: { $flatten\P1.\P3.$verific$n7981$899 $flatten\P1.\P3.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2037 $auto$opt_reduce.cc:134:opt_pmux$2035 $auto$opt_reduce.cc:134:opt_pmux$2033 $auto$opt_reduce.cc:134:opt_pmux$2031 $auto$opt_reduce.cc:134:opt_pmux$2029 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$select_721$b18.vhd:1072$1716: { $auto$opt_reduce.cc:134:opt_pmux$2047 $auto$opt_reduce.cc:134:opt_pmux$2045 $flatten\P1.\P3.$verific$n7987$905 $flatten\P1.\P3.$verific$n7989$907 $auto$opt_reduce.cc:134:opt_pmux$2043 $auto$opt_reduce.cc:134:opt_pmux$2041 $auto$opt_reduce.cc:134:opt_pmux$2039 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$select_726$b18.vhd:1072$1721: { $flatten\P1.\P3.$verific$n7981$899 $flatten\P1.\P3.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2049 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$select_727$b18.vhd:1072$1722: { $flatten\P1.\P3.$verific$n7985$903 $flatten\P1.\P3.$verific$n7987$905 $flatten\P1.\P3.$verific$n7989$907 $flatten\P1.\P3.$verific$n7995$913 $auto$opt_reduce.cc:134:opt_pmux$2051 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$select_728$b18.vhd:1072$1723: { $flatten\P1.\P3.$verific$n7986$904 $flatten\P1.\P3.$verific$n7996$914 $auto$opt_reduce.cc:134:opt_pmux$2053 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$select_729$b18.vhd:1072$1724: { $flatten\P1.\P3.$verific$n7987$905 $flatten\P1.\P3.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2057 $auto$opt_reduce.cc:134:opt_pmux$2055 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$select_738$b18.vhd:1072$1730: { $flatten\P1.\P3.$verific$n7987$905 $flatten\P1.\P3.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2059 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$select_739$b18.vhd:1072$1731: { $flatten\P1.\P3.$verific$n7987$905 $flatten\P1.\P3.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2061 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$select_740$b18.vhd:1072$1732: { $flatten\P1.\P3.$verific$n7988$906 $flatten\P1.\P3.$verific$n7990$908 $auto$opt_reduce.cc:134:opt_pmux$2063 }
    New ctrl vector for $pmux cell $flatten\P1.\P3.$verific$select_741$b18.vhd:1072$1733: { $flatten\P1.\P3.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2065 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$Select_723$b18.vhd:1072$1718: { $flatten\P2.\P1.$verific$n7981$899 $flatten\P2.\P1.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2069 $auto$opt_reduce.cc:134:opt_pmux$2067 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$Select_725$b18.vhd:1072$1720: { $flatten\P2.\P1.$verific$n7981$899 $auto$opt_reduce.cc:134:opt_pmux$2075 $auto$opt_reduce.cc:134:opt_pmux$2073 $auto$opt_reduce.cc:134:opt_pmux$2071 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$Select_731$b18.vhd:1072$1726: { $flatten\P2.\P1.$verific$n8173$920 $flatten\P2.\P1.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2077 $flatten\P2.\P1.$verific$n7990$908 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$Select_733$b18.vhd:1072$1727: { $flatten\P2.\P1.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2081 $auto$opt_reduce.cc:134:opt_pmux$2079 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$Select_735$b18.vhd:1072$1728: { $flatten\P2.\P1.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2085 $auto$opt_reduce.cc:134:opt_pmux$2083 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$Select_737$b18.vhd:1072$1729: { $flatten\P2.\P1.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2087 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$select_720$b18.vhd:1072$1715: { $flatten\P2.\P1.$verific$n7981$899 $flatten\P2.\P1.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2097 $auto$opt_reduce.cc:134:opt_pmux$2095 $auto$opt_reduce.cc:134:opt_pmux$2093 $auto$opt_reduce.cc:134:opt_pmux$2091 $auto$opt_reduce.cc:134:opt_pmux$2089 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$select_721$b18.vhd:1072$1716: { $auto$opt_reduce.cc:134:opt_pmux$2107 $auto$opt_reduce.cc:134:opt_pmux$2105 $flatten\P2.\P1.$verific$n7987$905 $flatten\P2.\P1.$verific$n7989$907 $auto$opt_reduce.cc:134:opt_pmux$2103 $auto$opt_reduce.cc:134:opt_pmux$2101 $auto$opt_reduce.cc:134:opt_pmux$2099 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$select_726$b18.vhd:1072$1721: { $flatten\P2.\P1.$verific$n7981$899 $flatten\P2.\P1.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2109 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$select_727$b18.vhd:1072$1722: { $flatten\P2.\P1.$verific$n7985$903 $flatten\P2.\P1.$verific$n7987$905 $flatten\P2.\P1.$verific$n7989$907 $flatten\P2.\P1.$verific$n7995$913 $auto$opt_reduce.cc:134:opt_pmux$2111 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$select_728$b18.vhd:1072$1723: { $flatten\P2.\P1.$verific$n7986$904 $flatten\P2.\P1.$verific$n7996$914 $auto$opt_reduce.cc:134:opt_pmux$2113 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$select_729$b18.vhd:1072$1724: { $flatten\P2.\P1.$verific$n7987$905 $flatten\P2.\P1.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2117 $auto$opt_reduce.cc:134:opt_pmux$2115 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$select_738$b18.vhd:1072$1730: { $flatten\P2.\P1.$verific$n7987$905 $flatten\P2.\P1.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2119 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$select_739$b18.vhd:1072$1731: { $flatten\P2.\P1.$verific$n7987$905 $flatten\P2.\P1.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2121 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$select_740$b18.vhd:1072$1732: { $flatten\P2.\P1.$verific$n7988$906 $flatten\P2.\P1.$verific$n7990$908 $auto$opt_reduce.cc:134:opt_pmux$2123 }
    New ctrl vector for $pmux cell $flatten\P2.\P1.$verific$select_741$b18.vhd:1072$1733: { $flatten\P2.\P1.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2125 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$Select_723$b18.vhd:1072$1718: { $flatten\P2.\P2.$verific$n7981$899 $flatten\P2.\P2.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2129 $auto$opt_reduce.cc:134:opt_pmux$2127 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$Select_725$b18.vhd:1072$1720: { $flatten\P2.\P2.$verific$n7981$899 $auto$opt_reduce.cc:134:opt_pmux$2135 $auto$opt_reduce.cc:134:opt_pmux$2133 $auto$opt_reduce.cc:134:opt_pmux$2131 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$Select_731$b18.vhd:1072$1726: { $flatten\P2.\P2.$verific$n8173$920 $flatten\P2.\P2.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2137 $flatten\P2.\P2.$verific$n7990$908 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$Select_733$b18.vhd:1072$1727: { $flatten\P2.\P2.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2141 $auto$opt_reduce.cc:134:opt_pmux$2139 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$Select_735$b18.vhd:1072$1728: { $flatten\P2.\P2.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2145 $auto$opt_reduce.cc:134:opt_pmux$2143 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$Select_737$b18.vhd:1072$1729: { $flatten\P2.\P2.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2147 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$select_720$b18.vhd:1072$1715: { $flatten\P2.\P2.$verific$n7981$899 $flatten\P2.\P2.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2157 $auto$opt_reduce.cc:134:opt_pmux$2155 $auto$opt_reduce.cc:134:opt_pmux$2153 $auto$opt_reduce.cc:134:opt_pmux$2151 $auto$opt_reduce.cc:134:opt_pmux$2149 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$select_721$b18.vhd:1072$1716: { $auto$opt_reduce.cc:134:opt_pmux$2167 $auto$opt_reduce.cc:134:opt_pmux$2165 $flatten\P2.\P2.$verific$n7987$905 $flatten\P2.\P2.$verific$n7989$907 $auto$opt_reduce.cc:134:opt_pmux$2163 $auto$opt_reduce.cc:134:opt_pmux$2161 $auto$opt_reduce.cc:134:opt_pmux$2159 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$select_726$b18.vhd:1072$1721: { $flatten\P2.\P2.$verific$n7981$899 $flatten\P2.\P2.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2169 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$select_727$b18.vhd:1072$1722: { $flatten\P2.\P2.$verific$n7985$903 $flatten\P2.\P2.$verific$n7987$905 $flatten\P2.\P2.$verific$n7989$907 $flatten\P2.\P2.$verific$n7995$913 $auto$opt_reduce.cc:134:opt_pmux$2171 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$select_728$b18.vhd:1072$1723: { $flatten\P2.\P2.$verific$n7986$904 $flatten\P2.\P2.$verific$n7996$914 $auto$opt_reduce.cc:134:opt_pmux$2173 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$select_729$b18.vhd:1072$1724: { $flatten\P2.\P2.$verific$n7987$905 $flatten\P2.\P2.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2177 $auto$opt_reduce.cc:134:opt_pmux$2175 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$select_738$b18.vhd:1072$1730: { $flatten\P2.\P2.$verific$n7987$905 $flatten\P2.\P2.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2179 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$select_739$b18.vhd:1072$1731: { $flatten\P2.\P2.$verific$n7987$905 $flatten\P2.\P2.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2181 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$select_740$b18.vhd:1072$1732: { $flatten\P2.\P2.$verific$n7988$906 $flatten\P2.\P2.$verific$n7990$908 $auto$opt_reduce.cc:134:opt_pmux$2183 }
    New ctrl vector for $pmux cell $flatten\P2.\P2.$verific$select_741$b18.vhd:1072$1733: { $flatten\P2.\P2.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2185 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$Select_723$b18.vhd:1072$1718: { $flatten\P2.\P3.$verific$n7981$899 $flatten\P2.\P3.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2189 $auto$opt_reduce.cc:134:opt_pmux$2187 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$Select_725$b18.vhd:1072$1720: { $flatten\P2.\P3.$verific$n7981$899 $auto$opt_reduce.cc:134:opt_pmux$2195 $auto$opt_reduce.cc:134:opt_pmux$2193 $auto$opt_reduce.cc:134:opt_pmux$2191 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$Select_731$b18.vhd:1072$1726: { $flatten\P2.\P3.$verific$n8173$920 $flatten\P2.\P3.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2197 $flatten\P2.\P3.$verific$n7990$908 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$Select_733$b18.vhd:1072$1727: { $flatten\P2.\P3.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2201 $auto$opt_reduce.cc:134:opt_pmux$2199 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$Select_735$b18.vhd:1072$1728: { $flatten\P2.\P3.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2205 $auto$opt_reduce.cc:134:opt_pmux$2203 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$Select_737$b18.vhd:1072$1729: { $flatten\P2.\P3.$verific$n8173$920 $auto$opt_reduce.cc:134:opt_pmux$2207 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$select_720$b18.vhd:1072$1715: { $flatten\P2.\P3.$verific$n7981$899 $flatten\P2.\P3.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2217 $auto$opt_reduce.cc:134:opt_pmux$2215 $auto$opt_reduce.cc:134:opt_pmux$2213 $auto$opt_reduce.cc:134:opt_pmux$2211 $auto$opt_reduce.cc:134:opt_pmux$2209 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$select_721$b18.vhd:1072$1716: { $auto$opt_reduce.cc:134:opt_pmux$2227 $auto$opt_reduce.cc:134:opt_pmux$2225 $flatten\P2.\P3.$verific$n7987$905 $flatten\P2.\P3.$verific$n7989$907 $auto$opt_reduce.cc:134:opt_pmux$2223 $auto$opt_reduce.cc:134:opt_pmux$2221 $auto$opt_reduce.cc:134:opt_pmux$2219 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$select_726$b18.vhd:1072$1721: { $flatten\P2.\P3.$verific$n7981$899 $flatten\P2.\P3.$verific$n7982$900 $auto$opt_reduce.cc:134:opt_pmux$2229 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$select_727$b18.vhd:1072$1722: { $flatten\P2.\P3.$verific$n7985$903 $flatten\P2.\P3.$verific$n7987$905 $flatten\P2.\P3.$verific$n7989$907 $flatten\P2.\P3.$verific$n7995$913 $auto$opt_reduce.cc:134:opt_pmux$2231 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$select_728$b18.vhd:1072$1723: { $flatten\P2.\P3.$verific$n7986$904 $flatten\P2.\P3.$verific$n7996$914 $auto$opt_reduce.cc:134:opt_pmux$2233 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$select_729$b18.vhd:1072$1724: { $flatten\P2.\P3.$verific$n7987$905 $flatten\P2.\P3.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2237 $auto$opt_reduce.cc:134:opt_pmux$2235 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$select_738$b18.vhd:1072$1730: { $flatten\P2.\P3.$verific$n7987$905 $flatten\P2.\P3.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2239 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$select_739$b18.vhd:1072$1731: { $flatten\P2.\P3.$verific$n7987$905 $flatten\P2.\P3.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2241 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$select_740$b18.vhd:1072$1732: { $flatten\P2.\P3.$verific$n7988$906 $flatten\P2.\P3.$verific$n7990$908 $auto$opt_reduce.cc:134:opt_pmux$2243 }
    New ctrl vector for $pmux cell $flatten\P2.\P3.$verific$select_741$b18.vhd:1072$1733: { $flatten\P2.\P3.$verific$n7988$906 $auto$opt_reduce.cc:134:opt_pmux$2245 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_746$b18.vhd:486$540: { $flatten\P3.$verific$n2255$171 $auto$opt_reduce.cc:134:opt_pmux$2247 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_750$b18.vhd:486$481: { $flatten\P3.$verific$n2256$172 $auto$opt_reduce.cc:134:opt_pmux$2249 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_751$b18.vhd:486$558: { $flatten\P3.$verific$n2257$173 $auto$opt_reduce.cc:134:opt_pmux$2251 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_752$b18.vhd:486$559: { $flatten\P3.$verific$n2258$174 $auto$opt_reduce.cc:134:opt_pmux$2253 }
    New ctrl vector for $pmux cell $flatten\P4.$verific$select_746$b18.vhd:486$540: { $flatten\P4.$verific$n2255$171 $auto$opt_reduce.cc:134:opt_pmux$2255 }
    New ctrl vector for $pmux cell $flatten\P4.$verific$select_750$b18.vhd:486$481: { $flatten\P4.$verific$n2256$172 $auto$opt_reduce.cc:134:opt_pmux$2257 }
    New ctrl vector for $pmux cell $flatten\P4.$verific$select_751$b18.vhd:486$558: { $flatten\P4.$verific$n2257$173 $auto$opt_reduce.cc:134:opt_pmux$2259 }
    New ctrl vector for $pmux cell $flatten\P4.$verific$select_752$b18.vhd:486$559: { $flatten\P4.$verific$n2258$174 $auto$opt_reduce.cc:134:opt_pmux$2261 }
  Optimizing cells in module \b18.
Performed a total of 104 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~315 debug messages>
Removed a total of 105 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P4.$verific$wr_reg$b18.vhd:505$624 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$state_reg$b18.vhd:505$626 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$reg3_reg$b18.vhd:505$621 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$reg2_reg$b18.vhd:505$620 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$reg1_reg$b18.vhd:505$619 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$reg0_reg$b18.vhd:505$618 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$rd_reg$b18.vhd:505$623 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$datao_reg$b18.vhd:505$625 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$addr_reg$b18.vhd:505$622 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$IR_reg$b18.vhd:505$615 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P4.$verific$B_reg$b18.vhd:505$617 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$wr_reg$b18.vhd:505$624 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$state_reg$b18.vhd:505$626 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$reg3_reg$b18.vhd:505$621 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$reg2_reg$b18.vhd:505$620 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$reg1_reg$b18.vhd:505$619 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$reg0_reg$b18.vhd:505$618 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$rd_reg$b18.vhd:505$623 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$datao_reg$b18.vhd:505$625 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$addr_reg$b18.vhd:505$622 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$IR_reg$b18.vhd:505$615 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P3.$verific$B_reg$b18.vhd:505$617 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$rEIP_reg$b18.vhd:1122$1861 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.$verific$buf2_reg$b18.vhd:1269$743 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.$verific$buf1_reg$b18.vhd:1248$722 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$W_R_n_reg$b18.vhd:741$1441 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$State_reg$b18.vhd:741$1445 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$StateBS16_reg$b18.vhd:741$1447 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$RequestPending_reg$b18.vhd:1122$1865 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$ReadRequest_reg$b18.vhd:1122$1863 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.uWord_reg$b18.vhd:1122$1855 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.lWord_reg$b18.vhd:1122$1854 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.State2_reg$b18.vhd:1122$1831 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.PhyAddrPointer_reg$b18.vhd:1122$1851 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.More_reg$b18.vhd:1122$1852 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_9$b18.vhd:1122$1839 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_8$b18.vhd:1122$1838 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_7$b18.vhd:1122$1837 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_6$b18.vhd:1122$1836 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_5$b18.vhd:1122$1835 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_4$b18.vhd:1122$1834 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_3$b18.vhd:1122$1833 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_2$b18.vhd:1122$1832 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_16$b18.vhd:1122$1846 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_15$b18.vhd:1122$1845 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_14$b18.vhd:1122$1844 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_13$b18.vhd:1122$1843 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_12$b18.vhd:1122$1842 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_11$b18.vhd:1122$1841 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg_10$b18.vhd:1122$1840 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueue_reg$b18.vhd:1122$1847 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.InstAddrPointer_reg$b18.vhd:1122$1850 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$P1.Flush_reg$b18.vhd:1122$1853 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$MemoryFetch_reg$b18.vhd:1122$1864 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$M_IO_n_reg$b18.vhd:741$1443 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$EBX_reg$b18.vhd:1122$1860 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$EAX_reg$b18.vhd:1122$1859 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$Datao_reg$b18.vhd:1122$1857 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$D_C_n_reg$b18.vhd:741$1442 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$CodeFetch_reg$b18.vhd:1122$1856 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$BE_n_reg$b18.vhd:741$1439 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$Address_reg$b18.vhd:741$1440 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P3.$verific$ADS_n_reg$b18.vhd:741$1444 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$rEIP_reg$b18.vhd:1122$1861 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$W_R_n_reg$b18.vhd:741$1441 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$State_reg$b18.vhd:741$1445 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$StateBS16_reg$b18.vhd:741$1447 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$RequestPending_reg$b18.vhd:1122$1865 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$ReadRequest_reg$b18.vhd:1122$1863 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.uWord_reg$b18.vhd:1122$1855 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.lWord_reg$b18.vhd:1122$1854 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.State2_reg$b18.vhd:1122$1831 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.PhyAddrPointer_reg$b18.vhd:1122$1851 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.More_reg$b18.vhd:1122$1852 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_9$b18.vhd:1122$1839 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_8$b18.vhd:1122$1838 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_7$b18.vhd:1122$1837 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_6$b18.vhd:1122$1836 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_5$b18.vhd:1122$1835 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_4$b18.vhd:1122$1834 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_3$b18.vhd:1122$1833 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_2$b18.vhd:1122$1832 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_16$b18.vhd:1122$1846 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_15$b18.vhd:1122$1845 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_14$b18.vhd:1122$1844 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_13$b18.vhd:1122$1843 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_12$b18.vhd:1122$1842 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_11$b18.vhd:1122$1841 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg_10$b18.vhd:1122$1840 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueue_reg$b18.vhd:1122$1847 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.InstAddrPointer_reg$b18.vhd:1122$1850 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$P1.Flush_reg$b18.vhd:1122$1853 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$MemoryFetch_reg$b18.vhd:1122$1864 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$M_IO_n_reg$b18.vhd:741$1443 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$EBX_reg$b18.vhd:1122$1860 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$EAX_reg$b18.vhd:1122$1859 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$Datao_reg$b18.vhd:1122$1857 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$D_C_n_reg$b18.vhd:741$1442 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$CodeFetch_reg$b18.vhd:1122$1856 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$BE_n_reg$b18.vhd:741$1439 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$Address_reg$b18.vhd:741$1440 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P2.$verific$ADS_n_reg$b18.vhd:741$1444 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$rEIP_reg$b18.vhd:1122$1861 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$W_R_n_reg$b18.vhd:741$1441 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$State_reg$b18.vhd:741$1445 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$StateBS16_reg$b18.vhd:741$1447 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$RequestPending_reg$b18.vhd:1122$1865 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$ReadRequest_reg$b18.vhd:1122$1863 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.uWord_reg$b18.vhd:1122$1855 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.lWord_reg$b18.vhd:1122$1854 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.State2_reg$b18.vhd:1122$1831 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.PhyAddrPointer_reg$b18.vhd:1122$1851 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.More_reg$b18.vhd:1122$1852 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_9$b18.vhd:1122$1839 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_8$b18.vhd:1122$1838 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_7$b18.vhd:1122$1837 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_6$b18.vhd:1122$1836 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_5$b18.vhd:1122$1835 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_4$b18.vhd:1122$1834 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_3$b18.vhd:1122$1833 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_2$b18.vhd:1122$1832 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_16$b18.vhd:1122$1846 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_15$b18.vhd:1122$1845 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_14$b18.vhd:1122$1844 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_13$b18.vhd:1122$1843 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_12$b18.vhd:1122$1842 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_11$b18.vhd:1122$1841 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg_10$b18.vhd:1122$1840 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueue_reg$b18.vhd:1122$1847 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.InstAddrPointer_reg$b18.vhd:1122$1850 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$P1.Flush_reg$b18.vhd:1122$1853 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$MemoryFetch_reg$b18.vhd:1122$1864 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$M_IO_n_reg$b18.vhd:741$1443 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$EBX_reg$b18.vhd:1122$1860 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$EAX_reg$b18.vhd:1122$1859 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$Datao_reg$b18.vhd:1122$1857 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$D_C_n_reg$b18.vhd:741$1442 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$CodeFetch_reg$b18.vhd:1122$1856 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$BE_n_reg$b18.vhd:741$1439 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$Address_reg$b18.vhd:741$1440 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.\P1.$verific$ADS_n_reg$b18.vhd:741$1444 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.$verific$ready22_reg$b18.vhd:1269$745 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.$verific$ready21_reg$b18.vhd:1269$744 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.$verific$ready12_reg$b18.vhd:1248$724 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.$verific$ready11_reg$b18.vhd:1248$723 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.$verific$buf2_reg$b18.vhd:1269$743 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P2.$verific$buf1_reg$b18.vhd:1248$722 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$rEIP_reg$b18.vhd:1122$1861 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$W_R_n_reg$b18.vhd:741$1441 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$State_reg$b18.vhd:741$1445 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$StateBS16_reg$b18.vhd:741$1447 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$RequestPending_reg$b18.vhd:1122$1865 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$ReadRequest_reg$b18.vhd:1122$1863 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.uWord_reg$b18.vhd:1122$1855 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.lWord_reg$b18.vhd:1122$1854 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.State2_reg$b18.vhd:1122$1831 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.PhyAddrPointer_reg$b18.vhd:1122$1851 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.More_reg$b18.vhd:1122$1852 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_9$b18.vhd:1122$1839 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_8$b18.vhd:1122$1838 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_7$b18.vhd:1122$1837 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_6$b18.vhd:1122$1836 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_5$b18.vhd:1122$1835 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_4$b18.vhd:1122$1834 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_3$b18.vhd:1122$1833 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_2$b18.vhd:1122$1832 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_16$b18.vhd:1122$1846 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_15$b18.vhd:1122$1845 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_14$b18.vhd:1122$1844 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_13$b18.vhd:1122$1843 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_12$b18.vhd:1122$1842 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_11$b18.vhd:1122$1841 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg_10$b18.vhd:1122$1840 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueue_reg$b18.vhd:1122$1847 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.InstAddrPointer_reg$b18.vhd:1122$1850 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$P1.Flush_reg$b18.vhd:1122$1853 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$MemoryFetch_reg$b18.vhd:1122$1864 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$M_IO_n_reg$b18.vhd:741$1443 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$EBX_reg$b18.vhd:1122$1860 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$EAX_reg$b18.vhd:1122$1859 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$Datao_reg$b18.vhd:1122$1857 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$D_C_n_reg$b18.vhd:741$1442 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$CodeFetch_reg$b18.vhd:1122$1856 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$BE_n_reg$b18.vhd:741$1439 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$Address_reg$b18.vhd:741$1440 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P3.$verific$ADS_n_reg$b18.vhd:741$1444 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$rEIP_reg$b18.vhd:1122$1861 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$W_R_n_reg$b18.vhd:741$1441 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$State_reg$b18.vhd:741$1445 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$StateBS16_reg$b18.vhd:741$1447 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$RequestPending_reg$b18.vhd:1122$1865 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$ReadRequest_reg$b18.vhd:1122$1863 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.uWord_reg$b18.vhd:1122$1855 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.lWord_reg$b18.vhd:1122$1854 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.State2_reg$b18.vhd:1122$1831 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.PhyAddrPointer_reg$b18.vhd:1122$1851 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.More_reg$b18.vhd:1122$1852 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_9$b18.vhd:1122$1839 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_8$b18.vhd:1122$1838 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_7$b18.vhd:1122$1837 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_6$b18.vhd:1122$1836 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_5$b18.vhd:1122$1835 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_4$b18.vhd:1122$1834 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_3$b18.vhd:1122$1833 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_2$b18.vhd:1122$1832 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_16$b18.vhd:1122$1846 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_15$b18.vhd:1122$1845 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_14$b18.vhd:1122$1844 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_13$b18.vhd:1122$1843 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_12$b18.vhd:1122$1842 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_11$b18.vhd:1122$1841 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg_10$b18.vhd:1122$1840 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueue_reg$b18.vhd:1122$1847 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.InstAddrPointer_reg$b18.vhd:1122$1850 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$P1.Flush_reg$b18.vhd:1122$1853 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$MemoryFetch_reg$b18.vhd:1122$1864 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$M_IO_n_reg$b18.vhd:741$1443 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$EBX_reg$b18.vhd:1122$1860 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$EAX_reg$b18.vhd:1122$1859 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$Datao_reg$b18.vhd:1122$1857 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$D_C_n_reg$b18.vhd:741$1442 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$CodeFetch_reg$b18.vhd:1122$1856 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$BE_n_reg$b18.vhd:741$1439 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$Address_reg$b18.vhd:741$1440 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P2.$verific$ADS_n_reg$b18.vhd:741$1444 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$rEIP_reg$b18.vhd:1122$1861 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$W_R_n_reg$b18.vhd:741$1441 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$State_reg$b18.vhd:741$1445 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$StateBS16_reg$b18.vhd:741$1447 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$RequestPending_reg$b18.vhd:1122$1865 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$ReadRequest_reg$b18.vhd:1122$1863 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.uWord_reg$b18.vhd:1122$1855 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.lWord_reg$b18.vhd:1122$1854 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.State2_reg$b18.vhd:1122$1831 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.PhyAddrPointer_reg$b18.vhd:1122$1851 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.More_reg$b18.vhd:1122$1852 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_9$b18.vhd:1122$1839 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_8$b18.vhd:1122$1838 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_7$b18.vhd:1122$1837 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_6$b18.vhd:1122$1836 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_5$b18.vhd:1122$1835 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_4$b18.vhd:1122$1834 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_3$b18.vhd:1122$1833 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_2$b18.vhd:1122$1832 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_16$b18.vhd:1122$1846 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_15$b18.vhd:1122$1845 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_14$b18.vhd:1122$1844 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_13$b18.vhd:1122$1843 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_12$b18.vhd:1122$1842 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_11$b18.vhd:1122$1841 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg_10$b18.vhd:1122$1840 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueue_reg$b18.vhd:1122$1847 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.InstAddrPointer_reg$b18.vhd:1122$1850 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$P1.Flush_reg$b18.vhd:1122$1853 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$MemoryFetch_reg$b18.vhd:1122$1864 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$M_IO_n_reg$b18.vhd:741$1443 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$EBX_reg$b18.vhd:1122$1860 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$EAX_reg$b18.vhd:1122$1859 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$Datao_reg$b18.vhd:1122$1857 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$D_C_n_reg$b18.vhd:741$1442 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$CodeFetch_reg$b18.vhd:1122$1856 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$BE_n_reg$b18.vhd:741$1439 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$Address_reg$b18.vhd:741$1440 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.\P1.$verific$ADS_n_reg$b18.vhd:741$1444 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.$verific$ready22_reg$b18.vhd:1269$745 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.$verific$ready21_reg$b18.vhd:1269$744 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.$verific$ready12_reg$b18.vhd:1248$724 ($aldff) from module b18.
Changing const-value async load to async reset on $flatten\P1.$verific$ready11_reg$b18.vhd:1248$723 ($aldff) from module b18.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 12 unused cells and 152 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~603 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b18.P3.d.
Found FSM state register b18.P4.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P3.d' from module `\b18'.
  found $adff cell for state register: $flatten\P3.$verific$d_reg$b18.vhd:505$616
  root of input selection tree: $flatten\P3.$verific$n11472$421
  found reset state: 0 (from async reset)
  found ctrl input: \P3.state
  found ctrl input: $flatten\P3.$verific$n341$267 [0]
  found ctrl input: $flatten\P3.$verific$n10346$238
  found ctrl input: $flatten\P3.$verific$n1405$165
  found ctrl input: $flatten\P3.$verific$n1440$166
  found ctrl input: $flatten\P3.$verific$n1474$167
  found ctrl input: $flatten\P3.$verific$n1475$168
  found ctrl input: $flatten\P3.$verific$n1476$169
  found ctrl input: $flatten\P3.$verific$n1477$170
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P3.B
  ctrl inputs: { \P3.B \P3.state $flatten\P3.$verific$n1405$165 $flatten\P3.$verific$n1440$166 $flatten\P3.$verific$n1474$167 $flatten\P3.$verific$n1475$168 $flatten\P3.$verific$n1476$169 $flatten\P3.$verific$n1477$170 $flatten\P3.$verific$n10346$238 $flatten\P3.$verific$n341$267 [0] }
  ctrl outputs: $flatten\P3.$verific$n11472$421
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P4.d' from module `\b18'.
  found $adff cell for state register: $flatten\P4.$verific$d_reg$b18.vhd:505$616
  root of input selection tree: $flatten\P4.$verific$n11472$421
  found reset state: 0 (from async reset)
  found ctrl input: \P4.state
  found ctrl input: $flatten\P4.$verific$n341$267 [0]
  found ctrl input: $flatten\P4.$verific$n10346$238
  found ctrl input: $flatten\P4.$verific$n1405$165
  found ctrl input: $flatten\P4.$verific$n1440$166
  found ctrl input: $flatten\P4.$verific$n1474$167
  found ctrl input: $flatten\P4.$verific$n1475$168
  found ctrl input: $flatten\P4.$verific$n1476$169
  found ctrl input: $flatten\P4.$verific$n1477$170
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P4.B
  ctrl inputs: { \P4.B \P4.state $flatten\P4.$verific$n1405$165 $flatten\P4.$verific$n1440$166 $flatten\P4.$verific$n1474$167 $flatten\P4.$verific$n1475$168 $flatten\P4.$verific$n1476$169 $flatten\P4.$verific$n1477$170 $flatten\P4.$verific$n10346$238 $flatten\P4.$verific$n341$267 [0] }
  ctrl outputs: $flatten\P4.$verific$n11472$421
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P4.d$2264' from module `\b18'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P3.d$2262' from module `\b18'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P3.d$2262' from module `\b18'.
Optimizing FSM `$fsm$\P4.d$2264' from module `\b18'.

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P3.d$2262' from module `\b18' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P4.d$2264' from module `\b18' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P3.d$2262' from module `b18':
-------------------------------------

  Information on FSM $fsm$\P3.d$2262 (\P3.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P3.$verific$n341$267 [0]
    1: $flatten\P3.$verific$n10346$238
    2: $flatten\P3.$verific$n1477$170
    3: $flatten\P3.$verific$n1476$169
    4: $flatten\P3.$verific$n1475$168
    5: $flatten\P3.$verific$n1474$167
    6: $flatten\P3.$verific$n1440$166
    7: $flatten\P3.$verific$n1405$165
    8: \P3.state
    9: \P3.B

  Output signals:
    0: $flatten\P3.$verific$n11472$421 [0]
    1: $flatten\P3.$verific$n11472$421 [1]
    2: $flatten\P3.$verific$n11472$421 [2]
    3: $flatten\P3.$verific$n11472$421 [3]
    4: $flatten\P3.$verific$n11472$421 [4]
    5: $flatten\P3.$verific$n11472$421 [5]
    6: $flatten\P3.$verific$n11472$421 [6]
    7: $flatten\P3.$verific$n11472$421 [7]
    8: $flatten\P3.$verific$n11472$421 [8]
    9: $flatten\P3.$verific$n11472$421 [9]
   10: $flatten\P3.$verific$n11472$421 [10]
   11: $flatten\P3.$verific$n11472$421 [11]
   12: $flatten\P3.$verific$n11472$421 [12]
   13: $flatten\P3.$verific$n11472$421 [13]
   14: $flatten\P3.$verific$n11472$421 [14]
   15: $flatten\P3.$verific$n11472$421 [15]
   16: $flatten\P3.$verific$n11472$421 [16]
   17: $flatten\P3.$verific$n11472$421 [17]
   18: $flatten\P3.$verific$n11472$421 [18]
   19: $flatten\P3.$verific$n11472$421 [19]
   20: $flatten\P3.$verific$n11472$421 [20]
   21: $flatten\P3.$verific$n11472$421 [21]
   22: $flatten\P3.$verific$n11472$421 [22]
   23: $flatten\P3.$verific$n11472$421 [23]
   24: $flatten\P3.$verific$n11472$421 [24]
   25: $flatten\P3.$verific$n11472$421 [25]
   26: $flatten\P3.$verific$n11472$421 [26]
   27: $flatten\P3.$verific$n11472$421 [27]
   28: $flatten\P3.$verific$n11472$421 [28]
   29: $flatten\P3.$verific$n11472$421 [29]
   30: $flatten\P3.$verific$n11472$421 [30]
   31: $flatten\P3.$verific$n11472$421 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P4.d$2264' from module `b18':
-------------------------------------

  Information on FSM $fsm$\P4.d$2264 (\P4.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P4.$verific$n341$267 [0]
    1: $flatten\P4.$verific$n10346$238
    2: $flatten\P4.$verific$n1477$170
    3: $flatten\P4.$verific$n1476$169
    4: $flatten\P4.$verific$n1475$168
    5: $flatten\P4.$verific$n1474$167
    6: $flatten\P4.$verific$n1440$166
    7: $flatten\P4.$verific$n1405$165
    8: \P4.state
    9: \P4.B

  Output signals:
    0: $flatten\P4.$verific$n11472$421 [0]
    1: $flatten\P4.$verific$n11472$421 [1]
    2: $flatten\P4.$verific$n11472$421 [2]
    3: $flatten\P4.$verific$n11472$421 [3]
    4: $flatten\P4.$verific$n11472$421 [4]
    5: $flatten\P4.$verific$n11472$421 [5]
    6: $flatten\P4.$verific$n11472$421 [6]
    7: $flatten\P4.$verific$n11472$421 [7]
    8: $flatten\P4.$verific$n11472$421 [8]
    9: $flatten\P4.$verific$n11472$421 [9]
   10: $flatten\P4.$verific$n11472$421 [10]
   11: $flatten\P4.$verific$n11472$421 [11]
   12: $flatten\P4.$verific$n11472$421 [12]
   13: $flatten\P4.$verific$n11472$421 [13]
   14: $flatten\P4.$verific$n11472$421 [14]
   15: $flatten\P4.$verific$n11472$421 [15]
   16: $flatten\P4.$verific$n11472$421 [16]
   17: $flatten\P4.$verific$n11472$421 [17]
   18: $flatten\P4.$verific$n11472$421 [18]
   19: $flatten\P4.$verific$n11472$421 [19]
   20: $flatten\P4.$verific$n11472$421 [20]
   21: $flatten\P4.$verific$n11472$421 [21]
   22: $flatten\P4.$verific$n11472$421 [22]
   23: $flatten\P4.$verific$n11472$421 [23]
   24: $flatten\P4.$verific$n11472$421 [24]
   25: $flatten\P4.$verific$n11472$421 [25]
   26: $flatten\P4.$verific$n11472$421 [26]
   27: $flatten\P4.$verific$n11472$421 [27]
   28: $flatten\P4.$verific$n11472$421 [28]
   29: $flatten\P4.$verific$n11472$421 [29]
   30: $flatten\P4.$verific$n11472$421 [30]
   31: $flatten\P4.$verific$n11472$421 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P3.d$2262' from module `\b18'.
Mapping FSM `$fsm$\P4.d$2264' from module `\b18'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~14 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~603 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P4.$verific$reg3_reg$b18.vhd:505$621 ($adff) from module b18 (D = $flatten\P4.$verific$n10312$391 [2:0], Q = \P4.reg3 [2:0]).
Adding EN signal on $flatten\P4.$verific$reg3_reg$b18.vhd:505$621 ($adff) from module b18 (D = $flatten\P4.$verific$n11178$416 [31:3], Q = \P4.reg3 [31:3]).
Adding EN signal on $flatten\P4.$verific$reg2_reg$b18.vhd:505$620 ($adff) from module b18 (D = $flatten\P4.$verific$n10279$390, Q = \P4.reg2).
Adding EN signal on $flatten\P4.$verific$reg1_reg$b18.vhd:505$619 ($adff) from module b18 (D = $flatten\P4.$verific$n10246$389, Q = \P4.reg1).
Adding EN signal on $flatten\P4.$verific$reg0_reg$b18.vhd:505$618 ($adff) from module b18 (D = $flatten\P4.$verific$n10213$388, Q = \P4.reg0).
Adding EN signal on $flatten\P4.$verific$datao_reg$b18.vhd:505$625 ($adff) from module b18 (D = { $flatten\P4.$verific$add_570$b18.vhd:466$549 $flatten\P4.$verific$n10514$399 [0] }, Q = \P4.datao).
Adding EN signal on $flatten\P4.$verific$B_reg$b18.vhd:505$617 ($adff) from module b18 (D = $flatten\P4.$verific$n10979$246, Q = \P4.B).
Adding EN signal on $flatten\P3.$verific$reg3_reg$b18.vhd:505$621 ($adff) from module b18 (D = $flatten\P3.$verific$n10312$391 [2:0], Q = \P3.reg3 [2:0]).
Adding EN signal on $flatten\P3.$verific$reg3_reg$b18.vhd:505$621 ($adff) from module b18 (D = $flatten\P3.$verific$n11178$416 [31:3], Q = \P3.reg3 [31:3]).
Adding EN signal on $flatten\P3.$verific$reg2_reg$b18.vhd:505$620 ($adff) from module b18 (D = $flatten\P3.$verific$n10279$390, Q = \P3.reg2).
Adding EN signal on $flatten\P3.$verific$reg1_reg$b18.vhd:505$619 ($adff) from module b18 (D = $flatten\P3.$verific$n10246$389, Q = \P3.reg1).
Adding EN signal on $flatten\P3.$verific$reg0_reg$b18.vhd:505$618 ($adff) from module b18 (D = $flatten\P3.$verific$n10213$388, Q = \P3.reg0).
Adding EN signal on $flatten\P3.$verific$datao_reg$b18.vhd:505$625 ($adff) from module b18 (D = { $flatten\P3.$verific$add_570$b18.vhd:466$549 $flatten\P3.$verific$n10514$399 [0] }, Q = \P3.datao).
Adding EN signal on $flatten\P3.$verific$B_reg$b18.vhd:505$617 ($adff) from module b18 (D = $flatten\P3.$verific$n10979$246, Q = \P3.B).
Adding EN signal on $flatten\P2.\P3.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($adff) from module b18 (D = $flatten\P2.\P3.$verific$n9780$1348, Q = \P2.P3.ByteEnable).
Adding EN signal on $flatten\P2.\P2.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($adff) from module b18 (D = $flatten\P2.\P2.$verific$n9780$1348, Q = \P2.P2.ByteEnable).
Adding EN signal on $flatten\P2.\P1.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($adff) from module b18 (D = $flatten\P2.\P1.$verific$n9780$1348, Q = \P2.P1.ByteEnable).
Adding EN signal on $flatten\P2.$verific$buf2_reg$b18.vhd:1269$743 ($adff) from module b18 (D = \P2.P2.Datao, Q = \P2.buf2).
Adding EN signal on $flatten\P2.$verific$buf1_reg$b18.vhd:1248$722 ($adff) from module b18 (D = $flatten\P2.$verific$n162$684, Q = \P2.buf1).
Adding EN signal on $flatten\P1.\P3.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($adff) from module b18 (D = $flatten\P1.\P3.$verific$n9780$1348, Q = \P1.P3.ByteEnable).
Adding EN signal on $flatten\P1.\P2.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($adff) from module b18 (D = $flatten\P1.\P2.$verific$n9780$1348, Q = \P1.P2.ByteEnable).
Adding EN signal on $flatten\P1.\P1.$verific$ByteEnable_reg$b18.vhd:1178$1883 ($adff) from module b18 (D = $flatten\P1.\P1.$verific$n9780$1348, Q = \P1.P1.ByteEnable).
Adding EN signal on $flatten\P1.$verific$buf2_reg$b18.vhd:1269$743 ($adff) from module b18 (D = \P1.P2.Datao, Q = \P1.buf2).
Adding EN signal on $flatten\P1.$verific$buf1_reg$b18.vhd:1248$722 ($adff) from module b18 (D = $flatten\P1.$verific$n162$684, Q = \P1.buf1).
Setting constant 0-bit at position 2 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 3 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 5 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 6 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 7 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 8 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 9 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 10 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 11 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 12 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 13 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 14 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 15 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 16 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 17 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 18 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 19 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 20 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 21 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 22 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 23 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 24 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 25 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 26 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 27 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 28 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 29 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 30 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P1.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P1.\P1.$verific$Datao_reg$b18.vhd:1122$1857 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P1.\P1.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($adff) from module b18.
Setting constant 0-bit at position 2 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 3 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 5 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 6 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 7 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 8 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 9 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 10 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 11 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 12 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 13 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 14 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 15 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 16 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 17 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 18 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 19 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 20 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 21 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 22 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 23 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 24 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 25 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 26 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 27 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 28 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 29 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 30 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P1.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P1.\P2.$verific$Datao_reg$b18.vhd:1122$1857 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P1.\P2.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($adff) from module b18.
Setting constant 0-bit at position 2 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 3 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 5 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 6 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 7 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 8 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 9 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 10 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 11 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 12 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 13 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 14 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 15 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 16 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 17 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 18 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 19 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 20 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 21 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 22 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 23 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 24 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 25 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 26 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 27 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 28 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 29 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 30 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P1.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P1.\P3.$verific$Datao_reg$b18.vhd:1122$1857 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P1.\P3.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($adff) from module b18.
Setting constant 0-bit at position 2 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 3 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 5 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 6 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 7 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 8 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 9 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 10 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 11 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 12 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 13 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 14 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 15 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 16 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 17 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 18 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 19 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 20 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 21 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 22 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 23 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 24 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 25 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 26 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 27 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 28 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 29 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 30 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P2.\P1.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P2.\P1.$verific$Datao_reg$b18.vhd:1122$1857 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P2.\P1.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($adff) from module b18.
Setting constant 0-bit at position 2 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 3 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 5 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 6 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 7 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 8 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 9 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 10 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 11 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 12 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 13 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 14 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 15 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 16 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 17 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 18 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 19 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 20 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 21 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 22 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 23 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 24 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 25 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 26 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 27 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 28 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 29 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 30 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P2.\P2.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P2.\P2.$verific$Datao_reg$b18.vhd:1122$1857 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P2.\P2.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($adff) from module b18.
Setting constant 0-bit at position 2 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 3 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 5 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 6 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 7 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 8 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 9 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 10 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 11 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 12 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 13 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 14 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 15 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 16 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 17 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 18 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 19 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 20 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 21 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 22 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 23 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 24 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 25 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 26 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 27 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 28 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 29 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 30 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P2.\P3.$verific$DataWidth_reg$b18.vhd:741$1448 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P2.\P3.$verific$Datao_reg$b18.vhd:1122$1857 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P2.\P3.$verific$P1.InstQueueWr_Addr_reg$b18.vhd:1122$1849 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P3.$verific$IR_reg$b18.vhd:505$615 ($adff) from module b18.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 50 unused cells and 154 unused wires.
<suppressed ~51 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~22 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~593 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2811 ($adff) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2812 ($adff) from module b18.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2814 ($adff) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2815 ($adff) from module b18.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2817 ($adff) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2818 ($adff) from module b18.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2820 ($adff) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2821 ($adff) from module b18.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2823 ($adff) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2824 ($adff) from module b18.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$2826 ($adff) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2791 ($adffe) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2792 ($adffe) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2804 ($adffe) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2805 ($adffe) from module b18.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2808 ($adff) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2809 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P1.\P1.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P1.\P2.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P1.\P3.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P2.\P1.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P2.\P2.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P2.\P3.$verific$P1.InstQueueRd_Addr_reg$b18.vhd:1122$1848 ($adff) from module b18.
Setting constant 0-bit at position 2 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 3 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 5 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 6 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 7 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 8 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 9 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 10 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 11 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 12 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 13 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 14 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 15 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 16 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 17 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 18 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 19 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 20 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 21 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 22 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 23 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 24 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 25 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 26 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 27 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 28 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 29 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 30 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P3.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P4.$verific$IR_reg$b18.vhd:505$615 ($adff) from module b18.
Setting constant 0-bit at position 2 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 3 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 4 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 5 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 6 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 7 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 8 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 9 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 10 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 11 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 12 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 13 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 14 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 15 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 16 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 17 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 18 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 19 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 20 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 21 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 22 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 23 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 24 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 25 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 26 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 27 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 28 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 29 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 30 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.
Setting constant 0-bit at position 31 on $flatten\P4.$verific$d_reg$b18.vhd:505$616 ($adff) from module b18.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 38 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~8 debug messages>

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~593 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$2750 ($adffe) from module b18.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$2750 ($adffe) from module b18.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$2751 ($adffe) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2751 ($adffe) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2758 ($adffe) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2777 ($adffe) from module b18.
Setting constant 0-bit at position 0 on $auto$fsm_map.cc:172:map_fsm$2267 ($adff) from module b18.
Setting constant 0-bit at position 1 on $auto$fsm_map.cc:172:map_fsm$2267 ($adff) from module b18.
Setting constant 0-bit at position 0 on $flatten\P3.$verific$wr_reg$b18.vhd:505$624 ($adff) from module b18.

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 52 unused cells and 65 unused wires.
<suppressed ~57 debug messages>

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~27 debug messages>

3.13.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~586 debug messages>

yosys> opt_reduce

3.13.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$2484: { $auto$fsm_map.cc:74:implement_pattern_cache$2305 $auto$fsm_map.cc:74:implement_pattern_cache$2359 $auto$fsm_map.cc:74:implement_pattern_cache$2367 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$2435: { $auto$fsm_map.cc:74:implement_pattern_cache$2332 $auto$fsm_map.cc:74:implement_pattern_cache$2359 $auto$fsm_map.cc:74:implement_pattern_cache$2367 }
  Optimizing cells in module \b18.
Performed a total of 2 changes.

yosys> opt_merge

3.13.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff -sat

3.13.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2850 ($adff) from module b18.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2850 ($adff) from module b18.

yosys> opt_clean

3.13.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 21 unused cells and 64 unused wires.
<suppressed ~26 debug messages>

yosys> opt_expr

3.13.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~1 debug messages>

3.13.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~585 debug messages>

yosys> opt_reduce

3.13.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.13.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.34. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.13.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.13.37. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~585 debug messages>

yosys> opt_reduce

3.13.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.13.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> opt_expr

3.13.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.13.44. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 32) from port B of cell b18.$verific$LessThan_27$b18.vhd:1401$102 ($lt).
Removed top 1 bits (of 32) from port B of cell b18.$verific$LessThan_31$b18.vhd:1406$105 ($lt).
Removed top 21 bits (of 40) from port Y of cell b18.$verific$mult_35$b18.vhd:1411$108 ($mul).
Removed top 32 bits (of 64) from port Y of cell b18.$verific$mult_44$b18.vhd:1419$115 ($mul).
Removed top 32 bits (of 64) from port Y of cell b18.$verific$mult_46$b18.vhd:1420$118 ($mul).
Removed top 57 bits (of 60) from port Y of cell b18.$verific$mult_48$b18.vhd:1421$121 ($mul).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P1.\P3.$verific$equal_909$b18.vhd:1144$1875 ($eq).
Removed top 1 bits (of 31) from port Y of cell b18.$flatten\P1.\P3.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 31) from port A of cell b18.$flatten\P1.\P3.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 3) from mux cell b18.$flatten\P1.\P3.$verific$mux_127$b18.vhd:725$1418 ($mux).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P3.$verific$Decoder_193$b18.vhd:815$1453 ($shl).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P3.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P1.\P3.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P1.\P3.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P3.$verific$Decoder_213$b18.vhd:818$1473 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P3.$verific$add_230$b18.vhd:819$1490 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P3.$verific$Decoder_237$b18.vhd:821$1499 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P3.$verific$add_254$b18.vhd:822$1516 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P3.$verific$Decoder_261$b18.vhd:823$1524 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P3.$verific$add_278$b18.vhd:824$1541 ($add).
Removed top 29 bits (of 30) from port B of cell b18.$flatten\P1.\P3.$verific$add_281$b18.vhd:825$1542 ($add).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P1.\P3.$verific$add_284$b18.vhd:828$1544 ($add).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.\P3.$verific$LessThan_286$b18.vhd:829$1546 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P3.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P3.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P1.\P3.$verific$add_360$b18.vhd:854$1572 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P3.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P1.\P3.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P1.\P3.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P1.\P3.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P1.\P3.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P1.\P3.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P3.$verific$LessThan_370$b18.vhd:865$1577 ($le).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P3.$verific$LessThan_373$b18.vhd:866$1579 ($lt).
Removed top 1 bits (of 9) from port A of cell b18.$flatten\P1.\P3.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 9) from port B of cell b18.$flatten\P1.\P3.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P3.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P3.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port B of cell b18.$flatten\P1.\P3.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P1.\P3.$verific$add_383$b18.vhd:870$1583 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P1.\P3.$verific$add_387$b18.vhd:870$1584 ($add).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P3.$verific$LessThan_397$b18.vhd:880$1591 ($le).
Removed top 29 bits (of 32) from port B of cell b18.$flatten\P1.\P3.$verific$add_399$b18.vhd:881$1592 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P1.\P3.$verific$add_403$b18.vhd:881$1593 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P1.\P3.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 2 bits (of 3) from port B of cell b18.$flatten\P1.\P3.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 3) from port Y of cell b18.$flatten\P1.\P3.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P3.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 3 bits (of 5) from port B of cell b18.$flatten\P1.\P3.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P1.\P3.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 7 bits (of 8) from port B of cell b18.$flatten\P1.\P3.$verific$add_426$b18.vhd:901$1604 ($add).
Removed top 1 bits (of 4) from port A of cell b18.$flatten\P1.\P3.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P3.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P3.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 2 bits (of 5) from port B of cell b18.$flatten\P1.\P3.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P1.\P3.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P3.$verific$mux_440$b18.vhd:909$1613 ($mux).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P3.$verific$LessThan_462$b18.vhd:922$1616 ($le).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.\P3.$verific$LessThan_463$b18.vhd:923$1617 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P3.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P3.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P1.\P3.$verific$add_477$b18.vhd:940$1623 ($add).
Removed top 1 bits (of 10) from mux cell b18.$flatten\P1.\P3.$verific$mux_958$b18.vhd:954$1651 ($mux).
Removed top 1 bits (of 16) from port Y of cell b18.$flatten\P1.\P3.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 16) from port A of cell b18.$flatten\P1.\P3.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P1.\P3.$verific$equal_528$b18.vhd:972$1661 ($eq).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P3.$verific$mux_573$b18.vhd:989$1678 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P1.\P3.$verific$mux_950$b18.vhd:989$1681 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P1.\P3.$verific$mux_949$b18.vhd:993$1689 ($mux).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P1.\P3.$verific$add_681$b18.vhd:1056$1690 ($add).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P1.\P3.$verific$add_689$b18.vhd:1062$1692 ($add).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P3.$verific$equal_702$b18.vhd:858$1695 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P1.\P3.$verific$equal_713$b18.vhd:1035$1706 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P1.\P3.$verific$equal_714$b18.vhd:1040$1707 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P3.$verific$equal_717$b18.vhd:1055$1710 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P3.$verific$equal_718$b18.vhd:1061$1711 ($eq).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P1.\P3.$verific$LessThan_742$b18.vhd:1073$1734 ($lt).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P1.\P3.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P3.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P1.\P3.$verific$LessThan_745$b18.vhd:1073$1737 ($lt).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.\P3.$verific$LessThan_755$b18.vhd:1089$1745 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P3.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P3.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from mux cell b18.$flatten\P1.\P3.$verific$mux_759$b18.vhd:1095$1750 ($mux).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P1.\P3.$verific$add_760$b18.vhd:1096$1752 ($add).
Removed top 1 bits (of 4) from mux cell b18.$flatten\P1.\P3.$verific$mux_764$b18.vhd:1097$1754 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P3.$verific$mux_765$b18.vhd:1098$1755 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P3.$verific$mux_766$b18.vhd:1098$1756 ($mux).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P1.\P3.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P1.\P3.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P1.\P3.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P1.\P3.$verific$LessThan_768$b18.vhd:1099$1758 ($lt).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P3.$verific$mux_770$b18.vhd:1104$1759 ($mux).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P3.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P1.\P3.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P3.$verific$mux_812$b18.vhd:1115$1796 ($mux).
Removed top 1 bits (of 33) from FF cell b18.$flatten\P1.\P3.$verific$rEIP_reg$b18.vhd:1122$1861 ($adff).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P1.\P2.$verific$equal_909$b18.vhd:1144$1875 ($eq).
Removed top 1 bits (of 31) from port Y of cell b18.$flatten\P1.\P2.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 31) from port A of cell b18.$flatten\P1.\P2.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 3) from mux cell b18.$flatten\P1.\P2.$verific$mux_127$b18.vhd:725$1418 ($mux).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P2.$verific$Decoder_193$b18.vhd:815$1453 ($shl).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P2.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P1.\P2.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P1.\P2.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P2.$verific$Decoder_213$b18.vhd:818$1473 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P2.$verific$add_230$b18.vhd:819$1490 ($add).
Removed top 8 bits (of 16) from port Y of cell b18.$flatten\P1.\P2.$verific$add_235$b18.vhd:821$1494 ($add).
Removed top 8 bits (of 16) from port A of cell b18.$flatten\P1.\P2.$verific$add_235$b18.vhd:821$1494 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P2.$verific$Decoder_237$b18.vhd:821$1499 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P2.$verific$add_254$b18.vhd:822$1516 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P2.$verific$Decoder_261$b18.vhd:823$1524 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P2.$verific$add_278$b18.vhd:824$1541 ($add).
Removed top 29 bits (of 30) from port B of cell b18.$flatten\P1.\P2.$verific$add_281$b18.vhd:825$1542 ($add).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P1.\P2.$verific$add_284$b18.vhd:828$1544 ($add).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.\P2.$verific$LessThan_286$b18.vhd:829$1546 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P2.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P2.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P1.\P2.$verific$add_360$b18.vhd:854$1572 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P2.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P1.\P2.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P1.\P2.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P1.\P2.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P1.\P2.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P1.\P2.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P2.$verific$LessThan_370$b18.vhd:865$1577 ($le).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P2.$verific$LessThan_373$b18.vhd:866$1579 ($lt).
Removed top 1 bits (of 9) from port A of cell b18.$flatten\P1.\P2.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 9) from port B of cell b18.$flatten\P1.\P2.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P2.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P2.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port B of cell b18.$flatten\P1.\P2.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P1.\P2.$verific$add_383$b18.vhd:870$1583 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P1.\P2.$verific$add_387$b18.vhd:870$1584 ($add).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P2.$verific$LessThan_397$b18.vhd:880$1591 ($le).
Removed top 29 bits (of 32) from port B of cell b18.$flatten\P1.\P2.$verific$add_399$b18.vhd:881$1592 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P1.\P2.$verific$add_403$b18.vhd:881$1593 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P1.\P2.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 2 bits (of 3) from port B of cell b18.$flatten\P1.\P2.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 3) from port Y of cell b18.$flatten\P1.\P2.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P2.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 3 bits (of 5) from port B of cell b18.$flatten\P1.\P2.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P1.\P2.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 7 bits (of 8) from port B of cell b18.$flatten\P1.\P2.$verific$add_426$b18.vhd:901$1604 ($add).
Removed top 1 bits (of 4) from port A of cell b18.$flatten\P1.\P2.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P2.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P2.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 2 bits (of 5) from port B of cell b18.$flatten\P1.\P2.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P1.\P2.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P2.$verific$mux_440$b18.vhd:909$1613 ($mux).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P2.$verific$LessThan_462$b18.vhd:922$1616 ($le).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.\P2.$verific$LessThan_463$b18.vhd:923$1617 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P2.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P2.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P1.\P2.$verific$add_477$b18.vhd:940$1623 ($add).
Removed top 1 bits (of 10) from mux cell b18.$flatten\P1.\P2.$verific$mux_958$b18.vhd:954$1651 ($mux).
Removed top 1 bits (of 16) from port Y of cell b18.$flatten\P1.\P2.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 16) from port A of cell b18.$flatten\P1.\P2.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P1.\P2.$verific$equal_528$b18.vhd:972$1661 ($eq).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P2.$verific$mux_573$b18.vhd:989$1678 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P1.\P2.$verific$mux_950$b18.vhd:989$1681 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P1.\P2.$verific$mux_949$b18.vhd:993$1689 ($mux).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P1.\P2.$verific$add_681$b18.vhd:1056$1690 ($add).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P1.\P2.$verific$add_689$b18.vhd:1062$1692 ($add).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P2.$verific$equal_702$b18.vhd:858$1695 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P1.\P2.$verific$equal_713$b18.vhd:1035$1706 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P1.\P2.$verific$equal_714$b18.vhd:1040$1707 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P2.$verific$equal_717$b18.vhd:1055$1710 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P2.$verific$equal_718$b18.vhd:1061$1711 ($eq).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P1.\P2.$verific$LessThan_742$b18.vhd:1073$1734 ($lt).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P1.\P2.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P2.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P1.\P2.$verific$LessThan_745$b18.vhd:1073$1737 ($lt).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.\P2.$verific$LessThan_755$b18.vhd:1089$1745 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P2.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P2.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from mux cell b18.$flatten\P1.\P2.$verific$mux_759$b18.vhd:1095$1750 ($mux).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P1.\P2.$verific$add_760$b18.vhd:1096$1752 ($add).
Removed top 1 bits (of 4) from mux cell b18.$flatten\P1.\P2.$verific$mux_764$b18.vhd:1097$1754 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P2.$verific$mux_765$b18.vhd:1098$1755 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P2.$verific$mux_766$b18.vhd:1098$1756 ($mux).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P1.\P2.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P1.\P2.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P1.\P2.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P1.\P2.$verific$LessThan_768$b18.vhd:1099$1758 ($lt).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P2.$verific$mux_770$b18.vhd:1104$1759 ($mux).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P2.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P1.\P2.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P2.$verific$mux_812$b18.vhd:1115$1796 ($mux).
Removed top 1 bits (of 33) from FF cell b18.$flatten\P1.\P2.$verific$rEIP_reg$b18.vhd:1122$1861 ($adff).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P1.\P1.$verific$equal_909$b18.vhd:1144$1875 ($eq).
Removed top 30 bits (of 32) from mux cell b18.$flatten\P1.\P1.$verific$mux_98$b18.vhd:691$1408 ($mux).
Removed top 1 bits (of 31) from port Y of cell b18.$flatten\P1.\P1.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 31) from port A of cell b18.$flatten\P1.\P1.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 3) from mux cell b18.$flatten\P1.\P1.$verific$mux_127$b18.vhd:725$1418 ($mux).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P1.$verific$Decoder_193$b18.vhd:815$1453 ($shl).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P1.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P1.\P1.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P1.\P1.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P1.$verific$Decoder_213$b18.vhd:818$1473 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P1.$verific$add_230$b18.vhd:819$1490 ($add).
Removed top 8 bits (of 16) from port Y of cell b18.$flatten\P1.\P1.$verific$add_235$b18.vhd:821$1494 ($add).
Removed top 8 bits (of 16) from port A of cell b18.$flatten\P1.\P1.$verific$add_235$b18.vhd:821$1494 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P1.$verific$Decoder_237$b18.vhd:821$1499 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P1.$verific$add_254$b18.vhd:822$1516 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P1.\P1.$verific$Decoder_261$b18.vhd:823$1524 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P1.$verific$add_278$b18.vhd:824$1541 ($add).
Removed top 29 bits (of 30) from port B of cell b18.$flatten\P1.\P1.$verific$add_281$b18.vhd:825$1542 ($add).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P1.\P1.$verific$add_284$b18.vhd:828$1544 ($add).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.\P1.$verific$LessThan_286$b18.vhd:829$1546 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P1.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P1.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P1.\P1.$verific$add_360$b18.vhd:854$1572 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P1.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P1.\P1.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P1.\P1.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P1.\P1.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P1.\P1.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P1.\P1.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P1.$verific$LessThan_370$b18.vhd:865$1577 ($le).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P1.$verific$LessThan_373$b18.vhd:866$1579 ($lt).
Removed top 1 bits (of 9) from port A of cell b18.$flatten\P1.\P1.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 9) from port B of cell b18.$flatten\P1.\P1.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P1.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P1.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port B of cell b18.$flatten\P1.\P1.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P1.\P1.$verific$add_383$b18.vhd:870$1583 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P1.\P1.$verific$add_387$b18.vhd:870$1584 ($add).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P1.$verific$LessThan_397$b18.vhd:880$1591 ($le).
Removed top 29 bits (of 32) from port B of cell b18.$flatten\P1.\P1.$verific$add_399$b18.vhd:881$1592 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P1.\P1.$verific$add_403$b18.vhd:881$1593 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P1.\P1.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 2 bits (of 3) from port B of cell b18.$flatten\P1.\P1.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 3) from port Y of cell b18.$flatten\P1.\P1.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P1.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 3 bits (of 5) from port B of cell b18.$flatten\P1.\P1.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P1.\P1.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 7 bits (of 8) from port B of cell b18.$flatten\P1.\P1.$verific$add_426$b18.vhd:901$1604 ($add).
Removed top 1 bits (of 4) from port A of cell b18.$flatten\P1.\P1.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P1.\P1.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P1.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 2 bits (of 5) from port B of cell b18.$flatten\P1.\P1.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P1.\P1.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P1.$verific$mux_440$b18.vhd:909$1613 ($mux).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P1.$verific$LessThan_462$b18.vhd:922$1616 ($le).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.\P1.$verific$LessThan_463$b18.vhd:923$1617 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P1.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P1.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P1.\P1.$verific$add_477$b18.vhd:940$1623 ($add).
Removed top 1 bits (of 10) from mux cell b18.$flatten\P1.\P1.$verific$mux_958$b18.vhd:954$1651 ($mux).
Removed top 1 bits (of 16) from port Y of cell b18.$flatten\P1.\P1.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 16) from port A of cell b18.$flatten\P1.\P1.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P1.\P1.$verific$equal_528$b18.vhd:972$1661 ($eq).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P1.$verific$mux_573$b18.vhd:989$1678 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P1.\P1.$verific$mux_950$b18.vhd:989$1681 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P1.\P1.$verific$mux_949$b18.vhd:993$1689 ($mux).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P1.\P1.$verific$add_681$b18.vhd:1056$1690 ($add).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P1.\P1.$verific$add_689$b18.vhd:1062$1692 ($add).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P1.$verific$equal_702$b18.vhd:858$1695 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P1.\P1.$verific$equal_713$b18.vhd:1035$1706 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P1.\P1.$verific$equal_714$b18.vhd:1040$1707 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P1.$verific$equal_717$b18.vhd:1055$1710 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P1.$verific$equal_718$b18.vhd:1061$1711 ($eq).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P1.\P1.$verific$LessThan_742$b18.vhd:1073$1734 ($lt).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P1.\P1.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P1.\P1.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P1.\P1.$verific$LessThan_745$b18.vhd:1073$1737 ($lt).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.\P1.$verific$LessThan_755$b18.vhd:1089$1745 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P1.\P1.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P1.\P1.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from mux cell b18.$flatten\P1.\P1.$verific$mux_759$b18.vhd:1095$1750 ($mux).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P1.\P1.$verific$add_760$b18.vhd:1096$1752 ($add).
Removed top 1 bits (of 4) from mux cell b18.$flatten\P1.\P1.$verific$mux_764$b18.vhd:1097$1754 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P1.$verific$mux_765$b18.vhd:1098$1755 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P1.$verific$mux_766$b18.vhd:1098$1756 ($mux).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P1.\P1.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P1.\P1.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P1.\P1.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P1.\P1.$verific$LessThan_768$b18.vhd:1099$1758 ($lt).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P1.$verific$mux_770$b18.vhd:1104$1759 ($mux).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P1.\P1.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P1.\P1.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P1.\P1.$verific$mux_812$b18.vhd:1115$1796 ($mux).
Removed top 1 bits (of 33) from FF cell b18.$flatten\P1.\P1.$verific$rEIP_reg$b18.vhd:1122$1861 ($adff).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.$verific$LessThan_86$b18.vhd:1292$751 ($lt).
Removed top 1 bits (of 32) from port B of cell b18.$flatten\P1.$verific$LessThan_86$b18.vhd:1292$751 ($lt).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.$verific$LessThan_85$b18.vhd:1292$750 ($lt).
Removed top 1 bits (of 32) from port B of cell b18.$flatten\P1.$verific$LessThan_85$b18.vhd:1292$750 ($lt).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P1.$verific$LessThan_84$b18.vhd:1292$749 ($lt).
Removed top 1 bits (of 32) from port B of cell b18.$flatten\P1.$verific$LessThan_84$b18.vhd:1292$749 ($lt).
Removed top 1 bits (of 32) from mux cell b18.$flatten\P1.$verific$mux_83$b18.vhd:1287$748 ($mux).
Removed top 1 bits (of 32) from mux cell b18.$flatten\P1.$verific$mux_33$b18.vhd:1247$718 ($mux).
Removed top 1 bits (of 32) from mux cell b18.$flatten\P1.$verific$mux_32$b18.vhd:1247$717 ($mux).
Removed top 1 bits (of 5) from port B of cell b18.$auto$fsm_map.cc:77:implement_pattern_cache$2676 ($eq).
Removed top 1 bits (of 6) from port B of cell b18.$auto$fsm_map.cc:77:implement_pattern_cache$2666 ($eq).
Removed top 3 bits (of 29) from FF cell b18.$auto$ff.cc:262:slice$2711 ($adffe).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P2.\P3.$verific$equal_909$b18.vhd:1144$1875 ($eq).
Removed top 1 bits (of 31) from port Y of cell b18.$flatten\P2.\P3.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 31) from port A of cell b18.$flatten\P2.\P3.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 3) from mux cell b18.$flatten\P2.\P3.$verific$mux_127$b18.vhd:725$1418 ($mux).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P3.$verific$Decoder_193$b18.vhd:815$1453 ($shl).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P3.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P2.\P3.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P2.\P3.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P3.$verific$Decoder_213$b18.vhd:818$1473 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P3.$verific$add_230$b18.vhd:819$1490 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P3.$verific$Decoder_237$b18.vhd:821$1499 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P3.$verific$add_254$b18.vhd:822$1516 ($add).
Removed top 1 bits (of 27) from FF cell b18.$auto$ff.cc:262:slice$2853 ($adffe).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P3.$verific$Decoder_261$b18.vhd:823$1524 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P3.$verific$add_278$b18.vhd:824$1541 ($add).
Removed top 29 bits (of 30) from port B of cell b18.$flatten\P2.\P3.$verific$add_281$b18.vhd:825$1542 ($add).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P2.\P3.$verific$add_284$b18.vhd:828$1544 ($add).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.\P3.$verific$LessThan_286$b18.vhd:829$1546 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P3.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P3.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P2.\P3.$verific$add_360$b18.vhd:854$1572 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P3.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P2.\P3.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P2.\P3.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P2.\P3.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P2.\P3.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P2.\P3.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P3.$verific$LessThan_370$b18.vhd:865$1577 ($le).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P3.$verific$LessThan_373$b18.vhd:866$1579 ($lt).
Removed top 1 bits (of 9) from port A of cell b18.$flatten\P2.\P3.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 9) from port B of cell b18.$flatten\P2.\P3.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P3.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P3.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port B of cell b18.$flatten\P2.\P3.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P2.\P3.$verific$add_383$b18.vhd:870$1583 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P2.\P3.$verific$add_387$b18.vhd:870$1584 ($add).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P3.$verific$LessThan_397$b18.vhd:880$1591 ($le).
Removed top 29 bits (of 32) from port B of cell b18.$flatten\P2.\P3.$verific$add_399$b18.vhd:881$1592 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P2.\P3.$verific$add_403$b18.vhd:881$1593 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P2.\P3.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 2 bits (of 3) from port B of cell b18.$flatten\P2.\P3.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 3) from port Y of cell b18.$flatten\P2.\P3.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P3.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 3 bits (of 5) from port B of cell b18.$flatten\P2.\P3.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P2.\P3.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 7 bits (of 8) from port B of cell b18.$flatten\P2.\P3.$verific$add_426$b18.vhd:901$1604 ($add).
Removed top 1 bits (of 4) from port A of cell b18.$flatten\P2.\P3.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P3.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P3.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 2 bits (of 5) from port B of cell b18.$flatten\P2.\P3.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P2.\P3.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P3.$verific$mux_440$b18.vhd:909$1613 ($mux).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P3.$verific$LessThan_462$b18.vhd:922$1616 ($le).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.\P3.$verific$LessThan_463$b18.vhd:923$1617 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P3.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P3.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P2.\P3.$verific$add_477$b18.vhd:940$1623 ($add).
Removed top 1 bits (of 10) from mux cell b18.$flatten\P2.\P3.$verific$mux_958$b18.vhd:954$1651 ($mux).
Removed top 1 bits (of 16) from port Y of cell b18.$flatten\P2.\P3.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 16) from port A of cell b18.$flatten\P2.\P3.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P2.\P3.$verific$equal_528$b18.vhd:972$1661 ($eq).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P3.$verific$mux_573$b18.vhd:989$1678 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P2.\P3.$verific$mux_950$b18.vhd:989$1681 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P2.\P3.$verific$mux_949$b18.vhd:993$1689 ($mux).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P2.\P3.$verific$add_681$b18.vhd:1056$1690 ($add).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P2.\P3.$verific$add_689$b18.vhd:1062$1692 ($add).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P3.$verific$equal_702$b18.vhd:858$1695 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P2.\P3.$verific$equal_713$b18.vhd:1035$1706 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P2.\P3.$verific$equal_714$b18.vhd:1040$1707 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P3.$verific$equal_717$b18.vhd:1055$1710 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P3.$verific$equal_718$b18.vhd:1061$1711 ($eq).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P2.\P3.$verific$LessThan_742$b18.vhd:1073$1734 ($lt).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P2.\P3.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P3.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P2.\P3.$verific$LessThan_745$b18.vhd:1073$1737 ($lt).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.\P3.$verific$LessThan_755$b18.vhd:1089$1745 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P3.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P3.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from mux cell b18.$flatten\P2.\P3.$verific$mux_759$b18.vhd:1095$1750 ($mux).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P2.\P3.$verific$add_760$b18.vhd:1096$1752 ($add).
Removed top 1 bits (of 4) from mux cell b18.$flatten\P2.\P3.$verific$mux_764$b18.vhd:1097$1754 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P3.$verific$mux_765$b18.vhd:1098$1755 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P3.$verific$mux_766$b18.vhd:1098$1756 ($mux).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P2.\P3.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P2.\P3.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P2.\P3.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P2.\P3.$verific$LessThan_768$b18.vhd:1099$1758 ($lt).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P3.$verific$mux_770$b18.vhd:1104$1759 ($mux).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P3.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P2.\P3.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P3.$verific$mux_812$b18.vhd:1115$1796 ($mux).
Removed top 1 bits (of 33) from FF cell b18.$flatten\P2.\P3.$verific$rEIP_reg$b18.vhd:1122$1861 ($adff).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P2.\P2.$verific$equal_909$b18.vhd:1144$1875 ($eq).
Removed top 1 bits (of 31) from port Y of cell b18.$flatten\P2.\P2.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 31) from port A of cell b18.$flatten\P2.\P2.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 3) from mux cell b18.$flatten\P2.\P2.$verific$mux_127$b18.vhd:725$1418 ($mux).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P2.$verific$Decoder_193$b18.vhd:815$1453 ($shl).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P2.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P2.\P2.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P2.\P2.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P2.$verific$Decoder_213$b18.vhd:818$1473 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P2.$verific$add_230$b18.vhd:819$1490 ($add).
Removed top 8 bits (of 16) from port Y of cell b18.$flatten\P2.\P2.$verific$add_235$b18.vhd:821$1494 ($add).
Removed top 8 bits (of 16) from port A of cell b18.$flatten\P2.\P2.$verific$add_235$b18.vhd:821$1494 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P2.$verific$Decoder_237$b18.vhd:821$1499 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P2.$verific$add_254$b18.vhd:822$1516 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P2.$verific$Decoder_261$b18.vhd:823$1524 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P2.$verific$add_278$b18.vhd:824$1541 ($add).
Removed top 29 bits (of 30) from port B of cell b18.$flatten\P2.\P2.$verific$add_281$b18.vhd:825$1542 ($add).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P2.\P2.$verific$add_284$b18.vhd:828$1544 ($add).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.\P2.$verific$LessThan_286$b18.vhd:829$1546 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P2.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P2.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P2.\P2.$verific$add_360$b18.vhd:854$1572 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P2.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P2.\P2.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P2.\P2.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P2.\P2.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P2.\P2.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P2.\P2.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P2.$verific$LessThan_370$b18.vhd:865$1577 ($le).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P2.$verific$LessThan_373$b18.vhd:866$1579 ($lt).
Removed top 1 bits (of 9) from port A of cell b18.$flatten\P2.\P2.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 9) from port B of cell b18.$flatten\P2.\P2.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P2.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P2.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port B of cell b18.$flatten\P2.\P2.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P2.\P2.$verific$add_383$b18.vhd:870$1583 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P2.\P2.$verific$add_387$b18.vhd:870$1584 ($add).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P2.$verific$LessThan_397$b18.vhd:880$1591 ($le).
Removed top 29 bits (of 32) from port B of cell b18.$flatten\P2.\P2.$verific$add_399$b18.vhd:881$1592 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P2.\P2.$verific$add_403$b18.vhd:881$1593 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P2.\P2.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 2 bits (of 3) from port B of cell b18.$flatten\P2.\P2.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 3) from port Y of cell b18.$flatten\P2.\P2.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P2.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 3 bits (of 5) from port B of cell b18.$flatten\P2.\P2.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P2.\P2.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 7 bits (of 8) from port B of cell b18.$flatten\P2.\P2.$verific$add_426$b18.vhd:901$1604 ($add).
Removed top 1 bits (of 4) from port A of cell b18.$flatten\P2.\P2.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P2.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P2.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 2 bits (of 5) from port B of cell b18.$flatten\P2.\P2.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P2.\P2.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P2.$verific$mux_440$b18.vhd:909$1613 ($mux).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P2.$verific$LessThan_462$b18.vhd:922$1616 ($le).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.\P2.$verific$LessThan_463$b18.vhd:923$1617 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P2.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P2.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P2.\P2.$verific$add_477$b18.vhd:940$1623 ($add).
Removed top 1 bits (of 10) from mux cell b18.$flatten\P2.\P2.$verific$mux_958$b18.vhd:954$1651 ($mux).
Removed top 1 bits (of 16) from port Y of cell b18.$flatten\P2.\P2.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 16) from port A of cell b18.$flatten\P2.\P2.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P2.\P2.$verific$equal_528$b18.vhd:972$1661 ($eq).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P2.$verific$mux_573$b18.vhd:989$1678 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P2.\P2.$verific$mux_950$b18.vhd:989$1681 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P2.\P2.$verific$mux_949$b18.vhd:993$1689 ($mux).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P2.\P2.$verific$add_681$b18.vhd:1056$1690 ($add).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P2.\P2.$verific$add_689$b18.vhd:1062$1692 ($add).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P2.$verific$equal_702$b18.vhd:858$1695 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P2.\P2.$verific$equal_713$b18.vhd:1035$1706 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P2.\P2.$verific$equal_714$b18.vhd:1040$1707 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P2.$verific$equal_717$b18.vhd:1055$1710 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P2.$verific$equal_718$b18.vhd:1061$1711 ($eq).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P2.\P2.$verific$LessThan_742$b18.vhd:1073$1734 ($lt).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P2.\P2.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P2.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P2.\P2.$verific$LessThan_745$b18.vhd:1073$1737 ($lt).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.\P2.$verific$LessThan_755$b18.vhd:1089$1745 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P2.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P2.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from mux cell b18.$flatten\P2.\P2.$verific$mux_759$b18.vhd:1095$1750 ($mux).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P2.\P2.$verific$add_760$b18.vhd:1096$1752 ($add).
Removed top 1 bits (of 4) from mux cell b18.$flatten\P2.\P2.$verific$mux_764$b18.vhd:1097$1754 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P2.$verific$mux_765$b18.vhd:1098$1755 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P2.$verific$mux_766$b18.vhd:1098$1756 ($mux).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P2.\P2.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P2.\P2.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P2.\P2.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P2.\P2.$verific$LessThan_768$b18.vhd:1099$1758 ($lt).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P2.$verific$mux_770$b18.vhd:1104$1759 ($mux).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P2.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P2.\P2.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P2.$verific$mux_812$b18.vhd:1115$1796 ($mux).
Removed top 1 bits (of 33) from FF cell b18.$flatten\P2.\P2.$verific$rEIP_reg$b18.vhd:1122$1861 ($adff).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P2.\P1.$verific$equal_909$b18.vhd:1144$1875 ($eq).
Removed top 1 bits (of 31) from port Y of cell b18.$flatten\P2.\P1.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 31) from port A of cell b18.$flatten\P2.\P1.$verific$add_113$b18.vhd:707$1412 ($add).
Removed top 1 bits (of 3) from mux cell b18.$flatten\P2.\P1.$verific$mux_127$b18.vhd:725$1418 ($mux).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P1.$verific$Decoder_193$b18.vhd:815$1453 ($shl).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P1.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P2.\P1.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P2.\P1.$verific$add_210$b18.vhd:816$1470 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P1.$verific$Decoder_213$b18.vhd:818$1473 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P1.$verific$add_230$b18.vhd:819$1490 ($add).
Removed top 8 bits (of 16) from port Y of cell b18.$flatten\P2.\P1.$verific$add_235$b18.vhd:821$1494 ($add).
Removed top 8 bits (of 16) from port A of cell b18.$flatten\P2.\P1.$verific$add_235$b18.vhd:821$1494 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P1.$verific$Decoder_237$b18.vhd:821$1499 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P1.$verific$add_254$b18.vhd:822$1516 ($add).
Removed top 15 bits (of 16) from port A of cell b18.$flatten\P2.\P1.$verific$Decoder_261$b18.vhd:823$1524 ($shl).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P1.$verific$add_278$b18.vhd:824$1541 ($add).
Removed top 29 bits (of 30) from port B of cell b18.$flatten\P2.\P1.$verific$add_281$b18.vhd:825$1542 ($add).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P2.\P1.$verific$add_284$b18.vhd:828$1544 ($add).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.\P1.$verific$LessThan_286$b18.vhd:829$1546 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P1.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P1.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P2.\P1.$verific$add_360$b18.vhd:854$1572 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P1.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 4 bits (of 5) from port B of cell b18.$flatten\P2.\P1.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P2.\P1.$verific$add_362$b18.vhd:855$1574 ($add).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P2.\P1.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P2.\P1.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P2.\P1.$verific$sub_369$b18.vhd:865$1576 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P1.$verific$LessThan_370$b18.vhd:865$1577 ($le).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P1.$verific$LessThan_373$b18.vhd:866$1579 ($lt).
Removed top 1 bits (of 9) from port A of cell b18.$flatten\P2.\P1.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 9) from port B of cell b18.$flatten\P2.\P1.$verific$sub_378$b18.vhd:867$1580 ($sub).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P1.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P1.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 1 bits (of 33) from port B of cell b18.$flatten\P2.\P1.$verific$sub_379$b18.vhd:867$1581 ($sub).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P2.\P1.$verific$add_383$b18.vhd:870$1583 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P2.\P1.$verific$add_387$b18.vhd:870$1584 ($add).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P1.$verific$LessThan_397$b18.vhd:880$1591 ($le).
Removed top 29 bits (of 32) from port B of cell b18.$flatten\P2.\P1.$verific$add_399$b18.vhd:881$1592 ($add).
Removed top 24 bits (of 32) from port B of cell b18.$flatten\P2.\P1.$verific$add_403$b18.vhd:881$1593 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P2.\P1.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 2 bits (of 3) from port B of cell b18.$flatten\P2.\P1.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 3) from port Y of cell b18.$flatten\P2.\P1.$verific$add_422$b18.vhd:901$1598 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P1.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 3 bits (of 5) from port B of cell b18.$flatten\P2.\P1.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P2.\P1.$verific$add_424$b18.vhd:901$1601 ($add).
Removed top 7 bits (of 8) from port B of cell b18.$flatten\P2.\P1.$verific$add_426$b18.vhd:901$1604 ($add).
Removed top 1 bits (of 4) from port A of cell b18.$flatten\P2.\P1.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 3 bits (of 4) from port B of cell b18.$flatten\P2.\P1.$verific$add_427$b18.vhd:901$1605 ($add).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P1.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 2 bits (of 5) from port B of cell b18.$flatten\P2.\P1.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from port Y of cell b18.$flatten\P2.\P1.$verific$add_435$b18.vhd:905$1608 ($add).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P1.$verific$mux_440$b18.vhd:909$1613 ($mux).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P1.$verific$LessThan_462$b18.vhd:922$1616 ($le).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.\P1.$verific$LessThan_463$b18.vhd:923$1617 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P1.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P1.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
Removed top 30 bits (of 31) from port B of cell b18.$flatten\P2.\P1.$verific$add_477$b18.vhd:940$1623 ($add).
Removed top 1 bits (of 10) from mux cell b18.$flatten\P2.\P1.$verific$mux_958$b18.vhd:954$1651 ($mux).
Removed top 1 bits (of 16) from port Y of cell b18.$flatten\P2.\P1.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 16) from port A of cell b18.$flatten\P2.\P1.$verific$add_522$b18.vhd:967$1656 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P2.\P1.$verific$equal_528$b18.vhd:972$1661 ($eq).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P1.$verific$mux_573$b18.vhd:989$1678 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P2.\P1.$verific$mux_950$b18.vhd:989$1681 ($mux).
Removed top 1 bits (of 64) from mux cell b18.$flatten\P2.\P1.$verific$mux_949$b18.vhd:993$1689 ($mux).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P2.\P1.$verific$add_681$b18.vhd:1056$1690 ($add).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P2.\P1.$verific$add_689$b18.vhd:1062$1692 ($add).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P1.$verific$equal_702$b18.vhd:858$1695 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P2.\P1.$verific$equal_713$b18.vhd:1035$1706 ($eq).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P2.\P1.$verific$equal_714$b18.vhd:1040$1707 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P1.$verific$equal_717$b18.vhd:1055$1710 ($eq).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P1.$verific$equal_718$b18.vhd:1061$1711 ($eq).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P2.\P1.$verific$LessThan_742$b18.vhd:1073$1734 ($lt).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P2.\P1.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port B of cell b18.$flatten\P2.\P1.$verific$sub_744$b18.vhd:1073$1736 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P2.\P1.$verific$LessThan_745$b18.vhd:1073$1737 ($lt).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.\P1.$verific$LessThan_755$b18.vhd:1089$1745 ($lt).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P2.\P1.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P2.\P1.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from mux cell b18.$flatten\P2.\P1.$verific$mux_759$b18.vhd:1095$1750 ($mux).
Removed top 1 bits (of 2) from port A of cell b18.$flatten\P2.\P1.$verific$add_760$b18.vhd:1096$1752 ($add).
Removed top 1 bits (of 4) from mux cell b18.$flatten\P2.\P1.$verific$mux_764$b18.vhd:1097$1754 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P1.$verific$mux_765$b18.vhd:1098$1755 ($mux).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P1.$verific$mux_766$b18.vhd:1098$1756 ($mux).
Removed top 2 bits (of 6) from port A of cell b18.$flatten\P2.\P1.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 2 bits (of 6) from port B of cell b18.$flatten\P2.\P1.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port Y of cell b18.$flatten\P2.\P1.$verific$sub_767$b18.vhd:1099$1757 ($sub).
Removed top 1 bits (of 6) from port A of cell b18.$flatten\P2.\P1.$verific$LessThan_768$b18.vhd:1099$1758 ($lt).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P1.$verific$mux_770$b18.vhd:1104$1759 ($mux).
Removed top 1 bits (of 5) from port A of cell b18.$flatten\P2.\P1.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from port B of cell b18.$flatten\P2.\P1.$verific$LessThan_771$b18.vhd:1107$1760 ($le).
Removed top 1 bits (of 5) from mux cell b18.$flatten\P2.\P1.$verific$mux_812$b18.vhd:1115$1796 ($mux).
Removed top 1 bits (of 33) from FF cell b18.$flatten\P2.\P1.$verific$rEIP_reg$b18.vhd:1122$1861 ($adff).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.$verific$LessThan_86$b18.vhd:1292$751 ($lt).
Removed top 1 bits (of 32) from port B of cell b18.$flatten\P2.$verific$LessThan_86$b18.vhd:1292$751 ($lt).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.$verific$LessThan_85$b18.vhd:1292$750 ($lt).
Removed top 1 bits (of 32) from port B of cell b18.$flatten\P2.$verific$LessThan_85$b18.vhd:1292$750 ($lt).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P2.$verific$LessThan_84$b18.vhd:1292$749 ($lt).
Removed top 1 bits (of 32) from port B of cell b18.$flatten\P2.$verific$LessThan_84$b18.vhd:1292$749 ($lt).
Removed top 1 bits (of 32) from mux cell b18.$flatten\P2.$verific$mux_83$b18.vhd:1287$748 ($mux).
Removed top 1 bits (of 32) from mux cell b18.$flatten\P2.$verific$mux_33$b18.vhd:1247$718 ($mux).
Removed top 1 bits (of 32) from mux cell b18.$flatten\P2.$verific$mux_32$b18.vhd:1247$717 ($mux).
Removed top 12 bits (of 32) from mux cell b18.$flatten\P3.$verific$mux_705$b18.vhd:504$605 ($mux).
Removed top 3 bits (of 32) from mux cell b18.$flatten\P3.$verific$mux_698$b18.vhd:502$599 ($mux).
Removed top 3 bits (of 32) from mux cell b18.$flatten\P3.$verific$mux_679$b18.vhd:501$585 ($mux).
Removed top 3 bits (of 33) from port Y of cell b18.$flatten\P3.$verific$sub_365$b18.vhd:358$543 ($sub).
Removed top 3 bits (of 33) from port A of cell b18.$flatten\P3.$verific$sub_365$b18.vhd:358$543 ($sub).
Removed top 3 bits (of 33) from port B of cell b18.$flatten\P3.$verific$sub_365$b18.vhd:358$543 ($sub).
Removed top 2 bits (of 32) from port Y of cell b18.$flatten\P3.$verific$add_283$b18.vhd:318$541 ($add).
Removed top 2 bits (of 32) from port A of cell b18.$flatten\P3.$verific$add_283$b18.vhd:318$541 ($add).
Removed top 2 bits (of 32) from port B of cell b18.$flatten\P3.$verific$add_283$b18.vhd:318$541 ($add).
Removed top 30 bits (of 32) from port A of cell b18.$flatten\P3.$verific$equal_179$b18.vhd:246$535 ($eq).
Removed top 30 bits (of 32) from port A of cell b18.$flatten\P3.$verific$equal_178$b18.vhd:245$534 ($eq).
Removed top 31 bits (of 32) from port A of cell b18.$flatten\P3.$verific$equal_177$b18.vhd:244$533 ($eq).
Removed top 32 bits (of 33) from port A of cell b18.$flatten\P3.$verific$sub_168$b18.vhd:243$530 ($sub).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P3.$verific$sub_168$b18.vhd:243$530 ($sub).
Removed top 1 bits (of 33) from port B of cell b18.$flatten\P3.$verific$sub_168$b18.vhd:243$530 ($sub).
Removed top 31 bits (of 32) from mux cell b18.$flatten\P3.$verific$mux_146$b18.vhd:226$525 ($mux).
Removed top 2 bits (of 3) from port A of cell b18.$flatten\P3.$verific$equal_143$b18.vhd:224$522 ($eq).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P3.$verific$equal_142$b18.vhd:223$521 ($eq).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P3.$verific$equal_141$b18.vhd:221$520 ($eq).
Removed top 1 bits (of 3) from port Y of cell b18.$flatten\P3.$verific$add_44$b18.vhd:96$476 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P3.$verific$add_44$b18.vhd:96$476 ($add).
Removed top 25 bits (of 26) from port B of cell b18.$flatten\P3.$verific$add_39$b18.vhd:95$472 ($add).
Removed top 8 bits (of 9) from port Y of cell b18.$flatten\P3.$verific$add_36$b18.vhd:92$466 ($add).
Removed top 8 bits (of 9) from port A of cell b18.$flatten\P3.$verific$add_36$b18.vhd:92$466 ($add).
Removed top 9 bits (of 13) from port Y of cell b18.$flatten\P3.$verific$add_31$b18.vhd:90$459 ($add).
Removed top 9 bits (of 13) from port A of cell b18.$flatten\P3.$verific$add_31$b18.vhd:90$459 ($add).
Removed top 5 bits (of 8) from port Y of cell b18.$flatten\P3.$verific$add_26$b18.vhd:88$452 ($add).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P3.$verific$add_26$b18.vhd:88$452 ($add).
Removed top 3 bits (of 5) from port Y of cell b18.$flatten\P3.$verific$add_21$b18.vhd:86$445 ($add).
Removed top 3 bits (of 5) from port A of cell b18.$flatten\P3.$verific$add_21$b18.vhd:86$445 ($add).
Removed top 13 bits (of 33) from port A of cell b18.$flatten\P3.$verific$unary_minus_15$b18.vhd:84$439 ($neg).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P3.$verific$unary_minus_15$b18.vhd:84$439 ($neg).
Removed top 12 bits (of 32) from port A of cell b18.$flatten\P3.$verific$LessThan_14$b18.vhd:83$438 ($lt).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P3.$verific$LessThan_14$b18.vhd:83$438 ($lt).
Removed top 1 bits (of 2) from port B of cell b18.$auto$fsm_map.cc:215:map_fsm$2489 ($eq).
Removed top 1 bits (of 32) from mux cell b18.$flatten\P4.$verific$mux_705$b18.vhd:504$605 ($mux).
Removed top 3 bits (of 32) from mux cell b18.$flatten\P4.$verific$mux_698$b18.vhd:502$599 ($mux).
Removed top 3 bits (of 32) from mux cell b18.$flatten\P4.$verific$mux_679$b18.vhd:501$585 ($mux).
Removed top 3 bits (of 33) from port Y of cell b18.$flatten\P4.$verific$sub_365$b18.vhd:358$543 ($sub).
Removed top 3 bits (of 33) from port A of cell b18.$flatten\P4.$verific$sub_365$b18.vhd:358$543 ($sub).
Removed top 3 bits (of 33) from port B of cell b18.$flatten\P4.$verific$sub_365$b18.vhd:358$543 ($sub).
Removed top 2 bits (of 32) from port Y of cell b18.$flatten\P4.$verific$add_283$b18.vhd:318$541 ($add).
Removed top 2 bits (of 32) from port A of cell b18.$flatten\P4.$verific$add_283$b18.vhd:318$541 ($add).
Removed top 2 bits (of 32) from port B of cell b18.$flatten\P4.$verific$add_283$b18.vhd:318$541 ($add).
Removed top 30 bits (of 32) from port A of cell b18.$flatten\P4.$verific$equal_179$b18.vhd:246$535 ($eq).
Removed top 30 bits (of 32) from port A of cell b18.$flatten\P4.$verific$equal_178$b18.vhd:245$534 ($eq).
Removed top 31 bits (of 32) from port A of cell b18.$flatten\P4.$verific$equal_177$b18.vhd:244$533 ($eq).
Removed top 32 bits (of 33) from port A of cell b18.$flatten\P4.$verific$sub_168$b18.vhd:243$530 ($sub).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P4.$verific$sub_168$b18.vhd:243$530 ($sub).
Removed top 1 bits (of 33) from port B of cell b18.$flatten\P4.$verific$sub_168$b18.vhd:243$530 ($sub).
Removed top 30 bits (of 32) from mux cell b18.$flatten\P4.$verific$mux_145$b18.vhd:226$524 ($mux).
Removed top 2 bits (of 3) from port A of cell b18.$flatten\P4.$verific$equal_143$b18.vhd:224$522 ($eq).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P4.$verific$equal_142$b18.vhd:223$521 ($eq).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P4.$verific$equal_141$b18.vhd:221$520 ($eq).
Removed top 30 bits (of 32) from mux cell b18.$flatten\P4.$verific$mux_140$b18.vhd:220$519 ($mux).
Removed top 30 bits (of 32) from mux cell b18.$flatten\P4.$verific$mux_138$b18.vhd:216$517 ($mux).
Removed top 2 bits (of 33) from port B of cell b18.$flatten\P4.$verific$sub_84$b18.vhd:149$499 ($sub).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P4.$verific$sub_84$b18.vhd:149$499 ($sub).
Removed top 1 bits (of 33) from port A of cell b18.$flatten\P4.$verific$sub_84$b18.vhd:149$499 ($sub).
Removed top 1 bits (of 32) from port B of cell b18.$flatten\P4.$verific$LessThan_83$b18.vhd:148$498 ($lt).
Removed top 12 bits (of 32) from port A of cell b18.$flatten\P4.$verific$add_61$b18.vhd:113$486 ($add).
Removed top 12 bits (of 32) from port Y of cell b18.$flatten\P4.$verific$add_61$b18.vhd:113$486 ($add).
Removed top 12 bits (of 32) from port B of cell b18.$flatten\P4.$verific$add_61$b18.vhd:113$486 ($add).
Removed top 12 bits (of 32) from port A of cell b18.$flatten\P4.$verific$add_56$b18.vhd:110$484 ($add).
Removed top 12 bits (of 32) from port Y of cell b18.$flatten\P4.$verific$add_56$b18.vhd:110$484 ($add).
Removed top 12 bits (of 32) from port B of cell b18.$flatten\P4.$verific$add_56$b18.vhd:110$484 ($add).
Removed top 1 bits (of 3) from port Y of cell b18.$flatten\P4.$verific$add_44$b18.vhd:96$476 ($add).
Removed top 1 bits (of 3) from port A of cell b18.$flatten\P4.$verific$add_44$b18.vhd:96$476 ($add).
Removed top 25 bits (of 26) from port B of cell b18.$flatten\P4.$verific$add_39$b18.vhd:95$472 ($add).
Removed top 8 bits (of 9) from port Y of cell b18.$flatten\P4.$verific$add_36$b18.vhd:92$466 ($add).
Removed top 8 bits (of 9) from port A of cell b18.$flatten\P4.$verific$add_36$b18.vhd:92$466 ($add).
Removed top 9 bits (of 13) from port Y of cell b18.$flatten\P4.$verific$add_31$b18.vhd:90$459 ($add).
Removed top 9 bits (of 13) from port A of cell b18.$flatten\P4.$verific$add_31$b18.vhd:90$459 ($add).
Removed top 5 bits (of 8) from port Y of cell b18.$flatten\P4.$verific$add_26$b18.vhd:88$452 ($add).
Removed top 5 bits (of 8) from port A of cell b18.$flatten\P4.$verific$add_26$b18.vhd:88$452 ($add).
Removed top 3 bits (of 5) from port Y of cell b18.$flatten\P4.$verific$add_21$b18.vhd:86$445 ($add).
Removed top 3 bits (of 5) from port A of cell b18.$flatten\P4.$verific$add_21$b18.vhd:86$445 ($add).
Removed top 2 bits (of 33) from port A of cell b18.$flatten\P4.$verific$unary_minus_15$b18.vhd:84$439 ($neg).
Removed top 1 bits (of 33) from port Y of cell b18.$flatten\P4.$verific$unary_minus_15$b18.vhd:84$439 ($neg).
Removed top 1 bits (of 32) from port A of cell b18.$flatten\P4.$verific$LessThan_14$b18.vhd:83$438 ($lt).
Removed top 31 bits (of 32) from port B of cell b18.$flatten\P4.$verific$LessThan_14$b18.vhd:83$438 ($lt).
Removed top 30 bits (of 32) from port Y of cell b18.$flatten\P1.\P3.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from port A of cell b18.$flatten\P1.\P3.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P1.\P2.$verific$add_259$b18.vhd:823$1520 ($add).
Removed top 30 bits (of 32) from port Y of cell b18.$flatten\P1.\P2.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from port A of cell b18.$flatten\P1.\P2.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from port Y of cell b18.$flatten\P1.\P1.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from port A of cell b18.$flatten\P1.\P1.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from port Y of cell b18.$flatten\P2.\P3.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from port A of cell b18.$flatten\P2.\P3.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 1 bits (of 8) from port A of cell b18.$flatten\P2.\P2.$verific$add_259$b18.vhd:823$1520 ($add).
Removed top 30 bits (of 32) from port Y of cell b18.$flatten\P2.\P2.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from port A of cell b18.$flatten\P2.\P2.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from port Y of cell b18.$flatten\P2.\P1.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 30 bits (of 32) from port A of cell b18.$flatten\P2.\P1.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
Removed top 1 bits (of 32) from wire b18.$flatten\P1.$verific$n129$683.
Removed top 1 bits (of 32) from wire b18.$flatten\P1.$verific$n162$684.
Removed top 30 bits (of 32) from wire b18.$flatten\P1.\P1.$verific$n1001$981.
Removed top 1 bits (of 31) from wire b18.$flatten\P1.\P1.$verific$n1151$986.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P1.$verific$n2071$1024.
Removed top 8 bits (of 16) from wire b18.$flatten\P1.\P1.$verific$n2267$1045.
Removed top 1 bits (of 33) from wire b18.$flatten\P1.\P1.$verific$n2793$1091.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P1.$verific$n3660$1118.
Removed top 1 bits (of 33) from wire b18.$flatten\P1.\P1.$verific$n3837$1125.
Removed top 1 bits (of 3) from wire b18.$flatten\P1.\P1.$verific$n4619$1146.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P1.$verific$n4633$1148.
Removed top 1 bits (of 4) from wire b18.$flatten\P1.\P1.$verific$n4659$1151.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P1.$verific$n4791$1155.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P1.$verific$n4869$1159.
Removed top 1 bits (of 33) from wire b18.$flatten\P1.\P1.$verific$n5140$1162.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P1.$verific$n5695$1181.
Removed top 1 bits (of 16) from wire b18.$flatten\P1.\P1.$verific$n5974$1192.
Removed top 1 bits (of 32) from wire b18.$flatten\P1.\P1.$verific$n6324$1199.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P1.$verific$n6434$1203.
Removed top 1 bits (of 32) from wire b18.$flatten\P1.\P1.$verific$n6510$1207.
Removed top 31 bits (of 33) from wire b18.$flatten\P1.\P1.$verific$n8312$1257.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P1.$verific$n8841$1303.
Removed top 1 bits (of 31) from wire b18.$flatten\P1.\P2.$verific$n1151$986.
Removed top 1 bits (of 3) from wire b18.$flatten\P1.\P2.$verific$n1294$991.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P2.$verific$n2071$1024.
Removed top 8 bits (of 16) from wire b18.$flatten\P1.\P2.$verific$n2267$1045.
Removed top 1 bits (of 33) from wire b18.$flatten\P1.\P2.$verific$n2793$1091.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P2.$verific$n3660$1118.
Removed top 1 bits (of 33) from wire b18.$flatten\P1.\P2.$verific$n3837$1125.
Removed top 1 bits (of 3) from wire b18.$flatten\P1.\P2.$verific$n4619$1146.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P2.$verific$n4633$1148.
Removed top 1 bits (of 4) from wire b18.$flatten\P1.\P2.$verific$n4659$1151.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P2.$verific$n4791$1155.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P2.$verific$n4869$1159.
Removed top 1 bits (of 33) from wire b18.$flatten\P1.\P2.$verific$n5140$1162.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P2.$verific$n5695$1181.
Removed top 1 bits (of 16) from wire b18.$flatten\P1.\P2.$verific$n5974$1192.
Removed top 1 bits (of 32) from wire b18.$flatten\P1.\P2.$verific$n6324$1199.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P2.$verific$n6434$1203.
Removed top 1 bits (of 32) from wire b18.$flatten\P1.\P2.$verific$n6510$1207.
Removed top 31 bits (of 33) from wire b18.$flatten\P1.\P2.$verific$n8312$1257.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P2.$verific$n8841$1303.
Removed top 1 bits (of 31) from wire b18.$flatten\P1.\P3.$verific$n1151$986.
Removed top 1 bits (of 3) from wire b18.$flatten\P1.\P3.$verific$n1294$991.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P3.$verific$n2071$1024.
Removed top 1 bits (of 33) from wire b18.$flatten\P1.\P3.$verific$n2793$1091.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P3.$verific$n3660$1118.
Removed top 1 bits (of 33) from wire b18.$flatten\P1.\P3.$verific$n3837$1125.
Removed top 1 bits (of 3) from wire b18.$flatten\P1.\P3.$verific$n4619$1146.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P3.$verific$n4633$1148.
Removed top 1 bits (of 4) from wire b18.$flatten\P1.\P3.$verific$n4659$1151.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P3.$verific$n4791$1155.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P3.$verific$n4869$1159.
Removed top 1 bits (of 33) from wire b18.$flatten\P1.\P3.$verific$n5140$1162.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P3.$verific$n5695$1181.
Removed top 1 bits (of 16) from wire b18.$flatten\P1.\P3.$verific$n5974$1192.
Removed top 1 bits (of 32) from wire b18.$flatten\P1.\P3.$verific$n6324$1199.
Removed top 1 bits (of 5) from wire b18.$flatten\P1.\P3.$verific$n6434$1203.
Removed top 1 bits (of 32) from wire b18.$flatten\P1.\P3.$verific$n6510$1207.
Removed top 31 bits (of 33) from wire b18.$flatten\P1.\P3.$verific$n8312$1257.
Removed top 1 bits (of 32) from wire b18.$flatten\P2.$verific$n129$683.
Removed top 1 bits (of 32) from wire b18.$flatten\P2.$verific$n162$684.
Removed top 1 bits (of 31) from wire b18.$flatten\P2.\P1.$verific$n1151$986.
Removed top 1 bits (of 3) from wire b18.$flatten\P2.\P1.$verific$n1294$991.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P1.$verific$n2071$1024.
Removed top 8 bits (of 16) from wire b18.$flatten\P2.\P1.$verific$n2267$1045.
Removed top 1 bits (of 33) from wire b18.$flatten\P2.\P1.$verific$n2793$1091.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P1.$verific$n3660$1118.
Removed top 1 bits (of 33) from wire b18.$flatten\P2.\P1.$verific$n3837$1125.
Removed top 1 bits (of 3) from wire b18.$flatten\P2.\P1.$verific$n4619$1146.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P1.$verific$n4633$1148.
Removed top 1 bits (of 4) from wire b18.$flatten\P2.\P1.$verific$n4659$1151.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P1.$verific$n4791$1155.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P1.$verific$n4869$1159.
Removed top 1 bits (of 33) from wire b18.$flatten\P2.\P1.$verific$n5140$1162.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P1.$verific$n5695$1181.
Removed top 1 bits (of 16) from wire b18.$flatten\P2.\P1.$verific$n5974$1192.
Removed top 1 bits (of 32) from wire b18.$flatten\P2.\P1.$verific$n6324$1199.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P1.$verific$n6434$1203.
Removed top 1 bits (of 32) from wire b18.$flatten\P2.\P1.$verific$n6510$1207.
Removed top 31 bits (of 33) from wire b18.$flatten\P2.\P1.$verific$n8312$1257.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P1.$verific$n8841$1303.
Removed top 1 bits (of 31) from wire b18.$flatten\P2.\P2.$verific$n1151$986.
Removed top 1 bits (of 3) from wire b18.$flatten\P2.\P2.$verific$n1294$991.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P2.$verific$n2071$1024.
Removed top 8 bits (of 16) from wire b18.$flatten\P2.\P2.$verific$n2267$1045.
Removed top 1 bits (of 33) from wire b18.$flatten\P2.\P2.$verific$n2793$1091.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P2.$verific$n3660$1118.
Removed top 1 bits (of 33) from wire b18.$flatten\P2.\P2.$verific$n3837$1125.
Removed top 1 bits (of 3) from wire b18.$flatten\P2.\P2.$verific$n4619$1146.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P2.$verific$n4633$1148.
Removed top 1 bits (of 4) from wire b18.$flatten\P2.\P2.$verific$n4659$1151.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P2.$verific$n4791$1155.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P2.$verific$n4869$1159.
Removed top 1 bits (of 33) from wire b18.$flatten\P2.\P2.$verific$n5140$1162.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P2.$verific$n5695$1181.
Removed top 1 bits (of 16) from wire b18.$flatten\P2.\P2.$verific$n5974$1192.
Removed top 1 bits (of 32) from wire b18.$flatten\P2.\P2.$verific$n6324$1199.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P2.$verific$n6434$1203.
Removed top 1 bits (of 32) from wire b18.$flatten\P2.\P2.$verific$n6510$1207.
Removed top 31 bits (of 33) from wire b18.$flatten\P2.\P2.$verific$n8312$1257.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P2.$verific$n8841$1303.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P3.$verific$n2071$1024.
Removed top 1 bits (of 33) from wire b18.$flatten\P2.\P3.$verific$n2793$1091.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P3.$verific$n3660$1118.
Removed top 1 bits (of 33) from wire b18.$flatten\P2.\P3.$verific$n3837$1125.
Removed top 1 bits (of 3) from wire b18.$flatten\P2.\P3.$verific$n4619$1146.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P3.$verific$n4633$1148.
Removed top 1 bits (of 4) from wire b18.$flatten\P2.\P3.$verific$n4659$1151.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P3.$verific$n4791$1155.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P3.$verific$n4869$1159.
Removed top 1 bits (of 33) from wire b18.$flatten\P2.\P3.$verific$n5140$1162.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P3.$verific$n5695$1181.
Removed top 1 bits (of 16) from wire b18.$flatten\P2.\P3.$verific$n5974$1192.
Removed top 1 bits (of 32) from wire b18.$flatten\P2.\P3.$verific$n6324$1199.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P3.$verific$n6434$1203.
Removed top 1 bits (of 32) from wire b18.$flatten\P2.\P3.$verific$n6510$1207.
Removed top 31 bits (of 33) from wire b18.$flatten\P2.\P3.$verific$n8312$1257.
Removed top 1 bits (of 5) from wire b18.$flatten\P2.\P3.$verific$n8841$1303.
Removed top 3 bits (of 4) from wire b18.$flatten\P2.\P3.$verific$n8847$1304.
Removed top 1 bits (of 20) from wire b18.$flatten\P3.$verific$n10390$392.
Removed top 3 bits (of 32) from wire b18.$flatten\P3.$verific$n10755$407.
Removed top 3 bits (of 32) from wire b18.$flatten\P3.$verific$n11178$416.
Removed top 12 bits (of 32) from wire b18.$flatten\P3.$verific$n11301$419.
Removed top 31 bits (of 32) from wire b18.$flatten\P3.$verific$n1511$292.
Removed top 1 bits (of 33) from wire b18.$flatten\P3.$verific$n184$258.
Removed top 1 bits (of 33) from wire b18.$flatten\P3.$verific$n1987$302.
Removed top 30 bits (of 32) from wire b18.$flatten\P3.$verific$n2260$304.
Removed top 2 bits (of 32) from wire b18.$flatten\P3.$verific$n4241$335.
Removed top 2 bits (of 32) from wire b18.$flatten\P3.$verific$n4511$337.
Removed top 2 bits (of 32) from wire b18.$flatten\P3.$verific$n4577$339.
Removed top 3 bits (of 33) from wire b18.$flatten\P3.$verific$n5666$349.
Removed top 8 bits (of 32) from wire b18.$flatten\P3.$verific$n5931$351.
Removed top 1 bits (of 32) from wire b18.$flatten\P3.$verific$n862$284.
Removed top 20 bits (of 21) from wire b18.$flatten\P4.$verific$n10477$396.
Removed top 3 bits (of 32) from wire b18.$flatten\P4.$verific$n10755$407.
Removed top 5 bits (of 20) from wire b18.$flatten\P4.$verific$n10957$410.
Removed top 8 bits (of 32) from wire b18.$flatten\P4.$verific$n11178$416.
Removed top 5 bits (of 20) from wire b18.$flatten\P4.$verific$n11246$418.
Removed top 2 bits (of 32) from wire b18.$flatten\P4.$verific$n11301$419.
Removed top 30 bits (of 32) from wire b18.$flatten\P4.$verific$n1407$289.
Removed top 31 bits (of 32) from wire b18.$flatten\P4.$verific$n1441$290.
Removed top 30 bits (of 32) from wire b18.$flatten\P4.$verific$n1478$291.
Removed top 1 bits (of 33) from wire b18.$flatten\P4.$verific$n184$258.
Removed top 1 bits (of 33) from wire b18.$flatten\P4.$verific$n1987$302.
Removed top 2 bits (of 32) from wire b18.$flatten\P4.$verific$n2260$304.
Removed top 2 bits (of 32) from wire b18.$flatten\P4.$verific$n2293$305.
Removed top 2 bits (of 32) from wire b18.$flatten\P4.$verific$n2326$306.
Removed top 2 bits (of 32) from wire b18.$flatten\P4.$verific$n2359$307.
Removed top 3 bits (of 5) from wire b18.$flatten\P4.$verific$n288$261.
Removed top 5 bits (of 8) from wire b18.$flatten\P4.$verific$n301$263.
Removed top 2 bits (of 32) from wire b18.$flatten\P4.$verific$n4241$335.
Removed top 9 bits (of 32) from wire b18.$flatten\P4.$verific$n4511$337.
Removed top 1 bits (of 32) from wire b18.$flatten\P4.$verific$n4544$338.
Removed top 9 bits (of 32) from wire b18.$flatten\P4.$verific$n4577$339.
Removed top 7 bits (of 30) from wire b18.$flatten\P4.$verific$n4610$340.
Removed top 8 bits (of 20) from wire b18.$flatten\P4.$verific$n4930$344.
Removed top 7 bits (of 20) from wire b18.$flatten\P4.$verific$n5644$348.
Removed top 6 bits (of 33) from wire b18.$flatten\P4.$verific$n5666$349.
Removed top 12 bits (of 32) from wire b18.$flatten\P4.$verific$n5931$351.
Removed top 12 bits (of 32) from wire b18.$flatten\P4.$verific$n5964$352.
Removed top 1 bits (of 32) from wire b18.$flatten\P4.$verific$n862$284.
Removed top 4 bits (of 20) from wire b18.$flatten\P4.$verific$n895$285.
Removed top 1 bits (of 33) from wire b18.$flatten\P4.$verific$n933$286.
Removed top 12 bits (of 32) from wire b18.di3.
Removed top 1 bits (of 32) from wire b18.do1.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 220 unused cells and 631 unused wires.
<suppressed ~221 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b18:
  creating $macc model for $flatten\P1.\P1.$verific$add_113$b18.vhd:707$1412 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_210$b18.vhd:816$1470 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_230$b18.vhd:819$1490 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_235$b18.vhd:821$1494 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_254$b18.vhd:822$1516 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_259$b18.vhd:823$1520 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_278$b18.vhd:824$1541 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_28$b18.vhd:635$1362 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_281$b18.vhd:825$1542 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_284$b18.vhd:828$1544 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_360$b18.vhd:854$1572 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_362$b18.vhd:855$1574 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_383$b18.vhd:870$1583 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_387$b18.vhd:870$1584 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_399$b18.vhd:881$1592 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_403$b18.vhd:881$1593 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_422$b18.vhd:901$1598 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_424$b18.vhd:901$1601 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_426$b18.vhd:901$1604 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_427$b18.vhd:901$1605 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_435$b18.vhd:905$1608 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_477$b18.vhd:940$1623 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_522$b18.vhd:967$1656 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_681$b18.vhd:1056$1690 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_689$b18.vhd:1062$1692 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$add_760$b18.vhd:1096$1752 ($add).
  creating $macc model for $flatten\P1.\P1.$verific$sub_369$b18.vhd:865$1576 ($sub).
  creating $macc model for $flatten\P1.\P1.$verific$sub_378$b18.vhd:867$1580 ($sub).
  creating $macc model for $flatten\P1.\P1.$verific$sub_379$b18.vhd:867$1581 ($sub).
  creating $macc model for $flatten\P1.\P1.$verific$sub_744$b18.vhd:1073$1736 ($sub).
  creating $macc model for $flatten\P1.\P1.$verific$sub_767$b18.vhd:1099$1757 ($sub).
  creating $macc model for $flatten\P1.\P1.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
  creating $macc model for $flatten\P1.\P1.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
  creating $macc model for $flatten\P1.\P1.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
  creating $macc model for $flatten\P1.\P2.$verific$add_113$b18.vhd:707$1412 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_210$b18.vhd:816$1470 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_230$b18.vhd:819$1490 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_235$b18.vhd:821$1494 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_254$b18.vhd:822$1516 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_259$b18.vhd:823$1520 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_278$b18.vhd:824$1541 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_28$b18.vhd:635$1362 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_281$b18.vhd:825$1542 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_284$b18.vhd:828$1544 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_360$b18.vhd:854$1572 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_362$b18.vhd:855$1574 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_383$b18.vhd:870$1583 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_387$b18.vhd:870$1584 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_399$b18.vhd:881$1592 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_403$b18.vhd:881$1593 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_422$b18.vhd:901$1598 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_424$b18.vhd:901$1601 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_426$b18.vhd:901$1604 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_427$b18.vhd:901$1605 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_435$b18.vhd:905$1608 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_477$b18.vhd:940$1623 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_522$b18.vhd:967$1656 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_681$b18.vhd:1056$1690 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_689$b18.vhd:1062$1692 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$add_760$b18.vhd:1096$1752 ($add).
  creating $macc model for $flatten\P1.\P2.$verific$sub_369$b18.vhd:865$1576 ($sub).
  creating $macc model for $flatten\P1.\P2.$verific$sub_378$b18.vhd:867$1580 ($sub).
  creating $macc model for $flatten\P1.\P2.$verific$sub_379$b18.vhd:867$1581 ($sub).
  creating $macc model for $flatten\P1.\P2.$verific$sub_744$b18.vhd:1073$1736 ($sub).
  creating $macc model for $flatten\P1.\P2.$verific$sub_767$b18.vhd:1099$1757 ($sub).
  creating $macc model for $flatten\P1.\P2.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
  creating $macc model for $flatten\P1.\P2.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
  creating $macc model for $flatten\P1.\P2.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
  creating $macc model for $flatten\P1.\P3.$verific$add_113$b18.vhd:707$1412 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_210$b18.vhd:816$1470 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_230$b18.vhd:819$1490 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_254$b18.vhd:822$1516 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_278$b18.vhd:824$1541 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_28$b18.vhd:635$1362 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_281$b18.vhd:825$1542 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_284$b18.vhd:828$1544 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_360$b18.vhd:854$1572 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_362$b18.vhd:855$1574 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_383$b18.vhd:870$1583 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_387$b18.vhd:870$1584 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_399$b18.vhd:881$1592 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_403$b18.vhd:881$1593 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_422$b18.vhd:901$1598 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_424$b18.vhd:901$1601 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_426$b18.vhd:901$1604 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_427$b18.vhd:901$1605 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_435$b18.vhd:905$1608 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_477$b18.vhd:940$1623 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_522$b18.vhd:967$1656 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_681$b18.vhd:1056$1690 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_689$b18.vhd:1062$1692 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$add_760$b18.vhd:1096$1752 ($add).
  creating $macc model for $flatten\P1.\P3.$verific$sub_369$b18.vhd:865$1576 ($sub).
  creating $macc model for $flatten\P1.\P3.$verific$sub_378$b18.vhd:867$1580 ($sub).
  creating $macc model for $flatten\P1.\P3.$verific$sub_379$b18.vhd:867$1581 ($sub).
  creating $macc model for $flatten\P1.\P3.$verific$sub_744$b18.vhd:1073$1736 ($sub).
  creating $macc model for $flatten\P1.\P3.$verific$sub_767$b18.vhd:1099$1757 ($sub).
  creating $macc model for $flatten\P1.\P3.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
  creating $macc model for $flatten\P1.\P3.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
  creating $macc model for $flatten\P1.\P3.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
  creating $macc model for $flatten\P2.\P1.$verific$add_113$b18.vhd:707$1412 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_210$b18.vhd:816$1470 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_230$b18.vhd:819$1490 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_235$b18.vhd:821$1494 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_254$b18.vhd:822$1516 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_259$b18.vhd:823$1520 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_278$b18.vhd:824$1541 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_28$b18.vhd:635$1362 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_281$b18.vhd:825$1542 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_284$b18.vhd:828$1544 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_360$b18.vhd:854$1572 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_362$b18.vhd:855$1574 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_383$b18.vhd:870$1583 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_387$b18.vhd:870$1584 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_399$b18.vhd:881$1592 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_403$b18.vhd:881$1593 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_422$b18.vhd:901$1598 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_424$b18.vhd:901$1601 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_426$b18.vhd:901$1604 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_427$b18.vhd:901$1605 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_435$b18.vhd:905$1608 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_477$b18.vhd:940$1623 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_522$b18.vhd:967$1656 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_681$b18.vhd:1056$1690 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_689$b18.vhd:1062$1692 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$add_760$b18.vhd:1096$1752 ($add).
  creating $macc model for $flatten\P2.\P1.$verific$sub_369$b18.vhd:865$1576 ($sub).
  creating $macc model for $flatten\P2.\P1.$verific$sub_378$b18.vhd:867$1580 ($sub).
  creating $macc model for $flatten\P2.\P1.$verific$sub_379$b18.vhd:867$1581 ($sub).
  creating $macc model for $flatten\P2.\P1.$verific$sub_744$b18.vhd:1073$1736 ($sub).
  creating $macc model for $flatten\P2.\P1.$verific$sub_767$b18.vhd:1099$1757 ($sub).
  creating $macc model for $flatten\P2.\P1.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
  creating $macc model for $flatten\P2.\P1.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
  creating $macc model for $flatten\P2.\P1.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
  creating $macc model for $flatten\P2.\P2.$verific$add_113$b18.vhd:707$1412 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_210$b18.vhd:816$1470 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_230$b18.vhd:819$1490 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_235$b18.vhd:821$1494 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_254$b18.vhd:822$1516 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_259$b18.vhd:823$1520 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_278$b18.vhd:824$1541 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_28$b18.vhd:635$1362 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_281$b18.vhd:825$1542 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_284$b18.vhd:828$1544 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_360$b18.vhd:854$1572 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_362$b18.vhd:855$1574 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_383$b18.vhd:870$1583 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_387$b18.vhd:870$1584 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_399$b18.vhd:881$1592 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_403$b18.vhd:881$1593 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_422$b18.vhd:901$1598 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_424$b18.vhd:901$1601 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_426$b18.vhd:901$1604 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_427$b18.vhd:901$1605 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_435$b18.vhd:905$1608 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_477$b18.vhd:940$1623 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_522$b18.vhd:967$1656 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_681$b18.vhd:1056$1690 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_689$b18.vhd:1062$1692 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$add_760$b18.vhd:1096$1752 ($add).
  creating $macc model for $flatten\P2.\P2.$verific$sub_369$b18.vhd:865$1576 ($sub).
  creating $macc model for $flatten\P2.\P2.$verific$sub_378$b18.vhd:867$1580 ($sub).
  creating $macc model for $flatten\P2.\P2.$verific$sub_379$b18.vhd:867$1581 ($sub).
  creating $macc model for $flatten\P2.\P2.$verific$sub_744$b18.vhd:1073$1736 ($sub).
  creating $macc model for $flatten\P2.\P2.$verific$sub_767$b18.vhd:1099$1757 ($sub).
  creating $macc model for $flatten\P2.\P2.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
  creating $macc model for $flatten\P2.\P2.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
  creating $macc model for $flatten\P2.\P2.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
  creating $macc model for $flatten\P2.\P3.$verific$add_113$b18.vhd:707$1412 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_210$b18.vhd:816$1470 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_230$b18.vhd:819$1490 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_254$b18.vhd:822$1516 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_278$b18.vhd:824$1541 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_28$b18.vhd:635$1362 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_281$b18.vhd:825$1542 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_284$b18.vhd:828$1544 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_360$b18.vhd:854$1572 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_362$b18.vhd:855$1574 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_383$b18.vhd:870$1583 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_387$b18.vhd:870$1584 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_399$b18.vhd:881$1592 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_403$b18.vhd:881$1593 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_422$b18.vhd:901$1598 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_424$b18.vhd:901$1601 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_426$b18.vhd:901$1604 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_427$b18.vhd:901$1605 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_435$b18.vhd:905$1608 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_477$b18.vhd:940$1623 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_522$b18.vhd:967$1656 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_681$b18.vhd:1056$1690 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_689$b18.vhd:1062$1692 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$add_760$b18.vhd:1096$1752 ($add).
  creating $macc model for $flatten\P2.\P3.$verific$sub_369$b18.vhd:865$1576 ($sub).
  creating $macc model for $flatten\P2.\P3.$verific$sub_378$b18.vhd:867$1580 ($sub).
  creating $macc model for $flatten\P2.\P3.$verific$sub_379$b18.vhd:867$1581 ($sub).
  creating $macc model for $flatten\P2.\P3.$verific$sub_744$b18.vhd:1073$1736 ($sub).
  creating $macc model for $flatten\P2.\P3.$verific$sub_767$b18.vhd:1099$1757 ($sub).
  creating $macc model for $flatten\P2.\P3.$verific$unary_minus_287$b18.vhd:830$1547 ($neg).
  creating $macc model for $flatten\P2.\P3.$verific$unary_minus_464$b18.vhd:924$1618 ($neg).
  creating $macc model for $flatten\P2.\P3.$verific$unary_minus_756$b18.vhd:1090$1746 ($neg).
  creating $macc model for $flatten\P3.$verific$add_21$b18.vhd:86$445 ($add).
  creating $macc model for $flatten\P3.$verific$add_26$b18.vhd:88$452 ($add).
  creating $macc model for $flatten\P3.$verific$add_283$b18.vhd:318$541 ($add).
  creating $macc model for $flatten\P3.$verific$add_31$b18.vhd:90$459 ($add).
  creating $macc model for $flatten\P3.$verific$add_36$b18.vhd:92$466 ($add).
  creating $macc model for $flatten\P3.$verific$add_39$b18.vhd:95$472 ($add).
  creating $macc model for $flatten\P3.$verific$add_44$b18.vhd:96$476 ($add).
  creating $macc model for $flatten\P3.$verific$add_570$b18.vhd:466$548 ($add).
  creating $macc model for $flatten\P3.$verific$sub_168$b18.vhd:243$530 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_365$b18.vhd:358$543 ($sub).
  creating $macc model for $flatten\P3.$verific$unary_minus_15$b18.vhd:84$439 ($neg).
  creating $macc model for $flatten\P4.$verific$add_21$b18.vhd:86$445 ($add).
  creating $macc model for $flatten\P4.$verific$add_26$b18.vhd:88$452 ($add).
  creating $macc model for $flatten\P4.$verific$add_283$b18.vhd:318$541 ($add).
  creating $macc model for $flatten\P4.$verific$add_31$b18.vhd:90$459 ($add).
  creating $macc model for $flatten\P4.$verific$add_36$b18.vhd:92$466 ($add).
  creating $macc model for $flatten\P4.$verific$add_39$b18.vhd:95$472 ($add).
  creating $macc model for $flatten\P4.$verific$add_44$b18.vhd:96$476 ($add).
  creating $macc model for $flatten\P4.$verific$add_56$b18.vhd:110$484 ($add).
  creating $macc model for $flatten\P4.$verific$add_570$b18.vhd:466$548 ($add).
  creating $macc model for $flatten\P4.$verific$add_61$b18.vhd:113$486 ($add).
  creating $macc model for $flatten\P4.$verific$add_662$b18.vhd:493$568 ($add).
  creating $macc model for $flatten\P4.$verific$add_664$b18.vhd:494$570 ($add).
  creating $macc model for $flatten\P4.$verific$mult_667$b18.vhd:497$574 ($mul).
  creating $macc model for $flatten\P4.$verific$sub_168$b18.vhd:243$530 ($sub).
  creating $macc model for $flatten\P4.$verific$sub_365$b18.vhd:358$543 ($sub).
  creating $macc model for $flatten\P4.$verific$sub_84$b18.vhd:149$499 ($sub).
  creating $macc model for $flatten\P4.$verific$unary_minus_15$b18.vhd:84$439 ($neg).
  creating $macc model for $verific$mult_35$b18.vhd:1411$108 ($mul).
  creating $macc model for $verific$mult_44$b18.vhd:1419$115 ($mul).
  creating $macc model for $verific$mult_46$b18.vhd:1420$118 ($mul).
  creating $macc model for $verific$mult_48$b18.vhd:1421$121 ($mul).
  creating $alu model for $macc $flatten\P4.$verific$unary_minus_15$b18.vhd:84$439.
  creating $alu model for $macc $flatten\P4.$verific$sub_84$b18.vhd:149$499.
  creating $alu model for $macc $flatten\P4.$verific$sub_365$b18.vhd:358$543.
  creating $alu model for $macc $flatten\P4.$verific$sub_168$b18.vhd:243$530.
  creating $alu model for $macc $flatten\P4.$verific$add_664$b18.vhd:494$570.
  creating $alu model for $macc $flatten\P4.$verific$add_662$b18.vhd:493$568.
  creating $alu model for $macc $flatten\P4.$verific$add_61$b18.vhd:113$486.
  creating $alu model for $macc $flatten\P4.$verific$add_570$b18.vhd:466$548.
  creating $alu model for $macc $flatten\P4.$verific$add_56$b18.vhd:110$484.
  creating $alu model for $macc $flatten\P4.$verific$add_44$b18.vhd:96$476.
  creating $alu model for $macc $flatten\P4.$verific$add_39$b18.vhd:95$472.
  creating $alu model for $macc $flatten\P4.$verific$add_36$b18.vhd:92$466.
  creating $alu model for $macc $flatten\P4.$verific$add_31$b18.vhd:90$459.
  creating $alu model for $macc $flatten\P4.$verific$add_283$b18.vhd:318$541.
  creating $alu model for $macc $flatten\P4.$verific$add_26$b18.vhd:88$452.
  creating $alu model for $macc $flatten\P4.$verific$add_21$b18.vhd:86$445.
  creating $alu model for $macc $flatten\P3.$verific$unary_minus_15$b18.vhd:84$439.
  creating $alu model for $macc $flatten\P3.$verific$sub_365$b18.vhd:358$543.
  creating $alu model for $macc $flatten\P3.$verific$sub_168$b18.vhd:243$530.
  creating $alu model for $macc $flatten\P3.$verific$add_570$b18.vhd:466$548.
  creating $alu model for $macc $flatten\P3.$verific$add_44$b18.vhd:96$476.
  creating $alu model for $macc $flatten\P3.$verific$add_39$b18.vhd:95$472.
  creating $alu model for $macc $flatten\P3.$verific$add_36$b18.vhd:92$466.
  creating $alu model for $macc $flatten\P3.$verific$add_31$b18.vhd:90$459.
  creating $alu model for $macc $flatten\P3.$verific$add_283$b18.vhd:318$541.
  creating $alu model for $macc $flatten\P3.$verific$add_26$b18.vhd:88$452.
  creating $alu model for $macc $flatten\P3.$verific$add_21$b18.vhd:86$445.
  creating $alu model for $macc $flatten\P2.\P3.$verific$unary_minus_756$b18.vhd:1090$1746.
  creating $alu model for $macc $flatten\P2.\P3.$verific$unary_minus_464$b18.vhd:924$1618.
  creating $alu model for $macc $flatten\P2.\P3.$verific$unary_minus_287$b18.vhd:830$1547.
  creating $alu model for $macc $flatten\P2.\P3.$verific$sub_767$b18.vhd:1099$1757.
  creating $alu model for $macc $flatten\P2.\P3.$verific$sub_744$b18.vhd:1073$1736.
  creating $alu model for $macc $flatten\P2.\P3.$verific$sub_379$b18.vhd:867$1581.
  creating $alu model for $macc $flatten\P2.\P3.$verific$sub_378$b18.vhd:867$1580.
  creating $alu model for $macc $flatten\P2.\P3.$verific$sub_369$b18.vhd:865$1576.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_760$b18.vhd:1096$1752.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_689$b18.vhd:1062$1692.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_681$b18.vhd:1056$1690.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_522$b18.vhd:967$1656.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_477$b18.vhd:940$1623.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_435$b18.vhd:905$1608.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_427$b18.vhd:901$1605.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_426$b18.vhd:901$1604.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_424$b18.vhd:901$1601.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_422$b18.vhd:901$1598.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_403$b18.vhd:881$1593.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_399$b18.vhd:881$1592.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_387$b18.vhd:870$1584.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_383$b18.vhd:870$1583.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_362$b18.vhd:855$1574.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_360$b18.vhd:854$1572.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_284$b18.vhd:828$1544.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_281$b18.vhd:825$1542.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_28$b18.vhd:635$1362.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_278$b18.vhd:824$1541.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_254$b18.vhd:822$1516.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_230$b18.vhd:819$1490.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_210$b18.vhd:816$1470.
  creating $alu model for $macc $flatten\P2.\P3.$verific$add_113$b18.vhd:707$1412.
  creating $alu model for $macc $flatten\P2.\P2.$verific$unary_minus_756$b18.vhd:1090$1746.
  creating $alu model for $macc $flatten\P2.\P2.$verific$unary_minus_464$b18.vhd:924$1618.
  creating $alu model for $macc $flatten\P2.\P2.$verific$unary_minus_287$b18.vhd:830$1547.
  creating $alu model for $macc $flatten\P2.\P2.$verific$sub_767$b18.vhd:1099$1757.
  creating $alu model for $macc $flatten\P2.\P2.$verific$sub_744$b18.vhd:1073$1736.
  creating $alu model for $macc $flatten\P2.\P2.$verific$sub_379$b18.vhd:867$1581.
  creating $alu model for $macc $flatten\P2.\P2.$verific$sub_378$b18.vhd:867$1580.
  creating $alu model for $macc $flatten\P2.\P2.$verific$sub_369$b18.vhd:865$1576.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_760$b18.vhd:1096$1752.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_689$b18.vhd:1062$1692.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_681$b18.vhd:1056$1690.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_522$b18.vhd:967$1656.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_477$b18.vhd:940$1623.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_435$b18.vhd:905$1608.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_427$b18.vhd:901$1605.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_426$b18.vhd:901$1604.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_424$b18.vhd:901$1601.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_422$b18.vhd:901$1598.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_403$b18.vhd:881$1593.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_399$b18.vhd:881$1592.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_387$b18.vhd:870$1584.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_383$b18.vhd:870$1583.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_362$b18.vhd:855$1574.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_360$b18.vhd:854$1572.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_284$b18.vhd:828$1544.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_281$b18.vhd:825$1542.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_28$b18.vhd:635$1362.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_278$b18.vhd:824$1541.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_259$b18.vhd:823$1520.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_254$b18.vhd:822$1516.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_235$b18.vhd:821$1494.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_230$b18.vhd:819$1490.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_210$b18.vhd:816$1470.
  creating $alu model for $macc $flatten\P2.\P2.$verific$add_113$b18.vhd:707$1412.
  creating $alu model for $macc $flatten\P2.\P1.$verific$unary_minus_756$b18.vhd:1090$1746.
  creating $alu model for $macc $flatten\P2.\P1.$verific$unary_minus_464$b18.vhd:924$1618.
  creating $alu model for $macc $flatten\P2.\P1.$verific$unary_minus_287$b18.vhd:830$1547.
  creating $alu model for $macc $flatten\P2.\P1.$verific$sub_767$b18.vhd:1099$1757.
  creating $alu model for $macc $flatten\P2.\P1.$verific$sub_744$b18.vhd:1073$1736.
  creating $alu model for $macc $flatten\P2.\P1.$verific$sub_379$b18.vhd:867$1581.
  creating $alu model for $macc $flatten\P2.\P1.$verific$sub_378$b18.vhd:867$1580.
  creating $alu model for $macc $flatten\P2.\P1.$verific$sub_369$b18.vhd:865$1576.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_760$b18.vhd:1096$1752.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_689$b18.vhd:1062$1692.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_681$b18.vhd:1056$1690.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_522$b18.vhd:967$1656.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_477$b18.vhd:940$1623.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_435$b18.vhd:905$1608.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_427$b18.vhd:901$1605.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_426$b18.vhd:901$1604.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_424$b18.vhd:901$1601.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_422$b18.vhd:901$1598.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_403$b18.vhd:881$1593.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_399$b18.vhd:881$1592.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_387$b18.vhd:870$1584.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_383$b18.vhd:870$1583.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_362$b18.vhd:855$1574.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_360$b18.vhd:854$1572.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_284$b18.vhd:828$1544.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_281$b18.vhd:825$1542.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_28$b18.vhd:635$1362.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_278$b18.vhd:824$1541.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_259$b18.vhd:823$1520.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_254$b18.vhd:822$1516.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_235$b18.vhd:821$1494.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_230$b18.vhd:819$1490.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_210$b18.vhd:816$1470.
  creating $alu model for $macc $flatten\P2.\P1.$verific$add_113$b18.vhd:707$1412.
  creating $alu model for $macc $flatten\P1.\P3.$verific$unary_minus_756$b18.vhd:1090$1746.
  creating $alu model for $macc $flatten\P1.\P3.$verific$unary_minus_464$b18.vhd:924$1618.
  creating $alu model for $macc $flatten\P1.\P3.$verific$unary_minus_287$b18.vhd:830$1547.
  creating $alu model for $macc $flatten\P1.\P3.$verific$sub_767$b18.vhd:1099$1757.
  creating $alu model for $macc $flatten\P1.\P3.$verific$sub_744$b18.vhd:1073$1736.
  creating $alu model for $macc $flatten\P1.\P3.$verific$sub_379$b18.vhd:867$1581.
  creating $alu model for $macc $flatten\P1.\P3.$verific$sub_378$b18.vhd:867$1580.
  creating $alu model for $macc $flatten\P1.\P3.$verific$sub_369$b18.vhd:865$1576.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_760$b18.vhd:1096$1752.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_689$b18.vhd:1062$1692.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_681$b18.vhd:1056$1690.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_522$b18.vhd:967$1656.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_477$b18.vhd:940$1623.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_435$b18.vhd:905$1608.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_427$b18.vhd:901$1605.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_426$b18.vhd:901$1604.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_424$b18.vhd:901$1601.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_422$b18.vhd:901$1598.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_403$b18.vhd:881$1593.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_399$b18.vhd:881$1592.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_387$b18.vhd:870$1584.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_383$b18.vhd:870$1583.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_362$b18.vhd:855$1574.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_360$b18.vhd:854$1572.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_284$b18.vhd:828$1544.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_281$b18.vhd:825$1542.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_28$b18.vhd:635$1362.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_278$b18.vhd:824$1541.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_254$b18.vhd:822$1516.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_230$b18.vhd:819$1490.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_210$b18.vhd:816$1470.
  creating $alu model for $macc $flatten\P1.\P3.$verific$add_113$b18.vhd:707$1412.
  creating $alu model for $macc $flatten\P1.\P2.$verific$unary_minus_756$b18.vhd:1090$1746.
  creating $alu model for $macc $flatten\P1.\P2.$verific$unary_minus_464$b18.vhd:924$1618.
  creating $alu model for $macc $flatten\P1.\P2.$verific$unary_minus_287$b18.vhd:830$1547.
  creating $alu model for $macc $flatten\P1.\P2.$verific$sub_767$b18.vhd:1099$1757.
  creating $alu model for $macc $flatten\P1.\P2.$verific$sub_744$b18.vhd:1073$1736.
  creating $alu model for $macc $flatten\P1.\P2.$verific$sub_379$b18.vhd:867$1581.
  creating $alu model for $macc $flatten\P1.\P2.$verific$sub_378$b18.vhd:867$1580.
  creating $alu model for $macc $flatten\P1.\P2.$verific$sub_369$b18.vhd:865$1576.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_760$b18.vhd:1096$1752.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_689$b18.vhd:1062$1692.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_681$b18.vhd:1056$1690.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_522$b18.vhd:967$1656.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_477$b18.vhd:940$1623.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_435$b18.vhd:905$1608.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_427$b18.vhd:901$1605.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_426$b18.vhd:901$1604.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_424$b18.vhd:901$1601.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_422$b18.vhd:901$1598.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_403$b18.vhd:881$1593.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_399$b18.vhd:881$1592.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_387$b18.vhd:870$1584.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_383$b18.vhd:870$1583.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_362$b18.vhd:855$1574.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_360$b18.vhd:854$1572.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_284$b18.vhd:828$1544.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_281$b18.vhd:825$1542.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_28$b18.vhd:635$1362.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_278$b18.vhd:824$1541.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_259$b18.vhd:823$1520.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_254$b18.vhd:822$1516.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_235$b18.vhd:821$1494.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_230$b18.vhd:819$1490.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_210$b18.vhd:816$1470.
  creating $alu model for $macc $flatten\P1.\P2.$verific$add_113$b18.vhd:707$1412.
  creating $alu model for $macc $flatten\P1.\P1.$verific$unary_minus_756$b18.vhd:1090$1746.
  creating $alu model for $macc $flatten\P1.\P1.$verific$unary_minus_464$b18.vhd:924$1618.
  creating $alu model for $macc $flatten\P1.\P1.$verific$unary_minus_287$b18.vhd:830$1547.
  creating $alu model for $macc $flatten\P1.\P1.$verific$sub_767$b18.vhd:1099$1757.
  creating $alu model for $macc $flatten\P1.\P1.$verific$sub_744$b18.vhd:1073$1736.
  creating $alu model for $macc $flatten\P1.\P1.$verific$sub_379$b18.vhd:867$1581.
  creating $alu model for $macc $flatten\P1.\P1.$verific$sub_378$b18.vhd:867$1580.
  creating $alu model for $macc $flatten\P1.\P1.$verific$sub_369$b18.vhd:865$1576.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_760$b18.vhd:1096$1752.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_689$b18.vhd:1062$1692.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_681$b18.vhd:1056$1690.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_522$b18.vhd:967$1656.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_477$b18.vhd:940$1623.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_435$b18.vhd:905$1608.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_427$b18.vhd:901$1605.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_426$b18.vhd:901$1604.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_424$b18.vhd:901$1601.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_422$b18.vhd:901$1598.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_403$b18.vhd:881$1593.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_399$b18.vhd:881$1592.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_387$b18.vhd:870$1584.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_383$b18.vhd:870$1583.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_362$b18.vhd:855$1574.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_360$b18.vhd:854$1572.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_284$b18.vhd:828$1544.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_281$b18.vhd:825$1542.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_28$b18.vhd:635$1362.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_278$b18.vhd:824$1541.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_259$b18.vhd:823$1520.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_254$b18.vhd:822$1516.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_235$b18.vhd:821$1494.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_230$b18.vhd:819$1490.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_210$b18.vhd:816$1470.
  creating $alu model for $macc $flatten\P1.\P1.$verific$add_113$b18.vhd:707$1412.
  creating $macc cell for $flatten\P4.$verific$mult_667$b18.vhd:497$574: $auto$alumacc.cc:365:replace_macc$4493
  creating $macc cell for $verific$mult_35$b18.vhd:1411$108: $auto$alumacc.cc:365:replace_macc$4494
  creating $macc cell for $verific$mult_44$b18.vhd:1419$115: $auto$alumacc.cc:365:replace_macc$4495
  creating $macc cell for $verific$mult_46$b18.vhd:1420$118: $auto$alumacc.cc:365:replace_macc$4496
  creating $macc cell for $verific$mult_48$b18.vhd:1421$121: $auto$alumacc.cc:365:replace_macc$4497
  creating $alu model for $flatten\P1.$verific$LessThan_18$b18.vhd:1240$707 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_44$b18.vhd:1258$725 ($lt): merged with $flatten\P1.$verific$LessThan_18$b18.vhd:1240$707.
  creating $alu model for $flatten\P1.$verific$LessThan_6$b18.vhd:1236$696 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_84$b18.vhd:1292$749 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_85$b18.vhd:1292$750 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_86$b18.vhd:1292$751 ($lt): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_286$b18.vhd:829$1546 ($lt): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_370$b18.vhd:865$1577 ($le): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_373$b18.vhd:866$1579 ($lt): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_397$b18.vhd:880$1591 ($le): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_462$b18.vhd:922$1616 ($le): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_463$b18.vhd:923$1617 ($lt): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_742$b18.vhd:1073$1734 ($lt): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_745$b18.vhd:1073$1737 ($lt): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_755$b18.vhd:1089$1745 ($lt): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_768$b18.vhd:1099$1758 ($lt): new $alu
  creating $alu model for $flatten\P1.\P1.$verific$LessThan_771$b18.vhd:1107$1760 ($le): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_286$b18.vhd:829$1546 ($lt): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_370$b18.vhd:865$1577 ($le): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_373$b18.vhd:866$1579 ($lt): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_397$b18.vhd:880$1591 ($le): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_462$b18.vhd:922$1616 ($le): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_463$b18.vhd:923$1617 ($lt): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_742$b18.vhd:1073$1734 ($lt): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_745$b18.vhd:1073$1737 ($lt): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_755$b18.vhd:1089$1745 ($lt): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_768$b18.vhd:1099$1758 ($lt): new $alu
  creating $alu model for $flatten\P1.\P2.$verific$LessThan_771$b18.vhd:1107$1760 ($le): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_286$b18.vhd:829$1546 ($lt): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_370$b18.vhd:865$1577 ($le): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_373$b18.vhd:866$1579 ($lt): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_397$b18.vhd:880$1591 ($le): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_462$b18.vhd:922$1616 ($le): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_463$b18.vhd:923$1617 ($lt): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_742$b18.vhd:1073$1734 ($lt): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_745$b18.vhd:1073$1737 ($lt): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_755$b18.vhd:1089$1745 ($lt): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_768$b18.vhd:1099$1758 ($lt): new $alu
  creating $alu model for $flatten\P1.\P3.$verific$LessThan_771$b18.vhd:1107$1760 ($le): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_18$b18.vhd:1240$707 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_44$b18.vhd:1258$725 ($lt): merged with $flatten\P2.$verific$LessThan_18$b18.vhd:1240$707.
  creating $alu model for $flatten\P2.$verific$LessThan_6$b18.vhd:1236$696 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_84$b18.vhd:1292$749 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_85$b18.vhd:1292$750 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_86$b18.vhd:1292$751 ($lt): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_286$b18.vhd:829$1546 ($lt): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_370$b18.vhd:865$1577 ($le): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_373$b18.vhd:866$1579 ($lt): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_397$b18.vhd:880$1591 ($le): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_462$b18.vhd:922$1616 ($le): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_463$b18.vhd:923$1617 ($lt): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_742$b18.vhd:1073$1734 ($lt): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_745$b18.vhd:1073$1737 ($lt): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_755$b18.vhd:1089$1745 ($lt): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_768$b18.vhd:1099$1758 ($lt): new $alu
  creating $alu model for $flatten\P2.\P1.$verific$LessThan_771$b18.vhd:1107$1760 ($le): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_286$b18.vhd:829$1546 ($lt): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_370$b18.vhd:865$1577 ($le): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_373$b18.vhd:866$1579 ($lt): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_397$b18.vhd:880$1591 ($le): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_462$b18.vhd:922$1616 ($le): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_463$b18.vhd:923$1617 ($lt): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_742$b18.vhd:1073$1734 ($lt): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_745$b18.vhd:1073$1737 ($lt): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_755$b18.vhd:1089$1745 ($lt): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_768$b18.vhd:1099$1758 ($lt): new $alu
  creating $alu model for $flatten\P2.\P2.$verific$LessThan_771$b18.vhd:1107$1760 ($le): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_286$b18.vhd:829$1546 ($lt): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_370$b18.vhd:865$1577 ($le): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_373$b18.vhd:866$1579 ($lt): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_397$b18.vhd:880$1591 ($le): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_462$b18.vhd:922$1616 ($le): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_463$b18.vhd:923$1617 ($lt): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_742$b18.vhd:1073$1734 ($lt): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_745$b18.vhd:1073$1737 ($lt): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_755$b18.vhd:1089$1745 ($lt): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_768$b18.vhd:1099$1758 ($lt): new $alu
  creating $alu model for $flatten\P2.\P3.$verific$LessThan_771$b18.vhd:1107$1760 ($le): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_14$b18.vhd:83$438 ($lt): new $alu
  creating $alu model for $flatten\P4.$verific$LessThan_14$b18.vhd:83$438 ($lt): new $alu
  creating $alu model for $flatten\P4.$verific$LessThan_68$b18.vhd:118$492 ($lt): new $alu
  creating $alu model for $flatten\P4.$verific$LessThan_78$b18.vhd:138$496 ($lt): merged with $flatten\P4.$verific$LessThan_68$b18.vhd:118$492.
  creating $alu model for $flatten\P4.$verific$LessThan_83$b18.vhd:148$498 ($lt): new $alu
  creating $alu model for $flatten\P4.$verific$LessThan_87$b18.vhd:151$503 ($lt): new $alu
  creating $alu model for $verific$LessThan_27$b18.vhd:1401$102 ($lt): new $alu
  creating $alu model for $verific$LessThan_31$b18.vhd:1406$105 ($lt): new $alu
  creating $alu cell for $verific$LessThan_31$b18.vhd:1406$105: $auto$alumacc.cc:485:replace_alu$4581
  creating $alu cell for $verific$LessThan_27$b18.vhd:1401$102: $auto$alumacc.cc:485:replace_alu$4592
  creating $alu cell for $flatten\P4.$verific$LessThan_87$b18.vhd:151$503: $auto$alumacc.cc:485:replace_alu$4603
  creating $alu cell for $flatten\P4.$verific$LessThan_83$b18.vhd:148$498: $auto$alumacc.cc:485:replace_alu$4608
  creating $alu cell for $flatten\P4.$verific$LessThan_68$b18.vhd:118$492, $flatten\P4.$verific$LessThan_78$b18.vhd:138$496: $auto$alumacc.cc:485:replace_alu$4619
  creating $alu cell for $flatten\P4.$verific$LessThan_14$b18.vhd:83$438: $auto$alumacc.cc:485:replace_alu$4630
  creating $alu cell for $flatten\P3.$verific$LessThan_14$b18.vhd:83$438: $auto$alumacc.cc:485:replace_alu$4641
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_771$b18.vhd:1107$1760: $auto$alumacc.cc:485:replace_alu$4652
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_768$b18.vhd:1099$1758: $auto$alumacc.cc:485:replace_alu$4661
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_755$b18.vhd:1089$1745: $auto$alumacc.cc:485:replace_alu$4666
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_745$b18.vhd:1073$1737: $auto$alumacc.cc:485:replace_alu$4671
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_742$b18.vhd:1073$1734: $auto$alumacc.cc:485:replace_alu$4676
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_463$b18.vhd:923$1617: $auto$alumacc.cc:485:replace_alu$4687
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_462$b18.vhd:922$1616: $auto$alumacc.cc:485:replace_alu$4692
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_397$b18.vhd:880$1591: $auto$alumacc.cc:485:replace_alu$4705
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_373$b18.vhd:866$1579: $auto$alumacc.cc:485:replace_alu$4718
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_370$b18.vhd:865$1577: $auto$alumacc.cc:485:replace_alu$4723
  creating $alu cell for $flatten\P2.\P3.$verific$LessThan_286$b18.vhd:829$1546: $auto$alumacc.cc:485:replace_alu$4736
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_771$b18.vhd:1107$1760: $auto$alumacc.cc:485:replace_alu$4741
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_768$b18.vhd:1099$1758: $auto$alumacc.cc:485:replace_alu$4750
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_755$b18.vhd:1089$1745: $auto$alumacc.cc:485:replace_alu$4755
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_745$b18.vhd:1073$1737: $auto$alumacc.cc:485:replace_alu$4760
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_742$b18.vhd:1073$1734: $auto$alumacc.cc:485:replace_alu$4765
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_463$b18.vhd:923$1617: $auto$alumacc.cc:485:replace_alu$4776
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_462$b18.vhd:922$1616: $auto$alumacc.cc:485:replace_alu$4781
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_397$b18.vhd:880$1591: $auto$alumacc.cc:485:replace_alu$4794
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_373$b18.vhd:866$1579: $auto$alumacc.cc:485:replace_alu$4807
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_370$b18.vhd:865$1577: $auto$alumacc.cc:485:replace_alu$4812
  creating $alu cell for $flatten\P2.\P2.$verific$LessThan_286$b18.vhd:829$1546: $auto$alumacc.cc:485:replace_alu$4825
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_771$b18.vhd:1107$1760: $auto$alumacc.cc:485:replace_alu$4830
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_768$b18.vhd:1099$1758: $auto$alumacc.cc:485:replace_alu$4839
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_755$b18.vhd:1089$1745: $auto$alumacc.cc:485:replace_alu$4844
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_745$b18.vhd:1073$1737: $auto$alumacc.cc:485:replace_alu$4849
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_742$b18.vhd:1073$1734: $auto$alumacc.cc:485:replace_alu$4854
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_463$b18.vhd:923$1617: $auto$alumacc.cc:485:replace_alu$4865
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_462$b18.vhd:922$1616: $auto$alumacc.cc:485:replace_alu$4870
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_397$b18.vhd:880$1591: $auto$alumacc.cc:485:replace_alu$4883
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_373$b18.vhd:866$1579: $auto$alumacc.cc:485:replace_alu$4896
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_370$b18.vhd:865$1577: $auto$alumacc.cc:485:replace_alu$4901
  creating $alu cell for $flatten\P2.\P1.$verific$LessThan_286$b18.vhd:829$1546: $auto$alumacc.cc:485:replace_alu$4914
  creating $alu cell for $flatten\P2.$verific$LessThan_86$b18.vhd:1292$751: $auto$alumacc.cc:485:replace_alu$4919
  creating $alu cell for $flatten\P2.$verific$LessThan_85$b18.vhd:1292$750: $auto$alumacc.cc:485:replace_alu$4924
  creating $alu cell for $flatten\P2.$verific$LessThan_84$b18.vhd:1292$749: $auto$alumacc.cc:485:replace_alu$4929
  creating $alu cell for $flatten\P2.$verific$LessThan_6$b18.vhd:1236$696: $auto$alumacc.cc:485:replace_alu$4934
  creating $alu cell for $flatten\P2.$verific$LessThan_18$b18.vhd:1240$707, $flatten\P2.$verific$LessThan_44$b18.vhd:1258$725: $auto$alumacc.cc:485:replace_alu$4945
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_771$b18.vhd:1107$1760: $auto$alumacc.cc:485:replace_alu$4956
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_768$b18.vhd:1099$1758: $auto$alumacc.cc:485:replace_alu$4965
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_755$b18.vhd:1089$1745: $auto$alumacc.cc:485:replace_alu$4970
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_745$b18.vhd:1073$1737: $auto$alumacc.cc:485:replace_alu$4975
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_742$b18.vhd:1073$1734: $auto$alumacc.cc:485:replace_alu$4980
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_463$b18.vhd:923$1617: $auto$alumacc.cc:485:replace_alu$4991
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_462$b18.vhd:922$1616: $auto$alumacc.cc:485:replace_alu$4996
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_397$b18.vhd:880$1591: $auto$alumacc.cc:485:replace_alu$5009
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_373$b18.vhd:866$1579: $auto$alumacc.cc:485:replace_alu$5022
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_370$b18.vhd:865$1577: $auto$alumacc.cc:485:replace_alu$5027
  creating $alu cell for $flatten\P1.\P3.$verific$LessThan_286$b18.vhd:829$1546: $auto$alumacc.cc:485:replace_alu$5040
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_771$b18.vhd:1107$1760: $auto$alumacc.cc:485:replace_alu$5045
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_768$b18.vhd:1099$1758: $auto$alumacc.cc:485:replace_alu$5054
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_755$b18.vhd:1089$1745: $auto$alumacc.cc:485:replace_alu$5059
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_745$b18.vhd:1073$1737: $auto$alumacc.cc:485:replace_alu$5064
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_742$b18.vhd:1073$1734: $auto$alumacc.cc:485:replace_alu$5069
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_463$b18.vhd:923$1617: $auto$alumacc.cc:485:replace_alu$5080
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_462$b18.vhd:922$1616: $auto$alumacc.cc:485:replace_alu$5085
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_397$b18.vhd:880$1591: $auto$alumacc.cc:485:replace_alu$5098
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_373$b18.vhd:866$1579: $auto$alumacc.cc:485:replace_alu$5111
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_370$b18.vhd:865$1577: $auto$alumacc.cc:485:replace_alu$5116
  creating $alu cell for $flatten\P1.\P2.$verific$LessThan_286$b18.vhd:829$1546: $auto$alumacc.cc:485:replace_alu$5129
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_771$b18.vhd:1107$1760: $auto$alumacc.cc:485:replace_alu$5134
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_768$b18.vhd:1099$1758: $auto$alumacc.cc:485:replace_alu$5143
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_755$b18.vhd:1089$1745: $auto$alumacc.cc:485:replace_alu$5148
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_745$b18.vhd:1073$1737: $auto$alumacc.cc:485:replace_alu$5153
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_742$b18.vhd:1073$1734: $auto$alumacc.cc:485:replace_alu$5158
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_463$b18.vhd:923$1617: $auto$alumacc.cc:485:replace_alu$5169
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_462$b18.vhd:922$1616: $auto$alumacc.cc:485:replace_alu$5174
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_397$b18.vhd:880$1591: $auto$alumacc.cc:485:replace_alu$5187
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_373$b18.vhd:866$1579: $auto$alumacc.cc:485:replace_alu$5200
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_370$b18.vhd:865$1577: $auto$alumacc.cc:485:replace_alu$5205
  creating $alu cell for $flatten\P1.\P1.$verific$LessThan_286$b18.vhd:829$1546: $auto$alumacc.cc:485:replace_alu$5218
  creating $alu cell for $flatten\P1.$verific$LessThan_86$b18.vhd:1292$751: $auto$alumacc.cc:485:replace_alu$5223
  creating $alu cell for $flatten\P1.$verific$LessThan_85$b18.vhd:1292$750: $auto$alumacc.cc:485:replace_alu$5228
  creating $alu cell for $flatten\P1.$verific$LessThan_84$b18.vhd:1292$749: $auto$alumacc.cc:485:replace_alu$5233
  creating $alu cell for $flatten\P1.$verific$LessThan_6$b18.vhd:1236$696: $auto$alumacc.cc:485:replace_alu$5238
  creating $alu cell for $flatten\P1.$verific$LessThan_18$b18.vhd:1240$707, $flatten\P1.$verific$LessThan_44$b18.vhd:1258$725: $auto$alumacc.cc:485:replace_alu$5249
  creating $alu cell for $flatten\P1.\P1.$verific$add_113$b18.vhd:707$1412: $auto$alumacc.cc:485:replace_alu$5260
  creating $alu cell for $flatten\P1.\P1.$verific$add_210$b18.vhd:816$1470: $auto$alumacc.cc:485:replace_alu$5263
  creating $alu cell for $flatten\P1.\P1.$verific$add_230$b18.vhd:819$1490: $auto$alumacc.cc:485:replace_alu$5266
  creating $alu cell for $flatten\P1.\P1.$verific$add_235$b18.vhd:821$1494: $auto$alumacc.cc:485:replace_alu$5269
  creating $alu cell for $flatten\P1.\P1.$verific$add_254$b18.vhd:822$1516: $auto$alumacc.cc:485:replace_alu$5272
  creating $alu cell for $flatten\P1.\P1.$verific$add_259$b18.vhd:823$1520: $auto$alumacc.cc:485:replace_alu$5275
  creating $alu cell for $flatten\P1.\P1.$verific$add_278$b18.vhd:824$1541: $auto$alumacc.cc:485:replace_alu$5278
  creating $alu cell for $flatten\P1.\P1.$verific$add_28$b18.vhd:635$1362: $auto$alumacc.cc:485:replace_alu$5281
  creating $alu cell for $flatten\P1.\P1.$verific$add_281$b18.vhd:825$1542: $auto$alumacc.cc:485:replace_alu$5284
  creating $alu cell for $flatten\P1.\P1.$verific$add_284$b18.vhd:828$1544: $auto$alumacc.cc:485:replace_alu$5287
  creating $alu cell for $flatten\P1.\P1.$verific$add_360$b18.vhd:854$1572: $auto$alumacc.cc:485:replace_alu$5290
  creating $alu cell for $flatten\P1.\P1.$verific$add_362$b18.vhd:855$1574: $auto$alumacc.cc:485:replace_alu$5293
  creating $alu cell for $flatten\P1.\P1.$verific$add_383$b18.vhd:870$1583: $auto$alumacc.cc:485:replace_alu$5296
  creating $alu cell for $flatten\P1.\P1.$verific$add_387$b18.vhd:870$1584: $auto$alumacc.cc:485:replace_alu$5299
  creating $alu cell for $flatten\P1.\P1.$verific$add_399$b18.vhd:881$1592: $auto$alumacc.cc:485:replace_alu$5302
  creating $alu cell for $flatten\P1.\P1.$verific$add_403$b18.vhd:881$1593: $auto$alumacc.cc:485:replace_alu$5305
  creating $alu cell for $flatten\P1.\P1.$verific$add_422$b18.vhd:901$1598: $auto$alumacc.cc:485:replace_alu$5308
  creating $alu cell for $flatten\P1.\P1.$verific$add_424$b18.vhd:901$1601: $auto$alumacc.cc:485:replace_alu$5311
  creating $alu cell for $flatten\P1.\P1.$verific$add_426$b18.vhd:901$1604: $auto$alumacc.cc:485:replace_alu$5314
  creating $alu cell for $flatten\P1.\P1.$verific$add_427$b18.vhd:901$1605: $auto$alumacc.cc:485:replace_alu$5317
  creating $alu cell for $flatten\P1.\P1.$verific$add_435$b18.vhd:905$1608: $auto$alumacc.cc:485:replace_alu$5320
  creating $alu cell for $flatten\P1.\P1.$verific$add_477$b18.vhd:940$1623: $auto$alumacc.cc:485:replace_alu$5323
  creating $alu cell for $flatten\P1.\P1.$verific$add_522$b18.vhd:967$1656: $auto$alumacc.cc:485:replace_alu$5326
  creating $alu cell for $flatten\P1.\P1.$verific$add_681$b18.vhd:1056$1690: $auto$alumacc.cc:485:replace_alu$5329
  creating $alu cell for $flatten\P1.\P1.$verific$add_689$b18.vhd:1062$1692: $auto$alumacc.cc:485:replace_alu$5332
  creating $alu cell for $flatten\P1.\P1.$verific$add_760$b18.vhd:1096$1752: $auto$alumacc.cc:485:replace_alu$5335
  creating $alu cell for $flatten\P1.\P1.$verific$sub_369$b18.vhd:865$1576: $auto$alumacc.cc:485:replace_alu$5338
  creating $alu cell for $flatten\P1.\P1.$verific$sub_378$b18.vhd:867$1580: $auto$alumacc.cc:485:replace_alu$5341
  creating $alu cell for $flatten\P1.\P1.$verific$sub_379$b18.vhd:867$1581: $auto$alumacc.cc:485:replace_alu$5344
  creating $alu cell for $flatten\P1.\P1.$verific$sub_744$b18.vhd:1073$1736: $auto$alumacc.cc:485:replace_alu$5347
  creating $alu cell for $flatten\P1.\P1.$verific$sub_767$b18.vhd:1099$1757: $auto$alumacc.cc:485:replace_alu$5350
  creating $alu cell for $flatten\P1.\P1.$verific$unary_minus_287$b18.vhd:830$1547: $auto$alumacc.cc:485:replace_alu$5353
  creating $alu cell for $flatten\P1.\P1.$verific$unary_minus_464$b18.vhd:924$1618: $auto$alumacc.cc:485:replace_alu$5356
  creating $alu cell for $flatten\P1.\P1.$verific$unary_minus_756$b18.vhd:1090$1746: $auto$alumacc.cc:485:replace_alu$5359
  creating $alu cell for $flatten\P1.\P2.$verific$add_113$b18.vhd:707$1412: $auto$alumacc.cc:485:replace_alu$5362
  creating $alu cell for $flatten\P1.\P2.$verific$add_210$b18.vhd:816$1470: $auto$alumacc.cc:485:replace_alu$5365
  creating $alu cell for $flatten\P1.\P2.$verific$add_230$b18.vhd:819$1490: $auto$alumacc.cc:485:replace_alu$5368
  creating $alu cell for $flatten\P1.\P2.$verific$add_235$b18.vhd:821$1494: $auto$alumacc.cc:485:replace_alu$5371
  creating $alu cell for $flatten\P1.\P2.$verific$add_254$b18.vhd:822$1516: $auto$alumacc.cc:485:replace_alu$5374
  creating $alu cell for $flatten\P1.\P2.$verific$add_259$b18.vhd:823$1520: $auto$alumacc.cc:485:replace_alu$5377
  creating $alu cell for $flatten\P1.\P2.$verific$add_278$b18.vhd:824$1541: $auto$alumacc.cc:485:replace_alu$5380
  creating $alu cell for $flatten\P1.\P2.$verific$add_28$b18.vhd:635$1362: $auto$alumacc.cc:485:replace_alu$5383
  creating $alu cell for $flatten\P1.\P2.$verific$add_281$b18.vhd:825$1542: $auto$alumacc.cc:485:replace_alu$5386
  creating $alu cell for $flatten\P1.\P2.$verific$add_284$b18.vhd:828$1544: $auto$alumacc.cc:485:replace_alu$5389
  creating $alu cell for $flatten\P1.\P2.$verific$add_360$b18.vhd:854$1572: $auto$alumacc.cc:485:replace_alu$5392
  creating $alu cell for $flatten\P1.\P2.$verific$add_362$b18.vhd:855$1574: $auto$alumacc.cc:485:replace_alu$5395
  creating $alu cell for $flatten\P1.\P2.$verific$add_383$b18.vhd:870$1583: $auto$alumacc.cc:485:replace_alu$5398
  creating $alu cell for $flatten\P1.\P2.$verific$add_387$b18.vhd:870$1584: $auto$alumacc.cc:485:replace_alu$5401
  creating $alu cell for $flatten\P1.\P2.$verific$add_399$b18.vhd:881$1592: $auto$alumacc.cc:485:replace_alu$5404
  creating $alu cell for $flatten\P1.\P2.$verific$add_403$b18.vhd:881$1593: $auto$alumacc.cc:485:replace_alu$5407
  creating $alu cell for $flatten\P1.\P2.$verific$add_422$b18.vhd:901$1598: $auto$alumacc.cc:485:replace_alu$5410
  creating $alu cell for $flatten\P1.\P2.$verific$add_424$b18.vhd:901$1601: $auto$alumacc.cc:485:replace_alu$5413
  creating $alu cell for $flatten\P1.\P2.$verific$add_426$b18.vhd:901$1604: $auto$alumacc.cc:485:replace_alu$5416
  creating $alu cell for $flatten\P1.\P2.$verific$add_427$b18.vhd:901$1605: $auto$alumacc.cc:485:replace_alu$5419
  creating $alu cell for $flatten\P1.\P2.$verific$add_435$b18.vhd:905$1608: $auto$alumacc.cc:485:replace_alu$5422
  creating $alu cell for $flatten\P1.\P2.$verific$add_477$b18.vhd:940$1623: $auto$alumacc.cc:485:replace_alu$5425
  creating $alu cell for $flatten\P1.\P2.$verific$add_522$b18.vhd:967$1656: $auto$alumacc.cc:485:replace_alu$5428
  creating $alu cell for $flatten\P1.\P2.$verific$add_681$b18.vhd:1056$1690: $auto$alumacc.cc:485:replace_alu$5431
  creating $alu cell for $flatten\P1.\P2.$verific$add_689$b18.vhd:1062$1692: $auto$alumacc.cc:485:replace_alu$5434
  creating $alu cell for $flatten\P1.\P2.$verific$add_760$b18.vhd:1096$1752: $auto$alumacc.cc:485:replace_alu$5437
  creating $alu cell for $flatten\P1.\P2.$verific$sub_369$b18.vhd:865$1576: $auto$alumacc.cc:485:replace_alu$5440
  creating $alu cell for $flatten\P1.\P2.$verific$sub_378$b18.vhd:867$1580: $auto$alumacc.cc:485:replace_alu$5443
  creating $alu cell for $flatten\P1.\P2.$verific$sub_379$b18.vhd:867$1581: $auto$alumacc.cc:485:replace_alu$5446
  creating $alu cell for $flatten\P1.\P2.$verific$sub_744$b18.vhd:1073$1736: $auto$alumacc.cc:485:replace_alu$5449
  creating $alu cell for $flatten\P1.\P2.$verific$sub_767$b18.vhd:1099$1757: $auto$alumacc.cc:485:replace_alu$5452
  creating $alu cell for $flatten\P1.\P2.$verific$unary_minus_287$b18.vhd:830$1547: $auto$alumacc.cc:485:replace_alu$5455
  creating $alu cell for $flatten\P1.\P2.$verific$unary_minus_464$b18.vhd:924$1618: $auto$alumacc.cc:485:replace_alu$5458
  creating $alu cell for $flatten\P1.\P2.$verific$unary_minus_756$b18.vhd:1090$1746: $auto$alumacc.cc:485:replace_alu$5461
  creating $alu cell for $flatten\P1.\P3.$verific$add_113$b18.vhd:707$1412: $auto$alumacc.cc:485:replace_alu$5464
  creating $alu cell for $flatten\P1.\P3.$verific$add_210$b18.vhd:816$1470: $auto$alumacc.cc:485:replace_alu$5467
  creating $alu cell for $flatten\P1.\P3.$verific$add_230$b18.vhd:819$1490: $auto$alumacc.cc:485:replace_alu$5470
  creating $alu cell for $flatten\P1.\P3.$verific$add_254$b18.vhd:822$1516: $auto$alumacc.cc:485:replace_alu$5473
  creating $alu cell for $flatten\P1.\P3.$verific$add_278$b18.vhd:824$1541: $auto$alumacc.cc:485:replace_alu$5476
  creating $alu cell for $flatten\P1.\P3.$verific$add_28$b18.vhd:635$1362: $auto$alumacc.cc:485:replace_alu$5479
  creating $alu cell for $flatten\P1.\P3.$verific$add_281$b18.vhd:825$1542: $auto$alumacc.cc:485:replace_alu$5482
  creating $alu cell for $flatten\P1.\P3.$verific$add_284$b18.vhd:828$1544: $auto$alumacc.cc:485:replace_alu$5485
  creating $alu cell for $flatten\P1.\P3.$verific$add_360$b18.vhd:854$1572: $auto$alumacc.cc:485:replace_alu$5488
  creating $alu cell for $flatten\P1.\P3.$verific$add_362$b18.vhd:855$1574: $auto$alumacc.cc:485:replace_alu$5491
  creating $alu cell for $flatten\P1.\P3.$verific$add_383$b18.vhd:870$1583: $auto$alumacc.cc:485:replace_alu$5494
  creating $alu cell for $flatten\P1.\P3.$verific$add_387$b18.vhd:870$1584: $auto$alumacc.cc:485:replace_alu$5497
  creating $alu cell for $flatten\P1.\P3.$verific$add_399$b18.vhd:881$1592: $auto$alumacc.cc:485:replace_alu$5500
  creating $alu cell for $flatten\P1.\P3.$verific$add_403$b18.vhd:881$1593: $auto$alumacc.cc:485:replace_alu$5503
  creating $alu cell for $flatten\P1.\P3.$verific$add_422$b18.vhd:901$1598: $auto$alumacc.cc:485:replace_alu$5506
  creating $alu cell for $flatten\P1.\P3.$verific$add_424$b18.vhd:901$1601: $auto$alumacc.cc:485:replace_alu$5509
  creating $alu cell for $flatten\P1.\P3.$verific$add_426$b18.vhd:901$1604: $auto$alumacc.cc:485:replace_alu$5512
  creating $alu cell for $flatten\P1.\P3.$verific$add_427$b18.vhd:901$1605: $auto$alumacc.cc:485:replace_alu$5515
  creating $alu cell for $flatten\P1.\P3.$verific$add_435$b18.vhd:905$1608: $auto$alumacc.cc:485:replace_alu$5518
  creating $alu cell for $flatten\P1.\P3.$verific$add_477$b18.vhd:940$1623: $auto$alumacc.cc:485:replace_alu$5521
  creating $alu cell for $flatten\P1.\P3.$verific$add_522$b18.vhd:967$1656: $auto$alumacc.cc:485:replace_alu$5524
  creating $alu cell for $flatten\P1.\P3.$verific$add_681$b18.vhd:1056$1690: $auto$alumacc.cc:485:replace_alu$5527
  creating $alu cell for $flatten\P1.\P3.$verific$add_689$b18.vhd:1062$1692: $auto$alumacc.cc:485:replace_alu$5530
  creating $alu cell for $flatten\P1.\P3.$verific$add_760$b18.vhd:1096$1752: $auto$alumacc.cc:485:replace_alu$5533
  creating $alu cell for $flatten\P1.\P3.$verific$sub_369$b18.vhd:865$1576: $auto$alumacc.cc:485:replace_alu$5536
  creating $alu cell for $flatten\P1.\P3.$verific$sub_378$b18.vhd:867$1580: $auto$alumacc.cc:485:replace_alu$5539
  creating $alu cell for $flatten\P1.\P3.$verific$sub_379$b18.vhd:867$1581: $auto$alumacc.cc:485:replace_alu$5542
  creating $alu cell for $flatten\P1.\P3.$verific$sub_744$b18.vhd:1073$1736: $auto$alumacc.cc:485:replace_alu$5545
  creating $alu cell for $flatten\P1.\P3.$verific$sub_767$b18.vhd:1099$1757: $auto$alumacc.cc:485:replace_alu$5548
  creating $alu cell for $flatten\P1.\P3.$verific$unary_minus_287$b18.vhd:830$1547: $auto$alumacc.cc:485:replace_alu$5551
  creating $alu cell for $flatten\P1.\P3.$verific$unary_minus_464$b18.vhd:924$1618: $auto$alumacc.cc:485:replace_alu$5554
  creating $alu cell for $flatten\P1.\P3.$verific$unary_minus_756$b18.vhd:1090$1746: $auto$alumacc.cc:485:replace_alu$5557
  creating $alu cell for $flatten\P2.\P1.$verific$add_113$b18.vhd:707$1412: $auto$alumacc.cc:485:replace_alu$5560
  creating $alu cell for $flatten\P2.\P1.$verific$add_210$b18.vhd:816$1470: $auto$alumacc.cc:485:replace_alu$5563
  creating $alu cell for $flatten\P2.\P1.$verific$add_230$b18.vhd:819$1490: $auto$alumacc.cc:485:replace_alu$5566
  creating $alu cell for $flatten\P2.\P1.$verific$add_235$b18.vhd:821$1494: $auto$alumacc.cc:485:replace_alu$5569
  creating $alu cell for $flatten\P2.\P1.$verific$add_254$b18.vhd:822$1516: $auto$alumacc.cc:485:replace_alu$5572
  creating $alu cell for $flatten\P2.\P1.$verific$add_259$b18.vhd:823$1520: $auto$alumacc.cc:485:replace_alu$5575
  creating $alu cell for $flatten\P2.\P1.$verific$add_278$b18.vhd:824$1541: $auto$alumacc.cc:485:replace_alu$5578
  creating $alu cell for $flatten\P2.\P1.$verific$add_28$b18.vhd:635$1362: $auto$alumacc.cc:485:replace_alu$5581
  creating $alu cell for $flatten\P2.\P1.$verific$add_281$b18.vhd:825$1542: $auto$alumacc.cc:485:replace_alu$5584
  creating $alu cell for $flatten\P2.\P1.$verific$add_284$b18.vhd:828$1544: $auto$alumacc.cc:485:replace_alu$5587
  creating $alu cell for $flatten\P2.\P1.$verific$add_360$b18.vhd:854$1572: $auto$alumacc.cc:485:replace_alu$5590
  creating $alu cell for $flatten\P2.\P1.$verific$add_362$b18.vhd:855$1574: $auto$alumacc.cc:485:replace_alu$5593
  creating $alu cell for $flatten\P2.\P1.$verific$add_383$b18.vhd:870$1583: $auto$alumacc.cc:485:replace_alu$5596
  creating $alu cell for $flatten\P2.\P1.$verific$add_387$b18.vhd:870$1584: $auto$alumacc.cc:485:replace_alu$5599
  creating $alu cell for $flatten\P2.\P1.$verific$add_399$b18.vhd:881$1592: $auto$alumacc.cc:485:replace_alu$5602
  creating $alu cell for $flatten\P2.\P1.$verific$add_403$b18.vhd:881$1593: $auto$alumacc.cc:485:replace_alu$5605
  creating $alu cell for $flatten\P2.\P1.$verific$add_422$b18.vhd:901$1598: $auto$alumacc.cc:485:replace_alu$5608
  creating $alu cell for $flatten\P2.\P1.$verific$add_424$b18.vhd:901$1601: $auto$alumacc.cc:485:replace_alu$5611
  creating $alu cell for $flatten\P2.\P1.$verific$add_426$b18.vhd:901$1604: $auto$alumacc.cc:485:replace_alu$5614
  creating $alu cell for $flatten\P2.\P1.$verific$add_427$b18.vhd:901$1605: $auto$alumacc.cc:485:replace_alu$5617
  creating $alu cell for $flatten\P2.\P1.$verific$add_435$b18.vhd:905$1608: $auto$alumacc.cc:485:replace_alu$5620
  creating $alu cell for $flatten\P2.\P1.$verific$add_477$b18.vhd:940$1623: $auto$alumacc.cc:485:replace_alu$5623
  creating $alu cell for $flatten\P2.\P1.$verific$add_522$b18.vhd:967$1656: $auto$alumacc.cc:485:replace_alu$5626
  creating $alu cell for $flatten\P2.\P1.$verific$add_681$b18.vhd:1056$1690: $auto$alumacc.cc:485:replace_alu$5629
  creating $alu cell for $flatten\P2.\P1.$verific$add_689$b18.vhd:1062$1692: $auto$alumacc.cc:485:replace_alu$5632
  creating $alu cell for $flatten\P2.\P1.$verific$add_760$b18.vhd:1096$1752: $auto$alumacc.cc:485:replace_alu$5635
  creating $alu cell for $flatten\P2.\P1.$verific$sub_369$b18.vhd:865$1576: $auto$alumacc.cc:485:replace_alu$5638
  creating $alu cell for $flatten\P2.\P1.$verific$sub_378$b18.vhd:867$1580: $auto$alumacc.cc:485:replace_alu$5641
  creating $alu cell for $flatten\P2.\P1.$verific$sub_379$b18.vhd:867$1581: $auto$alumacc.cc:485:replace_alu$5644
  creating $alu cell for $flatten\P2.\P1.$verific$sub_744$b18.vhd:1073$1736: $auto$alumacc.cc:485:replace_alu$5647
  creating $alu cell for $flatten\P2.\P1.$verific$sub_767$b18.vhd:1099$1757: $auto$alumacc.cc:485:replace_alu$5650
  creating $alu cell for $flatten\P2.\P1.$verific$unary_minus_287$b18.vhd:830$1547: $auto$alumacc.cc:485:replace_alu$5653
  creating $alu cell for $flatten\P2.\P1.$verific$unary_minus_464$b18.vhd:924$1618: $auto$alumacc.cc:485:replace_alu$5656
  creating $alu cell for $flatten\P2.\P1.$verific$unary_minus_756$b18.vhd:1090$1746: $auto$alumacc.cc:485:replace_alu$5659
  creating $alu cell for $flatten\P2.\P2.$verific$add_113$b18.vhd:707$1412: $auto$alumacc.cc:485:replace_alu$5662
  creating $alu cell for $flatten\P2.\P2.$verific$add_210$b18.vhd:816$1470: $auto$alumacc.cc:485:replace_alu$5665
  creating $alu cell for $flatten\P2.\P2.$verific$add_230$b18.vhd:819$1490: $auto$alumacc.cc:485:replace_alu$5668
  creating $alu cell for $flatten\P2.\P2.$verific$add_235$b18.vhd:821$1494: $auto$alumacc.cc:485:replace_alu$5671
  creating $alu cell for $flatten\P2.\P2.$verific$add_254$b18.vhd:822$1516: $auto$alumacc.cc:485:replace_alu$5674
  creating $alu cell for $flatten\P2.\P2.$verific$add_259$b18.vhd:823$1520: $auto$alumacc.cc:485:replace_alu$5677
  creating $alu cell for $flatten\P2.\P2.$verific$add_278$b18.vhd:824$1541: $auto$alumacc.cc:485:replace_alu$5680
  creating $alu cell for $flatten\P2.\P2.$verific$add_28$b18.vhd:635$1362: $auto$alumacc.cc:485:replace_alu$5683
  creating $alu cell for $flatten\P2.\P2.$verific$add_281$b18.vhd:825$1542: $auto$alumacc.cc:485:replace_alu$5686
  creating $alu cell for $flatten\P2.\P2.$verific$add_284$b18.vhd:828$1544: $auto$alumacc.cc:485:replace_alu$5689
  creating $alu cell for $flatten\P2.\P2.$verific$add_360$b18.vhd:854$1572: $auto$alumacc.cc:485:replace_alu$5692
  creating $alu cell for $flatten\P2.\P2.$verific$add_362$b18.vhd:855$1574: $auto$alumacc.cc:485:replace_alu$5695
  creating $alu cell for $flatten\P2.\P2.$verific$add_383$b18.vhd:870$1583: $auto$alumacc.cc:485:replace_alu$5698
  creating $alu cell for $flatten\P2.\P2.$verific$add_387$b18.vhd:870$1584: $auto$alumacc.cc:485:replace_alu$5701
  creating $alu cell for $flatten\P2.\P2.$verific$add_399$b18.vhd:881$1592: $auto$alumacc.cc:485:replace_alu$5704
  creating $alu cell for $flatten\P2.\P2.$verific$add_403$b18.vhd:881$1593: $auto$alumacc.cc:485:replace_alu$5707
  creating $alu cell for $flatten\P2.\P2.$verific$add_422$b18.vhd:901$1598: $auto$alumacc.cc:485:replace_alu$5710
  creating $alu cell for $flatten\P2.\P2.$verific$add_424$b18.vhd:901$1601: $auto$alumacc.cc:485:replace_alu$5713
  creating $alu cell for $flatten\P2.\P2.$verific$add_426$b18.vhd:901$1604: $auto$alumacc.cc:485:replace_alu$5716
  creating $alu cell for $flatten\P2.\P2.$verific$add_427$b18.vhd:901$1605: $auto$alumacc.cc:485:replace_alu$5719
  creating $alu cell for $flatten\P2.\P2.$verific$add_435$b18.vhd:905$1608: $auto$alumacc.cc:485:replace_alu$5722
  creating $alu cell for $flatten\P2.\P2.$verific$add_477$b18.vhd:940$1623: $auto$alumacc.cc:485:replace_alu$5725
  creating $alu cell for $flatten\P2.\P2.$verific$add_522$b18.vhd:967$1656: $auto$alumacc.cc:485:replace_alu$5728
  creating $alu cell for $flatten\P2.\P2.$verific$add_681$b18.vhd:1056$1690: $auto$alumacc.cc:485:replace_alu$5731
  creating $alu cell for $flatten\P2.\P2.$verific$add_689$b18.vhd:1062$1692: $auto$alumacc.cc:485:replace_alu$5734
  creating $alu cell for $flatten\P2.\P2.$verific$add_760$b18.vhd:1096$1752: $auto$alumacc.cc:485:replace_alu$5737
  creating $alu cell for $flatten\P2.\P2.$verific$sub_369$b18.vhd:865$1576: $auto$alumacc.cc:485:replace_alu$5740
  creating $alu cell for $flatten\P2.\P2.$verific$sub_378$b18.vhd:867$1580: $auto$alumacc.cc:485:replace_alu$5743
  creating $alu cell for $flatten\P2.\P2.$verific$sub_379$b18.vhd:867$1581: $auto$alumacc.cc:485:replace_alu$5746
  creating $alu cell for $flatten\P2.\P2.$verific$sub_744$b18.vhd:1073$1736: $auto$alumacc.cc:485:replace_alu$5749
  creating $alu cell for $flatten\P2.\P2.$verific$sub_767$b18.vhd:1099$1757: $auto$alumacc.cc:485:replace_alu$5752
  creating $alu cell for $flatten\P2.\P2.$verific$unary_minus_287$b18.vhd:830$1547: $auto$alumacc.cc:485:replace_alu$5755
  creating $alu cell for $flatten\P2.\P2.$verific$unary_minus_464$b18.vhd:924$1618: $auto$alumacc.cc:485:replace_alu$5758
  creating $alu cell for $flatten\P2.\P2.$verific$unary_minus_756$b18.vhd:1090$1746: $auto$alumacc.cc:485:replace_alu$5761
  creating $alu cell for $flatten\P2.\P3.$verific$add_113$b18.vhd:707$1412: $auto$alumacc.cc:485:replace_alu$5764
  creating $alu cell for $flatten\P2.\P3.$verific$add_210$b18.vhd:816$1470: $auto$alumacc.cc:485:replace_alu$5767
  creating $alu cell for $flatten\P2.\P3.$verific$add_230$b18.vhd:819$1490: $auto$alumacc.cc:485:replace_alu$5770
  creating $alu cell for $flatten\P2.\P3.$verific$add_254$b18.vhd:822$1516: $auto$alumacc.cc:485:replace_alu$5773
  creating $alu cell for $flatten\P2.\P3.$verific$add_278$b18.vhd:824$1541: $auto$alumacc.cc:485:replace_alu$5776
  creating $alu cell for $flatten\P2.\P3.$verific$add_28$b18.vhd:635$1362: $auto$alumacc.cc:485:replace_alu$5779
  creating $alu cell for $flatten\P2.\P3.$verific$add_281$b18.vhd:825$1542: $auto$alumacc.cc:485:replace_alu$5782
  creating $alu cell for $flatten\P2.\P3.$verific$add_284$b18.vhd:828$1544: $auto$alumacc.cc:485:replace_alu$5785
  creating $alu cell for $flatten\P2.\P3.$verific$add_360$b18.vhd:854$1572: $auto$alumacc.cc:485:replace_alu$5788
  creating $alu cell for $flatten\P2.\P3.$verific$add_362$b18.vhd:855$1574: $auto$alumacc.cc:485:replace_alu$5791
  creating $alu cell for $flatten\P2.\P3.$verific$add_383$b18.vhd:870$1583: $auto$alumacc.cc:485:replace_alu$5794
  creating $alu cell for $flatten\P2.\P3.$verific$add_387$b18.vhd:870$1584: $auto$alumacc.cc:485:replace_alu$5797
  creating $alu cell for $flatten\P2.\P3.$verific$add_399$b18.vhd:881$1592: $auto$alumacc.cc:485:replace_alu$5800
  creating $alu cell for $flatten\P2.\P3.$verific$add_403$b18.vhd:881$1593: $auto$alumacc.cc:485:replace_alu$5803
  creating $alu cell for $flatten\P2.\P3.$verific$add_422$b18.vhd:901$1598: $auto$alumacc.cc:485:replace_alu$5806
  creating $alu cell for $flatten\P2.\P3.$verific$add_424$b18.vhd:901$1601: $auto$alumacc.cc:485:replace_alu$5809
  creating $alu cell for $flatten\P2.\P3.$verific$add_426$b18.vhd:901$1604: $auto$alumacc.cc:485:replace_alu$5812
  creating $alu cell for $flatten\P2.\P3.$verific$add_427$b18.vhd:901$1605: $auto$alumacc.cc:485:replace_alu$5815
  creating $alu cell for $flatten\P2.\P3.$verific$add_435$b18.vhd:905$1608: $auto$alumacc.cc:485:replace_alu$5818
  creating $alu cell for $flatten\P2.\P3.$verific$add_477$b18.vhd:940$1623: $auto$alumacc.cc:485:replace_alu$5821
  creating $alu cell for $flatten\P2.\P3.$verific$add_522$b18.vhd:967$1656: $auto$alumacc.cc:485:replace_alu$5824
  creating $alu cell for $flatten\P2.\P3.$verific$add_681$b18.vhd:1056$1690: $auto$alumacc.cc:485:replace_alu$5827
  creating $alu cell for $flatten\P2.\P3.$verific$add_689$b18.vhd:1062$1692: $auto$alumacc.cc:485:replace_alu$5830
  creating $alu cell for $flatten\P2.\P3.$verific$add_760$b18.vhd:1096$1752: $auto$alumacc.cc:485:replace_alu$5833
  creating $alu cell for $flatten\P2.\P3.$verific$sub_369$b18.vhd:865$1576: $auto$alumacc.cc:485:replace_alu$5836
  creating $alu cell for $flatten\P2.\P3.$verific$sub_378$b18.vhd:867$1580: $auto$alumacc.cc:485:replace_alu$5839
  creating $alu cell for $flatten\P2.\P3.$verific$sub_379$b18.vhd:867$1581: $auto$alumacc.cc:485:replace_alu$5842
  creating $alu cell for $flatten\P2.\P3.$verific$sub_744$b18.vhd:1073$1736: $auto$alumacc.cc:485:replace_alu$5845
  creating $alu cell for $flatten\P2.\P3.$verific$sub_767$b18.vhd:1099$1757: $auto$alumacc.cc:485:replace_alu$5848
  creating $alu cell for $flatten\P2.\P3.$verific$unary_minus_287$b18.vhd:830$1547: $auto$alumacc.cc:485:replace_alu$5851
  creating $alu cell for $flatten\P2.\P3.$verific$unary_minus_464$b18.vhd:924$1618: $auto$alumacc.cc:485:replace_alu$5854
  creating $alu cell for $flatten\P2.\P3.$verific$unary_minus_756$b18.vhd:1090$1746: $auto$alumacc.cc:485:replace_alu$5857
  creating $alu cell for $flatten\P3.$verific$add_21$b18.vhd:86$445: $auto$alumacc.cc:485:replace_alu$5860
  creating $alu cell for $flatten\P3.$verific$add_26$b18.vhd:88$452: $auto$alumacc.cc:485:replace_alu$5863
  creating $alu cell for $flatten\P3.$verific$add_283$b18.vhd:318$541: $auto$alumacc.cc:485:replace_alu$5866
  creating $alu cell for $flatten\P3.$verific$add_31$b18.vhd:90$459: $auto$alumacc.cc:485:replace_alu$5869
  creating $alu cell for $flatten\P3.$verific$add_36$b18.vhd:92$466: $auto$alumacc.cc:485:replace_alu$5872
  creating $alu cell for $flatten\P3.$verific$add_39$b18.vhd:95$472: $auto$alumacc.cc:485:replace_alu$5875
  creating $alu cell for $flatten\P3.$verific$add_44$b18.vhd:96$476: $auto$alumacc.cc:485:replace_alu$5878
  creating $alu cell for $flatten\P3.$verific$add_570$b18.vhd:466$548: $auto$alumacc.cc:485:replace_alu$5881
  creating $alu cell for $flatten\P3.$verific$sub_168$b18.vhd:243$530: $auto$alumacc.cc:485:replace_alu$5884
  creating $alu cell for $flatten\P3.$verific$sub_365$b18.vhd:358$543: $auto$alumacc.cc:485:replace_alu$5887
  creating $alu cell for $flatten\P3.$verific$unary_minus_15$b18.vhd:84$439: $auto$alumacc.cc:485:replace_alu$5890
  creating $alu cell for $flatten\P4.$verific$add_21$b18.vhd:86$445: $auto$alumacc.cc:485:replace_alu$5893
  creating $alu cell for $flatten\P4.$verific$add_26$b18.vhd:88$452: $auto$alumacc.cc:485:replace_alu$5896
  creating $alu cell for $flatten\P4.$verific$add_283$b18.vhd:318$541: $auto$alumacc.cc:485:replace_alu$5899
  creating $alu cell for $flatten\P4.$verific$add_31$b18.vhd:90$459: $auto$alumacc.cc:485:replace_alu$5902
  creating $alu cell for $flatten\P4.$verific$add_36$b18.vhd:92$466: $auto$alumacc.cc:485:replace_alu$5905
  creating $alu cell for $flatten\P4.$verific$add_39$b18.vhd:95$472: $auto$alumacc.cc:485:replace_alu$5908
  creating $alu cell for $flatten\P4.$verific$add_44$b18.vhd:96$476: $auto$alumacc.cc:485:replace_alu$5911
  creating $alu cell for $flatten\P4.$verific$add_570$b18.vhd:466$548: $auto$alumacc.cc:485:replace_alu$5914
  creating $alu cell for $flatten\P4.$verific$add_56$b18.vhd:110$484: $auto$alumacc.cc:485:replace_alu$5917
  creating $alu cell for $flatten\P4.$verific$add_662$b18.vhd:493$568: $auto$alumacc.cc:485:replace_alu$5920
  creating $alu cell for $flatten\P4.$verific$add_61$b18.vhd:113$486: $auto$alumacc.cc:485:replace_alu$5923
  creating $alu cell for $flatten\P4.$verific$add_664$b18.vhd:494$570: $auto$alumacc.cc:485:replace_alu$5926
  creating $alu cell for $flatten\P4.$verific$sub_168$b18.vhd:243$530: $auto$alumacc.cc:485:replace_alu$5929
  creating $alu cell for $flatten\P4.$verific$sub_365$b18.vhd:358$543: $auto$alumacc.cc:485:replace_alu$5932
  creating $alu cell for $flatten\P4.$verific$sub_84$b18.vhd:149$499: $auto$alumacc.cc:485:replace_alu$5935
  creating $alu cell for $flatten\P4.$verific$unary_minus_15$b18.vhd:84$439: $auto$alumacc.cc:485:replace_alu$5938
  created 310 $alu and 5 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~62 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~72 debug messages>
Removed a total of 24 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~621 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4349: { $flatten\P2.\P3.$verific$n7997$915 $flatten\P2.\P3.$verific$n7996$914 $flatten\P2.\P3.$verific$n7995$913 $flatten\P2.\P3.$verific$n7994$912 $flatten\P2.\P3.$verific$n7993$911 $flatten\P2.\P3.$verific$n7992$910 $flatten\P2.\P3.$verific$n7991$909 $flatten\P2.\P3.$verific$n7990$908 $flatten\P2.\P3.$verific$n7989$907 $flatten\P2.\P3.$verific$n7988$906 $flatten\P2.\P3.$verific$n7986$904 $flatten\P2.\P3.$verific$n7984$902 $flatten\P2.\P3.$verific$n7983$901 $flatten\P2.\P3.$verific$n7982$900 $flatten\P2.\P3.$verific$n7981$899 $flatten\P2.\P3.$verific$n7980$898 $flatten\P2.\P3.$verific$n7979$897 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4297: { $flatten\P2.\P3.$verific$n7990$908 $flatten\P2.\P3.$verific$n7989$907 $flatten\P2.\P3.$verific$n7988$906 $flatten\P2.\P3.$verific$n7987$905 $auto$rtlil.cc:2398:Or$4286 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4063: { $flatten\P2.\P2.$verific$n7990$908 $flatten\P2.\P2.$verific$n7989$907 $flatten\P2.\P2.$verific$n7988$906 $flatten\P2.\P2.$verific$n7987$905 $auto$rtlil.cc:2398:Or$4052 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3829: { $flatten\P2.\P1.$verific$n7990$908 $flatten\P2.\P1.$verific$n7989$907 $flatten\P2.\P1.$verific$n7988$906 $flatten\P2.\P1.$verific$n7987$905 $auto$rtlil.cc:2398:Or$3818 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3595: { $auto$rtlil.cc:2398:Or$3584 $flatten\P1.\P3.$verific$n7990$908 $flatten\P1.\P3.$verific$n7989$907 $flatten\P1.\P3.$verific$n7988$906 $flatten\P1.\P3.$verific$n7987$905 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3361: { $auto$rtlil.cc:2398:Or$3350 $flatten\P1.\P2.$verific$n7990$908 $flatten\P1.\P2.$verific$n7989$907 $flatten\P1.\P2.$verific$n7988$906 $flatten\P1.\P2.$verific$n7987$905 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3127: { $auto$rtlil.cc:2398:Or$3116 $flatten\P1.\P1.$verific$n7990$908 $flatten\P1.\P1.$verific$n7989$907 $flatten\P1.\P1.$verific$n7988$906 $flatten\P1.\P1.$verific$n7987$905 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4321: { $flatten\P2.\P3.$verific$n7990$908 $flatten\P2.\P3.$verific$n7989$907 $flatten\P2.\P3.$verific$n7988$906 $auto$rtlil.cc:2398:Or$4286 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4087: { $flatten\P2.\P2.$verific$n7990$908 $flatten\P2.\P2.$verific$n7989$907 $flatten\P2.\P2.$verific$n7988$906 $auto$rtlil.cc:2398:Or$4052 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4115: { $flatten\P2.\P2.$verific$n7997$915 $flatten\P2.\P2.$verific$n7996$914 $flatten\P2.\P2.$verific$n7995$913 $flatten\P2.\P2.$verific$n7994$912 $flatten\P2.\P2.$verific$n7993$911 $flatten\P2.\P2.$verific$n7992$910 $flatten\P2.\P2.$verific$n7991$909 $flatten\P2.\P2.$verific$n7990$908 $flatten\P2.\P2.$verific$n7989$907 $flatten\P2.\P2.$verific$n7988$906 $flatten\P2.\P2.$verific$n7986$904 $flatten\P2.\P2.$verific$n7984$902 $flatten\P2.\P2.$verific$n7983$901 $flatten\P2.\P2.$verific$n7982$900 $flatten\P2.\P2.$verific$n7981$899 $flatten\P2.\P2.$verific$n7980$898 $flatten\P2.\P2.$verific$n7979$897 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3853: { $flatten\P2.\P1.$verific$n7990$908 $flatten\P2.\P1.$verific$n7989$907 $flatten\P2.\P1.$verific$n7988$906 $auto$rtlil.cc:2398:Or$3818 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3881: { $flatten\P2.\P1.$verific$n7997$915 $flatten\P2.\P1.$verific$n7996$914 $flatten\P2.\P1.$verific$n7995$913 $flatten\P2.\P1.$verific$n7994$912 $flatten\P2.\P1.$verific$n7993$911 $flatten\P2.\P1.$verific$n7992$910 $flatten\P2.\P1.$verific$n7991$909 $flatten\P2.\P1.$verific$n7990$908 $flatten\P2.\P1.$verific$n7989$907 $flatten\P2.\P1.$verific$n7988$906 $flatten\P2.\P1.$verific$n7986$904 $flatten\P2.\P1.$verific$n7984$902 $flatten\P2.\P1.$verific$n7983$901 $flatten\P2.\P1.$verific$n7982$900 $flatten\P2.\P1.$verific$n7981$899 $flatten\P2.\P1.$verific$n7980$898 $flatten\P2.\P1.$verific$n7979$897 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3619: { $auto$rtlil.cc:2398:Or$3584 $flatten\P1.\P3.$verific$n7990$908 $flatten\P1.\P3.$verific$n7989$907 $flatten\P1.\P3.$verific$n7988$906 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3647: { $flatten\P1.\P3.$verific$n7997$915 $flatten\P1.\P3.$verific$n7996$914 $flatten\P1.\P3.$verific$n7995$913 $flatten\P1.\P3.$verific$n7994$912 $flatten\P1.\P3.$verific$n7993$911 $flatten\P1.\P3.$verific$n7992$910 $flatten\P1.\P3.$verific$n7991$909 $flatten\P1.\P3.$verific$n7990$908 $flatten\P1.\P3.$verific$n7989$907 $flatten\P1.\P3.$verific$n7988$906 $flatten\P1.\P3.$verific$n7986$904 $flatten\P1.\P3.$verific$n7984$902 $flatten\P1.\P3.$verific$n7983$901 $flatten\P1.\P3.$verific$n7982$900 $flatten\P1.\P3.$verific$n7981$899 $flatten\P1.\P3.$verific$n7980$898 $flatten\P1.\P3.$verific$n7979$897 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3385: { $auto$rtlil.cc:2398:Or$3350 $flatten\P1.\P2.$verific$n7990$908 $flatten\P1.\P2.$verific$n7989$907 $flatten\P1.\P2.$verific$n7988$906 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3413: { $flatten\P1.\P2.$verific$n7997$915 $flatten\P1.\P2.$verific$n7996$914 $flatten\P1.\P2.$verific$n7995$913 $flatten\P1.\P2.$verific$n7994$912 $flatten\P1.\P2.$verific$n7993$911 $flatten\P1.\P2.$verific$n7992$910 $flatten\P1.\P2.$verific$n7991$909 $flatten\P1.\P2.$verific$n7990$908 $flatten\P1.\P2.$verific$n7989$907 $flatten\P1.\P2.$verific$n7988$906 $flatten\P1.\P2.$verific$n7986$904 $flatten\P1.\P2.$verific$n7984$902 $flatten\P1.\P2.$verific$n7983$901 $flatten\P1.\P2.$verific$n7982$900 $flatten\P1.\P2.$verific$n7981$899 $flatten\P1.\P2.$verific$n7980$898 $flatten\P1.\P2.$verific$n7979$897 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3151: { $auto$rtlil.cc:2398:Or$3116 $flatten\P1.\P1.$verific$n7990$908 $flatten\P1.\P1.$verific$n7989$907 $flatten\P1.\P1.$verific$n7988$906 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$3179: { $flatten\P1.\P1.$verific$n7997$915 $flatten\P1.\P1.$verific$n7996$914 $flatten\P1.\P1.$verific$n7995$913 $flatten\P1.\P1.$verific$n7994$912 $flatten\P1.\P1.$verific$n7993$911 $flatten\P1.\P1.$verific$n7992$910 $flatten\P1.\P1.$verific$n7991$909 $flatten\P1.\P1.$verific$n7990$908 $flatten\P1.\P1.$verific$n7989$907 $flatten\P1.\P1.$verific$n7988$906 $flatten\P1.\P1.$verific$n7986$904 $flatten\P1.\P1.$verific$n7984$902 $flatten\P1.\P1.$verific$n7983$901 $flatten\P1.\P1.$verific$n7982$900 $flatten\P1.\P1.$verific$n7981$899 $flatten\P1.\P1.$verific$n7980$898 $flatten\P1.\P1.$verific$n7979$897 }
  Optimizing cells in module \b18.
Performed a total of 18 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 39 unused cells and 174 unused wires.
<suppressed ~44 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~621 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

3.20. Executing MEMORY pass.

yosys> opt_mem

3.20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> memory_share

3.20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> memory_collect

3.20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> stat

3.22. Printing statistics.

=== b18 ===

   Number of wires:               4461
   Number of wire bits:          48952
   Number of public wires:         473
   Number of public wire bits:    5058
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3537
     $adff                         270
     $adffe                         22
     $alu                          306
     $and                          219
     $bmux                         312
     $eq                           166
     $logic_not                     15
     $macc                           5
     $mux                         1656
     $ne                             1
     $not                          145
     $or                           151
     $reduce_and                    45
     $reduce_bool                    2
     $reduce_or                    198
     $shl                           24


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \P4.datao * \td1 (32x32 bits, signed)
  add \P3.datao * \td2 (32x32 bits, signed)
  add \tad1 * \tad2 (30x30 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$354e377aaa263356a1a43d04ca847f8b92483a2a\_80_rs_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod$9f4898d8264c91aede998c5978e055c0b827a30c\_80_rs_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$653d0dc5a667330298513325d0bd1def0e6c1128\_90_alu for cells of type $alu.
Using template $paramod$2c4d537db249d5ee7774cabca037a7502075cb7a\_80_rs_alu for cells of type $alu.
Using template $paramod$076c9a7a3f037230073fe14dd4865d470cb48917\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$fba31833a4dd9015338784eaf6f34efb78c8e548\_80_rs_alu for cells of type $alu.
Using template $paramod$bfceb922395790c0ce92e9f9b5b428d4fc72cc30\_90_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$de60d091aee7fd14d9d83b1a27fa9939374757c5\_80_rs_alu for cells of type $alu.
Using template $paramod$b3c20b05d9b1fc2c940ef2f6c917486aead042e8\_90_alu for cells of type $alu.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod$55cc6ea966d24eaadab3a93edfb07f4c9ec754bb\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
  add 3'101 * $auto$wreduce.cc:454:run$2989 [0] (3x1 bits, unsigned)
Using template $paramod$6268c9849396b992276ed6f68094a32888ec4427\_80_rs_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_90_alu for cells of type $alu.
Using template $paramod$403d07c18de10cda2ac652a859c56aea81aaf9b5\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$3afc6f670b2f1122e1ca0893580d7ec086210c5c\_80_rs_alu for cells of type $alu.
Using template $paramod$6bf3afcadde450e76c699a4da1838452ccdf24c7\_80_rs_alu for cells of type $alu.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$80492_Y
    new assignment: { } = { }.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
Using template $paramod$172f2253883621b746ed3e405a5e271c8c312010\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
  add \tad2 [19:0] * \tad4 (20x20 bits, unsigned)
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$8468d4ebb631360f02053992d3f9f5307d14619b\_80_rs_alu for cells of type $alu.
Using template $paramod$8027eda61d95ddd4d4dd7b5cb21f3830552ebe4e\_80_rs_alu for cells of type $alu.
Using template $paramod$ce0ec84be7047712840b0952f343ee9e63ef75d1\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000000011 for cells of type $fa.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010011 for cells of type $fa.
Using template $paramod$4e6ee5eb737cf7428f8e246e911ae1dac9ae2979\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010011 for cells of type $lcu.
No more expansions possible.
<suppressed ~25771 debug messages>

yosys> stat

3.24. Printing statistics.

=== b18 ===

   Number of wires:              26457
   Number of wire bits:         529780
   Number of public wires:         473
   Number of public wire bits:    5058
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:             130032
     $_AND_                      19105
     $_DFFE_PP0P_                  429
     $_DFF_PP0_                   2560
     $_MUX_                      74171
     $_NOT_                       5725
     $_OR_                       11056
     $_XOR_                      15024
     adder_carry                  1962


yosys> opt

3.25. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~55929 debug messages>

yosys> opt_merge -nomux

3.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~25368 debug messages>
Removed a total of 8456 cells.

yosys> opt_muxtree

3.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$81468 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [19], Q = \P4.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$81446 ($_DFFE_PP0P_) from module b18 (D = $flatten\P4.$verific$n10979$246, Q = \P4.B).
Adding EN signal on $auto$ff.cc:262:slice$81449 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [0], Q = \P4.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$81450 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [1], Q = \P4.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$81451 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [2], Q = \P4.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$81452 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [3], Q = \P4.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$81453 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [4], Q = \P4.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$81454 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [5], Q = \P4.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$81455 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [6], Q = \P4.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$81456 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [7], Q = \P4.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$81457 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [8], Q = \P4.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$81458 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [9], Q = \P4.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$81459 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [10], Q = \P4.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$81460 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [11], Q = \P4.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$81461 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [12], Q = \P4.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$81462 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [13], Q = \P4.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$81463 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [14], Q = \P4.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$81464 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [15], Q = \P4.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$81465 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [16], Q = \P4.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$81466 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [17], Q = \P4.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$81467 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2993 [18], Q = \P4.addr [18]).

yosys> opt_clean

3.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 4956 unused cells and 18471 unused wires.
<suppressed ~4957 debug messages>

yosys> opt_expr

3.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~1693 debug messages>

3.25.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~627 debug messages>
Removed a total of 209 cells.

yosys> opt_dff

3.25.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$81564 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [31], Q = \P4.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$81563 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [30], Q = \P4.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$81562 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [29], Q = \P4.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$81561 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [28], Q = \P4.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$81560 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [27], Q = \P4.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$81559 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [26], Q = \P4.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$81558 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [25], Q = \P4.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$81557 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [24], Q = \P4.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$81556 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [23], Q = \P4.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$81555 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [22], Q = \P4.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$81554 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [21], Q = \P4.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$81553 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [20], Q = \P4.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$81552 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [19], Q = \P4.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$81551 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [18], Q = \P4.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$81550 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [17], Q = \P4.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$81549 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [16], Q = \P4.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$81548 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [15], Q = \P4.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$81547 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [14], Q = \P4.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$81546 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [13], Q = \P4.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$81545 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [12], Q = \P4.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$81544 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [11], Q = \P4.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$81543 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [10], Q = \P4.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$81542 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [9], Q = \P4.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$81541 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [8], Q = \P4.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$81540 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [7], Q = \P4.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$81539 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [6], Q = \P4.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$81538 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [5], Q = \P4.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$81537 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [4], Q = \P4.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$81536 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [3], Q = \P4.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$81535 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [2], Q = \P4.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$81534 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [1], Q = \P4.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$81533 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [0], Q = \P4.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$81532 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [31], Q = \P4.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$81531 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [30], Q = \P4.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$81530 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [29], Q = \P4.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$81529 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [28], Q = \P4.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$81528 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [27], Q = \P4.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$81527 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [26], Q = \P4.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$81526 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [25], Q = \P4.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$81525 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [24], Q = \P4.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$81524 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [23], Q = \P4.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$81523 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [22], Q = \P4.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$81522 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [21], Q = \P4.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$81521 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [20], Q = \P4.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$81520 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [19], Q = \P4.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$81519 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [18], Q = \P4.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$81518 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [17], Q = \P4.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$81517 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [16], Q = \P4.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$81516 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [15], Q = \P4.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$81515 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [14], Q = \P4.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$81514 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [13], Q = \P4.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$81513 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [12], Q = \P4.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$81512 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [11], Q = \P4.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$81511 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [10], Q = \P4.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$81510 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [9], Q = \P4.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$81509 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [8], Q = \P4.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$81508 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [7], Q = \P4.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$81507 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [6], Q = \P4.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$81506 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [5], Q = \P4.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$81505 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [4], Q = \P4.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$81504 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [3], Q = \P4.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$81503 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [2], Q = \P4.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$81502 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [1], Q = \P4.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$81501 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [0], Q = \P4.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$81500 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [31], Q = \P4.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$81499 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [30], Q = \P4.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$81498 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [29], Q = \P4.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$81497 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [28], Q = \P4.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$81496 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [27], Q = \P4.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$81495 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [26], Q = \P4.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$81494 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [25], Q = \P4.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$81493 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [24], Q = \P4.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$81492 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [23], Q = \P4.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$81491 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [22], Q = \P4.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$81490 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [21], Q = \P4.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$81489 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [20], Q = \P4.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$81488 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [19], Q = \P4.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$81487 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [18], Q = \P4.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$81486 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [17], Q = \P4.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$81485 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [16], Q = \P4.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$81484 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [15], Q = \P4.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$81483 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [14], Q = \P4.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$81482 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [13], Q = \P4.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$81481 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [12], Q = \P4.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$81480 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [11], Q = \P4.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$81479 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [10], Q = \P4.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$81478 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [9], Q = \P4.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$81477 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [8], Q = \P4.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$81476 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [7], Q = \P4.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$81475 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [6], Q = \P4.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$81474 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [5], Q = \P4.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$81473 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [4], Q = \P4.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$81472 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [3], Q = \P4.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$81471 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [2], Q = \P4.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$81470 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [1], Q = \P4.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$81469 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83109 [0], Q = \P4.reg2 [0]).
Handling never-active EN on $auto$ff.cc:262:slice$77787 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77786 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77785 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77784 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77783 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77782 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77781 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77780 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77779 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77778 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77777 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77776 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77775 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77774 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77773 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77772 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77771 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77770 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77769 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77768 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77767 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77766 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77765 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77764 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77763 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77762 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77761 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77760 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77759 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77758 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77757 ($_DFFE_PP0P_) from module b18 (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$77756 ($_DFFE_PP0P_) from module b18 (removing D path).
Adding EN signal on $auto$ff.cc:262:slice$76604 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72114, Q = \P2.P1.RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$76603 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72095, Q = \P2.P1.MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$76602 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72076, Q = \P2.P1.ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$76601 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [32], Q = \P2.P1.rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$76600 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [30], Q = \P2.P1.rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$76599 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [29], Q = \P2.P1.rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$76598 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [28], Q = \P2.P1.rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$76597 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [27], Q = \P2.P1.rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$76596 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [26], Q = \P2.P1.rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$76595 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [25], Q = \P2.P1.rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$76594 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [24], Q = \P2.P1.rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$76593 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [23], Q = \P2.P1.rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$76592 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [22], Q = \P2.P1.rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$76591 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [21], Q = \P2.P1.rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$76590 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [20], Q = \P2.P1.rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$76589 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [19], Q = \P2.P1.rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$76588 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [18], Q = \P2.P1.rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$76587 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [17], Q = \P2.P1.rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$76586 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [16], Q = \P2.P1.rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$76585 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [15], Q = \P2.P1.rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$76584 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [14], Q = \P2.P1.rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$76583 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [13], Q = \P2.P1.rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$76582 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [12], Q = \P2.P1.rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$76581 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [11], Q = \P2.P1.rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$76580 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [10], Q = \P2.P1.rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$76579 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [9], Q = \P2.P1.rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$76578 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [8], Q = \P2.P1.rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$76577 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [7], Q = \P2.P1.rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$76576 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [6], Q = \P2.P1.rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$76575 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [5], Q = \P2.P1.rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$76574 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [4], Q = \P2.P1.rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$76573 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [3], Q = \P2.P1.rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$76572 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [2], Q = \P2.P1.rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$76571 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [1], Q = \P2.P1.rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$76570 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72025 [0], Q = \P2.P1.rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$76569 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [31], Q = \P2.P1.EBX [31]).
Adding EN signal on $auto$ff.cc:262:slice$76568 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [30], Q = \P2.P1.EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$76567 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [29], Q = \P2.P1.EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$76566 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [28], Q = \P2.P1.EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$76565 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [27], Q = \P2.P1.EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$76564 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [26], Q = \P2.P1.EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$76563 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [25], Q = \P2.P1.EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$76562 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [24], Q = \P2.P1.EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$76561 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [23], Q = \P2.P1.EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$76560 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [22], Q = \P2.P1.EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$76559 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [21], Q = \P2.P1.EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$76558 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [20], Q = \P2.P1.EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$76557 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [19], Q = \P2.P1.EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$76556 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [18], Q = \P2.P1.EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$76555 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [17], Q = \P2.P1.EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$76554 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [16], Q = \P2.P1.EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$76553 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [15], Q = \P2.P1.EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$76552 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [14], Q = \P2.P1.EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$76551 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [13], Q = \P2.P1.EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$76550 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [12], Q = \P2.P1.EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$76549 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [11], Q = \P2.P1.EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$76548 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [10], Q = \P2.P1.EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$76547 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [9], Q = \P2.P1.EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$76546 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [8], Q = \P2.P1.EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$76545 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [7], Q = \P2.P1.EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$76544 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [6], Q = \P2.P1.EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$76543 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [5], Q = \P2.P1.EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$76542 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [4], Q = \P2.P1.EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$76541 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [3], Q = \P2.P1.EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$76540 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [2], Q = \P2.P1.EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$76539 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [1], Q = \P2.P1.EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$76538 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75232 [0], Q = \P2.P1.EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$76537 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [31], Q = \P2.P1.EAX [31]).
Adding EN signal on $auto$ff.cc:262:slice$76536 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [30], Q = \P2.P1.EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$76535 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [29], Q = \P2.P1.EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$76534 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [28], Q = \P2.P1.EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$76533 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [27], Q = \P2.P1.EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$76532 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [26], Q = \P2.P1.EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$76531 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [25], Q = \P2.P1.EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$76530 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [24], Q = \P2.P1.EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$76529 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [23], Q = \P2.P1.EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$76528 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [22], Q = \P2.P1.EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$76527 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [21], Q = \P2.P1.EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$76526 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [20], Q = \P2.P1.EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$76525 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [19], Q = \P2.P1.EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$76524 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [18], Q = \P2.P1.EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$76523 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [17], Q = \P2.P1.EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$76522 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [16], Q = \P2.P1.EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$76521 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [15], Q = \P2.P1.EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$76520 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [14], Q = \P2.P1.EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$76519 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [13], Q = \P2.P1.EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$76518 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [12], Q = \P2.P1.EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$76517 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [11], Q = \P2.P1.EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$76516 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [10], Q = \P2.P1.EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$76515 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [9], Q = \P2.P1.EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$76514 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [8], Q = \P2.P1.EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$76513 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [7], Q = \P2.P1.EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$76512 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [6], Q = \P2.P1.EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$76511 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [5], Q = \P2.P1.EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$76510 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [4], Q = \P2.P1.EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$76509 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [3], Q = \P2.P1.EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$76508 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [2], Q = \P2.P1.EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$76507 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [1], Q = \P2.P1.EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$76506 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74748 [0], Q = \P2.P1.EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$76505 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74192 [3], Q = \P2.P1.P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$76504 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74192 [2], Q = \P2.P1.P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$76503 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74192 [1], Q = \P2.P1.P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$76502 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74192 [0], Q = \P2.P1.P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$76501 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72133, Q = \P2.P1.CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$76500 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [14], Q = \P2.P1.P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$76499 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [13], Q = \P2.P1.P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$76498 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [12], Q = \P2.P1.P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$76497 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [11], Q = \P2.P1.P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$76496 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [10], Q = \P2.P1.P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$76495 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [9], Q = \P2.P1.P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$76494 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [8], Q = \P2.P1.P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$76493 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [7], Q = \P2.P1.P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$76492 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [6], Q = \P2.P1.P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$76491 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [5], Q = \P2.P1.P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$76490 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [4], Q = \P2.P1.P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$76489 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [3], Q = \P2.P1.P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$76488 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [2], Q = \P2.P1.P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$76487 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [1], Q = \P2.P1.P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$76486 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75478 [0], Q = \P2.P1.P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$76485 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [15], Q = \P2.P1.P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$76484 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [14], Q = \P2.P1.P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$76483 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [13], Q = \P2.P1.P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$76482 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [12], Q = \P2.P1.P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$76481 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [11], Q = \P2.P1.P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$76480 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [10], Q = \P2.P1.P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$76479 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [9], Q = \P2.P1.P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$76478 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [8], Q = \P2.P1.P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$76477 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [7], Q = \P2.P1.P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$76476 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [6], Q = \P2.P1.P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$76475 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [5], Q = \P2.P1.P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$76474 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [4], Q = \P2.P1.P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$76473 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [3], Q = \P2.P1.P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$76472 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [2], Q = \P2.P1.P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$76471 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [1], Q = \P2.P1.P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$76470 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$75721 [0], Q = \P2.P1.P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$76469 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$3748, Q = \P2.P1.P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$76468 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$3762, Q = \P2.P1.P1.More).
Adding EN signal on $auto$ff.cc:262:slice$76467 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [31], Q = \P2.P1.P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$76466 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [30], Q = \P2.P1.P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$76465 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [29], Q = \P2.P1.P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$76464 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [28], Q = \P2.P1.P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$76463 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [27], Q = \P2.P1.P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$76462 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [26], Q = \P2.P1.P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$76461 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [25], Q = \P2.P1.P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$76460 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [24], Q = \P2.P1.P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$76459 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [23], Q = \P2.P1.P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$76458 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [22], Q = \P2.P1.P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$76457 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [21], Q = \P2.P1.P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$76456 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [20], Q = \P2.P1.P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$76455 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [19], Q = \P2.P1.P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$76454 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [18], Q = \P2.P1.P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$76453 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [17], Q = \P2.P1.P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$76452 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [16], Q = \P2.P1.P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$76451 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [15], Q = \P2.P1.P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$76450 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [14], Q = \P2.P1.P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$76449 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [13], Q = \P2.P1.P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$76448 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [12], Q = \P2.P1.P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$76447 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [11], Q = \P2.P1.P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$76446 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [10], Q = \P2.P1.P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$76445 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [9], Q = \P2.P1.P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$76444 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [8], Q = \P2.P1.P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$76443 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [7], Q = \P2.P1.P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$76442 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [6], Q = \P2.P1.P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$76441 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [5], Q = \P2.P1.P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$76440 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [4], Q = \P2.P1.P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$76439 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [3], Q = \P2.P1.P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$76438 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [2], Q = \P2.P1.P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$76437 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [1], Q = \P2.P1.P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$76436 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$70979 [0], Q = \P2.P1.P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$76435 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [31], Q = \P2.P1.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$76434 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [30], Q = \P2.P1.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$76433 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [29], Q = \P2.P1.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$76432 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [28], Q = \P2.P1.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$76431 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [27], Q = \P2.P1.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$76430 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [26], Q = \P2.P1.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$76429 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [25], Q = \P2.P1.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$76428 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [24], Q = \P2.P1.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$76427 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [23], Q = \P2.P1.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$76426 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [22], Q = \P2.P1.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$76425 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [21], Q = \P2.P1.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$76424 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [20], Q = \P2.P1.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$76423 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [19], Q = \P2.P1.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$76422 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [18], Q = \P2.P1.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$76421 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [17], Q = \P2.P1.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$76420 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [16], Q = \P2.P1.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$76419 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [15], Q = \P2.P1.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$76418 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [14], Q = \P2.P1.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$76417 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [13], Q = \P2.P1.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$76416 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [12], Q = \P2.P1.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$76415 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [11], Q = \P2.P1.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$76414 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [10], Q = \P2.P1.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$76413 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [9], Q = \P2.P1.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$76412 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [8], Q = \P2.P1.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$76411 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [7], Q = \P2.P1.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$76410 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [6], Q = \P2.P1.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$76409 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [5], Q = \P2.P1.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$76408 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [4], Q = \P2.P1.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$76407 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [3], Q = \P2.P1.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$76406 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [2], Q = \P2.P1.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$76405 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [1], Q = \P2.P1.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$76404 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71463 [0], Q = \P2.P1.P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$76403 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [30], Q = \P2.P2.Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$76402 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [29], Q = \P2.P2.Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$76401 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [28], Q = \P2.P2.Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$76400 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [27], Q = \P2.P2.Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$76399 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [26], Q = \P2.P2.Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$76398 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [25], Q = \P2.P2.Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$76397 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [24], Q = \P2.P2.Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$76396 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [23], Q = \P2.P2.Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$76395 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [22], Q = \P2.P2.Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$76394 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [21], Q = \P2.P2.Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$76393 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [20], Q = \P2.P2.Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$76392 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [19], Q = \P2.P2.Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$76391 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [18], Q = \P2.P2.Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$76390 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [17], Q = \P2.P2.Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$76389 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [16], Q = \P2.P2.Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$76388 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [15], Q = \P2.P2.Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$76387 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [14], Q = \P2.P2.Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$76386 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [13], Q = \P2.P2.Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$76385 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [12], Q = \P2.P2.Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$76384 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [11], Q = \P2.P2.Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$76383 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [10], Q = \P2.P2.Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$76382 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [9], Q = \P2.P2.Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$76381 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [8], Q = \P2.P2.Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$76380 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [7], Q = \P2.P2.Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$76379 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [6], Q = \P2.P2.Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$76378 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [5], Q = \P2.P2.Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$76377 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [4], Q = \P2.P2.Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$76376 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [3], Q = \P2.P2.Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$76375 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [2], Q = \P2.P2.Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$76374 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [1], Q = \P2.P2.Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$76373 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65918 [0], Q = \P2.P2.Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$76372 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63986 [3], Q = \P2.P2.P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$76371 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63986 [2], Q = \P2.P2.P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$76370 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63986 [1], Q = \P2.P2.P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$76369 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63986 [0], Q = \P2.P2.P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$76368 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74110 [7], Q = \P2.P1.P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76367 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74110 [6], Q = \P2.P1.P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76366 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74110 [5], Q = \P2.P1.P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76365 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74110 [4], Q = \P2.P1.P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76364 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74110 [3], Q = \P2.P1.P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76363 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74110 [2], Q = \P2.P1.P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76362 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74110 [1], Q = \P2.P1.P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76361 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74110 [0], Q = \P2.P1.P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76360 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73986 [7], Q = \P2.P1.P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76359 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73986 [6], Q = \P2.P1.P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76358 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73986 [5], Q = \P2.P1.P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76357 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73986 [4], Q = \P2.P1.P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76356 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73986 [3], Q = \P2.P1.P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76355 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73986 [2], Q = \P2.P1.P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76354 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73986 [1], Q = \P2.P1.P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76353 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73986 [0], Q = \P2.P1.P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76352 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73862 [7], Q = \P2.P1.P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76351 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73862 [6], Q = \P2.P1.P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76350 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73862 [5], Q = \P2.P1.P1.InstQueue[2] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76349 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73862 [4], Q = \P2.P1.P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76348 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73862 [3], Q = \P2.P1.P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76347 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73862 [2], Q = \P2.P1.P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76346 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73862 [1], Q = \P2.P1.P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76345 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73862 [0], Q = \P2.P1.P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76344 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73738 [7], Q = \P2.P1.P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76343 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73738 [6], Q = \P2.P1.P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76342 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73738 [5], Q = \P2.P1.P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76341 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73738 [4], Q = \P2.P1.P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76340 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73738 [3], Q = \P2.P1.P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76339 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73738 [2], Q = \P2.P1.P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76338 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73738 [1], Q = \P2.P1.P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76337 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73738 [0], Q = \P2.P1.P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76336 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73614 [7], Q = \P2.P1.P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76335 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73614 [6], Q = \P2.P1.P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76334 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73614 [5], Q = \P2.P1.P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76333 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73614 [4], Q = \P2.P1.P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76332 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73614 [3], Q = \P2.P1.P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76331 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73614 [2], Q = \P2.P1.P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76330 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73614 [1], Q = \P2.P1.P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76329 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73614 [0], Q = \P2.P1.P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76328 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73490 [7], Q = \P2.P1.P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76327 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73490 [6], Q = \P2.P1.P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76326 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73490 [5], Q = \P2.P1.P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76325 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73490 [4], Q = \P2.P1.P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76324 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73490 [3], Q = \P2.P1.P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76323 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73490 [2], Q = \P2.P1.P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76322 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73490 [1], Q = \P2.P1.P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76321 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73490 [0], Q = \P2.P1.P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76320 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73366 [7], Q = \P2.P1.P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76319 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73366 [6], Q = \P2.P1.P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76318 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73366 [5], Q = \P2.P1.P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76317 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73366 [4], Q = \P2.P1.P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76316 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73366 [3], Q = \P2.P1.P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76315 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73366 [2], Q = \P2.P1.P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76314 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73366 [1], Q = \P2.P1.P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76313 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73366 [0], Q = \P2.P1.P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76312 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73242 [7], Q = \P2.P1.P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76311 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73242 [6], Q = \P2.P1.P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76310 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73242 [5], Q = \P2.P1.P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76309 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73242 [4], Q = \P2.P1.P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76308 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73242 [3], Q = \P2.P1.P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76307 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73242 [2], Q = \P2.P1.P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76306 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73242 [1], Q = \P2.P1.P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76305 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73242 [0], Q = \P2.P1.P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76304 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73118 [7], Q = \P2.P1.P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76303 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73118 [6], Q = \P2.P1.P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76302 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73118 [5], Q = \P2.P1.P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76301 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73118 [4], Q = \P2.P1.P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76300 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73118 [3], Q = \P2.P1.P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76299 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73118 [2], Q = \P2.P1.P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76298 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73118 [1], Q = \P2.P1.P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76297 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$73118 [0], Q = \P2.P1.P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76296 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72994 [7], Q = \P2.P1.P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76295 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72994 [6], Q = \P2.P1.P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76294 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72994 [5], Q = \P2.P1.P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76293 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72994 [4], Q = \P2.P1.P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76292 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72994 [3], Q = \P2.P1.P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76291 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72994 [2], Q = \P2.P1.P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76290 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72994 [1], Q = \P2.P1.P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76289 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72994 [0], Q = \P2.P1.P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76288 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72870 [7], Q = \P2.P1.P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76287 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72870 [6], Q = \P2.P1.P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76286 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72870 [5], Q = \P2.P1.P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76285 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72870 [4], Q = \P2.P1.P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76284 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72870 [3], Q = \P2.P1.P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76283 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72870 [2], Q = \P2.P1.P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76282 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72870 [1], Q = \P2.P1.P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76281 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72870 [0], Q = \P2.P1.P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76280 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72746 [7], Q = \P2.P1.P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76279 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72746 [6], Q = \P2.P1.P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76278 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72746 [5], Q = \P2.P1.P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76277 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72746 [4], Q = \P2.P1.P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76276 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72746 [3], Q = \P2.P1.P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76275 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72746 [2], Q = \P2.P1.P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76274 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72746 [1], Q = \P2.P1.P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76273 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72746 [0], Q = \P2.P1.P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76272 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72622 [7], Q = \P2.P1.P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76271 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72622 [6], Q = \P2.P1.P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76270 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72622 [5], Q = \P2.P1.P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76269 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72622 [4], Q = \P2.P1.P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76268 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72622 [3], Q = \P2.P1.P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76267 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72622 [2], Q = \P2.P1.P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76266 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72622 [1], Q = \P2.P1.P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76265 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72622 [0], Q = \P2.P1.P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76264 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72498 [7], Q = \P2.P1.P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76263 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72498 [6], Q = \P2.P1.P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76262 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72498 [5], Q = \P2.P1.P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76261 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72498 [4], Q = \P2.P1.P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76260 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72498 [3], Q = \P2.P1.P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76259 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72498 [2], Q = \P2.P1.P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76258 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72498 [1], Q = \P2.P1.P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76257 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72498 [0], Q = \P2.P1.P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76256 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72374 [7], Q = \P2.P1.P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76255 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72374 [6], Q = \P2.P1.P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76254 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72374 [5], Q = \P2.P1.P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76253 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72374 [4], Q = \P2.P1.P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76252 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72374 [3], Q = \P2.P1.P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76251 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72374 [2], Q = \P2.P1.P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76250 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72374 [1], Q = \P2.P1.P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76249 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72374 [0], Q = \P2.P1.P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76248 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72250 [7], Q = \P2.P1.P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$76247 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72250 [6], Q = \P2.P1.P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$76246 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72250 [5], Q = \P2.P1.P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$76245 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72250 [4], Q = \P2.P1.P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$76244 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72250 [3], Q = \P2.P1.P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$76243 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72250 [2], Q = \P2.P1.P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$76242 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72250 [1], Q = \P2.P1.P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$76241 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$72250 [0], Q = \P2.P1.P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$76240 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71555 [3], Q = \P2.P1.P1.State2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$76239 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71555 [2], Q = \P2.P1.P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$76238 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71555 [1], Q = \P2.P1.P1.State2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$76237 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71555 [0], Q = \P2.P1.P1.State2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$70196 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22383 [1], Q = \P1.P2.DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$70195 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22383 [0], Q = \P1.P2.DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$67214 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56609 [1], Q = \P2.P2.DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$67213 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56609 [0], Q = \P2.P2.DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$67212 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$66671, Q = \P2.P1.StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$67211 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$66627 [2], Q = \P2.P1.State [2]).
Adding EN signal on $auto$ff.cc:262:slice$67210 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$66627 [1], Q = \P2.P1.State [1]).
Adding EN signal on $auto$ff.cc:262:slice$67209 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$66627 [0], Q = \P2.P1.State [0]).
Adding EN signal on $auto$ff.cc:262:slice$67208 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$66605, Q = \P2.P1.ADS_n).
Adding EN signal on $auto$ff.cc:262:slice$67206 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$66595, Q = \P2.P1.D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$67204 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [29], Q = \P2.P1.Address [29]).
Adding EN signal on $auto$ff.cc:262:slice$67203 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [28], Q = \P2.P1.Address [28]).
Adding EN signal on $auto$ff.cc:262:slice$67202 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [27], Q = \P2.P1.Address [27]).
Adding EN signal on $auto$ff.cc:262:slice$67201 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [26], Q = \P2.P1.Address [26]).
Adding EN signal on $auto$ff.cc:262:slice$67200 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [25], Q = \P2.P1.Address [25]).
Adding EN signal on $auto$ff.cc:262:slice$67199 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [24], Q = \P2.P1.Address [24]).
Adding EN signal on $auto$ff.cc:262:slice$67198 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [23], Q = \P2.P1.Address [23]).
Adding EN signal on $auto$ff.cc:262:slice$67197 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [22], Q = \P2.P1.Address [22]).
Adding EN signal on $auto$ff.cc:262:slice$67196 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [21], Q = \P2.P1.Address [21]).
Adding EN signal on $auto$ff.cc:262:slice$67195 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [20], Q = \P2.P1.Address [20]).
Adding EN signal on $auto$ff.cc:262:slice$67194 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [19], Q = \P2.P1.Address [19]).
Adding EN signal on $auto$ff.cc:262:slice$67193 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [18], Q = \P2.P1.Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$67192 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [17], Q = \P2.P1.Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$67191 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [16], Q = \P2.P1.Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$67190 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [15], Q = \P2.P1.Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$67189 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [14], Q = \P2.P1.Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$67188 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [13], Q = \P2.P1.Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$67187 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [12], Q = \P2.P1.Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$67186 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [11], Q = \P2.P1.Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$67185 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [10], Q = \P2.P1.Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$67184 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [9], Q = \P2.P1.Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$67183 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [8], Q = \P2.P1.Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$67182 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [7], Q = \P2.P1.Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$67181 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [6], Q = \P2.P1.Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$67180 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [5], Q = \P2.P1.Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$67179 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [4], Q = \P2.P1.Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$67178 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [3], Q = \P2.P1.Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$67177 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [2], Q = \P2.P1.Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$67176 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [1], Q = \P2.P1.Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$67175 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$67089 [0], Q = \P2.P1.Address [0]).
Adding EN signal on $auto$ff.cc:262:slice$66319 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61829, Q = \P2.P2.RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$66318 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61810, Q = \P2.P2.MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$66317 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61791, Q = \P2.P2.ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$66316 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [32], Q = \P2.P2.rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$66315 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [30], Q = \P2.P2.rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$66314 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [29], Q = \P2.P2.rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$66313 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [28], Q = \P2.P2.rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$66312 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [27], Q = \P2.P2.rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$66311 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [26], Q = \P2.P2.rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$66310 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [25], Q = \P2.P2.rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$66309 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [24], Q = \P2.P2.rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$66308 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [23], Q = \P2.P2.rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$66307 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [22], Q = \P2.P2.rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$66306 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [21], Q = \P2.P2.rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$66305 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [20], Q = \P2.P2.rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$66304 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [19], Q = \P2.P2.rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$66303 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [18], Q = \P2.P2.rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$66302 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [17], Q = \P2.P2.rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$66301 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [16], Q = \P2.P2.rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$66300 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [15], Q = \P2.P2.rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$66299 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [14], Q = \P2.P2.rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$66298 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [13], Q = \P2.P2.rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$66297 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [12], Q = \P2.P2.rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$66296 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [11], Q = \P2.P2.rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$66295 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [10], Q = \P2.P2.rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$66294 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [9], Q = \P2.P2.rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$66293 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [8], Q = \P2.P2.rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$66292 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [7], Q = \P2.P2.rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$66291 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [6], Q = \P2.P2.rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$66290 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [5], Q = \P2.P2.rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$66289 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [4], Q = \P2.P2.rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$66288 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [3], Q = \P2.P2.rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$66287 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [2], Q = \P2.P2.rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$66286 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [1], Q = \P2.P2.rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$66285 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61740 [0], Q = \P2.P2.rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$66284 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [31], Q = \P2.P2.EBX [31]).
Adding EN signal on $auto$ff.cc:262:slice$66283 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [30], Q = \P2.P2.EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$66282 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [29], Q = \P2.P2.EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$66281 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [28], Q = \P2.P2.EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$66280 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [27], Q = \P2.P2.EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$66279 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [26], Q = \P2.P2.EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$66278 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [25], Q = \P2.P2.EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$66277 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [24], Q = \P2.P2.EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$66276 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [23], Q = \P2.P2.EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$66275 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [22], Q = \P2.P2.EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$66274 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [21], Q = \P2.P2.EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$66273 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [20], Q = \P2.P2.EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$66272 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [19], Q = \P2.P2.EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$66271 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [18], Q = \P2.P2.EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$66270 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [17], Q = \P2.P2.EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$66269 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [16], Q = \P2.P2.EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$66268 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [15], Q = \P2.P2.EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$66267 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [14], Q = \P2.P2.EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$66266 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [13], Q = \P2.P2.EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$66265 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [12], Q = \P2.P2.EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$66264 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [11], Q = \P2.P2.EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$66263 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [10], Q = \P2.P2.EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$66262 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [9], Q = \P2.P2.EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$66261 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [8], Q = \P2.P2.EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$66260 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [7], Q = \P2.P2.EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$66259 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [6], Q = \P2.P2.EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$66258 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [5], Q = \P2.P2.EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$66257 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [4], Q = \P2.P2.EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$66256 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [3], Q = \P2.P2.EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$66255 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [2], Q = \P2.P2.EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$66254 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [1], Q = \P2.P2.EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$66253 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64947 [0], Q = \P2.P2.EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$66252 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [31], Q = \P2.P2.EAX [31]).
Adding EN signal on $auto$ff.cc:262:slice$66251 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [30], Q = \P2.P2.EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$66250 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [29], Q = \P2.P2.EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$66249 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [28], Q = \P2.P2.EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$66248 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [27], Q = \P2.P2.EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$66247 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [26], Q = \P2.P2.EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$66246 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [25], Q = \P2.P2.EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$66245 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [24], Q = \P2.P2.EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$66244 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [23], Q = \P2.P2.EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$66243 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [22], Q = \P2.P2.EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$66242 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [21], Q = \P2.P2.EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$66241 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [20], Q = \P2.P2.EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$66240 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [19], Q = \P2.P2.EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$66239 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [18], Q = \P2.P2.EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$66238 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [17], Q = \P2.P2.EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$66237 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [16], Q = \P2.P2.EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$66236 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [15], Q = \P2.P2.EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$66235 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [14], Q = \P2.P2.EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$66234 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [13], Q = \P2.P2.EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$66233 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [12], Q = \P2.P2.EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$66232 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [11], Q = \P2.P2.EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$66231 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [10], Q = \P2.P2.EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$66230 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [9], Q = \P2.P2.EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$66229 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [8], Q = \P2.P2.EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$66228 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [7], Q = \P2.P2.EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$66227 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [6], Q = \P2.P2.EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$66226 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [5], Q = \P2.P2.EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$66225 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [4], Q = \P2.P2.EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$66224 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [3], Q = \P2.P2.EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$66223 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [2], Q = \P2.P2.EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$66222 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [1], Q = \P2.P2.EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$66221 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$64463 [0], Q = \P2.P2.EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$66220 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63907 [3], Q = \P2.P2.P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$66219 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63907 [2], Q = \P2.P2.P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$66218 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63907 [1], Q = \P2.P2.P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$66217 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63907 [0], Q = \P2.P2.P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$66216 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61848, Q = \P2.P2.CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$66215 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [14], Q = \P2.P2.P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$66214 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [13], Q = \P2.P2.P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$66213 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [12], Q = \P2.P2.P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$66212 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [11], Q = \P2.P2.P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$66211 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [10], Q = \P2.P2.P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$66210 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [9], Q = \P2.P2.P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$66209 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [8], Q = \P2.P2.P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$66208 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [7], Q = \P2.P2.P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$66207 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [6], Q = \P2.P2.P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$66206 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [5], Q = \P2.P2.P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$66205 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [4], Q = \P2.P2.P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$66204 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [3], Q = \P2.P2.P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$66203 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [2], Q = \P2.P2.P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$66202 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [1], Q = \P2.P2.P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$66201 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65193 [0], Q = \P2.P2.P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$66200 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [15], Q = \P2.P2.P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$66199 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [14], Q = \P2.P2.P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$66198 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [13], Q = \P2.P2.P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$66197 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [12], Q = \P2.P2.P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$66196 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [11], Q = \P2.P2.P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$66195 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [10], Q = \P2.P2.P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$66194 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [9], Q = \P2.P2.P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$66193 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [8], Q = \P2.P2.P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$66192 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [7], Q = \P2.P2.P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$66191 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [6], Q = \P2.P2.P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$66190 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [5], Q = \P2.P2.P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$66189 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [4], Q = \P2.P2.P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$66188 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [3], Q = \P2.P2.P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$66187 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [2], Q = \P2.P2.P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$66186 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [1], Q = \P2.P2.P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$66185 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$65436 [0], Q = \P2.P2.P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$66184 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$3982, Q = \P2.P2.P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$66183 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$3996, Q = \P2.P2.P1.More).
Adding EN signal on $auto$ff.cc:262:slice$66182 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [31], Q = \P2.P2.P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$66181 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [30], Q = \P2.P2.P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$66180 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [29], Q = \P2.P2.P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$66179 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [28], Q = \P2.P2.P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$66178 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [27], Q = \P2.P2.P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$66177 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [26], Q = \P2.P2.P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$66176 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [25], Q = \P2.P2.P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$66175 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [24], Q = \P2.P2.P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$66174 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [23], Q = \P2.P2.P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$66173 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [22], Q = \P2.P2.P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$66172 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [21], Q = \P2.P2.P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$66171 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [20], Q = \P2.P2.P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$66170 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [19], Q = \P2.P2.P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$66169 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [18], Q = \P2.P2.P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$66168 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [17], Q = \P2.P2.P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$66167 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [16], Q = \P2.P2.P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$66166 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [15], Q = \P2.P2.P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$66165 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [14], Q = \P2.P2.P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$66164 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [13], Q = \P2.P2.P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$66163 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [12], Q = \P2.P2.P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$66162 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [11], Q = \P2.P2.P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$66161 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [10], Q = \P2.P2.P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$66160 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [9], Q = \P2.P2.P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$66159 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [8], Q = \P2.P2.P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$66158 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [7], Q = \P2.P2.P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$66157 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [6], Q = \P2.P2.P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$66156 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [5], Q = \P2.P2.P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$66155 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [4], Q = \P2.P2.P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$66154 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [3], Q = \P2.P2.P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$66153 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [2], Q = \P2.P2.P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$66152 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [1], Q = \P2.P2.P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$66151 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$60694 [0], Q = \P2.P2.P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$66150 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [31], Q = \P2.P2.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$66149 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [30], Q = \P2.P2.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$66148 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [29], Q = \P2.P2.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$66147 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [28], Q = \P2.P2.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$66146 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [27], Q = \P2.P2.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$66145 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [26], Q = \P2.P2.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$66144 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [25], Q = \P2.P2.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$66143 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [24], Q = \P2.P2.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$66142 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [23], Q = \P2.P2.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$66141 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [22], Q = \P2.P2.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$66140 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [21], Q = \P2.P2.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$66139 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [20], Q = \P2.P2.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$66138 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [19], Q = \P2.P2.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$66137 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [18], Q = \P2.P2.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$66136 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [17], Q = \P2.P2.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$66135 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [16], Q = \P2.P2.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$66134 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [15], Q = \P2.P2.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$66133 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [14], Q = \P2.P2.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$66132 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [13], Q = \P2.P2.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$66131 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [12], Q = \P2.P2.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$66130 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [11], Q = \P2.P2.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$66129 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [10], Q = \P2.P2.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$66128 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [9], Q = \P2.P2.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$66127 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [8], Q = \P2.P2.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$66126 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [7], Q = \P2.P2.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$66125 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [6], Q = \P2.P2.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$66124 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [5], Q = \P2.P2.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$66123 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [4], Q = \P2.P2.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$66122 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [3], Q = \P2.P2.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$66121 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [2], Q = \P2.P2.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$66120 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [1], Q = \P2.P2.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$66119 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61178 [0], Q = \P2.P2.P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$66118 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [30], Q = \P2.P3.Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$66117 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [29], Q = \P2.P3.Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$66116 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [28], Q = \P2.P3.Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$66115 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [27], Q = \P2.P3.Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$66114 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [26], Q = \P2.P3.Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$66113 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [25], Q = \P2.P3.Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$66112 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [24], Q = \P2.P3.Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$66111 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [23], Q = \P2.P3.Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$66110 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [22], Q = \P2.P3.Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$66109 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [21], Q = \P2.P3.Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$66108 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [20], Q = \P2.P3.Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$66107 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [19], Q = \P2.P3.Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$66106 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [18], Q = \P2.P3.Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$66105 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [17], Q = \P2.P3.Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$66104 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [16], Q = \P2.P3.Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$66103 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [15], Q = \P2.P3.Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$66102 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [14], Q = \P2.P3.Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$66101 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [13], Q = \P2.P3.Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$66100 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [12], Q = \P2.P3.Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$66099 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [11], Q = \P2.P3.Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$66098 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [10], Q = \P2.P3.Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$66097 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [9], Q = \P2.P3.Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$66096 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [8], Q = \P2.P3.Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$66095 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [7], Q = \P2.P3.Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$66094 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [6], Q = \P2.P3.Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$66093 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [5], Q = \P2.P3.Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$66092 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [4], Q = \P2.P3.Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$66091 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [3], Q = \P2.P3.Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$66090 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [2], Q = \P2.P3.Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$66089 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [1], Q = \P2.P3.Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$66088 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55718 [0], Q = \P2.P3.Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$66087 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53786 [3], Q = \P2.P3.P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$66086 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53786 [2], Q = \P2.P3.P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$66085 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53786 [1], Q = \P2.P3.P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$66084 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53786 [0], Q = \P2.P3.P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$66083 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63825 [7], Q = \P2.P2.P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66082 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63825 [6], Q = \P2.P2.P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66081 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63825 [5], Q = \P2.P2.P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66080 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63825 [4], Q = \P2.P2.P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$66079 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63825 [3], Q = \P2.P2.P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$66078 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63825 [2], Q = \P2.P2.P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$66077 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63825 [1], Q = \P2.P2.P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$66076 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63825 [0], Q = \P2.P2.P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$66075 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63701 [7], Q = \P2.P2.P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66074 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63701 [6], Q = \P2.P2.P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66073 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63701 [5], Q = \P2.P2.P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66072 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63701 [4], Q = \P2.P2.P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$66071 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63701 [3], Q = \P2.P2.P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$66070 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63701 [2], Q = \P2.P2.P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$66069 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63701 [1], Q = \P2.P2.P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$66068 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63701 [0], Q = \P2.P2.P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$66067 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63577 [7], Q = \P2.P2.P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66066 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63577 [6], Q = \P2.P2.P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66065 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63577 [5], Q = \P2.P2.P1.InstQueue[2] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66064 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63577 [4], Q = \P2.P2.P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$66063 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63577 [3], Q = \P2.P2.P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$66062 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63577 [2], Q = \P2.P2.P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$66061 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63577 [1], Q = \P2.P2.P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$66060 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63577 [0], Q = \P2.P2.P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$66059 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63453 [7], Q = \P2.P2.P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66058 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63453 [6], Q = \P2.P2.P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66057 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63453 [5], Q = \P2.P2.P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66056 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63453 [4], Q = \P2.P2.P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$66055 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63453 [3], Q = \P2.P2.P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$66054 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63453 [2], Q = \P2.P2.P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$66053 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63453 [1], Q = \P2.P2.P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$66052 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63453 [0], Q = \P2.P2.P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$66051 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63329 [7], Q = \P2.P2.P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66050 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63329 [6], Q = \P2.P2.P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66049 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63329 [5], Q = \P2.P2.P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66048 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63329 [4], Q = \P2.P2.P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$66047 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63329 [3], Q = \P2.P2.P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$66046 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63329 [2], Q = \P2.P2.P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$66045 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63329 [1], Q = \P2.P2.P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$66044 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63329 [0], Q = \P2.P2.P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$66043 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63205 [7], Q = \P2.P2.P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66042 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63205 [6], Q = \P2.P2.P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66041 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63205 [5], Q = \P2.P2.P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66040 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63205 [4], Q = \P2.P2.P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$66039 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63205 [3], Q = \P2.P2.P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$66038 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63205 [2], Q = \P2.P2.P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$66037 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63205 [1], Q = \P2.P2.P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$66036 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63205 [0], Q = \P2.P2.P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$66035 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63081 [7], Q = \P2.P2.P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66034 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63081 [6], Q = \P2.P2.P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66033 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63081 [5], Q = \P2.P2.P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66032 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63081 [4], Q = \P2.P2.P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$66031 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63081 [3], Q = \P2.P2.P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$66030 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63081 [2], Q = \P2.P2.P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$66029 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63081 [1], Q = \P2.P2.P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$66028 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$63081 [0], Q = \P2.P2.P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$66027 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62957 [7], Q = \P2.P2.P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66026 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62957 [6], Q = \P2.P2.P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66025 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62957 [5], Q = \P2.P2.P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66024 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62957 [4], Q = \P2.P2.P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$66023 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62957 [3], Q = \P2.P2.P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$66022 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62957 [2], Q = \P2.P2.P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$66021 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62957 [1], Q = \P2.P2.P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$66020 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62957 [0], Q = \P2.P2.P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$66019 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62833 [7], Q = \P2.P2.P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66018 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62833 [6], Q = \P2.P2.P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66017 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62833 [5], Q = \P2.P2.P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66016 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62833 [4], Q = \P2.P2.P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$66015 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62833 [3], Q = \P2.P2.P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$66014 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62833 [2], Q = \P2.P2.P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$66013 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62833 [1], Q = \P2.P2.P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$66012 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62833 [0], Q = \P2.P2.P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$66011 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62709 [7], Q = \P2.P2.P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66010 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62709 [6], Q = \P2.P2.P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66009 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62709 [5], Q = \P2.P2.P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66008 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62709 [4], Q = \P2.P2.P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$66007 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62709 [3], Q = \P2.P2.P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$66006 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62709 [2], Q = \P2.P2.P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$66005 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62709 [1], Q = \P2.P2.P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$66004 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62709 [0], Q = \P2.P2.P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$66003 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62585 [7], Q = \P2.P2.P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$66002 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62585 [6], Q = \P2.P2.P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$66001 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62585 [5], Q = \P2.P2.P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$66000 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62585 [4], Q = \P2.P2.P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$65999 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62585 [3], Q = \P2.P2.P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$65998 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62585 [2], Q = \P2.P2.P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$65997 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62585 [1], Q = \P2.P2.P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$65996 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62585 [0], Q = \P2.P2.P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$65995 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62461 [7], Q = \P2.P2.P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$65994 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62461 [6], Q = \P2.P2.P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$65993 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62461 [5], Q = \P2.P2.P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$65992 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62461 [4], Q = \P2.P2.P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$65991 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62461 [3], Q = \P2.P2.P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$65990 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62461 [2], Q = \P2.P2.P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$65989 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62461 [1], Q = \P2.P2.P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$65988 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62461 [0], Q = \P2.P2.P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$65987 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62337 [7], Q = \P2.P2.P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$65986 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62337 [6], Q = \P2.P2.P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$65985 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62337 [5], Q = \P2.P2.P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$65984 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62337 [4], Q = \P2.P2.P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$65983 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62337 [3], Q = \P2.P2.P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$65982 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62337 [2], Q = \P2.P2.P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$65981 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62337 [1], Q = \P2.P2.P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$65980 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62337 [0], Q = \P2.P2.P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$65979 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62213 [7], Q = \P2.P2.P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$65978 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62213 [6], Q = \P2.P2.P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$65977 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62213 [5], Q = \P2.P2.P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$65976 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62213 [4], Q = \P2.P2.P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$65975 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62213 [3], Q = \P2.P2.P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$65974 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62213 [2], Q = \P2.P2.P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$65973 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62213 [1], Q = \P2.P2.P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$65972 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62213 [0], Q = \P2.P2.P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$65971 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62089 [7], Q = \P2.P2.P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$65970 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62089 [6], Q = \P2.P2.P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$65969 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62089 [5], Q = \P2.P2.P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$65968 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62089 [4], Q = \P2.P2.P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$65967 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62089 [3], Q = \P2.P2.P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$65966 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62089 [2], Q = \P2.P2.P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$65965 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62089 [1], Q = \P2.P2.P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$65964 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$62089 [0], Q = \P2.P2.P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$65963 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61965 [7], Q = \P2.P2.P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$65962 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61965 [6], Q = \P2.P2.P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$65961 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61965 [5], Q = \P2.P2.P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$65960 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61965 [4], Q = \P2.P2.P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$65959 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61965 [3], Q = \P2.P2.P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$65958 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61965 [2], Q = \P2.P2.P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$65957 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61965 [1], Q = \P2.P2.P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$65956 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61965 [0], Q = \P2.P2.P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$65955 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61270 [3], Q = \P2.P2.P1.State2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$65954 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61270 [2], Q = \P2.P2.P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$65953 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61270 [1], Q = \P2.P2.P1.State2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$65952 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61270 [0], Q = \P2.P2.P1.State2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$56982 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46386 [1], Q = \P2.P3.DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$56981 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46386 [0], Q = \P2.P3.DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$56980 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56407, Q = \P2.P2.StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$56947 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56395 [2], Q = \P2.P2.State [2]).
Adding EN signal on $auto$ff.cc:262:slice$56946 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56395 [1], Q = \P2.P2.State [1]).
Adding EN signal on $auto$ff.cc:262:slice$56945 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56395 [0], Q = \P2.P2.State [0]).
Adding EN signal on $auto$ff.cc:262:slice$56944 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56373, Q = \P2.P2.ADS_n).
Adding EN signal on $auto$ff.cc:262:slice$56942 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56363, Q = \P2.P2.D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$56940 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [29], Q = \P2.P2.Address [29]).
Adding EN signal on $auto$ff.cc:262:slice$56939 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [28], Q = \P2.P2.Address [28]).
Adding EN signal on $auto$ff.cc:262:slice$56938 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [27], Q = \P2.P2.Address [27]).
Adding EN signal on $auto$ff.cc:262:slice$56937 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [26], Q = \P2.P2.Address [26]).
Adding EN signal on $auto$ff.cc:262:slice$56936 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [25], Q = \P2.P2.Address [25]).
Adding EN signal on $auto$ff.cc:262:slice$56935 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [24], Q = \P2.P2.Address [24]).
Adding EN signal on $auto$ff.cc:262:slice$56934 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [23], Q = \P2.P2.Address [23]).
Adding EN signal on $auto$ff.cc:262:slice$56933 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [22], Q = \P2.P2.Address [22]).
Adding EN signal on $auto$ff.cc:262:slice$56932 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [21], Q = \P2.P2.Address [21]).
Adding EN signal on $auto$ff.cc:262:slice$56931 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [20], Q = \P2.P2.Address [20]).
Adding EN signal on $auto$ff.cc:262:slice$56930 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [19], Q = \P2.P2.Address [19]).
Adding EN signal on $auto$ff.cc:262:slice$56929 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [18], Q = \P2.P2.Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$56928 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [17], Q = \P2.P2.Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$56927 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [16], Q = \P2.P2.Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$56926 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [15], Q = \P2.P2.Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$56925 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [14], Q = \P2.P2.Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$56924 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [13], Q = \P2.P2.Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$56923 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [12], Q = \P2.P2.Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$56922 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [11], Q = \P2.P2.Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$56921 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [10], Q = \P2.P2.Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$56920 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [9], Q = \P2.P2.Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$56919 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [8], Q = \P2.P2.Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$56918 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [7], Q = \P2.P2.Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$56917 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [6], Q = \P2.P2.Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$56916 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [5], Q = \P2.P2.Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$56915 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [4], Q = \P2.P2.Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$56914 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [3], Q = \P2.P2.Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$56913 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [2], Q = \P2.P2.Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$56912 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [1], Q = \P2.P2.Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$56911 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$56825 [0], Q = \P2.P2.Address [0]).
Adding EN signal on $auto$ff.cc:262:slice$56115 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51629, Q = \P2.P3.RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$56114 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51610, Q = \P2.P3.MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$56113 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51591, Q = \P2.P3.ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$56112 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [32], Q = \P2.P3.rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$56111 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [30], Q = \P2.P3.rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$56110 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [29], Q = \P2.P3.rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$56109 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [28], Q = \P2.P3.rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$56108 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [27], Q = \P2.P3.rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$56107 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [26], Q = \P2.P3.rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$56106 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [25], Q = \P2.P3.rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$56105 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [24], Q = \P2.P3.rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$56104 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [23], Q = \P2.P3.rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$56103 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [22], Q = \P2.P3.rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$56102 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [21], Q = \P2.P3.rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$56101 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [20], Q = \P2.P3.rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$56100 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [19], Q = \P2.P3.rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$56099 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [18], Q = \P2.P3.rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$56098 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [17], Q = \P2.P3.rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$56097 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [16], Q = \P2.P3.rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$56096 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [15], Q = \P2.P3.rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$56095 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [14], Q = \P2.P3.rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$56094 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [13], Q = \P2.P3.rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$56093 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [12], Q = \P2.P3.rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$56092 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [11], Q = \P2.P3.rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$56091 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [10], Q = \P2.P3.rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$56090 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [9], Q = \P2.P3.rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$56089 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [8], Q = \P2.P3.rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$56088 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [7], Q = \P2.P3.rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$56087 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [6], Q = \P2.P3.rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$56086 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [5], Q = \P2.P3.rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$56085 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [4], Q = \P2.P3.rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$56084 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [3], Q = \P2.P3.rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$56083 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [2], Q = \P2.P3.rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$56082 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [1], Q = \P2.P3.rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$56081 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51540 [0], Q = \P2.P3.rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$56080 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [31], Q = \P2.P3.EBX [31]).
Adding EN signal on $auto$ff.cc:262:slice$56079 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [30], Q = \P2.P3.EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$56078 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [29], Q = \P2.P3.EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$56077 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [28], Q = \P2.P3.EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$56076 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [27], Q = \P2.P3.EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$56075 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [26], Q = \P2.P3.EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$56074 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [25], Q = \P2.P3.EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$56073 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [24], Q = \P2.P3.EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$56072 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [23], Q = \P2.P3.EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$56071 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [22], Q = \P2.P3.EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$56070 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [21], Q = \P2.P3.EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$56069 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [20], Q = \P2.P3.EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$56068 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [19], Q = \P2.P3.EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$56067 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [18], Q = \P2.P3.EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$56066 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [17], Q = \P2.P3.EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$56065 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [16], Q = \P2.P3.EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$56064 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [15], Q = \P2.P3.EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$56063 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [14], Q = \P2.P3.EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$56062 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [13], Q = \P2.P3.EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$56061 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [12], Q = \P2.P3.EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$56060 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [11], Q = \P2.P3.EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$56059 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [10], Q = \P2.P3.EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$56058 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [9], Q = \P2.P3.EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$56057 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [8], Q = \P2.P3.EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$56056 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [7], Q = \P2.P3.EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$56055 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [6], Q = \P2.P3.EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$56054 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [5], Q = \P2.P3.EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$56053 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [4], Q = \P2.P3.EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$56052 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [3], Q = \P2.P3.EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$56051 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [2], Q = \P2.P3.EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$56050 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [1], Q = \P2.P3.EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$56049 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54747 [0], Q = \P2.P3.EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$56048 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [31], Q = \P2.P3.EAX [31]).
Adding EN signal on $auto$ff.cc:262:slice$56047 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [30], Q = \P2.P3.EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$56046 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [29], Q = \P2.P3.EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$56045 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [28], Q = \P2.P3.EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$56044 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [27], Q = \P2.P3.EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$56043 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [26], Q = \P2.P3.EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$56042 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [25], Q = \P2.P3.EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$56041 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [24], Q = \P2.P3.EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$56040 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [23], Q = \P2.P3.EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$56039 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [22], Q = \P2.P3.EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$56038 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [21], Q = \P2.P3.EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$56037 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [20], Q = \P2.P3.EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$56036 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [19], Q = \P2.P3.EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$56035 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [18], Q = \P2.P3.EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$56034 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [17], Q = \P2.P3.EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$56033 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [16], Q = \P2.P3.EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$56032 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [15], Q = \P2.P3.EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$56031 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [14], Q = \P2.P3.EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$56030 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [13], Q = \P2.P3.EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$56029 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [12], Q = \P2.P3.EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$56028 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [11], Q = \P2.P3.EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$56027 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [10], Q = \P2.P3.EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$56026 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [9], Q = \P2.P3.EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$56025 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [8], Q = \P2.P3.EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$56024 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [7], Q = \P2.P3.EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$56023 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [6], Q = \P2.P3.EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$56022 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [5], Q = \P2.P3.EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$56021 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [4], Q = \P2.P3.EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$56020 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [3], Q = \P2.P3.EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$56019 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [2], Q = \P2.P3.EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$56018 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [1], Q = \P2.P3.EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$56017 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54263 [0], Q = \P2.P3.EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$56016 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53707 [3], Q = \P2.P3.P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$56015 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53707 [2], Q = \P2.P3.P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$56014 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53707 [1], Q = \P2.P3.P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$56013 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53707 [0], Q = \P2.P3.P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$56012 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51648, Q = \P2.P3.CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$56011 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [14], Q = \P2.P3.P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$56010 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [13], Q = \P2.P3.P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$56009 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [12], Q = \P2.P3.P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$56008 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [11], Q = \P2.P3.P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$56007 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [10], Q = \P2.P3.P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$56006 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [9], Q = \P2.P3.P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$56005 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [8], Q = \P2.P3.P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$56004 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [7], Q = \P2.P3.P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$56003 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [6], Q = \P2.P3.P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$56002 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [5], Q = \P2.P3.P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$56001 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [4], Q = \P2.P3.P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$56000 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [3], Q = \P2.P3.P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$55999 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [2], Q = \P2.P3.P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$55998 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [1], Q = \P2.P3.P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$55997 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$54993 [0], Q = \P2.P3.P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$55996 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [15], Q = \P2.P3.P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$55995 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [14], Q = \P2.P3.P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$55994 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [13], Q = \P2.P3.P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$55993 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [12], Q = \P2.P3.P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$55992 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [11], Q = \P2.P3.P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$55991 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [10], Q = \P2.P3.P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$55990 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [9], Q = \P2.P3.P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$55989 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [8], Q = \P2.P3.P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$55988 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [7], Q = \P2.P3.P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$55987 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [6], Q = \P2.P3.P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$55986 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [5], Q = \P2.P3.P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$55985 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [4], Q = \P2.P3.P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$55984 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [3], Q = \P2.P3.P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$55983 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [2], Q = \P2.P3.P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$55982 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [1], Q = \P2.P3.P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$55981 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$55236 [0], Q = \P2.P3.P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$55980 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$4216, Q = \P2.P3.P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$55979 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$4230, Q = \P2.P3.P1.More).
Adding EN signal on $auto$ff.cc:262:slice$55978 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [31], Q = \P2.P3.P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$55977 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [30], Q = \P2.P3.P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$55976 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [29], Q = \P2.P3.P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$55975 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [28], Q = \P2.P3.P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$55974 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [27], Q = \P2.P3.P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$55973 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [26], Q = \P2.P3.P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$55972 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [25], Q = \P2.P3.P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$55971 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [24], Q = \P2.P3.P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$55970 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [23], Q = \P2.P3.P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$55969 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [22], Q = \P2.P3.P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$55968 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [21], Q = \P2.P3.P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$55967 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [20], Q = \P2.P3.P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$55966 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [19], Q = \P2.P3.P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$55965 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [18], Q = \P2.P3.P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$55964 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [17], Q = \P2.P3.P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$55963 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [16], Q = \P2.P3.P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$55962 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [15], Q = \P2.P3.P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$55961 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [14], Q = \P2.P3.P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$55960 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [13], Q = \P2.P3.P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$55959 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [12], Q = \P2.P3.P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$55958 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [11], Q = \P2.P3.P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$55957 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [10], Q = \P2.P3.P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$55956 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [9], Q = \P2.P3.P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$55955 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [8], Q = \P2.P3.P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$55954 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [7], Q = \P2.P3.P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$55953 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [6], Q = \P2.P3.P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$55952 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [5], Q = \P2.P3.P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$55951 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [4], Q = \P2.P3.P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$55950 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [3], Q = \P2.P3.P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$55949 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [2], Q = \P2.P3.P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$55948 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [1], Q = \P2.P3.P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$55947 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50494 [0], Q = \P2.P3.P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$55946 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [31], Q = \P2.P3.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$55945 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [30], Q = \P2.P3.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$55944 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [29], Q = \P2.P3.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$55943 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [28], Q = \P2.P3.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$55942 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [27], Q = \P2.P3.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$55941 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [26], Q = \P2.P3.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$55940 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [25], Q = \P2.P3.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$55939 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [24], Q = \P2.P3.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$55938 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [23], Q = \P2.P3.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$55937 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [22], Q = \P2.P3.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$55936 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [21], Q = \P2.P3.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$55935 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [20], Q = \P2.P3.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$55934 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [19], Q = \P2.P3.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$55933 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [18], Q = \P2.P3.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$55932 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [17], Q = \P2.P3.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$55931 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [16], Q = \P2.P3.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$55930 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [15], Q = \P2.P3.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$55929 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [14], Q = \P2.P3.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$55928 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [13], Q = \P2.P3.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$55927 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [12], Q = \P2.P3.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$55926 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [11], Q = \P2.P3.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$55925 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [10], Q = \P2.P3.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$55924 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [9], Q = \P2.P3.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$55923 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [8], Q = \P2.P3.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$55922 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [7], Q = \P2.P3.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$55921 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [6], Q = \P2.P3.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$55920 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [5], Q = \P2.P3.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$55919 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [4], Q = \P2.P3.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$55918 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [3], Q = \P2.P3.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$55917 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [2], Q = \P2.P3.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$55916 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [1], Q = \P2.P3.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$55915 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50978 [0], Q = \P2.P3.P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$55883 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53625 [7], Q = \P2.P3.P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55882 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53625 [6], Q = \P2.P3.P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55881 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53625 [5], Q = \P2.P3.P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55880 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53625 [4], Q = \P2.P3.P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55879 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53625 [3], Q = \P2.P3.P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55878 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53625 [2], Q = \P2.P3.P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55877 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53625 [1], Q = \P2.P3.P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55876 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53625 [0], Q = \P2.P3.P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55875 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53501 [7], Q = \P2.P3.P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55874 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53501 [6], Q = \P2.P3.P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55873 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53501 [5], Q = \P2.P3.P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55872 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53501 [4], Q = \P2.P3.P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55871 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53501 [3], Q = \P2.P3.P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55870 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53501 [2], Q = \P2.P3.P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55869 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53501 [1], Q = \P2.P3.P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55868 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53501 [0], Q = \P2.P3.P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55867 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53377 [7], Q = \P2.P3.P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55866 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53377 [6], Q = \P2.P3.P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55865 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53377 [5], Q = \P2.P3.P1.InstQueue[2] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55864 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53377 [4], Q = \P2.P3.P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55863 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53377 [3], Q = \P2.P3.P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55862 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53377 [2], Q = \P2.P3.P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55861 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53377 [1], Q = \P2.P3.P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55860 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53377 [0], Q = \P2.P3.P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55859 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53253 [7], Q = \P2.P3.P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55858 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53253 [6], Q = \P2.P3.P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55857 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53253 [5], Q = \P2.P3.P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55856 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53253 [4], Q = \P2.P3.P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55855 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53253 [3], Q = \P2.P3.P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55854 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53253 [2], Q = \P2.P3.P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55853 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53253 [1], Q = \P2.P3.P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55852 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53253 [0], Q = \P2.P3.P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55851 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53129 [7], Q = \P2.P3.P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55850 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53129 [6], Q = \P2.P3.P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55849 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53129 [5], Q = \P2.P3.P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55848 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53129 [4], Q = \P2.P3.P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55847 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53129 [3], Q = \P2.P3.P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55846 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53129 [2], Q = \P2.P3.P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55845 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53129 [1], Q = \P2.P3.P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55844 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53129 [0], Q = \P2.P3.P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55843 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53005 [7], Q = \P2.P3.P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55842 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53005 [6], Q = \P2.P3.P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55841 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53005 [5], Q = \P2.P3.P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55840 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53005 [4], Q = \P2.P3.P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55839 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53005 [3], Q = \P2.P3.P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55838 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53005 [2], Q = \P2.P3.P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55837 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53005 [1], Q = \P2.P3.P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55836 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$53005 [0], Q = \P2.P3.P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55835 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52881 [7], Q = \P2.P3.P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55834 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52881 [6], Q = \P2.P3.P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55833 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52881 [5], Q = \P2.P3.P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55832 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52881 [4], Q = \P2.P3.P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55831 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52881 [3], Q = \P2.P3.P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55830 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52881 [2], Q = \P2.P3.P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55829 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52881 [1], Q = \P2.P3.P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55828 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52881 [0], Q = \P2.P3.P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55827 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52757 [7], Q = \P2.P3.P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55826 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52757 [6], Q = \P2.P3.P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55825 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52757 [5], Q = \P2.P3.P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55824 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52757 [4], Q = \P2.P3.P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55823 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52757 [3], Q = \P2.P3.P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55822 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52757 [2], Q = \P2.P3.P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55821 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52757 [1], Q = \P2.P3.P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55820 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52757 [0], Q = \P2.P3.P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55819 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52633 [7], Q = \P2.P3.P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55818 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52633 [6], Q = \P2.P3.P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55817 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52633 [5], Q = \P2.P3.P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55816 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52633 [4], Q = \P2.P3.P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55815 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52633 [3], Q = \P2.P3.P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55814 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52633 [2], Q = \P2.P3.P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55813 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52633 [1], Q = \P2.P3.P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55812 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52633 [0], Q = \P2.P3.P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55811 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52509 [7], Q = \P2.P3.P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55810 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52509 [6], Q = \P2.P3.P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55809 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52509 [5], Q = \P2.P3.P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55808 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52509 [4], Q = \P2.P3.P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55807 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52509 [3], Q = \P2.P3.P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55806 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52509 [2], Q = \P2.P3.P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55805 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52509 [1], Q = \P2.P3.P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55804 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52509 [0], Q = \P2.P3.P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55803 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52385 [7], Q = \P2.P3.P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55802 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52385 [6], Q = \P2.P3.P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55801 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52385 [5], Q = \P2.P3.P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55800 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52385 [4], Q = \P2.P3.P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55799 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52385 [3], Q = \P2.P3.P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55798 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52385 [2], Q = \P2.P3.P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55797 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52385 [1], Q = \P2.P3.P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55796 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52385 [0], Q = \P2.P3.P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55795 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52261 [7], Q = \P2.P3.P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55794 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52261 [6], Q = \P2.P3.P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55793 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52261 [5], Q = \P2.P3.P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55792 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52261 [4], Q = \P2.P3.P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55791 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52261 [3], Q = \P2.P3.P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55790 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52261 [2], Q = \P2.P3.P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55789 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52261 [1], Q = \P2.P3.P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55788 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52261 [0], Q = \P2.P3.P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55787 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52137 [7], Q = \P2.P3.P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55786 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52137 [6], Q = \P2.P3.P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55785 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52137 [5], Q = \P2.P3.P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55784 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52137 [4], Q = \P2.P3.P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55783 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52137 [3], Q = \P2.P3.P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55782 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52137 [2], Q = \P2.P3.P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55781 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52137 [1], Q = \P2.P3.P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55780 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52137 [0], Q = \P2.P3.P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55779 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52013 [7], Q = \P2.P3.P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55778 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52013 [6], Q = \P2.P3.P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55777 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52013 [5], Q = \P2.P3.P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55776 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52013 [4], Q = \P2.P3.P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55775 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52013 [3], Q = \P2.P3.P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55774 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52013 [2], Q = \P2.P3.P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55773 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52013 [1], Q = \P2.P3.P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55772 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$52013 [0], Q = \P2.P3.P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55771 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51889 [7], Q = \P2.P3.P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55770 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51889 [6], Q = \P2.P3.P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55769 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51889 [5], Q = \P2.P3.P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55768 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51889 [4], Q = \P2.P3.P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55767 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51889 [3], Q = \P2.P3.P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55766 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51889 [2], Q = \P2.P3.P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55765 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51889 [1], Q = \P2.P3.P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55764 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51889 [0], Q = \P2.P3.P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55763 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51765 [7], Q = \P2.P3.P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$55762 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51765 [6], Q = \P2.P3.P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$55761 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51765 [5], Q = \P2.P3.P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$55760 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51765 [4], Q = \P2.P3.P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$55759 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51765 [3], Q = \P2.P3.P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$55758 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51765 [2], Q = \P2.P3.P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$55757 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51765 [1], Q = \P2.P3.P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$55756 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51765 [0], Q = \P2.P3.P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$55755 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51070 [3], Q = \P2.P3.P1.State2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$55754 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51070 [2], Q = \P2.P3.P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$55753 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51070 [1], Q = \P2.P3.P1.State2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$55752 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$51070 [0], Q = \P2.P3.P1.State2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$46777 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [19], Q = \P3.IR [19]).
Adding EN signal on $auto$ff.cc:262:slice$46776 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [18], Q = \P3.IR [18]).
Adding EN signal on $auto$ff.cc:262:slice$46775 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [17], Q = \P3.IR [17]).
Adding EN signal on $auto$ff.cc:262:slice$46774 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [16], Q = \P3.IR [16]).
Adding EN signal on $auto$ff.cc:262:slice$46773 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [15], Q = \P3.IR [15]).
Adding EN signal on $auto$ff.cc:262:slice$46772 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [14], Q = \P3.IR [14]).
Adding EN signal on $auto$ff.cc:262:slice$46771 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [13], Q = \P3.IR [13]).
Adding EN signal on $auto$ff.cc:262:slice$46770 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [12], Q = \P3.IR [12]).
Adding EN signal on $auto$ff.cc:262:slice$46769 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [11], Q = \P3.IR [11]).
Adding EN signal on $auto$ff.cc:262:slice$46768 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [10], Q = \P3.IR [10]).
Adding EN signal on $auto$ff.cc:262:slice$46767 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [9], Q = \P3.IR [9]).
Adding EN signal on $auto$ff.cc:262:slice$46766 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [8], Q = \P3.IR [8]).
Adding EN signal on $auto$ff.cc:262:slice$46765 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [7], Q = \P3.IR [7]).
Adding EN signal on $auto$ff.cc:262:slice$46764 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [6], Q = \P3.IR [6]).
Adding EN signal on $auto$ff.cc:262:slice$46763 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [5], Q = \P3.IR [5]).
Adding EN signal on $auto$ff.cc:262:slice$46762 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [4], Q = \P3.IR [4]).
Adding EN signal on $auto$ff.cc:262:slice$46761 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [3], Q = \P3.IR [3]).
Adding EN signal on $auto$ff.cc:262:slice$46760 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [2], Q = \P3.IR [2]).
Adding EN signal on $auto$ff.cc:262:slice$46759 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [1], Q = \P3.IR [1]).
Adding EN signal on $auto$ff.cc:262:slice$46758 ($_DFF_PP0_) from module b18 (D = $auto$wreduce.cc:454:run$2978 [0], Q = \P3.IR [0]).
Adding EN signal on $auto$ff.cc:262:slice$46757 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46184, Q = \P2.P3.StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$46724 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46172 [2], Q = \P2.P3.State [2]).
Adding EN signal on $auto$ff.cc:262:slice$46723 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46172 [1], Q = \P2.P3.State [1]).
Adding EN signal on $auto$ff.cc:262:slice$46722 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46172 [0], Q = \P2.P3.State [0]).
Adding EN signal on $auto$ff.cc:262:slice$46721 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46150, Q = \P2.P3.ADS_n).
Adding EN signal on $auto$ff.cc:262:slice$46719 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46140, Q = \P2.P3.D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$46706 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [18], Q = \P2.P3.Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$46705 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [17], Q = \P2.P3.Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$46704 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [16], Q = \P2.P3.Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$46703 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [15], Q = \P2.P3.Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$46702 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [14], Q = \P2.P3.Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$46701 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [13], Q = \P2.P3.Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$46700 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [12], Q = \P2.P3.Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$46699 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [11], Q = \P2.P3.Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$46698 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [10], Q = \P2.P3.Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$46697 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [9], Q = \P2.P3.Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$46696 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [8], Q = \P2.P3.Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$46695 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [7], Q = \P2.P3.Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$46694 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [6], Q = \P2.P3.Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$46693 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [5], Q = \P2.P3.Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$46692 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [4], Q = \P2.P3.Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$46691 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [3], Q = \P2.P3.Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$46690 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [2], Q = \P2.P3.Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$46689 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [1], Q = \P2.P3.Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$46688 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$46602 [0], Q = \P2.P3.Address [0]).
Adding EN signal on $auto$ff.cc:262:slice$44803 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$82625 [2], Q = \P4.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$44802 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$82625 [1], Q = \P4.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$44801 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$82625 [0], Q = \P4.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$42828 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [30], Q = \P1.P1.Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$42827 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [29], Q = \P1.P1.Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$42826 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [28], Q = \P1.P1.Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$42825 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [27], Q = \P1.P1.Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$42824 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [26], Q = \P1.P1.Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$42823 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [25], Q = \P1.P1.Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$42822 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [24], Q = \P1.P1.Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$42821 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [23], Q = \P1.P1.Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$42820 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [22], Q = \P1.P1.Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$42819 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [21], Q = \P1.P1.Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$42818 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [20], Q = \P1.P1.Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$42817 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [19], Q = \P1.P1.Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$42816 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [18], Q = \P1.P1.Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$42815 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [17], Q = \P1.P1.Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$42814 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [16], Q = \P1.P1.Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$42813 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [15], Q = \P1.P1.Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$42812 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [14], Q = \P1.P1.Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$42811 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [13], Q = \P1.P1.Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$42810 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [12], Q = \P1.P1.Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$42809 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [11], Q = \P1.P1.Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$42808 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [10], Q = \P1.P1.Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$42807 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [9], Q = \P1.P1.Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$42806 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [8], Q = \P1.P1.Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$42805 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [7], Q = \P1.P1.Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$42804 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [6], Q = \P1.P1.Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$42803 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [5], Q = \P1.P1.Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$42802 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [4], Q = \P1.P1.Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$42801 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [3], Q = \P1.P1.Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$42800 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [2], Q = \P1.P1.Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$42799 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [1], Q = \P1.P1.Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$42798 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$42190 [0], Q = \P1.P1.Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$42774 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$32872 [1], Q = \P1.P1.DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$42773 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$32872 [0], Q = \P1.P1.DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$42591 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38101, Q = \P1.P1.RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$42590 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38082, Q = \P1.P1.MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$42589 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38063, Q = \P1.P1.ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$42588 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [32], Q = \P1.P1.rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$42587 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [30], Q = \P1.P1.rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$42586 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [29], Q = \P1.P1.rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$42585 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [28], Q = \P1.P1.rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$42584 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [27], Q = \P1.P1.rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$42583 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [26], Q = \P1.P1.rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$42582 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [25], Q = \P1.P1.rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$42581 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [24], Q = \P1.P1.rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$42580 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [23], Q = \P1.P1.rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$42579 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [22], Q = \P1.P1.rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$42578 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [21], Q = \P1.P1.rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$42577 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [20], Q = \P1.P1.rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$42576 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [19], Q = \P1.P1.rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$42575 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [18], Q = \P1.P1.rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$42574 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [17], Q = \P1.P1.rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$42573 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [16], Q = \P1.P1.rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$42572 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [15], Q = \P1.P1.rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$42571 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [14], Q = \P1.P1.rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$42570 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [13], Q = \P1.P1.rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$42569 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [12], Q = \P1.P1.rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$42568 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [11], Q = \P1.P1.rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$42567 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [10], Q = \P1.P1.rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$42566 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [9], Q = \P1.P1.rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$42565 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [8], Q = \P1.P1.rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$42564 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [7], Q = \P1.P1.rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$42563 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [6], Q = \P1.P1.rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$42562 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [5], Q = \P1.P1.rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$42561 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [4], Q = \P1.P1.rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$42560 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [3], Q = \P1.P1.rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$42559 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [2], Q = \P1.P1.rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$42558 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [1], Q = \P1.P1.rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$42557 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38012 [0], Q = \P1.P1.rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$42556 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [31], Q = \P1.P1.EBX [31]).
Adding EN signal on $auto$ff.cc:262:slice$42555 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [30], Q = \P1.P1.EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$42554 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [29], Q = \P1.P1.EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$42553 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [28], Q = \P1.P1.EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$42552 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [27], Q = \P1.P1.EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$42551 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [26], Q = \P1.P1.EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$42550 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [25], Q = \P1.P1.EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$42549 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [24], Q = \P1.P1.EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$42548 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [23], Q = \P1.P1.EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$42547 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [22], Q = \P1.P1.EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$42546 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [21], Q = \P1.P1.EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$42545 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [20], Q = \P1.P1.EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$42544 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [19], Q = \P1.P1.EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$42543 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [18], Q = \P1.P1.EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$42542 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [17], Q = \P1.P1.EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$42541 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [16], Q = \P1.P1.EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$42540 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [15], Q = \P1.P1.EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$42539 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [14], Q = \P1.P1.EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$42538 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [13], Q = \P1.P1.EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$42537 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [12], Q = \P1.P1.EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$42536 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [11], Q = \P1.P1.EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$42535 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [10], Q = \P1.P1.EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$42534 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [9], Q = \P1.P1.EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$42533 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [8], Q = \P1.P1.EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$42532 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [7], Q = \P1.P1.EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$42531 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [6], Q = \P1.P1.EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$42530 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [5], Q = \P1.P1.EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$42529 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [4], Q = \P1.P1.EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$42528 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [3], Q = \P1.P1.EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$42527 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [2], Q = \P1.P1.EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$42526 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [1], Q = \P1.P1.EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$42525 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41219 [0], Q = \P1.P1.EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$42524 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [31], Q = \P1.P1.EAX [31]).
Adding EN signal on $auto$ff.cc:262:slice$42523 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [30], Q = \P1.P1.EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$42522 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [29], Q = \P1.P1.EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$42521 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [28], Q = \P1.P1.EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$42520 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [27], Q = \P1.P1.EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$42519 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [26], Q = \P1.P1.EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$42518 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [25], Q = \P1.P1.EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$42517 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [24], Q = \P1.P1.EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$42516 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [23], Q = \P1.P1.EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$42515 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [22], Q = \P1.P1.EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$42514 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [21], Q = \P1.P1.EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$42513 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [20], Q = \P1.P1.EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$42512 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [19], Q = \P1.P1.EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$42511 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [18], Q = \P1.P1.EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$42510 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [17], Q = \P1.P1.EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$42509 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [16], Q = \P1.P1.EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$42508 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [15], Q = \P1.P1.EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$42507 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [14], Q = \P1.P1.EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$42506 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [13], Q = \P1.P1.EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$42505 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [12], Q = \P1.P1.EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$42504 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [11], Q = \P1.P1.EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$42503 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [10], Q = \P1.P1.EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$42502 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [9], Q = \P1.P1.EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$42501 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [8], Q = \P1.P1.EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$42500 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [7], Q = \P1.P1.EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$42499 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [6], Q = \P1.P1.EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$42498 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [5], Q = \P1.P1.EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$42497 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [4], Q = \P1.P1.EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$42496 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [3], Q = \P1.P1.EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$42495 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [2], Q = \P1.P1.EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$42494 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [1], Q = \P1.P1.EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$42493 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40735 [0], Q = \P1.P1.EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$42492 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40179 [3], Q = \P1.P1.P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$42491 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40179 [2], Q = \P1.P1.P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$42490 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40179 [1], Q = \P1.P1.P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$42489 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40179 [0], Q = \P1.P1.P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$42488 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38120, Q = \P1.P1.CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$42487 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [14], Q = \P1.P1.P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$42486 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [13], Q = \P1.P1.P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$42485 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [12], Q = \P1.P1.P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$42484 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [11], Q = \P1.P1.P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$42483 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [10], Q = \P1.P1.P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$42482 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [9], Q = \P1.P1.P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$42481 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [8], Q = \P1.P1.P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$42480 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [7], Q = \P1.P1.P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$42479 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [6], Q = \P1.P1.P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$42478 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [5], Q = \P1.P1.P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$42477 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [4], Q = \P1.P1.P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$42476 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [3], Q = \P1.P1.P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$42475 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [2], Q = \P1.P1.P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$42474 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [1], Q = \P1.P1.P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$42473 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41465 [0], Q = \P1.P1.P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$42472 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [15], Q = \P1.P1.P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$42471 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [14], Q = \P1.P1.P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$42470 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [13], Q = \P1.P1.P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$42469 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [12], Q = \P1.P1.P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$42468 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [11], Q = \P1.P1.P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$42467 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [10], Q = \P1.P1.P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$42466 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [9], Q = \P1.P1.P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$42465 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [8], Q = \P1.P1.P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$42464 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [7], Q = \P1.P1.P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$42463 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [6], Q = \P1.P1.P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$42462 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [5], Q = \P1.P1.P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$42461 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [4], Q = \P1.P1.P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$42460 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [3], Q = \P1.P1.P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$42459 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [2], Q = \P1.P1.P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$42458 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [1], Q = \P1.P1.P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$42457 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$41708 [0], Q = \P1.P1.P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$42456 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$3046, Q = \P1.P1.P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$42455 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$3060, Q = \P1.P1.P1.More).
Adding EN signal on $auto$ff.cc:262:slice$42454 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [31], Q = \P1.P1.P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$42453 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [30], Q = \P1.P1.P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$42452 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [29], Q = \P1.P1.P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$42451 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [28], Q = \P1.P1.P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$42450 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [27], Q = \P1.P1.P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$42449 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [26], Q = \P1.P1.P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$42448 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [25], Q = \P1.P1.P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$42447 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [24], Q = \P1.P1.P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$42446 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [23], Q = \P1.P1.P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$42445 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [22], Q = \P1.P1.P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$42444 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [21], Q = \P1.P1.P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$42443 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [20], Q = \P1.P1.P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$42442 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [19], Q = \P1.P1.P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$42441 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [18], Q = \P1.P1.P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$42440 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [17], Q = \P1.P1.P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$42439 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [16], Q = \P1.P1.P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$42438 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [15], Q = \P1.P1.P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$42437 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [14], Q = \P1.P1.P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$42436 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [13], Q = \P1.P1.P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$42435 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [12], Q = \P1.P1.P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$42434 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [11], Q = \P1.P1.P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$42433 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [10], Q = \P1.P1.P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$42432 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [9], Q = \P1.P1.P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$42431 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [8], Q = \P1.P1.P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$42430 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [7], Q = \P1.P1.P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$42429 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [6], Q = \P1.P1.P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$42428 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [5], Q = \P1.P1.P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$42427 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [4], Q = \P1.P1.P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$42426 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [3], Q = \P1.P1.P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$42425 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [2], Q = \P1.P1.P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$42424 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [1], Q = \P1.P1.P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$42423 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$36966 [0], Q = \P1.P1.P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$42422 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [31], Q = \P1.P1.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$42421 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [30], Q = \P1.P1.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$42420 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [29], Q = \P1.P1.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$42419 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [28], Q = \P1.P1.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$42418 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [27], Q = \P1.P1.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$42417 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [26], Q = \P1.P1.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$42416 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [25], Q = \P1.P1.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$42415 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [24], Q = \P1.P1.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$42414 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [23], Q = \P1.P1.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$42413 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [22], Q = \P1.P1.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$42412 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [21], Q = \P1.P1.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$42411 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [20], Q = \P1.P1.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$42410 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [19], Q = \P1.P1.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$42409 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [18], Q = \P1.P1.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$42408 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [17], Q = \P1.P1.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$42407 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [16], Q = \P1.P1.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$42406 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [15], Q = \P1.P1.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$42405 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [14], Q = \P1.P1.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$42404 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [13], Q = \P1.P1.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$42403 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [12], Q = \P1.P1.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$42402 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [11], Q = \P1.P1.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$42401 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [10], Q = \P1.P1.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$42400 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [9], Q = \P1.P1.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$42399 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [8], Q = \P1.P1.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$42398 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [7], Q = \P1.P1.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$42397 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [6], Q = \P1.P1.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$42396 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [5], Q = \P1.P1.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$42395 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [4], Q = \P1.P1.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$42394 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [3], Q = \P1.P1.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$42393 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [2], Q = \P1.P1.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$42392 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [1], Q = \P1.P1.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$42391 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37450 [0], Q = \P1.P1.P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$42390 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [30], Q = \P1.P2.Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$42389 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [29], Q = \P1.P2.Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$42388 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [28], Q = \P1.P2.Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$42387 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [27], Q = \P1.P2.Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$42386 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [26], Q = \P1.P2.Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$42385 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [25], Q = \P1.P2.Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$42384 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [24], Q = \P1.P2.Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$42383 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [23], Q = \P1.P2.Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$42382 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [22], Q = \P1.P2.Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$42381 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [21], Q = \P1.P2.Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$42380 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [20], Q = \P1.P2.Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$42379 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [19], Q = \P1.P2.Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$42378 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [18], Q = \P1.P2.Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$42377 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [17], Q = \P1.P2.Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$42376 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [16], Q = \P1.P2.Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$42375 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [15], Q = \P1.P2.Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$42374 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [14], Q = \P1.P2.Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$42373 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [13], Q = \P1.P2.Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$42372 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [12], Q = \P1.P2.Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$42371 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [11], Q = \P1.P2.Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$42370 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [10], Q = \P1.P2.Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$42369 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [9], Q = \P1.P2.Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$42368 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [8], Q = \P1.P2.Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$42367 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [7], Q = \P1.P2.Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$42366 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [6], Q = \P1.P2.Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$42365 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [5], Q = \P1.P2.Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$42364 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [4], Q = \P1.P2.Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$42363 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [3], Q = \P1.P2.Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$42362 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [2], Q = \P1.P2.Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$42361 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [1], Q = \P1.P2.Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$42360 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31945 [0], Q = \P1.P2.Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$42359 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30013 [3], Q = \P1.P2.P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$42358 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30013 [2], Q = \P1.P2.P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$42357 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30013 [1], Q = \P1.P2.P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$42356 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30013 [0], Q = \P1.P2.P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$42355 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40097 [7], Q = \P1.P1.P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42354 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40097 [6], Q = \P1.P1.P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42353 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40097 [5], Q = \P1.P1.P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42352 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40097 [4], Q = \P1.P1.P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42351 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40097 [3], Q = \P1.P1.P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42350 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40097 [2], Q = \P1.P1.P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42349 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40097 [1], Q = \P1.P1.P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42348 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40097 [0], Q = \P1.P1.P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42347 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39973 [7], Q = \P1.P1.P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42346 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39973 [6], Q = \P1.P1.P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42345 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39973 [5], Q = \P1.P1.P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42344 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39973 [4], Q = \P1.P1.P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42343 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39973 [3], Q = \P1.P1.P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42342 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39973 [2], Q = \P1.P1.P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42341 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39973 [1], Q = \P1.P1.P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42340 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39973 [0], Q = \P1.P1.P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42339 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39849 [7], Q = \P1.P1.P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42338 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39849 [6], Q = \P1.P1.P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42337 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39849 [5], Q = \P1.P1.P1.InstQueue[2] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42336 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39849 [4], Q = \P1.P1.P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42335 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39849 [3], Q = \P1.P1.P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42334 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39849 [2], Q = \P1.P1.P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42333 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39849 [1], Q = \P1.P1.P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42332 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39849 [0], Q = \P1.P1.P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42331 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39725 [7], Q = \P1.P1.P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42330 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39725 [6], Q = \P1.P1.P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42329 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39725 [5], Q = \P1.P1.P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42328 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39725 [4], Q = \P1.P1.P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42327 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39725 [3], Q = \P1.P1.P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42326 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39725 [2], Q = \P1.P1.P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42325 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39725 [1], Q = \P1.P1.P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42324 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39725 [0], Q = \P1.P1.P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42323 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39601 [7], Q = \P1.P1.P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42322 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39601 [6], Q = \P1.P1.P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42321 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39601 [5], Q = \P1.P1.P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42320 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39601 [4], Q = \P1.P1.P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42319 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39601 [3], Q = \P1.P1.P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42318 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39601 [2], Q = \P1.P1.P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42317 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39601 [1], Q = \P1.P1.P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42316 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39601 [0], Q = \P1.P1.P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42315 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39477 [7], Q = \P1.P1.P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42314 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39477 [6], Q = \P1.P1.P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42313 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39477 [5], Q = \P1.P1.P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42312 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39477 [4], Q = \P1.P1.P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42311 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39477 [3], Q = \P1.P1.P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42310 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39477 [2], Q = \P1.P1.P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42309 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39477 [1], Q = \P1.P1.P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42308 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39477 [0], Q = \P1.P1.P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42307 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39353 [7], Q = \P1.P1.P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42306 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39353 [6], Q = \P1.P1.P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42305 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39353 [5], Q = \P1.P1.P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42304 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39353 [4], Q = \P1.P1.P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42303 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39353 [3], Q = \P1.P1.P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42302 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39353 [2], Q = \P1.P1.P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42301 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39353 [1], Q = \P1.P1.P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42300 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39353 [0], Q = \P1.P1.P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42299 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39229 [7], Q = \P1.P1.P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42298 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39229 [6], Q = \P1.P1.P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42297 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39229 [5], Q = \P1.P1.P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42296 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39229 [4], Q = \P1.P1.P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42295 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39229 [3], Q = \P1.P1.P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42294 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39229 [2], Q = \P1.P1.P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42293 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39229 [1], Q = \P1.P1.P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42292 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39229 [0], Q = \P1.P1.P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42291 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39105 [7], Q = \P1.P1.P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42290 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39105 [6], Q = \P1.P1.P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42289 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39105 [5], Q = \P1.P1.P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42288 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39105 [4], Q = \P1.P1.P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42287 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39105 [3], Q = \P1.P1.P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42286 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39105 [2], Q = \P1.P1.P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42285 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39105 [1], Q = \P1.P1.P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42284 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$39105 [0], Q = \P1.P1.P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42283 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38981 [7], Q = \P1.P1.P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42282 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38981 [6], Q = \P1.P1.P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42281 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38981 [5], Q = \P1.P1.P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42280 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38981 [4], Q = \P1.P1.P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42279 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38981 [3], Q = \P1.P1.P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42278 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38981 [2], Q = \P1.P1.P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42277 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38981 [1], Q = \P1.P1.P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42276 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38981 [0], Q = \P1.P1.P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42275 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38857 [7], Q = \P1.P1.P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42274 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38857 [6], Q = \P1.P1.P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42273 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38857 [5], Q = \P1.P1.P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42272 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38857 [4], Q = \P1.P1.P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42271 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38857 [3], Q = \P1.P1.P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42270 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38857 [2], Q = \P1.P1.P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42269 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38857 [1], Q = \P1.P1.P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42268 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38857 [0], Q = \P1.P1.P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42267 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38733 [7], Q = \P1.P1.P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42266 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38733 [6], Q = \P1.P1.P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42265 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38733 [5], Q = \P1.P1.P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42264 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38733 [4], Q = \P1.P1.P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42263 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38733 [3], Q = \P1.P1.P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42262 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38733 [2], Q = \P1.P1.P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42261 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38733 [1], Q = \P1.P1.P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42260 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38733 [0], Q = \P1.P1.P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42259 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38609 [7], Q = \P1.P1.P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42258 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38609 [6], Q = \P1.P1.P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42257 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38609 [5], Q = \P1.P1.P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42256 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38609 [4], Q = \P1.P1.P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42255 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38609 [3], Q = \P1.P1.P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42254 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38609 [2], Q = \P1.P1.P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42253 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38609 [1], Q = \P1.P1.P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42252 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38609 [0], Q = \P1.P1.P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42251 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38485 [7], Q = \P1.P1.P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42250 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38485 [6], Q = \P1.P1.P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42249 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38485 [5], Q = \P1.P1.P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42248 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38485 [4], Q = \P1.P1.P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42247 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38485 [3], Q = \P1.P1.P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42246 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38485 [2], Q = \P1.P1.P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42245 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38485 [1], Q = \P1.P1.P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42244 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38485 [0], Q = \P1.P1.P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42243 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38361 [7], Q = \P1.P1.P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42242 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38361 [6], Q = \P1.P1.P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42241 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38361 [5], Q = \P1.P1.P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42240 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38361 [4], Q = \P1.P1.P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42239 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38361 [3], Q = \P1.P1.P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42238 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38361 [2], Q = \P1.P1.P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42237 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38361 [1], Q = \P1.P1.P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42236 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38361 [0], Q = \P1.P1.P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42235 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38237 [7], Q = \P1.P1.P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$42234 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38237 [6], Q = \P1.P1.P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$42233 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38237 [5], Q = \P1.P1.P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$42232 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38237 [4], Q = \P1.P1.P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$42231 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38237 [3], Q = \P1.P1.P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$42230 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38237 [2], Q = \P1.P1.P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$42229 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38237 [1], Q = \P1.P1.P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$42228 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$38237 [0], Q = \P1.P1.P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$42227 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37542 [3], Q = \P1.P1.P1.State2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$42226 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37542 [2], Q = \P1.P1.P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$42225 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37542 [1], Q = \P1.P1.P1.State2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$42224 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37542 [0], Q = \P1.P1.P1.State2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$33215 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40258 [3], Q = \P1.P1.P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$33214 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40258 [2], Q = \P1.P1.P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$33213 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40258 [1], Q = \P1.P1.P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$33212 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$40258 [0], Q = \P1.P1.P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$33211 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$32670, Q = \P1.P1.StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$33210 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$32658 [2], Q = \P1.P1.State [2]).
Adding EN signal on $auto$ff.cc:262:slice$33209 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$32658 [1], Q = \P1.P1.State [1]).
Adding EN signal on $auto$ff.cc:262:slice$33208 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$32658 [0], Q = \P1.P1.State [0]).
Adding EN signal on $auto$ff.cc:262:slice$33207 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$32636, Q = \P1.P1.ADS_n).
Adding EN signal on $auto$ff.cc:262:slice$33205 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$32626, Q = \P1.P1.D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$33203 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [29], Q = \P1.P1.Address [29]).
Adding EN signal on $auto$ff.cc:262:slice$33202 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [28], Q = \P1.P1.Address [28]).
Adding EN signal on $auto$ff.cc:262:slice$33201 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [27], Q = \P1.P1.Address [27]).
Adding EN signal on $auto$ff.cc:262:slice$33200 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [26], Q = \P1.P1.Address [26]).
Adding EN signal on $auto$ff.cc:262:slice$33199 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [25], Q = \P1.P1.Address [25]).
Adding EN signal on $auto$ff.cc:262:slice$33198 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [24], Q = \P1.P1.Address [24]).
Adding EN signal on $auto$ff.cc:262:slice$33197 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [23], Q = \P1.P1.Address [23]).
Adding EN signal on $auto$ff.cc:262:slice$33196 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [22], Q = \P1.P1.Address [22]).
Adding EN signal on $auto$ff.cc:262:slice$33195 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [21], Q = \P1.P1.Address [21]).
Adding EN signal on $auto$ff.cc:262:slice$33194 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [20], Q = \P1.P1.Address [20]).
Adding EN signal on $auto$ff.cc:262:slice$33193 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [19], Q = \P1.P1.Address [19]).
Adding EN signal on $auto$ff.cc:262:slice$33192 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [18], Q = \P1.P1.Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$33191 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [17], Q = \P1.P1.Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$33190 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [16], Q = \P1.P1.Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$33189 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [15], Q = \P1.P1.Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$33188 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [14], Q = \P1.P1.Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$33187 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [13], Q = \P1.P1.Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$33186 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [12], Q = \P1.P1.Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$33185 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [11], Q = \P1.P1.Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$33184 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [10], Q = \P1.P1.Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$33183 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [9], Q = \P1.P1.Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$33182 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [8], Q = \P1.P1.Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$33181 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [7], Q = \P1.P1.Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$33180 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [6], Q = \P1.P1.Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$33179 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [5], Q = \P1.P1.Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$33178 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [4], Q = \P1.P1.Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$33177 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [3], Q = \P1.P1.Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$33176 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [2], Q = \P1.P1.Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$33175 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [1], Q = \P1.P1.Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$33174 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$33088 [0], Q = \P1.P1.Address [0]).
Adding EN signal on $auto$ff.cc:262:slice$32346 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27856, Q = \P1.P2.RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$32345 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27837, Q = \P1.P2.MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$32344 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27818, Q = \P1.P2.ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$32343 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [32], Q = \P1.P2.rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$32342 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [30], Q = \P1.P2.rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$32341 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [29], Q = \P1.P2.rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$32340 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [28], Q = \P1.P2.rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$32339 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [27], Q = \P1.P2.rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$32338 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [26], Q = \P1.P2.rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$32337 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [25], Q = \P1.P2.rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$32336 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [24], Q = \P1.P2.rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$32335 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [23], Q = \P1.P2.rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$32334 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [22], Q = \P1.P2.rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$32333 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [21], Q = \P1.P2.rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$32332 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [20], Q = \P1.P2.rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$32331 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [19], Q = \P1.P2.rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$32330 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [18], Q = \P1.P2.rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$32329 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [17], Q = \P1.P2.rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$32328 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [16], Q = \P1.P2.rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$32327 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [15], Q = \P1.P2.rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$32326 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [14], Q = \P1.P2.rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$32325 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [13], Q = \P1.P2.rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$32324 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [12], Q = \P1.P2.rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$32323 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [11], Q = \P1.P2.rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$32322 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [10], Q = \P1.P2.rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$32321 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [9], Q = \P1.P2.rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$32320 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [8], Q = \P1.P2.rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$32319 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [7], Q = \P1.P2.rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$32318 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [6], Q = \P1.P2.rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$32317 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [5], Q = \P1.P2.rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$32316 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [4], Q = \P1.P2.rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$32315 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [3], Q = \P1.P2.rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$32314 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [2], Q = \P1.P2.rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$32313 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [1], Q = \P1.P2.rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$32312 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27767 [0], Q = \P1.P2.rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$32311 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [31], Q = \P1.P2.EBX [31]).
Adding EN signal on $auto$ff.cc:262:slice$32310 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [30], Q = \P1.P2.EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$32309 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [29], Q = \P1.P2.EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$32308 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [28], Q = \P1.P2.EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$32307 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [27], Q = \P1.P2.EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$32306 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [26], Q = \P1.P2.EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$32305 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [25], Q = \P1.P2.EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$32304 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [24], Q = \P1.P2.EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$32303 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [23], Q = \P1.P2.EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$32302 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [22], Q = \P1.P2.EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$32301 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [21], Q = \P1.P2.EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$32300 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [20], Q = \P1.P2.EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$32299 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [19], Q = \P1.P2.EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$32298 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [18], Q = \P1.P2.EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$32297 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [17], Q = \P1.P2.EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$32296 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [16], Q = \P1.P2.EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$32295 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [15], Q = \P1.P2.EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$32294 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [14], Q = \P1.P2.EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$32293 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [13], Q = \P1.P2.EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$32292 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [12], Q = \P1.P2.EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$32291 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [11], Q = \P1.P2.EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$32290 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [10], Q = \P1.P2.EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$32289 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [9], Q = \P1.P2.EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$32288 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [8], Q = \P1.P2.EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$32287 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [7], Q = \P1.P2.EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$32286 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [6], Q = \P1.P2.EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$32285 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [5], Q = \P1.P2.EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$32284 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [4], Q = \P1.P2.EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$32283 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [3], Q = \P1.P2.EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$32282 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [2], Q = \P1.P2.EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$32281 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [1], Q = \P1.P2.EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$32280 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30974 [0], Q = \P1.P2.EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$32279 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [31], Q = \P1.P2.EAX [31]).
Adding EN signal on $auto$ff.cc:262:slice$32278 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [30], Q = \P1.P2.EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$32277 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [29], Q = \P1.P2.EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$32276 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [28], Q = \P1.P2.EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$32275 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [27], Q = \P1.P2.EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$32274 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [26], Q = \P1.P2.EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$32273 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [25], Q = \P1.P2.EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$32272 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [24], Q = \P1.P2.EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$32271 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [23], Q = \P1.P2.EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$32270 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [22], Q = \P1.P2.EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$32269 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [21], Q = \P1.P2.EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$32268 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [20], Q = \P1.P2.EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$32267 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [19], Q = \P1.P2.EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$32266 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [18], Q = \P1.P2.EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$32265 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [17], Q = \P1.P2.EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$32264 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [16], Q = \P1.P2.EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$32263 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [15], Q = \P1.P2.EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$32262 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [14], Q = \P1.P2.EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$32261 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [13], Q = \P1.P2.EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$32260 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [12], Q = \P1.P2.EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$32259 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [11], Q = \P1.P2.EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$32258 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [10], Q = \P1.P2.EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$32257 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [9], Q = \P1.P2.EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$32256 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [8], Q = \P1.P2.EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$32255 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [7], Q = \P1.P2.EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$32254 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [6], Q = \P1.P2.EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$32253 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [5], Q = \P1.P2.EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$32252 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [4], Q = \P1.P2.EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$32251 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [3], Q = \P1.P2.EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$32250 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [2], Q = \P1.P2.EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$32249 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [1], Q = \P1.P2.EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$32248 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$30490 [0], Q = \P1.P2.EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$32247 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29934 [3], Q = \P1.P2.P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$32246 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29934 [2], Q = \P1.P2.P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$32245 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29934 [1], Q = \P1.P2.P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$32244 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29934 [0], Q = \P1.P2.P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$32243 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27875, Q = \P1.P2.CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$32242 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [14], Q = \P1.P2.P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$32241 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [13], Q = \P1.P2.P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$32240 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [12], Q = \P1.P2.P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$32239 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [11], Q = \P1.P2.P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$32238 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [10], Q = \P1.P2.P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$32237 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [9], Q = \P1.P2.P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$32236 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [8], Q = \P1.P2.P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$32235 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [7], Q = \P1.P2.P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$32234 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [6], Q = \P1.P2.P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$32233 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [5], Q = \P1.P2.P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$32232 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [4], Q = \P1.P2.P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$32231 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [3], Q = \P1.P2.P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$32230 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [2], Q = \P1.P2.P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$32229 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [1], Q = \P1.P2.P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$32228 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31220 [0], Q = \P1.P2.P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$32227 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [15], Q = \P1.P2.P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$32226 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [14], Q = \P1.P2.P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$32225 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [13], Q = \P1.P2.P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$32224 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [12], Q = \P1.P2.P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$32223 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [11], Q = \P1.P2.P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$32222 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [10], Q = \P1.P2.P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$32221 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [9], Q = \P1.P2.P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$32220 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [8], Q = \P1.P2.P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$32219 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [7], Q = \P1.P2.P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$32218 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [6], Q = \P1.P2.P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$32217 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [5], Q = \P1.P2.P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$32216 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [4], Q = \P1.P2.P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$32215 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [3], Q = \P1.P2.P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$32214 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [2], Q = \P1.P2.P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$32213 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [1], Q = \P1.P2.P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$32212 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$31463 [0], Q = \P1.P2.P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$32211 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$3280, Q = \P1.P2.P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$32210 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$3294, Q = \P1.P2.P1.More).
Adding EN signal on $auto$ff.cc:262:slice$32209 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [31], Q = \P1.P2.P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$32208 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [30], Q = \P1.P2.P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$32207 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [29], Q = \P1.P2.P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$32206 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [28], Q = \P1.P2.P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$32205 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [27], Q = \P1.P2.P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$32204 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [26], Q = \P1.P2.P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$32203 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [25], Q = \P1.P2.P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$32202 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [24], Q = \P1.P2.P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$32201 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [23], Q = \P1.P2.P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$32200 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [22], Q = \P1.P2.P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$32199 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [21], Q = \P1.P2.P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$32198 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [20], Q = \P1.P2.P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$32197 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [19], Q = \P1.P2.P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$32196 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [18], Q = \P1.P2.P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$32195 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [17], Q = \P1.P2.P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$32194 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [16], Q = \P1.P2.P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$32193 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [15], Q = \P1.P2.P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$32192 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [14], Q = \P1.P2.P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$32191 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [13], Q = \P1.P2.P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$32190 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [12], Q = \P1.P2.P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$32189 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [11], Q = \P1.P2.P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$32188 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [10], Q = \P1.P2.P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$32187 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [9], Q = \P1.P2.P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$32186 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [8], Q = \P1.P2.P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$32185 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [7], Q = \P1.P2.P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$32184 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [6], Q = \P1.P2.P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$32183 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [5], Q = \P1.P2.P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$32182 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [4], Q = \P1.P2.P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$32181 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [3], Q = \P1.P2.P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$32180 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [2], Q = \P1.P2.P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$32179 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [1], Q = \P1.P2.P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$32178 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$26721 [0], Q = \P1.P2.P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$32177 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [31], Q = \P1.P2.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$32176 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [30], Q = \P1.P2.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$32175 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [29], Q = \P1.P2.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$32174 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [28], Q = \P1.P2.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$32173 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [27], Q = \P1.P2.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$32172 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [26], Q = \P1.P2.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$32171 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [25], Q = \P1.P2.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$32170 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [24], Q = \P1.P2.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$32169 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [23], Q = \P1.P2.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$32168 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [22], Q = \P1.P2.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$32167 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [21], Q = \P1.P2.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$32166 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [20], Q = \P1.P2.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$32165 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [19], Q = \P1.P2.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$32164 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [18], Q = \P1.P2.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$32163 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [17], Q = \P1.P2.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$32162 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [16], Q = \P1.P2.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$32161 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [15], Q = \P1.P2.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$32160 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [14], Q = \P1.P2.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$32159 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [13], Q = \P1.P2.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$32158 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [12], Q = \P1.P2.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$32157 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [11], Q = \P1.P2.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$32156 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [10], Q = \P1.P2.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$32155 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [9], Q = \P1.P2.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$32154 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [8], Q = \P1.P2.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$32153 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [7], Q = \P1.P2.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$32152 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [6], Q = \P1.P2.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$32151 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [5], Q = \P1.P2.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$32150 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [4], Q = \P1.P2.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$32149 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [3], Q = \P1.P2.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$32148 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [2], Q = \P1.P2.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$32147 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [1], Q = \P1.P2.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$32146 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27205 [0], Q = \P1.P2.P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$32145 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [30], Q = \P1.P3.Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$32144 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [29], Q = \P1.P3.Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$32143 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [28], Q = \P1.P3.Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$32142 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [27], Q = \P1.P3.Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$32141 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [26], Q = \P1.P3.Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$32140 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [25], Q = \P1.P3.Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$32139 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [24], Q = \P1.P3.Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$32138 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [23], Q = \P1.P3.Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$32137 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [22], Q = \P1.P3.Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$32136 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [21], Q = \P1.P3.Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$32135 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [20], Q = \P1.P3.Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$32134 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [19], Q = \P1.P3.Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$32133 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [18], Q = \P1.P3.Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$32132 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [17], Q = \P1.P3.Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$32131 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [16], Q = \P1.P3.Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$32130 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [15], Q = \P1.P3.Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$32129 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [14], Q = \P1.P3.Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$32128 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [13], Q = \P1.P3.Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$32127 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [12], Q = \P1.P3.Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$32126 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [11], Q = \P1.P3.Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$32125 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [10], Q = \P1.P3.Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$32124 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [9], Q = \P1.P3.Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$32123 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [8], Q = \P1.P3.Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$32122 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [7], Q = \P1.P3.Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$32121 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [6], Q = \P1.P3.Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$32120 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [5], Q = \P1.P3.Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$32119 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [4], Q = \P1.P3.Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$32118 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [3], Q = \P1.P3.Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$32117 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [2], Q = \P1.P3.Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$32116 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [1], Q = \P1.P3.Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$32115 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$21173 [0], Q = \P1.P3.Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$32114 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19241 [3], Q = \P1.P3.P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$32113 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19241 [2], Q = \P1.P3.P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$32112 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19241 [1], Q = \P1.P3.P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$32111 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19241 [0], Q = \P1.P3.P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$32110 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29852 [7], Q = \P1.P2.P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32109 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29852 [6], Q = \P1.P2.P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32108 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29852 [5], Q = \P1.P2.P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32107 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29852 [4], Q = \P1.P2.P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32106 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29852 [3], Q = \P1.P2.P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32105 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29852 [2], Q = \P1.P2.P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32104 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29852 [1], Q = \P1.P2.P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32103 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29852 [0], Q = \P1.P2.P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32102 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29728 [7], Q = \P1.P2.P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32101 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29728 [6], Q = \P1.P2.P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32100 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29728 [5], Q = \P1.P2.P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32099 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29728 [4], Q = \P1.P2.P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32098 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29728 [3], Q = \P1.P2.P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32097 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29728 [2], Q = \P1.P2.P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32096 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29728 [1], Q = \P1.P2.P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32095 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29728 [0], Q = \P1.P2.P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32094 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29604 [7], Q = \P1.P2.P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32093 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29604 [6], Q = \P1.P2.P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32092 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29604 [5], Q = \P1.P2.P1.InstQueue[2] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32091 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29604 [4], Q = \P1.P2.P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32090 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29604 [3], Q = \P1.P2.P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32089 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29604 [2], Q = \P1.P2.P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32088 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29604 [1], Q = \P1.P2.P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32087 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29604 [0], Q = \P1.P2.P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32086 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29480 [7], Q = \P1.P2.P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32085 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29480 [6], Q = \P1.P2.P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32084 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29480 [5], Q = \P1.P2.P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32083 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29480 [4], Q = \P1.P2.P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32082 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29480 [3], Q = \P1.P2.P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32081 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29480 [2], Q = \P1.P2.P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32080 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29480 [1], Q = \P1.P2.P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32079 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29480 [0], Q = \P1.P2.P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32078 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29356 [7], Q = \P1.P2.P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32077 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29356 [6], Q = \P1.P2.P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32076 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29356 [5], Q = \P1.P2.P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32075 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29356 [4], Q = \P1.P2.P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32074 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29356 [3], Q = \P1.P2.P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32073 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29356 [2], Q = \P1.P2.P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32072 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29356 [1], Q = \P1.P2.P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32071 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29356 [0], Q = \P1.P2.P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32070 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29232 [7], Q = \P1.P2.P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32069 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29232 [6], Q = \P1.P2.P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32068 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29232 [5], Q = \P1.P2.P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32067 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29232 [4], Q = \P1.P2.P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32066 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29232 [3], Q = \P1.P2.P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32065 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29232 [2], Q = \P1.P2.P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32064 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29232 [1], Q = \P1.P2.P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32063 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29232 [0], Q = \P1.P2.P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32062 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29108 [7], Q = \P1.P2.P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32061 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29108 [6], Q = \P1.P2.P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32060 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29108 [5], Q = \P1.P2.P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32059 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29108 [4], Q = \P1.P2.P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32058 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29108 [3], Q = \P1.P2.P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32057 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29108 [2], Q = \P1.P2.P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32056 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29108 [1], Q = \P1.P2.P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32055 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$29108 [0], Q = \P1.P2.P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32054 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28984 [7], Q = \P1.P2.P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32053 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28984 [6], Q = \P1.P2.P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32052 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28984 [5], Q = \P1.P2.P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32051 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28984 [4], Q = \P1.P2.P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32050 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28984 [3], Q = \P1.P2.P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32049 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28984 [2], Q = \P1.P2.P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32048 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28984 [1], Q = \P1.P2.P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32047 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28984 [0], Q = \P1.P2.P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32046 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28860 [7], Q = \P1.P2.P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32045 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28860 [6], Q = \P1.P2.P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32044 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28860 [5], Q = \P1.P2.P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32043 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28860 [4], Q = \P1.P2.P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32042 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28860 [3], Q = \P1.P2.P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32041 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28860 [2], Q = \P1.P2.P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32040 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28860 [1], Q = \P1.P2.P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32039 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28860 [0], Q = \P1.P2.P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32038 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28736 [7], Q = \P1.P2.P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32037 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28736 [6], Q = \P1.P2.P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32036 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28736 [5], Q = \P1.P2.P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32035 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28736 [4], Q = \P1.P2.P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32034 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28736 [3], Q = \P1.P2.P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32033 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28736 [2], Q = \P1.P2.P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32032 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28736 [1], Q = \P1.P2.P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32031 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28736 [0], Q = \P1.P2.P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32030 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28612 [7], Q = \P1.P2.P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32029 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28612 [6], Q = \P1.P2.P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32028 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28612 [5], Q = \P1.P2.P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32027 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28612 [4], Q = \P1.P2.P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32026 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28612 [3], Q = \P1.P2.P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32025 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28612 [2], Q = \P1.P2.P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32024 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28612 [1], Q = \P1.P2.P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32023 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28612 [0], Q = \P1.P2.P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32022 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28488 [7], Q = \P1.P2.P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32021 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28488 [6], Q = \P1.P2.P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32020 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28488 [5], Q = \P1.P2.P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32019 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28488 [4], Q = \P1.P2.P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32018 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28488 [3], Q = \P1.P2.P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32017 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28488 [2], Q = \P1.P2.P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32016 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28488 [1], Q = \P1.P2.P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32015 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28488 [0], Q = \P1.P2.P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32014 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28364 [7], Q = \P1.P2.P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32013 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28364 [6], Q = \P1.P2.P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32012 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28364 [5], Q = \P1.P2.P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32011 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28364 [4], Q = \P1.P2.P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32010 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28364 [3], Q = \P1.P2.P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32009 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28364 [2], Q = \P1.P2.P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32008 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28364 [1], Q = \P1.P2.P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$32007 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28364 [0], Q = \P1.P2.P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$32006 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28240 [7], Q = \P1.P2.P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$32005 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28240 [6], Q = \P1.P2.P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$32004 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28240 [5], Q = \P1.P2.P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$32003 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28240 [4], Q = \P1.P2.P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$32002 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28240 [3], Q = \P1.P2.P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$32001 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28240 [2], Q = \P1.P2.P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$32000 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28240 [1], Q = \P1.P2.P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$31999 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28240 [0], Q = \P1.P2.P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$31998 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28116 [7], Q = \P1.P2.P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$31997 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28116 [6], Q = \P1.P2.P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$31996 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28116 [5], Q = \P1.P2.P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$31995 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28116 [4], Q = \P1.P2.P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$31994 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28116 [3], Q = \P1.P2.P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$31993 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28116 [2], Q = \P1.P2.P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$31992 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28116 [1], Q = \P1.P2.P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$31991 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$28116 [0], Q = \P1.P2.P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$31990 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27992 [7], Q = \P1.P2.P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$31989 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27992 [6], Q = \P1.P2.P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$31988 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27992 [5], Q = \P1.P2.P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$31987 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27992 [4], Q = \P1.P2.P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$31986 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27992 [3], Q = \P1.P2.P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$31985 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27992 [2], Q = \P1.P2.P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$31984 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27992 [1], Q = \P1.P2.P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$31983 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27992 [0], Q = \P1.P2.P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$31982 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27297 [3], Q = \P1.P2.P1.State2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$31981 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27297 [2], Q = \P1.P2.P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$31980 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27297 [1], Q = \P1.P2.P1.State2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$31979 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27297 [0], Q = \P1.P2.P1.State2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$22724 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$9902 [1], Q = \P1.P3.DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$22723 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$9902 [0], Q = \P1.P3.DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$22722 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22181, Q = \P1.P2.StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$22721 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22168 [2], Q = \P1.P2.State [2]).
Adding EN signal on $auto$ff.cc:262:slice$22720 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22168 [1], Q = \P1.P2.State [1]).
Adding EN signal on $auto$ff.cc:262:slice$22719 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22168 [0], Q = \P1.P2.State [0]).
Adding EN signal on $auto$ff.cc:262:slice$22718 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22146, Q = \P1.P2.ADS_n).
Adding EN signal on $auto$ff.cc:262:slice$22716 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22136, Q = \P1.P2.D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$22714 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [29], Q = \P1.P2.Address [29]).
Adding EN signal on $auto$ff.cc:262:slice$22713 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [28], Q = \P1.P2.Address [28]).
Adding EN signal on $auto$ff.cc:262:slice$22712 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [27], Q = \P1.P2.Address [27]).
Adding EN signal on $auto$ff.cc:262:slice$22711 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [26], Q = \P1.P2.Address [26]).
Adding EN signal on $auto$ff.cc:262:slice$22710 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [25], Q = \P1.P2.Address [25]).
Adding EN signal on $auto$ff.cc:262:slice$22709 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [24], Q = \P1.P2.Address [24]).
Adding EN signal on $auto$ff.cc:262:slice$22708 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [23], Q = \P1.P2.Address [23]).
Adding EN signal on $auto$ff.cc:262:slice$22707 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [22], Q = \P1.P2.Address [22]).
Adding EN signal on $auto$ff.cc:262:slice$22706 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [21], Q = \P1.P2.Address [21]).
Adding EN signal on $auto$ff.cc:262:slice$22705 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [20], Q = \P1.P2.Address [20]).
Adding EN signal on $auto$ff.cc:262:slice$22704 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [19], Q = \P1.P2.Address [19]).
Adding EN signal on $auto$ff.cc:262:slice$22703 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [18], Q = \P1.P2.Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$22702 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [17], Q = \P1.P2.Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$22701 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [16], Q = \P1.P2.Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$22700 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [15], Q = \P1.P2.Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$22699 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [14], Q = \P1.P2.Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$22698 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [13], Q = \P1.P2.Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$22697 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [12], Q = \P1.P2.Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$22696 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [11], Q = \P1.P2.Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$22695 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [10], Q = \P1.P2.Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$22694 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [9], Q = \P1.P2.Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$22693 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [8], Q = \P1.P2.Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$22692 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [7], Q = \P1.P2.Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$22691 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [6], Q = \P1.P2.Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$22690 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [5], Q = \P1.P2.Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$22689 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [4], Q = \P1.P2.Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$22688 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [3], Q = \P1.P2.Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$22687 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [2], Q = \P1.P2.Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$22686 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [1], Q = \P1.P2.Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$22685 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$22599 [0], Q = \P1.P2.Address [0]).
Adding EN signal on $auto$ff.cc:262:slice$21574 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17084, Q = \P1.P3.RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$21573 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17065, Q = \P1.P3.MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$21572 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17046, Q = \P1.P3.ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$21571 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [32], Q = \P1.P3.rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$21570 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [30], Q = \P1.P3.rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$21569 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [29], Q = \P1.P3.rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$21568 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [28], Q = \P1.P3.rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$21567 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [27], Q = \P1.P3.rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$21566 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [26], Q = \P1.P3.rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$21565 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [25], Q = \P1.P3.rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$21564 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [24], Q = \P1.P3.rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$21563 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [23], Q = \P1.P3.rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$21562 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [22], Q = \P1.P3.rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$21561 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [21], Q = \P1.P3.rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$21560 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [20], Q = \P1.P3.rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$21559 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [19], Q = \P1.P3.rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$21558 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [18], Q = \P1.P3.rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$21557 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [17], Q = \P1.P3.rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$21556 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [16], Q = \P1.P3.rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$21555 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [15], Q = \P1.P3.rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$21554 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [14], Q = \P1.P3.rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$21553 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [13], Q = \P1.P3.rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$21552 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [12], Q = \P1.P3.rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$21551 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [11], Q = \P1.P3.rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$21550 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [10], Q = \P1.P3.rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$21549 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [9], Q = \P1.P3.rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$21548 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [8], Q = \P1.P3.rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$21547 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [7], Q = \P1.P3.rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$21546 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [6], Q = \P1.P3.rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$21545 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [5], Q = \P1.P3.rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$21544 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [4], Q = \P1.P3.rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$21543 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [3], Q = \P1.P3.rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$21542 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [2], Q = \P1.P3.rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$21541 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [1], Q = \P1.P3.rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$21540 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16995 [0], Q = \P1.P3.rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$21539 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [31], Q = \P1.P3.EBX [31]).
Adding EN signal on $auto$ff.cc:262:slice$21538 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [30], Q = \P1.P3.EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$21537 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [29], Q = \P1.P3.EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$21536 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [28], Q = \P1.P3.EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$21535 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [27], Q = \P1.P3.EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$21534 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [26], Q = \P1.P3.EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$21533 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [25], Q = \P1.P3.EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$21532 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [24], Q = \P1.P3.EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$21531 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [23], Q = \P1.P3.EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$21530 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [22], Q = \P1.P3.EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$21529 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [21], Q = \P1.P3.EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$21528 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [20], Q = \P1.P3.EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$21527 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [19], Q = \P1.P3.EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$21526 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [18], Q = \P1.P3.EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$21525 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [17], Q = \P1.P3.EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$21524 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [16], Q = \P1.P3.EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$21523 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [15], Q = \P1.P3.EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$21522 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [14], Q = \P1.P3.EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$21521 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [13], Q = \P1.P3.EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$21520 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [12], Q = \P1.P3.EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$21519 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [11], Q = \P1.P3.EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$21518 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [10], Q = \P1.P3.EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$21517 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [9], Q = \P1.P3.EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$21516 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [8], Q = \P1.P3.EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$21515 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [7], Q = \P1.P3.EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$21514 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [6], Q = \P1.P3.EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$21513 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [5], Q = \P1.P3.EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$21512 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [4], Q = \P1.P3.EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$21511 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [3], Q = \P1.P3.EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$21510 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [2], Q = \P1.P3.EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$21509 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [1], Q = \P1.P3.EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$21508 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20202 [0], Q = \P1.P3.EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$21507 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [31], Q = \P1.P3.EAX [31]).
Adding EN signal on $auto$ff.cc:262:slice$21506 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [30], Q = \P1.P3.EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$21505 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [29], Q = \P1.P3.EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$21504 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [28], Q = \P1.P3.EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$21503 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [27], Q = \P1.P3.EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$21502 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [26], Q = \P1.P3.EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$21501 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [25], Q = \P1.P3.EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$21500 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [24], Q = \P1.P3.EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$21499 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [23], Q = \P1.P3.EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$21498 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [22], Q = \P1.P3.EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$21497 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [21], Q = \P1.P3.EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$21496 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [20], Q = \P1.P3.EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$21495 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [19], Q = \P1.P3.EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$21494 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [18], Q = \P1.P3.EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$21493 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [17], Q = \P1.P3.EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$21492 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [16], Q = \P1.P3.EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$21491 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [15], Q = \P1.P3.EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$21490 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [14], Q = \P1.P3.EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$21489 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [13], Q = \P1.P3.EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$21488 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [12], Q = \P1.P3.EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$21487 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [11], Q = \P1.P3.EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$21486 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [10], Q = \P1.P3.EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$21485 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [9], Q = \P1.P3.EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$21484 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [8], Q = \P1.P3.EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$21483 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [7], Q = \P1.P3.EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$21482 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [6], Q = \P1.P3.EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$21481 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [5], Q = \P1.P3.EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$21480 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [4], Q = \P1.P3.EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$21479 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [3], Q = \P1.P3.EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$21478 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [2], Q = \P1.P3.EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$21477 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [1], Q = \P1.P3.EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$21476 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19718 [0], Q = \P1.P3.EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$21475 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19162 [3], Q = \P1.P3.P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$21474 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19162 [2], Q = \P1.P3.P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$21473 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19162 [1], Q = \P1.P3.P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$21472 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19162 [0], Q = \P1.P3.P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$21471 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17103, Q = \P1.P3.CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$21470 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [14], Q = \P1.P3.P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$21469 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [13], Q = \P1.P3.P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$21468 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [12], Q = \P1.P3.P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$21467 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [11], Q = \P1.P3.P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$21466 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [10], Q = \P1.P3.P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$21465 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [9], Q = \P1.P3.P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$21464 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [8], Q = \P1.P3.P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$21463 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [7], Q = \P1.P3.P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$21462 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [6], Q = \P1.P3.P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$21461 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [5], Q = \P1.P3.P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$21460 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [4], Q = \P1.P3.P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$21459 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [3], Q = \P1.P3.P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$21458 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [2], Q = \P1.P3.P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$21457 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [1], Q = \P1.P3.P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$21456 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20448 [0], Q = \P1.P3.P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$21455 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [15], Q = \P1.P3.P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$21454 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [14], Q = \P1.P3.P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$21453 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [13], Q = \P1.P3.P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$21452 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [12], Q = \P1.P3.P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$21451 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [11], Q = \P1.P3.P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$21450 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [10], Q = \P1.P3.P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$21449 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [9], Q = \P1.P3.P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$21448 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [8], Q = \P1.P3.P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$21447 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [7], Q = \P1.P3.P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$21446 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [6], Q = \P1.P3.P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$21445 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [5], Q = \P1.P3.P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$21444 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [4], Q = \P1.P3.P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$21443 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [3], Q = \P1.P3.P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$21442 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [2], Q = \P1.P3.P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$21441 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [1], Q = \P1.P3.P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$21440 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$20691 [0], Q = \P1.P3.P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$21439 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$3514, Q = \P1.P3.P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$21438 ($_DFF_PP0_) from module b18 (D = $auto$rtlil.cc:2464:Mux$3528, Q = \P1.P3.P1.More).
Adding EN signal on $auto$ff.cc:262:slice$21437 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [31], Q = \P1.P3.P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$21436 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [30], Q = \P1.P3.P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$21435 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [29], Q = \P1.P3.P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$21434 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [28], Q = \P1.P3.P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$21433 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [27], Q = \P1.P3.P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$21432 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [26], Q = \P1.P3.P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$21431 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [25], Q = \P1.P3.P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$21430 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [24], Q = \P1.P3.P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$21429 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [23], Q = \P1.P3.P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$21428 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [22], Q = \P1.P3.P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$21427 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [21], Q = \P1.P3.P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$21426 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [20], Q = \P1.P3.P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$21425 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [19], Q = \P1.P3.P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$21424 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [18], Q = \P1.P3.P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$21423 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [17], Q = \P1.P3.P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$21422 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [16], Q = \P1.P3.P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$21421 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [15], Q = \P1.P3.P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$21420 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [14], Q = \P1.P3.P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$21419 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [13], Q = \P1.P3.P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$21418 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [12], Q = \P1.P3.P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$21417 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [11], Q = \P1.P3.P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$21416 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [10], Q = \P1.P3.P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$21415 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [9], Q = \P1.P3.P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$21414 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [8], Q = \P1.P3.P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$21413 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [7], Q = \P1.P3.P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$21412 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [6], Q = \P1.P3.P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$21411 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [5], Q = \P1.P3.P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$21410 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [4], Q = \P1.P3.P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$21409 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [3], Q = \P1.P3.P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$21408 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [2], Q = \P1.P3.P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$21407 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [1], Q = \P1.P3.P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$21406 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$15949 [0], Q = \P1.P3.P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$21405 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [31], Q = \P1.P3.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$21404 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [30], Q = \P1.P3.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$21403 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [29], Q = \P1.P3.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$21402 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [28], Q = \P1.P3.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$21401 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [27], Q = \P1.P3.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$21400 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [26], Q = \P1.P3.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$21399 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [25], Q = \P1.P3.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$21398 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [24], Q = \P1.P3.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$21397 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [23], Q = \P1.P3.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$21396 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [22], Q = \P1.P3.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$21395 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [21], Q = \P1.P3.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$21394 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [20], Q = \P1.P3.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$21393 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [19], Q = \P1.P3.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$21392 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [18], Q = \P1.P3.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$21391 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [17], Q = \P1.P3.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$21390 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [16], Q = \P1.P3.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$21389 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [15], Q = \P1.P3.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$21388 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [14], Q = \P1.P3.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$21387 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [13], Q = \P1.P3.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$21386 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [12], Q = \P1.P3.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$21385 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [11], Q = \P1.P3.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$21384 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [10], Q = \P1.P3.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$21383 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [9], Q = \P1.P3.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$21382 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [8], Q = \P1.P3.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$21381 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [7], Q = \P1.P3.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$21380 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [6], Q = \P1.P3.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$21379 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [5], Q = \P1.P3.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$21378 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [4], Q = \P1.P3.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$21377 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [3], Q = \P1.P3.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$21376 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [2], Q = \P1.P3.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$21375 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [1], Q = \P1.P3.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$21374 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16433 [0], Q = \P1.P3.P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$21373 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [30], Q = \P2.P1.Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$21372 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [29], Q = \P2.P1.Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$21371 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [28], Q = \P2.P1.Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$21370 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [27], Q = \P2.P1.Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$21369 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [26], Q = \P2.P1.Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$21368 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [25], Q = \P2.P1.Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$21367 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [24], Q = \P2.P1.Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$21366 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [23], Q = \P2.P1.Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$21365 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [22], Q = \P2.P1.Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$21364 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [21], Q = \P2.P1.Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$21363 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [20], Q = \P2.P1.Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$21362 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [19], Q = \P2.P1.Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$21361 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [18], Q = \P2.P1.Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$21360 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [17], Q = \P2.P1.Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$21359 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [16], Q = \P2.P1.Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$21358 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [15], Q = \P2.P1.Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$21357 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [14], Q = \P2.P1.Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$21356 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [13], Q = \P2.P1.Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$21355 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [12], Q = \P2.P1.Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$21354 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [11], Q = \P2.P1.Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$21353 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [10], Q = \P2.P1.Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$21352 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [9], Q = \P2.P1.Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$21351 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [8], Q = \P2.P1.Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$21350 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [7], Q = \P2.P1.Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$21349 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [6], Q = \P2.P1.Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$21348 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [5], Q = \P2.P1.Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$21347 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [4], Q = \P2.P1.Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$21346 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [3], Q = \P2.P1.Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$21345 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [2], Q = \P2.P1.Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$21344 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [1], Q = \P2.P1.Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$21343 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$76203 [0], Q = \P2.P1.Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$21342 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74271 [3], Q = \P2.P1.P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$21341 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74271 [2], Q = \P2.P1.P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$21340 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74271 [1], Q = \P2.P1.P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$21339 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$74271 [0], Q = \P2.P1.P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$21338 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19080 [7], Q = \P1.P3.P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21337 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19080 [6], Q = \P1.P3.P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21336 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19080 [5], Q = \P1.P3.P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21335 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19080 [4], Q = \P1.P3.P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21334 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19080 [3], Q = \P1.P3.P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21333 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19080 [2], Q = \P1.P3.P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21332 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19080 [1], Q = \P1.P3.P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21331 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$19080 [0], Q = \P1.P3.P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21330 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18956 [7], Q = \P1.P3.P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21329 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18956 [6], Q = \P1.P3.P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21328 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18956 [5], Q = \P1.P3.P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21327 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18956 [4], Q = \P1.P3.P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21326 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18956 [3], Q = \P1.P3.P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21325 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18956 [2], Q = \P1.P3.P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21324 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18956 [1], Q = \P1.P3.P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21323 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18956 [0], Q = \P1.P3.P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21322 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18832 [7], Q = \P1.P3.P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21321 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18832 [6], Q = \P1.P3.P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21320 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18832 [5], Q = \P1.P3.P1.InstQueue[2] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21319 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18832 [4], Q = \P1.P3.P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21318 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18832 [3], Q = \P1.P3.P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21317 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18832 [2], Q = \P1.P3.P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21316 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18832 [1], Q = \P1.P3.P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21315 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18832 [0], Q = \P1.P3.P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21314 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18708 [7], Q = \P1.P3.P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21313 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18708 [6], Q = \P1.P3.P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21312 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18708 [5], Q = \P1.P3.P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21311 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18708 [4], Q = \P1.P3.P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21310 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18708 [3], Q = \P1.P3.P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21309 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18708 [2], Q = \P1.P3.P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21308 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18708 [1], Q = \P1.P3.P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21307 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18708 [0], Q = \P1.P3.P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21306 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18584 [7], Q = \P1.P3.P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21305 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18584 [6], Q = \P1.P3.P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21304 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18584 [5], Q = \P1.P3.P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21303 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18584 [4], Q = \P1.P3.P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21302 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18584 [3], Q = \P1.P3.P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21301 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18584 [2], Q = \P1.P3.P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21300 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18584 [1], Q = \P1.P3.P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21299 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18584 [0], Q = \P1.P3.P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21298 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18460 [7], Q = \P1.P3.P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21297 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18460 [6], Q = \P1.P3.P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21296 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18460 [5], Q = \P1.P3.P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21295 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18460 [4], Q = \P1.P3.P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21294 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18460 [3], Q = \P1.P3.P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21293 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18460 [2], Q = \P1.P3.P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21292 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18460 [1], Q = \P1.P3.P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21291 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18460 [0], Q = \P1.P3.P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21290 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18336 [7], Q = \P1.P3.P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21289 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18336 [6], Q = \P1.P3.P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21288 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18336 [5], Q = \P1.P3.P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21287 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18336 [4], Q = \P1.P3.P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21286 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18336 [3], Q = \P1.P3.P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21285 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18336 [2], Q = \P1.P3.P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21284 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18336 [1], Q = \P1.P3.P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21283 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18336 [0], Q = \P1.P3.P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21282 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18212 [7], Q = \P1.P3.P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21281 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18212 [6], Q = \P1.P3.P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21280 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18212 [5], Q = \P1.P3.P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21279 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18212 [4], Q = \P1.P3.P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21278 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18212 [3], Q = \P1.P3.P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21277 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18212 [2], Q = \P1.P3.P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21276 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18212 [1], Q = \P1.P3.P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21275 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18212 [0], Q = \P1.P3.P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21274 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18088 [7], Q = \P1.P3.P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21273 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18088 [6], Q = \P1.P3.P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21272 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18088 [5], Q = \P1.P3.P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21271 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18088 [4], Q = \P1.P3.P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21270 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18088 [3], Q = \P1.P3.P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21269 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18088 [2], Q = \P1.P3.P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21268 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18088 [1], Q = \P1.P3.P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21267 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$18088 [0], Q = \P1.P3.P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21266 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17964 [7], Q = \P1.P3.P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21265 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17964 [6], Q = \P1.P3.P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21264 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17964 [5], Q = \P1.P3.P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21263 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17964 [4], Q = \P1.P3.P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21262 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17964 [3], Q = \P1.P3.P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21261 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17964 [2], Q = \P1.P3.P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21260 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17964 [1], Q = \P1.P3.P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21259 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17964 [0], Q = \P1.P3.P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21258 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17840 [7], Q = \P1.P3.P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21257 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17840 [6], Q = \P1.P3.P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21256 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17840 [5], Q = \P1.P3.P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21255 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17840 [4], Q = \P1.P3.P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21254 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17840 [3], Q = \P1.P3.P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21253 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17840 [2], Q = \P1.P3.P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21252 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17840 [1], Q = \P1.P3.P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21251 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17840 [0], Q = \P1.P3.P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21250 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17716 [7], Q = \P1.P3.P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21249 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17716 [6], Q = \P1.P3.P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21248 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17716 [5], Q = \P1.P3.P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21247 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17716 [4], Q = \P1.P3.P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21246 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17716 [3], Q = \P1.P3.P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21245 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17716 [2], Q = \P1.P3.P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21244 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17716 [1], Q = \P1.P3.P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21243 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17716 [0], Q = \P1.P3.P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21242 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17592 [7], Q = \P1.P3.P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21241 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17592 [6], Q = \P1.P3.P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21240 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17592 [5], Q = \P1.P3.P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21239 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17592 [4], Q = \P1.P3.P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21238 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17592 [3], Q = \P1.P3.P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21237 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17592 [2], Q = \P1.P3.P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21236 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17592 [1], Q = \P1.P3.P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21235 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17592 [0], Q = \P1.P3.P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21234 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17468 [7], Q = \P1.P3.P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21233 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17468 [6], Q = \P1.P3.P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21232 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17468 [5], Q = \P1.P3.P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21231 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17468 [4], Q = \P1.P3.P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21230 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17468 [3], Q = \P1.P3.P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21229 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17468 [2], Q = \P1.P3.P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21228 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17468 [1], Q = \P1.P3.P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21227 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17468 [0], Q = \P1.P3.P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21226 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17344 [7], Q = \P1.P3.P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21225 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17344 [6], Q = \P1.P3.P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21224 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17344 [5], Q = \P1.P3.P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21223 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17344 [4], Q = \P1.P3.P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21222 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17344 [3], Q = \P1.P3.P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21221 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17344 [2], Q = \P1.P3.P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21220 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17344 [1], Q = \P1.P3.P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21219 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17344 [0], Q = \P1.P3.P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21218 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17220 [7], Q = \P1.P3.P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$21217 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17220 [6], Q = \P1.P3.P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$21216 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17220 [5], Q = \P1.P3.P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$21215 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17220 [4], Q = \P1.P3.P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$21214 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17220 [3], Q = \P1.P3.P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$21213 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17220 [2], Q = \P1.P3.P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$21212 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17220 [1], Q = \P1.P3.P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$21211 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$17220 [0], Q = \P1.P3.P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$21210 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16525 [3], Q = \P1.P3.P1.State2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$21209 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16525 [2], Q = \P1.P3.P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$21208 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16525 [1], Q = \P1.P3.P1.State2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$21207 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16525 [0], Q = \P1.P3.P1.State2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10243 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$66873 [1], Q = \P2.P1.DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$10242 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$66873 [0], Q = \P2.P1.DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$10241 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$9700, Q = \P1.P3.StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$10240 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$9672 [2], Q = \P1.P3.State [2]).
Adding EN signal on $auto$ff.cc:262:slice$10239 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$9672 [1], Q = \P1.P3.State [1]).
Adding EN signal on $auto$ff.cc:262:slice$10238 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$9672 [0], Q = \P1.P3.State [0]).
Adding EN signal on $auto$ff.cc:262:slice$10237 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$9650, Q = \P1.P3.ADS_n).
Adding EN signal on $auto$ff.cc:262:slice$10235 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$9640, Q = \P1.P3.D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$10222 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [18], Q = \P1.P3.Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$10221 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [17], Q = \P1.P3.Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$10220 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [16], Q = \P1.P3.Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$10219 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [15], Q = \P1.P3.Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$10218 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [14], Q = \P1.P3.Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$10217 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [13], Q = \P1.P3.Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$10216 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [12], Q = \P1.P3.Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$10215 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [11], Q = \P1.P3.Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$10214 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [10], Q = \P1.P3.Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$10213 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [9], Q = \P1.P3.Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$10212 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [8], Q = \P1.P3.Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$10211 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [7], Q = \P1.P3.Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$10210 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [6], Q = \P1.P3.Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$10209 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [5], Q = \P1.P3.Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$10208 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [4], Q = \P1.P3.Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$10207 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [3], Q = \P1.P3.Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$10206 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [2], Q = \P1.P3.Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$10205 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [1], Q = \P1.P3.Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$10204 ($_DFF_PP0_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$10118 [0], Q = \P1.P3.Address [0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77756 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77757 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77758 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77759 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77760 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77761 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77762 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77763 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77764 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77765 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77766 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77767 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77768 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77769 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77770 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77771 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77772 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77773 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77774 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77775 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77776 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77777 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77778 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77779 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77780 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77781 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77782 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77783 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77784 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77785 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77786 ($_DLATCH_P_) from module b18.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$77787 ($_DLATCH_P_) from module b18.

yosys> opt_clean

3.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 2461 unused cells and 20074 unused wires.
<suppressed ~2463 debug messages>

yosys> opt_expr

3.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~84346 debug messages>

3.25.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~328485 debug messages>
Removed a total of 109495 cells.

yosys> opt_dff

3.25.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$33206 ($_DFF_PP0_) from module b18 (D = \P1.P1.MemoryFetch, Q = \P1.P1.M_IO_n).
Adding EN signal on $auto$ff.cc:262:slice$33204 ($_DFF_PP0_) from module b18 (D = $flatten\P1.\P1.$verific$n398$821, Q = \P1.P1.W_R_n).
Adding EN signal on $auto$ff.cc:262:slice$22715 ($_DFF_PP0_) from module b18 (D = $flatten\P1.\P2.$verific$n398$821, Q = \P1.P2.W_R_n).
Adding EN signal on $auto$ff.cc:262:slice$10236 ($_DFF_PP0_) from module b18 (D = \P1.P3.MemoryFetch, Q = \P1.P3.M_IO_n).
Adding EN signal on $auto$ff.cc:262:slice$67172 ($_DFF_PP0_) from module b18 (D = \P2.P1.ByteEnable [1], Q = \P2.P1.BE_n [1]).
Adding EN signal on $auto$ff.cc:262:slice$56907 ($_DFF_PP0_) from module b18 (D = \P2.P2.ByteEnable [0], Q = \P2.P2.BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$56908 ($_DFF_PP0_) from module b18 (D = \P2.P2.ByteEnable [1], Q = \P2.P2.BE_n [1]).
Adding EN signal on $auto$ff.cc:262:slice$67171 ($_DFF_PP0_) from module b18 (D = \P2.P1.ByteEnable [0], Q = \P2.P1.BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$46686 ($_DFF_PP0_) from module b18 (D = \P2.P3.ByteEnable [2], Q = \P2.P3.BE_n [2]).
Adding EN signal on $auto$ff.cc:262:slice$46685 ($_DFF_PP0_) from module b18 (D = \P2.P3.ByteEnable [1], Q = \P2.P3.BE_n [1]).
Adding EN signal on $auto$ff.cc:262:slice$46684 ($_DFF_PP0_) from module b18 (D = \P2.P3.ByteEnable [0], Q = \P2.P3.BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$46720 ($_DFF_PP0_) from module b18 (D = \P2.P3.MemoryFetch, Q = \P2.P3.M_IO_n).
Adding EN signal on $auto$ff.cc:262:slice$56943 ($_DFF_PP0_) from module b18 (D = \P2.P2.MemoryFetch, Q = \P2.P2.M_IO_n).
Adding EN signal on $auto$ff.cc:262:slice$56909 ($_DFF_PP0_) from module b18 (D = \P2.P2.ByteEnable [2], Q = \P2.P2.BE_n [2]).
Adding EN signal on $auto$ff.cc:262:slice$56941 ($_DFF_PP0_) from module b18 (D = $flatten\P2.\P2.$verific$n398$821, Q = \P2.P2.W_R_n).
Adding EN signal on $auto$ff.cc:262:slice$56910 ($_DFF_PP0_) from module b18 (D = \P2.P2.ByteEnable [3], Q = \P2.P2.BE_n [3]).
Adding EN signal on $auto$ff.cc:262:slice$67173 ($_DFF_PP0_) from module b18 (D = \P2.P1.ByteEnable [2], Q = \P2.P1.BE_n [2]).
Adding EN signal on $auto$ff.cc:262:slice$67174 ($_DFF_PP0_) from module b18 (D = \P2.P1.ByteEnable [3], Q = \P2.P1.BE_n [3]).
Adding EN signal on $auto$ff.cc:262:slice$67205 ($_DFF_PP0_) from module b18 (D = $flatten\P2.\P1.$verific$n398$821, Q = \P2.P1.W_R_n).
Adding EN signal on $auto$ff.cc:262:slice$67207 ($_DFF_PP0_) from module b18 (D = \P2.P1.MemoryFetch, Q = \P2.P1.M_IO_n).
Adding EN signal on $auto$ff.cc:262:slice$10202 ($_DFF_PP0_) from module b18 (D = \P1.P3.ByteEnable [2], Q = \P1.P3.BE_n [2]).
Adding EN signal on $auto$ff.cc:262:slice$10203 ($_DFF_PP0_) from module b18 (D = \P1.P3.ByteEnable [3], Q = \P1.P3.BE_n [3]).
Adding EN signal on $auto$ff.cc:262:slice$10200 ($_DFF_PP0_) from module b18 (D = \P1.P3.ByteEnable [0], Q = \P1.P3.BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$10201 ($_DFF_PP0_) from module b18 (D = \P1.P3.ByteEnable [1], Q = \P1.P3.BE_n [1]).
Adding EN signal on $auto$ff.cc:262:slice$10234 ($_DFF_PP0_) from module b18 (D = $flatten\P1.\P3.$verific$n398$821, Q = \P1.P3.W_R_n).
Adding EN signal on $auto$ff.cc:262:slice$46687 ($_DFF_PP0_) from module b18 (D = \P2.P3.ByteEnable [3], Q = \P2.P3.BE_n [3]).
Adding EN signal on $auto$ff.cc:262:slice$46718 ($_DFF_PP0_) from module b18 (D = $flatten\P2.\P3.$verific$n398$821, Q = \P2.P3.W_R_n).
Adding EN signal on $auto$ff.cc:262:slice$22717 ($_DFF_PP0_) from module b18 (D = \P1.P2.MemoryFetch, Q = \P1.P2.M_IO_n).
Adding EN signal on $auto$ff.cc:262:slice$22681 ($_DFF_PP0_) from module b18 (D = \P1.P2.ByteEnable [0], Q = \P1.P2.BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$33171 ($_DFF_PP0_) from module b18 (D = \P1.P1.ByteEnable [1], Q = \P1.P1.BE_n [1]).
Adding EN signal on $auto$ff.cc:262:slice$33170 ($_DFF_PP0_) from module b18 (D = \P1.P1.ByteEnable [0], Q = \P1.P1.BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$22683 ($_DFF_PP0_) from module b18 (D = \P1.P2.ByteEnable [2], Q = \P1.P2.BE_n [2]).
Adding EN signal on $auto$ff.cc:262:slice$22682 ($_DFF_PP0_) from module b18 (D = \P1.P2.ByteEnable [1], Q = \P1.P2.BE_n [1]).
Adding EN signal on $auto$ff.cc:262:slice$33172 ($_DFF_PP0_) from module b18 (D = \P1.P1.ByteEnable [2], Q = \P1.P1.BE_n [2]).
Adding EN signal on $auto$ff.cc:262:slice$22684 ($_DFF_PP0_) from module b18 (D = \P1.P2.ByteEnable [3], Q = \P1.P2.BE_n [3]).
Adding EN signal on $auto$ff.cc:262:slice$33173 ($_DFF_PP0_) from module b18 (D = \P1.P1.ByteEnable [3], Q = \P1.P1.BE_n [3]).

yosys> opt_clean

3.25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 127 unused cells and 95959 unused wires.
<suppressed ~129 debug messages>

yosys> opt_expr

3.25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.25.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.25.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~198 debug messages>
Removed a total of 66 cells.

yosys> opt_dff

3.25.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 66 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.25.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.25.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.25.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.25.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.25.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff

3.25.34. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.25.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> opt_expr

3.25.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.25.37. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.26. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~18340 debug messages>

yosys> opt_merge

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~264 debug messages>
Removed a total of 88 cells.

yosys> opt_dff

3.26.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$146655 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$84077 [0], Q = \P4.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$149807 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$83593 [0], Q = \P4.reg1 [0]).

yosys> opt_clean

3.26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 965 unused wires.
<suppressed ~1 debug messages>

3.26.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.26.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~131 debug messages>

yosys> opt_merge

3.26.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff

3.26.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$420125 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [1], Q = \P1.P3.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$419903 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [2], Q = \P1.P3.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$419681 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [3], Q = \P1.P3.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$419459 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [4], Q = \P1.P3.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$419237 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [5], Q = \P1.P3.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$419015 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [6], Q = \P1.P3.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$418793 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [7], Q = \P1.P3.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$418571 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [8], Q = \P1.P3.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$418349 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [9], Q = \P1.P3.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$418127 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [10], Q = \P1.P3.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$417905 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [11], Q = \P1.P3.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$417683 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [12], Q = \P1.P3.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$417461 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [13], Q = \P1.P3.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$417239 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [14], Q = \P1.P3.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$417017 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [15], Q = \P1.P3.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$416795 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [16], Q = \P1.P3.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$416573 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [17], Q = \P1.P3.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$416351 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [18], Q = \P1.P3.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$416129 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [19], Q = \P1.P3.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$415907 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [20], Q = \P1.P3.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$415685 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [21], Q = \P1.P3.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$415463 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [22], Q = \P1.P3.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$415241 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [23], Q = \P1.P3.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$415019 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [24], Q = \P1.P3.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$414797 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [25], Q = \P1.P3.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$414575 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [26], Q = \P1.P3.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$414353 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [27], Q = \P1.P3.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$414131 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [28], Q = \P1.P3.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$413909 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [29], Q = \P1.P3.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$413687 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [30], Q = \P1.P3.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$413465 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$16368 [31], Q = \P1.P3.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$372384 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [1], Q = \P1.P2.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$372162 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [2], Q = \P1.P2.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$371940 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [3], Q = \P1.P2.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$371718 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [4], Q = \P1.P2.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$371496 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [5], Q = \P1.P2.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$371274 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [6], Q = \P1.P2.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$371052 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [7], Q = \P1.P2.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$370830 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [8], Q = \P1.P2.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$370608 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [9], Q = \P1.P2.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$370386 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [10], Q = \P1.P2.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$370164 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [11], Q = \P1.P2.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$369942 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [12], Q = \P1.P2.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$369720 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [13], Q = \P1.P2.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$369498 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [14], Q = \P1.P2.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$369276 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [15], Q = \P1.P2.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$369054 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [16], Q = \P1.P2.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$368832 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [17], Q = \P1.P2.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$368610 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [18], Q = \P1.P2.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$368388 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [19], Q = \P1.P2.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$368166 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [20], Q = \P1.P2.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$367944 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [21], Q = \P1.P2.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$367722 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [22], Q = \P1.P2.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$367500 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [23], Q = \P1.P2.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$367278 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [24], Q = \P1.P2.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$367056 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [25], Q = \P1.P2.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$366834 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [26], Q = \P1.P2.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$366612 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [27], Q = \P1.P2.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$366390 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [28], Q = \P1.P2.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$366168 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [29], Q = \P1.P2.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$365946 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [30], Q = \P1.P2.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$365724 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$27140 [31], Q = \P1.P2.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$324513 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [1], Q = \P1.P1.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$324291 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [2], Q = \P1.P1.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$324069 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [3], Q = \P1.P1.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$323847 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [4], Q = \P1.P1.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$323625 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [5], Q = \P1.P1.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$323403 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [6], Q = \P1.P1.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$323181 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [7], Q = \P1.P1.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$322959 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [8], Q = \P1.P1.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$322737 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [9], Q = \P1.P1.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$322515 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [10], Q = \P1.P1.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$322293 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [11], Q = \P1.P1.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$322071 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [12], Q = \P1.P1.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$321849 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [13], Q = \P1.P1.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$321627 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [14], Q = \P1.P1.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$321405 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [15], Q = \P1.P1.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$321183 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [16], Q = \P1.P1.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$320961 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [17], Q = \P1.P1.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$320739 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [18], Q = \P1.P1.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$320517 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [19], Q = \P1.P1.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$320295 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [20], Q = \P1.P1.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$320073 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [21], Q = \P1.P1.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$319851 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [22], Q = \P1.P1.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$319629 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [23], Q = \P1.P1.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$319407 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [24], Q = \P1.P1.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$319185 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [25], Q = \P1.P1.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$318963 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [26], Q = \P1.P1.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$318741 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [27], Q = \P1.P1.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$318519 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [28], Q = \P1.P1.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$318297 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [29], Q = \P1.P1.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$318075 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [30], Q = \P1.P1.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$317853 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$37385 [31], Q = \P1.P1.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$277099 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [1], Q = \P2.P3.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$276877 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [2], Q = \P2.P3.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$276655 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [3], Q = \P2.P3.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$276433 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [4], Q = \P2.P3.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$276211 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [5], Q = \P2.P3.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$275989 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [6], Q = \P2.P3.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$275767 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [7], Q = \P2.P3.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$275545 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [8], Q = \P2.P3.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$275323 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [9], Q = \P2.P3.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$275101 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [10], Q = \P2.P3.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$274879 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [11], Q = \P2.P3.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$274657 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [12], Q = \P2.P3.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$274435 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [13], Q = \P2.P3.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$274213 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [14], Q = \P2.P3.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$273991 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [15], Q = \P2.P3.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$273769 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [16], Q = \P2.P3.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$273547 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [17], Q = \P2.P3.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$273325 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [18], Q = \P2.P3.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$273103 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [19], Q = \P2.P3.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$272881 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [20], Q = \P2.P3.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$272659 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [21], Q = \P2.P3.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$272437 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [22], Q = \P2.P3.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$272215 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [23], Q = \P2.P3.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$271993 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [24], Q = \P2.P3.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$271771 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [25], Q = \P2.P3.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$271549 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [26], Q = \P2.P3.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$271327 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [27], Q = \P2.P3.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$271105 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [28], Q = \P2.P3.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$270883 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [29], Q = \P2.P3.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$270661 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [30], Q = \P2.P3.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$270439 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$50913 [31], Q = \P2.P3.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$229358 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [1], Q = \P2.P2.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$229136 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [2], Q = \P2.P2.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$228914 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [3], Q = \P2.P2.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$228692 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [4], Q = \P2.P2.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$228470 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [5], Q = \P2.P2.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$228248 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [6], Q = \P2.P2.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$228026 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [7], Q = \P2.P2.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$227804 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [8], Q = \P2.P2.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$227582 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [9], Q = \P2.P2.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$227360 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [10], Q = \P2.P2.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$227138 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [11], Q = \P2.P2.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$226916 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [12], Q = \P2.P2.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$226694 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [13], Q = \P2.P2.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$226472 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [14], Q = \P2.P2.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$226250 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [15], Q = \P2.P2.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$226028 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [16], Q = \P2.P2.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$225806 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [17], Q = \P2.P2.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$225584 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [18], Q = \P2.P2.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$225362 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [19], Q = \P2.P2.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$225140 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [20], Q = \P2.P2.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$224918 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [21], Q = \P2.P2.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$224696 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [22], Q = \P2.P2.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$224474 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [23], Q = \P2.P2.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$224252 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [24], Q = \P2.P2.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$224030 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [25], Q = \P2.P2.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$223808 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [26], Q = \P2.P2.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$223586 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [27], Q = \P2.P2.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$223364 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [28], Q = \P2.P2.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$223142 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [29], Q = \P2.P2.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$222920 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [30], Q = \P2.P2.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$222698 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$61113 [31], Q = \P2.P2.P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$181511 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [1], Q = \P2.P1.P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$181289 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [2], Q = \P2.P1.P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$181067 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [3], Q = \P2.P1.P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$180845 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [4], Q = \P2.P1.P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$180623 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [5], Q = \P2.P1.P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$180401 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [6], Q = \P2.P1.P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$180179 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [7], Q = \P2.P1.P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$179957 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [8], Q = \P2.P1.P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$179735 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [9], Q = \P2.P1.P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$179513 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [10], Q = \P2.P1.P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$179291 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [11], Q = \P2.P1.P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$179069 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [12], Q = \P2.P1.P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$178847 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [13], Q = \P2.P1.P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$178625 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [14], Q = \P2.P1.P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$178403 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [15], Q = \P2.P1.P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$178181 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [16], Q = \P2.P1.P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$177959 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [17], Q = \P2.P1.P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$177737 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [18], Q = \P2.P1.P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$177515 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [19], Q = \P2.P1.P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$177293 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [20], Q = \P2.P1.P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$177071 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [21], Q = \P2.P1.P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$176849 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [22], Q = \P2.P1.P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$176627 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [23], Q = \P2.P1.P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$176405 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [24], Q = \P2.P1.P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$176183 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [25], Q = \P2.P1.P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$175961 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [26], Q = \P2.P1.P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$175739 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [27], Q = \P2.P1.P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$175517 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [28], Q = \P2.P1.P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$175295 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [29], Q = \P2.P1.P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$175073 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [30], Q = \P2.P1.P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$174851 ($_DFFE_PP0P_) from module b18 (D = $auto$simplemap.cc:309:simplemap_bmux$71398 [31], Q = \P2.P1.P1.InstAddrPointer [31]).

yosys> opt_clean

3.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 376 unused wires.
<suppressed ~1 debug messages>

3.26.10. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.26.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~930 debug messages>

yosys> opt_merge

3.26.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~3852 debug messages>
Removed a total of 1284 cells.

yosys> opt_dff

3.26.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.26.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 1290 unused wires.
<suppressed ~1 debug messages>

3.26.15. Finished fast OPT passes.

yosys> memory_map

3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

yosys> opt_merge -nomux

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_share

3.28.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$42922 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$69672
        $auto$simplemap.cc:278:simplemap_mux$69326

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$42943 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$25455
        $auto$simplemap.cc:278:simplemap_mux$25109

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$44189 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$14160
        $auto$simplemap.cc:278:simplemap_mux$13653

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$7075 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$49216
        $auto$simplemap.cc:278:simplemap_mux$48870

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$77208 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$35696
        $auto$simplemap.cc:278:simplemap_mux$35350

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$8218 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$59392
        $auto$simplemap.cc:278:simplemap_mux$59046

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22164 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$22154
        $auto$simplemap.cc:312:simplemap_bmux$22151

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$32654 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$32644
        $auto$simplemap.cc:312:simplemap_bmux$32641

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$46168 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$46158
        $auto$simplemap.cc:312:simplemap_bmux$46155

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$56391 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$56381
        $auto$simplemap.cc:312:simplemap_bmux$56378

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$66623 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$66613
        $auto$simplemap.cc:312:simplemap_bmux$66610

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$85201 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$85221
        $auto$simplemap.cc:86:simplemap_bitop$85222

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$85202 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$85219
        $auto$simplemap.cc:86:simplemap_bitop$85220

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$85203 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$85217
        $auto$simplemap.cc:86:simplemap_bitop$85218

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$85204 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$85215
        $auto$simplemap.cc:86:simplemap_bitop$85216

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$9668 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$9658
        $auto$simplemap.cc:312:simplemap_bmux$9655


yosys> opt_dff

3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~16 debug messages>

3.28.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce -full

3.28.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.28.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_share

3.28.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$85208 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$85219
        $auto$simplemap.cc:86:simplemap_bitop$85221

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$85209 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$85215
        $auto$simplemap.cc:86:simplemap_bitop$85217


yosys> opt_dff

3.28.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~2 debug messages>

3.28.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce -full

3.28.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.28.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_share

3.28.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$85212 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$85215
        $auto$simplemap.cc:86:simplemap_bitop$85219


yosys> opt_dff

3.28.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.28.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~1 debug messages>

3.28.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.28.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce -full

3.28.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.28.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_share

3.28.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.28.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> opt_expr -full

3.28.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.28.34. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.29. Executing ABC pass (technology mapping using ABC).

3.29.1. Summary of detected clock domains:
  797 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  209 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$266988, arst=\reset, srst={ }
  39 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$266873, arst=\reset, srst={ }
  23 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$262283, arst=\reset, srst={ }
  12 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$262395, arst=\reset, srst={ }
  58 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$262008, arst=\reset, srst={ }
  113 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$262538, arst=\reset, srst={ }
  253 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$257340, arst=\reset, srst={ }
  116 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$257533, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$254098, arst=\reset, srst={ }
  566 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$254202, arst=\reset, srst={ }
  21 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$285866, arst=\reset, srst={ }
  24 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$286618, arst=\reset, srst={ }
  28 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$285114, arst=\reset, srst={ }
  24 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$288874, arst=\reset, srst={ }
  23 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$287370, arst=\reset, srst={ }
  24 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$288122, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$280602, arst=\reset, srst={ }
  23 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$281354, arst=\reset, srst={ }
  16 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$279850, arst=\reset, srst={ }
  20 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$283610, arst=\reset, srst={ }
  16 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$284362, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$282106, arst=\reset, srst={ }
  19 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$282858, arst=\reset, srst={ }
  16 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$278346, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$279098, arst=\reset, srst={ }
  51 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$277594, arst=\reset, srst={ }
  46 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$277495, arst=\reset, srst={ }
  105 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$270428, arst=\reset, srst={ }
  11 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$270305, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$242174, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$238414, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$188311, arst=\reset, srst={ }
  516 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$150019, arst=\reset, srst={ }
  12 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$149935, arst=\reset, srst={ }
  32 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$236910, arst=\reset, srst={ }
  32 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$189063, arst=\reset, srst={ }
  154 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$232403, arst=\reset, srst={ }
  1147 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$245994, arst=\reset, srst={ }
  251 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$246525, arst=\reset, srst={ }
  437 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$246468, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$244430, arst=\reset, srst={ }
  24 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$245182, arst=\reset, srst={ }
  16 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$248605, arst=\reset, srst={ }
  9 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$248482, arst=\reset, srst={ }
  32 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$248359, arst=\reset, srst={ }
  243 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$248772, arst=\reset, srst={ }
  5 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$246693, arst=\reset, srst={ }
  96 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$246639, arst=\reset, srst={ }
  131 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$246774, arst=\reset, srst={ }
  5 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$246727, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$186807, arst=\reset, srst={ }
  31 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$187559, arst=\reset, srst={ }
  46 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$229754, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$234654, arst=\reset, srst={ }
  28 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$235406, arst=\reset, srst={ }
  150 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$229926, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$236158, arst=\reset, srst={ }
  559 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$349487, arst=\reset, srst={ }
  24 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$349383, arst=\reset, srst={ }
  112 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$341924, arst=\reset, srst={ }
  240 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$341686, arst=\reset, srst={ }
  385 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$341623, arst=\reset, srst={ }
  4 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$342012, arst=\reset, srst={ }
  4 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$341978, arst=\reset, srst={ }
  102 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$342059, arst=\reset, srst={ }
  38 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$340337, arst=\reset, srst={ }
  886 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$341149, arst=\reset, srst={ }
  297 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$344057, arst=\reset, srst={ }
  16 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$343890, arst=\reset, srst={ }
  9 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$343767, arst=\reset, srst={ }
  28 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$343644, arst=\reset, srst={ }
  41 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$336577, arst=\reset, srst={ }
  25 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$337329, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$335073, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$335825, arst=\reset, srst={ }
  37 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$338833, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$339585, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$338081, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$331313, arst=\reset, srst={ }
  37 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$332065, arst=\reset, srst={ }
  37 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$329809, arst=\reset, srst={ }
  32 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$330561, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$333569, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$334321, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$332817, arst=\reset, srst={ }
  96 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$365713, arst=\reset, srst={ }
  8 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$365590, arst=\reset, srst={ }
  50 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$362158, arst=\reset, srst={ }
  229 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$362273, arst=\reset, srst={ }
  12 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$357680, arst=\reset, srst={ }
  19 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$357568, arst=\reset, srst={ }
  62 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$357293, arst=\reset, srst={ }
  84 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$357823, arst=\reset, srst={ }
  261 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$352625, arst=\reset, srst={ }
  157 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$352818, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$309697, arst=\reset, srst={ }
  59 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$309422, arst=\reset, srst={ }
  235 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$307824, arst=\reset, srst={ }
  563 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$301518, arst=\reset, srst={ }
  38 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$301414, arst=\reset, srst={ }
  388 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$304749, arst=\reset, srst={ }
  279 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$296088, arst=\reset, srst={ }
  13 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$295921, arst=\reset, srst={ }
  15 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$295798, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$295675, arst=\reset, srst={ }
  682 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$295487, arst=\reset, srst={ }
  49 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$291482, arst=\reset, srst={ }
  54 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$291621, arst=\reset, srst={ }
  126 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$291785, arst=\reset, srst={ }
  405 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$290160, arst=\reset, srst={ }
  831 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$289686, arst=\reset, srst={ }
  5 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$290453, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$290500, arst=\reset, srst={ }
  101 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$290365, arst=\reset, srst={ }
  5 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$290419, arst=\reset, srst={ }
  109 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$294262, arst=\reset, srst={ }
  125 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$325081, arst=\reset, srst={ }
  42 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$324909, arst=\reset, srst={ }
  333 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$328789, arst=\reset, srst={ }
  55 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$329057, arst=\reset, srst={ }
  87 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$327558, arst=\reset, srst={ }
  101 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$317842, arst=\reset, srst={ }
  11 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$317719, arst=\reset, srst={ }
  104 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$309952, arst=\reset, srst={ }
  10 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$309809, arst=\reset, srst={ }
  216 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$314402, arst=\reset, srst={ }
  39 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$314287, arst=\reset, srst={ }
  547 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$206461, arst=\reset, srst={ }
  19 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$206357, arst=\reset, srst={ }
  12 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$505831, arst=\reset, srst={ }
  46 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$505789, arst=\reset, srst={ }
  28 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$506054, arst=\reset, srst={ }
  51 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$506037, arst=\reset, srst={ }
  487 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$506077, arst=\reset, srst={ }
  646 cells in clk=\clock, en=\P4.state, arst=\reset, srst={ }
  687 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2736, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$166695, arst=\reset, srst={ }
  173 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$161747, arst=\reset, srst={ }
  20 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$2783, arst=\reset, srst={ }
  18 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$2789, arst=\reset, srst={ }
  21 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$2786, arst=\reset, srst={ }
  198 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$2793, arst=\reset, srst={ }
  24 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$240670, arst=\reset, srst={ }
  15 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$505775, arst=\reset, srst={ }
  2443 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$2806, arst=\reset, srst={ }
  21 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$2802, arst=\reset, srst={ }
  21 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$2799, arst=\reset, srst={ }
  21 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$2796, arst=\reset, srst={ }
  646 cells in clk=\clock, en=$flatten\P2.$verific$n277$660, arst=\reset, srst={ }
  456 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$507255, arst=\reset, srst={ }
  51 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$186055, arst=\reset, srst={ }
  55 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$166420, arst=\reset, srst={ }
  142 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$166950, arst=\reset, srst={ }
  497 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$506666, arst=\reset, srst={ }
  687 cells in clk=\clock, en=$flatten\P1.$verific$n277$660, arst=\reset, srst={ }
  7 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$166807, arst=\reset, srst={ }
  22 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$242926, arst=\reset, srst={ }
  25 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$243678, arst=\reset, srst={ }
  256 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$164822, arst=\reset, srst={ }
  108 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$184556, arst=\reset, srst={ }
  47 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$505810, arst=\reset, srst={ }
  107 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$174840, arst=\reset, srst={ }
  40 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$219132, arst=\reset, srst={ }
  206 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$219247, arst=\reset, srst={ }
  9 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$214654, arst=\reset, srst={ }
  22 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$214542, arst=\reset, srst={ }
  10 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$146797, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$191319, arst=\reset, srst={ }
  104 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$214797, arst=\reset, srst={ }
  57 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$214267, arst=\reset, srst={ }
  577 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$158516, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$158412, arst=\reset, srst={ }
  32 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$192071, arst=\reset, srst={ }
  48 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$233902, arst=\reset, srst={ }
  22 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$239918, arst=\reset, srst={ }
  13 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$152796, arst=\reset, srst={ }
  32 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$152673, arst=\reset, srst={ }
  225 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$201031, arst=\reset, srst={ }
  18 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$152919, arst=\reset, srst={ }
  239 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$185787, arst=\reset, srst={ }
  28 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$152538, arst=\reset, srst={ }
  23 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$239166, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$189815, arst=\reset, srst={ }
  305 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$153086, arst=\reset, srst={ }
  12 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$222564, arst=\reset, srst={ }
  93 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$222687, arst=\reset, srst={ }
  211 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$171400, arst=\reset, srst={ }
  499 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$146896, arst=\reset, srst={ }
  43 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$171285, arst=\reset, srst={ }
  14 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$505803, arst=\reset, srst={ }
  225 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$209599, arst=\reset, srst={ }
  288 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$233634, arst=\reset, srst={ }
  168 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$209792, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$190567, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$195831, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$196583, arst=\reset, srst={ }
  28 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$197335, arst=\reset, srst={ }
  138 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$182079, arst=\reset, srst={ }
  48 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$181907, arst=\reset, srst={ }
  897 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$198147, arst=\reset, srst={ }
  591 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$198890, arst=\reset, srst={ }
  584 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$198784, arst=\reset, srst={ }
  4 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$198952, arst=\reset, srst={ }
  124 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$198898, arst=\reset, srst={ }
  555 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$199033, arst=\reset, srst={ }
  3 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$198986, arst=\reset, srst={ }
  685 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$198678, arst=\reset, srst={ }
  376 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$198621, arst=\reset, srst={ }
  32 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$200618, arst=\reset, srst={ }
  22 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$237662, arst=\reset, srst={ }
  13 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$200741, arst=\reset, srst={ }
  15 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$200864, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$241422, arst=\reset, srst={ }
  10 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$174717, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$192823, arst=\reset, srst={ }
  12 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$143645, arst=\reset, srst={ }
  725 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$143744, arst=\reset, srst={ }
  472 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$507844, arst=\reset, srst={ }
  504 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$143029, arst=\reset, srst={ }
  12 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$505796, arst=\reset, srst={ }
  401 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$143041, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$193575, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$195079, arst=\reset, srst={ }
  451 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$508433, arst=\reset, srst={ }
  469 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$509022, arst=\reset, srst={ }
  28 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$194327, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$427677, arst=\reset, srst={ }
  21 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$426173, arst=\reset, srst={ }
  31 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$426925, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$429933, arst=\reset, srst={ }
  23 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$430685, arst=\reset, srst={ }
  23 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$428429, arst=\reset, srst={ }
  22 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$429181, arst=\reset, srst={ }
  139 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$420693, arst=\reset, srst={ }
  49 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$424669, arst=\reset, srst={ }
  276 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$424401, arst=\reset, srst={ }
  21 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$425421, arst=\reset, srst={ }
  99 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$423170, arst=\reset, srst={ }
  43 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$420521, arst=\reset, srst={ }
  106 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$413454, arst=\reset, srst={ }
  20 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$413331, arst=\reset, srst={ }
  50 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$437541, arst=\reset, srst={ }
  6 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$437494, arst=\reset, srst={ }
  5 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$437460, arst=\reset, srst={ }
  107 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$437406, arst=\reset, srst={ }
  434 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$437235, arst=\reset, srst={ }
  879 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$436761, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$432189, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$432941, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$431437, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$435197, arst=\reset, srst={ }
  21 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$435949, arst=\reset, srst={ }
  24 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$433693, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$434445, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$387456, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$385952, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$386704, arst=\reset, srst={ }
  126 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$389800, arst=\reset, srst={ }
  90 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$389665, arst=\reset, srst={ }
  6 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$389719, arst=\reset, srst={ }
  5 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$389753, arst=\reset, srst={ }
  430 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$389494, arst=\reset, srst={ }
  256 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$389551, arst=\reset, srst={ }
  24 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$388208, arst=\reset, srst={ }
  805 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$389020, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$382192, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$380688, arst=\reset, srst={ }
  23 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$381440, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$384448, arst=\reset, srst={ }
  23 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$385200, arst=\reset, srst={ }
  31 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$382944, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$383696, arst=\reset, srst={ }
  49 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$376928, arst=\reset, srst={ }
  220 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$376660, arst=\reset, srst={ }
  102 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$375429, arst=\reset, srst={ }
  21 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$379184, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$379936, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$377680, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$378432, arst=\reset, srst={ }
  134 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$372952, arst=\reset, srst={ }
  46 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$372780, arst=\reset, srst={ }
  213 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$410014, arst=\reset, srst={ }
  49 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$409899, arst=\reset, srst={ }
  60 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$405034, arst=\reset, srst={ }
  91 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$405564, arst=\reset, srst={ }
  19 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$405309, arst=\reset, srst={ }
  10 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$405421, arst=\reset, srst={ }
  46 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$397124, arst=\reset, srst={ }
  545 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$397228, arst=\reset, srst={ }
  111 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$400559, arst=\reset, srst={ }
  216 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$400366, arst=\reset, srst={ }
  216 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$391798, arst=\reset, srst={ }
  13 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$391631, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$391385, arst=\reset, srst={ }
  19 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$391508, arst=\reset, srst={ }

3.29.2. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 762 gates and 1014 wires to a netlist network with 250 inputs and 218 outputs.

3.29.2.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      180
ABC RESULTS:            ANDNOT cells:       24
ABC RESULTS:               BUF cells:       42
ABC RESULTS:               DFF cells:       44
ABC RESULTS:               MUX cells:       50
ABC RESULTS:              NAND cells:       79
ABC RESULTS:               NOR cells:       25
ABC RESULTS:               NOT cells:       39
ABC RESULTS:               ONE cells:        1
ABC RESULTS:                OR cells:       34
ABC RESULTS:             ORNOT cells:       23
ABC RESULTS:              XNOR cells:       38
ABC RESULTS:               XOR cells:       65
ABC RESULTS:        internal signals:      546
ABC RESULTS:           input signals:      250
ABC RESULTS:          output signals:      218
Removing temp directory.

3.29.3. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$266988, asynchronously reset by \reset
Extracted 209 gates and 264 wires to a netlist network with 55 inputs and 91 outputs.

3.29.3.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       58
ABC RESULTS:               BUF cells:       44
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       17
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       56
ABC RESULTS:        internal signals:      118
ABC RESULTS:           input signals:       55
ABC RESULTS:          output signals:       91
Removing temp directory.

3.29.4. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$266873, asynchronously reset by \reset
Extracted 38 gates and 68 wires to a netlist network with 28 inputs and 22 outputs.

3.29.4.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        8
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       10
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       22
Removing temp directory.

3.29.5. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$262283, asynchronously reset by \reset
Extracted 19 gates and 28 wires to a netlist network with 8 inputs and 16 outputs.

3.29.5.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.6. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$262395, asynchronously reset by \reset
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 4 outputs.

3.29.6.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.7. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$262008, asynchronously reset by \reset
Extracted 52 gates and 78 wires to a netlist network with 25 inputs and 34 outputs.

3.29.7.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       21
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       34
Removing temp directory.

3.29.8. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$262538, asynchronously reset by \reset
Extracted 113 gates and 185 wires to a netlist network with 71 inputs and 36 outputs.

3.29.8.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       16
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       26
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       36
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:       78
ABC RESULTS:           input signals:       71
ABC RESULTS:          output signals:       36
Removing temp directory.

3.29.9. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$257340, asynchronously reset by \reset
Extracted 253 gates and 378 wires to a netlist network with 124 inputs and 48 outputs.

3.29.9.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       40
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:       17
ABC RESULTS:               MUX cells:      101
ABC RESULTS:              NAND cells:       49
ABC RESULTS:               NOR cells:       20
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:       19
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:        9
ABC RESULTS:        internal signals:      206
ABC RESULTS:           input signals:      124
ABC RESULTS:          output signals:       48
Removing temp directory.

3.29.10. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$257533, asynchronously reset by \reset
Extracted 101 gates and 152 wires to a netlist network with 51 inputs and 32 outputs.

3.29.10.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.10.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:       15
ABC RESULTS:               MUX cells:       15
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       17
ABC RESULTS:        internal signals:       69
ABC RESULTS:           input signals:       51
ABC RESULTS:          output signals:       32
Removing temp directory.

3.29.11. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$254098, asynchronously reset by \reset
Extracted 36 gates and 63 wires to a netlist network with 27 inputs and 11 outputs.

3.29.11.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.11.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        9
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        9
ABC RESULTS:        internal signals:       25
ABC RESULTS:           input signals:       27
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.12. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$254202, asynchronously reset by \reset
Extracted 525 gates and 753 wires to a netlist network with 227 inputs and 145 outputs.

3.29.12.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.12.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       37
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       17
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:      158
ABC RESULTS:              NAND cells:       52
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:       31
ABC RESULTS:                OR cells:       36
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:       31
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:      381
ABC RESULTS:           input signals:      227
ABC RESULTS:          output signals:      145
Removing temp directory.

3.29.13. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$285866, asynchronously reset by \reset
Extracted 21 gates and 43 wires to a netlist network with 22 inputs and 14 outputs.

3.29.13.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.13.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.14. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$286618, asynchronously reset by \reset
Extracted 24 gates and 48 wires to a netlist network with 24 inputs and 16 outputs.

3.29.14.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.14.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.15. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$285114, asynchronously reset by \reset
Extracted 28 gates and 56 wires to a netlist network with 28 inputs and 17 outputs.

3.29.15.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.15.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.16. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$288874, asynchronously reset by \reset
Extracted 24 gates and 48 wires to a netlist network with 24 inputs and 15 outputs.

3.29.16.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.16.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.17. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$287370, asynchronously reset by \reset
Extracted 23 gates and 47 wires to a netlist network with 24 inputs and 14 outputs.

3.29.17.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.17.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.18. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$288122, asynchronously reset by \reset
Extracted 24 gates and 50 wires to a netlist network with 26 inputs and 17 outputs.

3.29.18.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.18.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.19. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$280602, asynchronously reset by \reset
Extracted 26 gates and 53 wires to a netlist network with 27 inputs and 16 outputs.

3.29.19.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.19.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       27
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.20. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$281354, asynchronously reset by \reset
Extracted 23 gates and 47 wires to a netlist network with 24 inputs and 15 outputs.

3.29.20.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.20.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.21. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$279850, asynchronously reset by \reset
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 11 outputs.

3.29.21.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.21.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.22. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$283610, asynchronously reset by \reset
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 13 outputs.

3.29.22.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.22.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.23. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$284362, asynchronously reset by \reset
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 11 outputs.

3.29.23.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.23.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.24. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$282106, asynchronously reset by \reset
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 17 outputs.

3.29.24.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.24.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.25. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$282858, asynchronously reset by \reset
Extracted 19 gates and 39 wires to a netlist network with 20 inputs and 13 outputs.

3.29.25.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.25.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        7
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       20
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.26. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$278346, asynchronously reset by \reset
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 11 outputs.

3.29.26.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.26.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        4
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.27. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$279098, asynchronously reset by \reset
Extracted 30 gates and 59 wires to a netlist network with 29 inputs and 18 outputs.

3.29.27.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.27.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       18
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.28. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$277594, asynchronously reset by \reset
Extracted 51 gates and 85 wires to a netlist network with 33 inputs and 37 outputs.

3.29.28.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.28.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       19
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        7
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       37
Removing temp directory.

3.29.29. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$277495, asynchronously reset by \reset
Extracted 46 gates and 77 wires to a netlist network with 30 inputs and 11 outputs.

3.29.29.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.29.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        9
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        5
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       36
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.30. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$270428, asynchronously reset by \reset
Extracted 103 gates and 176 wires to a netlist network with 73 inputs and 8 outputs.

3.29.30.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.30.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       48
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:       21
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       13
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       95
ABC RESULTS:           input signals:       73
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.31. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$270305, asynchronously reset by \reset
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 5 outputs.

3.29.31.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.31.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.32. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$242174, asynchronously reset by \reset
Extracted 29 gates and 57 wires to a netlist network with 28 inputs and 21 outputs.

3.29.32.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.32.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       17
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.33. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$238414, asynchronously reset by \reset
Extracted 33 gates and 63 wires to a netlist network with 30 inputs and 23 outputs.

3.29.33.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.33.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       21
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       23
Removing temp directory.

3.29.34. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$188311, asynchronously reset by \reset
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 18 outputs.

3.29.34.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.34.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       17
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.35. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$150019, asynchronously reset by \reset
Extracted 499 gates and 710 wires to a netlist network with 210 inputs and 69 outputs.

3.29.35.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.35.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      205
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               BUF cells:       17
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       90
ABC RESULTS:              NAND cells:      262
ABC RESULTS:               NOR cells:       31
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       88
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               XOR cells:       18
ABC RESULTS:        internal signals:      431
ABC RESULTS:           input signals:      210
ABC RESULTS:          output signals:       69
Removing temp directory.

3.29.36. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$149935, asynchronously reset by \reset
Extracted 12 gates and 26 wires to a netlist network with 13 inputs and 3 outputs.

3.29.36.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.36.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        3
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.37. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$236910, asynchronously reset by \reset
Extracted 32 gates and 63 wires to a netlist network with 31 inputs and 24 outputs.

3.29.37.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.37.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       17
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       24
Removing temp directory.

3.29.38. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$189063, asynchronously reset by \reset
Extracted 32 gates and 65 wires to a netlist network with 33 inputs and 19 outputs.

3.29.38.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.38.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       20
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.39. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$232403, asynchronously reset by \reset
Extracted 154 gates and 230 wires to a netlist network with 75 inputs and 85 outputs.

3.29.39.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.39.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       23
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       34
ABC RESULTS:              NAND cells:       20
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:       18
ABC RESULTS:                OR cells:       22
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       70
ABC RESULTS:           input signals:       75
ABC RESULTS:          output signals:       85
Removing temp directory.

3.29.40. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$245994, asynchronously reset by \reset
Extracted 1112 gates and 1902 wires to a netlist network with 788 inputs and 477 outputs.

3.29.40.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.40.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      282
ABC RESULTS:            ANDNOT cells:       34
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:      218
ABC RESULTS:              NAND cells:      859
ABC RESULTS:               NOR cells:       17
ABC RESULTS:               NOT cells:       62
ABC RESULTS:                OR cells:      109
ABC RESULTS:             ORNOT cells:      142
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      637
ABC RESULTS:           input signals:      788
ABC RESULTS:          output signals:      477
Removing temp directory.

3.29.41. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$246525, asynchronously reset by \reset
Extracted 251 gates and 687 wires to a netlist network with 435 inputs and 224 outputs.

3.29.41.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.41.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:      212
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:       28
ABC RESULTS:           input signals:      435
ABC RESULTS:          output signals:      224
Removing temp directory.

3.29.42. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$246468, asynchronously reset by \reset
Extracted 347 gates and 647 wires to a netlist network with 298 inputs and 159 outputs.

3.29.42.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.42.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       77
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:       90
ABC RESULTS:              NAND cells:       69
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:       28
ABC RESULTS:                OR cells:       75
ABC RESULTS:             ORNOT cells:       34
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       23
ABC RESULTS:        internal signals:      190
ABC RESULTS:           input signals:      298
ABC RESULTS:          output signals:      159
Removing temp directory.

3.29.43. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$244430, asynchronously reset by \reset
Extracted 33 gates and 64 wires to a netlist network with 31 inputs and 22 outputs.

3.29.43.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.43.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       21
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       22
Removing temp directory.

3.29.44. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$245182, asynchronously reset by \reset
Extracted 24 gates and 50 wires to a netlist network with 26 inputs and 19 outputs.

3.29.44.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.44.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.45. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$248605, asynchronously reset by \reset
Extracted 16 gates and 26 wires to a netlist network with 10 inputs and 2 outputs.

3.29.45.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.45.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.46. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$248482, asynchronously reset by \reset
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 2 outputs.

3.29.46.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.46.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.47. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$248359, asynchronously reset by \reset
Extracted 32 gates and 52 wires to a netlist network with 19 inputs and 14 outputs.

3.29.47.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.47.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.48. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$248772, asynchronously reset by \reset
Extracted 203 gates and 307 wires to a netlist network with 102 inputs and 95 outputs.

3.29.48.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.48.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       36
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       41
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       69
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       31
ABC RESULTS:        internal signals:      110
ABC RESULTS:           input signals:      102
ABC RESULTS:          output signals:       95
Removing temp directory.

3.29.49. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$246693, asynchronously reset by \reset
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 3 outputs.

3.29.49.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.49.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.50. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$246639, asynchronously reset by \reset
Extracted 95 gates and 134 wires to a netlist network with 37 inputs and 30 outputs.

3.29.50.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.50.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       20
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:       12
ABC RESULTS:              NAND cells:       24
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       12
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:        internal signals:       67
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       30
Removing temp directory.

3.29.51. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$246774, asynchronously reset by \reset
Extracted 127 gates and 197 wires to a netlist network with 70 inputs and 64 outputs.

3.29.51.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.51.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       17
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       32
ABC RESULTS:               NOT cells:       29
ABC RESULTS:                OR cells:       15
ABC RESULTS:        internal signals:       63
ABC RESULTS:           input signals:       70
ABC RESULTS:          output signals:       64
Removing temp directory.

3.29.52. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$246727, asynchronously reset by \reset
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.29.52.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.52.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.53. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$186807, asynchronously reset by \reset
Extracted 27 gates and 55 wires to a netlist network with 28 inputs and 19 outputs.

3.29.53.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.53.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.54. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$187559, asynchronously reset by \reset
Extracted 31 gates and 62 wires to a netlist network with 31 inputs and 20 outputs.

3.29.54.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.54.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       19
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.55. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$229754, asynchronously reset by \reset
Extracted 46 gates and 81 wires to a netlist network with 34 inputs and 11 outputs.

3.29.55.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.55.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        5
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       36
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.56. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$234654, asynchronously reset by \reset
Extracted 26 gates and 51 wires to a netlist network with 25 inputs and 20 outputs.

3.29.56.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.56.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.57. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$235406, asynchronously reset by \reset
Extracted 28 gates and 56 wires to a netlist network with 28 inputs and 20 outputs.

3.29.57.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.57.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.58. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$229926, asynchronously reset by \reset
Extracted 150 gates and 214 wires to a netlist network with 63 inputs and 32 outputs.

3.29.58.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.58.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       36
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:       26
ABC RESULTS:               DFF cells:       15
ABC RESULTS:               MUX cells:        6
ABC RESULTS:              NAND cells:       11
ABC RESULTS:               NOR cells:       11
ABC RESULTS:                OR cells:       12
ABC RESULTS:        internal signals:      119
ABC RESULTS:           input signals:       63
ABC RESULTS:          output signals:       32
Removing temp directory.

3.29.59. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$236158, asynchronously reset by \reset
Extracted 34 gates and 66 wires to a netlist network with 32 inputs and 22 outputs.

3.29.59.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.59.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       22
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       22
Removing temp directory.

3.29.60. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$349487, asynchronously reset by \reset
Extracted 518 gates and 742 wires to a netlist network with 223 inputs and 143 outputs.

3.29.60.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.60.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       40
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       19
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:      158
ABC RESULTS:              NAND cells:       51
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:       30
ABC RESULTS:                OR cells:       30
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:       30
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      376
ABC RESULTS:           input signals:      223
ABC RESULTS:          output signals:      143
Removing temp directory.

3.29.61. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$349383, asynchronously reset by \reset
Extracted 24 gates and 43 wires to a netlist network with 19 inputs and 7 outputs.

3.29.61.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.61.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.62. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$341924, asynchronously reset by \reset
Extracted 107 gates and 166 wires to a netlist network with 57 inputs and 37 outputs.

3.29.62.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.62.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       21
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:       21
ABC RESULTS:              NAND cells:       19
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       17
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:        internal signals:       72
ABC RESULTS:           input signals:       57
ABC RESULTS:          output signals:       37
Removing temp directory.

3.29.63. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$341686, asynchronously reset by \reset
Extracted 240 gates and 356 wires to a netlist network with 115 inputs and 124 outputs.

3.29.63.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.63.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       39
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:      111
ABC RESULTS:              NAND cells:       49
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:       19
ABC RESULTS:                OR cells:       15
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        9
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      117
ABC RESULTS:           input signals:      115
ABC RESULTS:          output signals:      124
Removing temp directory.

3.29.64. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$341623, asynchronously reset by \reset
Extracted 295 gates and 556 wires to a netlist network with 259 inputs and 137 outputs.

3.29.64.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.64.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       52
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:      126
ABC RESULTS:              NAND cells:       11
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:       20
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:              XNOR cells:       31
ABC RESULTS:               XOR cells:       22
ABC RESULTS:        internal signals:      160
ABC RESULTS:           input signals:      259
ABC RESULTS:          output signals:      137
Removing temp directory.

3.29.65. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$342012, asynchronously reset by \reset
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.29.65.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.65.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.66. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$341978, asynchronously reset by \reset
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.29.66.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.66.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.67. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$342059, asynchronously reset by \reset
Extracted 102 gates and 149 wires to a netlist network with 47 inputs and 44 outputs.

3.29.67.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.67.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       18
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       12
ABC RESULTS:               NOT cells:       28
ABC RESULTS:                OR cells:       13
ABC RESULTS:        internal signals:       58
ABC RESULTS:           input signals:       47
ABC RESULTS:          output signals:       44
Removing temp directory.

3.29.68. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$340337, asynchronously reset by \reset
Extracted 38 gates and 73 wires to a netlist network with 35 inputs and 23 outputs.

3.29.68.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.68.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       26
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       23
Removing temp directory.

3.29.69. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$341149, asynchronously reset by \reset
Extracted 851 gates and 1598 wires to a netlist network with 745 inputs and 394 outputs.

3.29.69.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.69.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      177
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:      243
ABC RESULTS:              NAND cells:      432
ABC RESULTS:               NOR cells:       16
ABC RESULTS:               NOT cells:       60
ABC RESULTS:               ONE cells:        1
ABC RESULTS:                OR cells:      127
ABC RESULTS:             ORNOT cells:       96
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      459
ABC RESULTS:           input signals:      745
ABC RESULTS:          output signals:      394
Removing temp directory.

3.29.70. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$344057, asynchronously reset by \reset
Extracted 241 gates and 373 wires to a netlist network with 130 inputs and 103 outputs.

3.29.70.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.70.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       40
ABC RESULTS:               BUF cells:       40
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       85
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        9
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       32
ABC RESULTS:        internal signals:      140
ABC RESULTS:           input signals:      130
ABC RESULTS:          output signals:      103
Removing temp directory.

3.29.71. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$343890, asynchronously reset by \reset
Extracted 16 gates and 27 wires to a netlist network with 11 inputs and 3 outputs.

3.29.71.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.71.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.72. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$343767, asynchronously reset by \reset
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 2 outputs.

3.29.72.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.72.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.73. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$343644, asynchronously reset by \reset
Extracted 28 gates and 47 wires to a netlist network with 18 inputs and 11 outputs.

3.29.73.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.73.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        5
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.74. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$336577, asynchronously reset by \reset
Extracted 41 gates and 78 wires to a netlist network with 37 inputs and 24 outputs.

3.29.74.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.74.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       29
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       24
Removing temp directory.

3.29.75. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$337329, asynchronously reset by \reset
Extracted 25 gates and 52 wires to a netlist network with 27 inputs and 17 outputs.

3.29.75.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.75.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       13
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       27
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.76. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$335073, asynchronously reset by \reset
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 20 outputs.

3.29.76.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.76.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       21
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.77. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$335825, asynchronously reset by \reset
Extracted 36 gates and 71 wires to a netlist network with 35 inputs and 21 outputs.

3.29.77.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.77.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       24
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.78. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$338833, asynchronously reset by \reset
Extracted 37 gates and 72 wires to a netlist network with 35 inputs and 22 outputs.

3.29.78.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.78.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       25
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       22
Removing temp directory.

3.29.79. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$339585, asynchronously reset by \reset
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 18 outputs.

3.29.79.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.79.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       17
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.80. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$338081, asynchronously reset by \reset
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 20 outputs.

3.29.80.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.80.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       21
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.81. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$331313, asynchronously reset by \reset
Extracted 29 gates and 59 wires to a netlist network with 30 inputs and 19 outputs.

3.29.81.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.81.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       17
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.82. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$332065, asynchronously reset by \reset
Extracted 37 gates and 74 wires to a netlist network with 37 inputs and 23 outputs.

3.29.82.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.82.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       22
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       23
Removing temp directory.

3.29.83. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$329809, asynchronously reset by \reset
Extracted 37 gates and 72 wires to a netlist network with 35 inputs and 23 outputs.

3.29.83.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.83.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       24
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       23
Removing temp directory.

3.29.84. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$330561, asynchronously reset by \reset
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 20 outputs.

3.29.84.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.84.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       20
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.85. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$333569, asynchronously reset by \reset
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 21 outputs.

3.29.85.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.85.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       23
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.86. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$334321, asynchronously reset by \reset
Extracted 36 gates and 71 wires to a netlist network with 35 inputs and 21 outputs.

3.29.86.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.86.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       24
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.87. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$332817, asynchronously reset by \reset
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 21 outputs.

3.29.87.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.87.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       23
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.88. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$365713, asynchronously reset by \reset
Extracted 94 gates and 163 wires to a netlist network with 69 inputs and 7 outputs.

3.29.88.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.88.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       46
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:       21
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       11
ABC RESULTS:        internal signals:       87
ABC RESULTS:           input signals:       69
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.89. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$365590, asynchronously reset by \reset
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.29.89.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.89.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.90. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$362158, asynchronously reset by \reset
Extracted 49 gates and 83 wires to a netlist network with 32 inputs and 25 outputs.

3.29.90.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.90.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       14
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:        9
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       25
Removing temp directory.

3.29.91. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$362273, asynchronously reset by \reset
Extracted 229 gates and 297 wires to a netlist network with 68 inputs and 93 outputs.

3.29.91.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.91.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       41
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:       33
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       27
ABC RESULTS:              NAND cells:       22
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:       21
ABC RESULTS:               XOR cells:       37
ABC RESULTS:        internal signals:      136
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       93
Removing temp directory.

3.29.92. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$357680, asynchronously reset by \reset
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 4 outputs.

3.29.92.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.92.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.93. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$357568, asynchronously reset by \reset
Extracted 15 gates and 25 wires to a netlist network with 9 inputs and 12 outputs.

3.29.93.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.93.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.94. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$357293, asynchronously reset by \reset
Extracted 56 gates and 82 wires to a netlist network with 25 inputs and 36 outputs.

3.29.94.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.94.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        7
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       36
Removing temp directory.

3.29.95. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$357823, asynchronously reset by \reset
Extracted 82 gates and 143 wires to a netlist network with 60 inputs and 36 outputs.

3.29.95.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.95.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:       42
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       10
ABC RESULTS:              NAND cells:       26
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:        internal signals:       47
ABC RESULTS:           input signals:       60
ABC RESULTS:          output signals:       36
Removing temp directory.

3.29.96. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$352625, asynchronously reset by \reset
Extracted 261 gates and 360 wires to a netlist network with 98 inputs and 65 outputs.

3.29.96.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.96.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       49
ABC RESULTS:            ANDNOT cells:       19
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:       17
ABC RESULTS:               MUX cells:       70
ABC RESULTS:              NAND cells:       60
ABC RESULTS:               NOR cells:       19
ABC RESULTS:               NOT cells:        9
ABC RESULTS:                OR cells:       21
ABC RESULTS:             ORNOT cells:       19
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:        9
ABC RESULTS:        internal signals:      197
ABC RESULTS:           input signals:       98
ABC RESULTS:          output signals:       65
Removing temp directory.

3.29.97. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$352818, asynchronously reset by \reset
Extracted 144 gates and 211 wires to a netlist network with 66 inputs and 17 outputs.

3.29.97.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.97.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       43
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:       15
ABC RESULTS:               MUX cells:       15
ABC RESULTS:              NAND cells:       51
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        9
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       17
ABC RESULTS:        internal signals:      128
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.98. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$309697, asynchronously reset by \reset
Extracted 31 gates and 48 wires to a netlist network with 16 inputs and 14 outputs.

3.29.98.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.98.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       14
Removing temp directory.

3.29.99. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$309422, asynchronously reset by \reset
Extracted 53 gates and 75 wires to a netlist network with 21 inputs and 34 outputs.

3.29.99.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.99.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       21
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       34
Removing temp directory.

3.29.100. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$307824, asynchronously reset by \reset
Extracted 235 gates and 326 wires to a netlist network with 90 inputs and 67 outputs.

3.29.100.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.100.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       50
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       51
ABC RESULTS:              NAND cells:       67
ABC RESULTS:               NOR cells:       21
ABC RESULTS:               NOT cells:       11
ABC RESULTS:                OR cells:       23
ABC RESULTS:             ORNOT cells:       21
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      169
ABC RESULTS:           input signals:       90
ABC RESULTS:          output signals:       67
Removing temp directory.

3.29.101. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$301518, asynchronously reset by \reset
Extracted 522 gates and 744 wires to a netlist network with 221 inputs and 134 outputs.

3.29.101.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.101.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       40
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:      158
ABC RESULTS:              NAND cells:       50
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:       30
ABC RESULTS:                OR cells:       29
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:       31
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:      389
ABC RESULTS:           input signals:      221
ABC RESULTS:          output signals:      134
Removing temp directory.

3.29.102. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$301414, asynchronously reset by \reset
Extracted 38 gates and 61 wires to a netlist network with 23 inputs and 9 outputs.

3.29.102.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.102.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:        internal signals:       29
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.103. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$304749, asynchronously reset by \reset
Extracted 373 gates and 627 wires to a netlist network with 253 inputs and 31 outputs.

3.29.103.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.103.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       76
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:        9
ABC RESULTS:              NAND cells:      166
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        9
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:              XNOR cells:       67
ABC RESULTS:               XOR cells:       42
ABC RESULTS:        internal signals:      343
ABC RESULTS:           input signals:      253
ABC RESULTS:          output signals:       31
Removing temp directory.

3.29.104. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$296088, asynchronously reset by \reset
Extracted 223 gates and 338 wires to a netlist network with 113 inputs and 102 outputs.

3.29.104.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.104.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       37
ABC RESULTS:               BUF cells:       39
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       81
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       32
ABC RESULTS:        internal signals:      123
ABC RESULTS:           input signals:      113
ABC RESULTS:          output signals:      102
Removing temp directory.

3.29.105. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$295921, asynchronously reset by \reset
Extracted 13 gates and 22 wires to a netlist network with 9 inputs and 2 outputs.

3.29.105.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.105.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.106. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$295798, asynchronously reset by \reset
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 4 outputs.

3.29.106.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.106.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.107. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$295675, asynchronously reset by \reset
Extracted 29 gates and 49 wires to a netlist network with 19 inputs and 12 outputs.

3.29.107.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.107.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.108. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$295487, asynchronously reset by \reset
Extracted 666 gates and 997 wires to a netlist network with 330 inputs and 301 outputs.

3.29.108.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.108.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       42
ABC RESULTS:            ANDNOT cells:       22
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:      401
ABC RESULTS:              NAND cells:       66
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       11
ABC RESULTS:             ORNOT cells:       20
ABC RESULTS:              XNOR cells:        7
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      366
ABC RESULTS:           input signals:      330
ABC RESULTS:          output signals:      301
Removing temp directory.

3.29.109. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$291482, asynchronously reset by \reset
Extracted 49 gates and 75 wires to a netlist network with 25 inputs and 12 outputs.

3.29.109.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.109.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       17
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:       28
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       11
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       38
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.110. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$291621, asynchronously reset by \reset
Extracted 52 gates and 86 wires to a netlist network with 33 inputs and 26 outputs.

3.29.110.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.110.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       13
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:       14
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        9
ABC RESULTS:                OR cells:       12
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       26
Removing temp directory.

3.29.111. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$291785, asynchronously reset by \reset
Extracted 126 gates and 187 wires to a netlist network with 60 inputs and 18 outputs.

3.29.111.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.111.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       25
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       22
ABC RESULTS:               DFF cells:       15
ABC RESULTS:               MUX cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        9
ABC RESULTS:                OR cells:       11
ABC RESULTS:        internal signals:      109
ABC RESULTS:           input signals:       60
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.112. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$290160, asynchronously reset by \reset
Extracted 315 gates and 546 wires to a netlist network with 229 inputs and 139 outputs.

3.29.112.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.112.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       52
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:       95
ABC RESULTS:              NAND cells:       14
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:       31
ABC RESULTS:                OR cells:       17
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       22
ABC RESULTS:        internal signals:      178
ABC RESULTS:           input signals:      229
ABC RESULTS:          output signals:      139
Removing temp directory.

3.29.113. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$289686, asynchronously reset by \reset
Extracted 796 gates and 1514 wires to a netlist network with 716 inputs and 320 outputs.

3.29.113.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.113.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      209
ABC RESULTS:            ANDNOT cells:       13
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:      189
ABC RESULTS:              NAND cells:      537
ABC RESULTS:               NOR cells:       17
ABC RESULTS:               NOT cells:       48
ABC RESULTS:                OR cells:       78
ABC RESULTS:             ORNOT cells:       78
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:      478
ABC RESULTS:           input signals:      716
ABC RESULTS:          output signals:      320
Removing temp directory.

3.29.114. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$290453, asynchronously reset by \reset
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

3.29.114.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.114.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.115. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$290500, asynchronously reset by \reset
Extracted 36 gates and 75 wires to a netlist network with 39 inputs and 20 outputs.

3.29.115.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.115.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       24
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:       14
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       39
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.116. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$290365, asynchronously reset by \reset
Extracted 100 gates and 149 wires to a netlist network with 47 inputs and 33 outputs.

3.29.116.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.116.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       23
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:       17
ABC RESULTS:              NAND cells:       23
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       15
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:        internal signals:       69
ABC RESULTS:           input signals:       47
ABC RESULTS:          output signals:       33
Removing temp directory.

3.29.117. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$290419, asynchronously reset by \reset
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

3.29.117.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.117.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.118. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$294262, asynchronously reset by \reset
Extracted 109 gates and 164 wires to a netlist network with 54 inputs and 54 outputs.

3.29.118.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.118.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       22
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       19
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:       11
ABC RESULTS:        internal signals:       56
ABC RESULTS:           input signals:       54
ABC RESULTS:          output signals:       54
Removing temp directory.

3.29.119. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$325081, asynchronously reset by \reset
Extracted 125 gates and 187 wires to a netlist network with 61 inputs and 26 outputs.

3.29.119.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.119.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       24
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       29
ABC RESULTS:               DFF cells:       15
ABC RESULTS:               MUX cells:        9
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        7
ABC RESULTS:                OR cells:       11
ABC RESULTS:        internal signals:      100
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       26
Removing temp directory.

3.29.120. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$324909, asynchronously reset by \reset
Extracted 42 gates and 75 wires to a netlist network with 32 inputs and 10 outputs.

3.29.120.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.120.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.121. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$328789, asynchronously reset by \reset
Extracted 333 gates and 494 wires to a netlist network with 161 inputs and 172 outputs.

3.29.121.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.121.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       41
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:      206
ABC RESULTS:              NAND cells:       49
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:       19
ABC RESULTS:                OR cells:       13
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        9
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:      161
ABC RESULTS:           input signals:      161
ABC RESULTS:          output signals:      172
Removing temp directory.

3.29.122. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$329057, asynchronously reset by \reset
Extracted 55 gates and 90 wires to a netlist network with 34 inputs and 39 outputs.

3.29.122.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.122.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       22
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       39
Removing temp directory.

3.29.123. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$327558, asynchronously reset by \reset
Extracted 87 gates and 142 wires to a netlist network with 54 inputs and 66 outputs.

3.29.123.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.123.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       31
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       25
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:       15
ABC RESULTS:                OR cells:        8
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:       54
ABC RESULTS:          output signals:       66
Removing temp directory.

3.29.124. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$317842, asynchronously reset by \reset
Extracted 99 gates and 169 wires to a netlist network with 70 inputs and 8 outputs.

3.29.124.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.124.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       46
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:       21
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       12
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       91
ABC RESULTS:           input signals:       70
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.125. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$317719, asynchronously reset by \reset
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 4 outputs.

3.29.125.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.125.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.126. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$309952, asynchronously reset by \reset
Extracted 104 gates and 171 wires to a netlist network with 66 inputs and 34 outputs.

3.29.126.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.126.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       32
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       14
ABC RESULTS:              NAND cells:       41
ABC RESULTS:               NOR cells:        4
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       71
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       34
Removing temp directory.

3.29.127. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$309809, asynchronously reset by \reset
Extracted 10 gates and 19 wires to a netlist network with 9 inputs and 3 outputs.

3.29.127.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.127.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.128. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$314402, asynchronously reset by \reset
Extracted 216 gates and 276 wires to a netlist network with 60 inputs and 91 outputs.

3.29.128.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.128.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       56
ABC RESULTS:               BUF cells:       39
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       22
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        7
ABC RESULTS:               XOR cells:       50
ABC RESULTS:        internal signals:      125
ABC RESULTS:           input signals:       60
ABC RESULTS:          output signals:       91
Removing temp directory.

3.29.129. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$519190$auto$opt_dff.cc:219:make_patterns_logic$314287, asynchronously reset by \reset
Extracted 38 gates and 63 wires to a netlist network with 23 inputs and 19 outputs.

3.29.129.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.129.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       10
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.130. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$206461, asynchronously reset by \reset
Extracted 506 gates and 727 wires to a netlist network with 220 inputs and 152 outputs.

3.29.130.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.130.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       37
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       26
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:      158
ABC RESULTS:              NAND cells:       52
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:       31
ABC RESULTS:                OR cells:       31
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:       30
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      355
ABC RESULTS:           input signals:      220
ABC RESULTS:          output signals:      152
Removing temp directory.

3.29.131. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$206357, asynchronously reset by \reset
Extracted 19 gates and 37 wires to a netlist network with 18 inputs and 6 outputs.

3.29.131.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.131.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.132. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$505831, asynchronously reset by \reset
Extracted 12 gates and 22 wires to a netlist network with 10 inputs and 7 outputs.

3.29.132.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.132.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.133. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$505789, asynchronously reset by \reset
Extracted 46 gates and 85 wires to a netlist network with 39 inputs and 6 outputs.

3.29.133.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.133.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       14
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:        5
ABC RESULTS:                OR cells:        5
ABC RESULTS:        internal signals:       40
ABC RESULTS:           input signals:       39
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.134. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$506054, asynchronously reset by \reset
Extracted 24 gates and 43 wires to a netlist network with 18 inputs and 7 outputs.

3.29.134.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.134.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:        7
Removing temp directory.

3.29.135. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$506037, asynchronously reset by \reset
Extracted 45 gates and 85 wires to a netlist network with 38 inputs and 17 outputs.

3.29.135.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.135.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:       15
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:        9
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:       30
ABC RESULTS:           input signals:       38
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.136. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$506077, asynchronously reset by \reset
Extracted 487 gates and 573 wires to a netlist network with 86 inputs and 98 outputs.

3.29.136.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.136.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      129
ABC RESULTS:            ANDNOT cells:       21
ABC RESULTS:               BUF cells:       16
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       29
ABC RESULTS:              NAND cells:       83
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       26
ABC RESULTS:              XNOR cells:       18
ABC RESULTS:               XOR cells:       62
ABC RESULTS:        internal signals:      389
ABC RESULTS:           input signals:       86
ABC RESULTS:          output signals:       98
Removing temp directory.

3.29.137. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$510769$lo04, asynchronously reset by \reset
Extracted 646 gates and 791 wires to a netlist network with 144 inputs and 44 outputs.

3.29.137.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.137.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      156
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:       26
ABC RESULTS:               MUX cells:       96
ABC RESULTS:              NAND cells:      352
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:       52
ABC RESULTS:             ORNOT cells:       39
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       22
ABC RESULTS:        internal signals:      603
ABC RESULTS:           input signals:      144
ABC RESULTS:          output signals:       44
Removing temp directory.

3.29.138. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2736, asynchronously reset by \reset
Extracted 687 gates and 789 wires to a netlist network with 102 inputs and 607 outputs.

3.29.138.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.138.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      562
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:       64
ABC RESULTS:               NOT cells:       31
ABC RESULTS:                OR cells:       13
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       80
ABC RESULTS:           input signals:      102
ABC RESULTS:          output signals:      607
Removing temp directory.

3.29.139. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$166695, asynchronously reset by \reset
Extracted 23 gates and 36 wires to a netlist network with 12 inputs and 17 outputs.

3.29.139.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.139.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.140. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$161747, asynchronously reset by \reset
Extracted 160 gates and 240 wires to a netlist network with 79 inputs and 18 outputs.

3.29.140.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.140.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       59
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       14
ABC RESULTS:              NAND cells:       44
ABC RESULTS:               NOR cells:       11
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       21
ABC RESULTS:             ORNOT cells:       20
ABC RESULTS:              XNOR cells:        7
ABC RESULTS:               XOR cells:       12
ABC RESULTS:        internal signals:      143
ABC RESULTS:           input signals:       79
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.141. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2783, asynchronously reset by \reset
Extracted 20 gates and 31 wires to a netlist network with 10 inputs and 6 outputs.

3.29.141.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.141.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.142. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2789, asynchronously reset by \reset
Extracted 18 gates and 30 wires to a netlist network with 11 inputs and 6 outputs.

3.29.142.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.142.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        4
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.143. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2786, asynchronously reset by \reset
Extracted 21 gates and 33 wires to a netlist network with 11 inputs and 5 outputs.

3.29.143.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.143.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.144. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2793, asynchronously reset by \reset
Extracted 198 gates and 353 wires to a netlist network with 154 inputs and 80 outputs.

3.29.144.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.144.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       97
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       17
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       45
ABC RESULTS:              NAND cells:       11
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        5
ABC RESULTS:        internal signals:      119
ABC RESULTS:           input signals:      154
ABC RESULTS:          output signals:       80
Removing temp directory.

3.29.145. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$240670, asynchronously reset by \reset
Extracted 24 gates and 48 wires to a netlist network with 24 inputs and 19 outputs.

3.29.145.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.145.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.146. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$505775, asynchronously reset by \reset
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 4 outputs.

3.29.146.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.146.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.147. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2806, asynchronously reset by \reset
Extracted 2443 gates and 3018 wires to a netlist network with 575 inputs and 157 outputs.

3.29.147.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.147.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      212
ABC RESULTS:            ANDNOT cells:       21
ABC RESULTS:               BUF cells:       61
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       32
ABC RESULTS:              NAND cells:     1004
ABC RESULTS:               NOR cells:       16
ABC RESULTS:               NOT cells:       18
ABC RESULTS:                OR cells:      114
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:      204
ABC RESULTS:               XOR cells:      751
ABC RESULTS:        internal signals:     2286
ABC RESULTS:           input signals:      575
ABC RESULTS:          output signals:      157
Removing temp directory.

3.29.148. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2802, asynchronously reset by \reset
Extracted 21 gates and 33 wires to a netlist network with 11 inputs and 5 outputs.

3.29.148.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.148.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.149. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2799, asynchronously reset by \reset
Extracted 21 gates and 33 wires to a netlist network with 11 inputs and 5 outputs.

3.29.149.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.149.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.150. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2796, asynchronously reset by \reset
Extracted 21 gates and 33 wires to a netlist network with 11 inputs and 5 outputs.

3.29.150.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.150.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.151. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $flatten\P2.$verific$n277$660, asynchronously reset by \reset
Extracted 646 gates and 898 wires to a netlist network with 251 inputs and 375 outputs.

3.29.151.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.151.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       73
ABC RESULTS:            ANDNOT cells:       81
ABC RESULTS:               BUF cells:       61
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:      353
ABC RESULTS:              NAND cells:       62
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:       21
ABC RESULTS:                OR cells:       65
ABC RESULTS:             ORNOT cells:       11
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:      272
ABC RESULTS:           input signals:      251
ABC RESULTS:          output signals:      375
Removing temp directory.

3.29.152. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$507255, asynchronously reset by \reset
Extracted 456 gates and 530 wires to a netlist network with 74 inputs and 97 outputs.

3.29.152.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.152.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      121
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               BUF cells:       21
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       16
ABC RESULTS:              NAND cells:       69
ABC RESULTS:               NOR cells:       21
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       23
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:              XNOR cells:       25
ABC RESULTS:               XOR cells:       50
ABC RESULTS:        internal signals:      359
ABC RESULTS:           input signals:       74
ABC RESULTS:          output signals:       97
Removing temp directory.

3.29.153. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$186055, asynchronously reset by \reset
Extracted 51 gates and 88 wires to a netlist network with 36 inputs and 35 outputs.

3.29.153.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.153.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       24
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       35
Removing temp directory.

3.29.154. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$166420, asynchronously reset by \reset
Extracted 49 gates and 72 wires to a netlist network with 22 inputs and 33 outputs.

3.29.154.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.154.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       20
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       33
Removing temp directory.

3.29.155. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$166950, asynchronously reset by \reset
Extracted 140 gates and 213 wires to a netlist network with 72 inputs and 38 outputs.

3.29.155.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.155.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       23
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               BUF cells:       21
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       41
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:      103
ABC RESULTS:           input signals:       72
ABC RESULTS:          output signals:       38
Removing temp directory.

3.29.156. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$506666, asynchronously reset by \reset
Extracted 497 gates and 583 wires to a netlist network with 86 inputs and 99 outputs.

3.29.156.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.156.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      131
ABC RESULTS:            ANDNOT cells:       22
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       15
ABC RESULTS:              NAND cells:      107
ABC RESULTS:               NOR cells:       11
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:       35
ABC RESULTS:             ORNOT cells:       13
ABC RESULTS:              XNOR cells:       25
ABC RESULTS:               XOR cells:       57
ABC RESULTS:        internal signals:      398
ABC RESULTS:           input signals:       86
ABC RESULTS:          output signals:       99
Removing temp directory.

3.29.157. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $flatten\P1.$verific$n277$660, asynchronously reset by \reset
Extracted 687 gates and 998 wires to a netlist network with 310 inputs and 399 outputs.

3.29.157.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.157.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       80
ABC RESULTS:            ANDNOT cells:       22
ABC RESULTS:               BUF cells:       42
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:      439
ABC RESULTS:              NAND cells:       21
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:       23
ABC RESULTS:                OR cells:       25
ABC RESULTS:             ORNOT cells:       11
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:      289
ABC RESULTS:           input signals:      310
ABC RESULTS:          output signals:      399
Removing temp directory.

3.29.158. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$166807, asynchronously reset by \reset
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 2 outputs.

3.29.158.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.158.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.159. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$242926, asynchronously reset by \reset
Extracted 22 gates and 45 wires to a netlist network with 23 inputs and 18 outputs.

3.29.159.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.159.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.160. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$243678, asynchronously reset by \reset
Extracted 25 gates and 51 wires to a netlist network with 26 inputs and 19 outputs.

3.29.160.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.160.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       13
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.161. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$164822, asynchronously reset by \reset
Extracted 256 gates and 377 wires to a netlist network with 120 inputs and 64 outputs.

3.29.161.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.161.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       31
ABC RESULTS:            ANDNOT cells:       20
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       97
ABC RESULTS:              NAND cells:       46
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        7
ABC RESULTS:                OR cells:       29
ABC RESULTS:             ORNOT cells:       21
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:      193
ABC RESULTS:           input signals:      120
ABC RESULTS:          output signals:       64
Removing temp directory.

3.29.162. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$184556, asynchronously reset by \reset
Extracted 108 gates and 165 wires to a netlist network with 56 inputs and 62 outputs.

3.29.162.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.162.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       28
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       16
ABC RESULTS:              NAND cells:       19
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:       17
ABC RESULTS:                OR cells:       13
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       47
ABC RESULTS:           input signals:       56
ABC RESULTS:          output signals:       62
Removing temp directory.

3.29.163. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$505810, asynchronously reset by \reset
Extracted 47 gates and 86 wires to a netlist network with 39 inputs and 6 outputs.

3.29.163.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.163.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       13
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        3
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:        5
ABC RESULTS:                OR cells:        5
ABC RESULTS:        internal signals:       41
ABC RESULTS:           input signals:       39
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.164. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$174840, asynchronously reset by \reset
Extracted 105 gates and 180 wires to a netlist network with 75 inputs and 8 outputs.

3.29.164.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.164.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       48
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:       23
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       13
ABC RESULTS:        internal signals:       97
ABC RESULTS:           input signals:       75
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.165. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$514583$auto$opt_dff.cc:219:make_patterns_logic$219132, asynchronously reset by \reset
Extracted 39 gates and 65 wires to a netlist network with 24 inputs and 15 outputs.

3.29.165.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.165.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.166. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$219247, asynchronously reset by \reset
Extracted 206 gates and 254 wires to a netlist network with 48 inputs and 92 outputs.

3.29.166.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.166.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       59
ABC RESULTS:               BUF cells:       56
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       56
ABC RESULTS:        internal signals:      114
ABC RESULTS:           input signals:       48
ABC RESULTS:          output signals:       92
Removing temp directory.

3.29.167. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$214654, asynchronously reset by \reset
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 3 outputs.

3.29.167.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.167.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.168. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$214542, asynchronously reset by \reset
Extracted 18 gates and 28 wires to a netlist network with 9 inputs and 15 outputs.

3.29.168.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.168.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.169. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$146797, asynchronously reset by \reset
Extracted 10 gates and 22 wires to a netlist network with 11 inputs and 3 outputs.

3.29.169.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.169.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.170. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$191319, asynchronously reset by \reset
Extracted 36 gates and 71 wires to a netlist network with 35 inputs and 21 outputs.

3.29.170.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.170.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       24
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.171. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$214797, asynchronously reset by \reset
Extracted 102 gates and 168 wires to a netlist network with 65 inputs and 41 outputs.

3.29.171.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.171.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               BUF cells:       35
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       27
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       11
ABC RESULTS:        internal signals:       62
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       41
Removing temp directory.

3.29.172. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$214267, asynchronously reset by \reset
Extracted 51 gates and 76 wires to a netlist network with 24 inputs and 34 outputs.

3.29.172.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.172.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       21
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:       18
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       34
Removing temp directory.

3.29.173. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$158516, asynchronously reset by \reset
Extracted 536 gates and 764 wires to a netlist network with 227 inputs and 130 outputs.

3.29.173.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.173.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       40
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:      158
ABC RESULTS:              NAND cells:       52
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:       32
ABC RESULTS:                OR cells:       32
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:       30
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      407
ABC RESULTS:           input signals:      227
ABC RESULTS:          output signals:      130
Removing temp directory.

3.29.174. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$158412, asynchronously reset by \reset
Extracted 30 gates and 54 wires to a netlist network with 24 inputs and 9 outputs.

3.29.174.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.174.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.175. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$192071, asynchronously reset by \reset
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 21 outputs.

3.29.175.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.175.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       19
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.176. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$233902, asynchronously reset by \reset
Extracted 48 gates and 84 wires to a netlist network with 35 inputs and 36 outputs.

3.29.176.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.176.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       21
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       36
Removing temp directory.

3.29.177. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$239918, asynchronously reset by \reset
Extracted 22 gates and 45 wires to a netlist network with 23 inputs and 18 outputs.

3.29.177.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.177.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.178. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$152796, asynchronously reset by \reset
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 4 outputs.

3.29.178.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.178.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.179. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$152673, asynchronously reset by \reset
Extracted 32 gates and 54 wires to a netlist network with 21 inputs and 13 outputs.

3.29.179.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.179.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       13
Removing temp directory.

3.29.180. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$201031, asynchronously reset by \reset
Extracted 169 gates and 241 wires to a netlist network with 70 inputs and 87 outputs.

3.29.180.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.180.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       40
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       56
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       15
ABC RESULTS:              NAND cells:       13
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        7
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       32
ABC RESULTS:        internal signals:       84
ABC RESULTS:           input signals:       70
ABC RESULTS:          output signals:       87
Removing temp directory.

3.29.181. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$152919, asynchronously reset by \reset
Extracted 18 gates and 31 wires to a netlist network with 12 inputs and 2 outputs.

3.29.181.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.181.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.182. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$185787, asynchronously reset by \reset
Extracted 239 gates and 357 wires to a netlist network with 118 inputs and 130 outputs.

3.29.182.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.182.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       40
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:      127
ABC RESULTS:              NAND cells:       43
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:       17
ABC RESULTS:                OR cells:       10
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      109
ABC RESULTS:           input signals:      118
ABC RESULTS:          output signals:      130
Removing temp directory.

3.29.183. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$152538, asynchronously reset by \reset
Extracted 24 gates and 46 wires to a netlist network with 21 inputs and 10 outputs.

3.29.183.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.183.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       10
Removing temp directory.

3.29.184. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$239166, asynchronously reset by \reset
Extracted 23 gates and 48 wires to a netlist network with 25 inputs and 18 outputs.

3.29.184.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.184.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.185. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$189815, asynchronously reset by \reset
Extracted 30 gates and 61 wires to a netlist network with 31 inputs and 20 outputs.

3.29.185.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.185.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       17
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.186. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$153086, asynchronously reset by \reset
Extracted 247 gates and 388 wires to a netlist network with 139 inputs and 100 outputs.

3.29.186.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.186.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       39
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       31
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       91
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       33
ABC RESULTS:        internal signals:      149
ABC RESULTS:           input signals:      139
ABC RESULTS:          output signals:      100
Removing temp directory.

3.29.187. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$222564, asynchronously reset by \reset
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs.

3.29.187.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.187.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.188. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$222687, asynchronously reset by \reset
Extracted 93 gates and 161 wires to a netlist network with 68 inputs and 6 outputs.

3.29.188.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.188.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       44
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:       20
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       12
ABC RESULTS:        internal signals:       87
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.189. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$171400, asynchronously reset by \reset
Extracted 211 gates and 268 wires to a netlist network with 57 inputs and 90 outputs.

3.29.189.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.189.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       58
ABC RESULTS:               BUF cells:       41
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       19
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       56
ABC RESULTS:        internal signals:      121
ABC RESULTS:           input signals:       57
ABC RESULTS:          output signals:       90
Removing temp directory.

3.29.190. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$146896, asynchronously reset by \reset
Extracted 482 gates and 693 wires to a netlist network with 209 inputs and 69 outputs.

3.29.190.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.190.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      153
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       26
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       74
ABC RESULTS:              NAND cells:      246
ABC RESULTS:               NOR cells:       34
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       68
ABC RESULTS:             ORNOT cells:       11
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       19
ABC RESULTS:              ZERO cells:        2
ABC RESULTS:        internal signals:      415
ABC RESULTS:           input signals:      209
ABC RESULTS:          output signals:       69
Removing temp directory.

3.29.191. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$171285, asynchronously reset by \reset
Extracted 42 gates and 74 wires to a netlist network with 30 inputs and 17 outputs.

3.29.191.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.191.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.192. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$505803, asynchronously reset by \reset
Extracted 14 gates and 25 wires to a netlist network with 11 inputs and 4 outputs.

3.29.192.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.192.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        4
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.193. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$209599, asynchronously reset by \reset
Extracted 225 gates and 310 wires to a netlist network with 84 inputs and 44 outputs.

3.29.193.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.193.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       33
ABC RESULTS:            ANDNOT cells:       20
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:       17
ABC RESULTS:               MUX cells:       65
ABC RESULTS:              NAND cells:       64
ABC RESULTS:               NOR cells:       20
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       11
ABC RESULTS:             ORNOT cells:       18
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:      182
ABC RESULTS:           input signals:       84
ABC RESULTS:          output signals:       44
Removing temp directory.

3.29.194. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$233634, asynchronously reset by \reset
Extracted 288 gates and 420 wires to a netlist network with 132 inputs and 143 outputs.

3.29.194.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.194.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       43
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:      148
ABC RESULTS:              NAND cells:       47
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:       19
ABC RESULTS:                OR cells:       15
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:      145
ABC RESULTS:           input signals:      132
ABC RESULTS:          output signals:      143
Removing temp directory.

3.29.195. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$209792, asynchronously reset by \reset
Extracted 155 gates and 235 wires to a netlist network with 79 inputs and 25 outputs.

3.29.195.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.195.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       42
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:       15
ABC RESULTS:               MUX cells:       12
ABC RESULTS:              NAND cells:       72
ABC RESULTS:               NOR cells:       24
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       16
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:      131
ABC RESULTS:           input signals:       79
ABC RESULTS:          output signals:       25
Removing temp directory.

3.29.196. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$190567, asynchronously reset by \reset
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 18 outputs.

3.29.196.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.196.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       17
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.197. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$195831, asynchronously reset by \reset
Extracted 29 gates and 59 wires to a netlist network with 30 inputs and 19 outputs.

3.29.197.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.197.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       17
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.198. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$196583, asynchronously reset by \reset
Extracted 33 gates and 65 wires to a netlist network with 32 inputs and 21 outputs.

3.29.198.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.198.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       21
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.199. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$197335, asynchronously reset by \reset
Extracted 28 gates and 58 wires to a netlist network with 30 inputs and 18 outputs.

3.29.199.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.199.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.200. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$182079, asynchronously reset by \reset
Extracted 138 gates and 205 wires to a netlist network with 66 inputs and 23 outputs.

3.29.200.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.200.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       25
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       24
ABC RESULTS:               DFF cells:       15
ABC RESULTS:               MUX cells:        6
ABC RESULTS:              NAND cells:       23
ABC RESULTS:               NOR cells:       11
ABC RESULTS:                OR cells:       11
ABC RESULTS:        internal signals:      116
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       23
Removing temp directory.

3.29.201. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$181907, asynchronously reset by \reset
Extracted 48 gates and 86 wires to a netlist network with 37 inputs and 11 outputs.

3.29.201.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.201.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        9
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       38
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.202. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$198147, asynchronously reset by \reset
Extracted 862 gates and 1562 wires to a netlist network with 698 inputs and 437 outputs.

3.29.202.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.202.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      121
ABC RESULTS:            ANDNOT cells:       17
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:      331
ABC RESULTS:              NAND cells:      381
ABC RESULTS:               NOR cells:       14
ABC RESULTS:               NOT cells:       60
ABC RESULTS:               ONE cells:        1
ABC RESULTS:                OR cells:       51
ABC RESULTS:             ORNOT cells:       81
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:      427
ABC RESULTS:           input signals:      698
ABC RESULTS:          output signals:      437
Removing temp directory.

3.29.203. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$198890, asynchronously reset by \reset
Extracted 575 gates and 872 wires to a netlist network with 296 inputs and 243 outputs.

3.29.203.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.203.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       66
ABC RESULTS:            ANDNOT cells:       23
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:      306
ABC RESULTS:              NAND cells:       85
ABC RESULTS:               NOT cells:        9
ABC RESULTS:                OR cells:       54
ABC RESULTS:             ORNOT cells:       36
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:      333
ABC RESULTS:           input signals:      296
ABC RESULTS:          output signals:      243
Removing temp directory.

3.29.204. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$198784, asynchronously reset by \reset
Extracted 584 gates and 907 wires to a netlist network with 322 inputs and 257 outputs.

3.29.204.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.204.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      151
ABC RESULTS:            ANDNOT cells:       74
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:      117
ABC RESULTS:              NAND cells:      409
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:      149
ABC RESULTS:             ORNOT cells:       18
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      328
ABC RESULTS:           input signals:      322
ABC RESULTS:          output signals:      257
Removing temp directory.

3.29.205. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$198952, asynchronously reset by \reset
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.29.205.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.205.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.206. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$198898, asynchronously reset by \reset
Extracted 121 gates and 204 wires to a netlist network with 81 inputs and 47 outputs.

3.29.206.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.206.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       21
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:       33
ABC RESULTS:              NAND cells:       19
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       17
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:        internal signals:       76
ABC RESULTS:           input signals:       81
ABC RESULTS:          output signals:       47
Removing temp directory.

3.29.207. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$199033, asynchronously reset by \reset
Extracted 555 gates and 774 wires to a netlist network with 219 inputs and 167 outputs.

3.29.207.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.207.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      166
ABC RESULTS:            ANDNOT cells:       17
ABC RESULTS:               BUF cells:       30
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       19
ABC RESULTS:              NAND cells:       79
ABC RESULTS:               NOR cells:       11
ABC RESULTS:               NOT cells:       28
ABC RESULTS:                OR cells:       60
ABC RESULTS:              XNOR cells:       61
ABC RESULTS:               XOR cells:       70
ABC RESULTS:        internal signals:      388
ABC RESULTS:           input signals:      219
ABC RESULTS:          output signals:      167
Removing temp directory.

3.29.208. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$198986, asynchronously reset by \reset
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 3 outputs.

3.29.208.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.208.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.209. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$198678, asynchronously reset by \reset
Extracted 685 gates and 1006 wires to a netlist network with 320 inputs and 347 outputs.

3.29.209.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.209.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      245
ABC RESULTS:            ANDNOT cells:       71
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:      229
ABC RESULTS:              NAND cells:      166
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:      253
ABC RESULTS:             ORNOT cells:       31
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      339
ABC RESULTS:           input signals:      320
ABC RESULTS:          output signals:      347
Removing temp directory.

3.29.210. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$198621, asynchronously reset by \reset
Extracted 286 gates and 533 wires to a netlist network with 245 inputs and 146 outputs.

3.29.210.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.210.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       54
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:      102
ABC RESULTS:              NAND cells:       12
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        7
ABC RESULTS:                OR cells:       21
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:              XNOR cells:       31
ABC RESULTS:               XOR cells:       20
ABC RESULTS:        internal signals:      142
ABC RESULTS:           input signals:      245
ABC RESULTS:          output signals:      146
Removing temp directory.

3.29.211. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$200618, asynchronously reset by \reset
Extracted 32 gates and 55 wires to a netlist network with 22 inputs and 12 outputs.

3.29.211.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.211.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.212. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$237662, asynchronously reset by \reset
Extracted 22 gates and 45 wires to a netlist network with 23 inputs and 18 outputs.

3.29.212.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.212.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.213. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$200741, asynchronously reset by \reset
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 5 outputs.

3.29.213.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.213.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.214. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$200864, asynchronously reset by \reset
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 2 outputs.

3.29.214.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.214.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        3
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.215. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$241422, asynchronously reset by \reset
Extracted 27 gates and 54 wires to a netlist network with 27 inputs and 20 outputs.

3.29.215.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.215.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       27
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.216. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$174717, asynchronously reset by \reset
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs.

3.29.216.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.216.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        5
Removing temp directory.

3.29.217. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$192823, asynchronously reset by \reset
Extracted 29 gates and 59 wires to a netlist network with 30 inputs and 19 outputs.

3.29.217.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.217.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       17
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.218. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$143645, asynchronously reset by \reset
Extracted 12 gates and 26 wires to a netlist network with 13 inputs and 3 outputs.

3.29.218.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.218.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       13
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.219. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$143744, asynchronously reset by \reset
Extracted 641 gates and 836 wires to a netlist network with 194 inputs and 180 outputs.

3.29.219.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.219.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      168
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       88
ABC RESULTS:              NAND cells:      298
ABC RESULTS:               NOR cells:       32
ABC RESULTS:               NOT cells:       58
ABC RESULTS:                OR cells:       67
ABC RESULTS:             ORNOT cells:       47
ABC RESULTS:              XNOR cells:       29
ABC RESULTS:               XOR cells:       32
ABC RESULTS:        internal signals:      462
ABC RESULTS:           input signals:      194
ABC RESULTS:          output signals:      180
Removing temp directory.

3.29.220. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$507844, asynchronously reset by \reset
Extracted 472 gates and 554 wires to a netlist network with 82 inputs and 100 outputs.

3.29.220.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.220.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      128
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               BUF cells:       19
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       22
ABC RESULTS:              NAND cells:       67
ABC RESULTS:               NOR cells:       14
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       38
ABC RESULTS:             ORNOT cells:       26
ABC RESULTS:              XNOR cells:       16
ABC RESULTS:               XOR cells:       56
ABC RESULTS:        internal signals:      372
ABC RESULTS:           input signals:       82
ABC RESULTS:          output signals:      100
Removing temp directory.

3.29.221. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$143029, asynchronously reset by \reset
Extracted 430 gates and 583 wires to a netlist network with 152 inputs and 105 outputs.

3.29.221.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.221.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       55
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:       28
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:       15
ABC RESULTS:               NOR cells:       22
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       13
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:       32
ABC RESULTS:               XOR cells:       27
ABC RESULTS:        internal signals:      326
ABC RESULTS:           input signals:      152
ABC RESULTS:          output signals:      105
Removing temp directory.

3.29.222. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$505796, asynchronously reset by \reset
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 6 outputs.

3.29.222.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.222.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        6
Removing temp directory.

3.29.223. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$143041, asynchronously reset by \reset
Extracted 399 gates and 585 wires to a netlist network with 186 inputs and 106 outputs.

3.29.223.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.223.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       91
ABC RESULTS:            ANDNOT cells:       29
ABC RESULTS:               BUF cells:       18
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:       42
ABC RESULTS:              NAND cells:       51
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       45
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:              XNOR cells:       68
ABC RESULTS:               XOR cells:       42
ABC RESULTS:        internal signals:      293
ABC RESULTS:           input signals:      186
ABC RESULTS:          output signals:      106
Removing temp directory.

3.29.224. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$193575, asynchronously reset by \reset
Extracted 34 gates and 69 wires to a netlist network with 35 inputs and 21 outputs.

3.29.224.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.224.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       20
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.225. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$195079, asynchronously reset by \reset
Extracted 33 gates and 66 wires to a netlist network with 33 inputs and 20 outputs.

3.29.225.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.225.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        6
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       21
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.226. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$508433, asynchronously reset by \reset
Extracted 451 gates and 524 wires to a netlist network with 73 inputs and 96 outputs.

3.29.226.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.226.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      131
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               BUF cells:       22
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       13
ABC RESULTS:              NAND cells:       61
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       30
ABC RESULTS:             ORNOT cells:       19
ABC RESULTS:              XNOR cells:       13
ABC RESULTS:               XOR cells:       67
ABC RESULTS:        internal signals:      355
ABC RESULTS:           input signals:       73
ABC RESULTS:          output signals:       96
Removing temp directory.

3.29.227. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$509022, asynchronously reset by \reset
Extracted 469 gates and 550 wires to a netlist network with 81 inputs and 100 outputs.

3.29.227.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.227.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      142
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               BUF cells:       20
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:        8
ABC RESULTS:              NAND cells:       91
ABC RESULTS:               NOR cells:       13
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       19
ABC RESULTS:             ORNOT cells:       16
ABC RESULTS:              XNOR cells:       17
ABC RESULTS:               XOR cells:       63
ABC RESULTS:        internal signals:      369
ABC RESULTS:           input signals:       81
ABC RESULTS:          output signals:      100
Removing temp directory.

3.29.228. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$194327, asynchronously reset by \reset
Extracted 28 gates and 58 wires to a netlist network with 30 inputs and 18 outputs.

3.29.228.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.228.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.229. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$427677, asynchronously reset by \reset
Extracted 29 gates and 58 wires to a netlist network with 29 inputs and 19 outputs.

3.29.229.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.229.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.230. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$426173, asynchronously reset by \reset
Extracted 21 gates and 43 wires to a netlist network with 22 inputs and 15 outputs.

3.29.230.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.230.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.231. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$426925, asynchronously reset by \reset
Extracted 31 gates and 59 wires to a netlist network with 28 inputs and 23 outputs.

3.29.231.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.231.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       18
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       23
Removing temp directory.

3.29.232. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$429933, asynchronously reset by \reset
Extracted 27 gates and 52 wires to a netlist network with 25 inputs and 20 outputs.

3.29.232.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.232.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.233. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$430685, asynchronously reset by \reset
Extracted 23 gates and 45 wires to a netlist network with 22 inputs and 17 outputs.

3.29.233.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.233.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.234. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$428429, asynchronously reset by \reset
Extracted 23 gates and 45 wires to a netlist network with 22 inputs and 17 outputs.

3.29.234.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.234.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.235. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$429181, asynchronously reset by \reset
Extracted 22 gates and 45 wires to a netlist network with 23 inputs and 16 outputs.

3.29.235.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.235.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.236. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$420693, asynchronously reset by \reset
Extracted 139 gates and 205 wires to a netlist network with 65 inputs and 17 outputs.

3.29.236.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.236.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       23
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               BUF cells:       19
ABC RESULTS:               DFF cells:       15
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:       27
ABC RESULTS:               NOR cells:       11
ABC RESULTS:                OR cells:       11
ABC RESULTS:        internal signals:      123
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.237. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$424669, asynchronously reset by \reset
Extracted 49 gates and 84 wires to a netlist network with 34 inputs and 40 outputs.

3.29.237.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.237.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       40
Removing temp directory.

3.29.238. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$424401, asynchronously reset by \reset
Extracted 276 gates and 400 wires to a netlist network with 124 inputs and 141 outputs.

3.29.238.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.238.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       42
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        4
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:      148
ABC RESULTS:              NAND cells:       45
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:       19
ABC RESULTS:                OR cells:       10
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:              XNOR cells:        9
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:      135
ABC RESULTS:           input signals:      124
ABC RESULTS:          output signals:      141
Removing temp directory.

3.29.239. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$425421, asynchronously reset by \reset
Extracted 21 gates and 42 wires to a netlist network with 21 inputs and 15 outputs.

3.29.239.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.239.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.240. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$423170, asynchronously reset by \reset
Extracted 99 gates and 148 wires to a netlist network with 48 inputs and 51 outputs.

3.29.240.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.240.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:       24
ABC RESULTS:               DFF cells:       16
ABC RESULTS:               MUX cells:       18
ABC RESULTS:              NAND cells:       20
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:       15
ABC RESULTS:                OR cells:        8
ABC RESULTS:        internal signals:       49
ABC RESULTS:           input signals:       48
ABC RESULTS:          output signals:       51
Removing temp directory.

3.29.241. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$420521, asynchronously reset by \reset
Extracted 43 gates and 74 wires to a netlist network with 30 inputs and 12 outputs.

3.29.241.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.241.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        9
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        4
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.242. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$413454, asynchronously reset by \reset
Extracted 98 gates and 174 wires to a netlist network with 75 inputs and 8 outputs.

3.29.242.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.242.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       46
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        4
ABC RESULTS:              NAND cells:       20
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       12
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       91
ABC RESULTS:           input signals:       75
ABC RESULTS:          output signals:        8
Removing temp directory.

3.29.243. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$413331, asynchronously reset by \reset
Extracted 19 gates and 34 wires to a netlist network with 15 inputs and 9 outputs.

3.29.243.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.243.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:        9
Removing temp directory.

3.29.244. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$437541, asynchronously reset by \reset
Extracted 50 gates and 95 wires to a netlist network with 45 inputs and 25 outputs.

3.29.244.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.244.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       23
ABC RESULTS:               DFF cells:       19
ABC RESULTS:               MUX cells:       15
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:        internal signals:       25
ABC RESULTS:           input signals:       45
ABC RESULTS:          output signals:       25
Removing temp directory.

3.29.245. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$437494, asynchronously reset by \reset
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.29.245.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.245.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.246. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$437460, asynchronously reset by \reset
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

3.29.246.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.246.2. Re-integrating ABC results.
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.247. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$437406, asynchronously reset by \reset
Extracted 106 gates and 162 wires to a netlist network with 54 inputs and 37 outputs.

3.29.247.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.247.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       20
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:       19
ABC RESULTS:              NAND cells:       24
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       15
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:        internal signals:       71
ABC RESULTS:           input signals:       54
ABC RESULTS:          output signals:       37
Removing temp directory.

3.29.248. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$437235, asynchronously reset by \reset
Extracted 344 gates and 629 wires to a netlist network with 283 inputs and 153 outputs.

3.29.248.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.248.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       77
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:       80
ABC RESULTS:              NAND cells:       70
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:       28
ABC RESULTS:                OR cells:       90
ABC RESULTS:             ORNOT cells:       34
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       24
ABC RESULTS:        internal signals:      193
ABC RESULTS:           input signals:      283
ABC RESULTS:          output signals:      153
Removing temp directory.

3.29.249. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$436761, asynchronously reset by \reset
Extracted 850 gates and 1518 wires to a netlist network with 666 inputs and 320 outputs.

3.29.249.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.249.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      234
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:      126
ABC RESULTS:              NAND cells:      725
ABC RESULTS:               NOR cells:       17
ABC RESULTS:               NOT cells:       51
ABC RESULTS:                OR cells:       61
ABC RESULTS:             ORNOT cells:       78
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:      532
ABC RESULTS:           input signals:      666
ABC RESULTS:          output signals:      320
Removing temp directory.

3.29.250. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$432189, asynchronously reset by \reset
Extracted 29 gates and 58 wires to a netlist network with 29 inputs and 19 outputs.

3.29.250.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.250.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.251. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$432941, asynchronously reset by \reset
Extracted 29 gates and 58 wires to a netlist network with 29 inputs and 20 outputs.

3.29.251.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.251.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.252. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$431437, asynchronously reset by \reset
Extracted 29 gates and 58 wires to a netlist network with 29 inputs and 20 outputs.

3.29.252.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.252.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       13
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.253. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$435197, asynchronously reset by \reset
Extracted 27 gates and 54 wires to a netlist network with 27 inputs and 17 outputs.

3.29.253.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.253.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       27
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.254. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$435949, asynchronously reset by \reset
Extracted 21 gates and 43 wires to a netlist network with 22 inputs and 16 outputs.

3.29.254.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.254.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        8
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       16
Removing temp directory.

3.29.255. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$433693, asynchronously reset by \reset
Extracted 24 gates and 47 wires to a netlist network with 23 inputs and 18 outputs.

3.29.255.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.255.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       14
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.256. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$434445, asynchronously reset by \reset
Extracted 26 gates and 51 wires to a netlist network with 25 inputs and 19 outputs.

3.29.256.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.256.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       13
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.257. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$387456, asynchronously reset by \reset
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 20 outputs.

3.29.257.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.257.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       20
Removing temp directory.

3.29.258. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$385952, asynchronously reset by \reset
Extracted 27 gates and 56 wires to a netlist network with 29 inputs and 18 outputs.

3.29.258.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.258.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.259. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$386704, asynchronously reset by \reset
Extracted 26 gates and 54 wires to a netlist network with 28 inputs and 18 outputs.

3.29.259.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.259.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       11
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       18
Removing temp directory.

3.29.260. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$389800, asynchronously reset by \reset
Extracted 122 gates and 190 wires to a netlist network with 68 inputs and 63 outputs.

3.29.260.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.260.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       17
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       32
ABC RESULTS:               NOT cells:       28
ABC RESULTS:                OR cells:       13
ABC RESULTS:        internal signals:       59
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       63
Removing temp directory.

3.29.261. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$389665, asynchronously reset by \reset
Extracted 89 gates and 119 wires to a netlist network with 28 inputs and 24 outputs.

3.29.261.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.261.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:       23
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:       14
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:        internal signals:       67
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       24
Removing temp directory.

3.29.262. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$389719, asynchronously reset by \reset
Extracted 6 gates and 14 wires to a netlist network with 7 inputs and 4 outputs.

3.29.262.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.262.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        4
Removing temp directory.

3.29.263. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$389753, asynchronously reset by \reset
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.29.263.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.263.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.264. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$389494, asynchronously reset by \reset
Extracted 340 gates and 620 wires to a netlist network with 278 inputs and 149 outputs.

3.29.264.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.264.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       76
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:       76
ABC RESULTS:              NAND cells:       74
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:       29
ABC RESULTS:                OR cells:       80
ABC RESULTS:             ORNOT cells:       34
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       23
ABC RESULTS:        internal signals:      193
ABC RESULTS:           input signals:      278
ABC RESULTS:          output signals:      149
Removing temp directory.

3.29.265. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$389551, asynchronously reset by \reset
Extracted 256 gates and 698 wires to a netlist network with 441 inputs and 231 outputs.

3.29.265.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.265.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:      222
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:      441
ABC RESULTS:          output signals:      231
Removing temp directory.

3.29.266. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$388208, asynchronously reset by \reset
Extracted 24 gates and 50 wires to a netlist network with 26 inputs and 17 outputs.

3.29.266.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.266.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.267. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$389020, asynchronously reset by \reset
Extracted 770 gates and 1464 wires to a netlist network with 692 inputs and 334 outputs.

3.29.267.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.267.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      152
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               BUF cells:        3
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:      205
ABC RESULTS:              NAND cells:      444
ABC RESULTS:               NOR cells:       13
ABC RESULTS:               NOT cells:       54
ABC RESULTS:                OR cells:       64
ABC RESULTS:             ORNOT cells:       81
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      438
ABC RESULTS:           input signals:      692
ABC RESULTS:          output signals:      334
Removing temp directory.

3.29.268. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$382192, asynchronously reset by \reset
Extracted 27 gates and 56 wires to a netlist network with 29 inputs and 17 outputs.

3.29.268.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.268.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.269. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$380688, asynchronously reset by \reset
Extracted 30 gates and 61 wires to a netlist network with 31 inputs and 19 outputs.

3.29.269.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.269.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       18
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.270. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$381440, asynchronously reset by \reset
Extracted 23 gates and 48 wires to a netlist network with 25 inputs and 17 outputs.

3.29.270.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.270.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.271. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$384448, asynchronously reset by \reset
Extracted 27 gates and 56 wires to a netlist network with 29 inputs and 17 outputs.

3.29.271.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.271.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.272. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$385200, asynchronously reset by \reset
Extracted 23 gates and 48 wires to a netlist network with 25 inputs and 17 outputs.

3.29.272.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.272.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       11
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.273. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$382944, asynchronously reset by \reset
Extracted 31 gates and 63 wires to a netlist network with 32 inputs and 19 outputs.

3.29.273.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.273.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        7
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       19
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.274. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$383696, asynchronously reset by \reset
Extracted 26 gates and 54 wires to a netlist network with 28 inputs and 17 outputs.

3.29.274.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.274.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       14
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.275. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$376928, asynchronously reset by \reset
Extracted 49 gates and 80 wires to a netlist network with 30 inputs and 36 outputs.

3.29.275.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.275.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       16
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       36
Removing temp directory.

3.29.276. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$376660, asynchronously reset by \reset
Extracted 220 gates and 327 wires to a netlist network with 107 inputs and 114 outputs.

3.29.276.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.276.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       37
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               MUX cells:       92
ABC RESULTS:              NAND cells:       49
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:       16
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:      106
ABC RESULTS:           input signals:      107
ABC RESULTS:          output signals:      114
Removing temp directory.

3.29.277. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$375429, asynchronously reset by \reset
Extracted 102 gates and 144 wires to a netlist network with 41 inputs and 35 outputs.

3.29.277.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.277.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       10
ABC RESULTS:               DFF cells:       14
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:       39
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:       14
ABC RESULTS:                OR cells:       15
ABC RESULTS:        internal signals:       68
ABC RESULTS:           input signals:       41
ABC RESULTS:          output signals:       35
Removing temp directory.

3.29.278. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$379184, asynchronously reset by \reset
Extracted 21 gates and 44 wires to a netlist network with 23 inputs and 17 outputs.

3.29.278.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.278.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:       15
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:        9
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.279. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$379936, asynchronously reset by \reset
Extracted 27 gates and 56 wires to a netlist network with 29 inputs and 17 outputs.

3.29.279.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.279.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.280. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$377680, asynchronously reset by \reset
Extracted 30 gates and 61 wires to a netlist network with 31 inputs and 19 outputs.

3.29.280.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.280.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        8
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       18
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       19
Removing temp directory.

3.29.281. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$378432, asynchronously reset by \reset
Extracted 27 gates and 56 wires to a netlist network with 29 inputs and 17 outputs.

3.29.281.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.281.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:        9
ABC RESULTS:               DFF cells:        8
ABC RESULTS:               MUX cells:       15
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       17
Removing temp directory.

3.29.282. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$372952, asynchronously reset by \reset
Extracted 134 gates and 196 wires to a netlist network with 61 inputs and 3 outputs.

3.29.282.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.282.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       25
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        6
ABC RESULTS:              NAND cells:       16
ABC RESULTS:               NOR cells:        8
ABC RESULTS:                OR cells:       20
ABC RESULTS:        internal signals:      132
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.283. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$372780, asynchronously reset by \reset
Extracted 46 gates and 79 wires to a netlist network with 32 inputs and 11 outputs.

3.29.283.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.283.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       13
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:        7
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       36
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.284. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$410014, asynchronously reset by \reset
Extracted 213 gates and 272 wires to a netlist network with 59 inputs and 91 outputs.

3.29.284.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.284.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       59
ABC RESULTS:               BUF cells:       41
ABC RESULTS:               DFF cells:       30
ABC RESULTS:               MUX cells:       20
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       56
ABC RESULTS:        internal signals:      122
ABC RESULTS:           input signals:       59
ABC RESULTS:          output signals:       91
Removing temp directory.

3.29.285. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$550016$auto$opt_dff.cc:219:make_patterns_logic$409899, asynchronously reset by \reset
Extracted 48 gates and 83 wires to a netlist network with 33 inputs and 21 outputs.

3.29.285.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.285.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       11
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:       29
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       21
Removing temp directory.

3.29.286. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$405034, asynchronously reset by \reset
Extracted 54 gates and 78 wires to a netlist network with 23 inputs and 35 outputs.

3.29.286.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.286.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               DFF cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:       35
Removing temp directory.

3.29.287. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$405564, asynchronously reset by \reset
Extracted 89 gates and 153 wires to a netlist network with 63 inputs and 32 outputs.

3.29.287.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.287.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       31
ABC RESULTS:               DFF cells:       29
ABC RESULTS:               MUX cells:       27
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:       58
ABC RESULTS:           input signals:       63
ABC RESULTS:          output signals:       32
Removing temp directory.

3.29.288. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$405309, asynchronously reset by \reset
Extracted 15 gates and 25 wires to a netlist network with 9 inputs and 12 outputs.

3.29.288.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.288.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       12
Removing temp directory.

3.29.289. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$405421, asynchronously reset by \reset
Extracted 10 gates and 19 wires to a netlist network with 9 inputs and 3 outputs.

3.29.289.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.289.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        3
Removing temp directory.

3.29.290. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$397124, asynchronously reset by \reset
Extracted 46 gates and 81 wires to a netlist network with 34 inputs and 15 outputs.

3.29.290.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.290.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       14
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        9
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       15
Removing temp directory.

3.29.291. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$397228, asynchronously reset by \reset
Extracted 504 gates and 726 wires to a netlist network with 221 inputs and 152 outputs.

3.29.291.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.291.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       40
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               BUF cells:       29
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               MUX cells:      158
ABC RESULTS:              NAND cells:       50
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:       30
ABC RESULTS:                OR cells:       29
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:       30
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:      353
ABC RESULTS:           input signals:      221
ABC RESULTS:          output signals:      152
Removing temp directory.

3.29.292. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$400559, asynchronously reset by \reset
Extracted 98 gates and 150 wires to a netlist network with 52 inputs and 32 outputs.

3.29.292.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.292.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       24
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       12
ABC RESULTS:               DFF cells:       15
ABC RESULTS:               MUX cells:       15
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        4
ABC RESULTS:                OR cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       17
ABC RESULTS:        internal signals:       66
ABC RESULTS:           input signals:       52
ABC RESULTS:          output signals:       32
Removing temp directory.

3.29.293. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$400366, asynchronously reset by \reset
Extracted 216 gates and 295 wires to a netlist network with 78 inputs and 45 outputs.

3.29.293.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.293.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       42
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               BUF cells:       13
ABC RESULTS:               DFF cells:       17
ABC RESULTS:               MUX cells:       46
ABC RESULTS:              NAND cells:       66
ABC RESULTS:               NOR cells:       25
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       24
ABC RESULTS:             ORNOT cells:       17
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:      172
ABC RESULTS:           input signals:       78
ABC RESULTS:          output signals:       45
Removing temp directory.

3.29.294. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$391798, asynchronously reset by \reset
Extracted 176 gates and 272 wires to a netlist network with 94 inputs and 85 outputs.

3.29.294.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.294.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       35
ABC RESULTS:               BUF cells:       57
ABC RESULTS:               DFF cells:       31
ABC RESULTS:               MUX cells:       46
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       31
ABC RESULTS:        internal signals:       93
ABC RESULTS:           input signals:       94
ABC RESULTS:          output signals:       85
Removing temp directory.

3.29.295. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$391631, asynchronously reset by \reset
Extracted 13 gates and 22 wires to a netlist network with 9 inputs and 2 outputs.

3.29.295.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.295.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        2
Removing temp directory.

3.29.296. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$391385, asynchronously reset by \reset
Extracted 29 gates and 50 wires to a netlist network with 20 inputs and 11 outputs.

3.29.296.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.296.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        5
ABC RESULTS:        internal signals:       19
ABC RESULTS:           input signals:       20
ABC RESULTS:          output signals:       11
Removing temp directory.

3.29.297. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$391508, asynchronously reset by \reset
Extracted 19 gates and 31 wires to a netlist network with 11 inputs and 7 outputs.

3.29.297.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.29.297.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               DFF cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        7
Removing temp directory.

yosys> abc -script abc_tmp.scr

3.30. Executing ABC pass (technology mapping using ABC).

3.30.1. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Extracted 39369 gates and 43766 wires to a netlist network with 4395 inputs and 4575 outputs.

3.30.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/b18/abc_tmp.scr 
ABC:   #Luts = 14021  Max Lvl =  36  Avg Lvl =   8.64  [   2.18 sec. at Pass 0]
ABC:   #Luts = 11897  Max Lvl =  36  Avg Lvl =   6.43  [ 100.70 sec. at Pass 1]
ABC:   #Luts = 11611  Max Lvl =  28  Avg Lvl =   5.98  [  19.67 sec. at Pass 2]
ABC:   #Luts = 11495  Max Lvl =  31  Avg Lvl =   6.02  [  29.17 sec. at Pass 3]
ABC:   #Luts = 11437  Max Lvl =  28  Avg Lvl =   5.84  [  18.11 sec. at Pass 4]
ABC:   #Luts = 11335  Max Lvl =  33  Avg Lvl =   5.94  [  36.85 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.30.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:    11333
ABC RESULTS:        internal signals:    34796
ABC RESULTS:           input signals:     4395
ABC RESULTS:          output signals:     4575
Removing temp directory.

yosys> opt

3.31. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

yosys> opt_merge -nomux

3.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 159 unused cells and 82084 unused wires.
<suppressed ~269 debug messages>

yosys> opt_expr

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.31.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff

3.31.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> opt_expr

3.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.31.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.32. Printing statistics.

=== b18 ===

   Number of wires:              11486
   Number of wire bits:          21614
   Number of public wires:         362
   Number of public wire bits:    4461
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              15627
     $_DFFE_PP0P_                 2695
     $_DFF_PP0_                     42
     $lut                        11149
     $mux                           19
     adder_carry                  1722


yosys> shregmap -minlen 8 -maxlen 20

3.33. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.35. Printing statistics.

=== b18 ===

   Number of wires:              11486
   Number of wire bits:          21614
   Number of public wires:         362
   Number of public wire bits:    4461
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              15627
     $_DFFE_PP0P_                 2695
     $_DFF_PP0_                     42
     $lut                        11149
     $mux                           19
     adder_carry                  1722


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~16778 debug messages>

yosys> opt_expr -mux_undef

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~259549 debug messages>

yosys> simplemap

3.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~121776 debug messages>
Removed a total of 40592 cells.

yosys> opt_dff -nodffe -nosdff

3.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 40573 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.43. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.
<suppressed ~8849 debug messages>

yosys> opt_merge -nomux

3.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~1335 debug messages>
Removed a total of 445 cells.

yosys> opt_muxtree

3.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 2252 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.43.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.43.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.43.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.43.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.43.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> opt_expr

3.43.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.43.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script abc_tmp.scr

3.44. Executing ABC pass (technology mapping using ABC).

3.44.1. Extracting gate netlist of module `\b18' to `<abc-temp-dir>/input.blif'..
Extracted 43734 gates and 48056 wires to a netlist network with 4320 inputs and 4354 outputs.

3.44.1.1. Executing ABC.
Running ABC command: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/build/logic_synthesis-rs/bin/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/clean_repo/yosys_verific_rs/result_20-04-2022T11-33-54/All_lut_synth_rs_ade.json/b18/abc_tmp.scr 
ABC:   #Luts = 11163  Max Lvl =  34  Avg Lvl =   6.32  [   2.38 sec. at Pass 0]
ABC:   #Luts = 11138  Max Lvl =  32  Avg Lvl =   6.35  [ 114.69 sec. at Pass 1]
ABC:   #Luts = 10866  Max Lvl =  25  Avg Lvl =   5.99  [  16.32 sec. at Pass 2]
ABC:   #Luts = 10843  Max Lvl =  27  Avg Lvl =   5.96  [  29.59 sec. at Pass 3]
ABC:   #Luts = 10805  Max Lvl =  30  Avg Lvl =   5.94  [  17.41 sec. at Pass 4]
ABC:   #Luts = 10764  Max Lvl =  27  Avg Lvl =   5.99  [  36.78 sec. at Pass 5]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:    10764
ABC RESULTS:        internal signals:    39382
ABC RESULTS:           input signals:     4320
ABC RESULTS:          output signals:     4354
Removing temp directory.

yosys> opt

3.45. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

yosys> opt_merge -nomux

3.45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 38399 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.45.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.45.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b18..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.45.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b18.
Performed a total of 0 changes.

yosys> opt_merge

3.45.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b18'.
Removed a total of 0 cells.

yosys> opt_dff

3.45.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..

yosys> opt_expr

3.45.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b18.

3.45.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \b18

3.46.2. Analyzing design hierarchy..
Top module:  \b18
Removed 0 unused modules.

yosys> stat

3.47. Printing statistics.

=== b18 ===

   Number of wires:              11084
   Number of wire bits:          21212
   Number of public wires:         362
   Number of public wire bits:    4461
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              15222
     $lut                        10763
     adder_carry                  1722
     dffsre                       2737


yosys> opt_clean -purge

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b18..
Removed 0 unused cells and 129 unused wires.
<suppressed ~129 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.49. Executing Verilog backend.

yosys> bmuxmap

3.49.1. Executing BMUXMAP pass.

yosys> demuxmap

3.49.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b18'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: dd3fbc51a0, CPU: user 658.67s system 11.28s, MEM: 712.59 MB peak
Yosys 0.16+6 (git sha1 0c82fb7e3, gcc 9.1.0 -fPIC -Os)
Time spent: 78% 3x abc (2185 sec), 12% 43x opt_dff (351 sec), ...
real 1179.54
user 2660.36
sys 129.67
