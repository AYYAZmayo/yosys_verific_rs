
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.140
 Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_cfb.v gost89_sbox.v gost89_ecb_encrypt.v gost89_round.v

yosys> verific -vlog2k gost89_cfb.v gost89_sbox.v gost89_ecb_encrypt.v gost89_round.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_cfb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_ecb_encrypt.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'

yosys> synth_rs -top gost89_cfb -tech genesis2 -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.116

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis2/cells_sim.v +/rapidsilicon/genesis2/dsp_sim.v +/rapidsilicon/genesis2/brams_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\sdff'.
Generating RTLIL representation for module `\sdffn'.
Generating RTLIL representation for module `\dffr'.
Generating RTLIL representation for module `\dffnr'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffne'.
Generating RTLIL representation for module `\sdffre'.
Generating RTLIL representation for module `\sdffnre'.
Generating RTLIL representation for module `\dffre'.
Generating RTLIL representation for module `\dffnre'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\fa_1bit'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_cfb

3.5. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_cfb.v:1: compiling module 'gost89_cfb'
VERIFIC-INFO [VERI-1018] gost89_ecb_encrypt.v:1: compiling module 'gost89_ecb_encrypt'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_ecb_encrypt.v:33: expression size 7 truncated to fit in target size 6
Importing module gost89_cfb.
Importing module gost89_ecb_encrypt.
Importing module gost89_round.
Importing module gost89_sbox.

3.5.1. Analyzing design hierarchy..
Top module:  \gost89_cfb
Used module:     \gost89_ecb_encrypt
Used module:         \gost89_round
Used module:             \gost89_sbox

3.5.2. Analyzing design hierarchy..
Top module:  \gost89_cfb
Used module:     \gost89_ecb_encrypt
Used module:         \gost89_round
Used module:             \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.6. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.6.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.6.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.6.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_ecb_encrypt.
<suppressed ~3 debug messages>
Optimizing module gost89_cfb.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_ecb_encrypt.
Deleting now unused module gost89_round.
Deleting now unused module gost89_sbox.
<suppressed ~10 debug messages>

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 2337 unused wires.
<suppressed ~28 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module gost89_cfb...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
    New ctrl vector for $pmux cell $flatten\ecb_encrypt.$verific$select_114$gost89_ecb_encrypt.v:80$1814: { $auto$opt_reduce.cc:134:opt_pmux$2436 $auto$opt_reduce.cc:134:opt_pmux$2434 $auto$opt_reduce.cc:134:opt_pmux$2432 $auto$opt_reduce.cc:134:opt_pmux$2430 $auto$opt_reduce.cc:134:opt_pmux$2428 $auto$opt_reduce.cc:134:opt_pmux$2426 $auto$opt_reduce.cc:134:opt_pmux$2424 $auto$opt_reduce.cc:134:opt_pmux$2422 $flatten\ecb_encrypt.$verific$n1897$1007 }
  Optimizing cells in module \gost89_cfb.
Performed a total of 1 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$out_reg$gost89_cfb.v:40$956 ($aldff) from module gost89_cfb.
Removing never-active async load on $verific$in_value_reg$gost89_cfb.v:40$955 ($aldff) from module gost89_cfb.
Removing never-active async load on $verific$gamma_reg$gost89_cfb.v:40$953 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$round_num_reg$gost89_ecb_encrypt.v:44$1777 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$round_key_reg$gost89_ecb_encrypt.v:80$1815 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$out_reg$gost89_ecb_encrypt.v:44$1778 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$n2_reg$gost89_ecb_encrypt.v:44$1775 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$n1_reg$gost89_ecb_encrypt.v:44$1774 ($aldff) from module gost89_cfb.

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~6 debug messages>

yosys> opt_muxtree

3.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.27. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.28. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_muxtree

3.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.34. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.35. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 3

yosys> fsm -encoding binary

3.38. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.38.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.38.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.38.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> fsm_opt

3.38.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.38.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.38.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.38.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.41. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.42. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.44. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.45. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$out_reg$gost89_cfb.v:40$956 ($dff) from module gost89_cfb (D = $verific$n413$21, Q = \out).
Adding EN signal on $verific$in_value_reg$gost89_cfb.v:40$955 ($dff) from module gost89_cfb (D = \in, Q = \in_value).
Adding EN signal on $verific$gamma_reg$gost89_cfb.v:40$953 ($dff) from module gost89_cfb (D = $verific$n739$25, Q = \gamma).
Adding SRST signal on $verific$busy_reg$gost89_cfb.v:40$954 ($dff) from module gost89_cfb (D = $verific$n341$11, Q = \busy, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2442 ($sdff) from module gost89_cfb (D = $verific$n341$11, Q = \busy).
Adding EN signal on $flatten\ecb_encrypt.$verific$round_key_reg$gost89_ecb_encrypt.v:80$1815 ($dff) from module gost89_cfb (D = $flatten\ecb_encrypt.$verific$n1898$1062, Q = \ecb_encrypt.round_key).
Adding EN signal on $flatten\ecb_encrypt.$verific$out_reg$gost89_ecb_encrypt.v:44$1778 ($dff) from module gost89_cfb (D = { \ecb_encrypt.n1 \ecb_encrypt.out1 }, Q = \ecb_encrypt.out).

yosys> opt_clean

3.46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~6 debug messages>

yosys> opt_muxtree

3.48. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.49. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.51. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.52. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.54. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 2

yosys> wreduce -keepdc

3.55. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 bits (of 6) from port A of cell gost89_cfb.$flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1759 ($lt).
Removed top 5 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756 ($add).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_100$gost89_ecb_encrypt.v:67$1798 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_101$gost89_ecb_encrypt.v:68$1799 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_102$gost89_ecb_encrypt.v:69$1800 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_103$gost89_ecb_encrypt.v:70$1801 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_104$gost89_ecb_encrypt.v:71$1802 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_105$gost89_ecb_encrypt.v:72$1803 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_106$gost89_ecb_encrypt.v:73$1804 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_107$gost89_ecb_encrypt.v:74$1805 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_108$gost89_ecb_encrypt.v:75$1806 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_109$gost89_ecb_encrypt.v:76$1807 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_110$gost89_ecb_encrypt.v:77$1808 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_111$gost89_ecb_encrypt.v:78$1809 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_112$gost89_ecb_encrypt.v:79$1810 ($eq).
Removed top 5 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_82$gost89_ecb_encrypt.v:49$1780 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_83$gost89_ecb_encrypt.v:50$1781 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_84$gost89_ecb_encrypt.v:51$1782 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_85$gost89_ecb_encrypt.v:52$1783 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_86$gost89_ecb_encrypt.v:53$1784 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_87$gost89_ecb_encrypt.v:54$1785 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_88$gost89_ecb_encrypt.v:55$1786 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_89$gost89_ecb_encrypt.v:56$1787 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_90$gost89_ecb_encrypt.v:57$1788 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_91$gost89_ecb_encrypt.v:58$1789 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_92$gost89_ecb_encrypt.v:59$1790 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_93$gost89_ecb_encrypt.v:60$1791 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_94$gost89_ecb_encrypt.v:61$1792 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_95$gost89_ecb_encrypt.v:62$1793 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_96$gost89_ecb_encrypt.v:63$1794 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_97$gost89_ecb_encrypt.v:64$1795 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_98$gost89_ecb_encrypt.v:65$1796 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_99$gost89_ecb_encrypt.v:66$1797 ($eq).

yosys> peepopt

3.56. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> demuxmap

3.58. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.59. Printing statistics.

=== gost89_cfb ===

   Number of wires:                139
   Number of wire bits:           4041
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 98
     $add                            2
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            32
     $logic_not                      1
     $lt                             2
     $mux                           17
     $not                            5
     $pmux                           1
     $reduce_and                     1
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> wreduce t:$mul

3.60. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc -genesis2 -max_dsp 154

3.61. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp_check_maxwidth.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18 a:valid_map

3.62. Executing TECHMAP pass (map to technology primitives).

3.62.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.62.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> stat

3.63. Printing statistics.

=== gost89_cfb ===

   Number of wires:                139
   Number of wire bits:           4041
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 98
     $add                            2
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            32
     $logic_not                      1
     $lt                             2
     $mux                           17
     $not                            5
     $pmux                           1
     $reduce_and                     1
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis2/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.64. Executing TECHMAP pass (map to technology primitives).

3.64.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

3.64.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/dsp_final_map.v

3.65. Executing TECHMAP pass (map to technology primitives).

3.65.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

3.65.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> rs-pack-dsp-regs

3.66. Executing rs_pack_dsp_regs pass.

yosys> rs_dsp_io_regs

3.67. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.68. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_cfb:
  creating $macc model for $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756 ($add).
  creating $macc model for $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1822 ($add).
  creating $alu model for $macc $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1822.
  creating $alu model for $macc $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756.
  creating $alu model for $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1755 ($lt): new $alu
  creating $alu model for $flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1759 ($lt): new $alu
  creating $alu model for $flatten\ecb_encrypt.$verific$equal_32$gost89_ecb_encrypt.v:38$1765 ($eq): merged with $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1755.
  creating $alu cell for $flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1759: $auto$alumacc.cc:485:replace_alu$2456
  creating $alu cell for $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1755, $flatten\ecb_encrypt.$verific$equal_32$gost89_ecb_encrypt.v:38$1765: $auto$alumacc.cc:485:replace_alu$2461
  creating $alu cell for $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756: $auto$alumacc.cc:485:replace_alu$2472
  creating $alu cell for $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1822: $auto$alumacc.cc:485:replace_alu$2475
  created 4 $alu and 0 $macc cells.

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.70. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$2453: { $auto$rtlil.cc:2369:Not$2451 $auto$alumacc.cc:501:replace_alu$2462 }
  Optimizing cells in module \gost89_cfb.
Performed a total of 1 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 1

yosys> stat

3.78. Printing statistics.

=== gost89_cfb ===

   Number of wires:                151
   Number of wire bits:           4155
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                102
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                           17
     $not                            8
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> memory -nomap

3.79. Executing MEMORY pass.

yosys> opt_mem

3.79.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.79.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.79.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.79.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.79.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.79.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> memory_share

3.79.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.79.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.79.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> memory_collect

3.79.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.80. Printing statistics.

=== gost89_cfb ===

   Number of wires:                151
   Number of wire bits:           4155
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                102
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                           17
     $not                            8
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> muxpack

3.81. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~18 debug messages>

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new_swap.txt -limit 150 a:read_swapped

3.83. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new.txt -limit 150

3.84. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> rs_bram_split -new_mapping

3.85. Executing Rs_BRAM_Split pass.

yosys> techmap -autoproc -map +/rapidsilicon/genesis2/brams_map_new.v

3.86. Executing TECHMAP pass (map to technology primitives).

3.86.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.86.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/brams_final_map_new.v

3.87. Executing TECHMAP pass (map to technology primitives).

3.87.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.87.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> pmuxtree

3.88. Executing PMUXTREE pass.

yosys> muxpack

3.89. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting gost89_cfb.$auto$pmuxtree.cc:65:recursive_mux_generator$2510 ... gost89_cfb.$auto$pmuxtree.cc:65:recursive_mux_generator$2512 to a pmux with 2 cases.
Converting gost89_cfb.$auto$pmuxtree.cc:65:recursive_mux_generator$2500 ... gost89_cfb.$auto$pmuxtree.cc:65:recursive_mux_generator$2502 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~26 debug messages>

yosys> memory_map

3.90. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.91. Printing statistics.

=== gost89_cfb ===

   Number of wires:                165
   Number of wire bits:           4448
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                113
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                           22
     $not                            9
     $or                             3
     $pmux                           2
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                     11
     $sdffe                          1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/arith_map.v

3.92. Executing TECHMAP pass (map to technology primitives).

3.92.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.92.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.92.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
No more expansions possible.
<suppressed ~692 debug messages>

yosys> stat

3.93. Printing statistics.

=== gost89_cfb ===

   Number of wires:                737
   Number of wire bits:          10389
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2515
     $_AND_                        193
     $_DFFE_PP_                    288
     $_DFF_P_                       71
     $_MUX_                       1163
     $_NOT_                         91
     $_OR_                         321
     $_SDFFE_PP0P_                   1
     $_XOR_                        355
     fa_1bit                        32


yosys> opt_expr

3.94. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~345 debug messages>

yosys> opt_merge -nomux

3.95. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~645 debug messages>
Removed a total of 215 cells.

yosys> opt_muxtree

3.96. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.97. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.98. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.99. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.100. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 50 unused cells and 564 unused wires.
<suppressed ~51 debug messages>

yosys> opt_expr

3.102. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_muxtree

3.103. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.104. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.106. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.107. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.108. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.109. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.110. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~131 debug messages>

yosys> techmap -map +/techmap.v

3.111. Executing TECHMAP pass (map to technology primitives).

3.111.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.111.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> stat

3.112. Printing statistics.

=== gost89_cfb ===

   Number of wires:                257
   Number of wire bits:           5097
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1923
     $_AND_                        180
     $_DFFE_PP_                    288
     $_DFF_P_                       71
     $_MUX_                        981
     $_NOT_                         46
     $_OR_                         189
     $_SDFFE_PP0P_                   1
     $_XOR_                        135
     fa_1bit                        32


yosys> dfflegalize -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 t:$_SDFFCE_*

3.113. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.114. Printing statistics.

=== gost89_cfb ===

   Number of wires:                257
   Number of wire bits:           5097
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1923
     $_AND_                        180
     $_DFFE_PP_                    288
     $_DFF_P_                       71
     $_MUX_                        981
     $_NOT_                         46
     $_OR_                         189
     $_SDFFE_PP0P_                   1
     $_XOR_                        135
     fa_1bit                        32


yosys> opt_expr

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.116. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.117. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.118. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

3.120. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.121. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 1

yosys> abc -dff -keepff

3.123. Executing ABC pass (technology mapping using ABC).

3.123.1. Summary of detected clock domains:
  648 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$2452, arst={ }, srst={ }
  351 cells in clk=\clk, en={ }, arst={ }, srst={ }
  67 cells in clk=\clk, en=$verific$n347$15, arst={ }, srst={ }
  130 cells in clk=\clk, en=\ecb_encrypt.load_data, arst={ }, srst={ }
  129 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst=$verific$n347$15
  594 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2447, arst={ }, srst={ }

3.123.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2452
Extracted 648 gates and 1328 wires to a netlist network with 680 inputs and 162 outputs.

3.123.2.1. Executing ABC.

3.123.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 351 gates and 482 wires to a netlist network with 130 inputs and 117 outputs.

3.123.3.1. Executing ABC.

3.123.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $verific$n347$15
Extracted 67 gates and 135 wires to a netlist network with 68 inputs and 65 outputs.

3.123.4.1. Executing ABC.

3.123.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \ecb_encrypt.load_data
Extracted 130 gates and 261 wires to a netlist network with 131 inputs and 130 outputs.

3.123.5.1. Executing ABC.

3.123.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 129 gates and 259 wires to a netlist network with 130 inputs and 65 outputs.

3.123.6.1. Executing ABC.

3.123.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2444, synchronously reset by $abc$6955$verific$n347$15
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 4 outputs.

3.123.7.1. Executing ABC.

3.123.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2447
Extracted 562 gates and 832 wires to a netlist network with 270 inputs and 34 outputs.

3.123.8.1. Executing ABC.

yosys> abc -dff -keepff

3.124. Executing ABC pass (technology mapping using ABC).

3.124.1. Summary of detected clock domains:
  176 cells in clk=\clk, en=$abc$7087$ecb_encrypt.load_data, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$7412$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst=$abc$6955$verific$n347$15
  84 cells in clk=\clk, en=$abc$6955$verific$n347$15, arst={ }, srst={ }
  66 cells in clk=\clk, en=$abc$5816$auto$opt_dff.cc:219:make_patterns_logic$2452, arst={ }, srst={ }
  139 cells in clk=\clk, en=$abc$7282$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  965 cells in clk=\clk, en={ }, arst={ }, srst={ }
  617 cells in clk=\clk, en=$abc$7418$auto$opt_dff.cc:194:make_patterns_logic$2447, arst={ }, srst={ }

3.124.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7087$ecb_encrypt.load_data
Extracted 176 gates and 307 wires to a netlist network with 131 inputs and 176 outputs.

3.124.2.1. Executing ABC.

3.124.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7412$auto$opt_dff.cc:194:make_patterns_logic$2444, synchronously reset by $abc$6955$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.124.3.1. Executing ABC.

3.124.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6955$verific$n347$15
Extracted 84 gates and 167 wires to a netlist network with 83 inputs and 81 outputs.

3.124.4.1. Executing ABC.

3.124.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5816$auto$opt_dff.cc:219:make_patterns_logic$2452
Extracted 66 gates and 133 wires to a netlist network with 67 inputs and 66 outputs.

3.124.5.1. Executing ABC.

3.124.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7282$auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 139 gates and 280 wires to a netlist network with 141 inputs and 75 outputs.

3.124.6.1. Executing ABC.

3.124.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 965 gates and 1606 wires to a netlist network with 641 inputs and 160 outputs.

3.124.7.1. Executing ABC.

3.124.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7418$auto$opt_dff.cc:194:make_patterns_logic$2447
Extracted 585 gates and 855 wires to a netlist network with 270 inputs and 34 outputs.

3.124.8.1. Executing ABC.

yosys> abc -dff -keepff

3.125. Executing ABC pass (technology mapping using ABC).

3.125.1. Summary of detected clock domains:
  181 cells in clk=\clk, en=$abc$8004$abc$7087$ecb_encrypt.load_data, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$8245$abc$7412$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst=$abc$8251$abc$6955$verific$n347$15
  155 cells in clk=\clk, en=$abc$8529$abc$7282$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  71 cells in clk=\clk, en=$abc$8251$abc$6955$verific$n347$15, arst={ }, srst={ }
  335 cells in clk=\clk, en=$abc$8398$abc$5816$auto$opt_dff.cc:219:make_patterns_logic$2452, arst={ }, srst={ }
  659 cells in clk=\clk, en={ }, arst={ }, srst={ }
  584 cells in clk=\clk, en=$abc$9603$abc$7418$auto$opt_dff.cc:194:make_patterns_logic$2447, arst={ }, srst={ }

3.125.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8004$abc$7087$ecb_encrypt.load_data
Extracted 181 gates and 312 wires to a netlist network with 131 inputs and 170 outputs.

3.125.2.1. Executing ABC.

3.125.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8245$abc$7412$auto$opt_dff.cc:194:make_patterns_logic$2444, synchronously reset by $abc$8251$abc$6955$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.125.3.1. Executing ABC.

3.125.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8529$abc$7282$auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 155 gates and 307 wires to a netlist network with 152 inputs and 91 outputs.

3.125.4.1. Executing ABC.

3.125.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8251$abc$6955$verific$n347$15
Extracted 71 gates and 143 wires to a netlist network with 72 inputs and 66 outputs.

3.125.5.1. Executing ABC.

3.125.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8398$abc$5816$auto$opt_dff.cc:219:make_patterns_logic$2452
Extracted 335 gates and 638 wires to a netlist network with 303 inputs and 101 outputs.

3.125.6.1. Executing ABC.

3.125.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 659 gates and 1118 wires to a netlist network with 459 inputs and 158 outputs.

3.125.7.1. Executing ABC.

3.125.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9603$abc$7418$auto$opt_dff.cc:194:make_patterns_logic$2447
Extracted 552 gates and 823 wires to a netlist network with 271 inputs and 35 outputs.

3.125.8.1. Executing ABC.

yosys> abc -dff -keepff

3.126. Executing ABC pass (technology mapping using ABC).

3.126.1. Summary of detected clock domains:
  142 cells in clk=\clk, en=$abc$10155$abc$8004$abc$7087$ecb_encrypt.load_data, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$10392$abc$8245$abc$7412$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst=$abc$10554$abc$8251$abc$6955$verific$n347$15
  175 cells in clk=\clk, en=$abc$10398$abc$8529$abc$7282$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  76 cells in clk=\clk, en=$abc$10554$abc$8251$abc$6955$verific$n347$15, arst={ }, srst={ }
  315 cells in clk=\clk, en=$abc$10686$abc$8398$abc$5816$auto$opt_dff.cc:219:make_patterns_logic$2452, arst={ }, srst={ }
  804 cells in clk=\clk, en={ }, arst={ }, srst={ }
  587 cells in clk=\clk, en=$abc$11874$abc$9603$abc$7418$auto$opt_dff.cc:194:make_patterns_logic$2447, arst={ }, srst={ }

3.126.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10155$abc$8004$abc$7087$ecb_encrypt.load_data
Extracted 142 gates and 273 wires to a netlist network with 131 inputs and 142 outputs.

3.126.2.1. Executing ABC.

3.126.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10392$abc$8245$abc$7412$auto$opt_dff.cc:194:make_patterns_logic$2444, synchronously reset by $abc$10554$abc$8251$abc$6955$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.126.3.1. Executing ABC.

3.126.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10398$abc$8529$abc$7282$auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 175 gates and 334 wires to a netlist network with 159 inputs and 111 outputs.

3.126.4.1. Executing ABC.

3.126.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10554$abc$8251$abc$6955$verific$n347$15
Extracted 76 gates and 153 wires to a netlist network with 77 inputs and 74 outputs.

3.126.5.1. Executing ABC.

3.126.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10686$abc$8398$abc$5816$auto$opt_dff.cc:219:make_patterns_logic$2452
Extracted 315 gates and 596 wires to a netlist network with 281 inputs and 123 outputs.

3.126.6.1. Executing ABC.

3.126.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 804 gates and 1311 wires to a netlist network with 507 inputs and 170 outputs.

3.126.7.1. Executing ABC.

3.126.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11874$abc$9603$abc$7418$auto$opt_dff.cc:194:make_patterns_logic$2447
Extracted 555 gates and 826 wires to a netlist network with 271 inputs and 35 outputs.

3.126.8.1. Executing ABC.

yosys> opt_ffinv

3.127. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~21 debug messages>

yosys> opt_merge -nomux

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~99 debug messages>
Removed a total of 33 cells.

yosys> opt_muxtree

3.130. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.131. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.133. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.134. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13387 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1552_li56, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n2[1]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13400 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1604_li69, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n2[28]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13369 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1486_li38, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n1[2]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13385 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1544_li54, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n1[28]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13375 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1508_li44, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n1[22]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13401 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1608_li70, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n1[4]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13356 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1443_li25, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n1[31]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13353 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1432_li22, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n1[20]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13352 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1428_li21, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n1[3]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13349 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1418_li18, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n2[19]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13397 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1592_li66, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n2[12]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13371 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1493_li40, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n2[0]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13392 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1572_li61, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n1[21]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13382 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1533_li51, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n1[24]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13388 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1556_li57, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n2[8]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13394 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1580_li63, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n1[18]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13380 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1525_li49, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n2[20]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13393 ($_DFF_P_) from module gost89_cfb (D = $abc$13330$n1576_li62, Q = $abc$13330$abc$11118$abc$8669$abc$6684$ecb_encrypt.n2[29]).

yosys> opt_clean

3.135. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 11923 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

3.136. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~36 debug messages>

yosys> opt_muxtree

3.137. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.138. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.139. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

yosys> opt_share

3.140. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.141. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13383 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1786_li48, Q = \ecb_encrypt.n2 [11]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13378 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1495_li70, Q = \ecb_encrypt.n2 [3]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13377 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1778_li46, Q = \ecb_encrypt.n1 [30]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13376 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1794_li50, Q = \ecb_encrypt.n2 [7]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13372 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1375_li40, Q = \ecb_encrypt.n2 [27]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13370 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1752_li39, Q = \ecb_encrypt.n2 [5]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13368 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1814_li55, Q = \ecb_encrypt.n2 [22]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13367 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1826_li58, Q = \ecb_encrypt.n2 [16]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13366 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8529$abc$6684$n636_li35, Q = \ecb_encrypt.n2 [2]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13365 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1830_li59, Q = \ecb_encrypt.n2 [21]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13364 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1838_li61, Q = \ecb_encrypt.n2 [17]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13363 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1842_li62, Q = \ecb_encrypt.n2 [15]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13361 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1858_li66, Q = \ecb_encrypt.n2 [31]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13358 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1862_li67, Q = \ecb_encrypt.n2 [14]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13357 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1870_li69, Q = \ecb_encrypt.n1 [0]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13354 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1363_li37, Q = \ecb_encrypt.n2 [26]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13351 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1767_li43, Q = \ecb_encrypt.n2 [4]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13350 ($_DFF_P_) from module gost89_cfb (D = $abc$10398$abc$8669$n1822_li57, Q = \ecb_encrypt.n2 [18]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13346 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1355_li35, Q = \ecb_encrypt.n2 [30]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13344 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1471_li64, Q = \ecb_encrypt.n2 [10]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13343 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1435_li55, Q = \ecb_encrypt.n1 [19]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13342 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1367_li38, Q = \ecb_encrypt.n2 [24]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13341 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1467_li63, Q = \ecb_encrypt.n2 [6]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13339 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1475_li65, Q = \ecb_encrypt.n2 [13]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13338 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1491_li69, Q = \ecb_encrypt.n2 [9]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13335 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1379_li41, Q = \ecb_encrypt.n2 [25]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13333 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1387_li43, Q = \ecb_encrypt.n1 [5]).
Adding EN signal on $abc$13330$auto$blifparse.cc:362:parse_blif$13332 ($_DFF_P_) from module gost89_cfb (D = $abc$11118$n1383_li42, Q = \ecb_encrypt.n2 [23]).

yosys> opt_clean

3.142. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 63 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.143. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~56 debug messages>

yosys> opt_muxtree

3.144. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.145. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.146. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

yosys> opt_share

3.147. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.148. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.149. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 56 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_muxtree

3.151. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.152. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.153. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.154. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.155. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.156. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 4

yosys> bmuxmap

3.158. Executing BMUXMAP pass.

yosys> demuxmap

3.159. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_3SKOTs/abc_tmp_1.scr

3.160. Executing ABC pass (technology mapping using ABC).

3.160.1. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Extracted 1787 gates and 2950 wires to a netlist network with 1162 inputs and 300 outputs.

3.160.1.1. Executing ABC.
DE:   #PIs = 1162  #Luts =   610  Max Lvl =   4  Avg Lvl =   2.03  [   0.18 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 1162  #Luts =   557  Max Lvl =   5  Avg Lvl =   2.19  [   3.05 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 1162  #Luts =   557  Max Lvl =   5  Avg Lvl =   2.19  [   0.57 sec. at Pass 2]{map}[2]
DE:   #PIs = 1162  #Luts =   557  Max Lvl =   5  Avg Lvl =   2.19  [   1.04 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 1162  #Luts =   557  Max Lvl =   5  Avg Lvl =   2.19  [   1.24 sec. at Pass 4]{map}[12]
DE:   #PIs = 1162  #Luts =   557  Max Lvl =   5  Avg Lvl =   2.19  [   1.73 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 1162  #Luts =   549  Max Lvl =   5  Avg Lvl =   2.22  [   4.39 sec. at Pass 6]{pushMap}[16]
DE:   #PIs = 1162  #Luts =   545  Max Lvl =   5  Avg Lvl =   2.30  [   1.38 sec. at Pass 7]{map}[16]
DE:   #PIs = 1162  #Luts =   545  Max Lvl =   5  Avg Lvl =   2.30  [   2.36 sec. at Pass 8]{postMap}[16]
DE:   #PIs = 1162  #Luts =   545  Max Lvl =   5  Avg Lvl =   2.30  [   0.94 sec. at Pass 9]{map}[16]
DE:   #PIs = 1162  #Luts =   545  Max Lvl =   5  Avg Lvl =   2.30  [   1.59 sec. at Pass 10]{postMap}[16]
DE:   #PIs = 1162  #Luts =   544  Max Lvl =   5  Avg Lvl =   2.28  [   4.59 sec. at Pass 11]{pushMap}[16]
DE:   #PIs = 1162  #Luts =   544  Max Lvl =   5  Avg Lvl =   2.28  [   0.74 sec. at Pass 12]{map}[16]
DE:   #PIs = 1162  #Luts =   544  Max Lvl =   5  Avg Lvl =   2.28  [   0.80 sec. at Pass 13]{postMap}[16]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.15  [   0.74 sec. at Pass 14]{map}[16]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.15  [   0.93 sec. at Pass 15]{postMap}[16]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.15  [   0.76 sec. at Pass 16]{map}[16]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.15  [   1.00 sec. at Pass 17]{postMap}[16]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.15  [   2.70 sec. at Pass 18]{pushMap}[16]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.15  [   0.41 sec. at Pass 19]{finalMap}[16]

yosys> opt_expr

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.162. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.163. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.164. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.166. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.167. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.168. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 2944 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.170. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.171. Printing statistics.

=== gost89_cfb ===

   Number of wires:               1646
   Number of wire bits:           5005
   Number of public wires:          51
   Number of public wire bits:    3347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                935
     $_DFFE_PP_                    334
     $_DFF_P_                       25
     $_SDFFE_PP0P_                   1
     $lut                          543
     fa_1bit                        32


yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFFE_??_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 -cell $_DLATCH_?_ 0 -cell $_DLATCH_???_ 0

3.172. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.173. Printing statistics.

=== gost89_cfb ===

   Number of wires:               1646
   Number of wire bits:           5005
   Number of public wires:          51
   Number of public wire bits:    3347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                935
     $_DFFE_PP_                    334
     $_DFF_P_                       25
     $_SDFFE_PP0P_                   1
     $lut                          543
     fa_1bit                        32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/ffs_map.v

3.174. Executing TECHMAP pass (map to technology primitives).

3.174.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.174.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.174.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using extmapper simplemap for cells of type $lut.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~1038 debug messages>

yosys> opt_expr -mux_undef

3.175. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~16832 debug messages>

yosys> simplemap

3.176. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.177. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge

3.178. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~3210 debug messages>
Removed a total of 1070 cells.

yosys> opt_dff -nodffe -nosdff

3.179. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.180. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 2892 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.181. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~266 debug messages>

yosys> opt_merge -nomux

3.182. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.183. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.184. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.185. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.186. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.187. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.188. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 53 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.189. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_3SKOTs/abc_tmp_2.scr

3.190. Executing ABC pass (technology mapping using ABC).

3.190.1. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Extracted 1961 gates and 3125 wires to a netlist network with 1162 inputs and 300 outputs.

3.190.1.1. Executing ABC.
DE:   #PIs = 1162  #Luts =   553  Max Lvl =   4  Avg Lvl =   2.01  [   0.25 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.14  [   2.28 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.14  [   0.88 sec. at Pass 2]{map}[2]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.14  [   1.12 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.14  [   1.01 sec. at Pass 4]{map}[12]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.14  [   0.95 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 1162  #Luts =   541  Max Lvl =   5  Avg Lvl =   2.14  [   3.06 sec. at Pass 6]{pushMap}[16]
DE:   #PIs = 1162  #Luts =   541  Max Lvl =   5  Avg Lvl =   2.14  [   0.86 sec. at Pass 7]{map}[16]
DE:   #PIs = 1162  #Luts =   541  Max Lvl =   5  Avg Lvl =   2.14  [   1.13 sec. at Pass 8]{postMap}[16]
DE:   #PIs = 1162  #Luts =   541  Max Lvl =   5  Avg Lvl =   2.14  [   1.01 sec. at Pass 9]{map}[16]
DE:   #PIs = 1162  #Luts =   541  Max Lvl =   5  Avg Lvl =   2.14  [   3.33 sec. at Pass 10]{pushMap}[16]
DE:   #PIs = 1162  #Luts =   541  Max Lvl =   5  Avg Lvl =   2.14  [   0.76 sec. at Pass 11]{finalMap}[16]

yosys> opt_expr

3.191. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.192. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.193. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.194. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.195. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.196. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.197. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.198. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 2701 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.199. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.200. Executing HIERARCHY pass (managing design hierarchy).

3.200.1. Analyzing design hierarchy..
Top module:  \gost89_cfb

3.200.2. Analyzing design hierarchy..
Top module:  \gost89_cfb
Removed 0 unused modules.

yosys> stat

3.201. Printing statistics.

=== gost89_cfb ===

   Number of wires:               1644
   Number of wire bits:           5003
   Number of public wires:          51
   Number of public wire bits:    3347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                933
     $lut                          541
     dff                            25
     dffe                          334
     fa_1bit                        32
     sdffre                          1


yosys> opt_clean -purge

3.202. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 24 unused wires.
<suppressed ~24 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.203. Executing Verilog backend.
Dumping module `\gost89_cfb'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 5d50cf6b43, CPU: user 6.22s system 0.19s, MEM: 67.60 MB peak
Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)
Time spent: 98% 6x abc (342 sec), 0% 32x opt_expr (1 sec), ...
real 64.62
user 310.96
sys 36.65
