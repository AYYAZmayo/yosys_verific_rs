
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.64
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_round.v gost89_cfb.v gost89_sbox.v gost89_ecb_encrypt.v

yosys> verific -vlog2k gost89_round.v gost89_cfb.v gost89_sbox.v gost89_ecb_encrypt.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_cfb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_ecb_encrypt.v'

yosys> synth_rs -top gost89_cfb -tech genesis -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.65

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_cfb

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_cfb.v:1: compiling module 'gost89_cfb'
VERIFIC-INFO [VERI-1018] gost89_ecb_encrypt.v:1: compiling module 'gost89_ecb_encrypt'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_ecb_encrypt.v:33: expression size 7 truncated to fit in target size 6
Importing module gost89_cfb.
Importing module gost89_ecb_encrypt.
Importing module gost89_round.
Importing module gost89_sbox.

3.4.1. Analyzing design hierarchy..
Top module:  \gost89_cfb
Used module:     \gost89_ecb_encrypt
Used module:         \gost89_round
Used module:             \gost89_sbox

3.4.2. Analyzing design hierarchy..
Top module:  \gost89_cfb
Used module:     \gost89_ecb_encrypt
Used module:         \gost89_round
Used module:             \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_ecb_encrypt.
<suppressed ~3 debug messages>
Optimizing module gost89_cfb.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_ecb_encrypt.
Deleting now unused module gost89_round.
Deleting now unused module gost89_sbox.
<suppressed ~10 debug messages>

yosys> demuxmap

3.8. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.9. Executing TRIBUF pass.

yosys> deminout

3.10. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_clean

3.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 2337 unused wires.
<suppressed ~28 debug messages>

yosys> check

3.13. Executing CHECK pass (checking for obvious problems).
Checking module gost89_cfb...
Found and reported 0 problems.

yosys> opt_expr

3.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.16. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.17. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
    New ctrl vector for $pmux cell $flatten\ecb_encrypt.$verific$select_114$gost89_ecb_encrypt.v:80$1814: { $auto$opt_reduce.cc:134:opt_pmux$2436 $auto$opt_reduce.cc:134:opt_pmux$2434 $auto$opt_reduce.cc:134:opt_pmux$2432 $auto$opt_reduce.cc:134:opt_pmux$2430 $auto$opt_reduce.cc:134:opt_pmux$2428 $auto$opt_reduce.cc:134:opt_pmux$2426 $auto$opt_reduce.cc:134:opt_pmux$2424 $auto$opt_reduce.cc:134:opt_pmux$2422 $flatten\ecb_encrypt.$verific$n1897$1007 }
  Optimizing cells in module \gost89_cfb.
Performed a total of 1 changes.

yosys> opt_merge

3.18. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.19. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.20. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$out_reg$gost89_cfb.v:40$956 ($aldff) from module gost89_cfb.
Removing never-active async load on $verific$in_value_reg$gost89_cfb.v:40$955 ($aldff) from module gost89_cfb.
Removing never-active async load on $verific$gamma_reg$gost89_cfb.v:40$953 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$round_num_reg$gost89_ecb_encrypt.v:44$1777 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$round_key_reg$gost89_ecb_encrypt.v:80$1815 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$out_reg$gost89_ecb_encrypt.v:44$1778 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$n2_reg$gost89_ecb_encrypt.v:44$1775 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$n1_reg$gost89_ecb_encrypt.v:44$1774 ($aldff) from module gost89_cfb.

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~6 debug messages>

yosys> opt_muxtree

3.23. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.24. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.26. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_muxtree

3.30. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.31. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.32. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.33. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.34. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 3

yosys> fsm -encoding binary

3.37. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.37.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.37.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.37.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.37.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> fsm_opt

3.37.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.37.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.37.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.37.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.43. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.44. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$out_reg$gost89_cfb.v:40$956 ($dff) from module gost89_cfb (D = $verific$n413$21, Q = \out).
Adding EN signal on $verific$in_value_reg$gost89_cfb.v:40$955 ($dff) from module gost89_cfb (D = \in, Q = \in_value).
Adding EN signal on $verific$gamma_reg$gost89_cfb.v:40$953 ($dff) from module gost89_cfb (D = $verific$n739$25, Q = \gamma).
Adding EN signal on $verific$busy_reg$gost89_cfb.v:40$954 ($dff) from module gost89_cfb (D = $verific$n869$16, Q = \busy).
Adding EN signal on $flatten\ecb_encrypt.$verific$round_key_reg$gost89_ecb_encrypt.v:80$1815 ($dff) from module gost89_cfb (D = $flatten\ecb_encrypt.$verific$n1898$1062, Q = \ecb_encrypt.round_key).
Adding EN signal on $flatten\ecb_encrypt.$verific$out_reg$gost89_ecb_encrypt.v:44$1778 ($dff) from module gost89_cfb (D = { \ecb_encrypt.n1 \ecb_encrypt.out1 }, Q = \ecb_encrypt.out).

yosys> opt_clean

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~6 debug messages>
MAX OPT ITERATION = 1

yosys> wreduce -keepdc

3.47. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 bits (of 6) from port A of cell gost89_cfb.$flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1759 ($lt).
Removed top 5 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756 ($add).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_100$gost89_ecb_encrypt.v:67$1798 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_101$gost89_ecb_encrypt.v:68$1799 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_102$gost89_ecb_encrypt.v:69$1800 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_103$gost89_ecb_encrypt.v:70$1801 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_104$gost89_ecb_encrypt.v:71$1802 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_105$gost89_ecb_encrypt.v:72$1803 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_106$gost89_ecb_encrypt.v:73$1804 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_107$gost89_ecb_encrypt.v:74$1805 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_108$gost89_ecb_encrypt.v:75$1806 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_109$gost89_ecb_encrypt.v:76$1807 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_110$gost89_ecb_encrypt.v:77$1808 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_111$gost89_ecb_encrypt.v:78$1809 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_112$gost89_ecb_encrypt.v:79$1810 ($eq).
Removed top 5 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_82$gost89_ecb_encrypt.v:49$1780 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_83$gost89_ecb_encrypt.v:50$1781 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_84$gost89_ecb_encrypt.v:51$1782 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_85$gost89_ecb_encrypt.v:52$1783 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_86$gost89_ecb_encrypt.v:53$1784 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_87$gost89_ecb_encrypt.v:54$1785 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_88$gost89_ecb_encrypt.v:55$1786 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_89$gost89_ecb_encrypt.v:56$1787 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_90$gost89_ecb_encrypt.v:57$1788 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_91$gost89_ecb_encrypt.v:58$1789 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_92$gost89_ecb_encrypt.v:59$1790 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_93$gost89_ecb_encrypt.v:60$1791 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_94$gost89_ecb_encrypt.v:61$1792 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_95$gost89_ecb_encrypt.v:62$1793 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_96$gost89_ecb_encrypt.v:63$1794 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_97$gost89_ecb_encrypt.v:64$1795 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_98$gost89_ecb_encrypt.v:65$1796 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_99$gost89_ecb_encrypt.v:66$1797 ($eq).

yosys> peepopt

3.48. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.50. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.51. Printing statistics.

=== gost89_cfb ===

   Number of wires:                140
   Number of wire bits:           4042
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 99
     $add                            2
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           6
     $eq                            32
     $logic_not                      1
     $lt                             2
     $mux                           18
     $not                            5
     $pmux                           1
     $reduce_and                     1
     $reduce_bool                    2
     $reduce_or                      9
     $xor                            2


yosys> wreduce t:$mul

3.52. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc

3.53. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18

3.54. Executing TECHMAP pass (map to technology primitives).

3.54.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.54.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=10 -D DSP_B_MAXWIDTH=9 -D DSP_A_MINWIDTH=4 -D DSP_B_MINWIDTH=4 -D DSP_NAME=$__RS_MUL10X9

3.55. Executing TECHMAP pass (map to technology primitives).

3.55.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.55.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.56. Executing TECHMAP pass (map to technology primitives).

3.56.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.56.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> rs_dsp_simd

3.57. Executing RS_DSP_SIMD pass.

yosys> techmap -map +/rapidsilicon/genesis/dsp_final_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> rs_dsp_io_regs

3.59. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.60. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_cfb:
  creating $macc model for $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756 ($add).
  creating $macc model for $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1822 ($add).
  creating $alu model for $macc $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1822.
  creating $alu model for $macc $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756.
  creating $alu model for $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1755 ($lt): new $alu
  creating $alu model for $flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1759 ($lt): new $alu
  creating $alu model for $flatten\ecb_encrypt.$verific$equal_32$gost89_ecb_encrypt.v:38$1765 ($eq): merged with $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1755.
  creating $alu cell for $flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1759: $auto$alumacc.cc:485:replace_alu$2455
  creating $alu cell for $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1755, $flatten\ecb_encrypt.$verific$equal_32$gost89_ecb_encrypt.v:38$1765: $auto$alumacc.cc:485:replace_alu$2460
  creating $alu cell for $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756: $auto$alumacc.cc:485:replace_alu$2471
  creating $alu cell for $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1822: $auto$alumacc.cc:485:replace_alu$2474
  created 4 $alu and 0 $macc cells.

yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$2452: { $auto$alumacc.cc:501:replace_alu$2461 $auto$rtlil.cc:2369:Not$2450 }
  Optimizing cells in module \gost89_cfb.
Performed a total of 1 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 1

yosys> stat

3.70. Printing statistics.

=== gost89_cfb ===

   Number of wires:                152
   Number of wire bits:           4156
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                103
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           6
     $eq                            31
     $logic_not                      1
     $mux                           18
     $not                            8
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $xor                            2


yosys> memory -nomap

3.71. Executing MEMORY pass.

yosys> opt_mem

3.71.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.71.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.71.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.71.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.71.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.71.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> memory_share

3.71.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.71.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.71.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> memory_collect

3.71.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.72. Printing statistics.

=== gost89_cfb ===

   Number of wires:                152
   Number of wire bits:           4156
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                103
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           6
     $eq                            31
     $logic_not                      1
     $mux                           18
     $not                            8
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $xor                            2


yosys> muxpack

3.73. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~19 debug messages>

yosys> opt_clean

3.74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> memory_bram -rules +/rapidsilicon/genesis/brams.txt

3.75. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

yosys> techmap -map +/rapidsilicon/genesis/brams_map.v

3.76. Executing TECHMAP pass (map to technology primitives).

3.76.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v:236: Warning: Range [2:0] select out of bounds on signal `\DOP': Setting 1 MSB bits to undef.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.76.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

yosys> pmuxtree

3.77. Executing PMUXTREE pass.

yosys> muxpack

3.78. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting gost89_cfb.$auto$pmuxtree.cc:65:recursive_mux_generator$2505 ... gost89_cfb.$auto$pmuxtree.cc:65:recursive_mux_generator$2507 to a pmux with 2 cases.
Converting gost89_cfb.$auto$pmuxtree.cc:65:recursive_mux_generator$2495 ... gost89_cfb.$auto$pmuxtree.cc:65:recursive_mux_generator$2497 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~27 debug messages>

yosys> memory_map

3.79. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.80. Printing statistics.

=== gost89_cfb ===

   Number of wires:                166
   Number of wire bits:           4449
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                114
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           6
     $eq                            31
     $logic_not                      1
     $mux                           23
     $not                            9
     $or                             3
     $pmux                           2
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                     11
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.81. Executing TECHMAP pass (map to technology primitives).

3.81.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.81.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.81.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~693 debug messages>

yosys> stat

3.82. Printing statistics.

=== gost89_cfb ===

   Number of wires:                739
   Number of wire bits:          10391
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2517
     $_AND_                        193
     $_DFFE_PP_                    289
     $_DFF_P_                       71
     $_MUX_                       1164
     $_NOT_                         91
     $_OR_                         322
     $_XOR_                        355
     adder_carry                    32


yosys> opt_expr

3.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~345 debug messages>

yosys> opt_merge -nomux

3.84. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~636 debug messages>
Removed a total of 212 cells.

yosys> opt_muxtree

3.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.88. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.89. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 50 unused cells and 564 unused wires.
<suppressed ~51 debug messages>

yosys> opt_expr

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_muxtree

3.92. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.94. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.95. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.96. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.97. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.99. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~131 debug messages>

yosys> techmap -map +/techmap.v

3.100. Executing TECHMAP pass (map to technology primitives).

3.100.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.100.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.101. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.102. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.103. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.104. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.106. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 1

yosys> abc -dff

3.109. Executing ABC pass (technology mapping using ABC).

3.109.1. Summary of detected clock domains:
  647 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$2451, arst={ }, srst={ }
  389 cells in clk=\clk, en={ }, arst={ }, srst={ }
  67 cells in clk=\clk, en=$verific$n347$15, arst={ }, srst={ }
  130 cells in clk=\clk, en=\ecb_encrypt.load_data, arst={ }, srst={ }
  131 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  561 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2446, arst={ }, srst={ }
  3 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2443, arst={ }, srst={ }

3.109.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2451
Extracted 647 gates and 1326 wires to a netlist network with 679 inputs and 97 outputs.

3.109.2.1. Executing ABC.

3.109.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 357 gates and 488 wires to a netlist network with 130 inputs and 111 outputs.

3.109.3.1. Executing ABC.

3.109.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $verific$n347$15
Extracted 67 gates and 135 wires to a netlist network with 68 inputs and 65 outputs.

3.109.4.1. Executing ABC.

3.109.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \ecb_encrypt.load_data
Extracted 130 gates and 261 wires to a netlist network with 131 inputs and 130 outputs.

3.109.5.1. Executing ABC.

3.109.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 131 gates and 262 wires to a netlist network with 131 inputs and 66 outputs.

3.109.6.1. Executing ABC.

3.109.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2446
Extracted 561 gates and 829 wires to a netlist network with 268 inputs and 33 outputs.

3.109.7.1. Executing ABC.

3.109.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2443
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.109.8.1. Executing ABC.

yosys> abc -dff

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Summary of detected clock domains:
  176 cells in clk=\clk, en=$abc$7232$ecb_encrypt.load_data, arst={ }, srst={ }
  84 cells in clk=\clk, en=$abc$7036$verific$n347$15, arst={ }, srst={ }
  68 cells in clk=\clk, en=$abc$5814$auto$opt_dff.cc:219:make_patterns_logic$2451, arst={ }, srst={ }
  141 cells in clk=\clk, en=$abc$7491$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  1011 cells in clk=\clk, en={ }, arst={ }, srst={ }
  576 cells in clk=\clk, en=$abc$7687$auto$opt_dff.cc:194:make_patterns_logic$2446, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$8294$auto$opt_dff.cc:194:make_patterns_logic$2443, arst={ }, srst={ }

3.110.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7232$ecb_encrypt.load_data
Extracted 176 gates and 307 wires to a netlist network with 131 inputs and 129 outputs.

3.110.2.1. Executing ABC.

3.110.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7036$verific$n347$15
Extracted 84 gates and 167 wires to a netlist network with 83 inputs and 81 outputs.

3.110.3.1. Executing ABC.

3.110.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5814$auto$opt_dff.cc:219:make_patterns_logic$2451
Extracted 68 gates and 137 wires to a netlist network with 69 inputs and 65 outputs.

3.110.4.1. Executing ABC.

3.110.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7491$auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 141 gates and 284 wires to a netlist network with 143 inputs and 65 outputs.

3.110.5.1. Executing ABC.

3.110.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 979 gates and 1617 wires to a netlist network with 638 inputs and 118 outputs.

3.110.6.1. Executing ABC.

3.110.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7687$auto$opt_dff.cc:194:make_patterns_logic$2446
Extracted 576 gates and 846 wires to a netlist network with 270 inputs and 33 outputs.

3.110.7.1. Executing ABC.

3.110.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8294$auto$opt_dff.cc:194:make_patterns_logic$2443
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.110.8.1. Executing ABC.

yosys> abc -dff

3.111. Executing ABC pass (technology mapping using ABC).

3.111.1. Summary of detected clock domains:
  167 cells in clk=\clk, en=$abc$8299$abc$7232$ecb_encrypt.load_data, arst={ }, srst={ }
  175 cells in clk=\clk, en=$abc$8964$abc$7491$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  70 cells in clk=\clk, en=$abc$8557$abc$7036$verific$n347$15, arst={ }, srst={ }
  537 cells in clk=\clk, en=$abc$8768$abc$5814$auto$opt_dff.cc:219:make_patterns_logic$2451, arst={ }, srst={ }
  660 cells in clk=\clk, en={ }, arst={ }, srst={ }
  532 cells in clk=\clk, en=$abc$10295$abc$7687$auto$opt_dff.cc:194:make_patterns_logic$2446, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$10860$abc$8294$auto$opt_dff.cc:194:make_patterns_logic$2443, arst={ }, srst={ }

3.111.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8299$abc$7232$ecb_encrypt.load_data
Extracted 167 gates and 298 wires to a netlist network with 131 inputs and 129 outputs.

3.111.2.1. Executing ABC.

3.111.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8964$abc$7491$auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 175 gates and 320 wires to a netlist network with 145 inputs and 66 outputs.

3.111.3.1. Executing ABC.

3.111.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8557$abc$7036$verific$n347$15
Extracted 70 gates and 141 wires to a netlist network with 71 inputs and 65 outputs.

3.111.4.1. Executing ABC.

3.111.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8768$abc$5814$auto$opt_dff.cc:219:make_patterns_logic$2451
Extracted 536 gates and 957 wires to a netlist network with 421 inputs and 93 outputs.

3.111.5.1. Executing ABC.

3.111.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 629 gates and 997 wires to a netlist network with 368 inputs and 125 outputs.

3.111.6.1. Executing ABC.

3.111.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10295$abc$7687$auto$opt_dff.cc:194:make_patterns_logic$2446
Extracted 532 gates and 800 wires to a netlist network with 268 inputs and 33 outputs.

3.111.7.1. Executing ABC.

3.111.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10860$abc$8294$auto$opt_dff.cc:194:make_patterns_logic$2443
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.111.8.1. Executing ABC.

yosys> abc -dff

3.112. Executing ABC pass (technology mapping using ABC).

3.112.1. Summary of detected clock domains:
  145 cells in clk=\clk, en=$abc$10866$abc$8299$abc$7232$ecb_encrypt.load_data, arst={ }, srst={ }
  184 cells in clk=\clk, en=$abc$11128$abc$8964$abc$7491$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  95 cells in clk=\clk, en=$abc$11324$abc$8557$abc$7036$verific$n347$15, arst={ }, srst={ }
  239 cells in clk=\clk, en=$abc$11519$abc$8768$abc$5814$auto$opt_dff.cc:219:make_patterns_logic$2451, arst={ }, srst={ }
  914 cells in clk=\clk, en={ }, arst={ }, srst={ }
  563 cells in clk=\clk, en=$abc$12800$abc$10295$abc$7687$auto$opt_dff.cc:194:make_patterns_logic$2446, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$13392$abc$10860$abc$8294$auto$opt_dff.cc:194:make_patterns_logic$2443, arst={ }, srst={ }

3.112.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10866$abc$8299$abc$7232$ecb_encrypt.load_data
Extracted 145 gates and 276 wires to a netlist network with 131 inputs and 129 outputs.

3.112.2.1. Executing ABC.

3.112.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11128$abc$8964$abc$7491$auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 184 gates and 339 wires to a netlist network with 155 inputs and 65 outputs.

3.112.3.1. Executing ABC.

3.112.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11324$abc$8557$abc$7036$verific$n347$15
Extracted 95 gates and 191 wires to a netlist network with 96 inputs and 82 outputs.

3.112.4.1. Executing ABC.

3.112.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11519$abc$8768$abc$5814$auto$opt_dff.cc:219:make_patterns_logic$2451
Extracted 238 gates and 448 wires to a netlist network with 210 inputs and 84 outputs.

3.112.5.1. Executing ABC.

3.112.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 883 gates and 1445 wires to a netlist network with 562 inputs and 146 outputs.

3.112.6.1. Executing ABC.

3.112.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12800$abc$10295$abc$7687$auto$opt_dff.cc:194:make_patterns_logic$2446
Extracted 563 gates and 835 wires to a netlist network with 272 inputs and 33 outputs.

3.112.7.1. Executing ABC.

3.112.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$13392$abc$10860$abc$8294$auto$opt_dff.cc:194:make_patterns_logic$2443
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.112.8.1. Executing ABC.

yosys> opt_ffinv

3.113. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~30 debug messages>

yosys> opt_merge -nomux

3.115. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

yosys> opt_muxtree

3.116. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.117. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.119. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.120. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14432 ($_DFF_P_) from module gost89_cfb (D = $abc$14372$li59_li59, Q = $abc$14372$lo59).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14442 ($_DFF_P_) from module gost89_cfb (D = $abc$14372$li69_li69, Q = $abc$14372$lo69).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14439 ($_DFF_P_) from module gost89_cfb (D = $abc$14372$li66_li66, Q = $abc$14372$lo66).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14433 ($_DFF_P_) from module gost89_cfb (D = $abc$14372$li60_li60, Q = $abc$14372$lo60).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14438 ($_DFF_P_) from module gost89_cfb (D = $abc$14372$li65_li65, Q = $abc$14372$lo65).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14417 ($_DFF_P_) from module gost89_cfb (D = $abc$14372$li44_li44, Q = $abc$14372$lo44).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14440 ($_DFF_P_) from module gost89_cfb (D = $abc$14372$li67_li67, Q = $abc$14372$lo67).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14427 ($_DFF_P_) from module gost89_cfb (D = $abc$14372$li54_li54, Q = $abc$14372$lo54).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14428 ($_DFF_P_) from module gost89_cfb (D = $abc$14372$li55_li55, Q = $abc$14372$lo55).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14429 ($_DFF_P_) from module gost89_cfb (D = $abc$14372$li56_li56, Q = $abc$14372$lo56).

yosys> opt_clean

3.121. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 13972 unused wires.
<suppressed ~17 debug messages>

yosys> opt_expr

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~20 debug messages>

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

yosys> opt_share

3.126. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.127. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14424 ($_DFF_P_) from module gost89_cfb (D = $abc$11128$abc$9159$li51_li51, Q = $abc$11519$abc$9159$lo51).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14420 ($_DFF_P_) from module gost89_cfb (D = $abc$11128$abc$9159$li63_li63, Q = $abc$11519$abc$9159$lo63).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14415 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li34_li34, Q = $abc$12090$lo34).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14413 ($_DFF_P_) from module gost89_cfb (D = $abc$11128$abc$9159$li70_li70, Q = $abc$11519$abc$9159$lo70).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14412 ($_DFF_P_) from module gost89_cfb (D = $abc$11128$abc$9159$li64_li64, Q = $abc$14372$lo39).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14411 ($_DFF_P_) from module gost89_cfb (D = $abc$11128$abc$9159$li65_li65, Q = $abc$14372$lo38).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14410 ($_DFF_P_) from module gost89_cfb (D = $abc$11128$abc$9159$li66_li66, Q = $abc$11519$abc$9159$lo66).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14403 ($_DFF_P_) from module gost89_cfb (D = $abc$11128$abc$9159$li47_li47, Q = $abc$11519$abc$9159$lo47).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14399 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li65_li65, Q = $abc$12090$lo65).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14398 ($_DFF_P_) from module gost89_cfb (D = $abc$11128$abc$9159$li44_li44, Q = $abc$14372$lo25).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14395 ($_DFF_P_) from module gost89_cfb (D = $abc$11128$abc$9159$li62_li62, Q = $abc$11519$abc$9159$lo62).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14394 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li33_li33, Q = $abc$11519$abc$9159$lo04).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14388 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li59_li59, Q = $abc$11519$abc$9159$lo56).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14386 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li40_li40, Q = $abc$14372$lo13).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14383 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li70_li70, Q = $abc$11519$abc$9159$lo52).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14382 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li69_li69, Q = $abc$12090$lo69).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14381 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li60_li60, Q = $abc$12090$lo60).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14380 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li66_li66, Q = $abc$12090$lo66).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14379 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li61_li61, Q = $abc$11519$abc$9159$lo69).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14376 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li39_li39, Q = $abc$14372$lo03).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14374 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li38_li38, Q = $abc$11519$abc$9159$lo09).
Adding EN signal on $abc$14372$auto$blifparse.cc:362:parse_blif$14373 ($_DFF_P_) from module gost89_cfb (D = $abc$12090$li44_li44, Q = $abc$11519$abc$9159$lo15).

yosys> opt_clean

3.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 41 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~44 debug messages>

yosys> opt_muxtree

3.130. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.131. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

yosys> opt_share

3.133. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.134. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.135. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 44 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.136. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_muxtree

3.137. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.138. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.139. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.140. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.141. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.142. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.143. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 4

yosys> bmuxmap

3.144. Executing BMUXMAP pass.

yosys> demuxmap

3.145. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_Gb5Ipb/abc_tmp_1.scr

3.146. Executing ABC pass (technology mapping using ABC).

3.146.1. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Extracted 1845 gates and 3008 wires to a netlist network with 1162 inputs and 301 outputs.

3.146.1.1. Executing ABC.
DE:   #PIs = 1162  #Luts =   597  Max Lvl =   5  Avg Lvl =   2.35  [   0.06 sec. at Pass 0]
DE:   #PIs = 1162  #Luts =   560  Max Lvl =   5  Avg Lvl =   2.18  [   1.75 sec. at Pass 1]
DE:   #PIs = 1162  #Luts =   560  Max Lvl =   5  Avg Lvl =   2.18  [   0.63 sec. at Pass 2]
DE:   #PIs = 1162  #Luts =   549  Max Lvl =   5  Avg Lvl =   2.18  [   0.91 sec. at Pass 3]
DE:   #PIs = 1162  #Luts =   546  Max Lvl =   5  Avg Lvl =   2.18  [   0.52 sec. at Pass 4]
DE:   #PIs = 1162  #Luts =   543  Max Lvl =   5  Avg Lvl =   2.18  [   1.32 sec. at Pass 5]
DE:   #PIs = 1162  #Luts =   539  Max Lvl =   5  Avg Lvl =   2.18  [   1.43 sec. at Pass 6]
DE:   #PIs = 1162  #Luts =   538  Max Lvl =   5  Avg Lvl =   2.18  [   1.61 sec. at Pass 7]
DE:   #PIs = 1162  #Luts =   538  Max Lvl =   5  Avg Lvl =   2.18  [   1.85 sec. at Pass 8]
DE:   #PIs = 1162  #Luts =   538  Max Lvl =   5  Avg Lvl =   2.18  [   1.99 sec. at Pass 9]
DE:   #PIs = 1162  #Luts =   538  Max Lvl =   5  Avg Lvl =   2.18  [   1.75 sec. at Pass 10]
DE:   #PIs = 1162  #Luts =   538  Max Lvl =   5  Avg Lvl =   2.18  [   8.17 sec. at Pass 11]
DE:   #PIs = 1162  #Luts =   538  Max Lvl =   5  Avg Lvl =   2.18  [   0.78 sec. at Pass 12]

yosys> opt_expr

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.148. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.149. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.150. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.152. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.153. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.154. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 3005 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.155. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.156. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.157. Printing statistics.

=== gost89_cfb ===

   Number of wires:                778
   Number of wire bits:           3944
   Number of public wires:          46
   Number of public wire bits:    3149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                929
     $_DFFE_PP_                    321
     $_DFF_P_                       39
     $lut                          537
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.158. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.159. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.160. Printing statistics.

=== gost89_cfb ===

   Number of wires:                778
   Number of wire bits:           3944
   Number of public wires:          46
   Number of public wire bits:    3149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                929
     $_DFFE_PP0P_                  321
     $_DFF_P_                       39
     $lut                          537
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.161. Executing TECHMAP pass (map to technology primitives).

3.161.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.161.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.161.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1354 debug messages>

yosys> opt_expr -mux_undef

3.162. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~17400 debug messages>

yosys> simplemap

3.163. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge

3.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~3948 debug messages>
Removed a total of 1316 cells.

yosys> opt_dff -nodffe -nosdff

3.166. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 3436 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~416 debug messages>

yosys> opt_merge -nomux

3.169. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.170. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.171. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.172. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.173. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.174. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.175. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.176. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_Gb5Ipb/abc_tmp_2.scr

3.177. Executing ABC pass (technology mapping using ABC).

3.177.1. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Extracted 2044 gates and 3208 wires to a netlist network with 1162 inputs and 300 outputs.

3.177.1.1. Executing ABC.
DE:   #PIs = 1162  #Luts =   537  Max Lvl =   5  Avg Lvl =   2.19  [   0.47 sec. at Pass 0]
DE:   #PIs = 1162  #Luts =   537  Max Lvl =   5  Avg Lvl =   2.19  [   6.02 sec. at Pass 1]
DE:   #PIs = 1162  #Luts =   537  Max Lvl =   5  Avg Lvl =   2.19  [   1.38 sec. at Pass 2]
DE:   #PIs = 1162  #Luts =   537  Max Lvl =   5  Avg Lvl =   2.19  [   1.58 sec. at Pass 3]
DE:   #PIs = 1162  #Luts =   537  Max Lvl =   5  Avg Lvl =   2.19  [   1.41 sec. at Pass 4]
DE:   #PIs = 1162  #Luts =   537  Max Lvl =   5  Avg Lvl =   2.19  [   2.41 sec. at Pass 5]
DE:   #PIs = 1162  #Luts =   537  Max Lvl =   5  Avg Lvl =   2.19  [   6.64 sec. at Pass 6]
DE:   #PIs = 1162  #Luts =   537  Max Lvl =   5  Avg Lvl =   2.19  [   0.85 sec. at Pass 7]

yosys> opt_expr

3.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.179. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.180. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.181. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.182. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.183. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.184. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.185. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 2787 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.186. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.187. Executing HIERARCHY pass (managing design hierarchy).

3.187.1. Analyzing design hierarchy..
Top module:  \gost89_cfb

3.187.2. Analyzing design hierarchy..
Top module:  \gost89_cfb
Removed 0 unused modules.

yosys> stat

3.188. Printing statistics.

=== gost89_cfb ===

   Number of wires:                778
   Number of wire bits:           3944
   Number of public wires:          46
   Number of public wire bits:    3149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                929
     $lut                          537
     adder_carry                    32
     dffsre                        360


yosys> opt_clean -purge

3.189. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 24 unused wires.
<suppressed ~24 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.190. Executing Verilog backend.
Dumping module `\gost89_cfb'.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: c9a061c0ef, CPU: user 4.91s system 0.14s, MEM: 74.25 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 96% 6x abc (129 sec), 1% 31x opt_expr (1 sec), ...
real 65.69
user 123.74
sys 10.39
