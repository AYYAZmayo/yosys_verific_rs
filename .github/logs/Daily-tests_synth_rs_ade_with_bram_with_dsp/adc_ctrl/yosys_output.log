
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.64
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_mubi_pkg.sv ast_pkg.sv adc_ctrl_reg_pkg.sv prim_alert_pkg.sv prim_pkg.sv prim_secded_pkg.sv top_pkg.sv prim_subreg_pkg.sv tlul_pkg.sv adc_ctrl.sv adc_ctrl_core.sv adc_ctrl_fsm.sv adc_ctrl_intr.sv adc_ctrl_reg_top.sv prim_alert_sender.sv prim_buf.sv prim_generic_buf.sv prim_subreg.sv prim_generic_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_flop_2sync.sv prim_generic_flop.sv tlul_cmd_intg_chk.sv prim_secded_inv_64_57_dec.sv tlul_data_integ_dec.sv prim_secded_inv_39_32_dec.sv tlul_rsp_intg_gen.sv prim_secded_inv_64_57_enc.sv tlul_data_integ_enc.sv prim_secded_inv_39_32_enc.sv tlul_adapter_reg.sv tlul_err.sv prim_sync_reqack.sv prim_reg_cdc.sv prim_subreg_ext.sv prim_pulse_sync.sv prim_intr_hw.sv

yosys> verific -sv prim_mubi_pkg.sv ast_pkg.sv adc_ctrl_reg_pkg.sv prim_alert_pkg.sv prim_pkg.sv prim_secded_pkg.sv top_pkg.sv prim_subreg_pkg.sv tlul_pkg.sv adc_ctrl.sv adc_ctrl_core.sv adc_ctrl_fsm.sv adc_ctrl_intr.sv adc_ctrl_reg_top.sv prim_alert_sender.sv prim_buf.sv prim_generic_buf.sv prim_subreg.sv prim_generic_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_flop_2sync.sv prim_generic_flop.sv tlul_cmd_intg_chk.sv prim_secded_inv_64_57_dec.sv tlul_data_integ_dec.sv prim_secded_inv_39_32_dec.sv tlul_rsp_intg_gen.sv prim_secded_inv_64_57_enc.sv tlul_data_integ_enc.sv prim_secded_inv_39_32_enc.sv tlul_adapter_reg.sv tlul_err.sv prim_sync_reqack.sv prim_reg_cdc.sv prim_subreg_ext.sv prim_pulse_sync.sv prim_intr_hw.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_pkg.sv'
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:15: parameter 'NumAlerts' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:16: parameter 'NumIoRails' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:17: parameter 'AsSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:18: parameter 'CgSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:19: parameter 'GdSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:20: parameter 'TsHiSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:21: parameter 'TsLoSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:22: parameter 'FlaSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:23: parameter 'OtpSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:24: parameter 'Ot0Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:25: parameter 'Ot1Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:26: parameter 'Ot2Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:27: parameter 'Ot3Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:28: parameter 'Ot4Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:29: parameter 'Ot5Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:31: parameter 'Lc2HcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:32: parameter 'Hc2LcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:34: parameter 'EntropyStreams' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:35: parameter 'AdcChannels' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:36: parameter 'AdcDataWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:37: parameter 'UsbCalibWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:38: parameter 'Ast2PadOutWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:39: parameter 'Pad2AstInWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:43: parameter 'LfsrWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:46: parameter 'RndCnstLfsrSeedDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:47: parameter 'RndCnstLfsrPermDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:95: parameter 'AST_RST_DEFAULT' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:10: parameter 'NumAdcFilter' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:11: parameter 'NumAdcChannel' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:12: parameter 'NumAlerts' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:15: parameter 'BlockAw' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:209: parameter 'ADC_CTRL_INTR_STATE_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:210: parameter 'ADC_CTRL_INTR_ENABLE_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:211: parameter 'ADC_CTRL_INTR_TEST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:212: parameter 'ADC_CTRL_ALERT_TEST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:213: parameter 'ADC_CTRL_ADC_EN_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:214: parameter 'ADC_CTRL_ADC_PD_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:215: parameter 'ADC_CTRL_ADC_LP_SAMPLE_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:216: parameter 'ADC_CTRL_ADC_SAMPLE_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:217: parameter 'ADC_CTRL_ADC_FSM_RST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:218: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:219: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:220: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_2_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:221: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_3_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:222: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_4_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:223: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_5_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:224: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_6_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:225: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_7_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:226: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:227: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:228: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_2_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:229: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_3_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:230: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_4_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:231: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_5_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:232: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_6_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:233: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_7_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:234: parameter 'ADC_CTRL_ADC_CHN_VAL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:235: parameter 'ADC_CTRL_ADC_CHN_VAL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:236: parameter 'ADC_CTRL_ADC_WAKEUP_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:237: parameter 'ADC_CTRL_FILTER_STATUS_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:238: parameter 'ADC_CTRL_ADC_INTR_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:239: parameter 'ADC_CTRL_ADC_INTR_STATUS_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:242: parameter 'ADC_CTRL_INTR_TEST_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:243: parameter 'ADC_CTRL_INTR_TEST_DEBUG_CABLE_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:244: parameter 'ADC_CTRL_ALERT_TEST_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:245: parameter 'ADC_CTRL_ALERT_TEST_FATAL_FAULT_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:283: parameter 'ADC_CTRL_PERMIT' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_fsm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_intr.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-WARNING [VERI-1206] prim_generic_buf.sv:13: overwriting previous definition of module 'prim_generic_buf'
VERIFIC-INFO [VERI-2142] prim_generic_buf.sv:13: previous definition of design element 'prim_generic_buf' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pulse_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_intr_hw.sv'

yosys> synth_rs -top adc_ctrl -tech genesis -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.65

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top adc_ctrl

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] adc_ctrl.sv:8: compiling module 'adc_ctrl'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-INFO [VERI-1018] adc_ctrl_reg_top.sv:11: compiling module 'adc_ctrl_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:3: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=7)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:44: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_sync_reqack.sv:26: compiling module 'prim_sync_reqack'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)'
VERIFIC-INFO [VERI-1018] adc_ctrl_core.sv:7: compiling module 'adc_ctrl_core'
VERIFIC-INFO [VERI-1018] adc_ctrl_fsm.sv:7: compiling module 'adc_ctrl_fsm'
VERIFIC-INFO [VERI-1018] prim_pulse_sync.sv:11: compiling module 'prim_pulse_sync'
VERIFIC-INFO [VERI-1018] adc_ctrl_intr.sv:7: compiling module 'adc_ctrl_intr'
VERIFIC-INFO [VERI-1018] prim_intr_hw.sv:10: compiling module 'prim_intr_hw'
Importing module adc_ctrl.
Importing module adc_ctrl_core.
Importing module adc_ctrl_fsm.
Importing module adc_ctrl_intr.
Importing module adc_ctrl_reg_top.
Importing module prim_alert_sender.
Importing module prim_buf.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module prim_intr_hw.
Importing module prim_pulse_sync.
Importing module prim_flop_2sync(Width=1).
Importing module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
Importing module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
Importing module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
Importing module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
Importing module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
Importing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
Importing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
Importing module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
Importing module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
Importing module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
Importing module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
Importing module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
Importing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
Importing module prim_subreg_ext(DW=32'b01).
Importing module prim_sync_reqack.
Importing module tlul_adapter_reg(RegAw=7).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

3.4.1. Analyzing design hierarchy..
Top module:  \adc_ctrl
Used module:     \adc_ctrl_core
Used module:         \adc_ctrl_intr
Used module:             \prim_intr_hw
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:         \prim_pulse_sync
Used module:             \prim_flop_2sync(Width=1)
Used module:         \adc_ctrl_fsm
Used module:     \adc_ctrl_reg_top
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)
Used module:         \prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)
Used module:             \prim_sync_reqack
Used module:         \prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)
Used module:         \prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)
Used module:         \prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)
Used module:         \prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)
Used module:         \prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)

3.4.2. Analyzing design hierarchy..
Top module:  \adc_ctrl
Used module:     \adc_ctrl_core
Used module:         \adc_ctrl_intr
Used module:             \prim_intr_hw
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:         \prim_pulse_sync
Used module:             \prim_flop_2sync(Width=1)
Used module:         \adc_ctrl_fsm
Used module:     \adc_ctrl_reg_top
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)
Used module:         \prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)
Used module:             \prim_sync_reqack
Used module:         \prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)
Used module:         \prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)
Used module:         \prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)
Used module:         \prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)
Used module:         \prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=7).
<suppressed ~11 debug messages>
Optimizing module prim_sync_reqack.
<suppressed ~4 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
<suppressed ~4 debug messages>
Optimizing module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
<suppressed ~5 debug messages>
Optimizing module prim_flop_2sync(Width=1).
Optimizing module prim_pulse_sync.
<suppressed ~2 debug messages>
Optimizing module prim_intr_hw.
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf.
Optimizing module prim_alert_sender.
<suppressed ~7 debug messages>
Optimizing module adc_ctrl_reg_top.
<suppressed ~2 debug messages>
Optimizing module adc_ctrl_intr.
<suppressed ~8 debug messages>
Optimizing module adc_ctrl_fsm.
<suppressed ~26 debug messages>
Optimizing module adc_ctrl_core.
<suppressed ~4 debug messages>
Optimizing module adc_ctrl.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module adc_ctrl_core.
Deleting now unused module adc_ctrl_fsm.
Deleting now unused module adc_ctrl_intr.
Deleting now unused module adc_ctrl_reg_top.
Deleting now unused module prim_alert_sender.
Deleting now unused module prim_buf.
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_flop_2sync(Width=1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_intr_hw.
Deleting now unused module prim_pulse_sync.
Deleting now unused module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
Deleting now unused module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
Deleting now unused module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
Deleting now unused module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
Deleting now unused module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
Deleting now unused module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
Deleting now unused module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
Deleting now unused module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
Deleting now unused module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
Deleting now unused module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
Deleting now unused module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
Deleting now unused module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
Deleting now unused module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_sync_reqack.
Deleting now unused module tlul_adapter_reg(RegAw=7).
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module tlul_err.
Deleting now unused module tlul_rsp_intg_gen.
<suppressed ~172 debug messages>

yosys> demuxmap

3.8. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.9. Executing TRIBUF pass.

yosys> deminout

3.10. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~117 debug messages>

yosys> opt_clean

3.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 751 unused cells and 11667 unused wires.
<suppressed ~2795 debug messages>

yosys> check

3.13. Executing CHECK pass (checking for obvious problems).
Checking module adc_ctrl...
Found and reported 0 problems.

yosys> opt_expr

3.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~88 debug messages>

yosys> opt_merge -nomux

3.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.16. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_aon_tgl.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_aon_tgl.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_aon_tgl.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_aon_tgl.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_aon_tgl.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_aon_tgl.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_aon_tgl.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_aon_tgl.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_filter_status_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_filter_status_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_filter_status_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_filter_status_cdc.u_prim_sync.dst_fsm_cs -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$mux_188$adc_ctrl_fsm.sv:260$1952.
Removed 1 multiplexer ports.
<suppressed ~295 debug messages>

yosys> opt_reduce

3.17. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_879$adc_ctrl_reg_top.sv:3982$8570: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n4771$2406 $flatten\u_reg.$verific$n4780$2415 $flatten\u_reg.$verific$n4783$2418 $flatten\u_reg.$verific$n4786$2421 $flatten\u_reg.$verific$n4789$2424 $flatten\u_reg.$verific$n4792$2427 $flatten\u_reg.$verific$n4795$2430 $flatten\u_reg.$verific$n4798$2433 $flatten\u_reg.$verific$n4801$2436 $flatten\u_reg.$verific$n4804$2439 $flatten\u_reg.$verific$n4807$2442 $flatten\u_reg.$verific$n4810$2445 $flatten\u_reg.$verific$n4813$2448 $flatten\u_reg.$verific$n4816$2451 $flatten\u_reg.$verific$n4819$2454 $flatten\u_reg.$verific$n4822$2457 $flatten\u_reg.$verific$n4825$2460 $flatten\u_reg.$verific$n4828$2463 $flatten\u_reg.$verific$n4831$2466 $flatten\u_reg.$verific$n4834$2469 $flatten\u_reg.$verific$n4837$2472 $flatten\u_reg.$verific$n4840$2475 $flatten\u_reg.$verific$n4843$2478 $flatten\u_reg.$verific$n4846$2481 $flatten\u_reg.$verific$n4849$2484 $flatten\u_reg.$verific$n4852$2487 $flatten\u_reg.$verific$n4855$2490 $flatten\u_reg.$verific$n4858$2493 $flatten\u_reg.$verific$n4860$2495 }
  Optimizing cells in module \adc_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

3.18. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.19. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.20. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9912 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9911 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9910 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9920 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9900 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9921 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status.$verific$q_reg$prim_subreg.sv:72$9747 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9159 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9141 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9519 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9501 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9447 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9429 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_oneshot.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_discon.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_3a0_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_q_reg[0]$prim_reg_cdc.sv:98$9088 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9071 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9231 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9213 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_1.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_0.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$8869 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$8870 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$8871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$8872 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$8869 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$8870 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$8871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$8779 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$8783 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$8782 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$8780 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$8781 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$adc_ctrl_reg_top.sv:65$2734 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.\prim_flop_2sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.\prim_flop_2sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.$verific$src_level_reg$prim_pulse_sync.sv:32$8950 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.$verific$dst_level_q_reg$prim_pulse_sync.sv:60$8957 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\i_adc_ctrl_intr_o.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$8936 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[7].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[7].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[6].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[6].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[5].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[5].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[4].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[4].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[3].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[3].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[2].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[2].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[1].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[1].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[7].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2070 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[6].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2064 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[5].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2058 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[4].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2052 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[3].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2046 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[2].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2040 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[1].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2034 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[0].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2028 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$wakeup_timer_cnt_q_reg$adc_ctrl_fsm.sv:142$1887 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$trigger_q_reg$adc_ctrl_fsm.sv:86$1849 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$pwrup_timer_cnt_q_reg$adc_ctrl_fsm.sv:102$1863 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$np_sample_cnt_q_reg$adc_ctrl_fsm.sv:128$1879 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$lp_sample_cnt_q_reg$adc_ctrl_fsm.sv:115$1871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$fsm_state_q_reg$adc_ctrl_fsm.sv:212$1946 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_we_o_reg$adc_ctrl_fsm.sv:170$1918 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_o_reg$adc_ctrl_fsm.sv:170$1920 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_we_o_reg$adc_ctrl_fsm.sv:170$1917 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_o_reg$adc_ctrl_fsm.sv:170$1919 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$adc_ctrl_match_q_reg$adc_ctrl_fsm.sv:190$1931 ($aldff) from module adc_ctrl.

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 4 unused cells and 97 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.23. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~295 debug messages>

yosys> opt_reduce

3.24. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.26. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.27. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~38 debug messages>

yosys> opt_muxtree

3.30. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~271 debug messages>

yosys> opt_reduce

3.31. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_879$adc_ctrl_reg_top.sv:3982$8570: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n4780$2415 $flatten\u_reg.$verific$n4783$2418 $flatten\u_reg.$verific$n4786$2421 $flatten\u_reg.$verific$n4789$2424 $flatten\u_reg.$verific$n4792$2427 $flatten\u_reg.$verific$n4795$2430 $flatten\u_reg.$verific$n4798$2433 $flatten\u_reg.$verific$n4801$2436 $flatten\u_reg.$verific$n4804$2439 $flatten\u_reg.$verific$n4807$2442 $flatten\u_reg.$verific$n4810$2445 $flatten\u_reg.$verific$n4813$2448 $flatten\u_reg.$verific$n4816$2451 $flatten\u_reg.$verific$n4819$2454 $flatten\u_reg.$verific$n4822$2457 $flatten\u_reg.$verific$n4825$2460 $flatten\u_reg.$verific$n4828$2463 $flatten\u_reg.$verific$n4831$2466 $flatten\u_reg.$verific$n4834$2469 $flatten\u_reg.$verific$n4837$2472 $flatten\u_reg.$verific$n4840$2475 $flatten\u_reg.$verific$n4843$2478 $flatten\u_reg.$verific$n4846$2481 $flatten\u_reg.$verific$n4849$2484 $flatten\u_reg.$verific$n4852$2487 $flatten\u_reg.$verific$n4858$2493 $flatten\u_reg.$verific$n4860$2495 }
  Optimizing cells in module \adc_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

3.32. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~252 debug messages>
Removed a total of 84 cells.

yosys> opt_share

3.33. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$trigger_q_reg$adc_ctrl_fsm.sv:86$1849 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\i_adc_ctrl_intr_o.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$8936 ($adff) from module adc_ctrl.

yosys> opt_clean

3.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 11 unused cells and 116 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.37. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~270 debug messages>

yosys> opt_reduce

3.38. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.40. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.41. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 4

yosys> fsm -encoding binary

3.44. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.44.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.44.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.44.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.44.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> fsm_opt

3.44.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.44.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.44.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.44.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.45. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.46. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.47. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~270 debug messages>

yosys> opt_reduce

3.48. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.50. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.51. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9912 ($adff) from module adc_ctrl (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9911 ($adff) from module adc_ctrl (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9910 ($adff) from module adc_ctrl (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9920 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n182$9870, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9900 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n75$9850, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9921 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n248$9852, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_intr_state.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.intr_state_o.d, Q = \u_reg.u_intr_state.q).
Adding EN signal on $flatten\u_reg.\u_filter_status_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_filter_status_cdc.$verific$n81$9344, Q = \u_reg.u_filter_status_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_filter_status_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_filter_status_cdc.$verific$n14$9327, Q = \u_reg.u_filter_status_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_filter_status.$verific$q_reg$prim_subreg.sv:72$9747 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.aon_filter_status_o.d, Q = \u_reg.u_filter_status.q).
Adding EN signal on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$n81$9344, Q = \u_reg.u_adc_wakeup_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$n14$9327, Q = \u_reg.u_adc_wakeup_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9159 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$n113$9128, Q = \u_reg.u_adc_sample_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9141 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$n14$9111, Q = \u_reg.u_adc_sample_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9519 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$n177$9488, Q = \u_reg.u_adc_pd_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9501 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$n14$9471, Q = \u_reg.u_adc_pd_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9447 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$n81$9416, Q = \u_reg.u_adc_lp_sample_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9429 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$n14$9399, Q = \u_reg.u_adc_lp_sample_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_oneshot.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_oneshot.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_src_det_flip.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_src_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_discon.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_discon.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_3a0_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_3a0_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_src_det_flip.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_src_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_q_reg[0]$prim_reg_cdc.sv:98$9088 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$n49$9054, Q = \u_reg.u_adc_fsm_rst_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9071 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$n14$9043, Q = \u_reg.u_adc_fsm_rst_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9231 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$n57$9200, Q = \u_reg.u_adc_en_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9213 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$n14$9183, Q = \u_reg.u_adc_en_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($adff) from module adc_ctrl (D = { 16'0000000000000000 \u_reg.u_adc_chn_val_1_adc_chn_value_1.q 2'00 }, Q = \u_reg.u_adc_chn_val_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($adff) from module adc_ctrl (D = 1'0, Q = \u_reg.u_adc_chn_val_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_1.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_o, Q = \u_reg.u_adc_chn_val_1_adc_chn_value_1.q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($adff) from module adc_ctrl (D = { 16'0000000000000000 \u_reg.u_adc_chn_val_0_adc_chn_value_0.q 2'00 }, Q = \u_reg.u_adc_chn_val_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($adff) from module adc_ctrl (D = 1'0, Q = \u_reg.u_adc_chn_val_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_0.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_o, Q = \u_reg.u_adc_chn_val_0_adc_chn_value_0.q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_7_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_7_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_6_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_6_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_7_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_7_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_6_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_6_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$adc_ctrl_reg_top.sv:65$2734 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.intg_err_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$wakeup_timer_cnt_q_reg$adc_ctrl_fsm.sv:142$1887 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n438$1797, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.wakeup_timer_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$pwrup_timer_cnt_q_reg$adc_ctrl_fsm.sv:102$1863 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n55$1779, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.pwrup_timer_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$np_sample_cnt_q_reg$adc_ctrl_fsm.sv:128$1879 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n249$1791, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.np_sample_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$lp_sample_cnt_q_reg$adc_ctrl_fsm.sv:115$1871 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n124$1785, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.lp_sample_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_o_reg$adc_ctrl_fsm.sv:170$1920 ($adff) from module adc_ctrl (D = \adc_i.data, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_o).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_o_reg$adc_ctrl_fsm.sv:170$1919 ($adff) from module adc_ctrl (D = \adc_i.data, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_o).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$adc_ctrl_match_q_reg$adc_ctrl_fsm.sv:190$1931 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.match, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.adc_ctrl_match_q).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10958 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10955 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10921 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10921 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$10921 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10893 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10893 ($adffe) from module adc_ctrl.

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 35 unused cells and 34 unused wires.
<suppressed ~42 debug messages>

yosys> opt_expr

3.53. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~77 debug messages>

yosys> opt_muxtree

3.54. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~242 debug messages>

yosys> opt_reduce

3.55. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

yosys> opt_share

3.57. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.58. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($adff) from module adc_ctrl.

yosys> opt_clean

3.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 30 unused cells and 85 unused wires.
<suppressed ~85 debug messages>

yosys> opt_expr

3.60. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_muxtree

3.61. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.62. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.64. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.65. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($adff) from module adc_ctrl.

yosys> opt_clean

3.66. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.67. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_muxtree

3.68. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.69. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.70. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.71. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.72. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[0].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2028 ($adff) from module adc_ctrl.

yosys> opt_clean

3.73. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.74. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~2 debug messages>
MAX OPT ITERATION = 4

yosys> wreduce -keepdc

3.75. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell adc_ctrl.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$9880 ($eq).
Removed top 4 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_319$adc_ctrl_reg_top.sv:3667$8272 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_321$adc_ctrl_reg_top.sv:3668$8273 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_323$adc_ctrl_reg_top.sv:3669$8274 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_325$adc_ctrl_reg_top.sv:3670$8275 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_327$adc_ctrl_reg_top.sv:3671$8276 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_329$adc_ctrl_reg_top.sv:3672$8277 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_331$adc_ctrl_reg_top.sv:3673$8278 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_333$adc_ctrl_reg_top.sv:3674$8279 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_335$adc_ctrl_reg_top.sv:3675$8280 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_337$adc_ctrl_reg_top.sv:3676$8281 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_339$adc_ctrl_reg_top.sv:3677$8282 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_341$adc_ctrl_reg_top.sv:3678$8283 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_343$adc_ctrl_reg_top.sv:3679$8284 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_345$adc_ctrl_reg_top.sv:3680$8285 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_347$adc_ctrl_reg_top.sv:3681$8286 ($eq).
Removed top 31 bits (of 32) from port A of cell adc_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10529 ($shl).
Removed top 28 bits (of 32) from port Y of cell adc_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10529 ($shl).
Removed top 13 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$not_equal_215$adc_ctrl_fsm.sv:338$1967 ($ne).
Removed top 1 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$not_equal_180$adc_ctrl_fsm.sv:241$1949 ($ne).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_80$adc_ctrl_fsm.sv:149$1901 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_78$adc_ctrl_fsm.sv:149$1899 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_77$adc_ctrl_fsm.sv:149$1898 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_70$adc_ctrl_fsm.sv:145$1891 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_68$adc_ctrl_fsm.sv:145$1889 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_67$adc_ctrl_fsm.sv:145$1888 ($eq).
Removed top 8 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976 ($eq).
Removed top 13 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_216$adc_ctrl_fsm.sv:341$1968 ($eq).
Removed top 5 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959 ($eq).
Removed top 1 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_181$adc_ctrl_fsm.sv:244$1950 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_111$adc_ctrl_fsm.sv:175$1922 ($eq).
Removed top 7 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_110$adc_ctrl_fsm.sv:175$1921 ($eq).
Removed top 23 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880 ($add).
Removed top 15 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872 ($add).
Removed top 7 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864 ($add).
Removed top 3 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856 ($add).
Removed top 8 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973 ($lt).
Removed top 5 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956 ($lt).
Removed top 8 bits (of 9) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$and_94$adc_ctrl_intr.sv:77$2092 ($and).
Removed top 9 bits (of 10) from port A of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468 ($le).
Removed top 9 bits (of 10) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469 ($le).
Removed top 9 bits (of 10) from port A of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475 ($le).
Removed top 9 bits (of 10) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476 ($le).
Removed top 15 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$and_244$adc_ctrl_core.sv:107$1541 ($and).
Removed top 3 bits (of 4) from wire adc_ctrl.$flatten\u_reg.$verific$n3685$2597.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_reg.$verific$n3728$2599.

yosys> peepopt

3.76. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.78. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.79. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4767
   Number of wire bits:          17029
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1416
     $add                            4
     $adff                         219
     $adffe                         73
     $and                          274
     $bmux                          27
     $eq                            44
     $le                             4
     $logic_not                      2
     $lt                             2
     $mux                          415
     $ne                             3
     $not                          110
     $or                           132
     $pmux                           1
     $reduce_and                     3
     $reduce_bool                   51
     $reduce_or                     15
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> wreduce t:$mul

3.80. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc

3.81. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18

3.82. Executing TECHMAP pass (map to technology primitives).

3.82.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.82.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=10 -D DSP_B_MAXWIDTH=9 -D DSP_A_MINWIDTH=4 -D DSP_B_MINWIDTH=4 -D DSP_NAME=$__RS_MUL10X9

3.83. Executing TECHMAP pass (map to technology primitives).

3.83.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.83.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.84. Executing TECHMAP pass (map to technology primitives).

3.84.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.84.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> rs_dsp_simd

3.85. Executing RS_DSP_SIMD pass.

yosys> techmap -map +/rapidsilicon/genesis/dsp_final_map.v

3.86. Executing TECHMAP pass (map to technology primitives).

3.86.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.86.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> rs_dsp_io_regs

3.87. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.88. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module adc_ctrl:
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880 ($add).
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856.
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468 ($le): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469 ($le): merged with $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468.
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475 ($le): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476 ($le): merged with $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475.
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956 ($lt): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973 ($lt): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959 ($eq): merged with $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956.
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976 ($eq): merged with $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973.
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973, $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976: $auto$alumacc.cc:485:replace_alu$11098
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956, $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959: $auto$alumacc.cc:485:replace_alu$11109
  creating $alu cell for $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475, $flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476: $auto$alumacc.cc:485:replace_alu$11120
  creating $alu cell for $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468, $flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469: $auto$alumacc.cc:485:replace_alu$11135
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856: $auto$alumacc.cc:485:replace_alu$11150
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864: $auto$alumacc.cc:485:replace_alu$11153
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872: $auto$alumacc.cc:485:replace_alu$11156
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880: $auto$alumacc.cc:485:replace_alu$11159
  created 8 $alu and 0 $macc cells.

yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:262:slice$10934 ($adffe) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10934 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 2

yosys> stat

3.105. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4799
   Number of wire bits:          17277
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1424
     $adff                         219
     $adffe                         65
     $alu                            8
     $and                          274
     $bmux                          27
     $eq                            42
     $logic_not                      2
     $mux                          415
     $ne                             3
     $not                          118
     $or                           136
     $pmux                           1
     $reduce_and                     7
     $reduce_bool                   51
     $reduce_or                     19
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> memory -nomap

3.106. Executing MEMORY pass.

yosys> opt_mem

3.106.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.106.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.106.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.106.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.106.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11168'[0] in module `\adc_ctrl': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11165'[0] in module `\adc_ctrl': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11162'[0] in module `\adc_ctrl': no output FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$11168'[0] in module `\adc_ctrl': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$11165'[0] in module `\adc_ctrl': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$11162'[0] in module `\adc_ctrl': address FF has async set and/or reset, not supported.

yosys> opt_clean

3.106.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> memory_share

3.106.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.106.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.106.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> memory_collect

3.106.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.107. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4799
   Number of wire bits:          17277
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1424
     $adff                         219
     $adffe                         65
     $alu                            8
     $and                          274
     $bmux                          24
     $eq                            42
     $logic_not                      2
     $mem_v2                         3
     $mux                          415
     $ne                             3
     $not                          118
     $or                           136
     $pmux                           1
     $reduce_and                     7
     $reduce_bool                   51
     $reduce_or                     19
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> muxpack

3.108. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~277 debug messages>

yosys> opt_clean

3.109. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> memory_bram -rules +/rapidsilicon/genesis/brams.txt

3.110. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing adc_ctrl.$auto$memory_bmux2rom.cc:63:execute$11162:
  Properties: ports=1 bits=32 rports=1 wports=0 dbits=1 abits=5 words=32
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=992 dwaste=35 bwaste=36832 waste=36832 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2016 dwaste=17 bwaste=36832 waste=36832 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4064 dwaste=8 bwaste=36832 waste=36832 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8160 dwaste=3 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16352 dwaste=1 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32736 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=992 dwaste=35 bwaste=36832 waste=36832 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2016 dwaste=17 bwaste=36832 waste=36832 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4064 dwaste=8 bwaste=36832 waste=36832 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8160 dwaste=3 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16352 dwaste=1 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32736 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing adc_ctrl.$auto$memory_bmux2rom.cc:63:execute$11165:
  Properties: ports=1 bits=32 rports=1 wports=0 dbits=1 abits=5 words=32
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=992 dwaste=35 bwaste=36832 waste=36832 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2016 dwaste=17 bwaste=36832 waste=36832 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4064 dwaste=8 bwaste=36832 waste=36832 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8160 dwaste=3 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16352 dwaste=1 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32736 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=992 dwaste=35 bwaste=36832 waste=36832 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2016 dwaste=17 bwaste=36832 waste=36832 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4064 dwaste=8 bwaste=36832 waste=36832 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8160 dwaste=3 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16352 dwaste=1 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32736 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing adc_ctrl.$auto$memory_bmux2rom.cc:63:execute$11168:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=2 abits=5 words=32
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=992 dwaste=34 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2016 dwaste=16 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4064 dwaste=7 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8160 dwaste=2 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16352 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32736 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=992 dwaste=34 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2016 dwaste=16 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4064 dwaste=7 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8160 dwaste=2 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16352 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32736 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.

yosys> techmap -map +/rapidsilicon/genesis/brams_map.v

3.111. Executing TECHMAP pass (map to technology primitives).

3.111.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v:236: Warning: Range [2:0] select out of bounds on signal `\DOP': Setting 1 MSB bits to undef.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.111.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

yosys> pmuxtree

3.112. Executing PMUXTREE pass.

yosys> muxpack

3.113. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~304 debug messages>

yosys> memory_map

3.114. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11162 in module \adc_ctrl:
  created 32 $dff cells and 0 static cells of width 1.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11165 in module \adc_ctrl:
  created 32 $dff cells and 0 static cells of width 1.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11168 in module \adc_ctrl:
  created 32 $dff cells and 0 static cells of width 2.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.

yosys> stat

3.115. Printing statistics.

=== adc_ctrl ===

   Number of wires:               5219
   Number of wire bits:          18691
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1651
     $adff                         219
     $adffe                         65
     $alu                            8
     $and                          274
     $bmux                          24
     $dff                           96
     $eq                            42
     $logic_not                      2
     $mux                          536
     $ne                             3
     $not                          119
     $or                           141
     $reduce_and                     7
     $reduce_bool                   51
     $reduce_or                     27
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.116. Executing TECHMAP pass (map to technology primitives).

3.116.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.116.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.116.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$1f812f0514ea3255703342654e053e2c502325cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$fa8d9e4c2749d63ae521a69564d54ead1ad1232d\_90_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using template $paramod$79aa992f2eb7f354d4aaf651790713cf239111fa\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~3605 debug messages>

yosys> stat

3.117. Printing statistics.

=== adc_ctrl ===

   Number of wires:               6253
   Number of wire bits:          33301
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7029
     $_AND_                        665
     $_DFFE_PN0P_                  596
     $_DFFE_PN1P_                   11
     $_DFF_PN0_                    220
     $_DFF_PN1_                      7
     $_DFF_P_                      128
     $_MUX_                       3409
     $_NOT_                        267
     $_OR_                         696
     $_XOR_                       1030


yosys> opt_expr

3.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1806 debug messages>

yosys> opt_merge -nomux

3.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3324 debug messages>
Removed a total of 1108 cells.

yosys> opt_muxtree

3.120. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.121. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.123. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.124. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $auto$ff.cc:262:slice$17040 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18487 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18488 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15967 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14743 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18501 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18473 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18502 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18474 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18503 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17824 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17308 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14677 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14611 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14612 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14447 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14373 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14374 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17103 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12359 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11872 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12079 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12338 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12339 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12340 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12346 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12352 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12351 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12430 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18583 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18472 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17811 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18573 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18572 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18571 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18569 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18568 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18564 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18561 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18558 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18530 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18529 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18528 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18527 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18526 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18525 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18524 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18523 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18522 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18521 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17828 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17790 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17822 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17825 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17808 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17807 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18570 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18581 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18578 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18563 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18560 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18557 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12345 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15079 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11839 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11841 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11843 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11845 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11847 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11849 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11851 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11853 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11855 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11857 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11859 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11861 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11863 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11865 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11867 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11869 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11871 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11874 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11883 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12081 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12116 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12337 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12342 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12344 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12348 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12350 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12354 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$16882 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17788 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15869 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15708 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15078 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11838 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11840 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11842 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11844 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11846 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11848 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11850 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11852 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11854 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11856 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11858 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11860 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11862 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11864 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11866 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11868 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11870 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11873 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11882 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12080 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15868 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12115 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12336 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12341 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12343 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12347 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12349 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12353 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17787 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15707 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$16881 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15077 ($_DFF_P_) from module adc_ctrl (removing D path).

yosys> opt_clean

3.125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 408 unused cells and 1383 unused wires.
<suppressed ~417 debug messages>

yosys> opt_expr

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~93 debug messages>

yosys> opt_muxtree

3.127. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.128. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_share

3.130. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.131. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.132. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 75 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.134. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.135. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.137. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.138. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 3

yosys> opt_expr -full

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~344 debug messages>

yosys> techmap -map +/techmap.v

3.142. Executing TECHMAP pass (map to technology primitives).

3.142.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.142.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.143. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.145. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.146. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.147. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.148. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.149. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 75 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 1

yosys> abc -dff

3.151. Executing ABC pass (technology mapping using ABC).

3.151.1. Summary of detected clock domains:
  19 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_aon_ni, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, arst=!\rst_aon_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, arst=!\rst_aon_ni, srst={ }
  125 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_aon_ni, srst={ }
  12 cells in clk=\clk_i, en=\u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  710 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=\u_reg.u_adc_intr_status_oneshot.wr_en, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_o, arst=!\rst_aon_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_o, arst=!\rst_aon_ni, srst={ }
  40 cells in clk=\clk_i, en=\u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  67 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  76 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  78 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  81 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  81 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  428 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  369 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }

3.151.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_aon_ni
Extracted 19 gates and 22 wires to a netlist network with 2 inputs and 3 outputs.

3.151.2.1. Executing ABC.

3.151.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 71 gates and 99 wires to a netlist network with 27 inputs and 23 outputs.

3.151.3.1. Executing ABC.

3.151.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.151.4.1. Executing ABC.

3.151.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.151.5.1. Executing ABC.

3.151.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_aon_ni
Extracted 125 gates and 128 wires to a netlist network with 2 inputs and 13 outputs.

3.151.6.1. Executing ABC.

3.151.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 12 gates and 22 wires to a netlist network with 9 inputs and 6 outputs.

3.151.7.1. Executing ABC.

3.151.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.151.8.1. Executing ABC.

3.151.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 29 gates and 43 wires to a netlist network with 13 inputs and 9 outputs.

3.151.9.1. Executing ABC.

3.151.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 710 gates and 1043 wires to a netlist network with 331 inputs and 59 outputs.

3.151.10.1. Executing ABC.

3.151.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 22 gates and 33 wires to a netlist network with 11 inputs and 13 outputs.

3.151.11.1. Executing ABC.

3.151.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 29 gates and 49 wires to a netlist network with 19 inputs and 9 outputs.

3.151.12.1. Executing ABC.

3.151.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 60 gates and 96 wires to a netlist network with 34 inputs and 22 outputs.

3.151.13.1. Executing ABC.

3.151.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.151.14.1. Executing ABC.

3.151.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.151.15.1. Executing ABC.

3.151.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 21 gates and 35 wires to a netlist network with 12 inputs and 9 outputs.

3.151.16.1. Executing ABC.

3.151.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.151.17.1. Executing ABC.

3.151.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_adc_intr_status_oneshot.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 7 inputs and 7 outputs.

3.151.18.1. Executing ABC.

3.151.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.151.19.1. Executing ABC.

3.151.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 15 gates and 27 wires to a netlist network with 11 inputs and 7 outputs.

3.151.20.1. Executing ABC.

3.151.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 11 gates and 20 wires to a netlist network with 8 inputs and 3 outputs.

3.151.21.1. Executing ABC.

3.151.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.151.22.1. Executing ABC.

3.151.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 102 gates and 144 wires to a netlist network with 40 inputs and 37 outputs.

3.151.23.1. Executing ABC.

3.151.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 9 outputs.

3.151.24.1. Executing ABC.

3.151.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_o, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.151.25.1. Executing ABC.

3.151.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_o, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.151.26.1. Executing ABC.

3.151.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 40 gates and 77 wires to a netlist network with 36 inputs and 24 outputs.

3.151.27.1. Executing ABC.

3.151.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 67 gates and 99 wires to a netlist network with 31 inputs and 27 outputs.

3.151.28.1. Executing ABC.

3.151.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.151.29.1. Executing ABC.

3.151.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 76 gates and 129 wires to a netlist network with 52 inputs and 26 outputs.

3.151.30.1. Executing ABC.

3.151.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.151.31.1. Executing ABC.

3.151.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 27 outputs.

3.151.32.1. Executing ABC.

3.151.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.151.33.1. Executing ABC.

3.151.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.151.34.1. Executing ABC.

3.151.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.151.35.1. Executing ABC.

3.151.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 27 outputs.

3.151.36.1. Executing ABC.

3.151.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.151.37.1. Executing ABC.

3.151.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.151.38.1. Executing ABC.

3.151.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.151.39.1. Executing ABC.

3.151.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 78 gates and 133 wires to a netlist network with 54 inputs and 28 outputs.

3.151.40.1. Executing ABC.

3.151.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.151.41.1. Executing ABC.

3.151.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.151.42.1. Executing ABC.

3.151.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.151.43.1. Executing ABC.

3.151.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 26 outputs.

3.151.44.1. Executing ABC.

3.151.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.151.45.1. Executing ABC.

3.151.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 81 gates and 137 wires to a netlist network with 55 inputs and 30 outputs.

3.151.46.1. Executing ABC.

3.151.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.151.47.1. Executing ABC.

3.151.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.151.48.1. Executing ABC.

3.151.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.151.49.1. Executing ABC.

3.151.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 81 gates and 138 wires to a netlist network with 56 inputs and 31 outputs.

3.151.50.1. Executing ABC.

3.151.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.151.51.1. Executing ABC.

3.151.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.151.52.1. Executing ABC.

3.151.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.151.53.1. Executing ABC.

3.151.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 27 outputs.

3.151.54.1. Executing ABC.

3.151.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.151.55.1. Executing ABC.

3.151.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.151.56.1. Executing ABC.

3.151.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 9 outputs.

3.151.57.1. Executing ABC.

3.151.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 428 gates and 469 wires to a netlist network with 39 inputs and 36 outputs.

3.151.58.1. Executing ABC.

3.151.59. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 369 gates and 423 wires to a netlist network with 52 inputs and 51 outputs.

3.151.59.1. Executing ABC.

3.151.60. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

3.151.60.1. Executing ABC.

3.151.61. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 6 outputs.

3.151.61.1. Executing ABC.

yosys> abc -dff

3.152. Executing ABC pass (technology mapping using ABC).

3.152.1. Summary of detected clock domains:
  11 cells in clk=\clk_i, en=$abc$22798$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$23052$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21745$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21634$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$20574$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21416$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22718$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22887$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$21609$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  28 cells in clk=\clk_i, en=$abc$20581$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21538$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$22544$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22630$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$22212$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22297$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22464$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$22967$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22377$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22048$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21964$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  38 cells in clk=\clk_i, en=$abc$23374$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$22639$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$22555$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  63 cells in clk=\clk_i, en=$abc$22222$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$21974$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21623$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  26 cells in clk=\clk_i, en=$abc$21547$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$21598$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=1'0, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$21527$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$21464$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  71 cells in clk=\clk_i, en=$abc$21887$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$22306$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$22473$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$23061$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  127 cells in clk=\clk_aon_i, en=$abc$20434$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_aon_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$20562$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  25 cells in clk=\clk_i, en=$abc$21435$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$22388$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$22132$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$22141$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  63 cells in clk=\clk_i, en=$abc$22057$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$22808$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en=$abc$21645$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  751 cells in clk=\clk_i, en=$abc$20610$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$22727$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$23132$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  311 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  225 cells in clk=\clk_i, en=$abc$23766$u_reg.intg_err, arst=!\rst_ni, srst={ }
  54 cells in clk=\clk_i, en=$abc$22977$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_aon_i, en=$abc$20282$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_aon_ni, srst={ }
  75 cells in clk=\clk_i, en=$abc$20301$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  40 cells in clk=\clk_aon_i, en=1'0, arst=!\rst_aon_ni, srst={ }
  120 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$23993$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }

3.152.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22798$auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.152.2.1. Executing ABC.

3.152.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23052$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.152.3.1. Executing ABC.

3.152.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21745$auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.152.4.1. Executing ABC.

3.152.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21634$auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.152.5.1. Executing ABC.

3.152.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20574$auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.152.6.1. Executing ABC.

3.152.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21416$auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.152.7.1. Executing ABC.

3.152.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22718$auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.152.8.1. Executing ABC.

3.152.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22887$auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.152.9.1. Executing ABC.

3.152.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21609$auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.152.10.1. Executing ABC.

3.152.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20581$auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 28 gates and 41 wires to a netlist network with 13 inputs and 9 outputs.

3.152.11.1. Executing ABC.

3.152.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21538$auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.152.12.1. Executing ABC.

3.152.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22544$auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.152.13.1. Executing ABC.

3.152.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22630$auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.152.14.1. Executing ABC.

3.152.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22212$auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.152.15.1. Executing ABC.

3.152.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22297$auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.152.16.1. Executing ABC.

3.152.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22464$auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.152.17.1. Executing ABC.

3.152.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22967$auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.152.18.1. Executing ABC.

3.152.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22377$auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.152.19.1. Executing ABC.

3.152.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22048$auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.152.20.1. Executing ABC.

3.152.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21964$auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.152.21.1. Executing ABC.

3.152.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23374$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 38 gates and 74 wires to a netlist network with 36 inputs and 26 outputs.

3.152.22.1. Executing ABC.

3.152.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22639$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 59 gates and 97 wires to a netlist network with 38 inputs and 23 outputs.

3.152.23.1. Executing ABC.

3.152.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22555$auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.152.24.1. Executing ABC.

3.152.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22222$auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 63 gates and 105 wires to a netlist network with 42 inputs and 23 outputs.

3.152.25.1. Executing ABC.

3.152.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21974$auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.152.26.1. Executing ABC.

3.152.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21623$auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 3 outputs.

3.152.27.1. Executing ABC.

3.152.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21547$auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 26 gates and 44 wires to a netlist network with 18 inputs and 9 outputs.

3.152.28.1. Executing ABC.

3.152.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.152.29.1. Executing ABC.

3.152.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21598$auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.152.30.1. Executing ABC.

3.152.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by 1'0, asynchronously reset by !\rst_ni
Extracted 9 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.152.31.1. Executing ABC.

3.152.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21527$auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.152.32.1. Executing ABC.

3.152.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21464$auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 55 gates and 82 wires to a netlist network with 27 inputs and 20 outputs.

3.152.33.1. Executing ABC.

3.152.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21887$auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 71 gates and 110 wires to a netlist network with 39 inputs and 27 outputs.

3.152.34.1. Executing ABC.

3.152.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22306$auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 58 gates and 95 wires to a netlist network with 37 inputs and 26 outputs.

3.152.35.1. Executing ABC.

3.152.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22473$auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 62 gates and 103 wires to a netlist network with 41 inputs and 26 outputs.

3.152.36.1. Executing ABC.

3.152.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 57 gates and 93 wires to a netlist network with 36 inputs and 26 outputs.

3.152.37.1. Executing ABC.

3.152.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23061$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 68 gates and 114 wires to a netlist network with 46 inputs and 26 outputs.

3.152.38.1. Executing ABC.

3.152.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$20434$auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_aon_ni
Extracted 127 gates and 128 wires to a netlist network with 0 inputs and 1 outputs.

3.152.39.1. Executing ABC.

3.152.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20562$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 7 outputs.

3.152.40.1. Executing ABC.

3.152.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21435$auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 25 gates and 40 wires to a netlist network with 15 inputs and 10 outputs.

3.152.41.1. Executing ABC.

3.152.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22388$auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 59 gates and 97 wires to a netlist network with 38 inputs and 23 outputs.

3.152.42.1. Executing ABC.

3.152.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22132$auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.152.43.1. Executing ABC.

3.152.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22141$auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 59 gates and 97 wires to a netlist network with 38 inputs and 27 outputs.

3.152.44.1. Executing ABC.

3.152.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22057$auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 63 gates and 105 wires to a netlist network with 42 inputs and 23 outputs.

3.152.45.1. Executing ABC.

3.152.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22808$auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 64 gates and 107 wires to a netlist network with 43 inputs and 23 outputs.

3.152.46.1. Executing ABC.

3.152.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21645$auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 98 gates and 138 wires to a netlist network with 40 inputs and 37 outputs.

3.152.47.1. Executing ABC.

3.152.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20610$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 751 gates and 1082 wires to a netlist network with 331 inputs and 59 outputs.

3.152.48.1. Executing ABC.

3.152.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22727$auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 62 gates and 103 wires to a netlist network with 41 inputs and 26 outputs.

3.152.49.1. Executing ABC.

3.152.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23132$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 9 outputs.

3.152.50.1. Executing ABC.

3.152.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 311 gates and 363 wires to a netlist network with 52 inputs and 51 outputs.

3.152.51.1. Executing ABC.

3.152.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23766$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

3.152.52.1. Executing ABC.

3.152.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22977$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 54 gates and 87 wires to a netlist network with 33 inputs and 23 outputs.

3.152.53.1. Executing ABC.

3.152.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$20282$auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_aon_ni
Extracted 18 gates and 19 wires to a netlist network with 0 inputs and 1 outputs.

3.152.54.1. Executing ABC.

3.152.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20301$auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 75 gates and 107 wires to a netlist network with 32 inputs and 28 outputs.

3.152.55.1. Executing ABC.

3.152.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by 1'0, asynchronously reset by !\rst_aon_ni
Extracted 40 gates and 50 wires to a netlist network with 10 inputs and 20 outputs.

3.152.56.1. Executing ABC.

3.152.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 120 gates and 144 wires to a netlist network with 24 inputs and 24 outputs.

3.152.57.1. Executing ABC.

3.152.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23993$auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.152.58.1. Executing ABC.

yosys> abc -dff

3.153. Executing ABC pass (technology mapping using ABC).

3.153.1. Summary of detected clock domains:
  10 cells in clk=\clk_i, en=$abc$24003$abc$22798$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=1'0, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24015$abc$23052$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24025$abc$21745$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24036$abc$21634$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$24047$abc$20574$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24054$abc$21416$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$26831$abc$23766$u_reg.intg_err, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24659$abc$21527$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$25222$abc$22132$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24064$abc$22718$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24075$abc$22887$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24637$abc$21598$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$24086$abc$21609$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24627$abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$25108$abc$20562$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  74 cells in clk=\clk_i, en=$abc$27130$abc$20301$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24123$abc$21538$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24133$abc$22544$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24145$abc$22630$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24156$abc$22212$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24168$abc$22297$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  63 cells in clk=\clk_i, en=$abc$27057$abc$22977$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24178$abc$22464$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24188$abc$22967$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$24200$abc$22377$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24211$abc$22048$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$abc$25151$abc$22388$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24222$abc$21964$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  28 cells in clk=\clk_i, en=$abc$24598$abc$21547$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$25030$abc$23061$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  91 cells in clk=\clk_i, en=$abc$25450$abc$21645$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_aon_i, en=1'0, arst=!\rst_aon_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$26434$abc$23132$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  34 cells in clk=\clk_i, en=$abc$24094$abc$20581$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  66 cells in clk=\clk_i, en=$abc$24954$abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  53 cells in clk=\clk_i, en=$abc$24878$abc$22473$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  67 cells in clk=\clk_i, en=$abc$25308$abc$22057$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  753 cells in clk=\clk_i, en=$abc$25550$abc$20610$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  63 cells in clk=\clk_i, en=$abc$26358$abc$22727$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  37 cells in clk=\clk_i, en=$abc$24232$abc$23374$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$24299$abc$22639$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$24802$abc$22306$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  24 cells in clk=\clk_i, en=$abc$25121$abc$21435$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$24727$abc$21887$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$24370$abc$22555$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  56 cells in clk=\clk_i, en=$abc$25231$abc$22141$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$24443$abc$22222$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  53 cells in clk=\clk_i, en=$abc$24671$abc$21464$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$25379$abc$22808$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$24514$abc$21974$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  303 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  17 cells in clk=\clk_i, en=$abc$24587$abc$21623$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  120 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$27484$abc$23993$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }

3.153.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24003$abc$22798$auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.153.2.1. Executing ABC.

3.153.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by 1'0, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 1 outputs.

3.153.3.1. Executing ABC.

3.153.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24015$abc$23052$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.153.4.1. Executing ABC.

3.153.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24025$abc$21745$auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.153.5.1. Executing ABC.

3.153.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24036$abc$21634$auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.153.6.1. Executing ABC.

3.153.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24047$abc$20574$auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.153.7.1. Executing ABC.

3.153.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24054$abc$21416$auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.153.8.1. Executing ABC.

3.153.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26831$abc$23766$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

3.153.9.1. Executing ABC.

3.153.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24659$abc$21527$auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 7 outputs.

3.153.10.1. Executing ABC.

3.153.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25222$abc$22132$auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.153.11.1. Executing ABC.

3.153.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24064$abc$22718$auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.153.12.1. Executing ABC.

3.153.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24075$abc$22887$auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.153.13.1. Executing ABC.

3.153.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24637$abc$21598$auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.153.14.1. Executing ABC.

3.153.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24086$abc$21609$auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.153.15.1. Executing ABC.

3.153.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24627$abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.153.16.1. Executing ABC.

3.153.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25108$abc$20562$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 6 outputs.

3.153.17.1. Executing ABC.

3.153.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27130$abc$20301$auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 74 gates and 105 wires to a netlist network with 31 inputs and 27 outputs.

3.153.18.1. Executing ABC.

3.153.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24123$abc$21538$auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.153.19.1. Executing ABC.

3.153.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24133$abc$22544$auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.153.20.1. Executing ABC.

3.153.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24145$abc$22630$auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.153.21.1. Executing ABC.

3.153.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24156$abc$22212$auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.153.22.1. Executing ABC.

3.153.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24168$abc$22297$auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.153.23.1. Executing ABC.

3.153.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27057$abc$22977$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 63 gates and 106 wires to a netlist network with 43 inputs and 26 outputs.

3.153.24.1. Executing ABC.

3.153.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24178$abc$22464$auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.153.25.1. Executing ABC.

3.153.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24188$abc$22967$auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.153.26.1. Executing ABC.

3.153.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24200$abc$22377$auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 9 outputs.

3.153.27.1. Executing ABC.

3.153.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24211$abc$22048$auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.153.28.1. Executing ABC.

3.153.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25151$abc$22388$auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 69 gates and 116 wires to a netlist network with 47 inputs and 27 outputs.

3.153.29.1. Executing ABC.

3.153.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24222$abc$21964$auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.153.30.1. Executing ABC.

3.153.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24598$abc$21547$auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 28 gates and 48 wires to a netlist network with 20 inputs and 9 outputs.

3.153.31.1. Executing ABC.

3.153.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25030$abc$23061$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 59 gates and 96 wires to a netlist network with 37 inputs and 24 outputs.

3.153.32.1. Executing ABC.

3.153.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25450$abc$21645$auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 91 gates and 126 wires to a netlist network with 35 inputs and 30 outputs.

3.153.33.1. Executing ABC.

3.153.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by 1'0, asynchronously reset by !\rst_aon_ni
Extracted 20 gates and 30 wires to a netlist network with 10 inputs and 10 outputs.

3.153.34.1. Executing ABC.

3.153.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26434$abc$23132$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 9 outputs.

3.153.35.1. Executing ABC.

3.153.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24094$abc$20581$auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 34 gates and 52 wires to a netlist network with 18 inputs and 14 outputs.

3.153.36.1. Executing ABC.

3.153.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24954$abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 66 gates and 109 wires to a netlist network with 43 inputs and 27 outputs.

3.153.37.1. Executing ABC.

3.153.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24878$abc$22473$auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 53 gates and 86 wires to a netlist network with 33 inputs and 23 outputs.

3.153.38.1. Executing ABC.

3.153.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25308$abc$22057$auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 67 gates and 114 wires to a netlist network with 47 inputs and 23 outputs.

3.153.39.1. Executing ABC.

3.153.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25550$abc$20610$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 753 gates and 1084 wires to a netlist network with 331 inputs and 59 outputs.

3.153.40.1. Executing ABC.

3.153.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26358$abc$22727$auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 63 gates and 105 wires to a netlist network with 42 inputs and 26 outputs.

3.153.41.1. Executing ABC.

3.153.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24232$abc$23374$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 37 gates and 63 wires to a netlist network with 26 inputs and 26 outputs.

3.153.42.1. Executing ABC.

3.153.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24299$abc$22639$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 60 gates and 98 wires to a netlist network with 38 inputs and 24 outputs.

3.153.43.1. Executing ABC.

3.153.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24802$abc$22306$auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 68 gates and 113 wires to a netlist network with 45 inputs and 26 outputs.

3.153.44.1. Executing ABC.

3.153.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25121$abc$21435$auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 24 gates and 38 wires to a netlist network with 14 inputs and 10 outputs.

3.153.45.1. Executing ABC.

3.153.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24727$abc$21887$auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 73 gates and 114 wires to a netlist network with 41 inputs and 28 outputs.

3.153.46.1. Executing ABC.

3.153.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24370$abc$22555$auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 73 gates and 124 wires to a netlist network with 51 inputs and 25 outputs.

3.153.47.1. Executing ABC.

3.153.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25231$abc$22141$auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 56 gates and 89 wires to a netlist network with 33 inputs and 27 outputs.

3.153.48.1. Executing ABC.

3.153.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24443$abc$22222$auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 55 gates and 89 wires to a netlist network with 34 inputs and 23 outputs.

3.153.49.1. Executing ABC.

3.153.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24671$abc$21464$auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 53 gates and 78 wires to a netlist network with 25 inputs and 20 outputs.

3.153.50.1. Executing ABC.

3.153.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25379$abc$22808$auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 57 gates and 94 wires to a netlist network with 37 inputs and 23 outputs.

3.153.51.1. Executing ABC.

3.153.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24514$abc$21974$auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 73 gates and 124 wires to a netlist network with 51 inputs and 25 outputs.

3.153.52.1. Executing ABC.

3.153.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 303 gates and 355 wires to a netlist network with 52 inputs and 51 outputs.

3.153.53.1. Executing ABC.

3.153.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24587$abc$21623$auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 10 outputs.

3.153.54.1. Executing ABC.

3.153.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 120 gates and 144 wires to a netlist network with 24 inputs and 24 outputs.

3.153.55.1. Executing ABC.

3.153.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27484$abc$23993$auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.153.56.1. Executing ABC.

yosys> abc -dff

3.154. Executing ABC pass (technology mapping using ABC).

3.154.1. Summary of detected clock domains:
  10 cells in clk=\clk_i, en=$abc$27500$abc$24003$abc$22798$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=1'0, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27515$abc$24015$abc$23052$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27527$abc$24025$abc$21745$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27538$abc$24036$abc$21634$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$27549$abc$24047$abc$20574$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27556$abc$24054$abc$21416$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  228 cells in clk=\clk_i, en=$abc$27567$abc$26831$abc$23766$u_reg.intg_err, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27797$abc$24659$abc$21527$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27808$abc$25222$abc$22132$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27819$abc$24064$abc$22718$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27831$abc$24075$abc$22887$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27842$abc$24637$abc$21598$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$27852$abc$24086$abc$21609$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27860$abc$24627$abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27871$abc$25108$abc$20562$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27958$abc$24123$abc$21538$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27970$abc$24133$abc$22544$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27982$abc$24145$abc$22630$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27993$abc$24156$abc$22212$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_i, en=$abc$29609$abc$24232$abc$23374$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  63 cells in clk=\clk_i, en=$abc$29535$abc$26358$abc$22727$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$28003$abc$24168$abc$22297$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$28088$abc$24178$abc$22464$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$28098$abc$24188$abc$22967$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$28108$abc$24200$abc$22377$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$28121$abc$24211$abc$22048$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$29909$abc$24370$abc$22555$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  66 cells in clk=\clk_i, en=$abc$29982$abc$25231$abc$22141$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$28131$abc$25151$abc$22388$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  75 cells in clk=\clk_i, en=$abc$29833$abc$24727$abc$21887$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$28013$abc$27057$abc$22977$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$28206$abc$24222$abc$21964$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  27 cells in clk=\clk_i, en=$abc$29803$abc$25121$abc$21435$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$29656$abc$24299$abc$22639$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$28510$abc$24954$abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  34 cells in clk=\clk_i, en=$abc$28473$abc$24094$abc$20581$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$30057$abc$24443$abc$22222$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  75 cells in clk=\clk_i, en=$abc$27883$abc$27130$abc$20301$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  52 cells in clk=\clk_i, en=$abc$30128$abc$24671$abc$21464$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  30 cells in clk=\clk_i, en=$abc$28216$abc$24598$abc$21547$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$28245$abc$25030$abc$23061$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$29728$abc$24802$abc$22306$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$30184$abc$25379$abc$22808$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  90 cells in clk=\clk_i, en=$abc$28317$abc$25450$abc$21645$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_aon_i, en=1'0, arst=!\rst_aon_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$28460$abc$26434$abc$23132$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_i, en=$abc$30713$abc$24587$abc$21623$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  67 cells in clk=\clk_i, en=$abc$28585$abc$24878$abc$22473$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  754 cells in clk=\clk_i, en=$abc$28727$abc$25550$abc$20610$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  56 cells in clk=\clk_i, en=$abc$28656$abc$25308$abc$22057$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  305 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$30255$abc$24514$abc$21974$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  120 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$30950$abc$27484$abc$23993$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }

3.154.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27500$abc$24003$abc$22798$auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.154.2.1. Executing ABC.

3.154.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by 1'0, asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 2 outputs.

3.154.3.1. Executing ABC.

3.154.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27515$abc$24015$abc$23052$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.154.4.1. Executing ABC.

3.154.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27527$abc$24025$abc$21745$auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.154.5.1. Executing ABC.

3.154.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27538$abc$24036$abc$21634$auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.154.6.1. Executing ABC.

3.154.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27549$abc$24047$abc$20574$auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.154.7.1. Executing ABC.

3.154.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27556$abc$24054$abc$21416$auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.154.8.1. Executing ABC.

3.154.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27567$abc$26831$abc$23766$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 228 gates and 319 wires to a netlist network with 90 inputs and 2 outputs.

3.154.9.1. Executing ABC.

3.154.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27797$abc$24659$abc$21527$auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.154.10.1. Executing ABC.

3.154.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27808$abc$25222$abc$22132$auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.154.11.1. Executing ABC.

3.154.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27819$abc$24064$abc$22718$auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.154.12.1. Executing ABC.

3.154.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27831$abc$24075$abc$22887$auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.154.13.1. Executing ABC.

3.154.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27842$abc$24637$abc$21598$auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.154.14.1. Executing ABC.

3.154.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27852$abc$24086$abc$21609$auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.154.15.1. Executing ABC.

3.154.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27860$abc$24627$abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.154.16.1. Executing ABC.

3.154.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27871$abc$25108$abc$20562$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 6 outputs.

3.154.17.1. Executing ABC.

3.154.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27958$abc$24123$abc$21538$auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.154.18.1. Executing ABC.

3.154.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27970$abc$24133$abc$22544$auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.154.19.1. Executing ABC.

3.154.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27982$abc$24145$abc$22630$auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.154.20.1. Executing ABC.

3.154.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27993$abc$24156$abc$22212$auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.154.21.1. Executing ABC.

3.154.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29609$abc$24232$abc$23374$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 20 gates and 36 wires to a netlist network with 16 inputs and 20 outputs.

3.154.22.1. Executing ABC.

3.154.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29535$abc$26358$abc$22727$auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 63 gates and 104 wires to a netlist network with 41 inputs and 27 outputs.

3.154.23.1. Executing ABC.

3.154.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28003$abc$24168$abc$22297$auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.154.24.1. Executing ABC.

3.154.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28088$abc$24178$abc$22464$auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.154.25.1. Executing ABC.

3.154.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28098$abc$24188$abc$22967$auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.154.26.1. Executing ABC.

3.154.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28108$abc$24200$abc$22377$auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 9 outputs.

3.154.27.1. Executing ABC.

3.154.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28121$abc$24211$abc$22048$auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.154.28.1. Executing ABC.

3.154.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29909$abc$24370$abc$22555$auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.154.29.1. Executing ABC.

3.154.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29982$abc$25231$abc$22141$auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 66 gates and 112 wires to a netlist network with 46 inputs and 26 outputs.

3.154.30.1. Executing ABC.

3.154.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28131$abc$25151$abc$22388$auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 55 gates and 89 wires to a netlist network with 34 inputs and 26 outputs.

3.154.31.1. Executing ABC.

3.154.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29833$abc$24727$abc$21887$auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 75 gates and 116 wires to a netlist network with 41 inputs and 27 outputs.

3.154.32.1. Executing ABC.

3.154.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28013$abc$27057$abc$22977$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 64 gates and 105 wires to a netlist network with 41 inputs and 25 outputs.

3.154.33.1. Executing ABC.

3.154.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28206$abc$24222$abc$21964$auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.154.34.1. Executing ABC.

3.154.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29803$abc$25121$abc$21435$auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 27 gates and 46 wires to a netlist network with 19 inputs and 13 outputs.

3.154.35.1. Executing ABC.

3.154.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29656$abc$24299$abc$22639$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 59 gates and 97 wires to a netlist network with 38 inputs and 23 outputs.

3.154.36.1. Executing ABC.

3.154.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28510$abc$24954$abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 58 gates and 95 wires to a netlist network with 37 inputs and 26 outputs.

3.154.37.1. Executing ABC.

3.154.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28473$abc$24094$abc$20581$auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 34 gates and 52 wires to a netlist network with 18 inputs and 14 outputs.

3.154.38.1. Executing ABC.

3.154.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30057$abc$24443$abc$22222$auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 60 gates and 100 wires to a netlist network with 40 inputs and 26 outputs.

3.154.39.1. Executing ABC.

3.154.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27883$abc$27130$abc$20301$auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 75 gates and 107 wires to a netlist network with 32 inputs and 28 outputs.

3.154.40.1. Executing ABC.

3.154.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30128$abc$24671$abc$21464$auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 52 gates and 76 wires to a netlist network with 24 inputs and 17 outputs.

3.154.41.1. Executing ABC.

3.154.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28216$abc$24598$abc$21547$auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 30 gates and 51 wires to a netlist network with 21 inputs and 12 outputs.

3.154.42.1. Executing ABC.

3.154.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28245$abc$25030$abc$23061$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 59 gates and 98 wires to a netlist network with 39 inputs and 26 outputs.

3.154.43.1. Executing ABC.

3.154.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29728$abc$24802$abc$22306$auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 62 gates and 102 wires to a netlist network with 40 inputs and 24 outputs.

3.154.44.1. Executing ABC.

3.154.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30184$abc$25379$abc$22808$auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 64 gates and 106 wires to a netlist network with 42 inputs and 24 outputs.

3.154.45.1. Executing ABC.

3.154.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28317$abc$25450$abc$21645$auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 90 gates and 124 wires to a netlist network with 34 inputs and 30 outputs.

3.154.46.1. Executing ABC.

3.154.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by 1'0, asynchronously reset by !\rst_aon_ni
Extracted 20 gates and 30 wires to a netlist network with 10 inputs and 10 outputs.

3.154.47.1. Executing ABC.

3.154.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28460$abc$26434$abc$23132$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 9 outputs.

3.154.48.1. Executing ABC.

3.154.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30713$abc$24587$abc$21623$auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 18 gates and 32 wires to a netlist network with 14 inputs and 10 outputs.

3.154.49.1. Executing ABC.

3.154.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28585$abc$24878$abc$22473$auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 67 gates and 112 wires to a netlist network with 45 inputs and 23 outputs.

3.154.50.1. Executing ABC.

3.154.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28727$abc$25550$abc$20610$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 754 gates and 1085 wires to a netlist network with 331 inputs and 59 outputs.

3.154.51.1. Executing ABC.

3.154.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28656$abc$25308$abc$22057$auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 56 gates and 90 wires to a netlist network with 34 inputs and 24 outputs.

3.154.52.1. Executing ABC.

3.154.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 305 gates and 357 wires to a netlist network with 52 inputs and 50 outputs.

3.154.53.1. Executing ABC.

3.154.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30255$abc$24514$abc$21974$auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.154.54.1. Executing ABC.

3.154.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 120 gates and 144 wires to a netlist network with 24 inputs and 24 outputs.

3.154.55.1. Executing ABC.

3.154.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30950$abc$27484$abc$23993$auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.154.56.1. Executing ABC.

yosys> opt_ffinv

3.155. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~39 debug messages>

yosys> opt_merge -nomux

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

yosys> opt_muxtree

3.158. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.159. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.160. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.161. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$33746$auto$blifparse.cc:381:parse_blif$33999 in front of them:
        $abc$33746$auto$blifparse.cc:381:parse_blif$33997
        $abc$33746$auto$blifparse.cc:381:parse_blif$33998


yosys> opt_dff -nosdff -sat

3.162. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32722 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32721 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32715 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$30977$auto$blifparse.cc:362:parse_blif$30978 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32720 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32717 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32718 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32706 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32703 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32716 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32709 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32711 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32710 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32712 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32714 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32719 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32713 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32707 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32708 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32704 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32702$auto$blifparse.cc:362:parse_blif$32705 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32705 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32704 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32708 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32707 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32713 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32719 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32714 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32712 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32710 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32711 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32709 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32716 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32703 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32706 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32718 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32717 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32720 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$30977$auto$blifparse.cc:362:parse_blif$30978 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32715 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32721 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32702$auto$blifparse.cc:362:parse_blif$32722 ($_DLATCH_N_) from module adc_ctrl.

yosys> opt_clean

3.163. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 2 unused cells and 18837 unused wires.
<suppressed ~777 debug messages>

yosys> opt_expr

3.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.165. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.166. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.167. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_share

3.168. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.169. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$31391$auto$blifparse.cc:362:parse_blif$31392 ($_DFFE_PN0P_) from module adc_ctrl.

yosys> opt_clean

3.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.172. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.173. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.174. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.175. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.176. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.177. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_muxtree

3.179. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.180. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.182. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.183. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.184. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.185. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 4

yosys> bmuxmap

3.186. Executing BMUXMAP pass.

yosys> demuxmap

3.187. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_X9VJe0/abc_tmp_1.scr

3.188. Executing ABC pass (technology mapping using ABC).

3.188.1. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 2197 gates and 2895 wires to a netlist network with 697 inputs and 631 outputs.

3.188.1.1. Executing ABC.
DE:   #PIs = 697  #Luts =  1011  Max Lvl =  11  Avg Lvl =   9.68  [   0.21 sec. at Pass 0]
DE:   #PIs = 697  #Luts =   941  Max Lvl =  12  Avg Lvl =  10.52  [  10.34 sec. at Pass 1]
DE:   #PIs = 697  #Luts =   931  Max Lvl =  11  Avg Lvl =   9.10  [   1.89 sec. at Pass 2]
DE:   #PIs = 697  #Luts =   929  Max Lvl =  11  Avg Lvl =   9.05  [   4.63 sec. at Pass 3]
DE:   #PIs = 697  #Luts =   925  Max Lvl =  10  Avg Lvl =   8.85  [   2.47 sec. at Pass 4]
DE:   #PIs = 697  #Luts =   921  Max Lvl =  11  Avg Lvl =   9.72  [   5.15 sec. at Pass 5]
DE:   #PIs = 697  #Luts =   921  Max Lvl =  11  Avg Lvl =   9.72  [   3.00 sec. at Pass 6]
DE:   #PIs = 697  #Luts =   913  Max Lvl =  11  Avg Lvl =   9.71  [   3.24 sec. at Pass 7]
DE:   #PIs = 697  #Luts =   913  Max Lvl =  11  Avg Lvl =   9.71  [   2.31 sec. at Pass 8]
DE:   #PIs = 697  #Luts =   909  Max Lvl =  10  Avg Lvl =   8.35  [   6.43 sec. at Pass 9]
DE:   #PIs = 697  #Luts =   909  Max Lvl =  10  Avg Lvl =   8.35  [   4.69 sec. at Pass 10]
DE:   #PIs = 697  #Luts =   905  Max Lvl =   9  Avg Lvl =   7.72  [   7.20 sec. at Pass 11]
DE:   #PIs = 697  #Luts =   905  Max Lvl =   9  Avg Lvl =   7.72  [   4.07 sec. at Pass 12]
DE:   #PIs = 697  #Luts =   905  Max Lvl =   9  Avg Lvl =   7.72  [   7.57 sec. at Pass 13]
DE:   #PIs = 697  #Luts =   905  Max Lvl =   9  Avg Lvl =   7.72  [   3.80 sec. at Pass 14]
DE:   #PIs = 697  #Luts =   905  Max Lvl =   9  Avg Lvl =   7.72  [   0.98 sec. at Pass 15]

yosys> opt_expr

3.189. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.190. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.191. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.192. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.193. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.194. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.195. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.196. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 2920 unused wires.
<suppressed ~135 debug messages>

yosys> opt_expr

3.197. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.198. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 2 inverters.

yosys> stat

3.199. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4515
   Number of wire bits:          14895
   Number of public wires:        3065
   Number of public wire bits:   13445
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1610
     $_DFFE_PN0P_                  494
     $_DFF_PN0_                    209
     $_DFF_PN1_                      2
     $lut                          904
     $mux                            1


yosys> shregmap -minlen 8 -maxlen 20

3.200. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.201. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.202. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4515
   Number of wire bits:          14895
   Number of public wires:        3065
   Number of public wire bits:   13445
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1610
     $_DFFE_PN0P_                  494
     $_DFF_PN0_                    209
     $_DFF_PN1_                      2
     $lut                          904
     $mux                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.203. Executing TECHMAP pass (map to technology primitives).

3.203.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.203.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.203.3. Continuing TECHMAP pass.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~1746 debug messages>

yosys> opt_expr -mux_undef

3.204. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~18817 debug messages>

yosys> simplemap

3.205. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.206. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge

3.207. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~10629 debug messages>
Removed a total of 3543 cells.

yosys> opt_dff -nodffe -nosdff

3.208. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.209. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 5637 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.210. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~392 debug messages>

yosys> opt_merge -nomux

3.211. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.212. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.213. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.214. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.215. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.216. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.217. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 45 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.218. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_X9VJe0/abc_tmp_2.scr

3.219. Executing ABC pass (technology mapping using ABC).

3.219.1. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 2921 gates and 3619 wires to a netlist network with 696 inputs and 629 outputs.

3.219.1.1. Executing ABC.
DE:   #PIs = 696  #Luts =   904  Max Lvl =  10  Avg Lvl =   7.83  [   0.28 sec. at Pass 0]
DE:   #PIs = 696  #Luts =   904  Max Lvl =  10  Avg Lvl =   7.83  [   8.78 sec. at Pass 1]
DE:   #PIs = 696  #Luts =   904  Max Lvl =  10  Avg Lvl =   7.83  [   2.13 sec. at Pass 2]
DE:   #PIs = 696  #Luts =   904  Max Lvl =  10  Avg Lvl =   7.83  [   5.09 sec. at Pass 3]
DE:   #PIs = 696  #Luts =   903  Max Lvl =  12  Avg Lvl =  10.24  [   4.02 sec. at Pass 4]
DE:   #PIs = 696  #Luts =   903  Max Lvl =  11  Avg Lvl =   8.95  [   5.36 sec. at Pass 5]
DE:   #PIs = 696  #Luts =   903  Max Lvl =  11  Avg Lvl =   8.95  [   1.83 sec. at Pass 6]
DE:   #PIs = 696  #Luts =   903  Max Lvl =  11  Avg Lvl =   8.95  [   5.20 sec. at Pass 7]
DE:   #PIs = 696  #Luts =   903  Max Lvl =  11  Avg Lvl =   8.95  [   4.21 sec. at Pass 8]
DE:   #PIs = 696  #Luts =   903  Max Lvl =  11  Avg Lvl =   8.95  [   1.42 sec. at Pass 9]

yosys> opt_expr

3.220. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.221. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.222. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.223. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.224. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.225. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.226. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.227. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 3154 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.228. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.229. Executing HIERARCHY pass (managing design hierarchy).

3.229.1. Analyzing design hierarchy..
Top module:  \adc_ctrl

3.229.2. Analyzing design hierarchy..
Top module:  \adc_ctrl
Removed 0 unused modules.

yosys> stat

3.230. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4512
   Number of wire bits:          14892
   Number of public wires:        3065
   Number of public wire bits:   13445
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1608
     $lut                          903
     dffsre                        705


yosys> opt_clean -purge

3.231. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 2944 unused wires.
<suppressed ~2944 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.232. Executing Verilog backend.
Dumping module `\adc_ctrl'.

Warnings: 125 unique messages, 125 total
End of script. Logfile hash: 5eea1174e3, CPU: user 23.71s system 0.61s, MEM: 96.86 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 94% 6x abc (325 sec), 1% 27x opt_dff (5 sec), ...
real 195.35
user 327.39
sys 18.35
