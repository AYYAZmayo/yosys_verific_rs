
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.140
 Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_mubi_pkg.sv ast_pkg.sv adc_ctrl_reg_pkg.sv prim_alert_pkg.sv prim_pkg.sv prim_secded_pkg.sv top_pkg.sv prim_subreg_pkg.sv tlul_pkg.sv adc_ctrl.sv adc_ctrl_core.sv adc_ctrl_fsm.sv adc_ctrl_intr.sv adc_ctrl_reg_top.sv prim_alert_sender.sv prim_buf.sv prim_generic_buf.sv prim_subreg.sv prim_generic_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_flop_2sync.sv prim_generic_flop.sv tlul_cmd_intg_chk.sv prim_secded_inv_64_57_dec.sv tlul_data_integ_dec.sv prim_secded_inv_39_32_dec.sv tlul_rsp_intg_gen.sv prim_secded_inv_64_57_enc.sv tlul_data_integ_enc.sv prim_secded_inv_39_32_enc.sv tlul_adapter_reg.sv tlul_err.sv prim_sync_reqack.sv prim_reg_cdc.sv prim_subreg_ext.sv prim_pulse_sync.sv prim_intr_hw.sv

yosys> verific -sv prim_mubi_pkg.sv ast_pkg.sv adc_ctrl_reg_pkg.sv prim_alert_pkg.sv prim_pkg.sv prim_secded_pkg.sv top_pkg.sv prim_subreg_pkg.sv tlul_pkg.sv adc_ctrl.sv adc_ctrl_core.sv adc_ctrl_fsm.sv adc_ctrl_intr.sv adc_ctrl_reg_top.sv prim_alert_sender.sv prim_buf.sv prim_generic_buf.sv prim_subreg.sv prim_generic_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_flop_2sync.sv prim_generic_flop.sv tlul_cmd_intg_chk.sv prim_secded_inv_64_57_dec.sv tlul_data_integ_dec.sv prim_secded_inv_39_32_dec.sv tlul_rsp_intg_gen.sv prim_secded_inv_64_57_enc.sv tlul_data_integ_enc.sv prim_secded_inv_39_32_enc.sv tlul_adapter_reg.sv tlul_err.sv prim_sync_reqack.sv prim_reg_cdc.sv prim_subreg_ext.sv prim_pulse_sync.sv prim_intr_hw.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_pkg.sv'
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:15: parameter 'NumAlerts' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:16: parameter 'NumIoRails' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:17: parameter 'AsSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:18: parameter 'CgSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:19: parameter 'GdSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:20: parameter 'TsHiSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:21: parameter 'TsLoSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:22: parameter 'FlaSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:23: parameter 'OtpSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:24: parameter 'Ot0Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:25: parameter 'Ot1Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:26: parameter 'Ot2Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:27: parameter 'Ot3Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:28: parameter 'Ot4Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:29: parameter 'Ot5Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:31: parameter 'Lc2HcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:32: parameter 'Hc2LcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:34: parameter 'EntropyStreams' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:35: parameter 'AdcChannels' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:36: parameter 'AdcDataWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:37: parameter 'UsbCalibWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:38: parameter 'Ast2PadOutWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:39: parameter 'Pad2AstInWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:43: parameter 'LfsrWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:46: parameter 'RndCnstLfsrSeedDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:47: parameter 'RndCnstLfsrPermDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:95: parameter 'AST_RST_DEFAULT' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:10: parameter 'NumAdcFilter' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:11: parameter 'NumAdcChannel' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:12: parameter 'NumAlerts' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:15: parameter 'BlockAw' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:209: parameter 'ADC_CTRL_INTR_STATE_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:210: parameter 'ADC_CTRL_INTR_ENABLE_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:211: parameter 'ADC_CTRL_INTR_TEST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:212: parameter 'ADC_CTRL_ALERT_TEST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:213: parameter 'ADC_CTRL_ADC_EN_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:214: parameter 'ADC_CTRL_ADC_PD_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:215: parameter 'ADC_CTRL_ADC_LP_SAMPLE_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:216: parameter 'ADC_CTRL_ADC_SAMPLE_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:217: parameter 'ADC_CTRL_ADC_FSM_RST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:218: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:219: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:220: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_2_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:221: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_3_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:222: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_4_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:223: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_5_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:224: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_6_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:225: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_7_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:226: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:227: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:228: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_2_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:229: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_3_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:230: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_4_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:231: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_5_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:232: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_6_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:233: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_7_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:234: parameter 'ADC_CTRL_ADC_CHN_VAL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:235: parameter 'ADC_CTRL_ADC_CHN_VAL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:236: parameter 'ADC_CTRL_ADC_WAKEUP_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:237: parameter 'ADC_CTRL_FILTER_STATUS_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:238: parameter 'ADC_CTRL_ADC_INTR_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:239: parameter 'ADC_CTRL_ADC_INTR_STATUS_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:242: parameter 'ADC_CTRL_INTR_TEST_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:243: parameter 'ADC_CTRL_INTR_TEST_DEBUG_CABLE_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:244: parameter 'ADC_CTRL_ALERT_TEST_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:245: parameter 'ADC_CTRL_ALERT_TEST_FATAL_FAULT_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:283: parameter 'ADC_CTRL_PERMIT' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_fsm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_intr.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-WARNING [VERI-1206] prim_generic_buf.sv:13: overwriting previous definition of module 'prim_generic_buf'
VERIFIC-INFO [VERI-2142] prim_generic_buf.sv:13: previous definition of design element 'prim_generic_buf' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pulse_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_intr_hw.sv'

yosys> synth_rs -top adc_ctrl -tech genesis2 -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.116

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis2/cells_sim.v +/rapidsilicon/genesis2/dsp_sim.v +/rapidsilicon/genesis2/brams_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\sdff'.
Generating RTLIL representation for module `\sdffn'.
Generating RTLIL representation for module `\dffr'.
Generating RTLIL representation for module `\dffnr'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffne'.
Generating RTLIL representation for module `\sdffre'.
Generating RTLIL representation for module `\sdffnre'.
Generating RTLIL representation for module `\dffre'.
Generating RTLIL representation for module `\dffnre'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\fa_1bit'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top adc_ctrl

3.5. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] adc_ctrl.sv:8: compiling module 'adc_ctrl'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-INFO [VERI-1018] adc_ctrl_reg_top.sv:11: compiling module 'adc_ctrl_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:3: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=7)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:44: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_sync_reqack.sv:26: compiling module 'prim_sync_reqack'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)'
VERIFIC-INFO [VERI-1018] adc_ctrl_core.sv:7: compiling module 'adc_ctrl_core'
VERIFIC-INFO [VERI-1018] adc_ctrl_fsm.sv:7: compiling module 'adc_ctrl_fsm'
VERIFIC-INFO [VERI-1018] prim_pulse_sync.sv:11: compiling module 'prim_pulse_sync'
VERIFIC-INFO [VERI-1018] adc_ctrl_intr.sv:7: compiling module 'adc_ctrl_intr'
VERIFIC-INFO [VERI-1018] prim_intr_hw.sv:10: compiling module 'prim_intr_hw'
Importing module adc_ctrl.
Importing module adc_ctrl_core.
Importing module adc_ctrl_fsm.
Importing module adc_ctrl_intr.
Importing module adc_ctrl_reg_top.
Importing module prim_alert_sender.
Importing module prim_buf.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module prim_intr_hw.
Importing module prim_pulse_sync.
Importing module prim_flop_2sync(Width=1).
Importing module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
Importing module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
Importing module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
Importing module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
Importing module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
Importing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
Importing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
Importing module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
Importing module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
Importing module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
Importing module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
Importing module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
Importing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
Importing module prim_subreg_ext(DW=32'b01).
Importing module prim_sync_reqack.
Importing module tlul_adapter_reg(RegAw=7).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

3.5.1. Analyzing design hierarchy..
Top module:  \adc_ctrl
Used module:     \adc_ctrl_core
Used module:         \adc_ctrl_intr
Used module:             \prim_intr_hw
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:         \prim_pulse_sync
Used module:             \prim_flop_2sync(Width=1)
Used module:         \adc_ctrl_fsm
Used module:     \adc_ctrl_reg_top
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)
Used module:         \prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)
Used module:             \prim_sync_reqack
Used module:         \prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)
Used module:         \prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)
Used module:         \prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)
Used module:         \prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)
Used module:         \prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)

3.5.2. Analyzing design hierarchy..
Top module:  \adc_ctrl
Used module:     \adc_ctrl_core
Used module:         \adc_ctrl_intr
Used module:             \prim_intr_hw
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:         \prim_pulse_sync
Used module:             \prim_flop_2sync(Width=1)
Used module:         \adc_ctrl_fsm
Used module:     \adc_ctrl_reg_top
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)
Used module:         \prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)
Used module:             \prim_sync_reqack
Used module:         \prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)
Used module:         \prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)
Used module:         \prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)
Used module:         \prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)
Used module:         \prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Removed 0 unused modules.

yosys> proc

3.6. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.6.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.6.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.6.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=7).
<suppressed ~11 debug messages>
Optimizing module prim_sync_reqack.
<suppressed ~4 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
<suppressed ~4 debug messages>
Optimizing module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
<suppressed ~5 debug messages>
Optimizing module prim_flop_2sync(Width=1).
Optimizing module prim_pulse_sync.
<suppressed ~2 debug messages>
Optimizing module prim_intr_hw.
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf.
Optimizing module prim_alert_sender.
<suppressed ~7 debug messages>
Optimizing module adc_ctrl_reg_top.
<suppressed ~2 debug messages>
Optimizing module adc_ctrl_intr.
<suppressed ~8 debug messages>
Optimizing module adc_ctrl_fsm.
<suppressed ~26 debug messages>
Optimizing module adc_ctrl_core.
<suppressed ~4 debug messages>
Optimizing module adc_ctrl.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module adc_ctrl_core.
Deleting now unused module adc_ctrl_fsm.
Deleting now unused module adc_ctrl_intr.
Deleting now unused module adc_ctrl_reg_top.
Deleting now unused module prim_alert_sender.
Deleting now unused module prim_buf.
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_flop_2sync(Width=1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_intr_hw.
Deleting now unused module prim_pulse_sync.
Deleting now unused module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
Deleting now unused module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
Deleting now unused module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
Deleting now unused module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
Deleting now unused module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
Deleting now unused module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
Deleting now unused module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
Deleting now unused module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
Deleting now unused module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
Deleting now unused module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
Deleting now unused module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
Deleting now unused module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
Deleting now unused module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_sync_reqack.
Deleting now unused module tlul_adapter_reg(RegAw=7).
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module tlul_err.
Deleting now unused module tlul_rsp_intg_gen.
<suppressed ~172 debug messages>

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~117 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 751 unused cells and 11667 unused wires.
<suppressed ~2795 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module adc_ctrl...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~88 debug messages>

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_aon_tgl.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_aon_tgl.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_aon_tgl.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_aon_tgl.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_aon_tgl.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_aon_tgl.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_aon_tgl.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_aon_tgl.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_filter_status_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_filter_status_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_filter_status_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_filter_status_cdc.u_prim_sync.dst_fsm_cs -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$mux_188$adc_ctrl_fsm.sv:260$1952.
Removed 1 multiplexer ports.
<suppressed ~295 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_879$adc_ctrl_reg_top.sv:3982$8570: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n4771$2406 $flatten\u_reg.$verific$n4780$2415 $flatten\u_reg.$verific$n4783$2418 $flatten\u_reg.$verific$n4786$2421 $flatten\u_reg.$verific$n4789$2424 $flatten\u_reg.$verific$n4792$2427 $flatten\u_reg.$verific$n4795$2430 $flatten\u_reg.$verific$n4798$2433 $flatten\u_reg.$verific$n4801$2436 $flatten\u_reg.$verific$n4804$2439 $flatten\u_reg.$verific$n4807$2442 $flatten\u_reg.$verific$n4810$2445 $flatten\u_reg.$verific$n4813$2448 $flatten\u_reg.$verific$n4816$2451 $flatten\u_reg.$verific$n4819$2454 $flatten\u_reg.$verific$n4822$2457 $flatten\u_reg.$verific$n4825$2460 $flatten\u_reg.$verific$n4828$2463 $flatten\u_reg.$verific$n4831$2466 $flatten\u_reg.$verific$n4834$2469 $flatten\u_reg.$verific$n4837$2472 $flatten\u_reg.$verific$n4840$2475 $flatten\u_reg.$verific$n4843$2478 $flatten\u_reg.$verific$n4846$2481 $flatten\u_reg.$verific$n4849$2484 $flatten\u_reg.$verific$n4852$2487 $flatten\u_reg.$verific$n4855$2490 $flatten\u_reg.$verific$n4858$2493 $flatten\u_reg.$verific$n4860$2495 }
  Optimizing cells in module \adc_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9912 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9911 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9910 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9920 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9900 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9921 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status.$verific$q_reg$prim_subreg.sv:72$9747 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9159 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9141 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9519 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9501 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9447 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9429 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_oneshot.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_discon.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_3a0_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_q_reg[0]$prim_reg_cdc.sv:98$9088 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9071 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9231 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9213 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_1.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_0.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$8869 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$8870 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$8871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$8872 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$8869 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$8870 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$8871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$8779 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$8783 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$8782 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$8780 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$8781 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$adc_ctrl_reg_top.sv:65$2734 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.\prim_flop_2sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.\prim_flop_2sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.$verific$src_level_reg$prim_pulse_sync.sv:32$8950 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.$verific$dst_level_q_reg$prim_pulse_sync.sv:60$8957 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\i_adc_ctrl_intr_o.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$8936 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[7].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[7].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[6].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[6].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[5].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[5].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[4].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[4].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[3].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[3].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[2].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[2].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[1].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[1].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[7].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2070 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[6].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2064 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[5].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2058 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[4].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2052 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[3].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2046 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[2].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2040 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[1].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2034 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[0].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2028 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$wakeup_timer_cnt_q_reg$adc_ctrl_fsm.sv:142$1887 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$trigger_q_reg$adc_ctrl_fsm.sv:86$1849 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$pwrup_timer_cnt_q_reg$adc_ctrl_fsm.sv:102$1863 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$np_sample_cnt_q_reg$adc_ctrl_fsm.sv:128$1879 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$lp_sample_cnt_q_reg$adc_ctrl_fsm.sv:115$1871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$fsm_state_q_reg$adc_ctrl_fsm.sv:212$1946 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_we_o_reg$adc_ctrl_fsm.sv:170$1918 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_o_reg$adc_ctrl_fsm.sv:170$1920 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_we_o_reg$adc_ctrl_fsm.sv:170$1917 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_o_reg$adc_ctrl_fsm.sv:170$1919 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$adc_ctrl_match_q_reg$adc_ctrl_fsm.sv:190$1931 ($aldff) from module adc_ctrl.

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 4 unused cells and 97 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~295 debug messages>

yosys> opt_reduce

3.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.27. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.28. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~38 debug messages>

yosys> opt_muxtree

3.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~271 debug messages>

yosys> opt_reduce

3.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_879$adc_ctrl_reg_top.sv:3982$8570: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n4780$2415 $flatten\u_reg.$verific$n4783$2418 $flatten\u_reg.$verific$n4786$2421 $flatten\u_reg.$verific$n4789$2424 $flatten\u_reg.$verific$n4792$2427 $flatten\u_reg.$verific$n4795$2430 $flatten\u_reg.$verific$n4798$2433 $flatten\u_reg.$verific$n4801$2436 $flatten\u_reg.$verific$n4804$2439 $flatten\u_reg.$verific$n4807$2442 $flatten\u_reg.$verific$n4810$2445 $flatten\u_reg.$verific$n4813$2448 $flatten\u_reg.$verific$n4816$2451 $flatten\u_reg.$verific$n4819$2454 $flatten\u_reg.$verific$n4822$2457 $flatten\u_reg.$verific$n4825$2460 $flatten\u_reg.$verific$n4828$2463 $flatten\u_reg.$verific$n4831$2466 $flatten\u_reg.$verific$n4834$2469 $flatten\u_reg.$verific$n4837$2472 $flatten\u_reg.$verific$n4840$2475 $flatten\u_reg.$verific$n4843$2478 $flatten\u_reg.$verific$n4846$2481 $flatten\u_reg.$verific$n4849$2484 $flatten\u_reg.$verific$n4852$2487 $flatten\u_reg.$verific$n4858$2493 $flatten\u_reg.$verific$n4860$2495 }
  Optimizing cells in module \adc_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

3.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~252 debug messages>
Removed a total of 84 cells.

yosys> opt_share

3.34. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.35. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$trigger_q_reg$adc_ctrl_fsm.sv:86$1849 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\i_adc_ctrl_intr_o.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$8936 ($adff) from module adc_ctrl.

yosys> opt_clean

3.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 11 unused cells and 116 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~270 debug messages>

yosys> opt_reduce

3.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.41. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.42. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.43. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 4

yosys> fsm -encoding binary

3.45. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.45.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.45.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.45.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.45.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> fsm_opt

3.45.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.45.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.45.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.45.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.48. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~270 debug messages>

yosys> opt_reduce

3.49. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.51. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.52. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9912 ($adff) from module adc_ctrl (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9911 ($adff) from module adc_ctrl (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9910 ($adff) from module adc_ctrl (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9920 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n182$9870, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9900 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n75$9850, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9921 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n248$9852, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_intr_state.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.intr_state_o.d, Q = \u_reg.u_intr_state.q).
Adding EN signal on $flatten\u_reg.\u_filter_status_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_filter_status_cdc.$verific$n81$9344, Q = \u_reg.u_filter_status_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_filter_status_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_filter_status_cdc.$verific$n14$9327, Q = \u_reg.u_filter_status_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_filter_status.$verific$q_reg$prim_subreg.sv:72$9747 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.aon_filter_status_o.d, Q = \u_reg.u_filter_status.q).
Adding EN signal on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$n81$9344, Q = \u_reg.u_adc_wakeup_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$n14$9327, Q = \u_reg.u_adc_wakeup_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9159 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$n113$9128, Q = \u_reg.u_adc_sample_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9141 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$n14$9111, Q = \u_reg.u_adc_sample_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9519 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$n177$9488, Q = \u_reg.u_adc_pd_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9501 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$n14$9471, Q = \u_reg.u_adc_pd_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9447 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$n81$9416, Q = \u_reg.u_adc_lp_sample_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9429 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$n14$9399, Q = \u_reg.u_adc_lp_sample_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_oneshot.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_oneshot.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_src_det_flip.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_src_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_discon.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_discon.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_3a0_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_3a0_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_src_det_flip.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_src_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_q_reg[0]$prim_reg_cdc.sv:98$9088 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$n49$9054, Q = \u_reg.u_adc_fsm_rst_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9071 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$n14$9043, Q = \u_reg.u_adc_fsm_rst_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9231 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$n57$9200, Q = \u_reg.u_adc_en_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9213 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$n14$9183, Q = \u_reg.u_adc_en_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($adff) from module adc_ctrl (D = { 16'0000000000000000 \u_reg.u_adc_chn_val_1_adc_chn_value_1.q 2'00 }, Q = \u_reg.u_adc_chn_val_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($adff) from module adc_ctrl (D = 1'0, Q = \u_reg.u_adc_chn_val_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_1.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_o, Q = \u_reg.u_adc_chn_val_1_adc_chn_value_1.q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($adff) from module adc_ctrl (D = { 16'0000000000000000 \u_reg.u_adc_chn_val_0_adc_chn_value_0.q 2'00 }, Q = \u_reg.u_adc_chn_val_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($adff) from module adc_ctrl (D = 1'0, Q = \u_reg.u_adc_chn_val_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_0.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_o, Q = \u_reg.u_adc_chn_val_0_adc_chn_value_0.q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_7_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_7_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_6_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_6_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_7_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_7_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_6_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_6_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$adc_ctrl_reg_top.sv:65$2734 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.intg_err_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$wakeup_timer_cnt_q_reg$adc_ctrl_fsm.sv:142$1887 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n438$1797, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.wakeup_timer_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$pwrup_timer_cnt_q_reg$adc_ctrl_fsm.sv:102$1863 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n55$1779, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.pwrup_timer_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$np_sample_cnt_q_reg$adc_ctrl_fsm.sv:128$1879 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n249$1791, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.np_sample_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$lp_sample_cnt_q_reg$adc_ctrl_fsm.sv:115$1871 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n124$1785, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.lp_sample_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_o_reg$adc_ctrl_fsm.sv:170$1920 ($adff) from module adc_ctrl (D = \adc_i.data, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_o).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_o_reg$adc_ctrl_fsm.sv:170$1919 ($adff) from module adc_ctrl (D = \adc_i.data, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_o).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$adc_ctrl_match_q_reg$adc_ctrl_fsm.sv:190$1931 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.match, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.adc_ctrl_match_q).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10958 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10955 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10921 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10921 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$10921 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10893 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10893 ($adffe) from module adc_ctrl.

yosys> opt_clean

3.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 35 unused cells and 34 unused wires.
<suppressed ~42 debug messages>

yosys> opt_expr

3.54. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~77 debug messages>

yosys> opt_muxtree

3.55. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~242 debug messages>

yosys> opt_reduce

3.56. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

yosys> opt_share

3.58. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.59. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($adff) from module adc_ctrl.

yosys> opt_clean

3.60. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 30 unused cells and 85 unused wires.
<suppressed ~85 debug messages>

yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_muxtree

3.62. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.63. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.64. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.65. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.66. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($adff) from module adc_ctrl.

yosys> opt_clean

3.67. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_muxtree

3.69. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.70. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.71. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.72. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.73. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[0].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2028 ($adff) from module adc_ctrl.

yosys> opt_clean

3.74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.75. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~2 debug messages>
MAX OPT ITERATION = 4

yosys> wreduce -keepdc

3.76. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell adc_ctrl.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$9880 ($eq).
Removed top 4 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_319$adc_ctrl_reg_top.sv:3667$8272 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_321$adc_ctrl_reg_top.sv:3668$8273 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_323$adc_ctrl_reg_top.sv:3669$8274 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_325$adc_ctrl_reg_top.sv:3670$8275 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_327$adc_ctrl_reg_top.sv:3671$8276 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_329$adc_ctrl_reg_top.sv:3672$8277 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_331$adc_ctrl_reg_top.sv:3673$8278 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_333$adc_ctrl_reg_top.sv:3674$8279 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_335$adc_ctrl_reg_top.sv:3675$8280 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_337$adc_ctrl_reg_top.sv:3676$8281 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_339$adc_ctrl_reg_top.sv:3677$8282 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_341$adc_ctrl_reg_top.sv:3678$8283 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_343$adc_ctrl_reg_top.sv:3679$8284 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_345$adc_ctrl_reg_top.sv:3680$8285 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_347$adc_ctrl_reg_top.sv:3681$8286 ($eq).
Removed top 31 bits (of 32) from port A of cell adc_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10529 ($shl).
Removed top 28 bits (of 32) from port Y of cell adc_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10529 ($shl).
Removed top 13 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$not_equal_215$adc_ctrl_fsm.sv:338$1967 ($ne).
Removed top 1 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$not_equal_180$adc_ctrl_fsm.sv:241$1949 ($ne).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_80$adc_ctrl_fsm.sv:149$1901 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_78$adc_ctrl_fsm.sv:149$1899 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_77$adc_ctrl_fsm.sv:149$1898 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_70$adc_ctrl_fsm.sv:145$1891 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_68$adc_ctrl_fsm.sv:145$1889 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_67$adc_ctrl_fsm.sv:145$1888 ($eq).
Removed top 8 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976 ($eq).
Removed top 13 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_216$adc_ctrl_fsm.sv:341$1968 ($eq).
Removed top 5 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959 ($eq).
Removed top 1 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_181$adc_ctrl_fsm.sv:244$1950 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_111$adc_ctrl_fsm.sv:175$1922 ($eq).
Removed top 7 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_110$adc_ctrl_fsm.sv:175$1921 ($eq).
Removed top 23 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880 ($add).
Removed top 15 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872 ($add).
Removed top 7 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864 ($add).
Removed top 3 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856 ($add).
Removed top 8 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973 ($lt).
Removed top 5 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956 ($lt).
Removed top 8 bits (of 9) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$and_94$adc_ctrl_intr.sv:77$2092 ($and).
Removed top 9 bits (of 10) from port A of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468 ($le).
Removed top 9 bits (of 10) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469 ($le).
Removed top 9 bits (of 10) from port A of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475 ($le).
Removed top 9 bits (of 10) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476 ($le).
Removed top 15 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$and_244$adc_ctrl_core.sv:107$1541 ($and).
Removed top 3 bits (of 4) from wire adc_ctrl.$flatten\u_reg.$verific$n3685$2597.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_reg.$verific$n3728$2599.

yosys> peepopt

3.77. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.78. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.79. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.80. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4767
   Number of wire bits:          17029
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1416
     $add                            4
     $adff                         219
     $adffe                         73
     $and                          274
     $bmux                          27
     $eq                            44
     $le                             4
     $logic_not                      2
     $lt                             2
     $mux                          415
     $ne                             3
     $not                          110
     $or                           132
     $pmux                           1
     $reduce_and                     3
     $reduce_bool                   51
     $reduce_or                     15
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> wreduce t:$mul

3.81. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc -genesis2 -max_dsp 154

3.82. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp_check_maxwidth.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18 a:valid_map

3.83. Executing TECHMAP pass (map to technology primitives).

3.83.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.83.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> stat

3.84. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4767
   Number of wire bits:          17029
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1416
     $add                            4
     $adff                         219
     $adffe                         73
     $and                          274
     $bmux                          27
     $eq                            44
     $le                             4
     $logic_not                      2
     $lt                             2
     $mux                          415
     $ne                             3
     $not                          110
     $or                           132
     $pmux                           1
     $reduce_and                     3
     $reduce_bool                   51
     $reduce_or                     15
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis2/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.85. Executing TECHMAP pass (map to technology primitives).

3.85.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

3.85.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/dsp_final_map.v

3.86. Executing TECHMAP pass (map to technology primitives).

3.86.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

3.86.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> rs-pack-dsp-regs

3.87. Executing rs_pack_dsp_regs pass.

yosys> rs_dsp_io_regs

3.88. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.89. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module adc_ctrl:
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880 ($add).
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856.
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468 ($le): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469 ($le): merged with $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468.
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475 ($le): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476 ($le): merged with $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475.
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956 ($lt): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973 ($lt): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959 ($eq): merged with $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956.
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976 ($eq): merged with $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973.
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973, $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976: $auto$alumacc.cc:485:replace_alu$11098
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956, $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959: $auto$alumacc.cc:485:replace_alu$11109
  creating $alu cell for $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475, $flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476: $auto$alumacc.cc:485:replace_alu$11120
  creating $alu cell for $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468, $flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469: $auto$alumacc.cc:485:replace_alu$11135
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856: $auto$alumacc.cc:485:replace_alu$11150
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864: $auto$alumacc.cc:485:replace_alu$11153
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872: $auto$alumacc.cc:485:replace_alu$11156
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880: $auto$alumacc.cc:485:replace_alu$11159
  created 8 $alu and 0 $macc cells.

yosys> opt_expr

3.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.91. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_muxtree

3.92. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.93. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.94. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.95. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.96. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:262:slice$10934 ($adffe) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10934 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.97. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_muxtree

3.99. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.100. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.102. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.103. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.104. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 2

yosys> stat

3.106. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4799
   Number of wire bits:          17277
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1424
     $adff                         219
     $adffe                         65
     $alu                            8
     $and                          274
     $bmux                          27
     $eq                            42
     $logic_not                      2
     $mux                          415
     $ne                             3
     $not                          118
     $or                           136
     $pmux                           1
     $reduce_and                     7
     $reduce_bool                   51
     $reduce_or                     19
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> memory -nomap

3.107. Executing MEMORY pass.

yosys> opt_mem

3.107.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.107.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.107.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.107.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.107.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11168'[0] in module `\adc_ctrl': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11165'[0] in module `\adc_ctrl': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11162'[0] in module `\adc_ctrl': no output FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$11168'[0] in module `\adc_ctrl': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$11165'[0] in module `\adc_ctrl': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$11162'[0] in module `\adc_ctrl': address FF has async set and/or reset, not supported.

yosys> opt_clean

3.107.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> memory_share

3.107.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.107.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.107.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> memory_collect

3.107.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.108. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4799
   Number of wire bits:          17277
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1424
     $adff                         219
     $adffe                         65
     $alu                            8
     $and                          274
     $bmux                          24
     $eq                            42
     $logic_not                      2
     $mem_v2                         3
     $mux                          415
     $ne                             3
     $not                          118
     $or                           136
     $pmux                           1
     $reduce_and                     7
     $reduce_bool                   51
     $reduce_or                     19
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> muxpack

3.109. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~277 debug messages>

yosys> opt_clean

3.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new_swap.txt -limit 150 a:read_swapped

3.111. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new.txt -limit 150

3.112. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory adc_ctrl.$auto$memory_bmux2rom.cc:63:execute$11162
using FF mapping for memory adc_ctrl.$auto$memory_bmux2rom.cc:63:execute$11165
using FF mapping for memory adc_ctrl.$auto$memory_bmux2rom.cc:63:execute$11168
<suppressed ~18 debug messages>

yosys> rs_bram_split -new_mapping

3.113. Executing Rs_BRAM_Split pass.

yosys> techmap -autoproc -map +/rapidsilicon/genesis2/brams_map_new.v

3.114. Executing TECHMAP pass (map to technology primitives).

3.114.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.114.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/brams_final_map_new.v

3.115. Executing TECHMAP pass (map to technology primitives).

3.115.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.115.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> pmuxtree

3.116. Executing PMUXTREE pass.

yosys> muxpack

3.117. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~304 debug messages>

yosys> memory_map

3.118. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11162 in module \adc_ctrl:
  created 32 $dff cells and 0 static cells of width 1.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11165 in module \adc_ctrl:
  created 32 $dff cells and 0 static cells of width 1.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11168 in module \adc_ctrl:
  created 32 $dff cells and 0 static cells of width 2.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.

yosys> stat

3.119. Printing statistics.

=== adc_ctrl ===

   Number of wires:               5219
   Number of wire bits:          18691
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1651
     $adff                         219
     $adffe                         65
     $alu                            8
     $and                          274
     $bmux                          24
     $dff                           96
     $eq                            42
     $logic_not                      2
     $mux                          536
     $ne                             3
     $not                          119
     $or                           141
     $reduce_and                     7
     $reduce_bool                   51
     $reduce_or                     27
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/arith_map.v

3.120. Executing TECHMAP pass (map to technology primitives).

3.120.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.120.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.120.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$1f812f0514ea3255703342654e053e2c502325cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$fa8d9e4c2749d63ae521a69564d54ead1ad1232d\_90_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using template $paramod$79aa992f2eb7f354d4aaf651790713cf239111fa\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~3605 debug messages>

yosys> stat

3.121. Printing statistics.

=== adc_ctrl ===

   Number of wires:               6253
   Number of wire bits:          33301
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7029
     $_AND_                        665
     $_DFFE_PN0P_                  596
     $_DFFE_PN1P_                   11
     $_DFF_PN0_                    220
     $_DFF_PN1_                      7
     $_DFF_P_                      128
     $_MUX_                       3409
     $_NOT_                        267
     $_OR_                         696
     $_XOR_                       1030


yosys> opt_expr

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1806 debug messages>

yosys> opt_merge -nomux

3.123. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3324 debug messages>
Removed a total of 1108 cells.

yosys> opt_muxtree

3.124. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.125. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.126. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.127. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.128. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $auto$ff.cc:262:slice$15853 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17025 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18491 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18492 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15952 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14704 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18505 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18477 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18506 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18478 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18507 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17828 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17280 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14606 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14571 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14572 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14379 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14333 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$14334 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17087 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12379 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11876 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12047 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12314 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12315 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12316 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12322 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12328 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12327 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12390 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18587 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18476 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17815 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18577 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18576 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18575 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18573 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18572 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18568 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18565 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18562 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18534 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18533 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18532 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18531 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18530 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18529 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18528 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18527 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18526 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18525 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17832 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17794 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17826 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17829 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17812 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17811 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18574 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18585 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18582 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18567 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18564 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$18561 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12321 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15064 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11843 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11845 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11847 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11849 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11851 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11853 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11855 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11857 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11859 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11861 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11863 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11865 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11867 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11869 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11871 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11873 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11875 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11878 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11882 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12049 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12088 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12313 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12318 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12320 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12324 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12326 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12330 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$16867 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17792 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15854 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15693 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15063 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11842 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11844 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11846 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11848 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11850 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11852 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11854 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11856 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11858 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11860 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11862 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11864 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11866 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11868 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11870 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11872 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11874 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11877 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$11881 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12048 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12087 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$17791 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12312 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12317 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12319 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12323 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12325 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$12329 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15692 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$16866 ($_DFF_P_) from module adc_ctrl (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$15062 ($_DFF_P_) from module adc_ctrl (removing D path).

yosys> opt_clean

3.129. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 408 unused cells and 1383 unused wires.
<suppressed ~417 debug messages>

yosys> opt_expr

3.130. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~93 debug messages>

yosys> opt_muxtree

3.131. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.132. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_share

3.134. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.135. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.136. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 75 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.137. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.138. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.139. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.140. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.141. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.142. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.143. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.144. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 3

yosys> opt_expr -full

3.145. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~344 debug messages>

yosys> techmap -map +/techmap.v

3.146. Executing TECHMAP pass (map to technology primitives).

3.146.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.146.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> stat

3.147. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4919
   Number of wire bits:          18619
   Number of public wires:        3973
   Number of public wire bits:   14784
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3576
     $_AND_                        470
     $_DFFE_PN0P_                  572
     $_DFFE_PN1P_                   11
     $_DFF_PN0_                    220
     $_DFF_PN1_                      7
     $_MUX_                       1331
     $_NOT_                        178
     $_OR_                         436
     $_XOR_                        351


yosys> dfflegalize -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 t:$_SDFFCE_*

3.148. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.149. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4919
   Number of wire bits:          18619
   Number of public wires:        3973
   Number of public wire bits:   14784
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3576
     $_AND_                        470
     $_DFFE_PN0P_                  572
     $_DFFE_PN1P_                   11
     $_DFF_PN0_                    220
     $_DFF_PN1_                      7
     $_MUX_                       1331
     $_NOT_                        178
     $_OR_                         436
     $_XOR_                        351


yosys> opt_expr

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.152. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.153. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

3.155. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.156. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 75 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 1

yosys> abc -dff -keepff

3.158. Executing ABC pass (technology mapping using ABC).

3.158.1. Summary of detected clock domains:
  19 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_aon_ni, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, arst=!\rst_aon_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, arst=!\rst_aon_ni, srst={ }
  125 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_aon_ni, srst={ }
  12 cells in clk=\clk_i, en=\u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  710 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=\u_reg.u_adc_intr_status_oneshot.wr_en, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_o, arst=!\rst_aon_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_o, arst=!\rst_aon_ni, srst={ }
  40 cells in clk=\clk_i, en=\u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  67 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  76 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  78 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  81 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  81 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  428 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  369 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }

3.158.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_aon_ni
Extracted 19 gates and 22 wires to a netlist network with 2 inputs and 7 outputs.

3.158.2.1. Executing ABC.

3.158.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 71 gates and 99 wires to a netlist network with 27 inputs and 45 outputs.

3.158.3.1. Executing ABC.

3.158.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.158.4.1. Executing ABC.

3.158.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.158.5.1. Executing ABC.

3.158.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_aon_ni
Extracted 125 gates and 128 wires to a netlist network with 2 inputs and 37 outputs.

3.158.6.1. Executing ABC.

3.158.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 12 gates and 22 wires to a netlist network with 9 inputs and 7 outputs.

3.158.7.1. Executing ABC.

3.158.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.158.8.1. Executing ABC.

3.158.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 29 gates and 43 wires to a netlist network with 13 inputs and 17 outputs.

3.158.9.1. Executing ABC.

3.158.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 710 gates and 1043 wires to a netlist network with 331 inputs and 59 outputs.

3.158.10.1. Executing ABC.

3.158.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 22 gates and 33 wires to a netlist network with 11 inputs and 14 outputs.

3.158.11.1. Executing ABC.

3.158.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 29 gates and 49 wires to a netlist network with 19 inputs and 17 outputs.

3.158.12.1. Executing ABC.

3.158.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 60 gates and 96 wires to a netlist network with 34 inputs and 38 outputs.

3.158.13.1. Executing ABC.

3.158.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.158.14.1. Executing ABC.

3.158.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 6 outputs.

3.158.15.1. Executing ABC.

3.158.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 21 gates and 35 wires to a netlist network with 12 inputs and 9 outputs.

3.158.16.1. Executing ABC.

3.158.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.158.17.1. Executing ABC.

3.158.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_adc_intr_status_oneshot.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 7 inputs and 8 outputs.

3.158.18.1. Executing ABC.

3.158.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.158.19.1. Executing ABC.

3.158.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 15 gates and 27 wires to a netlist network with 11 inputs and 8 outputs.

3.158.20.1. Executing ABC.

3.158.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 11 gates and 20 wires to a netlist network with 8 inputs and 5 outputs.

3.158.21.1. Executing ABC.

3.158.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.158.22.1. Executing ABC.

3.158.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 102 gates and 144 wires to a netlist network with 40 inputs and 65 outputs.

3.158.23.1. Executing ABC.

3.158.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 10 outputs.

3.158.24.1. Executing ABC.

3.158.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_o, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.158.25.1. Executing ABC.

3.158.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_o, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.158.26.1. Executing ABC.

3.158.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 40 gates and 77 wires to a netlist network with 36 inputs and 38 outputs.

3.158.27.1. Executing ABC.

3.158.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 67 gates and 99 wires to a netlist network with 31 inputs and 39 outputs.

3.158.28.1. Executing ABC.

3.158.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 7 outputs.

3.158.29.1. Executing ABC.

3.158.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 76 gates and 129 wires to a netlist network with 52 inputs and 48 outputs.

3.158.30.1. Executing ABC.

3.158.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 6 outputs.

3.158.31.1. Executing ABC.

3.158.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 49 outputs.

3.158.32.1. Executing ABC.

3.158.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 6 outputs.

3.158.33.1. Executing ABC.

3.158.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.158.34.1. Executing ABC.

3.158.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 7 outputs.

3.158.35.1. Executing ABC.

3.158.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 49 outputs.

3.158.36.1. Executing ABC.

3.158.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 6 outputs.

3.158.37.1. Executing ABC.

3.158.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.158.38.1. Executing ABC.

3.158.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.158.39.1. Executing ABC.

3.158.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 78 gates and 133 wires to a netlist network with 54 inputs and 50 outputs.

3.158.40.1. Executing ABC.

3.158.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 6 outputs.

3.158.41.1. Executing ABC.

3.158.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.158.42.1. Executing ABC.

3.158.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.158.43.1. Executing ABC.

3.158.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 48 outputs.

3.158.44.1. Executing ABC.

3.158.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 6 outputs.

3.158.45.1. Executing ABC.

3.158.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 81 gates and 137 wires to a netlist network with 55 inputs and 52 outputs.

3.158.46.1. Executing ABC.

3.158.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 6 outputs.

3.158.47.1. Executing ABC.

3.158.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.158.48.1. Executing ABC.

3.158.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 7 outputs.

3.158.49.1. Executing ABC.

3.158.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 81 gates and 138 wires to a netlist network with 56 inputs and 53 outputs.

3.158.50.1. Executing ABC.

3.158.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 6 outputs.

3.158.51.1. Executing ABC.

3.158.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.158.52.1. Executing ABC.

3.158.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 7 outputs.

3.158.53.1. Executing ABC.

3.158.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 49 outputs.

3.158.54.1. Executing ABC.

3.158.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 6 outputs.

3.158.55.1. Executing ABC.

3.158.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.158.56.1. Executing ABC.

3.158.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 10 outputs.

3.158.57.1. Executing ABC.

3.158.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 428 gates and 469 wires to a netlist network with 39 inputs and 113 outputs.

3.158.58.1. Executing ABC.

3.158.59. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 369 gates and 423 wires to a netlist network with 52 inputs and 148 outputs.

3.158.59.1. Executing ABC.

3.158.60. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 3 outputs.

3.158.60.1. Executing ABC.

3.158.61. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 7 outputs.

3.158.61.1. Executing ABC.

yosys> abc -dff -keepff

3.159. Executing ABC pass (technology mapping using ABC).

3.159.1. Summary of detected clock domains:
  11 cells in clk=\clk_i, en=$abc$22609$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22841$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21565$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$20558$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21355$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22551$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22698$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21680$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$21540$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  28 cells in clk=\clk_i, en=$abc$20564$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21477$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$22232$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22463$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22089$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22174$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22319$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$22756$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$22377$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21947$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21863$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  38 cells in clk=\clk_i, en=$abc$23218$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$22472$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$22388$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  63 cells in clk=\clk_i, en=$abc$22099$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$21873$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21554$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  25 cells in clk=\clk_i, en=$abc$21486$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21507$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$21529$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=1'0, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$21466$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$21403$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  71 cells in clk=\clk_i, en=$abc$21796$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$22183$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  56 cells in clk=\clk_i, en=$abc$22328$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$22707$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$22850$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  127 cells in clk=\clk_aon_i, en=$abc$20418$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_aon_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$20546$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  25 cells in clk=\clk_i, en=$abc$21374$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$22031$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$22040$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  63 cells in clk=\clk_i, en=$abc$21956$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$abc$22243$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$22560$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$22619$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en=$abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  756 cells in clk=\clk_i, en=$abc$20593$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$22899$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  325 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  227 cells in clk=\clk_i, en=$abc$23721$u_reg.intg_err, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$22766$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_aon_i, en=$abc$20286$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_aon_ni, srst={ }
  75 cells in clk=\clk_i, en=$abc$20305$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  40 cells in clk=\clk_aon_i, en=1'0, arst=!\rst_aon_ni, srst={ }
  120 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$23950$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }

3.159.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22609$auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 9 outputs.

3.159.2.1. Executing ABC.

3.159.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22841$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.159.3.1. Executing ABC.

3.159.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21565$auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.159.4.1. Executing ABC.

3.159.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20558$auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.159.5.1. Executing ABC.

3.159.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21355$auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.159.6.1. Executing ABC.

3.159.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22551$auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.159.7.1. Executing ABC.

3.159.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22698$auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.159.8.1. Executing ABC.

3.159.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21680$auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.159.9.1. Executing ABC.

3.159.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21540$auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.159.10.1. Executing ABC.

3.159.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20564$auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 28 gates and 41 wires to a netlist network with 13 inputs and 17 outputs.

3.159.11.1. Executing ABC.

3.159.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21477$auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.159.12.1. Executing ABC.

3.159.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22232$auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 9 outputs.

3.159.13.1. Executing ABC.

3.159.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22463$auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.159.14.1. Executing ABC.

3.159.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22089$auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.159.15.1. Executing ABC.

3.159.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22174$auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.159.16.1. Executing ABC.

3.159.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22319$auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.159.17.1. Executing ABC.

3.159.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22756$auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 9 outputs.

3.159.18.1. Executing ABC.

3.159.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22377$auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 9 outputs.

3.159.19.1. Executing ABC.

3.159.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21947$auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.159.20.1. Executing ABC.

3.159.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21863$auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.159.21.1. Executing ABC.

3.159.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23218$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 38 gates and 74 wires to a netlist network with 36 inputs and 37 outputs.

3.159.22.1. Executing ABC.

3.159.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22472$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 59 gates and 97 wires to a netlist network with 38 inputs and 34 outputs.

3.159.23.1. Executing ABC.

3.159.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22388$auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 47 outputs.

3.159.24.1. Executing ABC.

3.159.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22099$auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 63 gates and 105 wires to a netlist network with 42 inputs and 38 outputs.

3.159.25.1. Executing ABC.

3.159.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21873$auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 47 outputs.

3.159.26.1. Executing ABC.

3.159.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21554$auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 5 outputs.

3.159.27.1. Executing ABC.

3.159.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21486$auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 25 gates and 43 wires to a netlist network with 18 inputs and 14 outputs.

3.159.28.1. Executing ABC.

3.159.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21507$auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.159.29.1. Executing ABC.

3.159.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21529$auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 9 outputs.

3.159.30.1. Executing ABC.

3.159.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by 1'0, asynchronously reset by !\rst_ni
Extracted 9 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.159.31.1. Executing ABC.

3.159.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21466$auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 9 outputs.

3.159.32.1. Executing ABC.

3.159.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21403$auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 55 gates and 82 wires to a netlist network with 27 inputs and 36 outputs.

3.159.33.1. Executing ABC.

3.159.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21796$auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 71 gates and 110 wires to a netlist network with 39 inputs and 46 outputs.

3.159.34.1. Executing ABC.

3.159.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22183$auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 58 gates and 95 wires to a netlist network with 37 inputs and 33 outputs.

3.159.35.1. Executing ABC.

3.159.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22328$auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 56 gates and 91 wires to a netlist network with 35 inputs and 31 outputs.

3.159.36.1. Executing ABC.

3.159.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22707$auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 57 gates and 93 wires to a netlist network with 36 inputs and 32 outputs.

3.159.37.1. Executing ABC.

3.159.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22850$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 64 gates and 106 wires to a netlist network with 42 inputs and 38 outputs.

3.159.38.1. Executing ABC.

3.159.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$20418$auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_aon_ni
Extracted 127 gates and 128 wires to a netlist network with 0 inputs and 25 outputs.

3.159.39.1. Executing ABC.

3.159.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20546$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 8 outputs.

3.159.40.1. Executing ABC.

3.159.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21374$auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 25 gates and 40 wires to a netlist network with 15 inputs and 14 outputs.

3.159.41.1. Executing ABC.

3.159.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22031$auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 6 outputs.

3.159.42.1. Executing ABC.

3.159.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22040$auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 59 gates and 97 wires to a netlist network with 38 inputs and 34 outputs.

3.159.43.1. Executing ABC.

3.159.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21956$auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 63 gates and 105 wires to a netlist network with 42 inputs and 38 outputs.

3.159.44.1. Executing ABC.

3.159.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22243$auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 65 gates and 109 wires to a netlist network with 44 inputs and 40 outputs.

3.159.45.1. Executing ABC.

3.159.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22560$auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 62 gates and 103 wires to a netlist network with 41 inputs and 37 outputs.

3.159.46.1. Executing ABC.

3.159.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22619$auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 64 gates and 107 wires to a netlist network with 43 inputs and 39 outputs.

3.159.47.1. Executing ABC.

3.159.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 98 gates and 138 wires to a netlist network with 40 inputs and 65 outputs.

3.159.48.1. Executing ABC.

3.159.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20593$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 756 gates and 1087 wires to a netlist network with 331 inputs and 59 outputs.

3.159.49.1. Executing ABC.

3.159.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22899$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 10 outputs.

3.159.50.1. Executing ABC.

3.159.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 325 gates and 377 wires to a netlist network with 52 inputs and 150 outputs.

3.159.51.1. Executing ABC.

3.159.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23721$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 227 gates and 318 wires to a netlist network with 90 inputs and 3 outputs.

3.159.52.1. Executing ABC.

3.159.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22766$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 58 gates and 95 wires to a netlist network with 37 inputs and 33 outputs.

3.159.53.1. Executing ABC.

3.159.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$20286$auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_aon_ni
Extracted 18 gates and 19 wires to a netlist network with 0 inputs and 5 outputs.

3.159.54.1. Executing ABC.

3.159.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20305$auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 75 gates and 107 wires to a netlist network with 32 inputs and 50 outputs.

3.159.55.1. Executing ABC.

3.159.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by 1'0, asynchronously reset by !\rst_aon_ni
Extracted 40 gates and 50 wires to a netlist network with 10 inputs and 40 outputs.

3.159.56.1. Executing ABC.

3.159.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 120 gates and 144 wires to a netlist network with 24 inputs and 96 outputs.

3.159.57.1. Executing ABC.

3.159.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23950$auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 11 outputs.

3.159.58.1. Executing ABC.

yosys> abc -dff -keepff

3.160. Executing ABC pass (technology mapping using ABC).

3.160.1. Summary of detected clock domains:
  10 cells in clk=\clk_i, en=$abc$23960$abc$22609$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23972$abc$22841$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23982$abc$21565$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$23993$abc$20558$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23999$abc$21355$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$26664$abc$23721$u_reg.intg_err, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24009$abc$22551$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24020$abc$22698$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24031$abc$21680$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$24042$abc$21540$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$25043$abc$20546$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$26278$abc$22899$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24079$abc$21477$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  28 cells in clk=\clk_i, en=$abc$24050$abc$20564$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$25082$abc$22031$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24089$abc$22232$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24101$abc$22463$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24112$abc$22089$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24123$abc$22174$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24133$abc$22319$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  74 cells in clk=\clk_i, en=$abc$26961$abc$20305$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24143$abc$22756$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  25 cells in clk=\clk_i, en=$abc$25056$abc$21374$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$24155$abc$22377$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24167$abc$21947$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24178$abc$21863$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$abc$26890$abc$22766$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  66 cells in clk=\clk_i, en=$abc$25283$abc$22560$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  36 cells in clk=\clk_i, en=$abc$24188$abc$23218$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$24246$abc$22472$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$25153$abc$21956$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$24306$abc$22388$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$abc$25091$abc$22040$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  66 cells in clk=\clk_i, en=$abc$24379$abc$22099$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24516$abc$21554$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  755 cells in clk=\clk_i, en=$abc$25512$abc$20593$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24553$abc$21507$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24563$abc$21529$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=1'0, arst=!\rst_ni, srst={ }
  120 cells in clk=\clk_aon_i, en=1'0, arst=!\rst_aon_ni, srst={ }
  27 cells in clk=\clk_i, en=$abc$24527$abc$21486$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en=$abc$25413$abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24585$abc$21466$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  53 cells in clk=\clk_i, en=$abc$24597$abc$21403$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$25348$abc$22619$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$24653$abc$21796$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$24905$abc$22850$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$24725$abc$22183$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  70 cells in clk=\clk_i, en=$abc$25217$abc$22243$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  313 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  52 cells in clk=\clk_i, en=$abc$24786$abc$22328$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$24845$abc$22707$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$24443$abc$21873$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  120 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$27311$abc$23950$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }

3.160.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23960$abc$22609$auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.160.2.1. Executing ABC.

3.160.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23972$abc$22841$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 9 outputs.

3.160.3.1. Executing ABC.

3.160.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23982$abc$21565$auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.160.4.1. Executing ABC.

3.160.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23993$abc$20558$auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.160.5.1. Executing ABC.

3.160.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23999$abc$21355$auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.160.6.1. Executing ABC.

3.160.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26664$abc$23721$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 3 outputs.

3.160.7.1. Executing ABC.

3.160.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24009$abc$22551$auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.160.8.1. Executing ABC.

3.160.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24020$abc$22698$auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.160.9.1. Executing ABC.

3.160.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24031$abc$21680$auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.160.10.1. Executing ABC.

3.160.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24042$abc$21540$auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.160.11.1. Executing ABC.

3.160.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25043$abc$20546$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 7 outputs.

3.160.12.1. Executing ABC.

3.160.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26278$abc$22899$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 9 outputs.

3.160.13.1. Executing ABC.

3.160.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24079$abc$21477$auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.160.14.1. Executing ABC.

3.160.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24050$abc$20564$auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 28 gates and 41 wires to a netlist network with 13 inputs and 17 outputs.

3.160.15.1. Executing ABC.

3.160.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25082$abc$22031$auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 10 outputs.

3.160.16.1. Executing ABC.

3.160.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24089$abc$22232$auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 9 outputs.

3.160.17.1. Executing ABC.

3.160.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24101$abc$22463$auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.160.18.1. Executing ABC.

3.160.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24112$abc$22089$auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 9 outputs.

3.160.19.1. Executing ABC.

3.160.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24123$abc$22174$auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.160.20.1. Executing ABC.

3.160.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24133$abc$22319$auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.160.21.1. Executing ABC.

3.160.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26961$abc$20305$auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 74 gates and 105 wires to a netlist network with 31 inputs and 49 outputs.

3.160.22.1. Executing ABC.

3.160.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24143$abc$22756$auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.160.23.1. Executing ABC.

3.160.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25056$abc$21374$auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 25 gates and 42 wires to a netlist network with 17 inputs and 14 outputs.

3.160.24.1. Executing ABC.

3.160.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24155$abc$22377$auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 10 outputs.

3.160.25.1. Executing ABC.

3.160.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24167$abc$21947$auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.160.26.1. Executing ABC.

3.160.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24178$abc$21863$auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.160.27.1. Executing ABC.

3.160.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26890$abc$22766$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 65 gates and 108 wires to a netlist network with 43 inputs and 40 outputs.

3.160.28.1. Executing ABC.

3.160.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25283$abc$22560$auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 66 gates and 111 wires to a netlist network with 45 inputs and 40 outputs.

3.160.29.1. Executing ABC.

3.160.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24188$abc$23218$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 36 gates and 70 wires to a netlist network with 34 inputs and 36 outputs.

3.160.30.1. Executing ABC.

3.160.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24246$abc$22472$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 57 gates and 92 wires to a netlist network with 35 inputs and 32 outputs.

3.160.31.1. Executing ABC.

3.160.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25153$abc$21956$auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 58 gates and 94 wires to a netlist network with 36 inputs and 33 outputs.

3.160.32.1. Executing ABC.

3.160.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24306$abc$22388$auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 73 gates and 124 wires to a netlist network with 51 inputs and 47 outputs.

3.160.33.1. Executing ABC.

3.160.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25091$abc$22040$auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 65 gates and 109 wires to a netlist network with 44 inputs and 39 outputs.

3.160.34.1. Executing ABC.

3.160.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24379$abc$22099$auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 66 gates and 110 wires to a netlist network with 44 inputs and 41 outputs.

3.160.35.1. Executing ABC.

3.160.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24516$abc$21554$auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 5 outputs.

3.160.36.1. Executing ABC.

3.160.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25512$abc$20593$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 755 gates and 1086 wires to a netlist network with 331 inputs and 59 outputs.

3.160.37.1. Executing ABC.

3.160.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24553$abc$21507$auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.160.38.1. Executing ABC.

3.160.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24563$abc$21529$auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.160.39.1. Executing ABC.

3.160.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by 1'0, asynchronously reset by !\rst_ni
Extracted 8 gates and 15 wires to a netlist network with 6 inputs and 7 outputs.

3.160.40.1. Executing ABC.

3.160.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by 1'0, asynchronously reset by !\rst_aon_ni
Extracted 120 gates and 130 wires to a netlist network with 10 inputs and 68 outputs.

3.160.41.1. Executing ABC.

3.160.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24527$abc$21486$auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 27 gates and 47 wires to a netlist network with 20 inputs and 16 outputs.

3.160.42.1. Executing ABC.

3.160.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25413$abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 98 gates and 138 wires to a netlist network with 40 inputs and 65 outputs.

3.160.43.1. Executing ABC.

3.160.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24585$abc$21466$auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.160.44.1. Executing ABC.

3.160.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24597$abc$21403$auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 53 gates and 78 wires to a netlist network with 25 inputs and 34 outputs.

3.160.45.1. Executing ABC.

3.160.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25348$abc$22619$auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 61 gates and 101 wires to a netlist network with 40 inputs and 35 outputs.

3.160.46.1. Executing ABC.

3.160.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24653$abc$21796$auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 73 gates and 112 wires to a netlist network with 39 inputs and 48 outputs.

3.160.47.1. Executing ABC.

3.160.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24905$abc$22850$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 57 gates and 94 wires to a netlist network with 37 inputs and 32 outputs.

3.160.48.1. Executing ABC.

3.160.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24725$abc$22183$auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 57 gates and 93 wires to a netlist network with 36 inputs and 31 outputs.

3.160.49.1. Executing ABC.

3.160.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25217$abc$22243$auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 70 gates and 118 wires to a netlist network with 48 inputs and 45 outputs.

3.160.50.1. Executing ABC.

3.160.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 313 gates and 365 wires to a netlist network with 52 inputs and 150 outputs.

3.160.51.1. Executing ABC.

3.160.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24786$abc$22328$auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 52 gates and 84 wires to a netlist network with 32 inputs and 27 outputs.

3.160.52.1. Executing ABC.

3.160.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24845$abc$22707$auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 62 gates and 102 wires to a netlist network with 40 inputs and 37 outputs.

3.160.53.1. Executing ABC.

3.160.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24443$abc$21873$auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 73 gates and 124 wires to a netlist network with 51 inputs and 47 outputs.

3.160.54.1. Executing ABC.

3.160.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 120 gates and 144 wires to a netlist network with 24 inputs and 96 outputs.

3.160.55.1. Executing ABC.

3.160.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27311$abc$23950$auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 11 outputs.

3.160.56.1. Executing ABC.

yosys> abc -dff -keepff

3.161. Executing ABC pass (technology mapping using ABC).

3.161.1. Summary of detected clock domains:
  10 cells in clk=\clk_i, en=$abc$27327$abc$23960$abc$22609$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27338$abc$23972$abc$22841$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27350$abc$23982$abc$21565$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$27361$abc$23993$abc$20558$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27367$abc$23999$abc$21355$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$27378$abc$26664$abc$23721$u_reg.intg_err, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27604$abc$24009$abc$22551$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27616$abc$24020$abc$22698$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27627$abc$24031$abc$21680$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$27638$abc$24042$abc$21540$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27646$abc$25043$abc$20546$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27658$abc$26278$abc$22899$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27670$abc$24079$abc$21477$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27710$abc$25082$abc$22031$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27723$abc$24089$abc$22232$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27735$abc$24101$abc$22463$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27746$abc$24112$abc$22089$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27758$abc$24123$abc$22174$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27768$abc$24133$abc$22319$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27853$abc$24143$abc$22756$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  26 cells in clk=\clk_i, en=$abc$27863$abc$25056$abc$21374$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$27889$abc$24155$abc$22377$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27902$abc$24167$abc$21947$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  74 cells in clk=\clk_i, en=$abc$27778$abc$26961$abc$20305$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27912$abc$24178$abc$21863$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$30438$abc$24443$abc$21873$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$27922$abc$26890$abc$22766$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  67 cells in clk=\clk_i, en=$abc$29822$abc$24725$abc$22183$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$27988$abc$25283$abc$22560$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  35 cells in clk=\clk_i, en=$abc$28054$abc$24188$abc$23218$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$29764$abc$24905$abc$22850$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$28111$abc$24246$abc$22472$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$abc$29628$abc$25348$abc$22619$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$28169$abc$25153$abc$21956$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  28 cells in clk=\clk_i, en=$abc$27681$abc$24050$abc$20564$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$28228$abc$24306$abc$22388$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  67 cells in clk=\clk_i, en=$abc$28301$abc$25091$abc$22040$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  52 cells in clk=\clk_i, en=$abc$29574$abc$24597$abc$21403$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$29879$abc$25217$abc$22243$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$28366$abc$24379$abc$22099$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$28433$abc$24516$abc$21554$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  773 cells in clk=\clk_i, en=$abc$28444$abc$25512$abc$20593$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$29228$abc$24553$abc$21507$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$29238$abc$24563$abc$21529$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  312 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=1'0, arst=!\rst_ni, srst={ }
  90 cells in clk=\clk_aon_i, en=1'0, arst=!\rst_aon_ni, srst={ }
  28 cells in clk=\clk_i, en=$abc$29437$abc$24527$abc$21486$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$29690$abc$24653$abc$21796$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  99 cells in clk=\clk_i, en=$abc$29465$abc$25413$abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$abc$30322$abc$24786$abc$22328$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$30375$abc$24845$abc$22707$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$29564$abc$24585$abc$21466$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  120 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$30704$abc$27311$abc$23950$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }

3.161.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27327$abc$23960$abc$22609$auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.161.2.1. Executing ABC.

3.161.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27338$abc$23972$abc$22841$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.161.3.1. Executing ABC.

3.161.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27350$abc$23982$abc$21565$auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 9 outputs.

3.161.4.1. Executing ABC.

3.161.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27361$abc$23993$abc$20558$auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.161.5.1. Executing ABC.

3.161.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27367$abc$23999$abc$21355$auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.161.6.1. Executing ABC.

3.161.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27378$abc$26664$abc$23721$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 3 outputs.

3.161.7.1. Executing ABC.

3.161.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27604$abc$24009$abc$22551$auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.161.8.1. Executing ABC.

3.161.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27616$abc$24020$abc$22698$auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.161.9.1. Executing ABC.

3.161.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27627$abc$24031$abc$21680$auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.161.10.1. Executing ABC.

3.161.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27638$abc$24042$abc$21540$auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.161.11.1. Executing ABC.

3.161.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27646$abc$25043$abc$20546$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 7 outputs.

3.161.12.1. Executing ABC.

3.161.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27658$abc$26278$abc$22899$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 9 outputs.

3.161.13.1. Executing ABC.

3.161.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27670$abc$24079$abc$21477$auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.161.14.1. Executing ABC.

3.161.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27710$abc$25082$abc$22031$auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 9 outputs.

3.161.15.1. Executing ABC.

3.161.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27723$abc$24089$abc$22232$auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 9 outputs.

3.161.16.1. Executing ABC.

3.161.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27735$abc$24101$abc$22463$auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.161.17.1. Executing ABC.

3.161.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27746$abc$24112$abc$22089$auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 9 outputs.

3.161.18.1. Executing ABC.

3.161.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27758$abc$24123$abc$22174$auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.161.19.1. Executing ABC.

3.161.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27768$abc$24133$abc$22319$auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.161.20.1. Executing ABC.

3.161.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27853$abc$24143$abc$22756$auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.161.21.1. Executing ABC.

3.161.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27863$abc$25056$abc$21374$auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 26 gates and 42 wires to a netlist network with 16 inputs and 15 outputs.

3.161.22.1. Executing ABC.

3.161.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27889$abc$24155$abc$22377$auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 10 outputs.

3.161.23.1. Executing ABC.

3.161.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27902$abc$24167$abc$21947$auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.161.24.1. Executing ABC.

3.161.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27778$abc$26961$abc$20305$auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 74 gates and 105 wires to a netlist network with 31 inputs and 49 outputs.

3.161.25.1. Executing ABC.

3.161.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27912$abc$24178$abc$21863$auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.161.26.1. Executing ABC.

3.161.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30438$abc$24443$abc$21873$auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 47 outputs.

3.161.27.1. Executing ABC.

3.161.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27922$abc$26890$abc$22766$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 64 gates and 108 wires to a netlist network with 44 inputs and 39 outputs.

3.161.28.1. Executing ABC.

3.161.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29822$abc$24725$abc$22183$auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 67 gates and 113 wires to a netlist network with 46 inputs and 42 outputs.

3.161.29.1. Executing ABC.

3.161.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27988$abc$25283$abc$22560$auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 64 gates and 106 wires to a netlist network with 42 inputs and 39 outputs.

3.161.30.1. Executing ABC.

3.161.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28054$abc$24188$abc$23218$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 35 gates and 59 wires to a netlist network with 24 inputs and 35 outputs.

3.161.31.1. Executing ABC.

3.161.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29764$abc$24905$abc$22850$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 58 gates and 94 wires to a netlist network with 36 inputs and 33 outputs.

3.161.32.1. Executing ABC.

3.161.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28111$abc$24246$abc$22472$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 58 gates and 95 wires to a netlist network with 37 inputs and 33 outputs.

3.161.33.1. Executing ABC.

3.161.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29628$abc$25348$abc$22619$auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 65 gates and 107 wires to a netlist network with 42 inputs and 39 outputs.

3.161.34.1. Executing ABC.

3.161.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28169$abc$25153$abc$21956$auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 55 gates and 89 wires to a netlist network with 34 inputs and 30 outputs.

3.161.35.1. Executing ABC.

3.161.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27681$abc$24050$abc$20564$auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 28 gates and 41 wires to a netlist network with 13 inputs and 17 outputs.

3.161.36.1. Executing ABC.

3.161.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28228$abc$24306$abc$22388$auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 47 outputs.

3.161.37.1. Executing ABC.

3.161.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28301$abc$25091$abc$22040$auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 67 gates and 112 wires to a netlist network with 45 inputs and 42 outputs.

3.161.38.1. Executing ABC.

3.161.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29574$abc$24597$abc$21403$auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 52 gates and 76 wires to a netlist network with 24 inputs and 33 outputs.

3.161.39.1. Executing ABC.

3.161.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29879$abc$25217$abc$22243$auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 57 gates and 92 wires to a netlist network with 35 inputs and 32 outputs.

3.161.40.1. Executing ABC.

3.161.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28366$abc$24379$abc$22099$auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 55 gates and 88 wires to a netlist network with 33 inputs and 30 outputs.

3.161.41.1. Executing ABC.

3.161.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28433$abc$24516$abc$21554$auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 9 gates and 16 wires to a netlist network with 7 inputs and 4 outputs.

3.161.42.1. Executing ABC.

3.161.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28444$abc$25512$abc$20593$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 773 gates and 1104 wires to a netlist network with 331 inputs and 59 outputs.

3.161.43.1. Executing ABC.

3.161.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29228$abc$24553$abc$21507$auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.161.44.1. Executing ABC.

3.161.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29238$abc$24563$abc$21529$auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.161.45.1. Executing ABC.

3.161.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 312 gates and 364 wires to a netlist network with 52 inputs and 150 outputs.

3.161.46.1. Executing ABC.

3.161.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by 1'0, asynchronously reset by !\rst_ni
Extracted 8 gates and 15 wires to a netlist network with 6 inputs and 7 outputs.

3.161.47.1. Executing ABC.

3.161.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by 1'0, asynchronously reset by !\rst_aon_ni
Extracted 90 gates and 100 wires to a netlist network with 10 inputs and 44 outputs.

3.161.48.1. Executing ABC.

3.161.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29437$abc$24527$abc$21486$auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 28 gates and 49 wires to a netlist network with 21 inputs and 17 outputs.

3.161.49.1. Executing ABC.

3.161.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29690$abc$24653$abc$21796$auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 72 gates and 111 wires to a netlist network with 39 inputs and 47 outputs.

3.161.50.1. Executing ABC.

3.161.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29465$abc$25413$abc$21576$auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 99 gates and 140 wires to a netlist network with 41 inputs and 66 outputs.

3.161.51.1. Executing ABC.

3.161.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30322$abc$24786$abc$22328$auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 65 gates and 110 wires to a netlist network with 45 inputs and 40 outputs.

3.161.52.1. Executing ABC.

3.161.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30375$abc$24845$abc$22707$auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 58 gates and 95 wires to a netlist network with 37 inputs and 33 outputs.

3.161.53.1. Executing ABC.

3.161.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29564$abc$24585$abc$21466$auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 7 outputs.

3.161.54.1. Executing ABC.

3.161.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 120 gates and 144 wires to a netlist network with 24 inputs and 96 outputs.

3.161.55.1. Executing ABC.

3.161.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30704$abc$27311$abc$23950$auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 16 gates and 25 wires to a netlist network with 9 inputs and 11 outputs.

3.161.56.1. Executing ABC.

yosys> opt_ffinv

3.162. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~28 debug messages>

yosys> opt_merge -nomux

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

yosys> opt_muxtree

3.165. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.166. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.167. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.168. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.169. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33413 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33375 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33401 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33400 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33374 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33363$auto$blifparse.cc:362:parse_blif$33364 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33407 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33417 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33411 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33405 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33409 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33383 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33384 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33386 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33387 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33389 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33391 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33393 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33395 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33414 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33402 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33394 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33392 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33390 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33388 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33385 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33382 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33397 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33404 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33416 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33403 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33406 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33412 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33410 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33398 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33399 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33396 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33381 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33415 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33408 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33380 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33379 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33378 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33377 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$33373$auto$blifparse.cc:362:parse_blif$33376 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33376 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33377 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33378 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33379 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33380 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33408 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33415 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33381 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33396 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33399 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33398 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33410 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33412 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33406 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33403 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33416 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33404 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33397 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33382 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33385 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33388 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33390 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33392 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33394 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33402 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33414 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33395 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33393 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33391 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33389 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33387 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33386 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33384 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33383 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33409 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33405 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33411 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33417 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33407 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33363$auto$blifparse.cc:362:parse_blif$33364 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33374 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33400 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33401 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33375 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$33373$auto$blifparse.cc:362:parse_blif$33413 ($_DLATCH_N_) from module adc_ctrl.

yosys> opt_clean

3.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 48 unused cells and 16130 unused wires.
<suppressed ~288 debug messages>

yosys> opt_expr

3.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.172. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.173. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.174. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_share

3.175. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.176. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$31564$auto$blifparse.cc:362:parse_blif$31565 ($_DFFE_PN0P_) from module adc_ctrl.

yosys> opt_clean

3.177. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.179. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.180. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.182. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.183. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.184. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.185. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 3

yosys> bmuxmap

3.186. Executing BMUXMAP pass.

yosys> demuxmap

3.187. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_hoBEcT/abc_tmp_1.scr

3.188. Executing ABC pass (technology mapping using ABC).

3.188.1. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 2196 gates and 2895 wires to a netlist network with 698 inputs and 636 outputs.

3.188.1.1. Executing ABC.
DE:   #PIs = 698  #Luts =  1063  Max Lvl =   6  Avg Lvl =   4.87  [   0.12 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 698  #Luts =   966  Max Lvl =  10  Avg Lvl =   8.72  [   7.23 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 698  #Luts =   953  Max Lvl =  10  Avg Lvl =   8.76  [   1.37 sec. at Pass 2]{map}[2]
DE:   #PIs = 698  #Luts =   937  Max Lvl =  11  Avg Lvl =   9.61  [   2.86 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 698  #Luts =   937  Max Lvl =  11  Avg Lvl =   9.61  [   1.84 sec. at Pass 4]{map}[12]
DE:   #PIs = 698  #Luts =   937  Max Lvl =  11  Avg Lvl =   9.61  [   3.92 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 698  #Luts =   934  Max Lvl =  12  Avg Lvl =  10.48  [   1.99 sec. at Pass 6]{map}[16]
DE:   #PIs = 698  #Luts =   929  Max Lvl =  12  Avg Lvl =  10.47  [   4.01 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 698  #Luts =   929  Max Lvl =  12  Avg Lvl =  10.47  [   2.47 sec. at Pass 8]{map}[16]
DE:   #PIs = 698  #Luts =   929  Max Lvl =  12  Avg Lvl =  10.47  [   3.55 sec. at Pass 9]{postMap}[16]
DE:   #PIs = 698  #Luts =   929  Max Lvl =  12  Avg Lvl =  10.47  [   1.44 sec. at Pass 10]{map}[16]
DE:   #PIs = 698  #Luts =   927  Max Lvl =  12  Avg Lvl =  10.46  [   0.77 sec. at Pass 11]{finalMap}[16]

yosys> opt_expr

3.189. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.190. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.191. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.192. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.193. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.194. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.195. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.196. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 2915 unused wires.
<suppressed ~128 debug messages>

yosys> opt_expr

3.197. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.198. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.199. Printing statistics.

=== adc_ctrl ===

   Number of wires:               6862
   Number of wire bits:          17497
   Number of public wires:        3607
   Number of public wire bits:   14242
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1636
     $_DFFE_PN0P_                  494
     $_DFF_PN0_                    215
     $_DFF_PN1_                      1
     $lut                          926


yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFFE_??_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 -cell $_DLATCH_?_ 0 -cell $_DLATCH_???_ 0

3.200. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.201. Printing statistics.

=== adc_ctrl ===

   Number of wires:               6862
   Number of wire bits:          17497
   Number of public wires:        3607
   Number of public wire bits:   14242
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1636
     $_DFFE_PN0P_                  494
     $_DFF_PN0_                    215
     $_DFF_PN1_                      1
     $lut                          926


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/ffs_map.v

3.202. Executing TECHMAP pass (map to technology primitives).

3.202.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.202.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.202.3. Continuing TECHMAP pass.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2483 debug messages>

yosys> opt_expr -mux_undef

3.203. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~11894 debug messages>

yosys> simplemap

3.204. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.205. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge

3.206. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~12270 debug messages>
Removed a total of 4090 cells.

yosys> opt_dff -nodffe -nosdff

3.207. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.208. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 5849 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.209. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~297 debug messages>

yosys> opt_merge -nomux

3.210. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.211. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.212. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.213. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.214. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.215. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.216. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 30 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.217. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_hoBEcT/abc_tmp_2.scr

3.218. Executing ABC pass (technology mapping using ABC).

3.218.1. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 2629 gates and 3331 wires to a netlist network with 700 inputs and 638 outputs.

3.218.1.1. Executing ABC.
DE:   #PIs = 700  #Luts =   923  Max Lvl =   7  Avg Lvl =   6.30  [   0.17 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 700  #Luts =   920  Max Lvl =   8  Avg Lvl =   7.24  [   6.44 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 700  #Luts =   920  Max Lvl =   8  Avg Lvl =   7.24  [   1.11 sec. at Pass 2]{map}[2]
DE:   #PIs = 700  #Luts =   920  Max Lvl =   8  Avg Lvl =   7.24  [   2.78 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 700  #Luts =   920  Max Lvl =   8  Avg Lvl =   7.24  [   1.49 sec. at Pass 4]{map}[12]
DE:   #PIs = 700  #Luts =   920  Max Lvl =   8  Avg Lvl =   7.24  [   2.84 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 700  #Luts =   920  Max Lvl =   8  Avg Lvl =   7.24  [   0.65 sec. at Pass 6]{finalMap}[16]

yosys> opt_expr

3.219. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.220. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.221. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.222. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.223. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.224. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.225. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.226. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 2960 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.227. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.228. Executing HIERARCHY pass (managing design hierarchy).

3.228.1. Analyzing design hierarchy..
Top module:  \adc_ctrl

3.228.2. Analyzing design hierarchy..
Top module:  \adc_ctrl
Removed 0 unused modules.

yosys> stat

3.229. Printing statistics.

=== adc_ctrl ===

   Number of wires:               6856
   Number of wire bits:          17491
   Number of public wires:        3607
   Number of public wire bits:   14242
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1630
     $lut                          920
     dffr                          216
     dffre                         494


yosys> opt_clean -purge

3.230. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 3223 unused wires.
<suppressed ~3223 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.231. Executing Verilog backend.
Dumping module `\adc_ctrl'.

Warnings: 124 unique messages, 124 total
End of script. Logfile hash: 607b0f54b9, CPU: user 28.65s system 1.04s, MEM: 85.86 MB peak
Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)
Time spent: 92% 6x abc (294 sec), 2% 26x opt_dff (6 sec), ...
real 131.42
user 294.54
sys 22.50
